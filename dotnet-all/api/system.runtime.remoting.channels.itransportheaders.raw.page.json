{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ITransportHeaders</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Stores a collection of headers used in the channel sinks.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface ITransportHeaders</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<pre><code class=\"lang-cpp\" name=\"ITransportHeaders_Item#1\">#using &lt;System.Runtime.Remoting.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;ITransportHeaders_3_Share.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Channels;\nusing namespace System::Runtime::Remoting::Channels::Tcp;\nref class MyITransportHeadersClass: public ITransportHeaders\n{\nprivate:\n\n   int myInt;\n   array&lt;DictionaryEntry&gt;^myDictionaryEntry;\n\npublic:\n   MyITransportHeadersClass()\n   {\n      myInt = 0;\n      myDictionaryEntry = gcnew array&lt;DictionaryEntry&gt;(10);\n   }\n\n\n   property Object^ Item [Object^]\n   {\n\n      // Implement the &#39;Item&#39; property.\n     virtual Object^ get( Object^ myKey )\n      {\n         if ( myKey != nullptr )\n         {\n            for ( int i = 0; i &lt;= myInt; i++ )\n               if ( myDictionaryEntry[ i ].Key == myKey )\n                              return myDictionaryEntry[ i ].Value;\n         }\n\n         return nullptr;\n      }\n\n      virtual void set( Object^ myKey, Object^ value )\n      {\n         myDictionaryEntry[ myInt ] = DictionaryEntry(myKey,value);\n         myInt++;\n      }\n\n   }\n\n   // Implement the &#39;GetEnumerator&#39; method.\n   virtual IEnumerator^ GetEnumerator()\n   {\n      Hashtable^ myHashtable = gcnew Hashtable;\n      for ( int j = 0; j &lt; myInt; j++ )\n         myHashtable-&gt;Add( myDictionaryEntry[ j ].Key, myDictionaryEntry[ j ].Value );\n      return myHashtable-&gt;GetEnumerator();\n   }\n\n};\n\nint main()\n{\n   try\n   {\n      \n      // Create and register a &#39;TcpChannel&#39; object.\n      TcpChannel^ myTcpChannel = gcnew TcpChannel( 8085 );\n      ChannelServices::RegisterChannel( myTcpChannel, false );\n\t  RemotingConfiguration::RegisterWellKnownServiceType( MyHelloServer::typeid, &quot;SayHello&quot;, WellKnownObjectMode::SingleCall );\n      \n      // Create an instance of &#39;myITransportHeadersObj&#39;.\n      MyITransportHeadersClass^ myITransportHeadersObj = gcnew MyITransportHeadersClass;\n      ITransportHeaders^ myITransportHeaders = dynamic_cast&lt;ITransportHeaders^&gt;(myITransportHeadersObj);\n      \n      // Add items to the header list.\n      myITransportHeaders-&gt;default[ &quot;Header1&quot; ] = &quot;TransportHeader1&quot;;\n      myITransportHeaders-&gt;default[ &quot;Header2&quot; ] = &quot;TransportHeader2&quot;;\n      \n      // Get the &#39;ITranportHeader&#39; item value with key &#39;Header2&#39;.\n      Console::WriteLine( &quot;ITransport Header item value with key &#39;Header2&#39; is :{0}&quot;, myITransportHeaders-&gt;default[ &quot;Header2&quot; ] );\n      IEnumerator^ myEnumerator = myITransportHeaders-&gt;GetEnumerator();\n      Console::WriteLine( &quot;     -KEY-      -VALUE-&quot; );\n      while ( myEnumerator-&gt;MoveNext() )\n      {\n         \n         // Display the &#39;Key&#39; and &#39;Value&#39; of the current element.\n         Object^ myEntry = myEnumerator-&gt;Current;\n         DictionaryEntry myDictionaryEntry =  *dynamic_cast&lt;DictionaryEntry^&gt;(myEntry);\n         Console::WriteLine( &quot;   {0}:   {1}&quot;, myDictionaryEntry.Key, myDictionaryEntry.Value );\n      }\n      Console::WriteLine( &quot;Hit &lt;enter&gt; to exit...&quot; );\n      Console::ReadLine();\n   }\n   catch ( Exception^ ex ) \n   {\n      Console::WriteLine( &quot;The following exception is raised on the server side: {0}&quot;, ex-&gt;Message );\n   }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ITransportHeaders_Item#1\">\nImports System\nImports System.Collections\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Channels\nImports System.Runtime.Remoting.Channels.Tcp\n\nClass MyITransportHeadersClass\n   Implements ITransportHeaders\n   Private myInt As Integer = 0\n   Private myDictionaryEntry(9) As DictionaryEntry\n   &#39; Implement the &#39;Item&#39; property.\n   Property ITransportHeaders(myKey As Object) As Object Implements ITransportHeaders.Item\n      Get\n         If Not (myKey Is Nothing) Then\n            Dim i As Integer\n            For i = 0 To myInt\n               If myDictionaryEntry(i).Key = myKey Then\n                  Return myDictionaryEntry(i).Value\n               End If\n            Next i\n         End If\n         Return 0\n      End Get\n      Set\n         myDictionaryEntry(myInt) = New DictionaryEntry(myKey, value)\n         myInt += 1\n      End Set\n   End Property\n\n   &#39; Implement the &#39;GetEnumerator&#39; method.\n   Function GetEnumerator() As IEnumerator  Implements ITransportHeaders.GetEnumerator\n      Dim myHashtable As New Hashtable()\n      Dim j As Integer\n      For j = 0 To myInt - 1\n         myHashtable.Add(myDictionaryEntry(j).Key, myDictionaryEntry(j).Value)\n      Next j\n      Return myHashtable.GetEnumerator()\n   End Function &#39;ITransportHeaders.GetEnumerator\n\n   Public Shared Sub Main()\n      Try\n         &#39; Create and register a &#39;TcpChannel&#39; object.\n         Dim myTcpChannel As New TcpChannel(8085)\n         ChannelServices.RegisterChannel(myTcpChannel)\n         RemotingConfiguration.RegisterWellKnownServiceType(GetType(MyHelloServer), &quot;SayHello&quot;, _\n                                                         WellKnownObjectMode.SingleCall)\n         &#39; Create an instance of &#39;myITransportHeadersObj&#39;.\n         Dim myITransportHeadersObj As New MyITransportHeadersClass()\n         Dim myITransportHeaders As ITransportHeaders = _\n                                              CType(myITransportHeadersObj, ITransportHeaders)\n         &#39; Add items to the header list.\n         myITransportHeaders(&quot;Header1&quot;) = &quot;TransportHeader1&quot;\n         myITransportHeaders(&quot;Header2&quot;) = &quot;TransportHeader2&quot;\n         &#39; Get the &#39;ITranportHeader&#39; item value with key &#39;Header2&#39;.\n         Console.WriteLine(&quot;ITransport Header item value with key &#39;Header2&#39; is :&quot; + _\n                                                        myITransportHeaders(&quot;Header2&quot;))\n         Dim myEnumerator As IEnumerator = myITransportHeaders.GetEnumerator()\n         Console.WriteLine(&quot;     -KEY-      -VALUE-&quot;)\n         While myEnumerator.MoveNext()\n            &#39; Display the &#39;Key&#39; and &#39;Value&#39; of the current element.\n            Dim myEntry As Object = myEnumerator.Current\n            Dim myDictionaryEntry As DictionaryEntry = CType(myEntry, DictionaryEntry)\n            Console.WriteLine(&quot;   {0}:   {1}&quot;, myDictionaryEntry.Key, myDictionaryEntry.Value)\n         End While\n         Console.WriteLine(&quot;Hit &lt;enter&gt; to exit...&quot;)\n         Console.ReadLine()\n      Catch ex As Exception\n         Console.WriteLine(&quot;The following exception is raised on the server side: &quot; + ex.Message)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;MyITransportHeadersClass\n</code></pre><pre><code class=\"lang-cs\" name=\"ITransportHeaders_Item#1\">\nusing System;\nusing System.Collections;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Tcp;\n\nclass MyITransportHeadersClass : ITransportHeaders\n{\n   int myInt = 0;\n   DictionaryEntry[] myDictionaryEntry = new DictionaryEntry[10];\n   // Implement the &#39;Item&#39; property.\n   object ITransportHeaders.this[object myKey]\n   {\n      get\n      {\n         if(myKey != null)\n         {\n            for(int i = 0; i &lt;= myInt; i++)\n               if(myDictionaryEntry[i].Key == myKey)\n                  return myDictionaryEntry[i].Value;\n         }\n         return 0;\n      }\n      set\n      {\n         myDictionaryEntry[myInt] = new DictionaryEntry(myKey, value);\n         myInt++;\n      }\n   }\n   // Implement the &#39;GetEnumerator&#39; method.\n   IEnumerator ITransportHeaders.GetEnumerator()\n   {\n      Hashtable myHashtable = new Hashtable();\n      for(int j = 0; j &lt; myInt; j++)\n         myHashtable.Add(myDictionaryEntry[j].Key, myDictionaryEntry[j].Value);\n      return myHashtable.GetEnumerator();\n   }\n\n   public static void Main()\n   {\n      try\n      {\n         // Create and register a &#39;TcpChannel&#39; object.\n         TcpChannel myTcpChannel = new TcpChannel(8085);\n         ChannelServices.RegisterChannel(myTcpChannel);\n         RemotingConfiguration.RegisterWellKnownServiceType(typeof(MyHelloServer), &quot;SayHello&quot;,\n            WellKnownObjectMode.SingleCall);\n         // Create an instance of &#39;myITransportHeadersObj&#39;.\n         MyITransportHeadersClass myITransportHeadersObj = new MyITransportHeadersClass();\n         ITransportHeaders myITransportHeaders = (ITransportHeaders)myITransportHeadersObj;\n         // Add items to the header list.\n         myITransportHeaders[&quot;Header1&quot;] = &quot;TransportHeader1&quot;;\n         myITransportHeaders[&quot;Header2&quot;] = &quot;TransportHeader2&quot;;\n         // Get the &#39;ITranportHeader&#39; item value with key &#39;Header2&#39;.\n         Console.WriteLine(&quot;ITransport Header item value with key &#39;Header2&#39; is :&quot;\n            +myITransportHeaders[&quot;Header2&quot;]);\n         IEnumerator myEnumerator = myITransportHeaders.GetEnumerator();\n         Console.WriteLine( &quot;     -KEY-      -VALUE-&quot; );\n         while ( myEnumerator.MoveNext() )\n         {\n            // Display the &#39;Key&#39; and &#39;Value&#39; of the current element.\n            object myEntry = myEnumerator.Current;\n            DictionaryEntry myDictionaryEntry = (DictionaryEntry)myEntry;\n            Console.WriteLine(&quot;   {0}:   {1}&quot;, myDictionaryEntry.Key, myDictionaryEntry.Value);\n         }\n         Console.WriteLine(&quot;Hit &lt;enter&gt; to exit...&quot;);\n         Console.ReadLine();\n      }\n      catch(Exception ex)\n      {\n         Console.WriteLine(&quot;The following exception is raised on the server side: &quot; +ex.Message);\n      }\n   }\n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Channels_ITransportHeaders_Item_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Channels_ITransportHeaders_Item_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a transport header associated with the given key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object this[object key] { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key the requested transport header is associated with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A transport header associated with the given key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">set: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If a stored header is set to <code>null</code>, the key-value pair is removed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Channels_ITransportHeaders_GetEnumerator_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Channels_ITransportHeaders_GetEnumerator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEnumerator()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> that iterates over all entries in the <a class=\"xref\" href=\"system.runtime.remoting.channels.itransportheaders\" data-linktype=\"relative-path\">ITransportHeaders</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> that iterates over all entries in the <a class=\"xref\" href=\"system.runtime.remoting.channels.itransportheaders\" data-linktype=\"relative-path\">ITransportHeaders</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitycriticalattribute\" title=\"System.Security.SecurityCriticalAttribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Channels.ITransportHeaders.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ITransportHeaders\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ITransportHeaders.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ITransportHeaders.Item\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"a8dc0225-9e07-8bc8-eb12-48db808363de\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Stores a collection of headers used in the channel sinks.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.remoting.channels/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Channels.ITransportHeaders\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Channels.ITransportHeaders.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Remoting.Channels.ITransportHeaders","System.Runtime.Remoting.Channels.ITransportHeaders.GetEnumerator","System.Runtime.Remoting.Channels.ITransportHeaders.Item"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Channels.ITransportHeaders","System::Runtime::Remoting::Channels::ITransportHeaders","System.Runtime.Remoting.Channels.ITransportHeaders.GetEnumerator","System::Runtime::Remoting::Channels::ITransportHeaders::GetEnumerator","System.Runtime.Remoting.Channels.ITransportHeaders.Item","System::Runtime::Remoting::Channels::ITransportHeaders::Item"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"a8dc0225-9e07-8bc8-eb12-48db808363de","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.Remoting.Channels/ITransportHeaders.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ITransportHeaders interface | Microsoft Docs","_op_ogTitle":"ITransportHeaders interface","description":"Stores a collection of headers used in the channel sinks.\n","toc_asset_id":"api/_splitted/System.Runtime.Remoting.Channels/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Channels/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Channels.ITransportHeaders","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.channels.itransportheaders","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.channels.itransportheaders","fileRelativePath":"api/System.Runtime.Remoting.Channels.ITransportHeaders.html"},"themesRelativePathToOutputRoot":"_themes/"}