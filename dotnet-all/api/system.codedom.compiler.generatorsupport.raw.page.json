{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GeneratorSupport</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines identifiers used to determine whether a code generator supports certain types of code elements.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\npublic enum GeneratorSupport</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">GeneratorSupport</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.flagsattribute\" title=\"System.FlagsAttribute\" data-linktype=\"relative-path\">FlagsAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example illustrates using <a class=\"xref\" href=\"system.codedom.compiler.compilerparameters\" data-linktype=\"relative-path\">CompilerParameters</a> to specify various compiler settings and options.  </p>\n<pre><code class=\"lang-cpp\" name=\"CompilerParametersExample#2\">static bool CompileCode( CodeDomProvider^ provider,\n   String^ sourceFile,\n   String^ exeFile )\n{\n\n   CompilerParameters^ cp = gcnew CompilerParameters;\n   if ( !cp)  \n   {\n      return false;\n   }\n\n   // Generate an executable instead of \n   // a class library.\n   cp-&gt;GenerateExecutable = true;\n   \n   // Set the assembly file name to generate.\n   cp-&gt;OutputAssembly = exeFile;\n   \n   // Generate debug information.\n   cp-&gt;IncludeDebugInformation = true;\n   \n   // Add an assembly reference.\n   cp-&gt;ReferencedAssemblies-&gt;Add( &quot;System.dll&quot; );\n   \n   // Save the assembly as a physical file.\n   cp-&gt;GenerateInMemory = false;\n   \n   // Set the level at which the compiler \n   // should start displaying warnings.\n   cp-&gt;WarningLevel = 3;\n   \n   // Set whether to treat all warnings as errors.\n   cp-&gt;TreatWarningsAsErrors = false;\n   \n   // Set compiler argument to optimize output.\n   cp-&gt;CompilerOptions = &quot;/optimize&quot;;\n   \n   // Set a temporary files collection.\n   // The TempFileCollection stores the temporary files\n   // generated during a build in the current directory,\n   // and does not delete them after compilation.\n   cp-&gt;TempFiles = gcnew TempFileCollection( &quot;.&quot;,true );\n\n   if ( provider-&gt;Supports( GeneratorSupport::EntryPointMethod ) )\n   {\n      // Specify the class that contains \n      // the main method of the executable.\n      cp-&gt;MainClass = &quot;Samples.Class1&quot;;\n   }\n\n   if ( Directory::Exists( &quot;Resources&quot; ) )\n   {\n      if ( provider-&gt;Supports( GeneratorSupport::Resources ) )\n      {\n         // Set the embedded resource file of the assembly.\n         // This is useful for culture-neutral resources,\n         // or default (fallback) resources.\n         cp-&gt;EmbeddedResources-&gt;Add( &quot;Resources\\\\Default.resources&quot; );\n\n         // Set the linked resource reference files of the assembly.\n         // These resources are included in separate assembly files,\n         // typically localized for a specific language and culture.\n         cp-&gt;LinkedResources-&gt;Add( &quot;Resources\\\\nb-no.resources&quot; );\n      }\n   }\n\n   // Invoke compilation.\n   CompilerResults^ cr = provider-&gt;CompileAssemblyFromFile( cp, sourceFile );\n\n   if ( cr-&gt;Errors-&gt;Count &gt; 0 )\n   {\n      // Display compilation errors.\n      Console::WriteLine( &quot;Errors building {0} into {1}&quot;,\n         sourceFile, cr-&gt;PathToAssembly );\n      for each ( CompilerError^ ce in cr-&gt;Errors )\n      {\n         Console::WriteLine( &quot;  {0}&quot;, ce-&gt;ToString() );\n         Console::WriteLine();\n      }\n   }\n   else\n   {\n      Console::WriteLine( &quot;Source {0} built into {1} successfully.&quot;,\n         sourceFile, cr-&gt;PathToAssembly );\n   }\n\n   // Return the results of compilation.\n   if ( cr-&gt;Errors-&gt;Count &gt; 0 )\n   {\n      return false;\n   }\n   else\n   {\n      return true;\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"CompilerParametersExample#2\">public static bool CompileCode(CodeDomProvider provider, \n    String sourceFile, \n    String exeFile)\n{\n\n    CompilerParameters cp = new CompilerParameters();\n\n    // Generate an executable instead of \n    // a class library.\n    cp.GenerateExecutable = true;\n\n    // Set the assembly file name to generate.\n    cp.OutputAssembly = exeFile;\n\n    // Generate debug information.\n    cp.IncludeDebugInformation = true;\n\n    // Add an assembly reference.\n    cp.ReferencedAssemblies.Add( &quot;System.dll&quot; );\n\n    // Save the assembly as a physical file.\n    cp.GenerateInMemory = false;\n\n    // Set the level at which the compiler \n    // should start displaying warnings.\n    cp.WarningLevel = 3;\n\n    // Set whether to treat all warnings as errors.\n    cp.TreatWarningsAsErrors = false;\n    \n    // Set compiler argument to optimize output.\n    cp.CompilerOptions = &quot;/optimize&quot;;\n\n    // Set a temporary files collection.\n    // The TempFileCollection stores the temporary files\n    // generated during a build in the current directory,\n    // and does not delete them after compilation.\n    cp.TempFiles = new TempFileCollection(&quot;.&quot;, true);\n\n    if (provider.Supports(GeneratorSupport.EntryPointMethod))\n    {\n        // Specify the class that contains \n        // the main method of the executable.\n        cp.MainClass = &quot;Samples.Class1&quot;;\n    }\n\n    if (Directory.Exists(&quot;Resources&quot;))\n    {\n        if (provider.Supports(GeneratorSupport.Resources))\n        {\n            // Set the embedded resource file of the assembly.\n            // This is useful for culture-neutral resources,\n            // or default (fallback) resources.\n            cp.EmbeddedResources.Add(&quot;Resources\\\\Default.resources&quot;);\n\n            // Set the linked resource reference files of the assembly.\n            // These resources are included in separate assembly files,\n            // typically localized for a specific language and culture.\n            cp.LinkedResources.Add(&quot;Resources\\\\nb-no.resources&quot;);\n        }\n    }\n\n    // Invoke compilation.\n    CompilerResults cr = provider.CompileAssemblyFromFile(cp, sourceFile);\n\n    if(cr.Errors.Count &gt; 0)\n    {\n        // Display compilation errors.\n        Console.WriteLine(&quot;Errors building {0} into {1}&quot;,  \n            sourceFile, cr.PathToAssembly);\n        foreach(CompilerError ce in cr.Errors)\n        {\n            Console.WriteLine(&quot;  {0}&quot;, ce.ToString());\n            Console.WriteLine();\n        }\n    }\n    else\n    {\n        Console.WriteLine(&quot;Source {0} built into {1} successfully.&quot;,\n            sourceFile, cr.PathToAssembly);\n        Console.WriteLine(&quot;{0} temporary files created during the compilation.&quot;,\n            cp.TempFiles.Count.ToString());\n\n    }\n  \n    // Return the results of compilation.\n    if (cr.Errors.Count &gt; 0)\n    {\n        return false;\n    }\n    else \n    {\n        return true;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CompilerParametersExample#2\">Public Shared Function CompileCode(ByVal provider As CodeDomProvider, _\nByVal sourceFile As String, ByVal exeFile As String) As Boolean\n\n    Dim cp As New CompilerParameters()\n\n    &#39; Generate an executable instead of \n    &#39; a class library.\n    cp.GenerateExecutable = True\n\n    &#39; Set the assembly file name to generate.\n    cp.OutputAssembly = exeFile\n\n    &#39; Generate debug information.\n    cp.IncludeDebugInformation = True\n\n    &#39; Add an assembly reference.\n    cp.ReferencedAssemblies.Add(&quot;System.dll&quot;)\n\n    &#39; Save the assembly as a physical file.\n    cp.GenerateInMemory = False\n\n    &#39; Set the level at which the compiler \n    &#39; should start displaying warnings.\n    cp.WarningLevel = 3\n\n    &#39; Set whether to treat all warnings as errors.\n    cp.TreatWarningsAsErrors = False\n\n    &#39; Set compiler argument to optimize output.\n    cp.CompilerOptions = &quot;/optimize&quot;\n\n    &#39; Set a temporary files collection.\n    &#39; The TempFileCollection stores the temporary files\n    &#39; generated during a build in the current directory,\n    &#39; and does not delete them after compilation.\n    cp.TempFiles = New TempFileCollection(&quot;.&quot;, True)\n\n    If provider.Supports(GeneratorSupport.EntryPointMethod) Then\n        &#39; Specify the class that contains\n        &#39; the main method of the executable.\n        cp.MainClass = &quot;Samples.Class1&quot;\n    End If\n\n\n    If Directory.Exists(&quot;Resources&quot;) Then\n        If provider.Supports(GeneratorSupport.Resources) Then\n            &#39; Set the embedded resource file of the assembly.\n            &#39; This is useful for culture-neutral resources,\n            &#39; or default (fallback) resources.\n            cp.EmbeddedResources.Add(&quot;Resources\\Default.resources&quot;)\n\n            &#39; Set the linked resource reference files of the assembly.\n            &#39; These resources are included in separate assembly files,\n            &#39; typically localized for a specific language and culture.\n            cp.LinkedResources.Add(&quot;Resources\\nb-no.resources&quot;)\n        End If\n    End If\n\n    &#39; Invoke compilation.\n    Dim cr As CompilerResults = _\n        provider.CompileAssemblyFromFile(cp, sourceFile)\n\n    If cr.Errors.Count &gt; 0 Then\n        &#39; Display compilation errors.\n        Console.WriteLine(&quot;Errors building {0} into {1}&quot;, _\n            sourceFile, cr.PathToAssembly)\n        Dim ce As CompilerError\n        For Each ce In cr.Errors\n            Console.WriteLine(&quot;  {0}&quot;, ce.ToString())\n            Console.WriteLine()\n        Next ce\n    Else\n        Console.WriteLine(&quot;Source {0} built into {1} successfully.&quot;, _\n            sourceFile, cr.PathToAssembly)\n        Console.WriteLine(&quot;{0} temporary files created during the compilation.&quot;, _\n                cp.TempFiles.Count.ToString())\n    End If\n\n    &#39; Return the results of compilation.\n    If cr.Errors.Count &gt; 0 Then\n        Return False\n    Else\n        Return True\n    End If\nEnd Function &#39;CompileCode\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>These identifiers are used when calling the <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator#System_CodeDom_Compiler_ICodeGenerator_Supports_\" data-linktype=\"relative-path\">Supports</a> method of a code generator to determine whether the code generator supports generating certain types of code.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_ArraysOfArrays\">\r\n      \t\t\t<span class=\"lang-csharp\">ArraysOfArrays</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports arrays of arrays.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_AssemblyAttributes\">\r\n      \t\t\t<span class=\"lang-csharp\">AssemblyAttributes</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports assembly attributes.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_ChainedConstructorArguments\">\r\n      \t\t\t<span class=\"lang-csharp\">ChainedConstructorArguments</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports chained constructor arguments.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_ComplexExpressions\">\r\n      \t\t\t<span class=\"lang-csharp\">ComplexExpressions</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports complex expressions.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_DeclareDelegates\">\r\n      \t\t\t<span class=\"lang-csharp\">DeclareDelegates</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports delegate declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_DeclareEnums\">\r\n      \t\t\t<span class=\"lang-csharp\">DeclareEnums</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports enumeration declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_DeclareEvents\">\r\n      \t\t\t<span class=\"lang-csharp\">DeclareEvents</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports event declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_DeclareIndexerProperties\">\r\n      \t\t\t<span class=\"lang-csharp\">DeclareIndexerProperties</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports the declaration of indexer properties.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_DeclareInterfaces\">\r\n      \t\t\t<span class=\"lang-csharp\">DeclareInterfaces</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports interface declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_DeclareValueTypes\">\r\n      \t\t\t<span class=\"lang-csharp\">DeclareValueTypes</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports value type declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_EntryPointMethod\">\r\n      \t\t\t<span class=\"lang-csharp\">EntryPointMethod</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports a program entry point method designation. This is used when building executables.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_GenericTypeDeclaration\">\r\n      \t\t\t<span class=\"lang-csharp\">GenericTypeDeclaration</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports generic type declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_GenericTypeReference\">\r\n      \t\t\t<span class=\"lang-csharp\">GenericTypeReference</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports generic type references.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_GotoStatements\">\r\n      \t\t\t<span class=\"lang-csharp\">GotoStatements</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports goto statements.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_MultidimensionalArrays\">\r\n      \t\t\t<span class=\"lang-csharp\">MultidimensionalArrays</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports referencing multidimensional arrays. Currently, the CodeDom cannot be used to instantiate multidimensional arrays.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_MultipleInterfaceMembers\">\r\n      \t\t\t<span class=\"lang-csharp\">MultipleInterfaceMembers</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports the declaration of members that implement multiple interfaces.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_NestedTypes\">\r\n      \t\t\t<span class=\"lang-csharp\">NestedTypes</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports the declaration of nested types.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_ParameterAttributes\">\r\n      \t\t\t<span class=\"lang-csharp\">ParameterAttributes</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports parameter attributes.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_PartialTypes\">\r\n      \t\t\t<span class=\"lang-csharp\">PartialTypes</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports partial type declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_PublicStaticMembers\">\r\n      \t\t\t<span class=\"lang-csharp\">PublicStaticMembers</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports public static members.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_ReferenceParameters\">\r\n      \t\t\t<span class=\"lang-csharp\">ReferenceParameters</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports reference and out parameters.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_Resources\">\r\n      \t\t\t<span class=\"lang-csharp\">Resources</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports compilation with .NET Framework resources. These can be default resources compiled directly into an assembly, or resources referenced in a satellite assembly.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_ReturnTypeAttributes\">\r\n      \t\t\t<span class=\"lang-csharp\">ReturnTypeAttributes</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports return type attribute declarations.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_StaticConstructors\">\r\n      \t\t\t<span class=\"lang-csharp\">StaticConstructors</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports static constructors.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_TryCatchStatements\">\r\n      \t\t\t<span class=\"lang-csharp\">TryCatchStatements</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports <code>try...catch</code> statements.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_Compiler_GeneratorSupport_Win32Resources\">\r\n      \t\t\t<span class=\"lang-csharp\">Win32Resources</span>\r\n      \t</td>\r\n      \t<td><p>Indicates the generator supports compilation with Win32 resources.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.Compiler.GeneratorSupport.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.ArraysOfArrays\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.AssemblyAttributes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.ChainedConstructorArguments\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.ComplexExpressions\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.DeclareDelegates\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.DeclareEnums\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.DeclareEvents\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.DeclareIndexerProperties\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.DeclareInterfaces\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.DeclareValueTypes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.EntryPointMethod\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.GenericTypeDeclaration\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.GenericTypeReference\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.GotoStatements\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.MultidimensionalArrays\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.MultipleInterfaceMembers\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.NestedTypes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.ParameterAttributes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.PartialTypes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.PublicStaticMembers\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.ReferenceParameters\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.Resources\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.ReturnTypeAttributes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.StaticConstructors\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.TryCatchStatements\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.GeneratorSupport.Win32Resources\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"3a0b95a4-90ad-4ab5-c319-bf5953632be4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines identifiers used to determine whether a code generator supports certain types of code elements.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.codedom.compiler/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.Compiler.GeneratorSupport\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.Compiler.GeneratorSupport.yml","open_to_public_contributors":false,"api_name":["System.CodeDom.Compiler.GeneratorSupport","System.CodeDom.Compiler.GeneratorSupport.ArraysOfArrays","System.CodeDom.Compiler.GeneratorSupport.AssemblyAttributes","System.CodeDom.Compiler.GeneratorSupport.ChainedConstructorArguments","System.CodeDom.Compiler.GeneratorSupport.ComplexExpressions","System.CodeDom.Compiler.GeneratorSupport.DeclareDelegates","System.CodeDom.Compiler.GeneratorSupport.DeclareEnums","System.CodeDom.Compiler.GeneratorSupport.DeclareEvents","System.CodeDom.Compiler.GeneratorSupport.DeclareIndexerProperties","System.CodeDom.Compiler.GeneratorSupport.DeclareInterfaces","System.CodeDom.Compiler.GeneratorSupport.DeclareValueTypes","System.CodeDom.Compiler.GeneratorSupport.EntryPointMethod","System.CodeDom.Compiler.GeneratorSupport.GenericTypeDeclaration","System.CodeDom.Compiler.GeneratorSupport.GenericTypeReference","System.CodeDom.Compiler.GeneratorSupport.GotoStatements","System.CodeDom.Compiler.GeneratorSupport.MultidimensionalArrays","System.CodeDom.Compiler.GeneratorSupport.MultipleInterfaceMembers","System.CodeDom.Compiler.GeneratorSupport.NestedTypes","System.CodeDom.Compiler.GeneratorSupport.ParameterAttributes","System.CodeDom.Compiler.GeneratorSupport.PartialTypes","System.CodeDom.Compiler.GeneratorSupport.PublicStaticMembers","System.CodeDom.Compiler.GeneratorSupport.ReferenceParameters","System.CodeDom.Compiler.GeneratorSupport.Resources","System.CodeDom.Compiler.GeneratorSupport.ReturnTypeAttributes","System.CodeDom.Compiler.GeneratorSupport.StaticConstructors","System.CodeDom.Compiler.GeneratorSupport.TryCatchStatements","System.CodeDom.Compiler.GeneratorSupport.Win32Resources"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.Compiler.GeneratorSupport","System::CodeDom::Compiler::GeneratorSupport","System.CodeDom.Compiler.GeneratorSupport.ArraysOfArrays","System::CodeDom::Compiler::GeneratorSupport::ArraysOfArrays","System.CodeDom.Compiler.GeneratorSupport.AssemblyAttributes","System::CodeDom::Compiler::GeneratorSupport::AssemblyAttributes","System.CodeDom.Compiler.GeneratorSupport.ChainedConstructorArguments","System::CodeDom::Compiler::GeneratorSupport::ChainedConstructorArguments","System.CodeDom.Compiler.GeneratorSupport.ComplexExpressions","System::CodeDom::Compiler::GeneratorSupport::ComplexExpressions","System.CodeDom.Compiler.GeneratorSupport.DeclareDelegates","System::CodeDom::Compiler::GeneratorSupport::DeclareDelegates","System.CodeDom.Compiler.GeneratorSupport.DeclareEnums","System::CodeDom::Compiler::GeneratorSupport::DeclareEnums","System.CodeDom.Compiler.GeneratorSupport.DeclareEvents","System::CodeDom::Compiler::GeneratorSupport::DeclareEvents","System.CodeDom.Compiler.GeneratorSupport.DeclareIndexerProperties","System::CodeDom::Compiler::GeneratorSupport::DeclareIndexerProperties","System.CodeDom.Compiler.GeneratorSupport.DeclareInterfaces","System::CodeDom::Compiler::GeneratorSupport::DeclareInterfaces","System.CodeDom.Compiler.GeneratorSupport.DeclareValueTypes","System::CodeDom::Compiler::GeneratorSupport::DeclareValueTypes","System.CodeDom.Compiler.GeneratorSupport.EntryPointMethod","System::CodeDom::Compiler::GeneratorSupport::EntryPointMethod","System.CodeDom.Compiler.GeneratorSupport.GenericTypeDeclaration","System::CodeDom::Compiler::GeneratorSupport::GenericTypeDeclaration","System.CodeDom.Compiler.GeneratorSupport.GenericTypeReference","System::CodeDom::Compiler::GeneratorSupport::GenericTypeReference","System.CodeDom.Compiler.GeneratorSupport.GotoStatements","System::CodeDom::Compiler::GeneratorSupport::GotoStatements","System.CodeDom.Compiler.GeneratorSupport.MultidimensionalArrays","System::CodeDom::Compiler::GeneratorSupport::MultidimensionalArrays","System.CodeDom.Compiler.GeneratorSupport.MultipleInterfaceMembers","System::CodeDom::Compiler::GeneratorSupport::MultipleInterfaceMembers","System.CodeDom.Compiler.GeneratorSupport.NestedTypes","System::CodeDom::Compiler::GeneratorSupport::NestedTypes","System.CodeDom.Compiler.GeneratorSupport.ParameterAttributes","System::CodeDom::Compiler::GeneratorSupport::ParameterAttributes","System.CodeDom.Compiler.GeneratorSupport.PartialTypes","System::CodeDom::Compiler::GeneratorSupport::PartialTypes","System.CodeDom.Compiler.GeneratorSupport.PublicStaticMembers","System::CodeDom::Compiler::GeneratorSupport::PublicStaticMembers","System.CodeDom.Compiler.GeneratorSupport.ReferenceParameters","System::CodeDom::Compiler::GeneratorSupport::ReferenceParameters","System.CodeDom.Compiler.GeneratorSupport.Resources","System::CodeDom::Compiler::GeneratorSupport::Resources","System.CodeDom.Compiler.GeneratorSupport.ReturnTypeAttributes","System::CodeDom::Compiler::GeneratorSupport::ReturnTypeAttributes","System.CodeDom.Compiler.GeneratorSupport.StaticConstructors","System::CodeDom::Compiler::GeneratorSupport::StaticConstructors","System.CodeDom.Compiler.GeneratorSupport.TryCatchStatements","System::CodeDom::Compiler::GeneratorSupport::TryCatchStatements","System.CodeDom.Compiler.GeneratorSupport.Win32Resources","System::CodeDom::Compiler::GeneratorSupport::Win32Resources"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"3a0b95a4-90ad-4ab5-c319-bf5953632be4","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.CodeDom.Compiler/GeneratorSupport.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GeneratorSupport enum | Microsoft Docs","_op_ogTitle":"GeneratorSupport enum","description":"Defines identifiers used to determine whether a code generator supports certain types of code elements.\n","toc_asset_id":"api/_splitted/System.CodeDom.Compiler/toc.json","toc_rel":"_splitted/System.CodeDom.Compiler/toc.json","source_url":"","ms.assetid":"System.CodeDom.Compiler.GeneratorSupport","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.compiler.generatorsupport","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.compiler.generatorsupport","fileRelativePath":"api/System.CodeDom.Compiler.GeneratorSupport.html"},"themesRelativePathToOutputRoot":"_themes/"}