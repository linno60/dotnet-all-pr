{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">OperationFlow</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the type of transmission an endpoint of the XML Web service can support.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum OperationFlow</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">OperationFlow</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following sample demonstrates the use of the <code>OperationFlow</code> enumeration.  </p>\n<pre><code class=\"lang-cpp\" name=\"OperationFlow_Enum#1\">#using &lt;System.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Xml;\nusing namespace System::Web::Services;\nusing namespace System::Web::Services::Description;\n\nvoid DisplayOperationFlowDescription( OperationFlow myOperationFlow )\n{\n   switch ( myOperationFlow )\n   {\n      case OperationFlow::None:\n         Console::WriteLine( &quot;Indicates that the endpoint or service &quot;\n         &quot;receives no transmissions (None).&quot; );\n         break;\n\n      case OperationFlow::OneWay:\n         Console::WriteLine( &quot;Indicates that the endpoint or service &quot;\n         &quot;receives a message (OneWay).&quot; );\n         break;\n\n      case OperationFlow::Notification:\n         Console::WriteLine( &quot;Indicates that the endpoint or service &quot;\n         &quot;sends a message (Notification).&quot; );\n         break;\n\n      case OperationFlow::SolicitResponse:\n         Console::WriteLine( &quot;Indicates that the endpoint or service &quot;\n         &quot;sends a message, then receives a &quot;\n         &quot;correlated message (SolicitResponse).&quot; );\n         break;\n\n      case OperationFlow::RequestResponse:\n         Console::WriteLine( &quot;Indicates that the endpoint or service &quot;\n         &quot;receives a message, then sends a &quot;\n         &quot;correlated message (RequestResponse).&quot; );\n         break;\n   }\n}\n\nint main()\n{\n   try\n   {\n      ServiceDescription^ myDescription = ServiceDescription::Read( &quot;MathService_Input_cs.wsdl&quot; );\n      PortTypeCollection^ myPortTypeCollection = myDescription-&gt;PortTypes;\n\n      // Get the OperationCollection for SOAP protocol.\n      OperationCollection^ myOperationCollection = myPortTypeCollection[ 0 ]-&gt;Operations;\n\n      // Get the OperationMessageCollection for the Add operation.\n      OperationMessageCollection^ myOperationMessageCollection = myOperationCollection[ 0 ]-&gt;Messages;\n\n      // Indicate that the endpoint or service receives no\n      // transmissions (None).\n      Console::WriteLine( &quot;myOperationMessageCollection does not &quot;\n      &quot;contain any operation messages.&quot; );\n      DisplayOperationFlowDescription( myOperationMessageCollection-&gt;Flow );\n      Console::WriteLine();\n\n      // Indicate that the endpoint or service receives a message (OneWay).\n      OperationMessage^ myInputOperationMessage = dynamic_cast&lt;OperationMessage^&gt;(gcnew OperationInput);\n      XmlQualifiedName^ myXmlQualifiedName = gcnew XmlQualifiedName( &quot;AddSoapIn&quot;,myDescription-&gt;TargetNamespace );\n      myInputOperationMessage-&gt;Message = myXmlQualifiedName;\n      myOperationMessageCollection-&gt;Add( myInputOperationMessage );\n      Console::WriteLine( &quot;myOperationMessageCollection contains &quot;\n      &quot;only input operation messages.&quot; );\n      DisplayOperationFlowDescription( myOperationMessageCollection-&gt;Flow );\n      Console::WriteLine();\n      myOperationMessageCollection-&gt;Remove( myInputOperationMessage );\n\n      // Indicate that an endpoint or service sends a message (Notification).\n      OperationMessage^ myOutputOperationMessage = dynamic_cast&lt;OperationMessage^&gt;(gcnew OperationOutput);\n      XmlQualifiedName^ myXmlQualifiedName1 = gcnew XmlQualifiedName( &quot;AddSoapOut&quot;,myDescription-&gt;TargetNamespace );\n      myOutputOperationMessage-&gt;Message = myXmlQualifiedName1;\n      myOperationMessageCollection-&gt;Add( myOutputOperationMessage );\n      Console::WriteLine( &quot;myOperationMessageCollection contains &quot;\n      &quot;only output operation messages.&quot; );\n      DisplayOperationFlowDescription( myOperationMessageCollection-&gt;Flow );\n      Console::WriteLine();\n\n      // Indicate that an endpoint or service sends a message, then\n      // receives a correlated message (SolicitResponse).\n      myOperationMessageCollection-&gt;Add( myInputOperationMessage );\n      Console::WriteLine( &quot;&#39;myOperationMessageCollection&#39; contains &quot;\n      &quot;an output operation message first, then &quot;\n      &quot;an input operation message.&quot; );\n      DisplayOperationFlowDescription( myOperationMessageCollection-&gt;Flow );\n      Console::WriteLine();\n\n      // Indicate that an endpoint or service receives a message,\n      // then sends a correlated message (RequestResponse).\n      myOperationMessageCollection-&gt;Remove( myInputOperationMessage );\n      myOperationMessageCollection-&gt;Insert( 0, myInputOperationMessage );\n      Console::WriteLine( &quot;myOperationMessageCollection contains &quot;\n      &quot;an input operation message first, then &quot;\n      &quot;an output operation message.&quot; );\n      DisplayOperationFlowDescription( myOperationMessageCollection-&gt;Flow );\n      Console::WriteLine();\n      myDescription-&gt;Write( &quot;MathService_new_cs.wsdl&quot; );\n      Console::WriteLine( &quot;The file MathService_new_cs.wsdl was successfully written.&quot; );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;Exception caught!!!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"OperationFlow_Enum#1\">using System;\nusing System.Xml;\nusing System.Web.Services;\nusing System.Web.Services.Description;\n\nclass MyOperationFlowSample\n{\n   public static void Main()\n   {\n      try\n      {\n         ServiceDescription myDescription = \n            ServiceDescription.Read(&quot;MathService_Input_cs.wsdl&quot;);\n         PortTypeCollection  myPortTypeCollection  = \n            myDescription.PortTypes;\n\n         // Get the OperationCollection for SOAP protocol.\n         OperationCollection myOperationCollection = \n            myPortTypeCollection[0].Operations;\n\n         // Get the OperationMessageCollection for the Add operation.\n         OperationMessageCollection myOperationMessageCollection = \n            myOperationCollection[0].Messages;\n\n         // Indicate that the endpoint or service receives no \n         // transmissions (None).\n         Console.WriteLine(&quot;myOperationMessageCollection does not &quot; +\n            &quot;contain any operation messages.&quot;);\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow);\n         Console.WriteLine();\n\n         // Indicate that the endpoint or service receives a message (OneWay).\n         OperationMessage myInputOperationMessage = \n            (OperationMessage) new OperationInput();\n         XmlQualifiedName myXmlQualifiedName = \n            new XmlQualifiedName(&quot;AddSoapIn&quot;, myDescription.TargetNamespace);\n         myInputOperationMessage.Message = myXmlQualifiedName;\n         myOperationMessageCollection.Add(myInputOperationMessage);\n         Console.WriteLine(&quot;myOperationMessageCollection contains &quot; +\n            &quot;only input operation messages.&quot;);\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow);\n         Console.WriteLine();\n\n         myOperationMessageCollection.Remove(myInputOperationMessage);\n\n         // Indicate that an endpoint or service sends a message (Notification).\n         OperationMessage myOutputOperationMessage = \n            (OperationMessage) new OperationOutput();\n         XmlQualifiedName myXmlQualifiedName1 = new XmlQualifiedName\n            (&quot;AddSoapOut&quot;, myDescription.TargetNamespace);\n         myOutputOperationMessage.Message = myXmlQualifiedName1;\n         myOperationMessageCollection.Add(myOutputOperationMessage);\n         Console.WriteLine(&quot;myOperationMessageCollection contains &quot; +\n            &quot;only output operation messages.&quot;);\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow);\n         Console.WriteLine();\n\n         // Indicate that an endpoint or service sends a message, then\n         // receives a correlated message (SolicitResponse).\n         myOperationMessageCollection.Add(myInputOperationMessage);\n         Console.WriteLine(&quot;&#39;myOperationMessageCollection&#39; contains &quot; +\n            &quot;an output operation message first, then &quot; +\n            &quot;an input operation message.&quot;);\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow);\n         Console.WriteLine();\n\n         // Indicate that an endpoint or service receives a message,\n         // then sends a correlated message (RequestResponse).\n         myOperationMessageCollection.Remove(myInputOperationMessage);\n         myOperationMessageCollection.Insert(0, myInputOperationMessage);\n         Console.WriteLine(&quot;myOperationMessageCollection contains &quot; +\n            &quot;an input operation message first, then &quot; +\n            &quot;an output operation message.&quot;);\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow);\n         Console.WriteLine();\n\n         myDescription.Write(&quot;MathService_new_cs.wsdl&quot;);\n         Console.WriteLine(\n            &quot;The file MathService_new_cs.wsdl was successfully written.&quot;);\n      }\n      catch(Exception e)\n      {\n         Console.WriteLine(&quot;Exception caught!!!&quot;);\n         Console.WriteLine(&quot;Source : &quot; + e.Source);\n         Console.WriteLine(&quot;Message : &quot; + e.Message);\n      }\n   }\n\n   public static void DisplayOperationFlowDescription(\n      OperationFlow myOperationFlow)\n   {\n      switch(myOperationFlow)\n      {\n         case OperationFlow.None:\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; +\n               &quot;receives no transmissions (None).&quot;);\n            break;\n         case OperationFlow.OneWay:\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; +\n               &quot;receives a message (OneWay).&quot;);\n            break;\n         case OperationFlow.Notification:\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; +\n               &quot;sends a message (Notification).&quot;);\n            break;\n         case OperationFlow.SolicitResponse:\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; +\n               &quot;sends a message, then receives a &quot; +\n               &quot;correlated message (SolicitResponse).&quot;);\n            break;\n         case OperationFlow.RequestResponse:\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; +\n               &quot;receives a message, then sends a &quot; +\n               &quot;correlated message (RequestResponse).&quot;);\n            break;\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"OperationFlow_Enum#1\">Imports System\nImports System.Xml\nImports System.Web.Services\nImports System.Web.Services.Description\n\n\nClass MyOperationFlowSample\n   \n   Public Shared Sub Main()\n      Try\n         Dim myDescription As ServiceDescription = _\n            ServiceDescription.Read(&quot;MathService_Input_vb.wsdl&quot;)\n         Dim myPortTypeCollection As PortTypeCollection = _\n            myDescription.PortTypes\n\n         &#39; Get the OperationCollection for SOAP protocol.\n         Dim myOperationCollection As OperationCollection = _\n            myPortTypeCollection(0).Operations\n         &#39; Get the OperationMessageCollection for the Add operation.\n         Dim myOperationMessageCollection As OperationMessageCollection = _\n            myOperationCollection(0).Messages\n\n         &#39; Indicate that the endpoint or service receives no \n         &#39; transmissions (None).\n         Console.WriteLine(&quot;myOperationMessageCollection does not &quot; &amp; _\n            &quot;contain any operation messages.&quot;)\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow)\n         Console.WriteLine()\n         \n         &#39; Indicate that the endpoint or service receives a message (OneWay).\n         Dim myInputOperationMessage As OperationMessage = _\n            CType(New OperationInput(), OperationMessage)\n         Dim myXmlQualifiedName As New XmlQualifiedName(&quot;AddSoapIn&quot;, _\n            myDescription.TargetNamespace)\n         myInputOperationMessage.Message = myXmlQualifiedName\n         myOperationMessageCollection.Add(myInputOperationMessage)\n         Console.WriteLine(&quot;myOperationMessageCollection contains &quot; &amp; _\n            &quot;only input operation messages.&quot;)\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow)\n         Console.WriteLine()\n         \n         myOperationMessageCollection.Remove(myInputOperationMessage)\n         \n         &#39; Indicate that an endpoint or service sends a message (Notification).\n         Dim myOutputOperationMessage As OperationMessage = _\n            CType(New OperationOutput(), OperationMessage)\n         Dim myXmlQualifiedName1 As New XmlQualifiedName(&quot;AddSoapOut&quot;, _\n            myDescription.TargetNamespace)\n         myOutputOperationMessage.Message = myXmlQualifiedName1\n         myOperationMessageCollection.Add(myOutputOperationMessage)\n         Console.WriteLine(&quot;myOperationMessageCollection contains only &quot; &amp; _\n            &quot;output operation messages.&quot;)\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow)\n         Console.WriteLine()\n         \n         &#39; Indicate that an endpoint or service sends a message, then\n         &#39; receives a correlated message (SolicitResponse).\n         myOperationMessageCollection.Add(myInputOperationMessage)\n         Console.WriteLine(&quot;myOperationMessageCollection contains &quot; &amp; _\n            &quot;an output operation message first, then &quot; &amp; _\n            &quot;an input operation message.&quot;)\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow)\n         Console.WriteLine()\n         \n         &#39; Indicate that an endpoint or service receives a message,\n         &#39; then sends a correlated message (RequestResponse).\n         myOperationMessageCollection.Remove(myInputOperationMessage)\n         myOperationMessageCollection.Insert(0, myInputOperationMessage)\n         Console.WriteLine(&quot;myOperationMessageCollection contains &quot; &amp; _\n            &quot;an input operation message first, then &quot; &amp; _\n            &quot;an output operation message.&quot;)\n         DisplayOperationFlowDescription(myOperationMessageCollection.Flow)\n         Console.WriteLine()\n         \n         myDescription.Write(&quot;MathService_new_vb.wsdl&quot;)\n         Console.WriteLine( _\n            &quot;The file MathService_new_vb.wsdl was successfully written.&quot;)\n      Catch e As Exception\n         Console.WriteLine(&quot;Exception caught!!!&quot;)\n         Console.WriteLine(&quot;Source : &quot; &amp; e.Source.ToString())\n         Console.WriteLine(&quot;Message : &quot; &amp; e.Message.ToString())\n      End Try\n   End Sub &#39;Main\n   Public Shared Sub DisplayOperationFlowDescription(myOperationFlow As OperationFlow)\n      Select Case myOperationFlow\n         Case OperationFlow.None\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; &amp; _\n               &quot;receives no transmissions (None).&quot;)\n         Case OperationFlow.OneWay\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; &amp; _\n               &quot;receives a message (OneWay).&quot;)\n         Case OperationFlow.Notification\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; &amp; _\n               &quot;sends a message (Notification).&quot;)\n         Case OperationFlow.SolicitResponse\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; &amp; _\n               &quot;sends a message, then receives a correlated message &quot; &amp; _\n               &quot;(SolicitResponse).&quot;)\n          Case OperationFlow.RequestResponse\n            Console.WriteLine(&quot;Indicates that the endpoint or service &quot; &amp; _\n               &quot;receives a message, then sends a correlated message &quot; &amp; _\n               &quot;(RequestResponse).&quot;)\n      End Select\n   End Sub &#39;DisplayOperationFlowDescription\nEnd Class &#39;MyOperationFlowSample\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Although request-response or solicit-response operations are logically correlated in the Web Services Description Language (WSDL) document, the concrete correlation information will be specified by a binding. For example, the request and response messages can be exchanged as part of one or two actual HTTP transmissions.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Web_Services_Description_OperationFlow_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that the endpoint of the XML Web service receives no transmissions.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_Services_Description_OperationFlow_Notification\">\r\n      \t\t\t<span class=\"lang-csharp\">Notification</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that the endpoint of the XML Web service sends a message.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_Services_Description_OperationFlow_OneWay\">\r\n      \t\t\t<span class=\"lang-csharp\">OneWay</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that the endpoint of the XML Web service receives a message.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_Services_Description_OperationFlow_RequestResponse\">\r\n      \t\t\t<span class=\"lang-csharp\">RequestResponse</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that the endpoint of the XML Web service receives a message, then sends a correlated message.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_Services_Description_OperationFlow_SolicitResponse\">\r\n      \t\t\t<span class=\"lang-csharp\">SolicitResponse</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that the endpoint of the XML Web service sends a message, then receives a correlated message.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Services.Description.OperationFlow.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Description.OperationFlow\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Description.OperationFlow.None\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Description.OperationFlow.Notification\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Description.OperationFlow.OneWay\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Description.OperationFlow.RequestResponse\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Description.OperationFlow.SolicitResponse\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"f492e190-5a8a-1c38-1f6b-e917c5ba81ef\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the type of transmission an endpoint of the XML Web service can support.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.services.description/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Description.OperationFlow\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Services.Description.OperationFlow.yml","open_to_public_contributors":false,"api_name":["System.Web.Services.Description.OperationFlow","System.Web.Services.Description.OperationFlow.None","System.Web.Services.Description.OperationFlow.Notification","System.Web.Services.Description.OperationFlow.OneWay","System.Web.Services.Description.OperationFlow.RequestResponse","System.Web.Services.Description.OperationFlow.SolicitResponse"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Description.OperationFlow","System::Web::Services::Description::OperationFlow","System.Web.Services.Description.OperationFlow.None","System::Web::Services::Description::OperationFlow::None","System.Web.Services.Description.OperationFlow.Notification","System::Web::Services::Description::OperationFlow::Notification","System.Web.Services.Description.OperationFlow.OneWay","System::Web::Services::Description::OperationFlow::OneWay","System.Web.Services.Description.OperationFlow.RequestResponse","System::Web::Services::Description::OperationFlow::RequestResponse","System.Web.Services.Description.OperationFlow.SolicitResponse","System::Web::Services::Description::OperationFlow::SolicitResponse"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"f492e190-5a8a-1c38-1f6b-e917c5ba81ef","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.Services.Description/OperationFlow.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OperationFlow enum | Microsoft Docs","_op_ogTitle":"OperationFlow enum","description":"Specifies the type of transmission an endpoint of the XML Web service can support.\n","toc_asset_id":"api/_splitted/System.Web.Services.Description/toc.json","toc_rel":"_splitted/System.Web.Services.Description/toc.json","source_url":"","ms.assetid":"System.Web.Services.Description.OperationFlow","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.services.description.operationflow","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.services.description.operationflow","fileRelativePath":"api/System.Web.Services.Description.OperationFlow.html"},"themesRelativePathToOutputRoot":"_themes/"}