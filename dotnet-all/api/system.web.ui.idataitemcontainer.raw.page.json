{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDataItemContainer</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Enables data-bound control containers to identify a data item object for simplified data-binding operations.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDataItemContainer : System.Web.UI.INamingContainer</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use the IDataItemContainer interface. The <code>SimpleSpreadsheetControl</code> is a control that displays tabular-style data, similar to a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. It contains a set of <code>SimpleSpreadsheetRow</code> objects.  </p>\n<p> The <code>SimpleSpreadsheetRow</code> class is a container class that implements the IDataItemContainer interface. Although in this example the data item property is intuitively named <code>Data</code>, the <a class=\"xref\" href=\"system.web.ui.idataitemcontainer#System_Web_UI_IDataItemContainer_DataItem_\" data-linktype=\"relative-path\">DataItem</a> property can be implemented to map to any property or return value of a method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.IDataItemContainer_1#2\">using System;\nusing System.Collections;\nusing System.Data.Common;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n\nnamespace Samples.AspNet.CS\n{\n    public class SimpleSpreadsheetControl : CompositeDataBoundControl\n    {\n        protected Table table = new Table();\n\n        public virtual TableRowCollection Rows\n        {\n            get\n            {\n                return table.Rows;\n            }\n        }\n\n        protected override int CreateChildControls(IEnumerable dataSource, bool dataBinding)\n        {\n\n            int count = 0;\n            // If dataSource is not null, iterate through it and\n            // extract each element from it as a row, then\n            // create a SimpleSpreadsheetRow and add it to the\n            // rows collection.\n            if (dataSource != null)\n            {\n\n                SimpleSpreadsheetRow row;\n                IEnumerator e = dataSource.GetEnumerator();\n\n                while (e.MoveNext())\n                {\n                    object datarow = e.Current;\n                    row = new SimpleSpreadsheetRow(count, datarow);\n                    this.Rows.Add(row);\n                    ++count;\n                }\n\n                Controls.Add(table);\n            }\n            return count;\n        }\n    }\n\n    //\n    //\n    public class SimpleSpreadsheetRow : TableRow, IDataItemContainer\n    {\n        private object data;\n        private int _itemIndex;\n\n        public SimpleSpreadsheetRow(int itemIndex, object o)\n        {\n            data = o;\n            _itemIndex = itemIndex;\n        }\n\n        public virtual object Data\n        {\n            get\n            {\n                return data;\n            }\n        }\n        object IDataItemContainer.DataItem\n        {\n            get\n            {\n                return Data;\n            }\n        }\n        int IDataItemContainer.DataItemIndex\n        {\n            get\n            {\n                return _itemIndex;\n            }\n        }\n        int IDataItemContainer.DisplayIndex\n        {\n            get\n            {\n                return _itemIndex;\n            }\n        }\n        protected override void RenderContents(HtmlTextWriter writer)\n        {\n\n            if (Data != null)\n            {\n                if (Data is System.Data.Common.DbDataRecord)\n                {\n                    DbDataRecord temp = (DbDataRecord)Data;\n                    for (int i = 0; i &lt; temp.FieldCount; ++i)\n                    {\n                        writer.Write(&quot;&lt;TD&gt;&quot;);\n                        writer.Write(temp.GetValue(i).ToString());\n                        writer.Write(&quot;&lt;/TD&gt;&quot;);\n                    }\n                }\n                else\n                    writer.Write(&quot;&lt;TD&gt;&quot; + Data.ToString() + &quot;&lt;/TD&gt;&quot;);\n            }\n\n            else\n                writer.Write(&quot;&lt;TD&gt;This is a test&lt;/TD&gt;&quot;);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.IDataItemContainer_1#2\">Imports System\nImports System.Collections\nImports System.Data.Common\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n\n    Public Class SimpleSpreadsheetControl\n        Inherits CompositeDataBoundControl\n\n        Protected table As New Table()\n\n        Public Overridable ReadOnly Property Rows() As TableRowCollection\n            Get\n                Return table.Rows\n            End Get\n        End Property\n\n\n        Protected Overrides Function CreateChildControls(ByVal dataSource As IEnumerable, ByVal dataBinding As Boolean) As Integer\n\n            Dim count As Integer = 0\n            &#39; If dataSource is not Nothing, iterate through it and\n            &#39; extract each element from it as a row, then\n            &#39; create a SimpleSpreadsheetRow and add it to the\n            &#39; rows collection.\n            If Not (dataSource Is Nothing) Then\n\n                Dim row As SimpleSpreadsheetRow\n                Dim e As IEnumerator = dataSource.GetEnumerator()\n\n                While e.MoveNext()\n                    Dim datarow As Object = e.Current\n                    row = New SimpleSpreadsheetRow(count, datarow)\n                    Me.Rows.Add(row)\n                    count += 1\n                End While\n\n                Controls.Add(table)\n            End If\n            Return count\n        End Function &#39;CreateChildControls\n    End Class &#39;SimpleSpreadsheetControl\n\n\n    Public Class SimpleSpreadsheetRow\n        Inherits TableRow\n        Implements IDataItemContainer\n\n        Private dataObj As Object\n        Private _itemIndex As Integer\n\n        Public Sub New(ByVal itemIndex As Integer, ByVal o As Object)\n            dataObj = o\n            _itemIndex = itemIndex\n        End Sub &#39;New\n\n        Public Overridable ReadOnly Property Data() As Object\n            Get\n                Return dataObj\n            End Get\n        End Property\n\n        ReadOnly Property DataItem() As Object Implements IDataItemContainer.DataItem\n            Get\n                Return Data\n            End Get\n        End Property\n\n        ReadOnly Property DataItemIndex() As Integer Implements IDataItemContainer.DataItemIndex\n            Get\n                Return _itemIndex\n            End Get\n        End Property\n\n        ReadOnly Property DisplayIndex() As Integer Implements IDataItemContainer.DisplayIndex\n            Get\n                Return _itemIndex\n            End Get\n        End Property\n        Protected Overrides Sub RenderContents(ByVal writer As HtmlTextWriter)\n\n            If Not (Data Is Nothing) Then\n                If TypeOf Data Is System.Data.Common.DbDataRecord Then\n                    Dim temp As DbDataRecord = CType(Data, DbDataRecord)\n                    Dim i As Integer\n\n                    While i &lt; temp.FieldCount\n                        writer.Write(&quot;&lt;TD&gt;&quot;)\n                        writer.Write(temp.GetValue(i).ToString())\n                        writer.Write(&quot;&lt;/TD&gt;&quot;)\n                        i += 1\n                    End While\n                Else\n                    writer.Write((&quot;&lt;TD&gt;&quot; + Data.ToString() + &quot;&lt;/TD&gt;&quot;))\n                End If\n\n            Else\n                writer.Write(&quot;&lt;TD&gt;This is a test&lt;/TD&gt;&quot;)\n            End If\n        End Sub &#39;RenderContents\n    End Class &#39;SimpleSpreadsheetRow\nEnd Namespace\n</code></pre><p> The following code example demonstrates how to use the <code>SimpleSpreadsheetControl</code> and <a class=\"xref\" href=\"system.web.ui.webcontrols.accessdatasource\" data-linktype=\"relative-path\">AccessDataSource</a> control to display data in an Access database.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.IDataItemContainer_1#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot;\n    Assembly=&quot;Samples.AspNet.CS&quot;  %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;IDataItemContainer - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n      &lt;aspSample:SimpleSpreadsheetControl\n          id=&quot;SimpleSpreadsheet1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;AccessDataSource1&quot; /&gt;\n\n      &lt;asp:accessdatasource\n          id=&quot;AccessDataSource1&quot;\n          runat=&quot;server&quot;\n          datasourcemode=&quot;DataReader&quot;\n          datafile=&quot;Northwind.mdb&quot;\n          SelectCommand=&quot;SELECT OrderID,CustomerID,OrderDate,RequiredDate,\n          ShippedDate FROM Orders WHERE EmployeeID = (SELECT EmployeeID \n          FROM Employees WHERE LastName = &#39;King&#39;)&quot;&gt;\n      &lt;/asp:accessdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.IDataItemContainer_1#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot;\n    Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;IDataItemContainer - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n      &lt;aspSample:SimpleSpreadsheetControl\n          id=&quot;SimpleSpreadsheet1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;AccessDataSource1&quot; /&gt;\n\n      &lt;asp:accessdatasource\n          id=&quot;AccessDataSource1&quot;\n          runat=&quot;server&quot;\n          datasourcemode=&quot;DataReader&quot;\n          datafile=&quot;Northwind.mdb&quot;\n          SelectCommand=&quot;SELECT OrderID,CustomerID,OrderDate,RequiredDate,ShippedDate\n          FROM Orders WHERE EmployeeID =\n          (SELECT EmployeeID FROM Employees WHERE LastName = &#39;King&#39;)&quot;&gt;\n      &lt;/asp:accessdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Container classes that implement the IDataItemContainer interface can specify which of their properties identifies the data item for data-binding operations, such as late binding with the <a class=\"xref\" href=\"system.web.ui.databinder\" data-linktype=\"relative-path\">DataBinder</a> class.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_IDataItemContainer_DataItem_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IDataItemContainer_DataItem\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataItem</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When implemented, gets an <code>object</code> that is used in simplified data-binding operations.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object DataItem { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <code>object</code> that represents the value to use when data-binding operations are performed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DataItem property identifies an object that is used in data-binding operations and late-binding expressions.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_IDataItemContainer_DataItemIndex_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IDataItemContainer_DataItemIndex\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataItemIndex</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When implemented, gets the index of the data item bound to a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int DataItemIndex { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <code>Integer</code> representing the index of the data item in the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In implementing classes such as <a class=\"xref\" href=\"system.web.ui.webcontrols.formview\" data-linktype=\"relative-path\">FormView</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a>, the DataItemIndex property is used to determine the index of the data item bound to the control from the data source. The DataItemIndex property does not refer to the index of the data item as displayed by the data control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_IDataItemContainer_DisplayIndex_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IDataItemContainer_DisplayIndex\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayIndex</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When implemented, gets the position of the data item as displayed in a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int DisplayIndex { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <code>Integer</code> representing the position of the data item as displayed in a control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In implementing classes such as <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a>, the DisplayIndex property is set according to the index of the row among the displayed rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.IDataItemContainer.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IDataItemContainer\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IDataItemContainer.DataItem\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IDataItemContainer.DataItemIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IDataItemContainer.DisplayIndex\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"421b6ea6-364e-802c-6f14-31b4537bedb2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Enables data-bound control containers to identify a data item object for simplified data-binding operations.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.IDataItemContainer\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.IDataItemContainer.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.IDataItemContainer","System.Web.UI.IDataItemContainer.DataItem","System.Web.UI.IDataItemContainer.DataItemIndex","System.Web.UI.IDataItemContainer.DisplayIndex"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.IDataItemContainer","System::Web::UI::IDataItemContainer","System.Web.UI.IDataItemContainer.DataItem","System::Web::UI::IDataItemContainer::DataItem","System.Web.UI.IDataItemContainer.DataItemIndex","System::Web::UI::IDataItemContainer::DataItemIndex","System.Web.UI.IDataItemContainer.DisplayIndex","System::Web::UI::IDataItemContainer::DisplayIndex"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"421b6ea6-364e-802c-6f14-31b4537bedb2","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI/IDataItemContainer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDataItemContainer interface | Microsoft Docs","_op_ogTitle":"IDataItemContainer interface","description":"Enables data-bound control containers to identify a data item object for simplified data-binding operations.\n","toc_asset_id":"api/_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.IDataItemContainer","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.idataitemcontainer","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.idataitemcontainer","fileRelativePath":"api/System.Web.UI.IDataItemContainer.html"},"themesRelativePathToOutputRoot":"_themes/"}