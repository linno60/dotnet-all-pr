{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ReadOnlyCollectionBase</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the <code>abstract</code> base class for a strongly typed non-generic read-only collection.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class ReadOnlyCollectionBase : System.Collections.ICollection</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">ReadOnlyCollectionBase</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.componentcollection\" data-linktype=\"relative-path\">ComponentCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlocationcollection\" data-linktype=\"relative-path\">ConfigurationLocationCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.processmodulecollection\" data-linktype=\"relative-path\">ProcessModuleCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.processthreadcollection\" data-linktype=\"relative-path\">ProcessThreadCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.resultpropertyvaluecollection\" data-linktype=\"relative-path\">ResultPropertyValueCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.activedirectoryrolecollection\" data-linktype=\"relative-path\">ActiveDirectoryRoleCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.adaminstancecollection\" data-linktype=\"relative-path\">AdamInstanceCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.adamrolecollection\" data-linktype=\"relative-path\">AdamRoleCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.applicationpartitioncollection\" data-linktype=\"relative-path\">ApplicationPartitionCollection</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.attributemetadatacollection\" data-linktype=\"relative-path\">AttributeMetadataCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.domaincollection\" data-linktype=\"relative-path\">DomainCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.domaincontrollercollection\" data-linktype=\"relative-path\">DomainControllerCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.foresttrustdomaininfocollection\" data-linktype=\"relative-path\">ForestTrustDomainInfoCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.foresttrustrelationshipcollisioncollection\" data-linktype=\"relative-path\">ForestTrustRelationshipCollisionCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.globalcatalogcollection\" data-linktype=\"relative-path\">GlobalCatalogCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.readonlyactivedirectoryschemaclasscollection\" data-linktype=\"relative-path\">ReadOnlyActiveDirectorySchemaClassCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.readonlyactivedirectoryschemapropertycollection\" data-linktype=\"relative-path\">ReadOnlyActiveDirectorySchemaPropertyCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.readonlydirectoryservercollection\" data-linktype=\"relative-path\">ReadOnlyDirectoryServerCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.readonlysitecollection\" data-linktype=\"relative-path\">ReadOnlySiteCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.readonlysitelinkbridgecollection\" data-linktype=\"relative-path\">ReadOnlySiteLinkBridgeCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.readonlysitelinkcollection\" data-linktype=\"relative-path\">ReadOnlySiteLinkCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.readonlystringcollection\" data-linktype=\"relative-path\">ReadOnlyStringCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.replicationconnectioncollection\" data-linktype=\"relative-path\">ReplicationConnectionCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.replicationcursorcollection\" data-linktype=\"relative-path\">ReplicationCursorCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.replicationfailurecollection\" data-linktype=\"relative-path\">ReplicationFailureCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.replicationneighborcollection\" data-linktype=\"relative-path\">ReplicationNeighborCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.replicationoperationcollection\" data-linktype=\"relative-path\">ReplicationOperationCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.toplevelnamecollection\" data-linktype=\"relative-path\">TopLevelNameCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.activedirectory.trustrelationshipinformationcollection\" data-linktype=\"relative-path\">TrustRelationshipInformationCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.protocols.partialresultscollection\" data-linktype=\"relative-path\">PartialResultsCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.protocols.searchresultentrycollection\" data-linktype=\"relative-path\">SearchResultEntryCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.directoryservices.protocols.searchresultreferencecollection\" data-linktype=\"relative-path\">SearchResultReferenceCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.design.categorynamecollection\" data-linktype=\"relative-path\">CategoryNameCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.design.toolboxitemcollection\" data-linktype=\"relative-path\">ToolboxItemCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.authorizationrulecollection\" data-linktype=\"relative-path\">AuthorizationRuleCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.extendedprotection.servicenamecollection\" data-linktype=\"relative-path\">ServiceNameCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.management.webbaseeventcollection\" data-linktype=\"relative-path\">WebBaseEventCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.clientscriptitemcollection\" data-linktype=\"relative-path\">ClientScriptItemCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.catalogpartcollection\" data-linktype=\"relative-path\">CatalogPartCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectioninterfacecollection\" data-linktype=\"relative-path\">ConnectionInterfaceCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpointcollection\" data-linktype=\"relative-path\">ConsumerConnectionPointCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.editorpartcollection\" data-linktype=\"relative-path\">EditorPartCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.providerconnectionpointcollection\" data-linktype=\"relative-path\">ProviderConnectionPointCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.transformertypecollection\" data-linktype=\"relative-path\">TransformerTypeCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartcollection\" data-linktype=\"relative-path\">WebPartCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartdescriptioncollection\" data-linktype=\"relative-path\">WebPartDescriptionCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartverbcollection\" data-linktype=\"relative-path\">WebPartVerbCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartzonecollection\" data-linktype=\"relative-path\">WebPartZoneCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.formcollection\" data-linktype=\"relative-path\">FormCollection</a></span></div>\r\n  \t\t\t\t<div class=\"cdl hiddenDerivedClass\" hidden=\"\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.inputlanguagecollection\" data-linktype=\"relative-path\">InputLanguageCollection</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><a class=\"derivedClassesButton\" href=\"#\" title=\"Show all derived classes\" data-linktype=\"relative-path\">More&#8230;</a></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example implements the ReadOnlyCollectionBase class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.ReadOnlyCollectionBase#1\">using namespace System;\nusing namespace System::Collections;\npublic ref class ROCollection: public ReadOnlyCollectionBase\n{\npublic:\n   ROCollection( IList^ sourceList )\n   {\n      InnerList-&gt;AddRange( sourceList );\n   }\n\n   property Object^ Item [int]\n   {\n      Object^ get( int index )\n      {\n         return (InnerList[ index ]);\n      }\n\n   }\n   int IndexOf( Object^ value )\n   {\n      return (InnerList-&gt;IndexOf( value ));\n   }\n\n   bool Contains( Object^ value )\n   {\n      return (InnerList-&gt;Contains( value ));\n   }\n\n};\n\nvoid PrintIndexAndValues( ROCollection^ myCol );\nvoid PrintValues2( ROCollection^ myCol );\nint main()\n{\n   // Create an ArrayList.\n   ArrayList^ myAL = gcnew ArrayList;\n   myAL-&gt;Add( &quot;red&quot; );\n   myAL-&gt;Add( &quot;blue&quot; );\n   myAL-&gt;Add( &quot;yellow&quot; );\n   myAL-&gt;Add( &quot;green&quot; );\n   myAL-&gt;Add( &quot;orange&quot; );\n   myAL-&gt;Add( &quot;purple&quot; );\n\n   // Create a new ROCollection that contains the elements in myAL.\n   ROCollection^ myCol = gcnew ROCollection( myAL );\n\n   // Display the contents of the collection using the enumerator.\n   Console::WriteLine( &quot;Contents of the collection (using enumerator):&quot; );\n   PrintValues2( myCol );\n\n   // Display the contents of the collection using the Count property and the Item property.\n   Console::WriteLine( &quot;Contents of the collection (using Count and Item):&quot; );\n   PrintIndexAndValues( myCol );\n\n   // Search the collection with Contains and IndexOf.\n   Console::WriteLine( &quot;Contains yellow: {0}&quot;, myCol-&gt;Contains( &quot;yellow&quot; ) );\n   Console::WriteLine( &quot;orange is at index {0}.&quot;, myCol-&gt;IndexOf( &quot;orange&quot; ) );\n   Console::WriteLine();\n}\n\n\n// Uses the Count property and the Item property.\nvoid PrintIndexAndValues( ROCollection^ myCol )\n{\n   for ( int i = 0; i &lt; myCol-&gt;Count; i++ )\n      Console::WriteLine( &quot;   [{0}]:   {1}&quot;, i, myCol-&gt;Item[ i ] );\n   Console::WriteLine();\n}\n\n\n// Uses the enumerator. \nvoid PrintValues2( ROCollection^ myCol )\n{\n   System::Collections::IEnumerator^ myEnumerator = myCol-&gt;GetEnumerator();\n   while ( myEnumerator-&gt;MoveNext() )\n      Console::WriteLine( &quot;   {0}&quot;, myEnumerator-&gt;Current );\n\n   Console::WriteLine();\n}\n\n/* \nThis code produces the following output.\n\nContents of the collection (using enumerator):\n   red\n   blue\n   yellow\n   green\n   orange\n   purple\n\nContents of the collection (using Count and Item):\n   [0]:   red\n   [1]:   blue\n   [2]:   yellow\n   [3]:   green\n   [4]:   orange\n   [5]:   purple\n\nContains yellow: True\norange is at index 4.\n\n*/\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.ReadOnlyCollectionBase#1\">using System;\nusing System.Collections;\n\npublic class ROCollection : ReadOnlyCollectionBase  {\n\n   public ROCollection( IList sourceList )  {\n      InnerList.AddRange( sourceList );\n   }\n\n   public Object this[ int index ]  {\n      get  {\n         return( InnerList[index] );\n      }\n   }\n\n   public int IndexOf( Object value )  {\n      return( InnerList.IndexOf( value ) );\n   }\n\n   public bool Contains( Object value )  {\n      return( InnerList.Contains( value ) );\n   }\n\n}\n\n\npublic class SamplesCollectionBase  {\n\n   public static void Main()  {\n\n      // Create an ArrayList.\n      ArrayList myAL = new ArrayList();\n      myAL.Add( &quot;red&quot; );\n      myAL.Add( &quot;blue&quot; );\n      myAL.Add( &quot;yellow&quot; );\n      myAL.Add( &quot;green&quot; );\n      myAL.Add( &quot;orange&quot; );\n      myAL.Add( &quot;purple&quot; );\n \n      // Create a new ROCollection that contains the elements in myAL.\n      ROCollection myCol = new ROCollection( myAL );\n\n      // Display the contents of the collection using foreach. This is the preferred method.\n      Console.WriteLine( &quot;Contents of the collection (using foreach):&quot; );\n      PrintValues1( myCol );\n\n      // Display the contents of the collection using the enumerator.\n      Console.WriteLine( &quot;Contents of the collection (using enumerator):&quot; );\n      PrintValues2( myCol );\n\n      // Display the contents of the collection using the Count property and the Item property.\n      Console.WriteLine( &quot;Contents of the collection (using Count and Item):&quot; );\n      PrintIndexAndValues( myCol );\n\n      // Search the collection with Contains and IndexOf.\n      Console.WriteLine( &quot;Contains yellow: {0}&quot;, myCol.Contains( &quot;yellow&quot; ) );\n      Console.WriteLine( &quot;orange is at index {0}.&quot;, myCol.IndexOf( &quot;orange&quot; ) );\n      Console.WriteLine();\n\n   }\n \n   // Uses the Count property and the Item property.\n   public static void PrintIndexAndValues( ROCollection myCol )  {\n      for ( int i = 0; i &lt; myCol.Count; i++ )\n         Console.WriteLine( &quot;   [{0}]:   {1}&quot;, i, myCol[i] );\n      Console.WriteLine();\n   }\n\n   // Uses the foreach statement which hides the complexity of the enumerator.\n   // NOTE: The foreach statement is the preferred way of enumerating the contents of a collection.\n   public static void PrintValues1( ROCollection myCol )  {\n      foreach ( Object obj in myCol )\n         Console.WriteLine( &quot;   {0}&quot;, obj );\n      Console.WriteLine();\n   }\n\n   // Uses the enumerator. \n   // NOTE: The foreach statement is the preferred way of enumerating the contents of a collection.\n   public static void PrintValues2( ROCollection myCol )  {\n      System.Collections.IEnumerator myEnumerator = myCol.GetEnumerator();\n      while ( myEnumerator.MoveNext() )\n         Console.WriteLine( &quot;   {0}&quot;, myEnumerator.Current );\n      Console.WriteLine();\n   }\n\n}\n\n\n/* \nThis code produces the following output.\n\nContents of the collection (using foreach):\n   red\n   blue\n   yellow\n   green\n   orange\n   purple\n\nContents of the collection (using enumerator):\n   red\n   blue\n   yellow\n   green\n   orange\n   purple\n\nContents of the collection (using Count and Item):\n   [0]:   red\n   [1]:   blue\n   [2]:   yellow\n   [3]:   green\n   [4]:   orange\n   [5]:   purple\n\nContains yellow: True\norange is at index 4.\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.ReadOnlyCollectionBase#1\">Imports System\nImports System.Collections\n\nPublic Class ROCollection\n    Inherits ReadOnlyCollectionBase\n\n\n    Public Sub New(sourceList As IList)\n        InnerList.AddRange(sourceList)\n    End Sub &#39;New\n\n\n    Default Public ReadOnly Property Item(index As Integer) As [Object]\n        Get\n            Return InnerList(index)\n        End Get\n    End Property\n\n\n    Public Function IndexOf(value As [Object]) As Integer\n        Return InnerList.IndexOf(value)\n    End Function &#39;IndexOf\n\n\n    Public Function Contains(value As [Object]) As Boolean\n        Return InnerList.Contains(value)\n    End Function &#39;Contains\n\nEnd Class &#39;ROCollection \n\n\nPublic Class SamplesCollectionBase\n\n    Public Shared Sub Main()\n\n        &#39; Create an ArrayList.\n        Dim myAL As New ArrayList()\n        myAL.Add(&quot;red&quot;)\n        myAL.Add(&quot;blue&quot;)\n        myAL.Add(&quot;yellow&quot;)\n        myAL.Add(&quot;green&quot;)\n        myAL.Add(&quot;orange&quot;)\n        myAL.Add(&quot;purple&quot;)\n\n        &#39; Create a new ROCollection that contains the elements in myAL.\n        Dim myCol As New ROCollection(myAL)\n\n        &#39; Display the contents of the collection using For Each. This is the preferred method.\n        Console.WriteLine(&quot;Contents of the collection (using For Each):&quot;)\n        PrintValues1(myCol)\n\n        &#39; Display the contents of the collection using the enumerator.\n        Console.WriteLine(&quot;Contents of the collection (using enumerator):&quot;)\n        PrintValues2(myCol)\n\n        &#39; Display the contents of the collection using the Count property and the Item property.\n        Console.WriteLine(&quot;Contents of the collection (using Count and Item):&quot;)\n        PrintIndexAndValues(myCol)\n\n        &#39; Search the collection with Contains and IndexOf.\n        Console.WriteLine(&quot;Contains yellow: {0}&quot;, myCol.Contains(&quot;yellow&quot;))\n        Console.WriteLine(&quot;orange is at index {0}.&quot;, myCol.IndexOf(&quot;orange&quot;))\n        Console.WriteLine()\n\n    End Sub &#39;Main\n\n\n    &#39; Uses the Count property and the Item property.\n    Public Shared Sub PrintIndexAndValues(myCol As ROCollection)\n        Dim i As Integer\n        For i = 0 To myCol.Count - 1\n            Console.WriteLine(&quot;   [{0}]:   {1}&quot;, i, myCol(i))\n        Next i\n        Console.WriteLine()\n    End Sub &#39;PrintIndexAndValues\n\n\n    &#39; Uses the For Each statement which hides the complexity of the enumerator.\n    &#39; NOTE: The For Each statement is the preferred way of enumerating the contents of a collection.\n    Public Shared Sub PrintValues1(myCol As ROCollection)\n        Dim obj As [Object]\n        For Each obj In  myCol\n            Console.WriteLine(&quot;   {0}&quot;, obj)\n        Next obj\n        Console.WriteLine()\n    End Sub &#39;PrintValues1\n\n\n    &#39; Uses the enumerator. \n    &#39; NOTE: The For Each statement is the preferred way of enumerating the contents of a collection.\n    Public Shared Sub PrintValues2(myCol As ROCollection)\n        Dim myEnumerator As System.Collections.IEnumerator = myCol.GetEnumerator()\n        While myEnumerator.MoveNext()\n            Console.WriteLine(&quot;   {0}&quot;, myEnumerator.Current)\n        End While\n        Console.WriteLine()\n    End Sub &#39;PrintValues2\n\nEnd Class &#39;SamplesCollectionBase \n\n\n&#39;This code produces the following output.\n&#39;\n&#39;Contents of the collection (using For Each):\n&#39;   red\n&#39;   blue\n&#39;   yellow\n&#39;   green\n&#39;   orange\n&#39;   purple\n&#39;\n&#39;Contents of the collection (using enumerator):\n&#39;   red\n&#39;   blue\n&#39;   yellow\n&#39;   green\n&#39;   orange\n&#39;   purple\n&#39;\n&#39;Contents of the collection (using Count and Item):\n&#39;   [0]:   red\n&#39;   [1]:   blue\n&#39;   [2]:   yellow\n&#39;   [3]:   green\n&#39;   [4]:   orange\n&#39;   [5]:   purple\n&#39;\n&#39;Contains yellow: True\n&#39;orange is at index 4.\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A ReadOnlyCollectionBase instance is always read-only. See <a class=\"xref\" href=\"system.collections.collectionbase\" data-linktype=\"relative-path\">CollectionBase</a> for a modifiable version of this class.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_ReadOnlyCollectionBase__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_ReadOnlyCollectionBase__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadOnlyCollectionBase()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ReadOnlyCollectionBase ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor is an O(1) operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_ReadOnlyCollectionBase_Count_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_ReadOnlyCollectionBase_Count\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Count</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of elements contained in the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual int Count { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of elements contained in the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> instance.  </p>\n<p> Retrieving the value of this property is an O(1) operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_ReadOnlyCollectionBase_InnerList_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_ReadOnlyCollectionBase_InnerList\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InnerList</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the list of elements contained in the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Collections.ArrayList InnerList { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> representing the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> instance itself.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Retrieving the value of this property is an O(1) operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_ReadOnlyCollectionBase_GetEnumerator_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_ReadOnlyCollectionBase_GetEnumerator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEnumerator()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an enumerator that iterates through the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> for the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>foreach</code> statement of the C# language (<code>for each</code> in Visual Basic) hides the complexity of the enumerators.  Therefore, using <code>foreach</code> is recommended, instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> also brings the enumerator back to this position.  At this position, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. Therefore, you must call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>.  </p>\n<p> <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the same object until either <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> sets <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the next element.  </p>\n<p> If <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> passes the end of the collection, the enumerator is positioned after the last element in the collection and <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>. When the enumerator is at this position, subsequent calls to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> also return <code>false</code>. If the last call to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. To set <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the first element of the collection again, you can call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> followed by <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a>.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_CopyTo_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection.CopyTo(Array, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies the entire <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> to a compatible one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified index of the target array.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void ICollection.CopyTo (Array array, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>array</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a>. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>array</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> is less than zero.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>array</code> is multidimensional.  </p>\n<p> -or-  </p>\n<p> The number of elements in the source <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The type of the source <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> cannot be cast automatically to the type of the destination <code>array</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The specified array must be of a compatible type.  </p>\n<p> This method uses <a class=\"xref\" href=\"system.array#System_Array_Copy_\" data-linktype=\"relative-path\">Copy</a> to copy the elements.  </p>\n<p> This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.readonlycollectionbase#System_Collections_ReadOnlyCollectionBase_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_IsSynchronized_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_IsSynchronized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection.IsSynchronized</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether access to a <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object is synchronized (thread safe).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool System.Collections.ICollection.IsSynchronized { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if access to the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object is synchronized (thread safe); otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object is not synchronized. Derived classes can provide a synchronized version of the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> class using the <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property.  </p>\n<p> Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_SyncRoot_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_SyncRoot\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection.SyncRoot</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an object that can be used to synchronize access to a <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">object System.Collections.ICollection.SyncRoot { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Derived classes can provide their own synchronized version of the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> class using the <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property. The synchronizing code must perform operations on the <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property of the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object, not directly on the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a> object.  </p>\n<p> Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \t<h2 class=\"accented\">Thread Safety</h2>\r\n  \tPublic static (`Shared` in Visual Basic) members of this type are thread safe. Any instance members are not guaranteed to be thread safe.  \n  \n This implementation does not provide a synchronized (thread safe) wrapper for a ReadOnlyCollectionBase, but derived classes can create their own synchronized versions of the ReadOnlyCollectionBase using the <span class=\"xref\">stem.Collections.ICollection.SyncRoot*</span> property.  \n  \n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.ReadOnlyCollectionBase.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase.Count\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase.InnerList\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase.ICollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase.ICollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Collections.ReadOnlyCollectionBase.ICollection.SyncRoot\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"c70447ca-885a-65e7-72fc-4fc3640ae738\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the abstract base class for a strongly typed non-generic read-only collection.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.collections/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.ReadOnlyCollectionBase\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.ReadOnlyCollectionBase.yml","open_to_public_contributors":false,"api_name":["System.Collections.ReadOnlyCollectionBase","System.Collections.ReadOnlyCollectionBase..ctor","System.Collections.ReadOnlyCollectionBase.Count","System.Collections.ReadOnlyCollectionBase.GetEnumerator","System.Collections.ReadOnlyCollectionBase.InnerList","System.Collections.ReadOnlyCollectionBase.ICollection.CopyTo","System.Collections.ReadOnlyCollectionBase.ICollection.IsSynchronized","System.Collections.ReadOnlyCollectionBase.ICollection.SyncRoot"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.ReadOnlyCollectionBase","System::Collections::ReadOnlyCollectionBase","System.Collections.ReadOnlyCollectionBase.#ctor","System::Collections::ReadOnlyCollectionBase::#ctor","System.Collections.ReadOnlyCollectionBase.Count","System::Collections::ReadOnlyCollectionBase::Count","System.Collections.ReadOnlyCollectionBase.GetEnumerator","System::Collections::ReadOnlyCollectionBase::GetEnumerator","System.Collections.ReadOnlyCollectionBase.InnerList","System::Collections::ReadOnlyCollectionBase::InnerList","System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo","System::Collections::ReadOnlyCollectionBase::System#Collections#ICollection#CopyTo","System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized","System::Collections::ReadOnlyCollectionBase::System#Collections#ICollection#IsSynchronized","System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot","System::Collections::ReadOnlyCollectionBase::System#Collections#ICollection#SyncRoot"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"c70447ca-885a-65e7-72fc-4fc3640ae738","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Collections/ReadOnlyCollectionBase.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ReadOnlyCollectionBase class | Microsoft Docs","_op_ogTitle":"ReadOnlyCollectionBase class","description":"Provides the abstract base class for a strongly typed non-generic read-only collection.\n","toc_asset_id":"api/_splitted/System.Collections/toc.json","toc_rel":"_splitted/System.Collections/toc.json","source_url":"","ms.assetid":"System.Collections.ReadOnlyCollectionBase","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.readonlycollectionbase","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.readonlycollectionbase","fileRelativePath":"api/System.Collections.ReadOnlyCollectionBase.html"},"themesRelativePathToOutputRoot":"_themes/"}