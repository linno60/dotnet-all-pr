{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">StringSplitOptions</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies whether applicable <span class=\"xref\">stem.String.Split*</span> method overloads include or omit empty substrings from the return value.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\n[System.Runtime.InteropServices.ComVisible(false)]\npublic enum StringSplitOptions</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">StringSplitOptions</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example uses the StringSplitOptions enumeration to include or exclude substrings generated by the <a class=\"xref\" href=\"system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"string.split3#1\">// This example demonstrates the String() methods that use\n// the StringSplitOptions enumeration.\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    string s1 = &quot;,ONE,,TWO,,,THREE,,&quot;;\n    string s2 = &quot;[stop]&quot; +\n                &quot;ONE[stop][stop]&quot; +\n                &quot;TWO[stop][stop][stop]&quot; +\n                &quot;THREE[stop][stop]&quot;;\n    char[] charSeparators = new char[] {&#39;,&#39;};\n    string[] stringSeparators = new string[] {&quot;[stop]&quot;};\n    string[] result;\n// ------------------------------------------------------------------------------\n// Split a string delimited by characters.\n// ------------------------------------------------------------------------------\n    Console.WriteLine(&quot;1) Split a string delimited by characters:\\n&quot;);\n\n// Display the original string and delimiter characters.\n    Console.WriteLine(&quot;1a )The original string is \\&quot;{0}\\&quot;.&quot;, s1);\n    Console.WriteLine(&quot;The delimiter character is &#39;{0}&#39;.\\n&quot;, \n                       charSeparators[0]);\n\n// Split a string delimited by characters and return all elements.\n    Console.WriteLine(&quot;1b) Split a string delimited by characters and &quot; +\n                      &quot;return all elements:&quot;);\n    result = s1.Split(charSeparators, StringSplitOptions.None);\n    Show(result);\n\n// Split a string delimited by characters and return all non-empty elements.\n    Console.WriteLine(&quot;1c) Split a string delimited by characters and &quot; +\n                      &quot;return all non-empty elements:&quot;);\n    result = s1.Split(charSeparators, StringSplitOptions.RemoveEmptyEntries);\n    Show(result);\n\n// Split the original string into the string and empty string before the \n// delimiter and the remainder of the original string after the delimiter.\n    Console.WriteLine(&quot;1d) Split a string delimited by characters and &quot; +\n                      &quot;return 2 elements:&quot;);\n    result = s1.Split(charSeparators, 2, StringSplitOptions.None);\n    Show(result);\n\n// Split the original string into the string after the delimiter and the \n// remainder of the original string after the delimiter.\n    Console.WriteLine(&quot;1e) Split a string delimited by characters and &quot; +\n                      &quot;return 2 non-empty elements:&quot;);\n    result = s1.Split(charSeparators, 2, StringSplitOptions.RemoveEmptyEntries);\n    Show(result);\n\n// ------------------------------------------------------------------------------\n// Split a string delimited by another string.\n// ------------------------------------------------------------------------------\n    Console.WriteLine(&quot;2) Split a string delimited by another string:\\n&quot;);\n\n// Display the original string and delimiter string.\n    Console.WriteLine(&quot;2a) The original string is \\&quot;{0}\\&quot;.&quot;, s2);\n    Console.WriteLine(&quot;The delimiter string is \\&quot;{0}\\&quot;.\\n&quot;, stringSeparators[0]);\n\n// Split a string delimited by another string and return all elements.\n    Console.WriteLine(&quot;2b) Split a string delimited by another string and &quot; +\n                      &quot;return all elements:&quot;);\n    result = s2.Split(stringSeparators, StringSplitOptions.None);\n    Show(result);\n\n// Split the original string at the delimiter and return all non-empty elements.\n    Console.WriteLine(&quot;2c) Split a string delimited by another string and &quot; +\n                      &quot;return all non-empty elements:&quot;);\n    result = s2.Split(stringSeparators, StringSplitOptions.RemoveEmptyEntries);\n    Show(result);\n\n// Split the original string into the empty string before the \n// delimiter and the remainder of the original string after the delimiter.\n    Console.WriteLine(&quot;2d) Split a string delimited by another string and &quot; +\n                      &quot;return 2 elements:&quot;);\n    result = s2.Split(stringSeparators, 2, StringSplitOptions.None);\n    Show(result);\n\n// Split the original string into the string after the delimiter and the \n// remainder of the original string after the delimiter.\n    Console.WriteLine(&quot;2e) Split a string delimited by another string and &quot; + \n                      &quot;return 2 non-empty elements:&quot;);\n    result = s2.Split(stringSeparators, 2, StringSplitOptions.RemoveEmptyEntries);\n    Show(result);\n    }\n\n// Display the array of separated strings.\n    public static void Show(string[] entries)\n    {\n    Console.WriteLine(&quot;The return value contains these {0} elements:&quot;, entries.Length);\n    foreach (string entry in entries)\n        {\n        Console.Write(&quot;&lt;{0}&gt;&quot;, entry);\n        }\n    Console.Write(&quot;\\n\\n&quot;);\n    }\n}\n/*\nThis example produces the following results:\n\n1) Split a string delimited by characters:\n\n1a )The original string is &quot;,ONE,,TWO,,,THREE,,&quot;.\nThe delimiter character is &#39;,&#39;.\n\n1b) Split a string delimited by characters and return all elements:\nThe return value contains these 9 elements:\n&lt;&gt;&lt;ONE&gt;&lt;&gt;&lt;TWO&gt;&lt;&gt;&lt;&gt;&lt;THREE&gt;&lt;&gt;&lt;&gt;\n\n1c) Split a string delimited by characters and return all non-empty elements:\nThe return value contains these 3 elements:\n&lt;ONE&gt;&lt;TWO&gt;&lt;THREE&gt;\n\n1d) Split a string delimited by characters and return 2 elements:\nThe return value contains these 2 elements:\n&lt;&gt;&lt;ONE,,TWO,,,THREE,,&gt;\n\n1e) Split a string delimited by characters and return 2 non-empty elements:\nThe return value contains these 2 elements:\n&lt;ONE&gt;&lt;TWO,,,THREE,,&gt;\n\n2) Split a string delimited by another string:\n\n2a) The original string is &quot;[stop]ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]&quot;.\nThe delimiter string is &quot;[stop]&quot;.\n\n2b) Split a string delimited by another string and return all elements:\nThe return value contains these 9 elements:\n&lt;&gt;&lt;ONE&gt;&lt;&gt;&lt;TWO&gt;&lt;&gt;&lt;&gt;&lt;THREE&gt;&lt;&gt;&lt;&gt;\n\n2c) Split a string delimited by another string and return all non-empty elements:\nThe return value contains these 3 elements:\n&lt;ONE&gt;&lt;TWO&gt;&lt;THREE&gt;\n\n2d) Split a string delimited by another string and return 2 elements:\nThe return value contains these 2 elements:\n&lt;&gt;&lt;ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]&gt;\n\n2e) Split a string delimited by another string and return 2 non-empty elements:\nThe return value contains these 2 elements:\n&lt;ONE&gt;&lt;TWO[stop][stop][stop]THREE[stop][stop]&gt;\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"string.split3#1\">\n&#39; This example demonstrates the String() methods that use\n&#39; the StringSplitOptions enumeration.\nImports System\n\nClass Sample\n    Public Shared Sub Main() \n        Dim s1 As String = &quot;,ONE,,TWO,,,THREE,,&quot;\n        Dim s2 As String = &quot;[stop]&quot; &amp; _\n                           &quot;ONE[stop][stop]&quot; &amp; _\n                           &quot;TWO[stop][stop][stop]&quot; &amp; _\n                           &quot;THREE[stop][stop]&quot;\n        Dim charSeparators() As Char = {&quot;,&quot;c}\n        Dim stringSeparators() As String = {&quot;[stop]&quot;}\n        Dim result() As String\n        &#39; ------------------------------------------------------------------------------\n        &#39; Split a string delimited by characters.\n        &#39; ------------------------------------------------------------------------------\n        Console.WriteLine(&quot;1) Split a string delimited by characters:&quot; &amp; vbCrLf)\n        \n        &#39; Display the original string and delimiter characters.\n        Console.WriteLine(&quot;1a )The original string is &quot;&quot;{0}&quot;&quot;.&quot;, s1)\n        Console.WriteLine(&quot;The delimiter character is &#39;{0}&#39;.&quot; &amp; vbCrLf, charSeparators(0))\n        \n        &#39; Split a string delimited by characters and return all elements.\n        Console.WriteLine(&quot;1b) Split a string delimited by characters and &quot; &amp; _\n                          &quot;return all elements:&quot;)\n        result = s1.Split(charSeparators, StringSplitOptions.None)\n        Show(result)\n        \n        &#39; Split a string delimited by characters and return all non-empty elements.\n        Console.WriteLine(&quot;1c) Split a string delimited by characters and &quot; &amp; _\n                          &quot;return all non-empty elements:&quot;)\n        result = s1.Split(charSeparators, StringSplitOptions.RemoveEmptyEntries)\n        Show(result)\n        \n        &#39; Split the original string into the string and empty string before the \n        &#39; delimiter and the remainder of the original string after the delimiter.\n        Console.WriteLine(&quot;1d) Split a string delimited by characters and &quot; &amp; _\n                          &quot;return 2 elements:&quot;)\n        result = s1.Split(charSeparators, 2, StringSplitOptions.None)\n        Show(result)\n        \n        &#39; Split the original string into the string after the delimiter and the \n        &#39; remainder of the original string after the delimiter.\n        Console.WriteLine(&quot;1e) Split a string delimited by characters and &quot; &amp; _\n                          &quot;return 2 non-empty elements:&quot;)\n        result = s1.Split(charSeparators, 2, StringSplitOptions.RemoveEmptyEntries)\n        Show(result)\n        \n        &#39; ------------------------------------------------------------------------------\n        &#39; Split a string delimited by another string.\n        &#39; ------------------------------------------------------------------------------\n        Console.WriteLine(&quot;2) Split a string delimited by another string:&quot; &amp; vbCrLf)\n        \n        &#39; Display the original string and delimiter string.\n        Console.WriteLine(&quot;2a) The original string is &quot;&quot;{0}&quot;&quot;.&quot;, s2)\n        Console.WriteLine(&quot;The delimiter string is &quot;&quot;{0}&quot;&quot;.&quot; &amp; vbCrLf, stringSeparators(0))\n        \n        &#39; Split a string delimited by another string and return all elements.\n        Console.WriteLine(&quot;2b) Split a string delimited by another string and &quot; &amp; _\n                          &quot;return all elements:&quot;)\n        result = s2.Split(stringSeparators, StringSplitOptions.None)\n        Show(result)\n        \n        &#39; Split the original string at the delimiter and return all non-empty elements.\n        Console.WriteLine(&quot;2c) Split a string delimited by another string and &quot; &amp; _\n                          &quot;return all non-empty elements:&quot;)\n        result = s2.Split(stringSeparators, StringSplitOptions.RemoveEmptyEntries)\n        Show(result)\n        \n        &#39; Split the original string into the empty string before the \n        &#39; delimiter and the remainder of the original string after the delimiter.\n        Console.WriteLine(&quot;2d) Split a string delimited by another string and &quot; &amp; _\n                          &quot;return 2 elements:&quot;)\n        result = s2.Split(stringSeparators, 2, StringSplitOptions.None)\n        Show(result)\n        \n        &#39; Split the original string into the string after the delimiter and the \n        &#39; remainder of the original string after the delimiter.\n        Console.WriteLine(&quot;2e) Split a string delimited by another string and &quot; &amp; _\n                          &quot;return 2 non-empty elements:&quot;)\n        result = s2.Split(stringSeparators, 2, StringSplitOptions.RemoveEmptyEntries)\n        Show(result)\n    \n    End Sub &#39;Main\n    \n    \n    &#39; Display the array of separated strings.\n    Public Shared Sub Show(ByVal entries() As String) \n        Console.WriteLine(&quot;The return value contains these {0} elements:&quot;, entries.Length)\n        Dim entry As String\n        For Each entry In  entries\n            Console.Write(&quot;&lt;{0}&gt;&quot;, entry)\n        Next entry\n        Console.Write(vbCrLf &amp; vbCrLf)\n    \n    End Sub &#39;Show\nEnd Class &#39;Sample\n&#39;\n&#39;This example produces the following results:\n&#39;\n&#39;1) Split a string delimited by characters:\n&#39;\n&#39;1a )The original string is &quot;,ONE,,TWO,,,THREE,,&quot;.\n&#39;The delimiter character is &#39;,&#39;.\n&#39;\n&#39;1b) Split a string delimited by characters and return all elements:\n&#39;The return value contains these 9 elements:\n&#39;&lt;&gt;&lt;ONE&gt;&lt;&gt;&lt;TWO&gt;&lt;&gt;&lt;&gt;&lt;THREE&gt;&lt;&gt;&lt;&gt;\n&#39;\n&#39;1c) Split a string delimited by characters and return all non-empty elements:\n&#39;The return value contains these 3 elements:\n&#39;&lt;ONE&gt;&lt;TWO&gt;&lt;THREE&gt;\n&#39;\n&#39;1d) Split a string delimited by characters and return 2 elements:\n&#39;The return value contains these 2 elements:\n&#39;&lt;&gt;&lt;ONE,,TWO,,,THREE,,&gt;\n&#39;\n&#39;1e) Split a string delimited by characters and return 2 non-empty elements:\n&#39;The return value contains these 2 elements:\n&#39;&lt;ONE&gt;&lt;TWO,,,THREE,,&gt;\n&#39;\n&#39;2) Split a string delimited by another string:\n&#39;\n&#39;2a) The original string is &quot;[stop]ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]&quot;.\n&#39;The delimiter string is &quot;[stop]&quot;.\n&#39;\n&#39;2b) Split a string delimited by another string and return all elements:\n&#39;The return value contains these 9 elements:\n&#39;&lt;&gt;&lt;ONE&gt;&lt;&gt;&lt;TWO&gt;&lt;&gt;&lt;&gt;&lt;THREE&gt;&lt;&gt;&lt;&gt;\n&#39;\n&#39;2c) Split a string delimited by another string and return all non-empty elements:\n&#39;The return value contains these 3 elements:\n&#39;&lt;ONE&gt;&lt;TWO&gt;&lt;THREE&gt;\n&#39;\n&#39;2d) Split a string delimited by another string and return 2 elements:\n&#39;The return value contains these 2 elements:\n&#39;&lt;&gt;&lt;ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]&gt;\n&#39;\n&#39;2e) Split a string delimited by another string and return 2 non-empty elements:\n&#39;The return value contains these 2 elements:\n&#39;&lt;ONE&gt;&lt;TWO[stop][stop][stop]THREE[stop][stop]&gt;\n&#39;\n</code></pre><pre><code class=\"lang-cpp\" name=\"string.split3#1\">// This example demonstrates the String.Split(Char[], Boolean) and \n//                               String.Split(Char[], Int32, Boolean) methods\nusing namespace System;\nvoid Show( array&lt;String^&gt;^entries )\n{\n   Console::WriteLine( &quot;The return value contains these {0} elements:&quot;, entries-&gt;Length );\n   System::Collections::IEnumerator^ myEnum = entries-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      String^ entry = safe_cast&lt;String^&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;&lt;{0}&gt;&quot;, entry );\n   }\n\n   Console::Write( &quot;{0}{0}&quot;, Environment::NewLine );\n}\n\nint main()\n{\n   String^ s = &quot;,one,,,two,,,,,three,,&quot;;\n   array&lt;Char&gt;^sep = gcnew array&lt;Char&gt;{\n      &#39;,&#39;\n   };\n   array&lt;String^&gt;^result;\n   \n   //\n   Console::WriteLine( &quot;The original string is \\&quot;{0}\\&quot;.&quot;, s );\n   Console::WriteLine( &quot;The separation character is &#39;{0}&#39;.&quot;, sep[ 0 ] );\n   Console::WriteLine();\n   \n   //\n   Console::WriteLine( &quot;Split the string and return all elements:&quot; );\n   result = s-&gt;Split( sep, StringSplitOptions::None );\n   Show( result );\n   \n   //\n   Console::WriteLine( &quot;Split the string and return all non-empty elements:&quot; );\n   result = s-&gt;Split( sep, StringSplitOptions::RemoveEmptyEntries );\n   Show( result );\n   \n   //\n   Console::WriteLine( &quot;Split the string and return 2 elements:&quot; );\n   result = s-&gt;Split( sep, 2, StringSplitOptions::None );\n   Show( result );\n   \n   //\n   Console::WriteLine( &quot;Split the string and return 2 non-empty elements:&quot; );\n   result = s-&gt;Split( sep, 2, StringSplitOptions::RemoveEmptyEntries );\n   Show( result );\n}\n\n/*\nThis example produces the following results:\n\nThe original string is &quot;,one,,,two,,,,,three,,&quot;.\nThe separation character is &#39;,&#39;.\n\nSplit the string and return all elements:\nThe return value contains these 12 elements:\n&lt;&gt;&lt;one&gt;&lt;&gt;&lt;&gt;&lt;two&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;three&gt;&lt;&gt;&lt;&gt;\n\nSplit the string and return all non-empty elements:\nThe return value contains these 3 elements:\n&lt;one&gt;&lt;two&gt;&lt;three&gt;\n\nSplit the string and return 2 elements:\nThe return value contains these 2 elements:\n&lt;&gt;&lt;one,,,two,,,,,three,,&gt;\n\nSplit the string and return 2 non-empty elements:\nThe return value contains these 2 elements:\n&lt;one&gt;&lt;,,two,,,,,three,,&gt;\n\n*/\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> method returns an array of the substrings in a given string that are delimited by specified characters or strings. Adjacent delimiters yield an array element that contains an empty string (&quot;&quot;). The values of the StringSplitOptions enumeration specify whether an array element that contains an empty string is included in the returned array.  </p>\n<p> Specify the None value to invoke the default behavior of the <a class=\"xref\" href=\"system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> method, which is to return an array of both empty substrings and substrings that are not empty. Specify the RemoveEmptyEntries value to cause the <a class=\"xref\" href=\"system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> method to return an array consisting solely of substrings that are not empty.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_StringSplitOptions_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>The return value includes array elements that contain an empty string</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_StringSplitOptions_RemoveEmptyEntries\">\r\n      \t\t\t<span class=\"lang-csharp\">RemoveEmptyEntries</span>\r\n      \t</td>\r\n      \t<td><p>The return value does not include array elements that contain an empty string</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.StringSplitOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.StringSplitOptions\">\r\n<meta name=\"APIName\" content=\"System.StringSplitOptions.None\">\r\n<meta name=\"APIName\" content=\"System.StringSplitOptions.RemoveEmptyEntries\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"9de45a87-5d09-74d2-7597-4da862adc369\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies whether applicable  method overloads include or omit empty substrings from the return value.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.StringSplitOptions\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.StringSplitOptions.yml","open_to_public_contributors":false,"api_name":["System.StringSplitOptions","System.StringSplitOptions.None","System.StringSplitOptions.RemoveEmptyEntries"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.StringSplitOptions","System::StringSplitOptions","System.StringSplitOptions.None","System::StringSplitOptions::None","System.StringSplitOptions.RemoveEmptyEntries","System::StringSplitOptions::RemoveEmptyEntries"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"9de45a87-5d09-74d2-7597-4da862adc369","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System/StringSplitOptions.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StringSplitOptions enum | Microsoft Docs","_op_ogTitle":"StringSplitOptions enum","description":"Specifies whether applicable  method overloads include or omit empty substrings from the return value.\n","toc_asset_id":"api/_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.StringSplitOptions","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.stringsplitoptions","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.stringsplitoptions","fileRelativePath":"api/System.StringSplitOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}