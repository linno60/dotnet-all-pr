{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IMultipleResults</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the results of mapped functions or queries with variable return sequences.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IMultipleResults : IDisposable, System.Data.Linq.IFunctionResult</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<pre><code>CREATE PROCEDURE VariableResultShapes(@shape int)  \nAS  \nif(@shape = 1)  \n    select CustomerID, ContactTitle, CompanyName from customers  \nelse if(@shape = 2)  \n    select OrderID, ShipName from orders  \n</code></pre><pre><code class=\"lang-vb\" name=\"DLinqSprox#4\">&lt;FunctionAttribute(Name:=&quot;dbo.VariableResultShapes&quot;), _\nResultType(GetType(VariableResultShapesResult1)), _\nResultType(GetType(VariableResultShapesResult2))&gt; _\nPublic Function VariableResultShapes(&lt;Parameter(DbType:=&quot;Int&quot;)&gt; ByVal shape As System.Nullable(Of Integer)) As IMultipleResults\n    Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), shape)\n    Return CType(result.ReturnValue, IMultipleResults)\nEnd Function\n</code></pre><pre><code class=\"lang-cs\" name=\"DLinqSprox#4\">[Function(Name=&quot;dbo.VariableResultShapes&quot;)]\n[ResultType(typeof(VariableResultShapesResult1))]\n[ResultType(typeof(VariableResultShapesResult2))]\npublic IMultipleResults VariableResultShapes([Parameter(DbType=&quot;Int&quot;)] System.Nullable&lt;int&gt; shape)\n{\n\tIExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shape);\n\treturn ((IMultipleResults)(result.ReturnValue));\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>In the following SQL code example, the result shape depends on the input (<code>shape =1</code> or <code>shape = 2</code>). The order that the projections are returned is undefined.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Linq_IMultipleResults_GetResult__1_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Linq_IMultipleResults_GetResult__1\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResult&lt;TElement&gt;()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the next result as a sequence of a specified type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Generic.IEnumerable&lt;TElement&gt; GetResult&lt;TElement&gt; ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TElement</span>&gt;</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An enumeration for iterating over the results.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You would use code similar to the following to execute this stored procedure.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must use the GetResult(TElement) pattern to obtain an enumerator of the correct type, based on your knowledge of the stored procedure.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Linq.IMultipleResults.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.IMultipleResults\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.IMultipleResults.GetResult&lt;TElement&gt;\">\r\n<meta name=\"APILocation\" content=\"System.Data.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"75f8c474-ee5d-7e31-0062-f7688f385597\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the results of mapped functions or queries with variable return sequences.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data.linq/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Linq.IMultipleResults\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Linq.IMultipleResults.yml","open_to_public_contributors":false,"api_name":["System.Data.Linq.IMultipleResults","System.Data.Linq.IMultipleResults.GetResult<TElement>"],"api_location":["System.Data.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Linq.IMultipleResults","System::Data::Linq::IMultipleResults","System.Data.Linq.IMultipleResults.GetResult``1","System::Data::Linq::IMultipleResults::GetResult``1"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"75f8c474-ee5d-7e31-0062-f7688f385597","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data.Linq/IMultipleResults.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IMultipleResults interface | Microsoft Docs","_op_ogTitle":"IMultipleResults interface","description":"Represents the results of mapped functions or queries with variable return sequences.\n","toc_asset_id":"api/_splitted/System.Data.Linq/toc.json","toc_rel":"_splitted/System.Data.Linq/toc.json","source_url":"","ms.assetid":"System.Data.Linq.IMultipleResults","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.linq.imultipleresults","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.linq.imultipleresults","fileRelativePath":"api/System.Data.Linq.IMultipleResults.html"},"themesRelativePathToOutputRoot":"_themes/"}