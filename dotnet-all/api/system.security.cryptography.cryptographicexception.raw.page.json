{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CryptographicException</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>The exception that is thrown when an error occurs during a cryptographic operation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class CryptographicException : SystemException</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a></span></div><span class=\"lang-csharp\">CryptographicException</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo, StreamingContext)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use members of the CryptographicException class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.CryptographicException#2\">using System;\nusing System.Text;\nusing System.Security.Cryptography;\nusing System.Runtime.Serialization;\n\nclass CryptographicExceptionMembers\n{\n    [STAThread]\n    public static void Main(string[] args)\n    {\n        CryptographicExceptionMembers testRun = \n            new CryptographicExceptionMembers();\n        testRun.TestConstructors();\n        testRun.ShowProperties();\n        \n        Console.WriteLine(&quot;This sample ended successfully; &quot; + \n            &quot; press Enter to exit.&quot;);\n        Console.ReadLine();\n    }\n\n    // Test each public implementation of the CryptographicException\n    // constructors.\n    private void TestConstructors()\n    {\n        EmptyConstructor();\n        IntConstructor();\n        StringConstructor();\n        StringExceptionConstructor();\n        StringStringConstructor();\n    }\n\n    private void EmptyConstructor()\n    {\n        // Construct a CryptographicException with no parameters.\n        CryptographicException cryptographicException =\n            new CryptographicException();\n        Console.WriteLine(&quot;Created an empty CryptographicException.&quot;);\n    }\n\n    private void IntConstructor()\n    {\n        // Construct a CryptographicException using the error code for an\n        // unexpected operation exception.\n        int exceptionNumber = unchecked((int)0x80131431);\n        CryptographicException cryptographicException =\n            new CryptographicException(exceptionNumber);\n        Console.WriteLine(&quot;Created a CryptographicException with the &quot; + \n            &quot;following error code: &quot; + exceptionNumber);\n    }\n\n    private void StringConstructor()\n    {\n        // Construct a CryptographicException using a custom error message.\n        string errorMessage = (&quot;Unexpected Operation exception.&quot;);\n        CryptographicException cryptographicException =\n            new CryptographicException(errorMessage);\n        Console.WriteLine(&quot;Created a CryptographicException with the &quot; + \n            &quot;following error message: &quot; + errorMessage);\n    }\n\n    private void StringExceptionConstructor()\n    {\n        // Construct a CryptographicException using a custom error message\n        // and an inner exception.\n        string errorMessage = (&quot;The current operation is not supported.&quot;);\n        NullReferenceException nullException = new NullReferenceException();\n        CryptographicException cryptographicException = \n            new CryptographicException(errorMessage, nullException);\n        Console.WriteLine(&quot;Created a CryptographicException with the &quot; +\n            &quot;following error message: &quot; + errorMessage + \n            &quot; and the inner exception of &quot; + nullException.ToString());\n    }\n\n    private void StringStringConstructor()\n    {\n        // Create a CryptographicException using a time format and a the \n        // current date.\n        string dateFormat = &quot;{0:t}&quot;;\n        string timeStamp = (DateTime.Now.ToString());\n        CryptographicException cryptographicException = \n            new CryptographicException(dateFormat, timeStamp);\n        Console.WriteLine(&quot;Created a CryptographicException with (&quot; +\n            dateFormat + &quot;) as the format and (&quot; + timeStamp + \n            &quot;) as the message.&quot;);\n    }\n\n    // Construct an invalid DSACryptoServiceProvider to throw a\n    // CryptographicException for introspection.\n    private void ShowProperties()\n    {\n        try \n        {\n            // Create a DSACryptoServiceProvider with invalid provider type\n            // code to throw a CryptographicException exception.\n            CspParameters cspParams = new CspParameters(44);\n            DSACryptoServiceProvider DSAalg = \n                new DSACryptoServiceProvider(cspParams);\n        }\n        catch (CryptographicException ex)\n        {\n            // Retrieve the link to the help file for the exception.\n            string helpLink = ex.HelpLink;\n            \n            // Retrieve the exception that caused the current\n            // CryptographicException exception.\n            System.Exception innerException = ex.InnerException;\n            string innerExceptionMessage = &quot;&quot;;\n            if (innerException != null)\n            {\n                innerExceptionMessage = innerException.ToString();\n            }\n\n            // Retrieve the message that describes the exception.\n            string message = ex.Message;\n\n            // Retrieve the name of the application that caused the exception.\n            string exceptionSource = ex.Source;\n\n            // Retrieve the call stack at the time the exception occured.\n            string stackTrace = ex.StackTrace;\n\n            // Retrieve the method that threw the exception.\n            System.Reflection.MethodBase targetSite = ex.TargetSite;\n            string siteName = targetSite.Name;\n\n            // Retrieve the entire exception as a single string.\n            string entireException = ex.ToString();\n\n            // GetObjectData\n            setSerializationInfo(ref ex);\n\n            // Get the root exception that caused the current\n            // CryptographicException exception.\n            System.Exception baseException = ex.GetBaseException();\n            string baseExceptionMessage = &quot;&quot;;\n            if (baseException != null)\n            {\n                baseExceptionMessage = baseException.Message;\n            }\n\n            Console.WriteLine(&quot;Caught an expected exception:&quot;);\n            Console.WriteLine(entireException);\n\n            Console.WriteLine(&quot;\\n&quot;);\n            Console.WriteLine(&quot;Properties of the exception are as follows:&quot;);\n            Console.WriteLine(&quot;Message: &quot; + message);\n            Console.WriteLine(&quot;Source: &quot; + exceptionSource);\n            Console.WriteLine(&quot;Stack trace: &quot; + stackTrace);\n            Console.WriteLine(&quot;Help link: &quot; + helpLink);\n            Console.WriteLine(&quot;Target site&#39;s name: &quot; + siteName);\n            Console.WriteLine(&quot;Base exception message: &quot; + \n                baseExceptionMessage);\n            Console.WriteLine(&quot;Inner exception message: &quot; + \n                innerExceptionMessage);\n\n        }\n    }\n\n    private void setSerializationInfo(ref CryptographicException ex)\n    {\n        // Insert information about the exception into a serialized object.\n        FormatterConverter formatConverter = new FormatterConverter();\n        SerializationInfo serializationInfo =\n            new SerializationInfo(ex.GetType(), formatConverter);\n        StreamingContext streamingContext =\n            new StreamingContext(StreamingContextStates.All);\n\n        ex.GetObjectData(serializationInfo,streamingContext);\n    }\n}\n//\n// This sample produces the following output:\n//\n// Created an empty CryptographicException.\n// Created a CryptographicException with the following error code: -2146233295\n// Created a CryptographicException with the following error message: \n// Unexpected Operation exception.\n// Created a CryptographicException with the following error message: The\n// current operation is not supported. and the inner exception of \n// System.NullReferenceException: Object reference not set to an instance of\n// an object.\n// Created a CryptographicException with ({0:t}) as the format and (2/24/2004\n// 2:13:15 PM) as the message.\n// Caught an expected exception:\n// System.Security.Cryptography.CryptographicException: CryptoAPI\n// cryptographic service provider (CSP) for this implementation could not be\n// acquired. \n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(Int32\n// dwKeySize, CspParameters parameters)\n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n// CspParametersparameters)\n//  at CryptographicExceptionMembers.ShowProperties() in c:\\inetpub\\\n// vssolutions\\test\\testbuild\\consoleapplication1\\class1.cs:line 109\n//\n//\n// Properties of the exception are as follows:\n// Message: CryptoAPI cryptographic service provider (CSP) for this\n// implementation could not be acquired.\n// Source: mscorlib\n// Stack trace:    \n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n// Int32 dwKeySize, CspParameters parameters) \n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n// CspParameters parameters)\n//  at CryptographicExceptionMembers.ShowProperties() in c:\\inetpub\\\n// vssolutions\\test\\testbuild\\consoleapplication1\\class1.cs:line 109\n// Help link:\n// Target site&#39;s name: .ctor\n// Base exception message: CryptoAPI cryptographic service provider (CSP) for\n// this implementation could not be acquired.\n// Inner exception message:\n// This sample ended successfully;  press Enter to exit.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.CryptographicException#2\">Imports System\nImports System.Text\nImports System.Security.Cryptography\nImports System.Runtime.Serialization\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    &#39; Event handler for Run button.\n    Private Sub Button1_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        tbxOutput.Cursor = Cursors.WaitCursor\n        tbxOutput.Text = &quot;&quot;\n\n        TestConstructors()\n        ShowProperties()\n\n        &#39; Reset the cursor and conclude application.\n        tbxOutput.AppendText(vbCrLf + &quot;This sample completed &quot; + _\n            &quot;successfully; Exit to continue.&quot;)\n        tbxOutput.Cursor = Cursors.Default\n    End Sub\n\n    &#39; Test each public implementation of the CryptographicException\n    &#39; constructors.\n    Private Sub TestConstructors()\n        EmptyConstructor()\n        IntConstructor()\n        StringConstructor()\n        StringExceptionConstructor()\n        StringStringConstructor()\n    End Sub\n\n    Private Sub EmptyConstructor()\n        &#39; Construct a CryptographicException with no parameters.\n        Dim cryptographicException As New CryptographicException\n        WriteLine(&quot;Created an empty CryptographicException.&quot;)\n    End Sub\n\n    Private Sub IntConstructor()\n        &#39; Construct a CryptographicException using the error code for an\n        &#39; unexpected operation exception.\n        Dim exceptionNumber As Integer = &amp;H80131431\n        Dim cryptographicException As _\n            New CryptographicException(exceptionNumber)\n        WriteLine(&quot;Created a CryptographicException with the &quot; + _\n            &quot;following error code: &quot; + exceptionNumber.ToString())\n    End Sub\n\n    Private Sub StringConstructor()\n        &#39; Construct a CryptographicException using a custom error message.\n        Dim errorMessage As String = &quot;Unexpected Operation exception.&quot;\n        Dim cryptographicException As New CryptographicException(errorMessage)\n        WriteLine(&quot;Created a CryptographicException with the &quot; + _\n            &quot;following error message: &quot; + errorMessage)\n    End Sub\n\n    Private Sub StringExceptionConstructor()\n        &#39; Construct a CryptographicException using a custom error message\n        &#39; and an inner exception.\n        Dim errorMessage As String = &quot;The current operation is not supported.&quot;\n        Dim nullException As New NullReferenceException\n        Dim cryptographicException As _\n            New CryptographicException(errorMessage, nullException)\n        Write(&quot;Created a CryptographicException with the following error &quot;)\n        Write(&quot;message: &quot; + errorMessage + &quot; and the inner exception of &quot;)\n        WriteLine(nullException.ToString())\n    End Sub\n\n    Private Sub StringStringConstructor()\n        &#39; Create a CryptographicException using a time format and a the \n        &#39; current date.\n        Dim dateFormat As String = &quot;{0:t}&quot;\n        Dim timeStamp As String = DateTime.Now.ToString()\n        Dim cryptographicException As _\n            New CryptographicException(dateFormat, timeStamp)\n        Write(&quot;Created a CryptographicException with (&quot; + dateFormat)\n        WriteLine(&quot;) as the format and (&quot; + timeStamp + &quot;) as the message.&quot;)\n    End Sub\n\n    &#39; Construct an invalid DSACryptoServiceProvider to throw a\n    &#39; CryptographicException for introspection.\n    Private Sub ShowProperties()\n        Try\n            &#39; Create a DSACryptoServiceProvider with invalid provider type\n            &#39; code to throw a CryptographicException exception.\n            Dim cspParams As New CspParameters(44)\n            Dim DSAalg As New DSACryptoServiceProvider(cspParams)\n        Catch ex As CryptographicException\n            &#39; Retrieve the link to the help file for the exception.\n            Dim helpLink As String = ex.HelpLink\n\n            &#39; Retrieve the exception that caused the current\n            &#39; CryptographicException exception.\n            Dim innerException As System.Exception = ex.InnerException\n            Dim innerExceptionMessage As String = &quot;&quot;\n            If (Not innerException Is Nothing) Then\n                innerExceptionMessage = innerException.ToString()\n            End If\n\n            &#39; Retrieve the message that describes the exception.\n            Dim message As String = ex.Message\n\n            &#39; Retrieve the name of the application that caused the exception.\n            Dim exceptionSource As String = ex.Source\n\n            &#39; Retrieve the call stack at the time the exception occured.\n            Dim stackTrace As String = ex.StackTrace\n\n            &#39; Retrieve the method that threw the exception.\n            Dim targetSite As System.Reflection.MethodBase\n            targetSite = ex.TargetSite\n            Dim siteName As String = targetSite.Name\n\n            &#39; Retrieve the entire exception as a single string.\n            Dim entireException As String = ex.ToString()\n\n            &#39; GetObjectData\n            setSerializationInfo(ex)\n\n            &#39; Get the root exception that caused the current\n            &#39; CryptographicException exception.\n            Dim baseException As System.Exception = ex.GetBaseException()\n            Dim baseExceptionMessage As String = &quot;&quot;\n            If (Not baseException Is Nothing) Then\n                baseExceptionMessage = baseException.Message\n            End If\n\n            WriteLine(&quot;Caught an expected exception:&quot;)\n            WriteLine(entireException)\n\n            WriteLine(vbCrLf + &quot;Properties of the exception are as follows:&quot;)\n            WriteLine(&quot;Message: &quot; + message)\n            WriteLine(&quot;Source: &quot; + exceptionSource)\n            WriteLine(&quot;Stack trace: &quot; + stackTrace)\n            WriteLine(&quot;Help link: &quot; + helpLink)\n            WriteLine(&quot;Target site&#39;s name: &quot; + siteName)\n            WriteLine(&quot;Base exception message: &quot; + baseExceptionMessage)\n            WriteLine(&quot;Inner exception message: &quot; + innerExceptionMessage)\n\n        End Try\n    End Sub\n\n    Private Sub setSerializationInfo(ByRef ex As CryptographicException)\n        &#39; Insert information about the exception into a serialized object.\n        Dim formatConverter As New FormatterConverter\n        Dim serializationInfo As _\n            New SerializationInfo(ex.GetType(), formatConverter)\n        Dim streamingContext As _\n            New StreamingContext(StreamingContextStates.All)\n\n        ex.GetObjectData(serializationInfo, streamingContext)\n    End Sub\n\n    &#39; Write specified message to the output textbox.\n    Private Sub Write(ByVal message As String)\n        tbxOutput.AppendText(message)\n    End Sub\n\n    &#39; Write specified message with a carriage return to the output textbox.\n    Private Sub WriteLine(ByVal message As String)\n        tbxOutput.AppendText(message + vbCrLf)\n    End Sub\n\n    &#39; Event handler for Exit button.\n    Private Sub Button2_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button2.Click\n\n        Application.Exit()\n    End Sub\n#Region &quot; Windows Form Designer generated code &quot;\n\n    Public Sub New()\n        MyBase.New()\n\n        &#39;This call is required by the Windows Form Designer.\n        InitializeComponent()\n\n        &#39;Add any initialization after the InitializeComponent() call\n\n    End Sub\n\n    &#39;Form overrides dispose to clean up the component list.\n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            If Not (components Is Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    &#39;Required by the Windows Form Designer\n    Private components As System.ComponentModel.IContainer\n\n    &#39;NOTE: The following procedure is required by the Windows Form Designer\n    &#39;It can be modified using the Windows Form Designer.  \n    &#39;Do not modify it using the code editor.\n    Friend WithEvents Panel2 As System.Windows.Forms.Panel\n    Friend WithEvents Panel1 As System.Windows.Forms.Panel\n    Friend WithEvents Button1 As System.Windows.Forms.Button\n    Friend WithEvents Button2 As System.Windows.Forms.Button\n    Friend WithEvents tbxOutput As System.Windows.Forms.RichTextBox\n    &lt;System.Diagnostics.DebuggerStepThrough()&gt; _\n    Private Sub InitializeComponent()\n        Me.Panel2 = New System.Windows.Forms.Panel\n        Me.Button1 = New System.Windows.Forms.Button\n        Me.Button2 = New System.Windows.Forms.Button\n        Me.Panel1 = New System.Windows.Forms.Panel\n        Me.tbxOutput = New System.Windows.Forms.RichTextBox\n        Me.Panel2.SuspendLayout()\n        Me.Panel1.SuspendLayout()\n        Me.SuspendLayout()\n        &#39;\n        &#39;Panel2\n        &#39;\n        Me.Panel2.Controls.Add(Me.Button1)\n        Me.Panel2.Controls.Add(Me.Button2)\n        Me.Panel2.Dock = System.Windows.Forms.DockStyle.Bottom\n        Me.Panel2.DockPadding.All = 20\n        Me.Panel2.Location = New System.Drawing.Point(0, 320)\n        Me.Panel2.Name = &quot;Panel2&quot;\n        Me.Panel2.Size = New System.Drawing.Size(616, 64)\n        Me.Panel2.TabIndex = 1\n        &#39;\n        &#39;Button1\n        &#39;\n        Me.Button1.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button1.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button1.Location = New System.Drawing.Point(446, 20)\n        Me.Button1.Name = &quot;Button1&quot;\n        Me.Button1.Size = New System.Drawing.Size(75, 24)\n        Me.Button1.TabIndex = 2\n        Me.Button1.Text = &quot;&amp;Run&quot;\n        &#39;\n        &#39;Button2\n        &#39;\n        Me.Button2.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button2.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button2.Location = New System.Drawing.Point(521, 20)\n        Me.Button2.Name = &quot;Button2&quot;\n        Me.Button2.Size = New System.Drawing.Size(75, 24)\n        Me.Button2.TabIndex = 3\n        Me.Button2.Text = &quot;E&amp;xit&quot;\n        &#39;\n        &#39;Panel1\n        &#39;\n        Me.Panel1.Controls.Add(Me.tbxOutput)\n        Me.Panel1.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.Panel1.DockPadding.All = 20\n        Me.Panel1.Location = New System.Drawing.Point(0, 0)\n        Me.Panel1.Name = &quot;Panel1&quot;\n        Me.Panel1.Size = New System.Drawing.Size(616, 320)\n        Me.Panel1.TabIndex = 2\n        &#39;\n        &#39;tbxOutput\n        &#39;\n        Me.tbxOutput.AccessibleDescription = _\n            &quot;Displays output from application.&quot;\n        Me.tbxOutput.AccessibleName = &quot;Output textbox.&quot;\n        Me.tbxOutput.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.tbxOutput.Location = New System.Drawing.Point(20, 20)\n        Me.tbxOutput.Name = &quot;tbxOutput&quot;\n        Me.tbxOutput.Size = New System.Drawing.Size(576, 280)\n        Me.tbxOutput.TabIndex = 1\n        Me.tbxOutput.Text = &quot;Click the Run button to run the application.&quot;\n        &#39;\n        &#39;Form1\n        &#39;\n        Me.AutoScaleBaseSize = New System.Drawing.Size(6, 15)\n        Me.ClientSize = New System.Drawing.Size(616, 384)\n        Me.Controls.Add(Me.Panel1)\n        Me.Controls.Add(Me.Panel2)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;CryptographicException&quot;\n        Me.Panel2.ResumeLayout(False)\n        Me.Panel1.ResumeLayout(False)\n        Me.ResumeLayout(False)\n\n    End Sub\n\n#End Region\nEnd Class\n&#39;\n&#39; This sample produces the following output:\n&#39;\n&#39; Created an empty CryptographicException.\n&#39; Created a CryptographicException with the following error code: -2146233295\n&#39; Created a CryptographicException with the following error message:\n&#39; Unexpected Operation exception.\n&#39; Created a CryptographicException with the following error message:\n&#39; The current operation is not supported. and the inner exception of \n&#39; System.NullReferenceException: Object reference not set to an instance of an\n&#39; object.\n&#39; Created a CryptographicException with ({0:t}) as the format and (2/24/2004 \n&#39; 2:19:32 PM) as the message.\n&#39; Caught an expected exception:\n&#39; System.Security.Cryptography.CryptographicException: CryptoAPI cryptographic\n&#39; service provider (CSP) for this implementation could not be acquired.\n&#39;  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n&#39; Int32 dwKeySize, CspParameters parameters)\n&#39;  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n&#39; CspParameters parameters)\n&#39;  at WindowsApplication1.Form1.ShowProperties() in \n&#39; C:\\WindowsApplication1\\Form1.vb:line 103\n&#39;\n&#39; Properties of the exception are as follows:\n&#39; Message: CryptoAPI cryptographic service provider (CSP) for this\n&#39; implementation could not be acquired.\n&#39; Source: mscorlib\n&#39; Stack trace:    at System.Security.Cryptography.DSACryptoServiceProvider..\n&#39; ctor(Int32 dwKeySize, CspParameters parameters)\n&#39;  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n&#39; CspParameters parameters)\n&#39;  at WindowsApplication1.Form1.ShowProperties() in \n&#39; C:\\WindowsApplication1\\Form1.vb:line 103\n&#39; Help link: \n&#39; Target site&#39;s name: .ctor\n&#39; Base exception message: CryptoAPI cryptographic service provider (CSP) for\n&#39; this implementation could not be acquired.\n&#39; Inner exception message: \n&#39; \n&#39; This sample completed successfully; Exit to continue\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.CryptographicException#2\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Security::Cryptography;\nusing namespace System::Runtime::Serialization;\n\nref class CryptographicExceptionMembers\n{\npublic:\n\n   static void Run()\n   {\n      CryptographicExceptionMembers^ testRun = gcnew CryptographicExceptionMembers;\n      testRun-&gt;TestConstructors();\n      testRun-&gt;ShowProperties();\n      Console::WriteLine( L&quot;This sample ended successfully; &quot;\n      L&quot; press Enter to exit.&quot; );\n      Console::ReadLine();\n   }\n\nprivate:\n   // Test each public implementation of the CryptographicException\n   // constructors.\n   void TestConstructors()\n   {\n      EmptyConstructor();\n      IntConstructor();\n      StringConstructor();\n      StringExceptionConstructor();\n      StringStringConstructor();\n   }\n\n   void EmptyConstructor()\n   {\n      // Construct a CryptographicException with no parameters.\n      CryptographicException^ cryptographicException = gcnew CryptographicException;\n      \n      Console::WriteLine( L&quot;Created an empty CryptographicException.&quot; );\n   }\n\n   void IntConstructor()\n   {\n      // Construct a CryptographicException using the error code for an\n      // unexpected operation exception.\n      int exceptionNumber = (int)0x80131431;\n      CryptographicException^ cryptographicException = gcnew CryptographicException( exceptionNumber );\n\n      Console::WriteLine( L&quot;Created a CryptographicException with the &quot;\n      L&quot;following error code: {0}&quot;, exceptionNumber );\n   }\n\n   void StringConstructor()\n   {\n      // Construct a CryptographicException using a custom error message.\n      String^ errorMessage = (L&quot;Unexpected Operation exception.&quot;);\n      CryptographicException^ cryptographicException = gcnew CryptographicException( errorMessage );\n\n      Console::WriteLine( L&quot;Created a CryptographicException with the &quot;\n      L&quot;following error message: {0}&quot;, errorMessage );\n   }\n\n   void StringExceptionConstructor()\n   {\n      // Construct a CryptographicException using a custom error message\n      // and an inner exception.\n      String^ errorMessage = (L&quot;The current operation is not supported.&quot;);\n      NullReferenceException^ nullException = gcnew NullReferenceException;\n      CryptographicException^ cryptographicException = gcnew CryptographicException( errorMessage,nullException );\n\n      Console::WriteLine( L&quot;Created a CryptographicException with the &quot;\n      L&quot;following error message: {0} and the inner exception of {1}&quot;, errorMessage, nullException );\n   }\n\n   void StringStringConstructor()\n   {\n      // Create a CryptographicException using a time format and a the\n      // current date.\n      String^ dateFormat = L&quot;{0:t}&quot;;\n      String^ timeStamp = (DateTime::Now.ToString());\n      CryptographicException^ cryptographicException = gcnew CryptographicException( dateFormat,timeStamp );\n\n      Console::WriteLine( L&quot;Created a CryptographicException with ({0}) as the format and ({1}) as the message.&quot;, dateFormat, timeStamp );\n   }\n\n   // Construct an invalid DSACryptoServiceProvider to throw a\n   // CryptographicException for introspection.\n   void ShowProperties()\n   {\n      try\n      {\n         // Create a DSACryptoServiceProvider with invalid provider type\n         // code to throw a CryptographicException exception.\n         CspParameters^ cspParams = gcnew CspParameters( 44 );\n         DSACryptoServiceProvider^ DSAalg = gcnew DSACryptoServiceProvider( cspParams );\n      }\n      catch ( CryptographicException^ ex ) \n      {\n         // Retrieve the link to the help file for the exception.\n         String^ helpLink = ex-&gt;HelpLink;\n\n         // Retrieve the exception that caused the current\n         // CryptographicException exception.\n         System::Exception^ innerException = ex-&gt;InnerException;\n\n         String^ innerExceptionMessage = L&quot;&quot;;\n         if ( innerException != nullptr )\n         {\n            innerExceptionMessage = innerException-&gt;ToString();\n         }\n         \n         // Retrieve the message that describes the exception.\n         String^ message = ex-&gt;Message;\n\n         // Retrieve the name of the application that caused the exception.\n         String^ exceptionSource = ex-&gt;Source;\n\n         // Retrieve the call stack at the time the exception occured.\n         String^ stackTrace = ex-&gt;StackTrace;\n\n         // Retrieve the method that threw the exception.\n         System::Reflection::MethodBase^ targetSite = ex-&gt;TargetSite;\n\n         String^ siteName = targetSite-&gt;Name;\n         \n         // Retrieve the entire exception as a single string.\n         String^ entireException = ex-&gt;ToString();\n\n         // GetObjectData\n         setSerializationInfo(  &amp;ex );\n         \n         // Get the root exception that caused the current\n         // CryptographicException exception.\n         System::Exception^ baseException = ex-&gt;GetBaseException();\n\n         String^ baseExceptionMessage = L&quot;&quot;;\n         if ( baseException != nullptr )\n         {\n            baseExceptionMessage = baseException-&gt;Message;\n         }\n         Console::WriteLine( L&quot;Caught an expected exception:&quot; );\n         Console::WriteLine( entireException );\n         Console::WriteLine( L&quot;\\n&quot; );\n         Console::WriteLine( L&quot;Properties of the exception are as follows:&quot; );\n         Console::WriteLine( L&quot;Message: {0}&quot;, message );\n         Console::WriteLine( L&quot;Source: {0}&quot;, exceptionSource );\n         Console::WriteLine( L&quot;Stack trace: {0}&quot;, stackTrace );\n         Console::WriteLine( L&quot;Help link: {0}&quot;, helpLink );\n         Console::WriteLine( L&quot;Target site&#39;s name: {0}&quot;, siteName );\n         Console::WriteLine( L&quot;Base exception message: {0}&quot;, baseExceptionMessage );\n         Console::WriteLine( L&quot;Inner exception message: {0}&quot;, innerExceptionMessage );\n      }\n\n   }\n\n   void setSerializationInfo( interior_ptr&lt;CryptographicException^&gt; ex )\n   {\n      // Insert information about the exception into a serialized object.\n      FormatterConverter^ formatConverter = gcnew FormatterConverter;\n      SerializationInfo^ serializationInfo = gcnew SerializationInfo( ( *ex)-&gt;GetType(),formatConverter );\n      StreamingContext streamingContext = StreamingContext(StreamingContextStates::All);\n      ( *ex)-&gt;GetObjectData( serializationInfo, streamingContext );\n   }\n\n};\n\nvoid main()\n{\n   CryptographicExceptionMembers::Run();\n}\n\n//\n// This sample produces the following output:\n//\n// Created an empty CryptographicException.\n// Created a CryptographicException with the following error code: -2146233295\n// Created a CryptographicException with the following error message:\n// Unexpected Operation exception.\n// Created a CryptographicException with the following error message: The\n// current operation is not supported. and the inner exception of\n// System.NullReferenceException: Object reference not set to an instance of\n// an object.\n// Created a CryptographicException with ({0:t}) as the format and (2/24/2004\n// 2:13:15 PM) as the message.\n// Caught an expected exception:\n// System.Security.Cryptography.CryptographicException: CryptoAPI\n// cryptographic service provider (CSP) for this implementation could not be\n// acquired.\n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(Int32\n// dwKeySize, CspParameters parameters)\n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n// CspParametersparameters)\n//  at CryptographicExceptionMembers.ShowProperties() in c:\\inetpub\\\n// vssolutions\\test\\testbuild\\consoleapplication1\\class1.cs:line 109\n//\n//\n// Properties of the exception are as follows:\n// Message: CryptoAPI cryptographic service provider (CSP) for this\n// implementation could not be acquired.\n// Source: mscorlib\n// Stack trace:\n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n// Int32 dwKeySize, CspParameters parameters)\n//  at System.Security.Cryptography.DSACryptoServiceProvider..ctor(\n// CspParameters parameters)\n//  at CryptographicExceptionMembers.ShowProperties() in c:\\inetpub\\\n// vssolutions\\test\\testbuild\\consoleapplication1\\class1.cs:line 109\n// Help link:\n// Target site&#39;s name: .ctor\n// Base exception message: CryptoAPI cryptographic service provider (CSP) for\n// this implementation could not be acquired.\n// Inner exception message:\n// This sample ended successfully;  press Enter to exit.\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>CryptographicException uses the HRESULT CORSEC_E_CRYPTO, unless an alternate error code is specified.  </p>\n<p> For a list of initial property values for an instance of CryptographicException, see the constructor.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_CryptographicException__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CryptographicException()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> class with default properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CryptographicException ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td><code>null</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The localized error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_CryptographicException__ctor_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CryptographicException(Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> class with the specified <code>HRESULT</code> error code.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CryptographicException (int hr);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hr</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>HRESULT</code> error code.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CryptographicException constructor accepts a system <code>HRESULT</code> error code and sets the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property to a localized message that corresponds to the <code>HRESULT</code>.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td><code>null</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The localized error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_CryptographicException__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CryptographicException(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> class with a specified error message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CryptographicException (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The error message that explains the reason for the exception.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td><code>null</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_CryptographicException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CryptographicException(SerializationInfo, StreamingContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> class with serialized data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected CryptographicException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object that holds the serialized object data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The contextual information about the source or destination.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_CryptographicException__ctor_System_String_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CryptographicException(String, Exception)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CryptographicException (string message, Exception inner);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The error message that explains the reason for the exception.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>inner</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The exception that is the cause of the current exception. If the <code>inner</code> parameter is not <code>null</code>, the current exception is raised in a <code>catch</code> block that handles the inner exception.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property returns the same value that is passed into the constructor, or <code>null</code> if the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property does not supply the inner exception value to the constructor.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>The inner exception reference.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_CryptographicException__ctor_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CryptographicException(String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> class with a specified error message in the specified format.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CryptographicException (string format, string insert);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The format used to output the error message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>insert</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The error message that explains the reason for the exception.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td><code>null</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.CryptographicException.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CryptographicException\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CryptographicException..ctor\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"7407b499-447e-090b-0ba2-c5ec73c2228c\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when an error occurs during a cryptographic operation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.CryptographicException\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.CryptographicException.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.CryptographicException","System.Security.Cryptography.CryptographicException..ctor"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.CryptographicException","System::Security::Cryptography::CryptographicException","System.Security.Cryptography.CryptographicException.#ctor","System::Security::Cryptography::CryptographicException::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"7407b499-447e-090b-0ba2-c5ec73c2228c","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptographicException.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CryptographicException class | Microsoft Docs","_op_ogTitle":"CryptographicException class","description":"The exception that is thrown when an error occurs during a cryptographic operation.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.CryptographicException","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.cryptographicexception","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.cryptographicexception","fileRelativePath":"api/System.Security.Cryptography.CryptographicException.html"},"themesRelativePathToOutputRoot":"_themes/"}