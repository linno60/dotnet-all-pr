{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CultureTypes</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the types of culture lists that can be retrieved using the <span class=\"xref\">stem.Globalization.CultureInfo.GetCultures*</span> method.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic enum CultureTypes</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div><span class=\"lang-csharp\">CultureTypes</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>These culture type values are returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CultureTypes_\" data-linktype=\"relative-path\">CultureTypes</a> property, and also serve as a filter that limits the cultures returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_GetCultures_\" data-linktype=\"relative-path\">GetCultures</a> method. For more information on cultures, see <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>.  </p>\n<p> Generally, your application should enumerate all cultures, using the AllCultures value. This allows enumeration of custom cultures, as well as the other culture types.  </p>\n<p> Note that the FrameworkCultures and WindowsOnlyCultures members have been deprecated.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_AllCultures\">\r\n      \t\t\t<span class=\"lang-csharp\">AllCultures</span>\r\n      \t</td>\r\n      \t<td><p>All cultures that ship with the .NET Framework, including neutral and specific cultures, cultures installed in the Windows operating system, and custom cultures created by the user.  </p>\n<p> AllCultures is a composite field that includes the NeutralCultures, SpecificCultures, and InstalledWin32Cultures values.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_FrameworkCultures\">\r\n      \t\t\t<span class=\"lang-csharp\">FrameworkCultures</span>\r\n      \t</td>\r\n      \t<td><p>This member is deprecated; using this value with <span class=\"xref\">stem.Globalization.CultureInfo.GetCultures*</span> returns neutral and specific cultures shipped with the .NET Framework 2.0.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_InstalledWin32Cultures\">\r\n      \t\t\t<span class=\"lang-csharp\">InstalledWin32Cultures</span>\r\n      \t</td>\r\n      \t<td><p>All cultures that are installed in the Windows operating system. Note that not all cultures supported by the .NET Framework are installed in the operating system.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_NeutralCultures\">\r\n      \t\t\t<span class=\"lang-csharp\">NeutralCultures</span>\r\n      \t</td>\r\n      \t<td><p>Cultures that are associated with a language but are not specific to a country/region. The names of .NET Framework cultures consist of the lowercase two-letter code derived from ISO 639-1. For example: &quot;en&quot; (English) is a neutral culture.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_ReplacementCultures\">\r\n      \t\t\t<span class=\"lang-csharp\">ReplacementCultures</span>\r\n      \t</td>\r\n      \t<td><p>Custom cultures created by the user that replace cultures shipped with the .NET Framework.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_SpecificCultures\">\r\n      \t\t\t<span class=\"lang-csharp\">SpecificCultures</span>\r\n      \t</td>\r\n      \t<td><p>Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is &quot;<languagecode2>-<country egioncode2=\"\">&quot;, where <languagecode2> is a lowercase two-letter code derived from ISO 639-1 and <country egioncode2=\"\"> is an uppercase two-letter code derived from ISO 3166. For example, &quot;en-US&quot; for English (United States) is a specific culture.<p>\n</country></languagecode2></country></languagecode2></td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_UserCustomCulture\">\r\n      \t\t\t<span class=\"lang-csharp\">UserCustomCulture</span>\r\n      \t</td>\r\n      \t<td><p>Custom cultures created by the user.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Globalization_CultureTypes_WindowsOnlyCultures\">\r\n      \t\t\t<span class=\"lang-csharp\">WindowsOnlyCultures</span>\r\n      \t</td>\r\n      \t<td><p>This member is deprecated. If it is used as an argument to the <span class=\"xref\">stem.Globalization.CultureInfo.GetCultures*</span> method, the method returns an empty array.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.CultureTypes.yml\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.AllCultures\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.FrameworkCultures\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.InstalledWin32Cultures\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.NeutralCultures\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.ReplacementCultures\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.SpecificCultures\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.UserCustomCulture\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CultureTypes.WindowsOnlyCultures\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-22 03:41 AM\">\r\n<meta name=\"document_id\" content=\"cadbc09c-abac-6a04-c43a-d39258b53bcf\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the types of culture lists that can be retrieved using the  method.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.globalization/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Globalization.CultureTypes\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.CultureTypes.yml","open_to_public_contributors":false,"api_name":["System.Globalization.CultureTypes","System.Globalization.CultureTypes.AllCultures","System.Globalization.CultureTypes.FrameworkCultures","System.Globalization.CultureTypes.InstalledWin32Cultures","System.Globalization.CultureTypes.NeutralCultures","System.Globalization.CultureTypes.ReplacementCultures","System.Globalization.CultureTypes.SpecificCultures","System.Globalization.CultureTypes.UserCustomCulture","System.Globalization.CultureTypes.WindowsOnlyCultures"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Globalization.CultureTypes","System::Globalization::CultureTypes","System.Globalization.CultureTypes.AllCultures","System::Globalization::CultureTypes::AllCultures","System.Globalization.CultureTypes.FrameworkCultures","System::Globalization::CultureTypes::FrameworkCultures","System.Globalization.CultureTypes.InstalledWin32Cultures","System::Globalization::CultureTypes::InstalledWin32Cultures","System.Globalization.CultureTypes.NeutralCultures","System::Globalization::CultureTypes::NeutralCultures","System.Globalization.CultureTypes.ReplacementCultures","System::Globalization::CultureTypes::ReplacementCultures","System.Globalization.CultureTypes.SpecificCultures","System::Globalization::CultureTypes::SpecificCultures","System.Globalization.CultureTypes.UserCustomCulture","System::Globalization::CultureTypes::UserCustomCulture","System.Globalization.CultureTypes.WindowsOnlyCultures","System::Globalization::CultureTypes::WindowsOnlyCultures"],"dev_langs":["csharp"],"updated_at":"2017-03-22 03:41 AM","document_id":"cadbc09c-abac-6a04-c43a-d39258b53bcf","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/xml/System.Globalization/CultureTypes.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CultureTypes enum | Microsoft Docs","_op_ogTitle":"CultureTypes enum","description":"Defines the types of culture lists that can be retrieved using the  method.\n","toc_asset_id":"api/_splitted/System.Globalization/toc.json","toc_rel":"_splitted/System.Globalization/toc.json","source_url":"","ms.assetid":"System.Globalization.CultureTypes","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/api/system.globalization.culturetypes","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/api/system.globalization.culturetypes","fileRelativePath":"api/System.Globalization.CultureTypes.html"},"themesRelativePathToOutputRoot":"_themes/"}