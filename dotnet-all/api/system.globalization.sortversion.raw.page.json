{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SortVersion</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides information about the version of Unicode used to compare and order strings.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">SortVersion</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example contains a portion of the source code from an application that uses the SortVersion class to ensure that the native names of <a class=\"xref\" href=\"system.globalization.regioninfo\" data-linktype=\"relative-path\">RegionInfo</a> objects are ordered appropriately for the current system and current culture. It uses the <a class=\"xref\" href=\"system.io.binaryreader\" data-linktype=\"relative-path\">BinaryReader</a> and <a class=\"xref\" href=\"system.io.binarywriter\" data-linktype=\"relative-path\">BinaryWriter</a> objects to store and retrieve ordered data from a data file named <code>Regions.dat</code> rather than retrieving and ordering data each time the application is run. The example first checks to determine whether the data file exists. If it does not, it creates the data and sets the <code>reindex</code> flag, which indicates that the data must be resorted and saved again. Otherwise, it retrieves the data and compares the saved SortVersion object with the SortVersion object for the current culture on the current system. If they are not equal, or if the <code>reindex</code> flag had been set previously, it resorts the <a class=\"xref\" href=\"system.globalization.regioninfo\" data-linktype=\"relative-path\">RegionInfo</a> data.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.SortVersion#1\">using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.IO;\nusing System.Text;\n\npublic class Example : IComparer\n{\n   private const string FILENAME = @&quot;.\\Regions.dat&quot;;\n\n   private struct Region\n   {\n      internal Region(string id, string name) \n      {\n         this.Id = id;\n         this.NativeName = name;\n      }\n      \n      public string Id;\n      public string NativeName;\n      \n      public override string ToString()\n      {\n         return this.NativeName;\n      }\n   }\n\n   public static void Main()\n   {\n      bool reindex = false;\n      \n      Region[] regions;\n      SortVersion ver = null;\n\n      // If the data has not been saved, create it.\n      if (! File.Exists(FILENAME)) { \n         regions = GenerateData();\n         ver = CultureInfo.CurrentCulture.CompareInfo.Version;  \n         reindex = true;\n      }\n      // Retrieve the existing data.\n      else {\n         regions = RestoreData(out ver);\n      }\n\n      // Determine whether the current ordering is valid; if not, reorder.\n      if (reindex || ver != CultureInfo.CurrentCulture.CompareInfo.Version) { \n         Array.Sort(regions, new Example());      \n         // Save newly reordered data.\n         SaveData(regions);\n      }\n      \n      // Continue with application...\n   }\n\n   private static Region[] GenerateData()\n   {\n      List&lt;Region&gt; regions = new List&lt;Region&gt;();\n\n      foreach (var culture in CultureInfo.GetCultures(CultureTypes.AllCultures)) {\n         if (culture.IsNeutralCulture | culture.Equals(CultureInfo.InvariantCulture))\n            continue;\n            \n         RegionInfo region = new RegionInfo(culture.Name);\n         regions.Add(new Region(region.Name, region.NativeName));\n      }\n      return regions.ToArray();\n   }\n\n   private static Region[] RestoreData(out SortVersion ver)\n   {\n      List&lt;Region&gt; regions = new List&lt;Region&gt;();\n      \n      BinaryReader rdr = new BinaryReader(File.Open(FILENAME, FileMode.Open));\n      \n      int sortVer = rdr.ReadInt32();\n      Guid sortId = Guid.Parse(rdr.ReadString());\n      ver = new SortVersion(sortVer, sortId);\n      \n      string id, name;\n      while (rdr.PeekChar() != -1) {\n         id = rdr.ReadString();\n         name = rdr.ReadString();\n         regions.Add(new Region(id, name));      \n      }\n      return regions.ToArray();\n   }\n\n   private static void SaveData(Region[] regions)\n   {\n      SortVersion ver = CultureInfo.CurrentCulture.CompareInfo.Version;\n\n      BinaryWriter wrtr = new BinaryWriter(File.Open(FILENAME, FileMode.Create));\n      wrtr.Write(ver.FullVersion); \n      wrtr.Write(ver.SortId.ToString()); \n      \n      foreach (var region in regions) {\n         wrtr.Write(region.Id);\n         wrtr.Write(region.NativeName);\n      }\n      wrtr.Close();\n   }\n\n   public int Compare(object o1, object o2)\n   {\n        // Assume that all casts succeed.\n        Region r1 = (Region) o1;\n        Region r2 = (Region) o2;\n        \n        return String.Compare(r1.NativeName, r2.NativeName, \n                              StringComparison.CurrentCulture);        \n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.SortVersion#1\">Imports System.Collections\nImports System.Collections.Generic\nImports System.Globalization\nImports System.IO\nImports System.Text\n\nPublic Class Example : Implements IComparer\n   Private Const FILENAME As String = &quot;.\\Regions.dat&quot;\n   \n   Private Structure Region\n      Friend Sub New(id As String, name As String)\n         Me.Id = id\n         Me.NativeName = name\n      End Sub\n      \n      Dim Id As String\n      Dim NativeName As String\n      \n      Public Overrides Function ToString() As String\n         Return Me.NativeName\n      End Function\n   End Structure\n   \n   Public Shared Sub Main()\n      Dim reindex As Boolean = False\n      \n      Dim regions() As Region\n      Dim ver As SortVersion = Nothing\n\n      &#39; If the data has not been saved, create it.\n      If Not File.Exists(FILENAME) Then \n         regions = GenerateData()\n         ver = CultureInfo.CurrentCulture.CompareInfo.Version  \n         reindex = True\n      &#39; Retrieve the existing data.\n      Else\n         regions = RestoreData(ver)\n      End If\n\n      &#39; Determine whether the current ordering is valid; if not, reorder.\n      If reindex OrElse ver &lt;&gt; CultureInfo.CurrentCulture.CompareInfo.Version Then \n         Array.Sort(regions, New Example())      \n         &#39; Save newly reordered data.\n         SaveData(regions)\n      End If\n      \n      &#39; Continue with application...\n   End Sub\n\n   Private Shared Function GenerateData() As Region()\n      Dim regions As New List(Of Region)()\n\n      For Each culture In CultureInfo.GetCultures(CultureTypes.AllCultures)\n         If culture.IsNeutralCulture Or culture.Equals(CultureInfo.InvariantCulture) Then Continue For\n            \n         Dim region As New RegionInfo(culture.Name)\n         regions.Add(New Region(region.Name, region.NativeName))\n      Next\n      Return regions.ToArray()\n   End Function\n   \n   Private Shared Function RestoreData(ByRef ver As SortVersion) As Region()\n      Dim regions As New List(Of Region)\n      \n      Dim rdr As New BinaryReader(File.Open(FILENAME, FileMode.Open))\n      \n      Dim sortVer As Integer = rdr.ReadInt32\n      Dim sortId As Guid = Guid.Parse(rdr.ReadString())\n      ver = New SortVersion(sortVer, sortId)\n      \n      Dim id As String, name As String\n      Do While rdr.PeekChar &lt;&gt; -1\n         id = rdr.ReadString()\n         name = rdr.ReadString()\n         regions.Add(New Region(id, name))      \n      Loop\n      Return regions.ToArray()\n   End Function\n   \n   Private Shared Sub SaveData(regions As Region())\n      Dim ver As SortVersion = CultureInfo.CurrentCulture.CompareInfo.Version\n\n      Dim wrtr As New BinaryWriter(File.Open(FILENAME, FileMode.Create))\n      wrtr.Write(ver.FullVersion) \n      wrtr.Write(ver.SortId.ToString()) \n      \n      For Each region In regions\n         wrtr.Write(region.Id)\n         wrtr.Write(region.NativeName)\n      Next\n      wrtr.Close()\n   End Sub\n\n   Private Function SortByNativeName(o1 As Object, o2 As Object) As Integer _\n           Implements IComparer.Compare\n        &#39; Assume that all conversions succeed.\n        Dim r1 As Region = CType(o1, Region)\n        Dim r2 As Region = CType(o2, Region)\n        \n        Return String.Compare(r1.NativeName, r2.NativeName, \n                              StringComparison.CurrentCulture)         \n   End Function\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>From the .NET Framework 2.0 Service Pack 1 through the .NET Framework 4, each version of the.NET Framework has included tables that contain sort weights and data on string normalization and that are based on a particular version of Unicode. In the .NET Framework 4.5, the presence of these tables depends on the operating system:  </p>\n<ul>\n<li><p>On Windows 7 and previous versions of the Windows operating system, the tables continue to be used for comparing and ordering strings.  </p>\n</li>\n<li><p>On Windows 8, the .NET Framework delegates string comparison and ordering operations to the operating system.  </p>\n</li>\n</ul>\n<p> Consequently, the result of a string comparison can depend not only on the .NET Framework version, but also on the operating system version, as the following table shows. Note that this list of supported Unicode versions applies to character comparison and sorting only; it does not apply to classification of Unicode characters by category.  </p>\n<table>\n<thead>\n<tr>\n<th>.NET Framework version</th>\n<th>Operating system</th>\n<th>Unicode version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.NET Framework 4</td>\n<td>All operating systems</td>\n<td>Unicode 5.0</td>\n</tr>\n<tr>\n<td>.NET Framework 4.5 and later versions of the .NET Framework</td>\n<td>Windows 7</td>\n<td>Unicode 5.0</td>\n</tr>\n<tr>\n<td>.NET Framework 4.5 and later versions of the .NET Framework</td>\n<td>Windows 8 and later Windows operating system versions</td>\n<td>Unicode 6.0</td>\n</tr>\n</tbody>\n</table>\n<p> On Windows 8, because the version of Unicode used in string comparison and ordering depends on the version of the operating system, the results of string comparison may differ even for applications that run on a specific version of the .NET Framework.  </p>\n<p> The SortVersion class provides information about the Unicode version used by the .NET Framework for string comparison and ordering. It enables developers to write applications that can detect and successfully handle changes in the version of Unicode that is used to compare and sort an application&#39;s strings.  </p>\n<p> You can instantiate a SortVersion object in two ways:  </p>\n<ul>\n<li><p>By calling the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion__ctor_\" data-linktype=\"relative-path\">SortVersion</a> constructor, which instantiates a new SortVersion object based on a version number and sort ID. This constructor is most useful when recreating a SortVersion object from saved data.  </p>\n</li>\n<li><p>By retrieving the value of the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_Version_\" data-linktype=\"relative-path\">Version</a> property. This property provides information about the Unicode version used by the .NET Framework on which the application is running.  </p>\n</li>\n</ul>\n<p> The SortVersion class has two properties, <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> and <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a>, that indicate the Unicode version and the specific culture used for string comparison. The <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> property is an arbitrary numeric value that reflects the Unicode version used for string comparison, and the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a> property is an arbitrary <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> that reflects the culture whose conventions are used for string comparison. The values of these two properties are important only when you compare two SortVersion objects by using the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_Equals_\" data-linktype=\"relative-path\">Equals</a> method, the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_op_Equality_\" data-linktype=\"relative-path\">op_Equality</a> operator, or the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_op_Inequality_\" data-linktype=\"relative-path\">op_Inequality</a> operator.  </p>\n<p> You typically use a SortVersion object when saving or retrieving some form of culture-sensitive, ordered string data, such as indexes or the literal strings themselves. This requires the following steps:  </p>\n<ol>\n<li><p>When the ordered string data is saved, the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> and <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a> property values are also saved.  </p>\n</li>\n<li><p>When the ordered string data is retrieved, you can recreate the SortVersion object used for ordering the strings by calling the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion__ctor_\" data-linktype=\"relative-path\">SortVersion</a> constructor.  </p>\n</li>\n<li><p>This newly instantiated SortVersion object is compared with a SortVersion object that reflects the culture whose conventions are used to order the string data.  </p>\n</li>\n<li><p>If the two SortVersion objects are not equal, the string data must be reordered.  </p>\n</li>\n</ol>\n<p> The example provides an illustration.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion__ctor_System_Int32_System_Guid_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SortVersion(Int32, Guid)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new instance of the <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SortVersion (int fullVersion, Guid sortId);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fullVersion</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A version number.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sortId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A sort ID.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor instantiates a <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object with the specified version and sort ID. The <code>fullVersion</code> argument is assigned to the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> property. The <code>sortId</code> argument is assigned to the <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a> property.  </p>\n<p> This constructor is useful for recreating a <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object from data that has been serialized or saved. This version can then be compared with the current application version to determine whether the version of Unicode used to display and order the application&#39;s strings is available.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion_FullVersion_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion_FullVersion\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FullVersion</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the full version number of the <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int FullVersion { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The version number of this <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the FullVersion property reflects the Unicode version used to normalize and compare strings.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion_SortId_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion_SortId\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SortId</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a globally unique identifier for this <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Guid SortId { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A globally unique identifier for this <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the SortId property reflects the culture whose conventions influence string comparison and sorting.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion_Equals_System_Globalization_SortVersion_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(SortVersion)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value that indicates whether this <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> instance is equal to a specified <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Equals (System.Globalization.SortVersion other);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>other</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare with this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>other</code> represents the same version as this instance; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> objects are equal if their <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> and <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a> properties are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value that indicates whether this <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> instance is equal to a specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object to compare with this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>obj</code> is a <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> object that represents the same version as this instance; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> objects are equal if their <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> and <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a> properties are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion_GetHashCode_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a hash code for this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A 32-bit signed integer hash code.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Operators\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion_op_Equality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion_op_Equality_System_Globalization_SortVersion_System_Globalization_SortVersion_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Equality(SortVersion, SortVersion)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether two <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> instances are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Equality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>left</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first instance to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>right</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second instance to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the values of <code>left</code> and <code>right</code> are equal; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> objects are equal if both are <code>null</code>, or if their <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> and <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a> properties are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortVersion_op_Inequality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortVersion_op_Inequality_System_Globalization_SortVersion_System_Globalization_SortVersion_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Inequality(SortVersion, SortVersion)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether two <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> instances are not equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Inequality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>left</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first instance to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>right</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second instance to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the values of <code>left</code> and <code>right</code> are not equal; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two <a class=\"xref\" href=\"system.globalization.sortversion\" data-linktype=\"relative-path\">SortVersion</a> objects are not equal if one is <code>null</code> and the other is not, or if they have different <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_FullVersion_\" data-linktype=\"relative-path\">FullVersion</a> or <a class=\"xref\" href=\"system.globalization.sortversion#System_Globalization_SortVersion_SortId_\" data-linktype=\"relative-path\">SortId</a> property values.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.SortVersion.yml\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion..ctor\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.Equals\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.FullVersion\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortVersion.SortId\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"cbcc8f0f-1c55-cd97-b4cb-ee141666940b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides information about the version of Unicode used to compare and order strings.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.globalization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Globalization.SortVersion\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.SortVersion.yml","open_to_public_contributors":false,"api_name":["System.Globalization.SortVersion","System.Globalization.SortVersion..ctor","System.Globalization.SortVersion.Equals","System.Globalization.SortVersion.FullVersion","System.Globalization.SortVersion.GetHashCode","System.Globalization.SortVersion.op_Equality","System.Globalization.SortVersion.op_op_Equality","System.Globalization.SortVersion.op_Inequality","System.Globalization.SortVersion.op_op_Inequality","System.Globalization.SortVersion.SortId"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Globalization.SortVersion","System::Globalization::SortVersion","System.Globalization.SortVersion.#ctor","System::Globalization::SortVersion::#ctor","System.Globalization.SortVersion.Equals","System::Globalization::SortVersion::Equals","System.Globalization.SortVersion.FullVersion","System::Globalization::SortVersion::FullVersion","System.Globalization.SortVersion.GetHashCode","System::Globalization::SortVersion::GetHashCode","System.Globalization.SortVersion.op_Equality","System::Globalization::SortVersion::op_Equality","System.Globalization.SortVersion.op_Inequality","System::Globalization::SortVersion::op_Inequality","System.Globalization.SortVersion.SortId","System::Globalization::SortVersion::SortId"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"cbcc8f0f-1c55-cd97-b4cb-ee141666940b","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Globalization/SortVersion.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SortVersion class | Microsoft Docs","_op_ogTitle":"SortVersion class","description":"Provides information about the version of Unicode used to compare and order strings.\n","toc_asset_id":"api/_splitted/System.Globalization/toc.json","toc_rel":"_splitted/System.Globalization/toc.json","source_url":"","ms.assetid":"System.Globalization.SortVersion","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.globalization.sortversion","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.globalization.sortversion","fileRelativePath":"api/System.Globalization.SortVersion.html"},"themesRelativePathToOutputRoot":"_themes/"}