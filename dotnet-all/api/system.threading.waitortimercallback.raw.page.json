{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">WaitOrTimerCallback</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a method to be called when a <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> is signaled or times out.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic delegate void WaitOrTimerCallback(object state, bool timedOut);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">System.Delegate</a></span></div><span class=\"lang-csharp\">WaitOrTimerCallback</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>WaitOrTimerCallback represents a callback method that you want to execute when a registered wait handle times out or is signaled. Create the delegate by passing your callback method to the WaitOrTimerCallback constructor. Your method must have the signature shown here.  </p>\n<p> Create the registered wait handle by passing the WaitOrTimerCallback delegate and a <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> to <a class=\"xref\" href=\"system.threading.threadpool#System_Threading_ThreadPool_RegisterWaitForSingleObject_\" data-linktype=\"relative-path\">RegisterWaitForSingleObject</a>. Your callback method executes each time the <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> times out or is signaled.  </p>\n<p> [Visual Basic]  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Visual Basic users can omit the WaitOrTimerCallback constructor, and simply use the <code>AddressOf</code> operator when passing the callback method to <a class=\"xref\" href=\"system.threading.threadpool#System_Threading_ThreadPool_RegisterWaitForSingleObject_\" data-linktype=\"relative-path\">RegisterWaitForSingleObject</a>. Visual Basic automatically calls the correct delegate constructor.  </p>\n</div>\n<p> If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <a class=\"xref\" href=\"system.threading.threadpool#System_Threading_ThreadPool_RegisterWaitForSingleObject_\" data-linktype=\"relative-path\">RegisterWaitForSingleObject</a> when you create the registered wait handle. Each time your callback method executes, the <code>state</code> parameter contains this object.  </p>\n<p> For more information about using callback methods to synchronize thread pool threads, see <a href=\"../topic/the%20managed%20thread%20pool\" data-linktype=\"relative-path\">The Managed Thread Pool</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.WaitOrTimerCallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.WaitOrTimerCallback\">\r\n<meta name=\"APIName\" content=\"System.Threading.WaitOrTimerCallback..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.WaitOrTimerCallback.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Threading.WaitOrTimerCallback.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Threading.WaitOrTimerCallback.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-23 06:04 AM\">\r\n<meta name=\"document_id\" content=\"1dbcc784-7a09-e089-ab32-7a83a7aa948a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a method to be called when a  is signaled or times out.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.threading/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.WaitOrTimerCallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.WaitOrTimerCallback.yml","open_to_public_contributors":false,"api_name":["System.Threading.WaitOrTimerCallback","System.Threading.WaitOrTimerCallback..ctor","System.Threading.WaitOrTimerCallback.Invoke","System.Threading.WaitOrTimerCallback.BeginInvoke","System.Threading.WaitOrTimerCallback.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.WaitOrTimerCallback","System::Threading::WaitOrTimerCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-23 06:04 AM","document_id":"1dbcc784-7a09-e089-ab32-7a83a7aa948a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/xml/System.Threading/WaitOrTimerCallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WaitOrTimerCallback delegate | Microsoft Docs","_op_ogTitle":"WaitOrTimerCallback delegate","description":"Represents a method to be called when a  is signaled or times out.\n","toc_asset_id":"api/_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.WaitOrTimerCallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/api/system.threading.waitortimercallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/api/system.threading.waitortimercallback","fileRelativePath":"api/System.Threading.WaitOrTimerCallback.html"},"themesRelativePathToOutputRoot":"_themes/"}