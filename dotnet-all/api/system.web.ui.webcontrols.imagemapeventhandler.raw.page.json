{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ImageMapEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.imagemap#System_Web_UI_WebControls_ImageMap_Click\" data-linktype=\"relative-path\">Click</a> event of an <a class=\"xref\" href=\"system.web.ui.webcontrols.imagemap\" data-linktype=\"relative-path\">ImageMap</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void ImageMapEventHandler(object sender, ImageMapEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">ImageMapEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to create an event handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.imagemap#System_Web_UI_WebControls_ImageMap_Click\" data-linktype=\"relative-path\">Click</a> event. The <a class=\"xref\" href=\"system.web.ui.webcontrols.imagemap\" data-linktype=\"relative-path\">ImageMap</a> control contains two <a class=\"xref\" href=\"system.web.ui.webcontrols.rectanglehotspot\" data-linktype=\"relative-path\">RectangleHotSpot</a> objects. The <a class=\"xref\" href=\"system.web.ui.webcontrols.imagemap#System_Web_UI_WebControls_ImageMap_HotSpotMode_\" data-linktype=\"relative-path\">HotSpotMode</a> property is set to <code>HotSpotMode.PostBack</code>, which causes the page to post back to the server each time a user clicks one of the <a class=\"xref\" href=\"system.web.ui.webcontrols.rectanglehotspot\" data-linktype=\"relative-path\">RectangleHotSpot</a> objects. The <a class=\"xref\" href=\"system.web.ui.webcontrols.imagemap#System_Web_UI_WebControls_ImageMap_Click\" data-linktype=\"relative-path\">Click</a> event is handled by the <code>VoteMap_Clicked</code> event handler. For this example to work correctly, you must supply your own image for the <a class=\"xref\" href=\"system.web.ui.webcontrols.image#System_Web_UI_WebControls_Image_ImageUrl_\" data-linktype=\"relative-path\">ImageUrl</a> property and update the path to the image appropriately so that the application can locate it.  </p>\n<pre><code class=\"lang-cs\" name=\"ImageMapClass2#1\">&lt;%@ page language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void VoteMap_Clicked (Object sender, ImageMapEventArgs e)\n  {\n    string coordinates;\n    string hotSpotType;\n    int yescount = ((ViewState[&quot;yescount&quot;] != null)? (int)ViewState[&quot;yescount&quot;] : 0);\n    int nocount = ((ViewState[&quot;nocount&quot;] != null)? (int)ViewState[&quot;nocount&quot;] : 0);\n\n    // When a user clicks the &quot;Yes&quot; hot spot,\n    // display the hot spot&#39;s name and coordinates.\n    if (e.PostBackValue.Contains(&quot;Yes&quot;))\n    {\n      yescount += 1;\n      coordinates = Vote.HotSpots[0].GetCoordinates();\n      hotSpotType = Vote.HotSpots[0].ToString ();\n      Message1.Text = &quot;You selected &quot; + hotSpotType + &quot; &quot; + e.PostBackValue + &quot;.&lt;br /&gt;&quot; +\n                      &quot;The coordinates are &quot; + coordinates + &quot;.&lt;br /&gt;&quot; +\n                      &quot;The current vote count is &quot; + yescount.ToString() + \n            &quot; yes votes and &quot; + nocount.ToString() + &quot; no votes.&quot;;\n    }\n      \n    // When a user clicks the &quot;No&quot; hot spot,\n    // display the hot spot&#39;s name and coordinates.\n    else if (e.PostBackValue.Contains(&quot;No&quot;))\n    {\n      nocount += 1;\n      coordinates = Vote.HotSpots[1].GetCoordinates();\n      hotSpotType = Vote.HotSpots[1].ToString ();\n      Message1.Text = &quot;You selected &quot; + hotSpotType + &quot; &quot; + e.PostBackValue + &quot;.&lt;br /&gt;&quot; +\n                      &quot;The coordinates are &quot; + coordinates + &quot;.&lt;br /&gt;&quot; +\n            &quot;The current vote count is &quot; + yescount.ToString() +\n            &quot; yes votes and &quot; + nocount.ToString() + &quot; no votes.&quot;;\n    }\n    \n    else\n    {\n      Message1.Text = &quot;You did not click a valid hot spot region.&quot;;\n    }\n\n    ViewState[&quot;yescount&quot;] = yescount;\n    ViewState[&quot;nocount&quot;] = nocount;\n  }           \n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;head1&quot; runat=&quot;server&quot;&gt;\n  &lt;title&gt;ImageMap Class Post Back Example&lt;/title&gt;\n&lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    \n      &lt;h3&gt;ImageMap Class Post Back Example&lt;/h3&gt;\n      \n      &lt;asp:imagemap id=&quot;Vote&quot;           \n        imageurl=&quot;Images/VoteImage.jpg&quot;\n        width=&quot;400&quot; \n        height=&quot;200&quot; \n        alternatetext=&quot;Vote Yes or No&quot;\n        hotspotmode=&quot;PostBack&quot;\n        onclick=&quot;VoteMap_Clicked&quot;\n        runat=&quot;Server&quot;&gt;            \n          \n        &lt;asp:RectangleHotSpot          \n          top=&quot;0&quot;\n          left=&quot;0&quot;\n          bottom=&quot;200&quot;\n          right=&quot;200&quot;\n          postbackvalue=&quot;Yes&quot;\n          alternatetext=&quot;Vote yes&quot;&gt;\n        &lt;/asp:RectangleHotSpot&gt;\n          \n        &lt;asp:RectangleHotSpot \n          top=&quot;0&quot;\n          left=&quot;201&quot;\n          bottom=&quot;200&quot;\n          right=&quot;400&quot;\n          postbackvalue=&quot;No&quot;\n          alternatetext=&quot;Vote no&quot;&gt;\n        &lt;/asp:RectangleHotSpot&gt;\n      \n      &lt;/asp:imagemap&gt;\n            \n      &lt;br /&gt;&lt;br /&gt;\n          \n      &lt;asp:label id=&quot;Message1&quot;\n        runat=&quot;Server&quot;&gt;\n      &lt;/asp:label&gt;                 \n                 \n    &lt;/form&gt;      \n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"ImageMapClass2#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub VoteMap_Clicked(ByVal sender As Object, ByVal e As ImageMapEventArgs)\n    Dim coordinates As String\n    Dim hotSpotType As String\n    Dim yescount As Integer\n    Dim nocount As Integer\n    \n    If (ViewState(&quot;yescount&quot;) IsNot Nothing) Then\n      yescount = Convert.ToInt32(ViewState(&quot;yescount&quot;))\n    Else\n      yescount = 0\n    End If\n    If (ViewState(&quot;nocount&quot;) IsNot Nothing) Then\n      nocount = Convert.ToInt32(ViewState(&quot;nocount&quot;))\n    Else\n      nocount = 0\n    End If\n      \n    \n    &#39; When a user clicks the &quot;Yes&quot; hot spot,\n    &#39; display the hot spot&#39;s name and coordinates.\n    If (e.PostBackValue.Contains(&quot;Yes&quot;)) Then\n      \n      yescount += 1\n      coordinates = Vote.HotSpots(0).GetCoordinates()\n      hotSpotType = Vote.HotSpots(0).ToString()\n      Message1.Text = &quot;You selected &quot; &amp; hotSpotType &amp; &quot; &quot; &amp; e.PostBackValue &amp; &quot;.&lt;br /&gt;&quot; &amp; _\n                      &quot;The coordinates are &quot; &amp; coordinates &amp; &quot;.&lt;br /&gt;&quot; &amp; _\n                      &quot;The current vote count is &quot; &amp; yescount.ToString() &amp; _\n                      &quot; yes votes and &quot; &amp; nocount.ToString() &amp; &quot; no votes.&quot;\n       \n      &#39; When a user clicks the &quot;No&quot; hot spot,\n      &#39; display the hot spot&#39;s name and coordinates.\n    ElseIf (e.PostBackValue.Contains(&quot;No&quot;)) Then\n      \n      nocount += 1\n      coordinates = Vote.HotSpots.Item(1).GetCoordinates()\n      hotSpotType = Vote.HotSpots.Item(1).ToString()\n      Message1.Text = &quot;You selected &quot; &amp; hotSpotType &amp; &quot; &quot; &amp; e.PostBackValue &amp; &quot;.&lt;br /&gt;&quot; &amp; _\n                     &quot;The coordinates are &quot; &amp; coordinates &amp; &quot;.&lt;br /&gt;&quot; &amp; _\n                      &quot;The current vote count is &quot; &amp; yescount.ToString() &amp; _\n                      &quot; yes votes and &quot; &amp; nocount.ToString() &amp; &quot; no votes.&quot;\n      \n    Else\n      \n      Message1.Text = &quot;You did not click a valid hot spot region.&quot;\n                \n    End If\n      \n    ViewState(&quot;yescount&quot;) = yescount\n    ViewState(&quot;nocount&quot;) = nocount\n    \n  End Sub\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;head1&quot; runat=&quot;server&quot;&gt;\n  &lt;title&gt;ImageMap Class Post Back Example&lt;/title&gt;\n&lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    \n      &lt;h3&gt;ImageMap Class Post Back Example&lt;/h3&gt;\n      \n      &lt;asp:imagemap id=&quot;Vote&quot;           \n        imageurl=&quot;Images/VoteImage.jpg&quot;\n        width=&quot;400&quot; \n        height=&quot;200&quot; \n        alternatetext=&quot;Vote Yes or No&quot;\n        hotspotmode=&quot;PostBack&quot;\n        onclick=&quot;VoteMap_Clicked&quot;\n        runat=&quot;Server&quot;&gt;            \n          \n        &lt;asp:RectangleHotSpot          \n          top=&quot;0&quot;\n          left=&quot;0&quot;\n          bottom=&quot;200&quot;\n          right=&quot;200&quot;\n          postbackvalue=&quot;Yes&quot;\n          alternatetext=&quot;Vote yes&quot;&gt;\n        &lt;/asp:RectangleHotSpot&gt;\n          \n        &lt;asp:RectangleHotSpot \n          top=&quot;0&quot;\n          left=&quot;201&quot;\n          bottom=&quot;200&quot;\n          right=&quot;400&quot;\n          postbackvalue=&quot;No&quot;\n          alternatetext=&quot;Vote no&quot;&gt;\n        &lt;/asp:RectangleHotSpot&gt;\n      \n      &lt;/asp:imagemap&gt;\n            \n      &lt;br /&gt;&lt;br /&gt;\n          \n      &lt;asp:label id=&quot;Message1&quot;\n        runat=&quot;Server&quot;&gt;\n      &lt;/asp:label&gt;                 \n                 \n    &lt;/form&gt;      \n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create an ImageMapEventHandler delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.ImageMapEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ImageMapEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ImageMapEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ImageMapEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ImageMapEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ImageMapEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"5ea62b83-bed2-9d97-e942-f26184f8a8e7\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of an  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.ImageMapEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.ImageMapEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.ImageMapEventHandler","System.Web.UI.WebControls.ImageMapEventHandler..ctor","System.Web.UI.WebControls.ImageMapEventHandler.Invoke","System.Web.UI.WebControls.ImageMapEventHandler.BeginInvoke","System.Web.UI.WebControls.ImageMapEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.ImageMapEventHandler","System::Web::UI::WebControls::ImageMapEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"5ea62b83-bed2-9d97-e942-f26184f8a8e7","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ImageMapEventHandler.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ImageMapEventHandler delegate | Microsoft Docs","_op_ogTitle":"ImageMapEventHandler delegate","description":"Represents the method that handles the  event of an  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.ImageMapEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.imagemapeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.imagemapeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.ImageMapEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}