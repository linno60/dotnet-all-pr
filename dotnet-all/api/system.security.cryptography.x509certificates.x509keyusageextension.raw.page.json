{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">X509KeyUsageExtension</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the usage of a key contained within an X.509 certificate.  This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class X509KeyUsageExtension : System.Security.Cryptography.X509Certificates.X509Extension</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509extension\" data-linktype=\"relative-path\">X509Extension</a></span></div><span class=\"lang-csharp\">X509KeyUsageExtension</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata#System_Security_Cryptography_AsnEncodedData_Format_System_Boolean_\" data-linktype=\"relative-path\">Format(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata#System_Security_Cryptography_AsnEncodedData_Oid\" data-linktype=\"relative-path\">Oid</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata#System_Security_Cryptography_AsnEncodedData_RawData\" data-linktype=\"relative-path\">RawData</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509extension#System_Security_Cryptography_X509Certificates_X509Extension_Critical\" data-linktype=\"relative-path\">Critical</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to open a userâ€™s personal certificate store and display information about each certificate in the store.  This example uses the X509KeyUsageExtension class to display the information.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X509Extensions#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class CertSelect\n{\n    public static void Main()\n    {\n        try\n        {\n            X509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n            store.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\n            X509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n            for (int i = 0; i &lt; collection.Count; i++)\n            {\n                foreach (X509Extension extension in collection[i].Extensions)\n                {\n                    Console.WriteLine(extension.Oid.FriendlyName + &quot;(&quot; + extension.Oid.Value + &quot;)&quot;);\n   \n\n                    if (extension.Oid.FriendlyName == &quot;Key Usage&quot;)\n                    {\n                        X509KeyUsageExtension ext = (X509KeyUsageExtension)extension;\n                        Console.WriteLine(ext.KeyUsages);\n                    }\n\n                    if (extension.Oid.FriendlyName == &quot;Basic Constraints&quot;)\n                    {\n                        X509BasicConstraintsExtension ext = (X509BasicConstraintsExtension)extension;\n                        Console.WriteLine(ext.CertificateAuthority);\n                        Console.WriteLine(ext.HasPathLengthConstraint);\n                        Console.WriteLine(ext.PathLengthConstraint);\n                    }\n\n                    if (extension.Oid.FriendlyName == &quot;Subject Key Identifier&quot;)\n                    {\n                        X509SubjectKeyIdentifierExtension ext = (X509SubjectKeyIdentifierExtension)extension;\n                        Console.WriteLine(ext.SubjectKeyIdentifier);\n                    }\n\n                    if (extension.Oid.FriendlyName == &quot;Enhanced Key Usage&quot;)\n                    {\n                        X509EnhancedKeyUsageExtension ext = (X509EnhancedKeyUsageExtension)extension;\n                        OidCollection oids = ext.EnhancedKeyUsages;\n                        foreach (Oid oid in oids)\n                        {\n                            Console.WriteLine(oid.FriendlyName + &quot;(&quot; + oid.Value + &quot;)&quot;);\n                        }\n                    }\n                }\n            }\n            store.Close();\n        }\n        catch (CryptographicException)\n        {\n            Console.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X509Extensions#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nModule CertSelect\n\n    Sub Main()\n        Try\n            Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n            store.Open(OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly)\n\n            Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n            Dim i As Integer\n            For i = 0 To collection.Count\n                Dim extension As X509Extension\n                For Each extension In collection(i).Extensions\n                    Console.WriteLine(extension.Oid.FriendlyName + &quot;(&quot; + extension.Oid.Value + &quot;)&quot;)\n\n\n                    If extension.Oid.FriendlyName = &quot;Key Usage&quot; Then\n                        Dim ext As X509KeyUsageExtension = CType(extension, X509KeyUsageExtension)\n                        Console.WriteLine(ext.KeyUsages)\n                    End If\n\n                    If extension.Oid.FriendlyName = &quot;Basic Constraints&quot; Then\n                        Dim ext As X509BasicConstraintsExtension = CType(extension, X509BasicConstraintsExtension)\n                        Console.WriteLine(ext.CertificateAuthority)\n                        Console.WriteLine(ext.HasPathLengthConstraint)\n                        Console.WriteLine(ext.PathLengthConstraint)\n                    End If\n\n                    If extension.Oid.FriendlyName = &quot;Subject Key Identifier&quot; Then\n                        Dim ext As X509SubjectKeyIdentifierExtension = CType(extension, X509SubjectKeyIdentifierExtension)\n                        Console.WriteLine(ext.SubjectKeyIdentifier)\n                    End If\n\n                    If extension.Oid.FriendlyName = &quot;Enhanced Key Usage&quot; Then\n                        Dim ext As X509EnhancedKeyUsageExtension = CType(extension, X509EnhancedKeyUsageExtension)\n                        Dim oids As OidCollection = ext.EnhancedKeyUsages\n                        Dim oid As Oid\n                        For Each oid In oids\n                            Console.WriteLine(oid.FriendlyName + &quot;(&quot; + oid.Value + &quot;)&quot;)\n                        Next oid\n                    End If\n                Next extension\n            Next i\n            store.Close()\n        Catch\n            Console.WriteLine(&quot;Information could not be written out for this certificate.&quot;)\n        End Try\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X509Extensions#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      for ( int i = 0; i &lt; collection-&gt;Count; i++ )\n      {\n         System::Collections::IEnumerator^ myEnum = collection[ i ]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension^&gt;(myEnum-&gt;Current);\n            Console::WriteLine( L&quot;{0}({1})&quot;, extension-&gt;Oid-&gt;FriendlyName, extension-&gt;Oid-&gt;Value );\n            if ( extension-&gt;Oid-&gt;FriendlyName == L&quot;Key Usage&quot; )\n            {\n               X509KeyUsageExtension^ ext = dynamic_cast&lt;X509KeyUsageExtension^&gt;(extension);\n               Console::WriteLine( ext-&gt;KeyUsages );\n            }\n            if ( extension-&gt;Oid-&gt;FriendlyName == L&quot;Basic Constraints&quot; )\n            {\n               X509BasicConstraintsExtension^ ext = dynamic_cast&lt;X509BasicConstraintsExtension^&gt;(extension);\n               Console::WriteLine( ext-&gt;CertificateAuthority );\n               Console::WriteLine( ext-&gt;HasPathLengthConstraint );\n               Console::WriteLine( ext-&gt;PathLengthConstraint );\n            }\n            if ( extension-&gt;Oid-&gt;FriendlyName == L&quot;Subject Key Identifier&quot; )\n            {\n               X509SubjectKeyIdentifierExtension^ ext = dynamic_cast&lt;X509SubjectKeyIdentifierExtension^&gt;(extension);\n               Console::WriteLine( ext-&gt;SubjectKeyIdentifier );\n            }\n            if ( extension-&gt;Oid-&gt;FriendlyName == L&quot;Enhanced Key Usage&quot; )\n            {\n               X509EnhancedKeyUsageExtension^ ext = dynamic_cast&lt;X509EnhancedKeyUsageExtension^&gt;(extension);\n               OidCollection^ oids = ext-&gt;EnhancedKeyUsages;\n               System::Collections::IEnumerator^ myEnum1 = oids-&gt;GetEnumerator();\n               while ( myEnum1-&gt;MoveNext() )\n               {\n                  Oid^ oid = safe_cast&lt;Oid^&gt;(myEnum1-&gt;Current);\n                  Console::WriteLine( L&quot;{0}({1})&quot;, oid-&gt;FriendlyName, oid-&gt;Value );\n               }\n            }\n         }\n\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The X509KeyUsageExtension class uses the flags in the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageflags\" data-linktype=\"relative-path\">X509KeyUsageFlags</a> enumeration to define or determine key usage.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">X509KeyUsageExtension()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageextension\" data-linktype=\"relative-path\">X509KeyUsageExtension</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public X509KeyUsageExtension ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension__ctor_System_Security_Cryptography_AsnEncodedData_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">X509KeyUsageExtension(AsnEncodedData, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageextension\" data-linktype=\"relative-path\">X509KeyUsageExtension</a> class using an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object and a value that identifies whether the extension is critical.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public X509KeyUsageExtension (System.Security.Cryptography.AsnEncodedData encodedKeyUsage, bool critical);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>encodedKeyUsage</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The encoded data to use to create the extension.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>critical</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the extension is critical; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this constructor if the information to create the extension is already in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension__ctor_System_Security_Cryptography_X509Certificates_X509KeyUsageFlags_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">X509KeyUsageExtension(X509KeyUsageFlags, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageextension\" data-linktype=\"relative-path\">X509KeyUsageExtension</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageflags\" data-linktype=\"relative-path\">X509KeyUsageFlags</a> value and a value that identifies whether the extension is critical.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public X509KeyUsageExtension (System.Security.Cryptography.X509Certificates.X509KeyUsageFlags keyUsages, bool critical);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyUsages</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageflags\" data-linktype=\"relative-path\">X509KeyUsageFlags</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageflags\" data-linktype=\"relative-path\">X509KeyUsageFlags</a> values that describes how to use the key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>critical</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the extension is critical; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension_KeyUsages_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension_KeyUsages\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyUsages</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the key usage flag associated with the certificate.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyUsages { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageflags\" data-linktype=\"relative-path\">X509KeyUsageFlags</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the KeyUsages values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The extension cannot be decoded.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property returns a value from the KeyUsages enumeration that indicates how to use the certificate key.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension_CopyFrom_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_X509Certificates_X509KeyUsageExtension_CopyFrom_System_Security_Cryptography_AsnEncodedData_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CopyFrom(AsnEncodedData)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keyusageextension\" data-linktype=\"relative-path\">X509KeyUsageExtension</a> class using an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>asnEncodedData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The encoded data to use to create the extension.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"21197639-c3ba-f4f8-0438-2e68476ab97b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the usage of a key contained within an X.509 certificate.  This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.x509certificates/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.X509Certificates.X509KeyUsageExtension","System.Security.Cryptography.X509Certificates.X509KeyUsageExtension..ctor","System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom","System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.X509Certificates.X509KeyUsageExtension","System::Security::Cryptography::X509Certificates::X509KeyUsageExtension","System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor","System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::#ctor","System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom","System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::CopyFrom","System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages","System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::KeyUsages"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"21197639-c3ba-f4f8-0438-2e68476ab97b","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography.X509Certificates/X509KeyUsageExtension.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"X509KeyUsageExtension class | Microsoft Docs","_op_ogTitle":"X509KeyUsageExtension class","description":"Defines the usage of a key contained within an X.509 certificate.  This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.X509Certificates/toc.json","toc_rel":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509keyusageextension","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509keyusageextension","fileRelativePath":"api/System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.html"},"themesRelativePathToOutputRoot":"_themes/"}