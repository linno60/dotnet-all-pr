{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">XPathResult</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Contains the value returned by an XPath query.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class XPathResult : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">XPathResult</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example creates a message and XPath message queries. The queries are evaluated by the <a class=\"xref\" href=\"system.servicemodel.xpathmessagequery\" data-linktype=\"relative-path\">XPathMessageQuery</a> objects contained in an <a class=\"xref\" href=\"system.servicemodel.dispatcher.xpathmessagequerycollection\" data-linktype=\"relative-path\">XPathMessageQueryCollection</a> object. The results of each query are tested using the <a class=\"xref\" href=\"system.servicemodel.dispatcher.xpathresult#System_ServiceModel_Dispatcher_XPathResult_ResultType_\" data-linktype=\"relative-path\">ResultType</a> property of the XPathResult class.  </p>\n<pre><code class=\"lang-vb\" name=\"XPathMessageQuery#0\">Imports System.IO\nImports System.Xml\nImports System.ServiceModel.Dispatcher\nImports System.ServiceModel\nImports System.ServiceModel.Channels\nImports System.Xml.XPath\n\nNamespace MessageQueryExamples\n\n\n    Public Class Program\n\n        Public Shared Sub Main(ByVal args As String())\n\n            &#39; The XPathMessageQueryCollection inherits from MessageQueryCollection.\n            Dim queryCollection As XPathMessageQueryCollection = MessageHelper.SetupQueryCollection()\n\n\n            &#39; Create a message and a copy of the message. You must create a buffered copy to access the message body.\n            Dim mess As Message = MessageHelper.CreateMessage()\n            Dim mb As MessageBuffer = mess.CreateBufferedCopy(Integer.MaxValue)\n\n\n            &#39; Evaluate every query in the collection. \n            Dim q As XPathMessageQuery\n            For Each q In queryCollection\n\n                &#39; Evaluate the query. Note the result type is an XPathResult.\n                Dim qPathResult As XPathResult = q.Evaluate(Of XPathResult)(mb)\n\n                &#39; Use the XPathResult to determine the result type.\n                Console.WriteLine(&quot;Result type: {0}&quot;, qPathResult.ResultType)\n\n                &#39; The following code prints the result according to the result type.\n\n                If qPathResult.ResultType = XPathResultType.String Then\n                    Console.WriteLine(&quot;{0} = {1}&quot;, q.Expression, qPathResult.GetResultAsString())\n                End If\n                If (qPathResult.ResultType = XPathResultType.NodeSet) Then\n\n                    &#39; Iterate through the node set.\n                    Dim ns As XPathNodeIterator = qPathResult.GetResultAsNodeset()\n                    Dim n As XPathNavigator\n                    For Each n In ns\n                        Console.WriteLine(&quot;     {0} = {1}&quot;, q.Expression, n.Value)\n                    Next\n                End If\n                If qPathResult.ResultType = XPathResultType.Number Then\n                    Console.WriteLine(&quot;    {0} = {1}&quot;, q.Expression, qPathResult.GetResultAsNumber())\n                End If\n                If qPathResult.ResultType = XPathResultType.Boolean Then\n                    Console.WriteLine(&quot;    {0} ={1}&quot;, q.Expression, qPathResult.GetResultAsBoolean())\n                End If\n\n                If qPathResult.ResultType = XPathResultType.Error Then\n                    Console.WriteLine(&quot;    Error!&quot;)\n                End If\n\n            Next\n\n            Console.WriteLine()\n\n            &#39; The alternate code below demonstrates similar funcionality using a MessageQueryTable.\n            &#39; The difference is the KeyValuePair that requires a key to index each value.\n            &#39; The code uses the expression as the key, and an arbitrary value for the value.           \n\n            &#39;Dim mq As MessageQueryTable(Of String) = MessageHelper.SetupTable()\n            &#39;Dim kv As KeyValuePair(Of MessageQuery, String)\n            &#39;For Each kv In mq\n            &#39;    &#39;\n            &#39;    Dim xp As XPathMessageQuery = CType(kv.Key, XPathMessageQuery)\n            &#39;    Console.WriteLine(&quot;Value = {0}&quot;, kv.Value)\n            &#39;    Console.WriteLine(&quot;{0} = {1}&quot;, xp.Expression, xp.Evaluate(Of String)(mb))\n            &#39;Next\n\n            Console.ReadLine()\n        End Sub\n        Private Shared Sub Evaluate(ByVal p1 As Object)\n            Throw New NotImplementedException\n        End Sub\n    End Class\n\n    Public Class MessageHelper\n\n        Shared messageBody As String = _\n              &quot;&lt;PurchaseOrder date=&#39;today&#39;&gt;&quot; + _\n                  &quot;&lt;Number&gt;ABC-2009-XYZ&lt;/Number&gt;&quot; + _\n                  &quot;&lt;Department&gt;OnlineSales&lt;/Department&gt;&quot; + _\n                  &quot;&lt;Items&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;nail&#39; quantity=&#39;1&#39;&gt;item1&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;screw&#39; quantity=&#39;2&#39;&gt;item2&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;brad&#39; quantity=&#39;3&#39;&gt;&quot; + _\n                          &quot;&lt;SpecialOffer/&gt;&quot; + _\n                          &quot;Special item4&quot; + _\n                      &quot;&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;SpecialNails&#39; quantity=&#39;9&#39;&gt;item5&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;SpecialBrads&#39; quantity=&#39;11&#39;&gt;&quot; + _\n                          &quot;&lt;SpecialOffer/&gt;&quot; + _\n                          &quot;Special item6&quot; + _\n                      &quot;&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;hammer&#39; quantity=&#39;1&#39;&gt;item7&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;wrench&#39; quantity=&#39;2&#39;&gt;item8&lt;/Item&gt;&quot; + _\n                  &quot;&lt;/Items&gt;&quot; + _\n                &quot;&lt;Comments&gt;&quot; + _\n                &quot;Rush order&quot; + _\n                &quot;&lt;/Comments&gt;&quot; + _\n              &quot;&lt;/PurchaseOrder&gt;&quot;\n\n        Public Shared xpath As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;\n        Public Shared xpath2 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &#39;nail&#39;]&quot;\n        Public Shared xpath3 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Comments&quot;\n        Public Shared xpath4 As String = &quot;count(/s12:Envelope/s12:Body/PurchaseOrder/Items/Item)&quot;\n        Public Shared xpath5 As String = &quot;substring(string(/s12:Envelope/s12:Body/PurchaseOrder/Number),5,4)&quot;\n        Public Shared xpath6 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Department=&#39;OnlineSales&#39;&quot;\n        Public Shared xpath7 As String = &quot;//PurchaseOrder/@date&quot;\n        Public Shared xpath8 As String = &quot;//SpecialOffer/ancestor::Item[@product = &#39;brad&#39;]&quot;\n\n        &#39; Invoke the correlation data function.\n\n\n        Public Shared xpath9 As String = &quot;sm:correlation-data(&#39;CorrelationData1&#39;)&quot;\n        Public Shared xpath10 As String = &quot;sm:correlation-data(&#39;CorrelationData2&#39;)&quot;\n\n        Public Shared xpath11 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 2]&quot;\n\n\n        Public Shared Function CreateMessage() As Message\n\n            Dim stringReader As New StringReader(messageBody)\n            Dim xmlReader As New XmlTextReader(stringReader)\n            Dim message As Message = message.CreateMessage( _\n                MessageVersion.Soap12WSAddressing10, &quot;http://purchaseorder&quot;, xmlReader)\n\n            &#39; Add two correlation properties using lambda expressions. The property names are\n            &#39; CorrelationData1 and CorrelationData2. The first goes to &quot;value1&quot; and the\n            &#39; second to &quot;value2&quot;. You can use your own property names and values.\n            Dim data As New CorrelationDataMessageProperty()\n\n            data.Add(&quot;CorrelationData1&quot;, Function() &quot;value1&quot;)\n            data.Add(&quot;CorrelationData2&quot;, Function() &quot;value2&quot;)\n            message.Properties(CorrelationDataMessageProperty.Name) = data\n\n\n            Return message\n        End Function\n\n\n        Public Shared Function SetupQueryCollection() As XPathMessageQueryCollection\n\n            &#39; Create the query collection and add the XPath queries to it. To create\n            &#39; the query, you must also use a new XPathMessageContext.\n\n            Dim queryCollection As New XPathMessageQueryCollection()\n\n            Dim context As XPathMessageContext = New XPathMessageContext()\n            queryCollection.Add(New XPathMessageQuery(xpath, context))\n            queryCollection.Add(New XPathMessageQuery(xpath2, context))\n            queryCollection.Add(New XPathMessageQuery(xpath3, context))\n            queryCollection.Add(New XPathMessageQuery(xpath4, context))\n            queryCollection.Add(New XPathMessageQuery(xpath5, context))\n            queryCollection.Add(New XPathMessageQuery(xpath6, context))\n            queryCollection.Add(New XPathMessageQuery(xpath7, context))\n            queryCollection.Add(New XPathMessageQuery(xpath8, context))\n            queryCollection.Add(New XPathMessageQuery(xpath9, context))\n            queryCollection.Add(New XPathMessageQuery(xpath10, context))\n            queryCollection.Add(New XPathMessageQuery(xpath11, context))\n\n            Return queryCollection\n        End Function\n\n        Public Shared Function SetupTable() As MessageQueryTable(Of String)\n\n            &#39; This is optional code to demonstrate using a MessageQueryTable.\n            &#39; Compare this to the MessageQueryCollection.\n            Dim table As MessageQueryTable(Of String) = New MessageQueryTable(Of String)()\n            Dim context As XPathMessageContext = New XPathMessageContext()\n\n\n            &#39; The code adds a KeyValuePair to the table. Each pair requires\n            &#39; a query used as the Key, and a value that is paired to the key.\n            table.Add(New XPathMessageQuery(xpath, context), &quot;value10&quot;)\n            table.Add(New XPathMessageQuery(xpath2, context), &quot;value20&quot;)\n            table.Add(New XPathMessageQuery(xpath3, context), &quot;value30&quot;)\n            table.Add(New XPathMessageQuery(xpath4, context), &quot;value40&quot;)\n            table.Add(New XPathMessageQuery(xpath5, context), &quot;value50&quot;)\n            table.Add(New XPathMessageQuery(xpath6, context), &quot;value60&quot;)\n            table.Add(New XPathMessageQuery(xpath7, context), &quot;value70&quot;)\n            table.Add(New XPathMessageQuery(xpath8, context), &quot;value80&quot;)\n            table.Add(New XPathMessageQuery(xpath9, context), &quot;value90&quot;)\n            table.Add(New XPathMessageQuery(xpath10, context), &quot;value100&quot;)\n            table.Add(New XPathMessageQuery(xpath11, context), &quot;value110&quot;)\n            Return table\n        End Function\n    End Class\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"XPathMessageQuery#0\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.ServiceModel.Dispatcher;\nusing System.ServiceModel;\nusing System.ServiceModel.Channels;\nusing System.Xml.XPath;\n\nnamespace MessageQueryExamples\n{\n    \n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // The XPathMessageQueryCollection inherits from MessageQueryCollection.\n            XPathMessageQueryCollection queryCollection = MessageHelper.SetupQueryCollection();\n\n\n            // Create a message and a copy of the message. You must create a buffered copy to access the message body.\n            Message mess = MessageHelper.CreateMessage();\n            MessageBuffer mb = mess.CreateBufferedCopy(int.MaxValue);\n\n\n            // Evaluate every query in the collection. \n            foreach (XPathMessageQuery q in queryCollection)\n            {\n                // Evaluate the query. Note the result type is an XPathResult.\n                XPathResult qPathResult = q.Evaluate&lt;XPathResult&gt;(mb);\n\n                // Use the XPathResult to determine the result type.\n                Console.WriteLine(&quot;Result type: {0}&quot;, qPathResult.ResultType);\n\n                // The following code prints the result according to the result type.\n\n                if (qPathResult.ResultType == XPathResultType.String)\n                    Console.WriteLine(&quot;{0} = {1}&quot;, q.Expression, qPathResult.GetResultAsString());\n\n                if (qPathResult.ResultType == XPathResultType.NodeSet)\n                {\n                    // Iterate through the node set.\n                    XPathNodeIterator ns = qPathResult.GetResultAsNodeset();\n                    foreach (XPathNavigator n in ns)\n                        Console.WriteLine(&quot;\\t{0} = {1}&quot;, q.Expression, n.Value);\n                }\n                if (qPathResult.ResultType == XPathResultType.Number)\n                    Console.WriteLine(&quot;\\t{0} = {1}&quot;, q.Expression, qPathResult.GetResultAsNumber());\n\n                if (qPathResult.ResultType == XPathResultType.Boolean)\n                    Console.WriteLine(&quot;\\t{0} ={1}&quot;, q.Expression, qPathResult.GetResultAsBoolean());\n\n                if (qPathResult.ResultType == XPathResultType.Error)\n                    Console.WriteLine(&quot;\\tError!&quot;);\n            }\n\n            Console.WriteLine();\n\n            // The alternate code below demonstrates similar funcionality using a MessageQueryTable.\n            // The difference is the KeyValuePair that requires a key to index each value.\n            // The code uses the expression as the key, and an arbitrary value for the value.           \n\n            //MessageQueryTable&lt;string&gt; mq = MessageHelper.SetupTable();\n            //foreach (KeyValuePair&lt;MessageQuery, string&gt; kv in mq)\n            //{\n            //    XPathMessageQuery xp = (XPathMessageQuery)kv.Key;\n            //    Console.WriteLine(&quot;Value = {0}&quot;, kv.Value);\n            //    Console.WriteLine(&quot;{0} = {1}&quot;, xp.Expression, xp.Evaluate&lt;string&gt;(mb));\n            //}\n\n            Console.ReadLine();\n        }\n    }\n\n    public class MessageHelper\n    {\n        static string messageBody =\n              &quot;&lt;PurchaseOrder date=&#39;today&#39;&gt;&quot; +\n                  &quot;&lt;Number&gt;ABC-2009-XYZ&lt;/Number&gt;&quot; +\n                  &quot;&lt;Department&gt;OnlineSales&lt;/Department&gt;&quot; +\n                  &quot;&lt;Items&gt;&quot; +\n                      &quot;&lt;Item product=&#39;nail&#39; quantity=&#39;1&#39;&gt;item1&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;screw&#39; quantity=&#39;2&#39;&gt;item2&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;brad&#39; quantity=&#39;3&#39;&gt;&quot; +\n                          &quot;&lt;SpecialOffer/&gt;&quot; +\n                          &quot;Special item4&quot; +\n                      &quot;&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;SpecialNails&#39; quantity=&#39;9&#39;&gt;item5&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;SpecialBrads&#39; quantity=&#39;11&#39;&gt;&quot; +\n                          &quot;&lt;SpecialOffer/&gt;&quot; +\n                          &quot;Special item6&quot; +\n                      &quot;&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;hammer&#39; quantity=&#39;1&#39;&gt;item7&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;wrench&#39; quantity=&#39;2&#39;&gt;item8&lt;/Item&gt;&quot; +\n                  &quot;&lt;/Items&gt;&quot; +\n                &quot;&lt;Comments&gt;&quot; +\n                &quot;Rush order&quot; +\n                &quot;&lt;/Comments&gt;&quot; +\n              &quot;&lt;/PurchaseOrder&gt;&quot;;\n\n        public static string xpath = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;;\n        public static string xpath2 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &#39;nail&#39;]&quot;;\n        public static string xpath3 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Comments&quot;;\n        public static string xpath4 = &quot;count(/s12:Envelope/s12:Body/PurchaseOrder/Items/Item)&quot;;\n        public static string xpath5 = &quot;substring(string(/s12:Envelope/s12:Body/PurchaseOrder/Number),5,4)&quot;;\n        public static string xpath6 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Department=&#39;OnlineSales&#39;&quot;;\n        public static string xpath7 = &quot;//PurchaseOrder/@date&quot;;\n        public static string xpath8 = &quot;//SpecialOffer/ancestor::Item[@product = &#39;brad&#39;]&quot;;\n\n        // Invoke the correlation data function.\n\n\n        public static string xpath9 = &quot;sm:correlation-data(&#39;CorrelationData1&#39;)&quot;;\n        public static string xpath10 = &quot;sm:correlation-data(&#39;CorrelationData2&#39;)&quot;;\n\n        public static string xpath11 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 2]&quot;;\n\n\n        public static Message CreateMessage()\n        {\n            StringReader stringReader = new StringReader(messageBody);\n            XmlTextReader xmlReader = new XmlTextReader(stringReader);\n            Message message = Message.CreateMessage(MessageVersion.Soap12WSAddressing10, &quot;http://purchaseorder&quot;, xmlReader);\n\n            // Add two correlation properties using lambda expressions. The property names are\n            // CorrelationData1 and CorrelationData2. The first goes to &quot;value1&quot; and the\n            // second to &quot;value2&quot;. You can use your own property names and values.\n            CorrelationDataMessageProperty data = new CorrelationDataMessageProperty();\n\n            data.Add(&quot;CorrelationData1&quot;, () =&gt; &quot;value1&quot;);\n            data.Add(&quot;CorrelationData2&quot;, () =&gt; &quot;value2&quot;);\n            message.Properties[CorrelationDataMessageProperty.Name] = data;\n\n            return message;\n        }\n\n\n\n        public static XPathMessageQueryCollection SetupQueryCollection()\n        {\n            // Create the query collection and add the XPath queries to it. To create\n            // the query, you must also use a new XPathMessageContext.\n\n            XPathMessageQueryCollection queryCollection = new XPathMessageQueryCollection();\n\n            XPathMessageContext context = new XPathMessageContext();\n            queryCollection.Add(new XPathMessageQuery(xpath, context));\n            queryCollection.Add(new XPathMessageQuery(xpath2, context));\n            queryCollection.Add(new XPathMessageQuery(xpath3, context));\n            queryCollection.Add(new XPathMessageQuery(xpath4, context));\n            queryCollection.Add(new XPathMessageQuery(xpath5, context));\n            queryCollection.Add(new XPathMessageQuery(xpath6, context));\n            queryCollection.Add(new XPathMessageQuery(xpath7, context));\n            queryCollection.Add(new XPathMessageQuery(xpath8, context));\n            queryCollection.Add(new XPathMessageQuery(xpath9, context));\n            queryCollection.Add(new XPathMessageQuery(xpath10, context));\n            queryCollection.Add(new XPathMessageQuery(xpath11, context));\n\n            return queryCollection;\n        }\n\n        public static MessageQueryTable&lt;string&gt; SetupTable()\n        {\n            // This is optional code to demonstrate using a MessageQueryTable.\n            // Compare this to the MessageQueryCollection.\n            MessageQueryTable&lt;string&gt; table = new MessageQueryTable&lt;string&gt;();\n            XPathMessageContext context = new XPathMessageContext();\n\n\n            // The code adds a KeyValuePair to the table. Each pair requires\n            // a query used as the Key, and a value that is paired to the key.\n            table.Add(new XPathMessageQuery(xpath, context), &quot;value10&quot;);\n            table.Add(new XPathMessageQuery(xpath2, context), &quot;value20&quot;);\n            table.Add(new XPathMessageQuery(xpath3, context), &quot;value30&quot;);\n            table.Add(new XPathMessageQuery(xpath4, context), &quot;value40&quot;);\n            table.Add(new XPathMessageQuery(xpath5, context), &quot;value50&quot;);\n            table.Add(new XPathMessageQuery(xpath6, context), &quot;value60&quot;);\n            table.Add(new XPathMessageQuery(xpath7, context), &quot;value70&quot;);\n            table.Add(new XPathMessageQuery(xpath8, context), &quot;value80&quot;);\n            table.Add(new XPathMessageQuery(xpath9, context), &quot;value90&quot;);\n            table.Add(new XPathMessageQuery(xpath10, context), &quot;value100&quot;);\n            table.Add(new XPathMessageQuery(xpath11, context), &quot;value110&quot;);\n            return table;\n        }\n    }    \n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_XPathResult_ResultType_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_XPathResult_ResultType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResultType</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the type of the value returned by the XPath query.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XPath.XPathResultType ResultType { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathresulttype\" data-linktype=\"relative-path\">XPathResultType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<a class=\"xref\" href=\"system.xml.xpath.xpathresulttype\" data-linktype=\"relative-path\">XPathResultType</a>  \n\n<p> One of the enumeration values. To get the actual result, use the corresponding method. For example, if the value is <a class=\"xref\" href=\"system.xml.xpath.xpathresulttype\" data-linktype=\"relative-path\">XPathResultType</a>, use the <span class=\"xref\">stem.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber*</span> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_XPathResult_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_XPathResult_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases all resources owed by the object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsBoolean_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsBoolean\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResultAsBoolean()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the result of the XPath query as a Boolean value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool GetResultAsBoolean ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsNodeset_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsNodeset\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResultAsNodeset()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the result of the XPath query as an enumerable set of nodes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XPath.XPathNodeIterator GetResultAsNodeset ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnodeiterator\" data-linktype=\"relative-path\">XPathNodeIterator</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<a class=\"xref\" href=\"system.xml.xpath.xpathnodeiterator\" data-linktype=\"relative-path\">XPathNodeIterator</a>  \n\n<p> A collection of XPath nodes that can be iterated over.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.xml.xpath.xpathnodeiterator#System_Xml_XPath_XPathNodeIterator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> method of the <a class=\"xref\" href=\"system.xml.xpath.xpathnodeiterator\" data-linktype=\"relative-path\">XPathNodeIterator</a> class within a loop to see the value of each node.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsNumber_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsNumber\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResultAsNumber()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the result of the XPath query as a number.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double GetResultAsNumber ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsString_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_XPathResult_GetResultAsString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResultAsString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the result of the XPath query as a string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string GetResultAsString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>Returns <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Dispatcher.XPathResult.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.XPathResult\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.XPathResult.Dispose\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.XPathResult.GetResultAsBoolean\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.XPathResult.GetResultAsNodeset\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.XPathResult.GetResultAsString\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.XPathResult.ResultType\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"ab6e669e-343f-34f8-e2e4-603bd9fe8533\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains the value returned by an XPath query.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.servicemodel.dispatcher/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Dispatcher.XPathResult\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Dispatcher.XPathResult.yml","open_to_public_contributors":false,"api_name":["System.ServiceModel.Dispatcher.XPathResult","System.ServiceModel.Dispatcher.XPathResult.Dispose","System.ServiceModel.Dispatcher.XPathResult.GetResultAsBoolean","System.ServiceModel.Dispatcher.XPathResult.GetResultAsNodeset","System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber","System.ServiceModel.Dispatcher.XPathResult.GetResultAsString","System.ServiceModel.Dispatcher.XPathResult.ResultType"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Dispatcher.XPathResult","System::ServiceModel::Dispatcher::XPathResult","System.ServiceModel.Dispatcher.XPathResult.Dispose","System::ServiceModel::Dispatcher::XPathResult::Dispose","System.ServiceModel.Dispatcher.XPathResult.GetResultAsBoolean","System::ServiceModel::Dispatcher::XPathResult::GetResultAsBoolean","System.ServiceModel.Dispatcher.XPathResult.GetResultAsNodeset","System::ServiceModel::Dispatcher::XPathResult::GetResultAsNodeset","System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber","System::ServiceModel::Dispatcher::XPathResult::GetResultAsNumber","System.ServiceModel.Dispatcher.XPathResult.GetResultAsString","System::ServiceModel::Dispatcher::XPathResult::GetResultAsString","System.ServiceModel.Dispatcher.XPathResult.ResultType","System::ServiceModel::Dispatcher::XPathResult::ResultType"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"ab6e669e-343f-34f8-e2e4-603bd9fe8533","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ServiceModel.Dispatcher/XPathResult.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XPathResult class | Microsoft Docs","_op_ogTitle":"XPathResult class","description":"Contains the value returned by an XPath query.\n","toc_asset_id":"api/_splitted/System.ServiceModel.Dispatcher/toc.json","toc_rel":"_splitted/System.ServiceModel.Dispatcher/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Dispatcher.XPathResult","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.dispatcher.xpathresult","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.dispatcher.xpathresult","fileRelativePath":"api/System.ServiceModel.Dispatcher.XPathResult.html"},"themesRelativePathToOutputRoot":"_themes/"}