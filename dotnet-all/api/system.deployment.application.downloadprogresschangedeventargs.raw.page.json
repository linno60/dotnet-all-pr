{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DownloadProgressChangedEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.deployment.application.inplacehostingmanager#System_Deployment_Application_InPlaceHostingManager_DownloadProgressChanged\" data-linktype=\"relative-path\">DownloadProgressChanged</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class DownloadProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.progresschangedeventargs\" data-linktype=\"relative-path\">ProgressChangedEventArgs</a></span></div><span class=\"lang-csharp\">DownloadProgressChangedEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.progresschangedeventargs#System_ComponentModel_ProgressChangedEventArgs_ProgressPercentage\" data-linktype=\"relative-path\">ProgressPercentage</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.progresschangedeventargs#System_ComponentModel_ProgressChangedEventArgs_UserState\" data-linktype=\"relative-path\">UserState</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the use of DownloadProgressChangedEventArgs in the context of an application that uses <a class=\"xref\" href=\"system.deployment.application.inplacehostingmanager\" data-linktype=\"relative-path\">InPlaceHostingManager</a> to download and install a ClickOnce application programmatically.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Deployment.Application.InPlaceHostingManager#1\">    Dim WithEvents iphm As InPlaceHostingManager = Nothing\n\n    Public Sub InstallApplication(ByVal deployManifestUriStr As String)\n        Try\n            Dim deploymentUri As New Uri(deployManifestUriStr)\n            iphm = New InPlaceHostingManager(deploymentUri, False)\n            MessageBox.Show(&quot;Created the object.&quot;)\n        Catch uriEx As UriFormatException\n            MessageBox.Show(&quot;Cannot install the application: &quot; &amp; _\n                            &quot;The deployment manifest URL supplied is not a valid URL.&quot; &amp; _\n                            &quot;Error: &quot; &amp; uriEx.Message)\n            Return\n        Catch platformEx As PlatformNotSupportedException\n            MessageBox.Show(&quot;Cannot install the application: &quot; &amp; _\n                            &quot;This program requires Windows XP or higher. &quot; &amp; _\n                            &quot;Error: &quot; &amp; platformEx.Message)\n            Return\n        Catch argumentEx As ArgumentException\n            MessageBox.Show(&quot;Cannot install the application: &quot; &amp; _\n                            &quot;The deployment manifest URL supplied is not a valid URL.&quot; &amp; _\n                            &quot;Error: &quot; &amp; argumentEx.Message)\n            Return\n        End Try\n\n        iphm.GetManifestAsync()\n    End Sub\n\n    Private Sub iphm_GetManifestCompleted(ByVal sender As Object, ByVal e As GetManifestCompletedEventArgs) Handles iphm.GetManifestCompleted\n        &#39; Check for an error.\n        If (e.Error IsNot Nothing) Then\n            &#39; Cancel download and install.\n            MessageBox.Show(&quot;Could not download manifest. Error: &quot; &amp; e.Error.Message)\n            Return\n        End If\n\n        &#39; Dim isFullTrust As Boolean = CheckForFullTrust(e.ApplicationManifest)\n\n        &#39; Verify this application can be installed.\n        Try\n            &#39; the true parameter allows InPlaceHostingManager\n            &#39; to grant the permissions requested in the application manifest. \n            iphm.AssertApplicationRequirements(True)\n        Catch ex As Exception\n            MessageBox.Show(&quot;An error occurred while verifying the application. &quot; &amp; _\n                            &quot;Error text: &quot; &amp; ex.Message)\n            Return\n        End Try\n\n        &#39; Use the information from GetManifestCompleted() to confirm \n        &#39; that the user wants to proceed.\n        Dim appInfo As String = &quot;Application Name: &quot; &amp; e.ProductName\n        appInfo &amp;= ControlChars.Lf &amp; &quot;Version: &quot; &amp; e.Version.ToString()\n        appInfo &amp;= ControlChars.Lf &amp; &quot;Support/Help Requests: &quot;\n\n        If Not (e.SupportUri Is Nothing) Then\n            appInfo &amp;= e.SupportUri.ToString()\n        Else\n            appInfo &amp;= &quot;N/A&quot;\n        End If\n\n        appInfo &amp;= ControlChars.Lf &amp; ControlChars.Lf &amp; _\n            &quot;Confirmed that this application can run with its requested permissions.&quot;\n\n        &#39; If isFullTrust Then\n        &#39;    appInfo &amp;= ControlChars.Lf &amp; ControlChars.Lf &amp; _\n        &#39;        &quot;This application requires full trust in order to run.&quot;\n        &#39; End If\n\n        appInfo &amp;= ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Proceed with installation?&quot;\n\n        Dim dr As DialogResult = MessageBox.Show(appInfo, _\n            &quot;Confirm Application Install&quot;, MessageBoxButtons.OKCancel, MessageBoxIcon.Question)\n        If dr &lt;&gt; System.Windows.Forms.DialogResult.OK Then\n            Return\n        End If\n\n        &#39; Download the deployment manifest. \n        &#39; Usually, this shouldn&#39;t throw an exception unless \n        &#39; AssertApplicationRequirements() failed, or you did not call that method\n        &#39; before calling this one.\n        Try\n            iphm.DownloadApplicationAsync()\n        Catch downloadEx As Exception\n            MessageBox.Show(&quot;Cannot initiate download of application. Error: &quot; &amp; downloadEx.Message)\n            Return\n        End Try\n    End Sub\n\n#If 0 Then\n    Private Function CheckForFullTrust(ByVal appManifest As XmlReader) As Boolean\n        Dim isFullTrust As Boolean = False\n\n        If (appManifest Is Nothing) Then\n            Throw New ArgumentNullException(&quot;appManifest cannot be null.&quot;)\n        End If\n\n        Dim xaUnrestricted As XAttribute\n        xaUnrestricted = XDocument.Load(appManifest) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v1}assembly&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}trustInfo&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}security&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}applicationRequestMinimum&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}PermissionSet&quot;) _\n            .Attribute(&quot;Unrestricted&quot;)  &#39; Attributes never have a namespace\n\n\n        If xaUnrestricted Then\n            If xaUnrestricted.Value = &quot;true&quot; Then\n                Return True\n            End If\n        End If\n\n        Return False\n    End Function\n#End If\n\n    Private Sub iphm_DownloadProgressChanged(ByVal sender As Object, ByVal e As DownloadProgressChangedEventArgs) Handles iphm.DownloadProgressChanged\n        &#39; you can show percentage of task completed using e.ProgressPercentage\n    End Sub\n\n    Private Sub iphm_DownloadApplicationCompleted(ByVal sender As Object, ByVal e As DownloadApplicationCompletedEventArgs) Handles iphm.DownloadApplicationCompleted\n        &#39; Check for an error.\n        If (e.Error IsNot Nothing) Then\n            &#39; Cancel download and install.\n            MessageBox.Show(&quot;Could not download and install application. Error: &quot; &amp; e.Error.Message)\n            Return\n        End If\n\n        &#39; Inform the user that their application is ready for use. \n        MessageBox.Show(&quot;Application installed! You may now run it from the Start menu.&quot;)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Deployment.Application.InPlaceHostingManager#1\">InPlaceHostingManager iphm = null;\n\npublic void InstallApplication(string deployManifestUriStr)\n{\n    try\n    {\n        Uri deploymentUri = new Uri(deployManifestUriStr);\n        iphm = new InPlaceHostingManager(deploymentUri, false);\n    }\n    catch (UriFormatException uriEx)\n    {\n        MessageBox.Show(&quot;Cannot install the application: &quot; + \n            &quot;The deployment manifest URL supplied is not a valid URL. &quot; +\n            &quot;Error: &quot; + uriEx.Message);\n        return;\n    }\n    catch (PlatformNotSupportedException platformEx)\n    {\n        MessageBox.Show(&quot;Cannot install the application: &quot; + \n            &quot;This program requires Windows XP or higher. &quot; +\n            &quot;Error: &quot; + platformEx.Message);\n        return;\n    }\n    catch (ArgumentException argumentEx)\n    {\n        MessageBox.Show(&quot;Cannot install the application: &quot; + \n            &quot;The deployment manifest URL supplied is not a valid URL. &quot; +\n            &quot;Error: &quot; + argumentEx.Message);\n        return;\n    }\n\n    iphm.GetManifestCompleted += new EventHandler&lt;GetManifestCompletedEventArgs&gt;(iphm_GetManifestCompleted);\n    iphm.GetManifestAsync();\n}\n\nvoid iphm_GetManifestCompleted(object sender, GetManifestCompletedEventArgs e)\n{\n    // Check for an error.\n    if (e.Error != null)\n    {\n        // Cancel download and install.\n        MessageBox.Show(&quot;Could not download manifest. Error: &quot; + e.Error.Message);\n        return;\n    }\n\n    // bool isFullTrust = CheckForFullTrust(e.ApplicationManifest);\n\n    // Verify this application can be installed.\n    try\n    {\n        // the true parameter allows InPlaceHostingManager\n        // to grant the permissions requested in the applicaiton manifest.\n        iphm.AssertApplicationRequirements(true) ; \n    }\n    catch (Exception ex)\n    {\n        MessageBox.Show(&quot;An error occurred while verifying the application. &quot; +\n            &quot;Error: &quot; + ex.Message);\n        return;\n    }\n\n    // Use the information from GetManifestCompleted() to confirm \n    // that the user wants to proceed.\n    string appInfo = &quot;Application Name: &quot; + e.ProductName;\n    appInfo += &quot;\\nVersion: &quot; + e.Version;\n    appInfo += &quot;\\nSupport/Help Requests: &quot; + (e.SupportUri != null ?\n        e.SupportUri.ToString() : &quot;N/A&quot;);\n    appInfo += &quot;\\n\\nConfirmed that this application can run with its requested permissions.&quot;;\n    // if (isFullTrust)\n    // appInfo += &quot;\\n\\nThis application requires full trust in order to run.&quot;;\n    appInfo += &quot;\\n\\nProceed with installation?&quot;;\n\n    DialogResult dr = MessageBox.Show(appInfo, &quot;Confirm Application Install&quot;,\n        MessageBoxButtons.OKCancel, MessageBoxIcon.Question);\n    if (dr != System.Windows.Forms.DialogResult.OK)\n    {\n        return;\n    }\n\n    // Download the deployment manifest. \n    iphm.DownloadProgressChanged += new EventHandler&lt;DownloadProgressChangedEventArgs&gt;(iphm_DownloadProgressChanged);\n    iphm.DownloadApplicationCompleted += new EventHandler&lt;DownloadApplicationCompletedEventArgs&gt;(iphm_DownloadApplicationCompleted);\n\n    try\n    {\n        // Usually this shouldn&#39;t throw an exception unless AssertApplicationRequirements() failed, \n        // or you did not call that method before calling this one.\n        iphm.DownloadApplicationAsync();\n    }\n    catch (Exception downloadEx)\n    {\n        MessageBox.Show(&quot;Cannot initiate download of application. Error: &quot; +\n            downloadEx.Message);\n        return;\n    }\n}\n\n/*\nprivate bool CheckForFullTrust(XmlReader appManifest)\n{\n    if (appManifest == null)\n    {\n        throw (new ArgumentNullException(&quot;appManifest cannot be null.&quot;));\n    }\n\n    XAttribute xaUnrestricted =\n        XDocument.Load(appManifest)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v1}assembly&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}trustInfo&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}security&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}applicationRequestMinimum&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}PermissionSet&quot;)\n            .Attribute(&quot;Unrestricted&quot;); // Attributes never have a namespace\n\n    if (xaUnrestricted != null)\n        if (xaUnrestricted.Value == &quot;true&quot;)\n            return true;\n\n    return false;\n}\n*/\n\nvoid iphm_DownloadApplicationCompleted(object sender, DownloadApplicationCompletedEventArgs e)\n{\n    // Check for an error.\n    if (e.Error != null)\n    {\n        // Cancel download and install.\n        MessageBox.Show(&quot;Could not download and install application. Error: &quot; + e.Error.Message);\n        return;\n    }\n\n    // Inform the user that their application is ready for use. \n    MessageBox.Show(&quot;Application installed! You may now run it from the Start menu.&quot;);\n}\n\nvoid iphm_DownloadProgressChanged(object sender, DownloadProgressChangedEventArgs e)\n{\n    // you can show percentage of task completed using e.ProgressPercentage\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>In a console application, since events are assigned to threads out of a thread pool, you might receive update progress events out of order, with a subsequent event showing a decrease compared to a previous event. You will not see such behavior in a Windows Forms application, because events in Windows Forms are processed sequentially out of the UI thread&#39;s message queue.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Deployment_Application_DownloadProgressChangedEventArgs_BytesDownloaded_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_DownloadProgressChangedEventArgs_BytesDownloaded\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BytesDownloaded</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of bytes downloaded to the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long BytesDownloaded { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> representing the number of downloaded bytes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Deployment_Application_DownloadProgressChangedEventArgs_State_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_DownloadProgressChangedEventArgs_State\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">State</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the progress state of the download.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Deployment.Application.DeploymentProgressState State { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.deploymentprogressstate\" data-linktype=\"relative-path\">DeploymentProgressState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.deployment.application.deploymentprogressstate\" data-linktype=\"relative-path\">DeploymentProgressState</a> value describing which portion of the ClickOnce application is being downloaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Deployment_Application_DownloadProgressChangedEventArgs_TotalBytesToDownload_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_DownloadProgressChangedEventArgs_TotalBytesToDownload\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TotalBytesToDownload</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the total number of bytes for the download operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long TotalBytesToDownload { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> representing the total size of the download, in bytes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Deployment.Application.DownloadProgressChangedEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DownloadProgressChangedEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DownloadProgressChangedEventArgs.BytesDownloaded\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DownloadProgressChangedEventArgs.State\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DownloadProgressChangedEventArgs.TotalBytesToDownload\">\r\n<meta name=\"APILocation\" content=\"System.Deployment.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"5ff9b9bb-6cc6-9ac9-d179-39accfcad258\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.deployment.application/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Deployment.Application.DownloadProgressChangedEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Deployment.Application.DownloadProgressChangedEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Deployment.Application.DownloadProgressChangedEventArgs","System.Deployment.Application.DownloadProgressChangedEventArgs.BytesDownloaded","System.Deployment.Application.DownloadProgressChangedEventArgs.State","System.Deployment.Application.DownloadProgressChangedEventArgs.TotalBytesToDownload"],"api_location":["System.Deployment.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Deployment.Application.DownloadProgressChangedEventArgs","System::Deployment::Application::DownloadProgressChangedEventArgs","System.Deployment.Application.DownloadProgressChangedEventArgs.BytesDownloaded","System::Deployment::Application::DownloadProgressChangedEventArgs::BytesDownloaded","System.Deployment.Application.DownloadProgressChangedEventArgs.State","System::Deployment::Application::DownloadProgressChangedEventArgs::State","System.Deployment.Application.DownloadProgressChangedEventArgs.TotalBytesToDownload","System::Deployment::Application::DownloadProgressChangedEventArgs::TotalBytesToDownload"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"5ff9b9bb-6cc6-9ac9-d179-39accfcad258","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Deployment.Application/DownloadProgressChangedEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DownloadProgressChangedEventArgs class | Microsoft Docs","_op_ogTitle":"DownloadProgressChangedEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"api/_splitted/System.Deployment.Application/toc.json","toc_rel":"_splitted/System.Deployment.Application/toc.json","source_url":"","ms.assetid":"System.Deployment.Application.DownloadProgressChangedEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.deployment.application.downloadprogresschangedeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.deployment.application.downloadprogresschangedeventargs","fileRelativePath":"api/System.Deployment.Application.DownloadProgressChangedEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}