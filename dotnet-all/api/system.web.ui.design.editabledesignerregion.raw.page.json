{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EditableDesignerRegion</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents an editable content region within the design-time markup for the associated control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class EditableDesignerRegion : System.Web.UI.Design.DesignerRegion</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerobject\" data-linktype=\"relative-path\">DesignerObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion\" data-linktype=\"relative-path\">DesignerRegion</a></span></div><span class=\"lang-csharp\">EditableDesignerRegion</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.templatededitabledesignerregion\" data-linktype=\"relative-path\">TemplatedEditableDesignerRegion</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.webcontrols.wizardstepeditableregion\" data-linktype=\"relative-path\">WizardStepEditableRegion</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerobject#System_Web_UI_Design_DesignerObject_Designer\" data-linktype=\"relative-path\">Designer</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerobject#System_Web_UI_Design_DesignerObject_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerobject#System_Web_UI_Design_DesignerObject_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerobject#System_Web_UI_Design_DesignerObject_Properties\" data-linktype=\"relative-path\">Properties</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerobject#System_Web_UI_Design_DesignerObject_System_IServiceProvider_GetService_System_Type_\" data-linktype=\"relative-path\">IServiceProvider.GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_Description\" data-linktype=\"relative-path\">Description</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_DesignerRegionAttributeName\" data-linktype=\"relative-path\">DesignerRegionAttributeName</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_DisplayName\" data-linktype=\"relative-path\">DisplayName</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_EnsureSize\" data-linktype=\"relative-path\">EnsureSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_GetBounds\" data-linktype=\"relative-path\">GetBounds()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_Highlight\" data-linktype=\"relative-path\">Highlight</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_Selectable\" data-linktype=\"relative-path\">Selectable</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_Selected\" data-linktype=\"relative-path\">Selected</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.designerregion#System_Web_UI_Design_DesignerRegion_UserData\" data-linktype=\"relative-path\">UserData</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This example shows how to create a control with two clickable regions and an EditableDesignerRegion object with two views, or templates. Compile the project, then open the page in a visual designer and switch to design (WYSIWYG) view. There are two clickable views, <strong>View1</strong> and <strong>View2</strong>. Click <strong>View1</strong> and drag the <a class=\"xref\" href=\"system.web.ui.webcontrols.checkbox\" data-linktype=\"relative-path\">CheckBox</a> control from the lower part of the page into the empty designer region just below the clickable regions. Click <strong>View2</strong> and drag the <a class=\"xref\" href=\"system.web.ui.webcontrols.radiobutton\" data-linktype=\"relative-path\">RadioButton</a> control into the empty designer region. Click <strong>View1</strong> again, and the region with the <a class=\"xref\" href=\"system.web.ui.webcontrols.checkbox\" data-linktype=\"relative-path\">CheckBox</a> reappears. Click <strong>View2</strong> and the region with the <a class=\"xref\" href=\"system.web.ui.webcontrols.radiobutton\" data-linktype=\"relative-path\">RadioButton</a> reappears. Switch back to source view to see how your changes are persisted in the HTML markup  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Your project must have a reference to the System.Design.dll assembly.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"SimpleMultiRegionControlDesigner#1\">Imports Microsoft.VisualBasic\nImports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Web.UI\nImports System.Web.UI.Design\nImports System.Web.UI.Design.WebControls\nImports System.Web.UI.WebControls\n\nNamespace Samples.ASPNet.ControlDesigners_VB\n\n    &lt; _\n        Designer(GetType(MyMultiRegionControlDesigner)), _\n        ToolboxData(&quot;&lt;{0}:MyMultiRegionControl runat=&quot;&quot;server&quot;&quot; width=&quot;&quot;200&quot;&quot;&gt;&lt;/{0}:MyMultiRegionControl&gt;&quot;) _\n    &gt; _\n    Public Class MyMultiRegionControl\n        Inherits CompositeControl\n\n        &#39; Define the templates that represent 2 views on the control\n        Private _view1 As ITemplate\n        Private _view2 As ITemplate\n        &#39; The current view on the control; 0 = view1, 1 = view2\n        Private _currentView As Integer = 0\n\n        &#39; Create persistable inner properties\n        &lt;PersistenceMode(PersistenceMode.InnerProperty), DefaultValue(CType(Nothing, ITemplate))&gt; _\n        Public Overridable Property View1() As ITemplate\n            Get\n                Return _view1\n            End Get\n            Set(ByVal value As ITemplate)\n                _view1 = value\n            End Set\n        End Property\n\n        &lt;PersistenceMode(PersistenceMode.InnerProperty), DefaultValue(CType(Nothing, ITemplate))&gt; _\n        Public Overridable Property View2() As ITemplate\n            Get\n                Return _view2\n            End Get\n            Set(ByVal value As ITemplate)\n                _view2 = value\n            End Set\n        End Property\n\n        Public Property CurrentView() As Integer\n            Get\n                Return _currentView\n            End Get\n            Set(ByVal value As Integer)\n                _currentView = value\n            End Set\n        End Property\n\n        &#39; Create a simple table with a row of two clickable, \n        &#39; readonly headers and a row with a single column, which \n        &#39; is the &#39;container&#39; to which we&#39;ll be adding controls.\n        Protected Overrides Sub CreateChildControls()\n            &#39; Start with a clean form\n            Controls.Clear()\n\n            &#39; Create a table\n            Dim t As New Table()\n            t.CellSpacing = 1\n            t.BorderStyle = BorderStyle\n            t.Width = Me.Width\n            t.Height = Me.Height\n\n            &#39; Create the header row\n            Dim tr As New TableRow()\n            tr.HorizontalAlign = HorizontalAlign.Center\n            tr.BackColor = Color.LightBlue\n\n            &#39; Create the first cell in the header row\n            Dim tc As New TableCell()\n            tc.Text = &quot;View 1&quot;\n            tc.Width = New Unit(&quot;50%&quot;)\n            tr.Cells.Add(tc)\n\n            &#39; Create the second cell in the header row\n            tc = New TableCell()\n            tc.Text = &quot;View 2&quot;\n            tc.Width = New Unit(&quot;50%&quot;)\n            tr.Cells.Add(tc)\n\n            t.Rows.Add(tr)\n\n            &#39; Create the second row for content\n            tr = New TableRow()\n            tr.HorizontalAlign = HorizontalAlign.Center\n\n            &#39; This cell represents our content &#39;container&#39;\n            tc = New TableCell()\n            tc.ColumnSpan = 2\n\n            &#39; Add the current view content to the cell \n            &#39; at run-time\n            If Not DesignMode Then\n                Dim containerControl As New Control()\n                Select Case CurrentView\n                    Case 0\n                        If Not (View1 Is Nothing) Then\n                            View1.InstantiateIn(containerControl)\n                        End If\n                    Case 1\n                        If Not (View2 Is Nothing) Then\n                            View2.InstantiateIn(containerControl)\n                        End If\n                End Select\n\n                tc.Controls.Add(containerControl)\n            End If\n\n            tr.Cells.Add(tc)\n\n            t.Rows.Add(tr)\n\n            &#39; Add the finished table to the Controls collection\n            Controls.Add(t)\n        End Sub\n\n    End Class\n\n    &#39; Region-based control designer for the above web control. \n    &#39; This is derived from CompositeControlDesigner.\n    Public Class MyMultiRegionControlDesigner\n        Inherits CompositeControlDesigner\n\n        Private myControl As MyMultiRegionControl\n\n        Public Overrides Sub Initialize(ByVal component As IComponent)\n            MyBase.Initialize(component)\n            myControl = CType(component, MyMultiRegionControl)\n        End Sub\n\n        &#39; Make this control resizeable on the design surface\n        Public Overrides ReadOnly Property AllowResize() As Boolean\n            Get\n                Return True\n            End Get\n        End Property\n\n        &#39; Use the base to create child controls, then add region markers\n        Protected Overrides Sub CreateChildControls()\n            MyBase.CreateChildControls()\n\n            &#39; Get a reference to the table, which is the first child control\n            Dim t As Table\n            t = CType(myControl.Controls(0), Table)\n\n            &#39; Add design time markers for each of the three regions\n            If Not IsNothing(t) Then\n                &#39; View1\n                t.Rows(0).Cells(0).Attributes(DesignerRegion.DesignerRegionAttributeName) = &quot;0&quot;\n                &#39; View2\n                t.Rows(0).Cells(1).Attributes(DesignerRegion.DesignerRegionAttributeName) = &quot;1&quot;\n                &#39; Editable region\n                t.Rows(1).Cells(0).Attributes(DesignerRegion.DesignerRegionAttributeName) = &quot;2&quot;\n            End If\n        End Sub\n\n        &#39; Handler for the Click event, which provides the region in the arguments.\n        Protected Overrides Sub OnClick(ByVal e As DesignerRegionMouseEventArgs)\n            If IsNothing(e.Region) Then\n                Return\n            End If\n\n            &#39; If the clicked region is not a header, return\n            If e.Region.Name.IndexOf(&quot;Header&quot;) &lt;&gt; 0 Then\n                Return\n            End If\n\n            &#39; Switch the current view if required\n            If e.Region.Name.Substring(6, 1) &lt;&gt; myControl.CurrentView.ToString() Then\n                myControl.CurrentView = Integer.Parse(e.Region.Name.Substring(6, 1))\n                MyBase.UpdateDesignTimeHtml()\n            End If\n        End Sub\n\n        &#39; Create the regions and design-time markup. Called by the designer host.\n        Public Overrides Function GetDesignTimeHtml(ByVal regions As DesignerRegionCollection) As String\n            &#39; Create 3 regions: 2 clickable headers and an editable row\n            regions.Add(New DesignerRegion(Me, &quot;Header0&quot;))\n            regions.Add(New DesignerRegion(Me, &quot;Header1&quot;))\n\n            &#39; Create an editable region and add it to the regions\n            Dim editableRegion As EditableDesignerRegion = _\n                New EditableDesignerRegion(Me, _\n                    &quot;Content&quot; &amp; myControl.CurrentView, False)\n            regions.Add(editableRegion)\n\n            &#39; Set the highlight for the selected region\n            regions(myControl.CurrentView).Highlight = True\n\n            &#39; Use the base class to render the markup\n            Return MyBase.GetDesignTimeHtml()\n        End Function\n\n        &#39; Get the content string for the selected region. Called by the designer host?\n        Public Overrides Function GetEditableDesignerRegionContent(ByVal region As EditableDesignerRegion) As String\n            &#39; Get a reference to the designer host\n            Dim host As IDesignerHost = CType(Component.Site.GetService(GetType(IDesignerHost)), IDesignerHost)\n\n            If Not IsNothing(host) Then\n                Dim template As ITemplate = myControl.View1\n                If region.Name = &quot;Content1&quot; Then\n                    template = myControl.View2\n                End If\n\n                &#39; Persist the template in the design host\n                If Not IsNothing(template) Then\n                    Return ControlPersister.PersistTemplate(template, host)\n                End If\n            End If\n\n            Return String.Empty\n        End Function\n\n        &#39; Create a template from the content string and put it \n        &#39; in the selected view. Called by the designer host?\n        Public Overrides Sub SetEditableDesignerRegionContent(ByVal region As EditableDesignerRegion, ByVal content As String)\n            If IsNothing(content) Then\n                Return\n            End If\n\n            &#39; Get a reference to the designer host\n            Dim host As IDesignerHost = CType(Component.Site.GetService(GetType(IDesignerHost)), IDesignerHost)\n            If Not IsNothing(host) Then\n                &#39; Create a template from the content string\n                Dim template As ITemplate = ControlParser.ParseTemplate(host, content)\n\n                &#39; Determine which region should get the template\n                If region.Name.EndsWith(&quot;0&quot;) Then\n                    myControl.View1 = template\n                ElseIf region.Name.EndsWith(&quot;1&quot;) Then\n                    myControl.View2 = template\n                End If\n\n            End If\n        End Sub\n    End Class\n\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"SimpleMultiRegionControlDesigner#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Web.UI;\nusing System.Web.UI.Design;\nusing System.Web.UI.Design.WebControls;\nusing System.Web.UI.WebControls;\n\nnamespace Samples.ASPNet.ControlDesigners_CS \n{\n    [\n        Designer(typeof(MyMultiRegionControlDesigner)), \n        ToolboxData(&quot;&lt;{0}:MyMultiRegionControl runat=\\&quot;server\\&quot; width=\\&quot;200\\&quot;&gt;&lt;/{0}:MyMultiRegionControl&gt;&quot;)\n    ]\n    public class MyMultiRegionControl : CompositeControl\n    {\n        // Define the templates that represent 2 views on the control\n        private ITemplate _view1;\n        private ITemplate _view2;\n\n        // Create persistable inner properties \n        // for the two editable views\n        [PersistenceMode(PersistenceMode.InnerProperty), DefaultValue(null)]\n        public virtual ITemplate View1\n        {\n            get { return _view1; }\n            set { _view1 = value; }\n        }\n        [PersistenceMode(PersistenceMode.InnerProperty), DefaultValue(null)]\n        public virtual ITemplate View2\n        {\n            get { return _view2; }\n            set { _view2 = value; }\n        }\n\n        // The current view on the control; 0 = view1, 1 = view2\n        private int _currentView = 0;\n        public int CurrentView\n        {\n            get { return _currentView; }\n            set { _currentView = value; }\n        }\n\n        // Create a simple table with a row of two clickable, \n        // readonly headers and a row with a single column, which \n        // is the &#39;container&#39; to which we&#39;ll be adding controls.\n        protected override void CreateChildControls()\n        {\n            // Always start with a clean form\n            Controls.Clear();\n\n            // Create a table using the control&#39;s declarative properties\n            Table t = new Table();\n            t.CellSpacing = 1;\n            t.BorderStyle = BorderStyle;\n            t.Width = this.Width;\n            t.Height = this.Height;\n\n            // Create the header row\n            TableRow tr = new TableRow();\n            tr.HorizontalAlign = HorizontalAlign.Center;\n            tr.BackColor = Color.LightBlue;\n\n            // Create the first cell in the header row\n            TableCell tc = new TableCell();\n            tc.Text = &quot;View 1&quot;;\n            tc.Width = new Unit(&quot;50%&quot;);\n            tr.Cells.Add(tc);\n\n            // Create the second cell in the header row\n            tc = new TableCell();\n            tc.Text = &quot;View 2&quot;;\n            tc.Width = new Unit(&quot;50%&quot;);\n            tr.Cells.Add(tc);\n\n            t.Rows.Add(tr);\n\n            // Create the second row for content\n            tr = new TableRow();\n            tr.HorizontalAlign = HorizontalAlign.Center;\n\n            // This cell represents our content &#39;container&#39;\n            tc = new TableCell();\n            tc.ColumnSpan = 2;\n\n            // Add the current view content to the cell\n            // at run-time\n            if (!DesignMode)\n            {\n                Control containerControl = new Control();\n                switch (CurrentView)\n                {\n                    case 0:\n                        if (View1 != null)\n                            View1.InstantiateIn(containerControl);\n                        break;\n                    case 1:\n                        if (View2 != null)\n                            View2.InstantiateIn(containerControl);\n                        break;\n                }\n\n                tc.Controls.Add(containerControl);\n            }\n\n            tr.Cells.Add(tc);\n\n            t.Rows.Add(tr);\n\n            // Add the finished table to the Controls collection\n            Controls.Add(t);\n        }\n    }\n\n    //---------------------------------------------------------\n    // Region-based control designer for the above web control, \n    // derived from CompositeControlDesigner.\n    public class MyMultiRegionControlDesigner : CompositeControlDesigner \n    {\n        private MyMultiRegionControl myControl;\n\n        public override void Initialize(IComponent component)\n        {\n            base.Initialize(component);\n            myControl = (MyMultiRegionControl)component;\n        }\n\n        // Make this control resizeable on the design surface\n        public override bool AllowResize\n        {\n            get\n            {\n                return true;\n            }\n        }\n\n        // Use the base to create child controls, then add region markers\n        protected override void CreateChildControls() {\n            base.CreateChildControls();\n\n            // Get a reference to the table, which is the first child control\n            Table t = (Table)myControl.Controls[0];\n\n            // Add design time markers for each of the three regions\n            if (t != null)\n            {\n                // View1\n                t.Rows[0].Cells[0].Attributes[DesignerRegion.DesignerRegionAttributeName] = &quot;0&quot;;\n                // View2\n                t.Rows[0].Cells[1].Attributes[DesignerRegion.DesignerRegionAttributeName] = &quot;1&quot;;\n                // Editable region\n                t.Rows[1].Cells[0].Attributes[DesignerRegion.DesignerRegionAttributeName] = &quot;2&quot;;\n            }\n        }\n\n        // Handler for the Click event, which provides the region in the arguments.\n        protected override void OnClick(DesignerRegionMouseEventArgs e)\n        {\n            if (e.Region == null)\n                return;\n\n            // If the clicked region is not a header, return\n            if (e.Region.Name.IndexOf(&quot;Header&quot;) != 0)\n                return;\n\n            // Switch the current view if required\n            if (e.Region.Name.Substring(6, 1) != myControl.CurrentView.ToString())\n            {\n                myControl.CurrentView = int.Parse(e.Region.Name.Substring(6, 1));\n                base.UpdateDesignTimeHtml();\n            }\n        }\n\n        // Create the regions and design-time markup. Called by the designer host.\n        public override String GetDesignTimeHtml(DesignerRegionCollection regions) {\n            // Create 3 regions: 2 clickable headers and an editable row\n            regions.Add(new DesignerRegion(this, &quot;Header0&quot;));\n            regions.Add(new DesignerRegion(this, &quot;Header1&quot;));\n\n            // Create an editable region and add it to the regions\n            EditableDesignerRegion editableRegion = \n                new EditableDesignerRegion(this, \n                    &quot;Content&quot; + myControl.CurrentView, false);\n            regions.Add(editableRegion);\n\n            // Set the highlight for the selected region\n            regions[myControl.CurrentView].Highlight = true;\n\n            // Use the base class to render the markup\n            return base.GetDesignTimeHtml();\n        }\n\n        // Get the content string for the selected region. Called by the designer host?\n        public override string GetEditableDesignerRegionContent(EditableDesignerRegion region) \n        {\n            // Get a reference to the designer host\n            IDesignerHost host = (IDesignerHost)Component.Site.GetService(typeof(IDesignerHost));\n            if (host != null)\n            {\n                ITemplate template = myControl.View1;\n                if (region.Name == &quot;Content1&quot;)\n                    template = myControl.View2;\n\n                // Persist the template in the design host\n                if (template != null)\n                    return ControlPersister.PersistTemplate(template, host);\n            }\n\n            return String.Empty;\n        }\n\n        // Create a template from the content string and  \n        // put it in the selected view.\n        public override void SetEditableDesignerRegionContent(EditableDesignerRegion region, string content)\n        {\n            if (content == null)\n                return;\n\n            // Get a reference to the designer host\n            IDesignerHost host = (IDesignerHost)Component.Site.GetService(typeof(IDesignerHost));\n            if (host != null)\n            {\n                // Create a template from the content string\n                ITemplate template = ControlParser.ParseTemplate(host, content);\n\n                // Determine which region should get the template\n                // Either &#39;Content0&#39; or &#39;Content1&#39;\n                if (region.Name.EndsWith(&quot;0&quot;))\n                    myControl.View1 = template;\n                else if (region.Name.EndsWith(&quot;1&quot;))\n                    myControl.View2 = template;\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"SimpleMultiRegionControlDesigner#8\">&lt;%@ Page Language=&quot;C#&quot;  %&gt;\n&lt;%@ Register TagPrefix=&quot;aspSample&quot; \n    Assembly=&quot;Samples.ASPNet.ControlDesigners_CS&quot; \n    Namespace=&quot;Samples.ASPNet.ControlDesigners_CS&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Designers Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n\n        &lt;aspSample:MyMultiRegionControl ID=&quot;myCtl&quot; Runat=Server Width=200 Height=75 BorderStyle=solid &gt;\n        &lt;/aspSample:MyMultiRegionControl&gt;&lt;br /&gt;\n        &lt;asp:CheckBox ID=&quot;CheckBox1&quot; runat=&quot;server&quot; /&gt;\n        &lt;asp:RadioButton ID=&quot;RadioButton1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"SimpleMultiRegionControlDesigner#8\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Register TagPrefix=&quot;aspSample&quot; \n    Assembly=&quot;Samples.ASPNet.ControlDesigners_VB&quot; \n    Namespace=&quot;Samples.ASPNet.ControlDesigners_VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Designers Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n\n        &lt;aspSample:MyMultiRegionControl ID=&quot;myCtl&quot; Runat=Server Width=200 Height=75 BorderStyle=solid &gt;\n        &lt;/aspSample:MyMultiRegionControl&gt;&lt;br /&gt;\n        &lt;asp:CheckBox ID=&quot;CheckBox1&quot; runat=&quot;server&quot; /&gt;\n        &lt;asp:RadioButton ID=&quot;RadioButton1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the EditableDesignerRegion class to help manage templates at design time. A <a class=\"xref\" href=\"system.web.ui.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a> will use an instance of this class with its <a class=\"xref\" href=\"system.web.ui.design.controldesigner#System_Web_UI_Design_ControlDesigner_GetEditableDesignerRegionContent_\" data-linktype=\"relative-path\">GetEditableDesignerRegionContent</a> method to generate HTML markup of the region&#39;s content.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_Design_EditableDesignerRegion__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_Design_EditableDesignerRegion__ctor_System_Web_UI_Design_ControlDesigner_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EditableDesignerRegion(ControlDesigner, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.design.editabledesignerregion\" data-linktype=\"relative-path\">EditableDesignerRegion</a> class using the given owner and name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EditableDesignerRegion (System.Web.UI.Design.ControlDesigner owner, string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>owner</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.web.ui.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a> object, or a designer that derives from <a class=\"xref\" href=\"system.web.ui.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the region.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_Design_EditableDesignerRegion__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_Design_EditableDesignerRegion__ctor_System_Web_UI_Design_ControlDesigner_System_String_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EditableDesignerRegion(ControlDesigner, String, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new instance of the <a class=\"xref\" href=\"system.web.ui.design.editabledesignerregion\" data-linktype=\"relative-path\">EditableDesignerRegion</a> class using the given owner and name and the initial value of the <span class=\"xref\">stem.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly*</span> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EditableDesignerRegion (System.Web.UI.Design.ControlDesigner owner, string name, bool serverControlsOnly);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>owner</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.web.ui.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a> object, or a designer that derives from <a class=\"xref\" href=\"system.web.ui.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the region.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>serverControlsOnly</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to have the region accept only Web server controls for content; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_Design_EditableDesignerRegion_Content_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_Design_EditableDesignerRegion_Content\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Content</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the HTML markup for the content of the region.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string Content { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>HTML markup representing the content of the <a class=\"xref\" href=\"system.web.ui.design.editabledesignerregion\" data-linktype=\"relative-path\">EditableDesignerRegion</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_Design_EditableDesignerRegion_ServerControlsOnly_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_Design_EditableDesignerRegion_ServerControlsOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ServerControlsOnly</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the region can accept only Web server controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ServerControlsOnly { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the region can contain only Web server controls; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_Design_EditableDesignerRegion_SupportsDataBinding_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_Design_EditableDesignerRegion_SupportsDataBinding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SupportsDataBinding</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the region can be bound to a data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool SupportsDataBinding { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.web.ui.design.editabledesignerregion\" data-linktype=\"relative-path\">EditableDesignerRegion</a> content supports binding to a data source; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_Design_EditableDesignerRegion_GetChildViewRendering_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_Design_EditableDesignerRegion_GetChildViewRendering_System_Web_UI_Control_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChildViewRendering(Control)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.web.ui.design.viewrendering\" data-linktype=\"relative-path\">ViewRendering</a> object containing the design-time HTML markup for the given control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Web.UI.Design.ViewRendering GetChildViewRendering (System.Web.UI.Control control);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>control</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The control for which to get the <a class=\"xref\" href=\"system.web.ui.design.viewrendering\" data-linktype=\"relative-path\">ViewRendering</a> object for the current region.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.design.viewrendering\" data-linktype=\"relative-path\">ViewRendering</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.web.ui.design.viewrendering\" data-linktype=\"relative-path\">ViewRendering</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.Design.EditableDesignerRegion.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Design.EditableDesignerRegion\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Design.EditableDesignerRegion..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Design.EditableDesignerRegion.Content\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding\">\r\n<meta name=\"APILocation\" content=\"System.Design.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"e0f2824f-a686-0cff-77ee-210245a55696\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an editable content region within the design-time markup for the associated control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.Design.EditableDesignerRegion\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.Design.EditableDesignerRegion.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.Design.EditableDesignerRegion","System.Web.UI.Design.EditableDesignerRegion..ctor","System.Web.UI.Design.EditableDesignerRegion.Content","System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering","System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly","System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding"],"api_location":["System.Design.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.Design.EditableDesignerRegion","System::Web::UI::Design::EditableDesignerRegion","System.Web.UI.Design.EditableDesignerRegion.#ctor","System::Web::UI::Design::EditableDesignerRegion::#ctor","System.Web.UI.Design.EditableDesignerRegion.Content","System::Web::UI::Design::EditableDesignerRegion::Content","System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering","System::Web::UI::Design::EditableDesignerRegion::GetChildViewRendering","System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly","System::Web::UI::Design::EditableDesignerRegion::ServerControlsOnly","System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding","System::Web::UI::Design::EditableDesignerRegion::SupportsDataBinding"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"e0f2824f-a686-0cff-77ee-210245a55696","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.Design/EditableDesignerRegion.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EditableDesignerRegion class | Microsoft Docs","_op_ogTitle":"EditableDesignerRegion class","description":"Represents an editable content region within the design-time markup for the associated control.\n","toc_asset_id":"api/_splitted/System.Web.UI.Design/toc.json","toc_rel":"_splitted/System.Web.UI.Design/toc.json","source_url":"","ms.assetid":"System.Web.UI.Design.EditableDesignerRegion","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.design.editabledesignerregion","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.design.editabledesignerregion","fileRelativePath":"api/System.Web.UI.Design.EditableDesignerRegion.html"},"themesRelativePathToOutputRoot":"_themes/"}