{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GenericPrincipal</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a generic principal.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic class GenericPrincipal : System.Security.Claims.ClaimsPrincipal</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a></span></div><span class=\"lang-csharp\">GenericPrincipal</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.security.passportprincipal\" data-linktype=\"relative-path\">PassportPrincipal</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_AddIdentities_System_Collections_Generic_IEnumerable_System_Security_Claims_ClaimsIdentity__\" data-linktype=\"relative-path\">AddIdentities(IEnumerable&lt;ClaimsIdentity&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_AddIdentity_System_Security_Claims_ClaimsIdentity_\" data-linktype=\"relative-path\">AddIdentity(ClaimsIdentity)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Claims\" data-linktype=\"relative-path\">Claims</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_ClaimsPrincipalSelector\" data-linktype=\"relative-path\">ClaimsPrincipalSelector</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Clone\" data-linktype=\"relative-path\">Clone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_CreateClaimsIdentity_System_IO_BinaryReader_\" data-linktype=\"relative-path\">CreateClaimsIdentity(BinaryReader)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Current\" data-linktype=\"relative-path\">Current</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_CustomSerializationData\" data-linktype=\"relative-path\">CustomSerializationData</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindAll_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindAll(Predicate&lt;Claim&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindAll_System_String_\" data-linktype=\"relative-path\">FindAll(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindFirst_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindFirst(Predicate&lt;Claim&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindFirst_System_String_\" data-linktype=\"relative-path\">FindFirst(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo, StreamingContext)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_HasClaim_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">HasClaim(Predicate&lt;Claim&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_HasClaim_System_String_System_String_\" data-linktype=\"relative-path\">HasClaim(String, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Identities\" data-linktype=\"relative-path\">Identities</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_PrimaryIdentitySelector\" data-linktype=\"relative-path\">PrimaryIdentitySelector</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_WriteTo_System_IO_BinaryWriter_\" data-linktype=\"relative-path\">WriteTo(BinaryWriter)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_WriteTo_System_IO_BinaryWriter_System_Byte___\" data-linktype=\"relative-path\">WriteTo(BinaryWriter, Byte[])</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows the use of members of the GenericPrincipal class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Security.Principal.GenericPrincipal2#1\">using namespace System;\nusing namespace System::Security::Principal;\n\nref class GenericPrincipalMembers\n{\npublic:\n   [STAThread]\n   static void Main()\n   {\n      // Retrieve a GenericPrincipal that is based on the current user&#39;s\n      // WindowsIdentity.\n      GenericPrincipal^ genericPrincipal = GetGenericPrincipal();\n      \n      // Retrieve the generic identity of the GenericPrincipal object.\n      GenericIdentity^ principalIdentity =\n         dynamic_cast&lt;GenericIdentity^&gt;(genericPrincipal-&gt;Identity);\n\n      // Display the identity name and authentication type.\n      if ( principalIdentity-&gt;IsAuthenticated )\n      {\n         Console::WriteLine( principalIdentity-&gt;Name );\n         Console::WriteLine( L&quot;Type:{0}&quot;,\n            principalIdentity-&gt;AuthenticationType );\n      }\n      \n      // Verify that the generic principal has been assigned the\n      // NetworkUser role.\n      if ( genericPrincipal-&gt;IsInRole( L&quot;NetworkUser&quot; ) )\n      {\n         Console::WriteLine( L&quot;User belongs to the NetworkUser role.&quot; );\n      }\n      Console::WriteLine( L&quot;The sample completed successfully; &quot;\n      L&quot;press Enter to continue.&quot; );\n      Console::ReadLine();\n   }\n\nprivate:\n   // Create a generic principal based on values from the current\n   // WindowsIdentity.\n   static GenericPrincipal^ GetGenericPrincipal()\n   {\n      // Use values from the current WindowsIdentity to construct\n      // a set of GenericPrincipal roles.\n      WindowsIdentity^ windowsIdentity = WindowsIdentity::GetCurrent();\n      array&lt;String^&gt;^roles = gcnew array&lt;String^&gt;(10);\n      if ( windowsIdentity-&gt;IsAuthenticated )\n      {\n         \n         // Add custom NetworkUser role.\n         roles[ 0 ] = L&quot;NetworkUser&quot;;\n      }\n\n      if ( windowsIdentity-&gt;IsGuest )\n      {\n         \n         // Add custom GuestUser role.\n         roles[ 1 ] = L&quot;GuestUser&quot;;\n      }\n\n      if ( windowsIdentity-&gt;IsSystem )\n      {\n         \n         // Add custom SystemUser role.\n         roles[ 2 ] = L&quot;SystemUser&quot;;\n      }\n      \n      // Construct a GenericIdentity object based on the current Windows\n      // identity name and authentication type.\n      String^ authenticationType = windowsIdentity-&gt;AuthenticationType;\n      String^ userName = windowsIdentity-&gt;Name;\n      GenericIdentity^ genericIdentity = gcnew GenericIdentity(\n         userName,authenticationType );\n      \n      // Construct a GenericPrincipal object based on the generic identity\n      // and custom roles for the user.\n      GenericPrincipal^ genericPrincipal = gcnew GenericPrincipal(\n         genericIdentity,roles );\n\n      return genericPrincipal;\n   }\n};\n\nint main()\n{\n   GenericPrincipalMembers::Main();\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Principal.GenericPrincipal2#1\">using System;\nusing System.Security.Principal;\n\nclass GenericPrincipalMembers\n{\n    [STAThread]\n    static void Main(string[] args)\n    {\n        // Retrieve a GenericPrincipal that is based on the current user&#39;s\n        // WindowsIdentity.\n        GenericPrincipal genericPrincipal = GetGenericPrincipal();\n\n        // Retrieve the generic identity of the GenericPrincipal object.\n        GenericIdentity principalIdentity = \n            (GenericIdentity)genericPrincipal.Identity;\n\n        // Display the identity name and authentication type.\n        if (principalIdentity.IsAuthenticated)\n        {\n            Console.WriteLine(principalIdentity.Name);\n            Console.WriteLine(&quot;Type:&quot;+principalIdentity.AuthenticationType);\n        }\n\n        // Verify that the generic principal has been assigned the\n        // NetworkUser role.\n        if (genericPrincipal.IsInRole(&quot;NetworkUser&quot;))\n        {\n            Console.WriteLine(&quot;User belongs to the NetworkUser role.&quot;);\n        }\n\n        Console.WriteLine(&quot;The sample completed successfully; &quot; +\n            &quot;press Enter to continue.&quot;);\n        Console.ReadLine();\n    }\n\n    // Create a generic principal based on values from the current\n    // WindowsIdentity.\n    private static GenericPrincipal GetGenericPrincipal()\n    {\n        // Use values from the current WindowsIdentity to construct\n        // a set of GenericPrincipal roles.\n        WindowsIdentity windowsIdentity = WindowsIdentity.GetCurrent();\n        string[] roles = new string[10];\n        if (windowsIdentity.IsAuthenticated)\n        {\n            // Add custom NetworkUser role.\n            roles[0] = &quot;NetworkUser&quot;;\n        }\n\n        if (windowsIdentity.IsGuest)\n        {\n            // Add custom GuestUser role.\n            roles[1] = &quot;GuestUser&quot;;\n        }\n\n        if (windowsIdentity.IsSystem)\n        {\n            // Add custom SystemUser role.\n            roles[2] = &quot;SystemUser&quot;;\n        }\n\n        // Construct a GenericIdentity object based on the current Windows\n        // identity name and authentication type.\n        string authenticationType = windowsIdentity.AuthenticationType;\n        string userName = windowsIdentity.Name;\n        GenericIdentity genericIdentity =\n            new GenericIdentity(userName, authenticationType);\n\n        // Construct a GenericPrincipal object based on the generic identity\n        // and custom roles for the user.\n        GenericPrincipal genericPrincipal =\n            new GenericPrincipal(genericIdentity, roles);\n\n        return genericPrincipal;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.GenericPrincipal2#1\">Imports System\nImports System.Security.Principal\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    &#39; Event handler for Run button.\n    Private Sub Button1_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        tbxOutput.Cursor = Cursors.WaitCursor\n        tbxOutput.Text = &quot;&quot;\n\n        &#39; Retrieve a GenericPrincipal that is based on the current user&#39;s\n        &#39; WindowsIdentity.\n        Dim genericPrincipal As GenericPrincipal = GetGenericPrincipal()\n\n        &#39; Retrieve the generic identity of the GenericPrincipal object.\n        Dim principalIdentity As GenericIdentity = _\n            CType(genericPrincipal.Identity, GenericIdentity)\n\n        &#39; Display identity name and authentication type.\n        If (principalIdentity.IsAuthenticated) Then\n            WriteLine(principalIdentity.Name)\n            WriteLine(&quot;Type:&quot; + principalIdentity.AuthenticationType)\n        End If\n\n        &#39; Verify that the generic principal has been assigned the\n        &#39; NetworkUser role.\n        If (genericPrincipal.IsInRole(&quot;NetworkUser&quot;)) Then\n            WriteLine(&quot;User belongs to the NetworkUser role.&quot;)\n        End If\n        WriteLine(&quot;This sample completed successfully; &quot; + _\n            &quot; press Exit to continue.&quot;)\n        tbxOutput.Cursor = Cursors.Default\n    End Sub\n    &#39; Create generic principal based on values from the current\n    &#39; WindowsIdentity.\n    Private Function GetGenericPrincipal() As GenericPrincipal\n        &#39; Use values from the current WindowsIdentity to construct\n        &#39; a set of GenericPrincipal roles.\n        Dim roles(10) As String\n        Dim windowsIdentity As WindowsIdentity = windowsIdentity.GetCurrent()\n\n        If (windowsIdentity.IsAuthenticated) Then\n            &#39; Add custom NetworkUser role.\n            roles(0) = &quot;NetworkUser&quot;\n        End If\n\n        If (windowsIdentity.IsGuest) Then\n            &#39; Add custom GuestUser role.\n            roles(1) = &quot;GuestUser&quot;\n        End If\n\n\n        If (windowsIdentity.IsSystem) Then\n            &#39; Add custom SystemUser role.\n            roles(2) = &quot;SystemUser&quot;\n        End If\n\n        &#39; Construct a GenericIdentity object based on the current Windows\n        &#39; identity name and authentication type.\n        Dim authenticationType As String = windowsIdentity.AuthenticationType\n        Dim userName As String = windowsIdentity.Name\n        Dim genericIdentity = _\n            New GenericIdentity(userName, authenticationType)\n\n        &#39; Construct a GenericPrincipal object based on the generic identity\n        &#39; and custom roles for the user.\n        Dim genericPrincipal As New GenericPrincipal(genericIdentity, roles)\n\n        Return genericPrincipal\n    End Function\n    &#39; Write out message with linefeed and carriage return.\n    Private Sub WriteLine(ByVal message As String)\n        tbxOutput.AppendText(message + vbCrLf)\n    End Sub\n\n    &#39; Event handler for Exit button.\n    Private Sub Button2_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button2.Click\n\n        Application.Exit()\n    End Sub\n#Region &quot; Windows Form Designer generated code &quot;\n\n    Public Sub New()\n        MyBase.New()\n\n        &#39;This call is required by the Windows Form Designer.\n        InitializeComponent()\n\n        &#39;Add any initialization after the InitializeComponent() call\n\n    End Sub\n\n    &#39;Form overrides dispose to clean up the component list.\n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            If Not (components Is Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    &#39;Required by the Windows Form Designer\n    Private components As System.ComponentModel.IContainer\n\n    &#39;NOTE: The following procedure is required by the Windows Form Designer\n    &#39;It can be modified using the Windows Form Designer.  \n    &#39;Do not modify it using the code editor.\n    Friend WithEvents Panel2 As System.Windows.Forms.Panel\n    Friend WithEvents Panel1 As System.Windows.Forms.Panel\n    Friend WithEvents Button1 As System.Windows.Forms.Button\n    Friend WithEvents Button2 As System.Windows.Forms.Button\n    Friend WithEvents tbxOutput As System.Windows.Forms.RichTextBox\n    &lt;System.Diagnostics.DebuggerStepThrough()&gt; _\n    Private Sub InitializeComponent()\n        Me.Panel2 = New System.Windows.Forms.Panel\n        Me.Button1 = New System.Windows.Forms.Button\n        Me.Button2 = New System.Windows.Forms.Button\n        Me.Panel1 = New System.Windows.Forms.Panel\n        Me.tbxOutput = New System.Windows.Forms.RichTextBox\n        Me.Panel2.SuspendLayout()\n        Me.Panel1.SuspendLayout()\n        Me.SuspendLayout()\n        &#39;\n        &#39;Panel2\n        &#39;\n        Me.Panel2.Controls.Add(Me.Button1)\n        Me.Panel2.Controls.Add(Me.Button2)\n        Me.Panel2.Dock = System.Windows.Forms.DockStyle.Bottom\n        Me.Panel2.DockPadding.All = 20\n        Me.Panel2.Location = New System.Drawing.Point(0, 320)\n        Me.Panel2.Name = &quot;Panel2&quot;\n        Me.Panel2.Size = New System.Drawing.Size(616, 64)\n        Me.Panel2.TabIndex = 1\n        &#39;\n        &#39;Button1\n        &#39;\n        Me.Button1.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button1.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button1.Location = New System.Drawing.Point(446, 20)\n        Me.Button1.Name = &quot;Button1&quot;\n        Me.Button1.Size = New System.Drawing.Size(75, 24)\n        Me.Button1.TabIndex = 2\n        Me.Button1.Text = &quot;&amp;Run&quot;\n        &#39;\n        &#39;Button2\n        &#39;\n        Me.Button2.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button2.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button2.Location = New System.Drawing.Point(521, 20)\n        Me.Button2.Name = &quot;Button2&quot;\n        Me.Button2.Size = New System.Drawing.Size(75, 24)\n        Me.Button2.TabIndex = 3\n        Me.Button2.Text = &quot;E&amp;xit&quot;\n        &#39;\n        &#39;Panel1\n        &#39;\n        Me.Panel1.Controls.Add(Me.tbxOutput)\n        Me.Panel1.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.Panel1.DockPadding.All = 20\n        Me.Panel1.Location = New System.Drawing.Point(0, 0)\n        Me.Panel1.Name = &quot;Panel1&quot;\n        Me.Panel1.Size = New System.Drawing.Size(616, 320)\n        Me.Panel1.TabIndex = 2\n        &#39;\n        &#39;tbxOutput\n        &#39;\n        Me.tbxOutput.AccessibleDescription = _\n            &quot;Displays output from application.&quot;\n        Me.tbxOutput.AccessibleName = &quot;Output textbox.&quot;\n        Me.tbxOutput.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.tbxOutput.Location = New System.Drawing.Point(20, 20)\n        Me.tbxOutput.Name = &quot;tbxOutput&quot;\n        Me.tbxOutput.Size = New System.Drawing.Size(576, 280)\n        Me.tbxOutput.TabIndex = 1\n        Me.tbxOutput.Text = &quot;Click the Run button to run the application.&quot;\n        &#39;\n        &#39;Form1\n        &#39;\n        Me.AutoScaleBaseSize = New System.Drawing.Size(6, 15)\n        Me.ClientSize = New System.Drawing.Size(616, 384)\n        Me.Controls.Add(Me.Panel1)\n        Me.Controls.Add(Me.Panel2)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;GenericPrincipal&quot;\n        Me.Panel2.ResumeLayout(False)\n        Me.Panel1.ResumeLayout(False)\n        Me.ResumeLayout(False)\n\n    End Sub\n\n#End Region\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This class represents the roles of the current user.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Principal_GenericPrincipal__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_GenericPrincipal__ctor_System_Security_Principal_IIdentity_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GenericPrincipal(IIdentity, String[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.genericprincipal\" data-linktype=\"relative-path\">GenericPrincipal</a> class from a user identity and an array of role names to which the user represented by that identity belongs.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public GenericPrincipal (System.Security.Principal.IIdentity identity, string[] roles);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>identity</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.iidentity\" data-linktype=\"relative-path\">IIdentity</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A basic implementation of <a class=\"xref\" href=\"system.security.principal.iidentity\" data-linktype=\"relative-path\">IIdentity</a> that represents any user.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>roles</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of role names to which the user represented by the <code>identity</code> parameter belongs.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>identity</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Principal_GenericPrincipal_Identity_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_GenericPrincipal_Identity\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Identity</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.security.principal.genericidentity\" data-linktype=\"relative-path\">GenericIdentity</a> of the user represented by the current <a class=\"xref\" href=\"system.security.principal.genericprincipal\" data-linktype=\"relative-path\">GenericPrincipal</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.Principal.IIdentity Identity { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.iidentity\" data-linktype=\"relative-path\">IIdentity</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.principal.genericidentity\" data-linktype=\"relative-path\">GenericIdentity</a> of the user represented by the <a class=\"xref\" href=\"system.security.principal.genericprincipal\" data-linktype=\"relative-path\">GenericPrincipal</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Principal_GenericPrincipal_IsInRole_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_GenericPrincipal_IsInRole_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInRole(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the current <a class=\"xref\" href=\"system.security.principal.genericprincipal\" data-linktype=\"relative-path\">GenericPrincipal</a> belongs to the specified role.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool IsInRole (string role);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>role</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the role for which to check membership.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the current <a class=\"xref\" href=\"system.security.principal.genericprincipal\" data-linktype=\"relative-path\">GenericPrincipal</a> is a member of the specified role; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Principal.GenericPrincipal.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.GenericPrincipal\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.GenericPrincipal..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.GenericPrincipal.Identity\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.GenericPrincipal.IsInRole\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"df3bfd9d-e2f2-a345-d90a-4b3617c833c1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a generic principal.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.principal/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Principal.GenericPrincipal\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Principal.GenericPrincipal.yml","open_to_public_contributors":false,"api_name":["System.Security.Principal.GenericPrincipal","System.Security.Principal.GenericPrincipal..ctor","System.Security.Principal.GenericPrincipal.Identity","System.Security.Principal.GenericPrincipal.IsInRole"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Principal.GenericPrincipal","System::Security::Principal::GenericPrincipal","System.Security.Principal.GenericPrincipal.#ctor","System::Security::Principal::GenericPrincipal::#ctor","System.Security.Principal.GenericPrincipal.Identity","System::Security::Principal::GenericPrincipal::Identity","System.Security.Principal.GenericPrincipal.IsInRole","System::Security::Principal::GenericPrincipal::IsInRole"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"df3bfd9d-e2f2-a345-d90a-4b3617c833c1","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Principal/GenericPrincipal.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GenericPrincipal class | Microsoft Docs","_op_ogTitle":"GenericPrincipal class","description":"Represents a generic principal.\n","toc_asset_id":"api/_splitted/System.Security.Principal/toc.json","toc_rel":"_splitted/System.Security.Principal/toc.json","source_url":"","ms.assetid":"System.Security.Principal.GenericPrincipal","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.genericprincipal","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.genericprincipal","fileRelativePath":"api/System.Security.Principal.GenericPrincipal.html"},"themesRelativePathToOutputRoot":"_themes/"}