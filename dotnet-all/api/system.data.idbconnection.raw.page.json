{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDbConnection</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDbConnection : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example creates instances of the derived classes, <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> and <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a>. The <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> is opened and set as the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand#System_Data_SqlClient_SqlCommand_Connection_\" data-linktype=\"relative-path\">Connection</a> for the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a>. The example then calls <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand#System_Data_SqlClient_SqlCommand_ExecuteNonQuery_\" data-linktype=\"relative-path\">ExecuteNonQuery</a>, and closes the connection. To accomplish this, the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand#System_Data_SqlClient_SqlCommand_ExecuteNonQuery_\" data-linktype=\"relative-path\">ExecuteNonQuery</a> is passed a connection string and a query string that is a Transact-SQL INSERT statement.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData SqlConnection Example#1\">using System;\nusing System.Data;\n\nnamespace IDbConnectionSample {\n   class Program {\n      static void Main(string[] args) {\n         IDbConnection connection;\n\n         // First use a SqlClient connection\n         connection = new System.Data.SqlClient.SqlConnection(@&quot;Server=(localdb)\\V11.0&quot;);\n         Console.WriteLine(&quot;SqlClient\\r\\n{0}&quot;, GetServerVersion(connection));\n         connection = new System.Data.SqlClient.SqlConnection(@&quot;Server=(local);Integrated Security=true&quot;);\n         Console.WriteLine(&quot;SqlClient\\r\\n{0}&quot;, GetServerVersion(connection));\n\n         // Call the same method using ODBC\n         // NOTE: LocalDB requires the SQL Server 2012 Native Client ODBC driver\n         connection = new System.Data.Odbc.OdbcConnection(@&quot;Driver={SQL Server Native Client 11.0};Server=(localdb)\\v11.0&quot;);\n         Console.WriteLine(&quot;ODBC\\r\\n{0}&quot;, GetServerVersion(connection));\n         connection = new System.Data.Odbc.OdbcConnection(@&quot;Driver={SQL Server Native Client 11.0};Server=(local);Trusted_Connection=yes&quot;);\n         Console.WriteLine(&quot;ODBC\\r\\n{0}&quot;, GetServerVersion(connection));\n\n         // Call the same method using OLE DB\n         connection = new System.Data.OleDb.OleDbConnection(@&quot;Provider=SQLNCLI11;Server=(localdb)\\v11.0;Trusted_Connection=yes;&quot;);\n         Console.WriteLine(&quot;OLE DB\\r\\n{0}&quot;, GetServerVersion(connection));\n         connection = new System.Data.OleDb.OleDbConnection(@&quot;Provider=SQLNCLI11;Server=(local);Trusted_Connection=yes;&quot;);\n         Console.WriteLine(&quot;OLE DB\\r\\n{0}&quot;, GetServerVersion(connection));\n         }\n\n      public static string GetServerVersion(IDbConnection connection) {\n         // Ensure that the connection is opened (otherwise executing the command will fail)\n         ConnectionState originalState = connection.State;\n         if (originalState != ConnectionState.Open)\n            connection.Open();\n         try {\n            // Create a command to get the server version\n            // NOTE: The query&#39;s syntax is SQL Server specific\n            IDbCommand command = connection.CreateCommand();\n            command.CommandText = &quot;SELECT @@version&quot;;\n            return (string)command.ExecuteScalar();\n         }\n         finally {\n            // Close the connection if that&#39;s how we got it\n            if (originalState == ConnectionState.Closed)\n               connection.Close();\n         }\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData SqlConnection Example#1\">Imports System.Data\n\nClass Program\n\n    Public Shared Sub Main(args As String())\n\n        Dim connection As IDbConnection\n\n\n\n        &#39; First use a SqlClient connection\n\n        connection = New System.Data.SqlClient.SqlConnection(&quot;Server=(localdb)\\V11.0&quot;)\n\n        Console.WriteLine(&quot;SqlClient&quot; &amp; vbCr &amp; vbLf &amp; &quot;{0}&quot;, GetServerVersion(connection))\n\n        connection = New System.Data.SqlClient.SqlConnection(&quot;Server=(local);Integrated Security=true&quot;)\n\n        Console.WriteLine(&quot;SqlClient&quot; &amp; vbCr &amp; vbLf &amp; &quot;{0}&quot;, GetServerVersion(connection))\n\n\n\n        &#39; Call the same method using ODBC\n\n        &#39; NOTE: LocalDB requires the SQL Server 2012 Native Client ODBC driver\n\n        connection = New System.Data.Odbc.OdbcConnection(&quot;Driver={SQL Server Native Client 11.0};Server=(localdb)\\v11.0&quot;)\n\n        Console.WriteLine(&quot;ODBC&quot; &amp; vbCr &amp; vbLf &amp; &quot;{0}&quot;, GetServerVersion(connection))\n\n        connection = New System.Data.Odbc.OdbcConnection(&quot;Driver={SQL Server Native Client 11.0};Server=(local);Trusted_Connection=yes&quot;)\n\n        Console.WriteLine(&quot;ODBC&quot; &amp; vbCr &amp; vbLf &amp; &quot;{0}&quot;, GetServerVersion(connection))\n\n\n        &#39; Call the same method using OLE DB\n\n        connection = New System.Data.OleDb.OleDbConnection(&quot;Provider=SQLNCLI11;Server=(localdb)\\v11.0;Trusted_Connection=yes;&quot;)\n\n        Console.WriteLine(&quot;OLE DB&quot; &amp; vbCr &amp; vbLf &amp; &quot;{0}&quot;, GetServerVersion(connection))\n\n        connection = New System.Data.OleDb.OleDbConnection(&quot;Provider=SQLNCLI11;Server=(local);Trusted_Connection=yes;&quot;)\n\n        Console.WriteLine(&quot;OLE DB&quot; &amp; vbCr &amp; vbLf &amp; &quot;{0}&quot;, GetServerVersion(connection))\n\n    End Sub\n\n\n\n    Public Shared Function GetServerVersion(connection As IDbConnection) As String\n\n        &#39; Ensure that the connection is opened (otherwise executing the command will fail)\n\n        Dim originalState As ConnectionState = connection.State\n\n        If originalState &lt;&gt; ConnectionState.Open Then\n\n            connection.Open()\n\n        End If\n\n        Try\n\n            &#39; Create a command to get the server version\n\n            &#39; NOTE: The query&#39;s syntax is SQL Server specific\n\n            Dim command As IDbCommand = connection.CreateCommand()\n\n            command.CommandText = &quot;SELECT @@version&quot;\n\n            Return DirectCast(command.ExecuteScalar(), String)\n\n        Finally\n\n            &#39; Close the connection if that&#39;s how we got it\n\n            If originalState = ConnectionState.Closed Then\n\n                connection.Close()\n\n            End If\n\n        End Try\n\n    End Function\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The IDbConnection interface enables an inheriting class to implement a Connection class, which represents a unique session with a data source (for example, a network connection to a server). For more information about Connection classes, see <a href=\"../topic/connecting%20to%20a%20data%20source%20in%20ado.net\" data-linktype=\"relative-path\">Connecting to a Data Source</a>.  </p>\n<p> An application does not create an instance of the IDbConnection interface directly, but creates an instance of a class that inherits IDbConnection.  </p>\n<p> Classes that inherit IDbConnection must implement all inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbConnection interface defines the <a class=\"xref\" href=\"system.data.idbconnection#System_Data_IDbConnection_ConnectionTimeout_\" data-linktype=\"relative-path\">ConnectionTimeout</a> property. In turn, the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> class inherits this property, and also defines the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_PacketSize_\" data-linktype=\"relative-path\">PacketSize</a> property.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_ConnectionString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConnectionString</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string used to open a database.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ConnectionString { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string containing connection settings.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>ConnectionString</code> property can be set only while the connection is closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_ConnectionTimeout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConnectionTimeout</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int ConnectionTimeout { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time (in seconds) to wait for a connection to open. The default value is 15 seconds.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A value of 0 indicates no limit to the wait time, rather than no wait time, and should be avoided in a <a class=\"xref\" href=\"system.data.idbconnection#System_Data_IDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> because it would cause the connection attempt to wait indefinitely.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_Database\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Database</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the name of the current database or the database to be used after a connection is opened.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Database { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>Database</code> property can be dynamically updated by using the <a class=\"xref\" href=\"system.data.idbconnection#System_Data_IDbConnection_ChangeDatabase_\" data-linktype=\"relative-path\">ChangeDatabase</a> method or by passing an SQL statement using one of the Execute methods. (Initially the database is set by means of the connection string.) If you change the current database using an SQL statement or the <code>ChangeDatabase</code> method, an informational message is sent and then the property is updated.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_State\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">State</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the current state of the connection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.ConnectionState State { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.connectionstate\" data-linktype=\"relative-path\">ConnectionState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.connectionstate\" data-linktype=\"relative-path\">ConnectionState</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The allowed state changes are:  </p>\n<ul>\n<li><p>From <code>Closed</code> to <code>Open</code>, using the <code>Open</code> method of the Connection object.  </p>\n</li>\n<li><p>From <code>Open</code> to <code>Closed</code>, using either the <code>Close</code> method or the <code>Dispose</code> method of the Connection object.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_BeginTransaction\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginTransaction()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins a database transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbTransaction BeginTransaction ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbtransaction\" data-linktype=\"relative-path\">IDbTransaction</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An object representing the new transaction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> or <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_BeginTransaction_System_Data_IsolationLevel_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginTransaction(IsolationLevel)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins a database transaction with the specified <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbTransaction BeginTransaction (System.Data.IsolationLevel il);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>il</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbtransaction\" data-linktype=\"relative-path\">IDbTransaction</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An object representing the new transaction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Once the transaction has completed, you must explicitly commit or roll back the transaction using the <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> or <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_ChangeDatabase_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ChangeDatabase(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Changes the current database for an open <code>Connection</code> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ChangeDatabase (string databaseName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>databaseName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the database to use in place of the current database.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_Close\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Close()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Closes the connection to the database.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Close ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Close method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.  </p>\n<p> An application can call <code>Close</code> more than one time without generating an exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_CreateCommand\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateCommand()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates and returns a Command object associated with the connection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbCommand CreateCommand ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A Command object associated with the connection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbConnection_Open\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Open()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a database connection with the settings specified by the <code>ConnectionString</code> property of the provider-specific Connection object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Open ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.IDbConnection.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.BeginTransaction\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.ChangeDatabase\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.Close\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.ConnectionString\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.ConnectionTimeout\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.CreateCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.Database\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.Open\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbConnection.State\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"789e4c45-6ec6-72d7-c14b-bc2125e4bdc3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.IDbConnection\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.IDbConnection.yml","open_to_public_contributors":false,"api_name":["System.Data.IDbConnection","System.Data.IDbConnection.BeginTransaction","System.Data.IDbConnection.ChangeDatabase","System.Data.IDbConnection.Close","System.Data.IDbConnection.ConnectionString","System.Data.IDbConnection.ConnectionTimeout","System.Data.IDbConnection.CreateCommand","System.Data.IDbConnection.Database","System.Data.IDbConnection.Open","System.Data.IDbConnection.State"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.IDbConnection","System::Data::IDbConnection","System.Data.IDbConnection.BeginTransaction","System::Data::IDbConnection::BeginTransaction","System.Data.IDbConnection.ChangeDatabase","System::Data::IDbConnection::ChangeDatabase","System.Data.IDbConnection.Close","System::Data::IDbConnection::Close","System.Data.IDbConnection.ConnectionString","System::Data::IDbConnection::ConnectionString","System.Data.IDbConnection.ConnectionTimeout","System::Data::IDbConnection::ConnectionTimeout","System.Data.IDbConnection.CreateCommand","System::Data::IDbConnection::CreateCommand","System.Data.IDbConnection.Database","System::Data::IDbConnection::Database","System.Data.IDbConnection.Open","System::Data::IDbConnection::Open","System.Data.IDbConnection.State","System::Data::IDbConnection::State"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"789e4c45-6ec6-72d7-c14b-bc2125e4bdc3","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data/IDbConnection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDbConnection interface | Microsoft Docs","_op_ogTitle":"IDbConnection interface","description":"Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.\n","toc_asset_id":"api/_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.IDbConnection","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.idbconnection","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.idbconnection","fileRelativePath":"api/System.Data.IDbConnection.html"},"themesRelativePathToOutputRoot":"_themes/"}