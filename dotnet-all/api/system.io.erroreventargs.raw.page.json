{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ErrorEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.io.filesystemwatcher#System_IO_FileSystemWatcher_Error\" data-linktype=\"relative-path\">Error</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class ErrorEventArgs : EventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><span class=\"lang-csharp\">ErrorEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example creates a new instance of ErrorEventArgs and initializes it with an <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>. Then the example calls <a class=\"xref\" href=\"system.io.erroreventargs#System_IO_ErrorEventArgs_GetException_\" data-linktype=\"relative-path\">GetException</a> to retrieve the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> and display the error message. There is no form associated with this code.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic ErrorEventArgs Example#1\">int main()\n{\n   \n   // Creates an exception with an error message.\n   Exception^ myException = gcnew Exception( &quot;This is an exception test&quot; );\n   \n   // Creates an ErrorEventArgs with the exception.\n   ErrorEventArgs^ myErrorEventArgs = gcnew ErrorEventArgs( myException );\n   \n   // Extracts the exception from the ErrorEventArgs and display it.\n   Exception^ myReturnedException = myErrorEventArgs-&gt;GetException();\n   MessageBox::Show( String::Concat( &quot;The returned exception is: &quot;, myReturnedException-&gt;Message ) );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic ErrorEventArgs Example#1\">public static void Main(string[] args) {\n    // Creates an exception with an error message.\n    Exception myException= new Exception(&quot;This is an exception test&quot;);\n \n    // Creates an ErrorEventArgs with the exception.\n    ErrorEventArgs myErrorEventArgs = new ErrorEventArgs(myException);\n \n    // Extracts the exception from the ErrorEventArgs and display it.\n    Exception myReturnedException = myErrorEventArgs.GetException();\n    MessageBox.Show(&quot;The returned exception is: &quot; + myReturnedException.Message);\n }\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic ErrorEventArgs Example#1\">Overloads Public Shared Sub Main(args() As String)\n    &#39; Creates an exception with an error message.\n    Dim myException As New Exception(&quot;This is an exception test&quot;)\n    \n    &#39; Creates an ErrorEventArgs with the exception.\n    Dim myErrorEventArgs As New ErrorEventArgs(myException)\n    \n    &#39; Extracts the exception from the ErrorEventArgs and display it.\n    Dim myReturnedException As Exception = myErrorEventArgs.GetException()\n    MessageBox.Show((&quot;The returned exception is: &quot; &amp; myReturnedException.Message))\nEnd Sub &#39;Main\n</code></pre><p> The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.  </p>\n<pre><code class=\"lang-cs\" name=\"FileSystemWatcher#1\">using System;\nusing System.IO;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        //  Create a FileSystemWatcher to monitor all files on drive C.\n        FileSystemWatcher fsw = new FileSystemWatcher(&quot;C:\\\\&quot;);\n\n        //  Watch for changes in LastAccess and LastWrite times, and\n        //  the renaming of files or directories. \n        fsw.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite\n            | NotifyFilters.FileName |NotifyFilters.DirectoryName;\n\n        //  Register a handler that gets called when a \n        //  file is created, changed, or deleted.\n        fsw.Changed += new FileSystemEventHandler(OnChanged);\n\n        fsw.Created += new FileSystemEventHandler(OnChanged);\n\n        fsw.Deleted += new FileSystemEventHandler(OnChanged);\n\n        //  Register a handler that gets called when a file is renamed.\n        fsw.Renamed += new RenamedEventHandler(OnRenamed);\n\n        //  Register a handler that gets called if the \n        //  FileSystemWatcher needs to report an error.\n        fsw.Error += new ErrorEventHandler(OnError);\n\n        //  Begin watching.\n        fsw.EnableRaisingEvents = true;\n\n        Console.WriteLine(&quot;Press \\&#39;Enter\\&#39; to quit the sample.&quot;);\n        Console.ReadLine();\n\n\n    }\n\n    //  This method is called when a file is created, changed, or deleted.\n    private static void OnChanged(object source, FileSystemEventArgs e)\n    {\n        //  Show that a file has been created, changed, or deleted.\n        WatcherChangeTypes wct = e.ChangeType;\n        Console.WriteLine(&quot;File {0} {1}&quot;, e.FullPath, wct.ToString());\n    }\n\n    //  This method is called when a file is renamed.\n    private static void OnRenamed(object source, RenamedEventArgs e)\n    {\n        //  Show that a file has been renamed.\n        WatcherChangeTypes wct = e.ChangeType;\n        Console.WriteLine(&quot;File {0} {2} to {1}&quot;, e.OldFullPath, e.FullPath, wct.ToString());\n    }\n\n    //  This method is called when the FileSystemWatcher detects an error.\n    private static void OnError(object source, ErrorEventArgs e)\n    {\n        //  Show that an error has been detected.\n        Console.WriteLine(&quot;The FileSystemWatcher has detected an error&quot;);\n        //  Give more information if the error is due to an internal buffer overflow.\n        if (e.GetException().GetType() == typeof(InternalBufferOverflowException))\n        {\n            //  This can happen if Windows is reporting many file system events quickly \n            //  and internal buffer of the  FileSystemWatcher is not large enough to handle this\n            //  rate of events. The InternalBufferOverflowException error informs the application\n            //  that some of the file system events are being lost.\n            Console.WriteLine((&quot;The file system watcher experienced an internal buffer overflow: &quot; + e.GetException().Message));\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"FileSystemWatcher#1\">Imports System.IO\n\nModule Module1\n    Sub Main()\n        &#39; Create a FileSystemWatcher to monitor all files on drive C.\n        Dim fsw As New FileSystemWatcher(&quot;C:\\&quot;)\n\n        &#39; Watch for changes in LastAccess and LastWrite times, and\n        &#39; the renaming of files or directories. \n        fsw.NotifyFilter = (NotifyFilters.LastAccess Or NotifyFilters.LastWrite _ \n            Or NotifyFilters.FileName Or NotifyFilters.DirectoryName)\n\n        &#39; Register a handler that gets called when a \n        &#39; file is created, changed, or deleted.\n        AddHandler fsw.Changed, New FileSystemEventHandler(AddressOf OnChanged)\n\n        &#39; The commented line of code below is a shorthand of the above line.\n        &#39; AddHandler fsw.Changed, AddressOf OnChanged\n\n        &#39; NOTE: The shorthand version is used in the remainder of this code.\n        &#39; FileSystemEventHandler\n        AddHandler fsw.Created, AddressOf OnChanged \n        &#39; FileSystemEventHandler\n        AddHandler fsw.Deleted, AddressOf OnChanged\n\n        &#39; Register a handler that gets called when a file is renamed.\n        &#39; RenamedEventHandler\n        AddHandler fsw.Renamed, AddressOf OnRenamed\n\n        &#39; Register a handler that gets called if the \n        &#39; FileSystemWatcher needs to report an error.\n        &#39; ErrorEventHandler\n        AddHandler fsw.Error, AddressOf OnError\n\n        &#39; Begin watching.\n        fsw.EnableRaisingEvents = True\n\n        &#39; Wait for the user to quit the program.\n        Console.WriteLine(&quot;Press &#39;Enter&#39; to quit the sample.&quot;)\n        Console.ReadLine()\n    End Sub\n\n    &#39; This method is called when a file is created, changed, or deleted.\n    Private Sub OnChanged(ByVal source As Object, ByVal e As FileSystemEventArgs)\n\n        &#39; Show that a file has been created, changed, or deleted.\n        Dim wct As WatcherChangeTypes = e.ChangeType\n        Console.WriteLine(&quot;File {0} {1}&quot;, e.FullPath, wct.ToString())\n    End Sub\n\n    &#39; This method is called when a file is renamed.\n    Private Sub OnRenamed(ByVal source As Object, ByVal e As RenamedEventArgs)\n\n        &#39; Show that a file has been renamed.\n        Dim wct As WatcherChangeTypes = e.ChangeType\n        Console.WriteLine(&quot;File {0} {2} to {1}&quot;, e.OldFullPath, e.FullPath, wct.ToString())\n    End Sub\n\n    &#39; This method is called when the FileSystemWatcher detects an error.\n    Private Sub OnError(ByVal source As Object, ByVal e As ErrorEventArgs)\n\n        &#39; Show that an error has been detected.\n        Console.WriteLine(&quot;The FileSystemWatcher has detected an error&quot;)\n\n        &#39; Give more information if the error is due to an internal buffer overflow.\n        If TypeOf e.GetException Is InternalBufferOverflowException Then\n            &#39; This can happen if Windows is reporting many file system events quickly \n            &#39; and internal buffer of the  FileSystemWatcher is not large enough to handle this\n            &#39; rate of events. The InternalBufferOverflowException error informs the application\n            &#39; that some of the file system events are being lost.\n            Console.WriteLine( _\n                &quot;The file system watcher experienced an internal buffer overflow: &quot; _\n                + e.GetException.Message)\n        End If\n    End Sub\nEnd Module\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>ErrorEventArgs contains the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that caused the <a class=\"xref\" href=\"system.io.filesystemwatcher#System_IO_FileSystemWatcher_Error\" data-linktype=\"relative-path\">System.IO.FileSystemWatcher.Error</a> event. This class provides the <a class=\"xref\" href=\"system.io.erroreventargs#System_IO_ErrorEventArgs_GetException_\" data-linktype=\"relative-path\">GetException</a> method to retrieve the exception.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_ErrorEventArgs__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_ErrorEventArgs__ctor_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ErrorEventArgs(Exception)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.erroreventargs\" data-linktype=\"relative-path\">ErrorEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ErrorEventArgs (Exception exception);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>exception</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that represents the error that occurred.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_ErrorEventArgs_GetException_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_ErrorEventArgs_GetException\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetException()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that represents the error that occurred.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual Exception GetException ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that represents the error that occurred.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.ErrorEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.ErrorEventArgs\">\r\n<meta name=\"APIName\" content=\"System.IO.ErrorEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.ErrorEventArgs.GetException\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"164c621d-bc2f-49ad-1215-952b533f6c97\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.io/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.ErrorEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.ErrorEventArgs.yml","open_to_public_contributors":false,"api_name":["System.IO.ErrorEventArgs","System.IO.ErrorEventArgs..ctor","System.IO.ErrorEventArgs.GetException"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.ErrorEventArgs","System::IO::ErrorEventArgs","System.IO.ErrorEventArgs.#ctor","System::IO::ErrorEventArgs::#ctor","System.IO.ErrorEventArgs.GetException","System::IO::ErrorEventArgs::GetException"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"164c621d-bc2f-49ad-1215-952b533f6c97","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.IO/ErrorEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ErrorEventArgs class | Microsoft Docs","_op_ogTitle":"ErrorEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"api/_splitted/System.IO/toc.json","toc_rel":"_splitted/System.IO/toc.json","source_url":"","ms.assetid":"System.IO.ErrorEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.io.erroreventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.io.erroreventargs","fileRelativePath":"api/System.IO.ErrorEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}