{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">KeyPressEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event of a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void KeyPressEventHandler(object sender, KeyPressEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">KeyPressEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<pre><code class=\"lang-vb\" name=\"KeyPressEventArgs#1\">Imports System\nImports System.Windows.Forms\n\nPublic Class Form1\n    Inherits Form\n\n    Public Sub New()\n        &#39; Create a TextBox control.\n        Dim tb As New TextBox()\n        Me.Controls.Add(tb)\n        AddHandler tb.KeyPress, AddressOf keypressed\n    End Sub &#39;New\n\n    Private Sub keypressed(ByVal o As [Object], ByVal e As KeyPressEventArgs)\n        &#39; The keypressed method uses the KeyChar property to check \n        &#39; whether the ENTER key is pressed. \n\n        &#39; If the ENTER key is pressed, the Handled property is set to true, \n        &#39; to indicate the event is handled.\n\n        If e.KeyChar = Microsoft.VisualBasic.ChrW(Keys.Return) Then\n            e.Handled = True\n        End If\n    End Sub &#39;keypressed\n\n    Public Shared Sub Main()\n        Application.Run(New Form1())\n    End Sub &#39;Main\nEnd Class &#39;Form1\n</code></pre><pre><code class=\"lang-cs\" name=\"KeyPressEventArgs#1\">\nusing System;\nusing System.Windows.Forms;\n\npublic class Form1: Form\n{\n    public Form1()\n    {\n        // Create a TextBox control.\n        TextBox tb = new TextBox();\n        this.Controls.Add(tb);\n        tb.KeyPress += new KeyPressEventHandler(keypressed);\n    }\n\n    private void keypressed(Object o, KeyPressEventArgs e)\n    {\n        // The keypressed method uses the KeyChar property to check \n        // whether the ENTER key is pressed. \n\n        // If the ENTER key is pressed, the Handled property is set to true, \n        // to indicate the event is handled.\n        if (e.KeyChar == (char)Keys.Return)\n        {\n            e.Handled = true;\n        }\n    }\n\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"KeyPressEventArgs#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\n\npublic ref class Form1: public Form\n{\npublic:\n   Form1()\n   {\n      // Create a TextBox control.\n      TextBox^ tb = gcnew TextBox;\n      this-&gt;Controls-&gt;Add( tb );\n      tb-&gt;KeyPress += gcnew KeyPressEventHandler( this, &amp;Form1::keypressed );\n   }\n\nprivate:\n   void keypressed( Object^ /*o*/, KeyPressEventArgs^ e )\n   {\n      // The keypressed method uses the KeyChar property to check \n      // whether the ENTER key is pressed. \n      // If the ENTER key is pressed, the Handled property is set to true, \n      // to indicate the event is handled.\n      if ( e-&gt;KeyChar == (char)13 )\n            e-&gt;Handled = true;\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Control.KeyDown#1\">&#39; Boolean flag used to determine when a character other than a number is entered.\nPrivate nonNumberEntered As Boolean = False\n\n\n&#39; Handle the KeyDown event to determine the type of character entered into the control.\nPrivate Sub textBox1_KeyDown(sender As Object, e As System.Windows.Forms.KeyEventArgs) _\n     Handles textBox1.KeyDown\n    &#39; Initialize the flag to false.\n    nonNumberEntered = False\n  \n    &#39; Determine whether the keystroke is a number from the top of the keyboard.\n    If e.KeyCode &lt; Keys.D0 OrElse e.KeyCode &gt; Keys.D9 Then\n        &#39; Determine whether the keystroke is a number from the keypad.\n        If e.KeyCode &lt; Keys.NumPad0 OrElse e.KeyCode &gt; Keys.NumPad9 Then\n            &#39; Determine whether the keystroke is a backspace.\n            If e.KeyCode &lt;&gt; Keys.Back Then\n                &#39; A non-numerical keystroke was pressed. \n                &#39; Set the flag to true and evaluate in KeyPress event.\n                nonNumberEntered = True\n            End If\n        End If\n    End If\n    &#39;If shift key was pressed, it&#39;s not a number.\n    If Control.ModifierKeys = Keys.Shift Then\n        nonNumberEntered = true\n    End If\nEnd Sub &#39;textBox1_KeyDown\n\n\n&#39; This event occurs after the KeyDown event and can be used \n&#39; to prevent characters from entering the control.\nPrivate Sub textBox1_KeyPress(sender As Object, e As System.Windows.Forms.KeyPressEventArgs) _\n    Handles textBox1.KeyPress\n    &#39; Check for the flag being set in the KeyDown event.\n    If nonNumberEntered = True Then\n        &#39; Stop the character from being entered into the control since it is non-numerical.\n        e.Handled = True\n    End If\nEnd Sub &#39;textBox1_KeyPress\n</code></pre><pre><code class=\"lang-cpp\" name=\"Control.KeyDown#1\">   // Boolean flag used to determine when a character other than a number is entered.\nprivate:\n   bool nonNumberEntered;\n\n   // Handle the KeyDown event to determine the type of character entered into the control.\n   void textBox1_KeyDown( Object^ /*sender*/, System::Windows::Forms::KeyEventArgs^ e )\n   {\n      // Initialize the flag to false.\n      nonNumberEntered = false;\n\n      // Determine whether the keystroke is a number from the top of the keyboard.\n      if ( e-&gt;KeyCode &lt; Keys::D0 || e-&gt;KeyCode &gt; Keys::D9 )\n      {\n         // Determine whether the keystroke is a number from the keypad.\n         if ( e-&gt;KeyCode &lt; Keys::NumPad0 || e-&gt;KeyCode &gt; Keys::NumPad9 )\n         {\n            // Determine whether the keystroke is a backspace.\n            if ( e-&gt;KeyCode != Keys::Back )\n            {\n               // A non-numerical keystroke was pressed.\n               // Set the flag to true and evaluate in KeyPress event.\n               nonNumberEntered = true;\n            }\n         }\n      }\n      //If shift key was pressed, it&#39;s not a number.\n      if (Control::ModifierKeys == Keys::Shift) {\n         nonNumberEntered = true;\n      }\n   }\n\n   // This event occurs after the KeyDown event and can be used to prevent\n   // characters from entering the control.\n   void textBox1_KeyPress( Object^ /*sender*/, System::Windows::Forms::KeyPressEventArgs^ e )\n   {\n      // Check for the flag being set in the KeyDown event.\n      if ( nonNumberEntered == true )\n      {         // Stop the character from being entered into the control since it is non-numerical.\n         e-&gt;Handled = true;\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Control.KeyDown#1\">// Boolean flag used to determine when a character other than a number is entered.\nprivate bool nonNumberEntered = false;\n\n// Handle the KeyDown event to determine the type of character entered into the control.\nprivate void textBox1_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)\n{\n    // Initialize the flag to false.\n    nonNumberEntered = false;\n\n    // Determine whether the keystroke is a number from the top of the keyboard.\n    if (e.KeyCode &lt; Keys.D0 || e.KeyCode &gt; Keys.D9)\n    {\n        // Determine whether the keystroke is a number from the keypad.\n        if (e.KeyCode &lt; Keys.NumPad0 || e.KeyCode &gt; Keys.NumPad9)\n        {\n            // Determine whether the keystroke is a backspace.\n            if(e.KeyCode != Keys.Back)\n            {\n                // A non-numerical keystroke was pressed.\n                // Set the flag to true and evaluate in KeyPress event.\n                nonNumberEntered = true;\n            }\n        }\n    }\n    //If shift key was pressed, it&#39;s not a number.\n    if (Control.ModifierKeys == Keys.Shift) {\n        nonNumberEntered = true;\n    }\n}\n\n// This event occurs after the KeyDown event and can be used to prevent\n// characters from entering the control.\nprivate void textBox1_KeyPress(object sender, System.Windows.Forms.KeyPressEventArgs e)\n{\n    // Check for the flag being set in the KeyDown event.\n    if (nonNumberEntered == true)\n    {\n        // Stop the character from being entered into the control since it is non-numerical.\n        e.Handled = true;\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Set <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> to <code>true</code> to cancel the <code>KeyPress</code> event. This keeps the control from processing the key press.  </p>\n<p> When you create a KeyPressEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.KeyPressEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"9fba5a2f-26da-9c7e-eaa7-00cac1516bf9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  event of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.KeyPressEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.KeyPressEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.KeyPressEventHandler","System.Windows.Forms.KeyPressEventHandler..ctor","System.Windows.Forms.KeyPressEventHandler.Invoke","System.Windows.Forms.KeyPressEventHandler.BeginInvoke","System.Windows.Forms.KeyPressEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.KeyPressEventHandler","System::Windows::Forms::KeyPressEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"9fba5a2f-26da-9c7e-eaa7-00cac1516bf9","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/KeyPressEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"KeyPressEventHandler delegate | Microsoft Docs","_op_ogTitle":"KeyPressEventHandler delegate","description":"Represents the method that will handle the  event of a .\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.KeyPressEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.keypresseventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.keypresseventhandler","fileRelativePath":"api/System.Windows.Forms.KeyPressEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}