{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ITrackingHandler</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Indicates that the implementing object must be notified of marshaling, unmarshaling, and disconnection of objects and proxies by the remoting infrastructure.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface ITrackingHandler</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to implement the methods of the ITrackingHandler interface to receive notifications from the remoting infrastructure.  </p>\n<p> The following code example shows how to implement this interface.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.Services.TrackingServices#30\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Services;\n\n\n// Intercept marshal, unmarshal, and disconnect events for an object.\npublic class TrackingHandler : ITrackingHandler\n{\n    // Called when the tracked object is marshaled.\n\n    [System.Security.Permissions.SecurityPermissionAttribute(\n     System.Security.Permissions.SecurityAction.LinkDemand,\n     Flags=System.Security.Permissions.SecurityPermissionFlag.Infrastructure)]\n    public void MarshaledObject(Object obj, ObjRef objRef)\n    {\n        // Notify the user of the marshal event.\n        Console.WriteLine(&quot;Tracking: An instance of {0} was marshaled.&quot;, \n            obj.ToString());\n\n        // Print the channel information.\n        if (objRef.ChannelInfo != null)\n        {\n            // Iterate over ChannelData.\n            foreach(object data in objRef.ChannelInfo.ChannelData)\n            {\n                if (data is ChannelDataStore)\n                {\n                    // Print the URIs from the ChannelDataStore objects.\n                    string[] uris = ((ChannelDataStore)data).ChannelUris;\n                    foreach(string uri in uris)\n                        Console.WriteLine(&quot;ChannelUri: &quot; + uri);\n                }\n            }\n        }\n\n        // Print the envoy information.\n        if (objRef.EnvoyInfo != null)\n            Console.WriteLine(&quot;EnvoyInfo: &quot; + objRef.EnvoyInfo.ToString());\n\n        // Print the type information.\n        if (objRef.TypeInfo != null)\n        {\n            Console.WriteLine(&quot;TypeInfo: &quot; + objRef.TypeInfo.ToString());\n            Console.WriteLine(&quot;TypeName: &quot; + objRef.TypeInfo.TypeName);\n        }\n\n        // Print the URI.\n        if (objRef.URI != null)\n            Console.WriteLine(&quot;URI: &quot; + objRef.URI.ToString());\n    }\n\n    // Called when the tracked object is unmarshaled.\n    [System.Security.Permissions.SecurityPermissionAttribute(\n     System.Security.Permissions.SecurityAction.LinkDemand,\n     Flags=System.Security.Permissions.SecurityPermissionFlag.Infrastructure)]\n    public void UnmarshaledObject(Object obj, ObjRef objRef)\n    {\n        Console.WriteLine(&quot;Tracking: An instance of {0} was unmarshaled.&quot;, \n            obj.ToString());\n    }\n\n    // Called when the tracked object is disconnected.\n    [System.Security.Permissions.SecurityPermissionAttribute(\n     System.Security.Permissions.SecurityAction.LinkDemand,\n     Flags=System.Security.Permissions.SecurityPermissionFlag.Infrastructure)]\n    public void DisconnectedObject(Object obj)\n    {\n        Console.WriteLine(&quot;Tracking: An instance of {0} was disconnected.&quot;, \n            obj.ToString());\n    }\n}\n</code></pre><p> The following code example shows how to implement this interface on a server.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.Services.TrackingServices#20\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Tcp;\nusing System.Runtime.Remoting.Services;\nusing System.Security.Permissions;\n\npublic class Server\n{\n[SecurityPermission(SecurityAction.Demand)]\n    public static void Main(string[] args)\n    {\n        // Register the TCP channel.\n        TcpChannel channel = new TcpChannel(1234);\n        ChannelServices.RegisterChannel(channel);\n\n        // Register a tracking handler.\n        ITrackingHandler handler1 = new TrackingHandler();\n        TrackingServices.RegisterTrackingHandler(handler1);\n\n        // Register a second handler.\n        ITrackingHandler handler2 = new TrackingHandler();\n        TrackingServices.RegisterTrackingHandler(handler2);\n\n        // Get the number of currently registered handlers.\n        Console.WriteLine(&quot;Registered tracking handlers: &quot; + \n            TrackingServices.RegisteredHandlers.Length);\n\n        // Remove the tracking handler from the registered handlers.\n        TrackingServices.UnregisterTrackingHandler(handler2);\n        Console.WriteLine(&quot;Registered tracking handlers: &quot; + \n            TrackingServices.RegisteredHandlers.Length);\n\n        // Create and marshal an object for remote invocation.\n        RemoteService service = new RemoteService();\n        ObjRef obj = RemotingServices.Marshal(service, &quot;TcpService&quot;);\n\n        // Wait for the user prompt.\n        Console.WriteLine(&quot;\\r\\nPress ENTER to unmarshal the object.&quot;);\n        Console.ReadLine();\n\n        // Unmarshal the object.\n        RemotingServices.Unmarshal(obj);\n\n        // Wait for the user prompt.\n        Console.WriteLine(&quot;Press ENTER to disconnect the object.&quot;);\n        Console.ReadLine();\n\n        // Disconnect the object.\n        RemotingServices.Disconnect(service);\n    }\n}\n</code></pre><p> The following code example shows how to implement this interface on a client for the server in the preceding code example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.Services.TrackingServices#0\">using System;\nusing System.Diagnostics;\nusing System.Reflection;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Tcp;\n\npublic class Client\n{\n    public static void Main(string[] args)\n    {\n        // Register the TCP channel.\n        ChannelServices.RegisterChannel(new TcpChannel());\n\n        // Register the client for the remote object.\n        WellKnownClientTypeEntry remoteType = new WellKnownClientTypeEntry(\n            typeof(RemoteService),&quot;tcp://localhost:1234/TcpService&quot;);\n        RemotingConfiguration.RegisterWellKnownClientType(remoteType);\n\n        // Create an instance of the remote object.\n        RemoteService service = new RemoteService(); \n\n        // Invoke a method on the remote object.\n        service.Hello(&quot;world&quot;);\n        Console.WriteLine(&quot;Hello invoked on server.&quot;);\n    }\n}\n</code></pre><p> The following code example shows the remote object that is used by the server and the client.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.Services.TrackingServices#10\">using System;\nusing System.Diagnostics;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\n\n// Remote object.\npublic class RemoteService : MarshalByRefObject\n{\n    private DateTime startTime;\n\n    public RemoteService()\n    {\n        // Notify the user that the constructor was invoked.\n        Console.WriteLine(&quot;Constructor invoked.&quot;);\n        startTime = DateTime.Now;\n    }\n\n    ~RemoteService()\n    {\n        // Notify the user that the destructor was invoked.\n        TimeSpan elapsedTime = \n            new TimeSpan(DateTime.Now.Ticks - startTime.Ticks);\n        Console.WriteLine(&quot;Destructor invoked after &quot; + \n            elapsedTime.ToString() + &quot; seconds.&quot;);\n    }\n\n    public void Hello(string name)\n    {\n        // Print a simple message.\n        Console.WriteLine(&quot;Hello, &quot; + name);\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Every object that is registered with <a class=\"xref\" href=\"system.runtime.remoting.services.trackingservices\" data-linktype=\"relative-path\">TrackingServices</a> is called by remoting when an object or proxy in the current <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> is marshaled, unmarshaled, or disconnected.  </p>\n<p> Note that only objects can be disconnected. An exception is thrown when disconnect is called on a proxy.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This interface makes a link demand. A SecurityException is thrown if the immediate caller makes the call through a reference to the interface and does not have infrastructure permission. See <a href=\"../topic/link%20demands\" data-linktype=\"relative-path\">Link Demands</a> for more information.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Services_ITrackingHandler_DisconnectedObject_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisconnectedObject(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the current instance that an object has been disconnected from its proxy.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DisconnectedObject (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The disconnected object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Services_ITrackingHandler_MarshaledObject_System_Object_System_Runtime_Remoting_ObjRef_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MarshaledObject(Object, ObjRef)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the current instance that an object has been marshaled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void MarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object that has been marshaled.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>or</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> that results from marshaling and represents the specified object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Services_ITrackingHandler_UnmarshaledObject_System_Object_System_Runtime_Remoting_ObjRef_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UnmarshaledObject(Object, ObjRef)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the current instance that an object has been unmarshaled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UnmarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The unmarshaled object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>or</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> that represents the specified object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Services.ITrackingHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Services.ITrackingHandler\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"9662ec7a-bee5-cd3a-bf92-0baa7e201da6\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that the implementing object must be notified of marshaling, unmarshaling, and disconnection of objects and proxies by the remoting infrastructure.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.remoting.services/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Services.ITrackingHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Services.ITrackingHandler.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Remoting.Services.ITrackingHandler","System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject","System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject","System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Services.ITrackingHandler","System::Runtime::Remoting::Services::ITrackingHandler","System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject","System::Runtime::Remoting::Services::ITrackingHandler::DisconnectedObject","System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject","System::Runtime::Remoting::Services::ITrackingHandler::MarshaledObject","System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject","System::Runtime::Remoting::Services::ITrackingHandler::UnmarshaledObject"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"9662ec7a-bee5-cd3a-bf92-0baa7e201da6","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.Remoting.Services/ITrackingHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ITrackingHandler interface | Microsoft Docs","_op_ogTitle":"ITrackingHandler interface","description":"Indicates that the implementing object must be notified of marshaling, unmarshaling, and disconnection of objects and proxies by the remoting infrastructure.\n","toc_asset_id":"api/_splitted/System.Runtime.Remoting.Services/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Services/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Services.ITrackingHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.services.itrackinghandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.services.itrackinghandler","fileRelativePath":"api/System.Runtime.Remoting.Services.ITrackingHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}