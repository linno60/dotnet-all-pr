{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDesigner</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the basic framework for building a custom designer.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface IDesigner : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This example demonstrates an IDesigner implementation that stores a local reference to its component, performs a default action when the component is double-clicked, and provides a designer verb menu command.  </p>\n<pre><code class=\"lang-cs\" name=\"IDesignerExample#1\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Data;\nusing System.Windows.Forms;\n\nnamespace IDesignerExample\n{\t\n    // A DesignerAttribute associates the example IDesigner with an example control.\n    [DesignerAttribute(typeof(ExampleIDesigner))]\n    public class TestControl : System.Windows.Forms.UserControl\n    {\t\t\t\t\n        public TestControl()\n        {\t\n        }\n    }\n\n    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class ExampleIDesigner : System.ComponentModel.Design.IDesigner\n    {\n        // Local reference to the designer&#39;s component.\n        private IComponent component; \n        // Public accessor to the designer&#39;s component.\n        public System.ComponentModel.IComponent Component\n        {\n            get\n            {\n                return component;\n            }            \n        }\n\n        public ExampleIDesigner()\n        {            \n        }\n\n        public void Initialize(System.ComponentModel.IComponent component)\n        {\n            // This method is called after a designer for a component is created,\n            // and stores a reference to the designer&#39;s component.\n            this.component = component;\n        }        \n        \n        // This method peforms the &#39;default&#39; action for the designer. The default action \n        // for a basic IDesigner implementation is invoked when the designer&#39;s component \n        // is double-clicked. By default, a component associated with a basic IDesigner \n        // implementation is displayed in the design-mode component tray.\n        public void DoDefaultAction()\n        {\n            // Shows a message box indicating that the default action for the designer was invoked.\n            MessageBox.Show(&quot;The DoDefaultAction method of an IDesigner implementation was invoked.&quot;, &quot;Information&quot;);\n        }\n\n        // Returns a collection of designer verb menu items to show in the \n        // shortcut menu for the designer&#39;s component.\n        public System.ComponentModel.Design.DesignerVerbCollection Verbs\n        {\n            get\n            {\n                DesignerVerbCollection verbs = new DesignerVerbCollection();\n                DesignerVerb dv1 = new DesignerVerb(&quot;Display Component Name&quot;, new EventHandler(this.ShowComponentName));\n                verbs.Add( dv1 );\n                return verbs;\n            }\n        }\n\n        // Event handler for displaying a message box showing the designer&#39;s component&#39;s name.\n        private void ShowComponentName(object sender, EventArgs e)\n        {\n            if( this.Component != null )\n                MessageBox.Show( this.Component.Site.Name, &quot;Designer Component&#39;s Name&quot; );\n        }\n\n        // Provides an opportunity to release resources before object destruction.\n        public void Dispose()\n        {        \n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IDesignerExample#1\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Windows.Forms\n\n&#39; A DesignerAttribute associates the example IDesigner with an example control.\n&lt;DesignerAttribute(GetType(ExampleIDesigner))&gt; _\nPublic Class TestControl\n    Inherits System.Windows.Forms.UserControl\n\n    Public Sub New()\n    End Sub\nEnd Class\n\n&lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class ExampleIDesigner\n    Implements System.ComponentModel.Design.IDesigner\n\n    &#39; Local reference to the designer&#39;s component.\n    Private _component As IComponent\n\n    &#39; Public accessor to the designer&#39;s component.\n    Public ReadOnly Property Component() As System.ComponentModel.IComponent Implements IDesigner.Component\n        Get\n            Return _component\n        End Get\n    End Property\n\n    Public Sub New()\n    End Sub\n\n    Public Sub Initialize(ByVal component As System.ComponentModel.IComponent) Implements IDesigner.Initialize\n        &#39; This method is called after a designer for a component is created,\n        &#39; and stores a reference to the designer&#39;s component.\n        Me._component = component\n    End Sub\n\n    &#39; This method peforms the &#39;default&#39; action for the designer. The default action \n    &#39; for a basic IDesigner implementation is invoked when the designer&#39;s component \n    &#39; is double-clicked. By default, a component associated with a basic IDesigner \n    &#39; implementation is displayed in the design-mode component tray.\n    Public Sub DoDefaultAction() Implements IDesigner.DoDefaultAction\n        &#39; Shows a message box indicating that the default action for the designer was invoked.\n        MessageBox.Show(&quot;The DoDefaultAction method of an IDesigner implementation was invoked.&quot;, &quot;Information&quot;)\n    End Sub\n\n    &#39; Returns a collection of designer verb menu items to show in the \n    &#39; shortcut menu for the designer&#39;s component.\n    Public ReadOnly Property Verbs() As System.ComponentModel.Design.DesignerVerbCollection Implements IDesigner.Verbs\n        Get\n            Dim verbs_ As New DesignerVerbCollection()\n            Dim dv1 As New DesignerVerb(&quot;Display Component Name&quot;, New EventHandler(AddressOf Me.ShowComponentName))\n            verbs_.Add(dv1)\n            Return verbs_\n        End Get\n    End Property\n\n    &#39; Event handler for displaying a message box showing the designer&#39;s component&#39;s name.\n    Private Sub ShowComponentName(ByVal sender As Object, ByVal e As EventArgs)\n        If (Me.Component IsNot Nothing) Then\n            MessageBox.Show(Me.Component.Site.Name, &quot;Designer Component&#39;s Name&quot;)\n        End If\n    End Sub\n\n    &#39; Provides an opportunity to release resources before object destruction.\n    Public Sub Dispose() Implements IDisposable.Dispose\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"IDesignerExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Data.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Data;\nusing namespace System::Windows::Forms;\nusing namespace System::Security::Permissions;\n\npublic ref class ExampleIDesigner: public System::ComponentModel::Design::IDesigner\n{\nprivate:\n\n   // Local reference to the designer&#39;s component.\n   IComponent^ component;\n\npublic:\n\n   property System::ComponentModel::IComponent^ Component \n   {\n      // Public accessor to the designer&#39;s component.\n      virtual System::ComponentModel::IComponent^ get()\n      {\n         return component;\n      }\n   }\n   ExampleIDesigner(){}\n\n   virtual void Initialize( System::ComponentModel::IComponent^ component )\n   {\n      // This method is called after a designer for a component is created,\n      // and stores a reference to the designer&#39;s component.\n      this-&gt;component = component;\n   }\n\n   // This method peforms the &#39;default&#39; action for the designer. The default action \n   // for a basic IDesigner implementation is invoked when the designer&#39;s component \n   // is double-clicked. By default, a component associated with a basic IDesigner \n   // implementation is displayed in the design-mode component tray.\n   virtual void DoDefaultAction()\n   {\n      // Shows a message box indicating that the default action for the designer was invoked.\n      MessageBox::Show( &quot;The DoDefaultAction method of an IDesigner implementation was invoked.&quot;, &quot;Information&quot; );\n   }\n\n   property System::ComponentModel::Design::DesignerVerbCollection^ Verbs \n   {\n      // Returns a collection of designer verb menu items to show in the \n      // shortcut menu for the designer&#39;s component.\n      [PermissionSetAttribute(SecurityAction::Demand, Name=&quot;FullTrust&quot;)]\n      virtual System::ComponentModel::Design::DesignerVerbCollection^ get()\n      {\n         DesignerVerbCollection^ verbs = gcnew DesignerVerbCollection;\n         DesignerVerb^ dv1 = gcnew DesignerVerb( &quot;Display Component Name&quot;,gcnew EventHandler( this, &amp;ExampleIDesigner::ShowComponentName ) );\n         verbs-&gt;Add( dv1 );\n         return verbs;\n      }\n   }\n\nprivate:\n\n   // Event handler for displaying a message box showing the designer&#39;s component&#39;s name.\n   void ShowComponentName( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      if ( this-&gt;Component != nullptr )\n            MessageBox::Show( this-&gt;Component-&gt;Site-&gt;Name, &quot;Designer Component&#39;s Name&quot; );\n   }\n\npublic:\n\n   // Provides an opportunity to release resources before object destruction.\n   ~ExampleIDesigner(){}\n\n};\n\n// A DesignerAttribute associates the example IDesigner with an example control.\n\n[DesignerAttribute(ExampleIDesigner::typeid)]\npublic ref class TestControl: public System::Windows::Forms::UserControl\n{\npublic:\n   TestControl(){}\n\n};\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The IDesigner interface provides an interface through which you can implement basic services for a designer. A designer can modify the behavior of a component at design time, and may provide its own services and behavior. A designer is only active at design-time, and must be associated with a type of component using a <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> in order to be loaded when a component of the associated type is created at design time.  </p>\n<p> The IDesigner interface provides methods and properties that you can implement in order to provide custom behavior at design time.  </p>\n<p> Implement the <a class=\"xref\" href=\"system.componentmodel.design.idesigner#System_ComponentModel_Design_IDesigner_Initialize_\" data-linktype=\"relative-path\">Initialize</a> method of a designer to perform actions when a component is created. This can be useful if a component should have a special configuration at design-time, or if its configuration should change depending on conditions that the designer can determine.  </p>\n<p> A designer can provide menu commands on the shortcut menu that is displayed when a user right-clicks a component or control in the design-time environment. You can implement the <a class=\"xref\" href=\"system.componentmodel.design.idesigner#System_ComponentModel_Design_IDesigner_Verbs_\" data-linktype=\"relative-path\">Verbs</a> property to define a get accessor that returns a <a class=\"xref\" href=\"system.componentmodel.design.designerverbcollection\" data-linktype=\"relative-path\">DesignerVerbCollection</a> containing the <a class=\"xref\" href=\"system.componentmodel.design.designerverb\" data-linktype=\"relative-path\">DesignerVerb</a> objects for generating menu commands.  </p>\n<p> A designer for a component that appears in the component tray can perform a default action when the component is double-clicked. Implement the <a class=\"xref\" href=\"system.componentmodel.design.idesigner#System_ComponentModel_Design_IDesigner_DoDefaultAction_\" data-linktype=\"relative-path\">DoDefaultAction</a> method to specify the behavior to perform when the component is double-clicked.  </p>\n<p> A designer can also use the available design-time services to perform a variety of tasks, including surveying the current design-time environment for components and their properties, reading and setting the values of properties of components, managing the toolbox, managing selected components, or displaying a user interface that can be used to configure values or to apply further processing.  </p>\n<p> To implement a designer for a control that can be sited on a form, you can inherit from the <a class=\"xref\" href=\"system.windows.forms.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a> class. Controls whose associated designer does not derive from <a class=\"xref\" href=\"system.windows.forms.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a> are displayed in the component tray. The <a class=\"xref\" href=\"system.componentmodel.design.componentdesigner\" data-linktype=\"relative-path\">ComponentDesigner</a> and <a class=\"xref\" href=\"system.windows.forms.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a> classes implement the IDesigner interface and provide additional design-time support that may be of use to authors of designers. For more information, see the reference documentation for these classes.  </p>\n<p> For an overview of creating design components, please see <a href=\"../topic/extending%20design-time%20support\" data-linktype=\"relative-path\">Extending Design-Time Support</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IDesigner_Component_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesigner_Component\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Component</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the base component that this designer is designing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.IComponent Component { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> indicating the base component that this designer is designing.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IDesigner_Verbs_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesigner_Verbs\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Verbs</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of the design-time verbs supported by the designer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.designerverbcollection\" data-linktype=\"relative-path\">DesignerVerbCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.design.designerverbcollection\" data-linktype=\"relative-path\">DesignerVerbCollection</a> that contains the verbs supported by the designer, or <code>null</code> if the component has no verbs.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Returns the design time verbs supported by the component associated with the designer. The verbs returned by this method are typically displayed by the design-time environment in a right-click menu. When a user selects one of the verbs, the event handler of the corresponding <a class=\"xref\" href=\"system.componentmodel.design.designerverb\" data-linktype=\"relative-path\">DesignerVerb</a> is invoked.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> A design-time environment typically provides a <strong>Properties...</strong> entry on a component&#39;s right-click menu. To avoid duplicate titles for menu entries, no verb with a title of &quot;Properties...&quot; should be included in a <a class=\"xref\" href=\"system.componentmodel.design.designerverbcollection\" data-linktype=\"relative-path\">DesignerVerbCollection</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IDesigner_DoDefaultAction_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesigner_DoDefaultAction\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DoDefaultAction()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs the default action for this designer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DoDefaultAction ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called when a user double-clicks the representation of a component in the component tray.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IDesigner_Initialize_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesigner_Initialize_System_ComponentModel_IComponent_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Initialize(IComponent)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes the designer with the specified component.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Initialize (System.ComponentModel.IComponent component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The component to associate with this designer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesigner.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesigner\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesigner.Component\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesigner.DoDefaultAction\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesigner.Initialize\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesigner.Verbs\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"b00bb229-3529-a8c4-1ef4-b2fe4665f452\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the basic framework for building a custom designer.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.IDesigner\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesigner.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.IDesigner","System.ComponentModel.Design.IDesigner.Component","System.ComponentModel.Design.IDesigner.DoDefaultAction","System.ComponentModel.Design.IDesigner.Initialize","System.ComponentModel.Design.IDesigner.Verbs"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.IDesigner","System::ComponentModel::Design::IDesigner","System.ComponentModel.Design.IDesigner.Component","System::ComponentModel::Design::IDesigner::Component","System.ComponentModel.Design.IDesigner.DoDefaultAction","System::ComponentModel::Design::IDesigner::DoDefaultAction","System.ComponentModel.Design.IDesigner.Initialize","System::ComponentModel::Design::IDesigner::Initialize","System.ComponentModel.Design.IDesigner.Verbs","System::ComponentModel::Design::IDesigner::Verbs"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"b00bb229-3529-a8c4-1ef4-b2fe4665f452","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/IDesigner.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDesigner interface | Microsoft Docs","_op_ogTitle":"IDesigner interface","description":"Provides the basic framework for building a custom designer.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.IDesigner","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesigner","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesigner","fileRelativePath":"api/System.ComponentModel.Design.IDesigner.html"},"themesRelativePathToOutputRoot":"_themes/"}