{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ServiceInstaller</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Installs a class that extends <a class=\"xref\" href=\"system.serviceprocess.servicebase\" data-linktype=\"relative-path\">ServiceBase</a> to implement a service. This class is called by the install utility when installing a service application.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class ServiceInstaller : System.Configuration.Install.ComponentInstaller</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.componentinstaller\" data-linktype=\"relative-path\">System.Configuration.Install.ComponentInstaller</a></span></div><span class=\"lang-csharp\">ServiceInstaller</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterInstall\" data-linktype=\"relative-path\">AfterInstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterRollback\" data-linktype=\"relative-path\">AfterRollback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterUninstall\" data-linktype=\"relative-path\">AfterUninstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeInstall\" data-linktype=\"relative-path\">BeforeInstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeRollback\" data-linktype=\"relative-path\">BeforeRollback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeUninstall\" data-linktype=\"relative-path\">BeforeUninstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_System_Collections_IDictionary_\" data-linktype=\"relative-path\">Commit(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Committed\" data-linktype=\"relative-path\">Committed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Committing\" data-linktype=\"relative-path\">Committing</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_HelpText\" data-linktype=\"relative-path\">HelpText</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers\" data-linktype=\"relative-path\">Installers</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterInstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterInstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterRollback_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterRollback(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterUninstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterUninstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeInstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeInstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeRollback_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeRollback(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeUninstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeUninstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnCommitted_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnCommitted(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnCommitting_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnCommitting(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent\" data-linktype=\"relative-path\">Parent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example creates a project installer, called <code>MyProjectInstaller</code>, which inherits from <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a>. It is assumed there is a service executable that contains two services, &quot;Hello-World Service 1&quot; and &quot;Hello-World Service 2&quot;. Within the constructor for <code>MyProjectInstaller</code> (which would be called by the install utility), ServiceInstaller objects are created for each of these services, and a <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> is created for the executable. For the install utility to recognize <code>MyProjectInstaller</code> as a valid installer, the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> attribute is set to <code>true</code>.  </p>\n<p> Optional properties are set on the process installer and the service installers before the installers are added to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection. When the install utility accesses <code>MyProjectInstaller</code>, the objects added to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection through a call to <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Add_\" data-linktype=\"relative-path\">Add</a> will be installed in turn. During the process, the installer maintains state information indicating which objects have been installed, so each can be backed out in turn, if an installation failure occurs.  </p>\n<p> Normally, you would not create an instance of your project installer class explicitly. You would create it and add the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> attribute to the syntax, but it is the install utility that actually calls, and therefore instantiates, the class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic ServiceInstaller Example#1\">#using &lt;System.dll&gt;\n#using &lt;System.ServiceProcess.dll&gt;\n#using &lt;System.Configuration.Install.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Configuration::Install;\nusing namespace System::ServiceProcess;\nusing namespace System::ComponentModel;\n\n[RunInstaller(true)]\npublic ref class MyProjectInstaller : public Installer\n{\nprivate:\n    ServiceInstaller^ serviceInstaller1;\n    ServiceInstaller^ serviceInstaller2;\n    ServiceProcessInstaller^ processInstaller;\n\npublic:\n    MyProjectInstaller()\n    {\n        // Instantiate installers for process and services.\n        processInstaller = gcnew ServiceProcessInstaller;\n        serviceInstaller1 = gcnew ServiceInstaller;\n        serviceInstaller2 = gcnew ServiceInstaller;\n\n        // The services run under the system account.\n        processInstaller-&gt;Account = ServiceAccount::LocalSystem;\n\n        // The services are started manually.\n        serviceInstaller1-&gt;StartType = ServiceStartMode::Manual;\n        serviceInstaller2-&gt;StartType = ServiceStartMode::Manual;\n\n        // ServiceName must equal those on ServiceBase derived classes.\n        serviceInstaller1-&gt;ServiceName = &quot;Hello-World Service 1&quot;;\n        serviceInstaller2-&gt;ServiceName = &quot;Hello-World Service 2&quot;;\n\n        // Add installers to collection. Order is not important.\n        Installers-&gt;Add( serviceInstaller1 );\n        Installers-&gt;Add( serviceInstaller2 );\n        Installers-&gt;Add( processInstaller );\n    }\n\n    static void Main()\n    {\n        Console::WriteLine(&quot;Usage: InstallUtil.exe [&lt;service&gt;.exe]&quot;);\n    }\n};\n\nint main()\n{\n    MyProjectInstaller::Main();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic ServiceInstaller Example#1\">using System;\nusing System.Collections;\nusing System.Configuration.Install;\nusing System.ServiceProcess;\nusing System.ComponentModel;\n\n[RunInstaller(true)]\npublic class MyProjectInstaller : Installer\n{\n    private ServiceInstaller serviceInstaller1;\n    private ServiceInstaller serviceInstaller2;\n    private ServiceProcessInstaller processInstaller;\n\n    public MyProjectInstaller()\n    {\n        // Instantiate installers for process and services.\n        processInstaller = new ServiceProcessInstaller();\n        serviceInstaller1 = new ServiceInstaller();\n        serviceInstaller2 = new ServiceInstaller();\n\n        // The services run under the system account.\n        processInstaller.Account = ServiceAccount.LocalSystem;\n\n        // The services are started manually.\n        serviceInstaller1.StartType = ServiceStartMode.Manual;\n        serviceInstaller2.StartType = ServiceStartMode.Manual;\n\n        // ServiceName must equal those on ServiceBase derived classes.\n        serviceInstaller1.ServiceName = &quot;Hello-World Service 1&quot;;\n        serviceInstaller2.ServiceName = &quot;Hello-World Service 2&quot;;\n\n        // Add installers to collection. Order is not important.\n        Installers.Add(serviceInstaller1);\n        Installers.Add(serviceInstaller2);\n        Installers.Add(processInstaller);\n    }\n\n    public static void Main()\n    {\n        Console.WriteLine(&quot;Usage: InstallUtil.exe [&lt;service&gt;.exe]&quot;);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic ServiceInstaller Example#1\">Imports System\nImports System.Collections\nImports System.Configuration.Install\nImports System.ServiceProcess\nImports System.ComponentModel\n\n&lt;RunInstallerAttribute(True)&gt; _\nPublic Class MyProjectInstaller\n    Inherits Installer\n    Private serviceInstaller1 As ServiceInstaller\n    Private serviceInstaller2 As ServiceInstaller\n    Private processInstaller As ServiceProcessInstaller    \n    \n    Public Sub New()\n        &#39; Instantiate installers for process and services.\n        processInstaller = New ServiceProcessInstaller()\n        serviceInstaller1 = New ServiceInstaller()\n        serviceInstaller2 = New ServiceInstaller()\n        \n        &#39; The services will run under the system account.\n        processInstaller.Account = ServiceAccount.LocalSystem\n        \n        &#39; The services will be started manually.\n        serviceInstaller1.StartType = ServiceStartMode.Manual\n        serviceInstaller2.StartType = ServiceStartMode.Manual\n        \n        &#39; ServiceName must equal those on ServiceBase derived classes.            \n        serviceInstaller1.ServiceName = &quot;Hello-World Service 1&quot;\n        serviceInstaller2.ServiceName = &quot;Hello-World Service 2&quot;\n        \n        &#39; Add installers to collection. Order is not important.\n        Installers.Add(serviceInstaller1)\n        Installers.Add(serviceInstaller2)\n        Installers.Add(processInstaller)\n    End Sub\n\n    Public Shared Sub Main()\n        Console.WriteLine(&quot;Usage: InstallUtil.exe [&lt;service&gt;.exe]&quot;)\n    End Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ServiceInstaller does work specific to the service with which it is associated. It is used by the installation utility to write registry values associated with the service to a subkey within the HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services registry key. The service is identified by its ServiceName within this subkey. The subkey also includes the name of the executable or .dll to which the service belongs.  </p>\n<p> To install a service, create a project installer class that inherits from the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> class, and set the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> attribute on the class to <code>true</code>. Within your project, create one <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> instance per service application, and one ServiceInstaller instance for each service in the application. Within your project installer class constructor, set the installation properties for the service using the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> and ServiceInstaller instances, and add the instances to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method, be sure to perform the same additions to the collection in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> method.  </p>\n</div>\n<p> For all classes deriving from the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> class, the state of the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection must be the same in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a> and <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> methods. However, you can avoid the maintenance of the collection across the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a> and <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> methods if you add installer instances to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection in your custom installer class constructor.When the install utility is called, it looks for the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> attribute. If the attribute is <code>true</code>, the utility installs all the services that were added to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection that were associated with your project installer. If <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> is <code>false</code> or does not exist, the install utility ignores the project installer.  </p>\n<p> The <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> associated with your project installation class installs information common to all ServiceInstaller instances in the project. If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> It is crucial that the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> be identical to the <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> of the class you derived from <a class=\"xref\" href=\"system.serviceprocess.servicebase\" data-linktype=\"relative-path\">ServiceBase</a>. Normally, the value of the <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> property for the service is set within the Main() function of the service application&#39;s executable. The Service Control Manager uses the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> property to locate the service within this executable.  </p>\n</div>\n<p> You can modify other properties on the ServiceInstaller either before or after adding it to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection of your project installer. For example, a service&#39;s <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_StartType_\" data-linktype=\"relative-path\">StartType</a> may be set to start the service automatically at reboot or require a user to start the service manually.  </p>\n<p> Normally, you will not call the methods on ServiceInstaller within your code; they are generally called only by the install utility. The install utility automatically calls the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller#System_ServiceProcess_ServiceProcessInstaller_Install_\" data-linktype=\"relative-path\">Install</a> and <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a> methods during the installation process. It backs out failures, if necessary, by calling <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller#System_ServiceProcess_ServiceProcessInstaller_Rollback_\" data-linktype=\"relative-path\">Rollback</a> (or <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Rollback_\" data-linktype=\"relative-path\">Rollback</a>) on all previously installed components.  </p>\n<p> The installation utility calls <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> to remove the object.  </p>\n<p> An application&#39;s install routine maintains information automatically about the components already installed, using the project installer&#39;s <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a>. This state information is continuously updated as the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> instance, and each ServiceInstaller instance is installed by the utility. It is usually unnecessary for your code to modify state information explicitly.  </p>\n<p> When the installation is performed, it automatically creates an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to install the event log source associated with the <a class=\"xref\" href=\"system.serviceprocess.servicebase\" data-linktype=\"relative-path\">ServiceBase</a> derived class. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property for this source is set by the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller__ctor_\" data-linktype=\"relative-path\">ServiceInstaller</a> constructor to the computer&#39;s Application log. When you set the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> of the ServiceInstaller (which should be identical to the <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> of the service), the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> is automatically set to the same value. In an installation failure, the source&#39;s installation is rolled-back along with previously installed services.  </p>\n<p> The <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> method tries to stop the service if it is running. Whether this succeeds or not, <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> undoes the changes made by <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a>. If a new source was created for event logging, the source is deleted.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ServiceInstaller()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ServiceInstaller ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To install a service, create a project installer class that inherits from the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> class, and set the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> attribute on the class to <code>true</code>. Within your project, create one <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> instance per service application, and one <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instance for each service in the application. Within your project installer class constructor, set the installation properties for the service using the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> and <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instances, and add the instances to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection.  </p>\n<p> The ServiceInstaller constructor automatically generates an event log source whose <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property is set to the computer&#39;s Application log, and an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>. When you set the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> of the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a>, which should be identical to the <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> of the service, the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of the event log is automatically set to the same value. The source is deleted automatically in the case of an installation failure.  </p>\n<p> The ServiceInstaller constructor sets the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_StartType_\" data-linktype=\"relative-path\">StartType</a> property to <code>ServiceStartMode.Manual</code> to specify that a user start the service. You can reset the property to <code>ServiceStartMode.Automatic</code> to specify that the service start when the computer reboots.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_DelayedAutoStart\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DelayedAutoStart</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool DelayedAutoStart { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to delay automatic start of the service; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DelayedAutoStart property can be applied to any service, but it is ignored unless the service&#39;s start mode is <a class=\"xref\" href=\"system.serviceprocess.servicestartmode\" data-linktype=\"relative-path\">ServiceStartMode</a>. The setting takes effect the next time the system is restarted. The Service Control Manager does not guarantee a specific start time for the service.  </p>\n<p> A delayed automatic start service cannot be a member of a load ordering group, but it can depend on another automatic start service. If an application calls a delayed automatic start service before it is loaded, the call fails.  </p>\n<p> On operating systems that do not support delayed automatic start, setting this property has no effect.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_Description\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Description</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the description for the service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Description { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The description of the service. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the Description property to describe the purpose of the installed service to the user. The user can view the service description in applications that display details for installed services.  </p>\n<p> For example, using Windows XP, you can view the service description with the Service Control command-line utility (Sc.exe) or you can view the service description within the <strong>Services</strong> node of the <strong>Computer Management</strong> console.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_DisplayName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates the friendly name that identifies the service to the user.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DisplayName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name associated with the service, used frequently for interactive tools.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DisplayName is used, for example, in the Service Control Manager to provide a user-readable descriptive name for the service. The DisplayName is a registry value, but is never used as a registry key. Therefore, restrictions on the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> property value do not apply. <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> is used as the HKEY_LOCAL_MACHINES\\System\\CurrentControlSet\\Services registry key, so it is restricted.  </p>\n<p> The display name is never used by the install utility to identify the service, so there are no restrictions on the choice of name, as there is for the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_ServiceName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ServiceName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates the name used by the system to identify this service. This property must be identical to the <span class=\"xref\">stem.ServiceProcess.ServiceBase.ServiceName*</span> of the service you want to install.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ServiceName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the service to be installed. This value must be set before the install utility attempts to install the service.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The ServiceName property is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>It is crucial that the ServiceName be identical to the <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> of the class you derived from <a class=\"xref\" href=\"system.serviceprocess.servicebase\" data-linktype=\"relative-path\">ServiceBase</a>. Normally, the value of the <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> property for the service is set within the Main() function of the service application&#39;s executable. The Service Control Manager uses the ServiceName property to locate the service within this executable.  </p>\n<p> When you set the ServiceName of the service installer, the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> of the associated event log is set to the same value. This allows the service to automatically log service commands (such as Start and Stop) calls to the Application log on the computer.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a source by the same name already exists on the computer, but in a log other than the Application log, an exception will be thrown. If the source exists and is associated with the Application log, that source is used to report command calls to the service, and no exception is thrown.  </p>\n</div>\n<p> The ServiceName cannot be <code>null</code> or have zero length. Its maximum size is 256 characters. It also cannot contain forward or backward slashes, &#39;/&#39; or &#39;\\&#39;, or characters from the ASCII character set with value less than decimal value 32.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_ServicesDependedOn\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ServicesDependedOn</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates the services that must be running for this service to run.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string[] ServicesDependedOn { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of services that must be running before the service associated with this installer can run.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A service can require other services to be running before it can start. The information from this property is written to a key in the registry. When the user (or the system, in the case of automatic startup) tries to run the service, the Service Control Manager (SCM) verifies that each of the services in the array has already been started.  </p>\n<p> If any service in the array is not running then, the SCM tries to start them. This includes services with <code>Manual</code><a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_StartType_\" data-linktype=\"relative-path\">StartType</a>.  </p>\n<p> If any service upon which this service depends fails to start, this service will not start. An exception is not thrown if the system is not started because there is no exception handling at the system level to detect this. Decide how to handle service start failures and implement this in your code. Typically, a dialog appears to the user at startup if a service fails to start.  </p>\n<p> If the service does not start, an entry is written to the Application event log.  </p>\n<p> The services upon which this service depends do not need to be in the same executable.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_StartType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StartType</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates how and when this service is started.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ServiceProcess.ServiceStartMode StartType { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicestartmode\" data-linktype=\"relative-path\">ServiceStartMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.serviceprocess.servicestartmode\" data-linktype=\"relative-path\">ServiceStartMode</a> that represents the way the service is started. The default is <code>Manual</code>, which specifies that the service will not automatically start after reboot.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The start mode is not a value of the <a class=\"xref\" href=\"system.serviceprocess.servicestartmode\" data-linktype=\"relative-path\">ServiceStartMode</a> enumeration.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Set the StartType to specify either that the service be started automatically after reboot or that a user must manually start the service. A service can also be disabled, specifying that it cannot be started, either manually or programmatically, until it is enabled.  </p>\n<p> You cannot change <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> property values after installation. To change the StartType, you either have to uninstall and reinstall your service, or manually change the setting using the Service Control Manager.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_CopyFromComponent_System_ComponentModel_IComponent_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CopyFromComponent(IComponent)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies properties from an instance of <a class=\"xref\" href=\"system.serviceprocess.servicebase\" data-linktype=\"relative-path\">ServiceBase</a> to this installer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void CopyFromComponent (System.ComponentModel.IComponent component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> from which to copy.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The component you are associating with this installer does not inherit from <a class=\"xref\" href=\"system.serviceprocess.servicebase\" data-linktype=\"relative-path\">ServiceBase</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method will rarely be called within your code. CopyFromComponent is usually called only by designers.  </p>\n<p> CopyFromComponent saves the service name of the <code>component</code> parameter to the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> of the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instance. (Because the parameter must be an instance of a class that derives from <a class=\"xref\" href=\"system.serviceprocess.servicebase\" data-linktype=\"relative-path\">ServiceBase</a>, <code>component</code> is guaranteed to have a <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> property.)  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are using the Visual Studio designer, this method is called at design time when the user clicks <code>Add Installer</code> on a component that specified this class as its installer. The installer takes all information it can from the live component and stores it for use at install time.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_Install_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Install(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Installs the service by writing service application information to the registry. This method is meant to be used by installation tools, which process the appropriate methods automatically.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Install (System.Collections.IDictionary stateSaver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stateSaver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that contains the context information associated with the installation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The installation does not contain a <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> for the executable.  </p>\n<p> -or-  </p>\n<p> The file name for the assembly is <code>null</code> or an empty string.  </p>\n<p> -or-  </p>\n<p> The service name is invalid.  </p>\n<p> -or-  </p>\n<p> The Service Control Manager could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The display name for the service is more than 255 characters in length.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The system could not generate a handle to the service.  </p>\n<p> -or-  </p>\n<p> A service with that name is already installed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Normally, you will not call the methods on <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> within your code; they are generally called only by the install utility. The install utility automatically calls the Install method during installation. It backs out failures, if necessary, by calling <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Rollback_\" data-linktype=\"relative-path\">Rollback</a> on the object that generated the exception.  </p>\n<p> An application&#39;s install routine maintains information automatically about the components that were already installed, using the project installer&#39;s <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a>. This state information, passed into Install as the <code>stateSaver</code> parameter, is continuously updated as the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> instance and each <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instance is installed by the utility. It is usually unnecessary for your code to modify this state information explicitly.  </p>\n<p> The <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> associated with your project installation class installs information common to all <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instances in the project. If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.  </p>\n<p> To install a service, create a project installer class that inherits from the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> class, and set the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> attribute on the class to <code>true</code>. Within your project, create one <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> instance per service application, and one <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instance for each service in the application. Within your project installer class constructor, set the installation properties for the service using the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> and <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instances, and add the instances to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection in the Install method, be sure to perform the same additions to the collection in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> method.  </p>\n</div>\n<p> For all classes deriving from the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> class, the state of the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection must be the same in the Install and <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> methods. However, you can avoid the maintenance of the collection across the Install and <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> methods if you add installer instances to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection in your custom installer class constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_IsEquivalentInstaller_System_Configuration_Install_ComponentInstaller_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsEquivalentInstaller(ComponentInstaller)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether two installers would install the same service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>otherInstaller</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.componentinstaller\" data-linktype=\"relative-path\">System.Configuration.Install.ComponentInstaller</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.install.componentinstaller\" data-linktype=\"relative-path\">ComponentInstaller</a> to which you are comparing the current installer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if calling <span class=\"xref\">stem.ServiceProcess.ServiceInstaller.Install*</span> on both of these installers would result in installing the same service; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>IsEquivalentInstaller indicates, for example, whether two installers would install the same service under the same user account.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_Rollback_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Rollback(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Rolls back service application information written to the registry by the installation procedure. This method is meant to be used by installation tools, which process the appropriate methods automatically.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Rollback (System.Collections.IDictionary savedState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>savedState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that contains the context information associated with the installation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Normally, you will not call the methods on <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> within your code; they are generally called only by the install utility. The install utility automatically calls the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method during the installation process. It backs out failures, if necessary, by calling Rollback on the object that generated the exception.  </p>\n<p> An application&#39;s install routine maintains information automatically about the components already installed, using the project installer&#39;s <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a>. This state information, passed into Rollback as the <code>savedState</code> parameter, is continuously updated as the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> instance and each <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instance is installed by the utility. It is usually unnecessary for your code to modify this state information explicitly.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceProcess_ServiceInstaller_Uninstall_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Uninstall(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uninstalls the service by removing information about it from the registry.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Uninstall (System.Collections.IDictionary savedState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>savedState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that contains the context information associated with the installation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The Service Control Manager could not be opened.  </p>\n<p> -or-  </p>\n<p> The system could not get a handle to the service.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Uninstall first attempts to stop the service before uninstalling it. If the service cannot be stopped, no exception is caught, and the method continues with the removal of the service.  </p>\n<p> Normally, you will not call the methods on <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> within your code; they are generally called only by the install utility. InstallUtil is used to uninstall services as well as install them; uninstalling takes a switch in the command line call.  </p>\n<p> An application&#39;s uninstall routine maintains information automatically about the components being uninstalled, using the project installer&#39;s <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a>. This state information, passed into Uninstall as the <code>savedState</code> parameter, is continuously updated as the <a class=\"xref\" href=\"system.serviceprocess.serviceprocessinstaller\" data-linktype=\"relative-path\">ServiceProcessInstaller</a> instance and each <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> instance is installed by the utility. It is usually unnecessary for your code to modify this state information explicitly.  </p>\n<p> For all classes deriving from the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> class, the state of the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection must be the same in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a> and Uninstall methods. However, you can avoid the maintenance of the collection across the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_Install_\" data-linktype=\"relative-path\">Install</a> and Uninstall methods if you add installer instances to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection in your custom installer class constructor.  </p>\n<p> There is no rollback mechanism for uninstalling, so if one service fails to uninstall, this does not affect the other services (usually within the same installation project) being uninstalled.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceProcess.ServiceInstaller.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller..ctor\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.CopyFromComponent\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.DelayedAutoStart\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.Description\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.DisplayName\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.Install\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.Rollback\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.ServiceName\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.ServicesDependedOn\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.StartType\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceInstaller.Uninstall\">\r\n<meta name=\"APILocation\" content=\"System.ServiceProcess.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"abbca731-cd0c-31ff-47b2-b4c7ea10bdc7\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Installs a class that extends  to implement a service. This class is called by the install utility when installing a service application.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.serviceprocess/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceProcess.ServiceInstaller\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceProcess.ServiceInstaller.yml","open_to_public_contributors":false,"api_name":["System.ServiceProcess.ServiceInstaller","System.ServiceProcess.ServiceInstaller..ctor","System.ServiceProcess.ServiceInstaller.CopyFromComponent","System.ServiceProcess.ServiceInstaller.DelayedAutoStart","System.ServiceProcess.ServiceInstaller.Description","System.ServiceProcess.ServiceInstaller.DisplayName","System.ServiceProcess.ServiceInstaller.Install","System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller","System.ServiceProcess.ServiceInstaller.Rollback","System.ServiceProcess.ServiceInstaller.ServiceName","System.ServiceProcess.ServiceInstaller.ServicesDependedOn","System.ServiceProcess.ServiceInstaller.StartType","System.ServiceProcess.ServiceInstaller.Uninstall"],"api_location":["System.ServiceProcess.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceProcess.ServiceInstaller","System::ServiceProcess::ServiceInstaller","System.ServiceProcess.ServiceInstaller.#ctor","System::ServiceProcess::ServiceInstaller::#ctor","System.ServiceProcess.ServiceInstaller.CopyFromComponent","System::ServiceProcess::ServiceInstaller::CopyFromComponent","System.ServiceProcess.ServiceInstaller.DelayedAutoStart","System::ServiceProcess::ServiceInstaller::DelayedAutoStart","System.ServiceProcess.ServiceInstaller.Description","System::ServiceProcess::ServiceInstaller::Description","System.ServiceProcess.ServiceInstaller.DisplayName","System::ServiceProcess::ServiceInstaller::DisplayName","System.ServiceProcess.ServiceInstaller.Install","System::ServiceProcess::ServiceInstaller::Install","System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller","System::ServiceProcess::ServiceInstaller::IsEquivalentInstaller","System.ServiceProcess.ServiceInstaller.Rollback","System::ServiceProcess::ServiceInstaller::Rollback","System.ServiceProcess.ServiceInstaller.ServiceName","System::ServiceProcess::ServiceInstaller::ServiceName","System.ServiceProcess.ServiceInstaller.ServicesDependedOn","System::ServiceProcess::ServiceInstaller::ServicesDependedOn","System.ServiceProcess.ServiceInstaller.StartType","System::ServiceProcess::ServiceInstaller::StartType","System.ServiceProcess.ServiceInstaller.Uninstall","System::ServiceProcess::ServiceInstaller::Uninstall"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"abbca731-cd0c-31ff-47b2-b4c7ea10bdc7","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceInstaller.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ServiceInstaller class | Microsoft Docs","_op_ogTitle":"ServiceInstaller class","description":"Installs a class that extends  to implement a service. This class is called by the install utility when installing a service application.\n","toc_asset_id":"api/_splitted/System.ServiceProcess/toc.json","toc_rel":"_splitted/System.ServiceProcess/toc.json","source_url":"","ms.assetid":"System.ServiceProcess.ServiceInstaller","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.serviceprocess.serviceinstaller","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.serviceprocess.serviceinstaller","fileRelativePath":"api/System.ServiceProcess.ServiceInstaller.html"},"themesRelativePathToOutputRoot":"_themes/"}