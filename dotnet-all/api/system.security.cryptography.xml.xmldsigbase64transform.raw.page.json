{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">XmlDsigBase64Transform</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the <code>Base64</code> decoding transform as defined in Section 6.6.2 of the XMLDSIG specification.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class XmlDsigBase64Transform : System.Security.Cryptography.Xml.Transform</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform\" data-linktype=\"relative-path\">Transform</a></span></div><span class=\"lang-csharp\">XmlDsigBase64Transform</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Algorithm\" data-linktype=\"relative-path\">Algorithm</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_GetDigestedOutput_System_Security_Cryptography_HashAlgorithm_\" data-linktype=\"relative-path\">GetDigestedOutput(HashAlgorithm)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_GetXml\" data-linktype=\"relative-path\">GetXml()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_PropagatedNamespaces\" data-linktype=\"relative-path\">PropagatedNamespaces</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Resolver\" data-linktype=\"relative-path\">Resolver</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use members of the XmlDsigBase64Transform class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform#2\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Class1\n{\n    [STAThread]\n    static void Main(string[] args)\n    {\n        // Encrypt an XML message\n        EncryptXML(LoadXMLDoc());\n\n        // Using XmlDsigBase64Transform resolving a Uri.\n        Uri baseUri = new Uri(&quot;http://www.microsoft.com&quot;);\n        string relativeUri = &quot;msdn&quot;;\n        Uri absoluteUri = ResolveUris(baseUri, relativeUri);\n\n        Console.WriteLine(&quot;This sample completed successfully; &quot; +\n            &quot;press Enter to exit.&quot;);\n        Console.ReadLine();\n    }\n\n    // Encrypt the text in the specified XmlDocument.\n    private static void EncryptXML(XmlDocument xmlDoc)\n    {\n        XmlDsigBase64Transform xmlTransform = new XmlDsigBase64Transform();\n\n        // Ensure the transform is using the proper algorithm.\n        xmlTransform.Algorithm = SignedXml.XmlDsigBase64TransformUrl;\n\n        // Retrieve the XML representation of the current transform.\n        XmlElement xmlInTransform = xmlTransform.GetXml();\n\n        Console.WriteLine(&quot;Xml representation of the current transform: &quot;);\n        Console.WriteLine(xmlInTransform.OuterXml);\n\n        // Retrieve the valid input types for the current transform.\n        Type[] validInTypes = xmlTransform.InputTypes;\n\n        // Verify the xmlTransform can accept the XMLDocument as an\n        // input type.\n        for (int i=0; i&lt;validInTypes.Length; i++)\n        {\n            if (validInTypes[i] == xmlDoc.GetType())\n            {\n                // Demonstrate loading the entire Xml Document.\n                xmlTransform.LoadInput(xmlDoc);\n\n                // This transform is created for demonstration purposes.\n                XmlDsigBase64Transform secondTransform =\n                    new XmlDsigBase64Transform();\n\n                string classDescription = secondTransform.ToString();\n\n                // This call does not perform as expected.\n                // LoadInnerXml is overridden by the XmlDsigBase64Transform\n                // class, but is stubbed out.\n                secondTransform.LoadInnerXml(xmlDoc.SelectNodes(&quot;//.&quot;));\n\n                break;\n            }\n        }\n\n        Type[] validOutTypes = xmlTransform.OutputTypes;\n\n        for (int i=0; i&lt;validOutTypes.Length; i++)\n        {\n            if (validOutTypes[i] == typeof(System.IO.Stream))\n            {\n                try \n                {\n                    Type streamType = typeof(System.IO.Stream);\n                    CryptoStream outputStream = (CryptoStream) \n                        xmlTransform.GetOutput(streamType);\n\n                    // Read the CryptoStream into a stream reader.\n                    StreamReader streamReader =\n                        new StreamReader(outputStream);\n\n                    // Read the stream into a string.\n                    string outputMessage = streamReader.ReadToEnd();\n\n                    // Close the streams.\n                    outputStream.Close();\n                    streamReader.Close();\n\n                    // Display to the console the Xml before and after\n                    // encryption.\n                    Console.WriteLine(&quot;Encoding the following message: &quot; +\n                        xmlDoc.InnerText);\n                    Console.WriteLine(&quot;Message encoded: &quot; + outputMessage);\n            }\n                catch (Exception ex)\n                {\n                    Console.WriteLine(&quot;Unexpected exception caught: &quot; +\n                        ex.ToString());\n                }\n\n                break;\n            }\n            else\n            {\n                object outputObject = xmlTransform.GetOutput();\n            }\n        }\n    }\n\n    // Create an XML document with Element and Text nodes.\n    private static XmlDocument LoadXMLDoc()\n    {\n        XmlDocument xmlDoc = new XmlDocument();\n\n        XmlNode mainNode = xmlDoc.CreateNode(\n            XmlNodeType.Element,\n            &quot;ContosoMessages&quot;,\n            &quot;http://www.contoso.com&quot;);\n\n        XmlNode textNode = xmlDoc.CreateTextNode(&quot;Some text to encode.&quot;);\n        mainNode.AppendChild(textNode);\n        xmlDoc.AppendChild(mainNode);\n\n        Console.WriteLine(&quot;Created the following XML Document for &quot; +\n            &quot;transformation: &quot;);\n        Console.WriteLine(xmlDoc.InnerXml);\n        return xmlDoc;\n    }\n\n    // Resolve the specified base and relative Uri&#39;s .\n    private static Uri ResolveUris(Uri baseUri, string relativeUri)\n    {\n        XmlUrlResolver xmlResolver = new XmlUrlResolver();\n        xmlResolver.Credentials = \n            System.Net.CredentialCache.DefaultCredentials;\n\n        XmlDsigBase64Transform xmlTransform = new XmlDsigBase64Transform();\n        xmlTransform.Resolver = xmlResolver;\n\n        Uri absoluteUri = xmlResolver.ResolveUri(baseUri, relativeUri);\n\n        if (absoluteUri != null)\n        {\n            Console.WriteLine(\n                &quot;Resolved the base Uri and relative Uri to the following:&quot;);\n            Console.WriteLine(absoluteUri.ToString());\n        }\n        else\n        {\n            Console.WriteLine(\n                &quot;Unable to resolve the base Uri and relative Uri&quot;);\n        }\n        return absoluteUri;\n    }\n}\n//\n// This sample produces the following output:\n//\n// Created the following XML Document for transformation:\n// &lt;ContosoMessages xmlns=&quot;http://www.contoso.com&quot;&gt;Some text to encode.\n// &lt;/ContosoMessages&gt;\n// Xml representation of the current transform:\n// &lt;Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot; xmlns=\n// &quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n// Encoding the following message: Some text to encode.\n// Message encoded: Jmr^\n// Resolved the base Uri and relative Uri to the following:\n// http://www.microsoft.com/msdn\n// This sample completed successfully; press Enter to exit.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform#2\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    &#39; Event handler for Run button.\n    Private Sub Button1_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        tbxOutput.Cursor = Cursors.WaitCursor\n        tbxOutput.Text = &quot;&quot;\n\n        &#39; Encrypt an XML message\n        EncryptXML(LoadXMLDoc())\n\n        &#39; Using XmlDsigBase64Transform resolving a Uri.\n        Dim baseUri As New Uri(&quot;http://www.microsoft.com&quot;)\n        Dim relativeUri As String = &quot;msdn&quot;\n        Dim absoluteUri As Uri = ResolveUris(baseUri, relativeUri)\n\n        &#39; Reset the cursor and conclude application.\n        WriteLine(vbCrLf + &quot;This sample completed successfully;&quot; + _\n            &quot; press Exit to continue.&quot;)\n        tbxOutput.Cursor = Cursors.Default\n    End Sub\n\n    &#39; Encrypt the text in the specified XmlDocument.\n    Private Sub EncryptXML(ByVal xmlDoc As XmlDocument)\n        Dim xmlTransform As New XmlDsigBase64Transform\n\n        &#39; Ensure the transform is using the proper algorithm.\n        xmlTransform.Algorithm = SignedXml.XmlDsigBase64TransformUrl\n\n        &#39; Retrieve the XML representation of the current transform.\n        Dim xmlInTransform As XmlElement = xmlTransform.GetXml()\n\n        WriteLine(&quot;Xml representation of the current transform: &quot;)\n        WriteLine(xmlInTransform.OuterXml)\n\n        &#39; Retrieve the valid input types for the current transform.\n        Dim validInTypes() As Type = xmlTransform.InputTypes\n\n        &#39; Verify the xmlTransform can accept the XMLDocument as an\n        &#39; input type.\n        For i As Int16 = 0 To validInTypes.Length Step 1\n            If (validInTypes(i).Equals(xmlDoc.GetType())) Then\n                &#39; Demonstrate loading the entire Xml Document.\n                xmlTransform.LoadInput(xmlDoc)\n\n                &#39; This transform is created for demonstration purposes.\n                Dim secondTransform As New XmlDsigBase64Transform\n\n                Dim classDescription As String = secondTransform.ToString()\n\n                &#39; This call does not perform as expected.\n                &#39; LoadInnerXml is overridden by the XmlDsigBase64Transform\n                &#39; class, but is stubbed out.\n                secondTransform.LoadInnerXml(xmlDoc.SelectNodes(&quot;//.&quot;))\n\n                Exit For\n            End If\n        Next\n        Dim validOutTypes() As Type = xmlTransform.OutputTypes\n\n        For i As Int16 = 0 To validOutTypes.Length Step 1\n            If (validOutTypes(i).equals(GetType(System.IO.Stream))) Then\n                Try\n                    Dim streamType As Type = GetType(System.IO.Stream)\n\n                    Dim outputStream As CryptoStream\n                    outputStream = CType( _\n                        xmlTransform.GetOutput(streamType), _\n                        CryptoStream)\n\n\n                    &#39; Read the CryptoStream into a stream reader.\n                    Dim streamReader As New StreamReader(outputStream)\n\n                    &#39; Read the stream into a string.\n                    Dim outputMessage As String = streamReader.ReadToEnd()\n\n                    &#39; Close the streams.\n                    outputStream.Close()\n                    streamReader.Close()\n\n                    &#39; Display to the console the Xml before and after\n                    &#39; encryption.\n                    WriteLine(&quot;Encoding the following message: &quot; + _\n                        xmlDoc.InnerText)\n                    WriteLine(&quot;Message encoded: &quot; + outputMessage)\n\n                Catch ex As Exception\n                    WriteLine(&quot;Unexpected exception caught: &quot; + _\n                        ex.ToString())\n\n                End Try\n\n                &#39; Stop cycling through types, exit operation.\n                Exit For\n            Else\n                Dim outputObject As Object = xmlTransform.GetOutput()\n            End If\n        Next\n    End Sub\n\n    &#39; Create an XML document with Element and Text nodes.\n    Private Function LoadXMLDoc() As XmlDocument\n        Dim xmlDoc As New XmlDocument\n\n        Dim mainNode As XmlNode = xmlDoc.CreateNode( _\n            XmlNodeType.Element, _\n            &quot;ContosoMessages&quot;, _\n            &quot;http://www.contoso.com&quot;)\n\n        Dim textNode As XmlNode\n        textNode = xmlDoc.CreateTextNode(&quot;Some text to encode.&quot;)\n        mainNode.AppendChild(textNode)\n        xmlDoc.AppendChild(mainNode)\n\n        WriteLine(&quot;Created the following XML Document for &quot; + _\n            &quot;transformation: &quot;)\n        WriteLine(xmlDoc.InnerXml)\n        Return xmlDoc\n    End Function\n\n    &#39; Resolve the specified base and relative Uri&#39;s .\n    Private Function ResolveUris( _\n        ByVal baseUri As Uri, _\n        ByVal relativeUri As String) As Uri\n\n        Dim xmlResolver As New XmlUrlResolver\n        xmlResolver.Credentials = _\n            System.Net.CredentialCache.DefaultCredentials\n\n        Dim xmlTransform As New XmlDsigBase64Transform\n        xmlTransform.Resolver = xmlResolver\n\n        Dim absoluteUri As Uri = _\n            xmlResolver.ResolveUri(baseUri, relativeUri)\n\n        If Not absoluteUri Is Nothing Then\n            WriteLine( _\n                &quot;Resolved the base Uri and relative Uri to the following:&quot;)\n            WriteLine(absoluteUri.ToString())\n        Else\n            WriteLine(&quot;Unable to resolve the base Uri and relative Uri&quot;)\n        End If\n        Return absoluteUri\n    End Function\n\n    &#39; Write message and carriage return to the output textbox.\n    Private Sub WriteLine(ByVal message As String)\n        tbxOutput.AppendText(message + vbCrLf)\n    End Sub\n\n    &#39; Event handler for Exit button.\n    Private Sub Button2_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button2.Click\n\n        Application.Exit()\n    End Sub\n#Region &quot; Windows Form Designer generated code &quot;\n\n    Public Sub New()\n        MyBase.New()\n\n        &#39;This call is required by the Windows Form Designer.\n        InitializeComponent()\n\n        &#39;Add any initialization after the InitializeComponent() call\n\n    End Sub\n\n    &#39;Form overrides dispose to clean up the component list.\n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            If Not (components Is Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    &#39;Required by the Windows Form Designer\n    Private components As System.ComponentModel.IContainer\n\n    &#39;NOTE: The following procedure is required by the Windows Form Designer\n    &#39;It can be modified using the Windows Form Designer.  \n    &#39;Do not modify it using the code editor.\n    Friend WithEvents Panel2 As System.Windows.Forms.Panel\n    Friend WithEvents Panel1 As System.Windows.Forms.Panel\n    Friend WithEvents Button1 As System.Windows.Forms.Button\n    Friend WithEvents Button2 As System.Windows.Forms.Button\n    Friend WithEvents tbxOutput As System.Windows.Forms.RichTextBox\n    &lt;System.Diagnostics.DebuggerStepThrough()&gt; _\n    Private Sub InitializeComponent()\n        Me.Panel2 = New System.Windows.Forms.Panel\n        Me.Button1 = New System.Windows.Forms.Button\n        Me.Button2 = New System.Windows.Forms.Button\n        Me.Panel1 = New System.Windows.Forms.Panel\n        Me.tbxOutput = New System.Windows.Forms.RichTextBox\n        Me.Panel2.SuspendLayout()\n        Me.Panel1.SuspendLayout()\n        Me.SuspendLayout()\n        &#39;\n        &#39;Panel2\n        &#39;\n        Me.Panel2.Controls.Add(Me.Button1)\n        Me.Panel2.Controls.Add(Me.Button2)\n        Me.Panel2.Dock = System.Windows.Forms.DockStyle.Bottom\n        Me.Panel2.DockPadding.All = 20\n        Me.Panel2.Location = New System.Drawing.Point(0, 320)\n        Me.Panel2.Name = &quot;Panel2&quot;\n        Me.Panel2.Size = New System.Drawing.Size(616, 64)\n        Me.Panel2.TabIndex = 1\n        &#39;\n        &#39;Button1\n        &#39;\n        Me.Button1.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button1.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button1.Location = New System.Drawing.Point(446, 20)\n        Me.Button1.Name = &quot;Button1&quot;\n        Me.Button1.Size = New System.Drawing.Size(75, 24)\n        Me.Button1.TabIndex = 2\n        Me.Button1.Text = &quot;&amp;Run&quot;\n        &#39;\n        &#39;Button2\n        &#39;\n        Me.Button2.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button2.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button2.Location = New System.Drawing.Point(521, 20)\n        Me.Button2.Name = &quot;Button2&quot;\n        Me.Button2.Size = New System.Drawing.Size(75, 24)\n        Me.Button2.TabIndex = 3\n        Me.Button2.Text = &quot;E&amp;xit&quot;\n        &#39;\n        &#39;Panel1\n        &#39;\n        Me.Panel1.Controls.Add(Me.tbxOutput)\n        Me.Panel1.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.Panel1.DockPadding.All = 20\n        Me.Panel1.Location = New System.Drawing.Point(0, 0)\n        Me.Panel1.Name = &quot;Panel1&quot;\n        Me.Panel1.Size = New System.Drawing.Size(616, 320)\n        Me.Panel1.TabIndex = 2\n        &#39;\n        &#39;tbxOutput\n        &#39;\n        Me.tbxOutput.AccessibleDescription = _\n            &quot;Displays output from application.&quot;\n        Me.tbxOutput.AccessibleName = &quot;Output textbox.&quot;\n        Me.tbxOutput.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.tbxOutput.Location = New System.Drawing.Point(20, 20)\n        Me.tbxOutput.Name = &quot;tbxOutput&quot;\n        Me.tbxOutput.Size = New System.Drawing.Size(576, 280)\n        Me.tbxOutput.TabIndex = 1\n        Me.tbxOutput.Text = &quot;Click the Run button to run the application.&quot;\n        &#39;\n        &#39;Form1\n        &#39;\n        Me.AutoScaleBaseSize = New System.Drawing.Size(6, 15)\n        Me.ClientSize = New System.Drawing.Size(616, 384)\n        Me.Controls.Add(Me.Panel1)\n        Me.Controls.Add(Me.Panel2)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;XmlDsigBase64Transform&quot;\n        Me.Panel2.ResumeLayout(False)\n        Me.Panel1.ResumeLayout(False)\n        Me.ResumeLayout(False)\n\n    End Sub\n\n#End Region\nEnd Class\n&#39;\n&#39; This sample produces the following output:\n&#39;\n&#39; Created the following XML Document for transformation: \n&#39; &lt;ContosoMessages xmlns=&quot;http://www.contoso.com&quot;&gt;Some text to encode.\n&#39; &lt;/ContosoMessages&gt;\n&#39; Xml representation of the current transform: \n&#39; &lt;Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot; xmlns=\n&#39; &quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n&#39; Encoding the following message: Some text to encode.\n&#39; Message encoded: Jmr^\n&#39; Resolved the base Uri and relative Uri to the following:\n&#39; http://www.microsoft.com/msdn\n&#39; \n&#39; This sample completed successfully; press Exit to continue.\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform#2\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::Xml;\n\nnamespace CryptographyXmlDsigBase64Transform\n{\n    ref class Example\n    {\n    public:\n        static void Produce()\n        {\n            \n            // Encrypt an XML message\n            EncryptXML(LoadXMLDoc());\n            \n            // Using XmlDsigBase64Transform resolving a Uri.\n            Uri^ baseUri = gcnew Uri(&quot;http://www.microsoft.com&quot;);\n            String^ relativeUri = &quot;msdn&quot;;\n            Uri^ absoluteUri = ResolveUris(baseUri, relativeUri);\n            Console::WriteLine(&quot;This sample completed successfully; &quot;\n                &quot;press Enter to exit.&quot;);\n            Console::ReadLine();\n        }\n\n\n    private:\n\n        // Encrypt the text in the specified XmlDocument.\n        static void EncryptXML(XmlDocument^ xmlDoc)\n        {\n            \n            XmlDsigBase64Transform^ xmlTransform = \n                gcnew XmlDsigBase64Transform;\n            // Ensure the transform is using the proper algorithm.\n            xmlTransform-&gt;Algorithm = \n                SignedXml::XmlDsigBase64TransformUrl;\n            // Retrieve the XML representation of the current \n            // transform.\n            XmlElement^ xmlInTransform = xmlTransform-&gt;GetXml();\n            Console::WriteLine(&quot;Xml representation of the &quot; \n                &quot;current transform: &quot;);\n            Console::WriteLine(xmlInTransform-&gt;OuterXml);\n            \n            // Retrieve the valid input types for the current \n            // transform.\n            array&lt;Type^&gt;^ validInTypes = xmlTransform-&gt;InputTypes;\n            // Verify the xmlTransform can accept the XMLDocument\n            // as an input type.\n            for each (Type^ validInType in validInTypes)\n            {\n                if (validInType == xmlDoc-&gt;GetType())\n                {\n                    \n                    // Demonstrate loading the entire Xml Document.\n                    xmlTransform-&gt;LoadInput(xmlDoc);\n                    // This transform is created for demonstration \n                    // purposes.\n                    XmlDsigBase64Transform^ secondTransform = \n                        gcnew XmlDsigBase64Transform;\n                    String^ classDescription = \n                        secondTransform-&gt;ToString();\n                    // This call does not perform as expected.\n                    // LoadInnerXml is overridden by the \n                    // XmlDsigBase64Transform class, but is \n                    // stubbed out.\n                    secondTransform-&gt;LoadInnerXml(\n                        xmlDoc-&gt;SelectNodes(&quot;//.&quot;));\n                    break;\n                }\n\n            }\n            \n            array&lt;Type^&gt;^ validOutTypes = xmlTransform-&gt;OutputTypes;\n            for each (Type^ validOutType in validOutTypes)\n            {\n                if (validOutType == Stream::typeid)\n                {\n                    try\n                    {\n                        \n                        Type^ streamType = Stream::typeid;\n                        CryptoStream^ outputStream = \n                            (CryptoStream^)(xmlTransform-&gt;GetOutput(\n\t\t\t\t\t\t\tstreamType));\n                        // Read the CryptoStream into a stream reader.\n                        StreamReader^ streamReader = \n                            gcnew StreamReader(outputStream);\n                        \n                        // Read the stream into a string.\n                        String^ outputMessage = \n                            streamReader-&gt;ReadToEnd();\n                        \n                        // Close the streams.\n                        outputStream-&gt;Close();\n                        streamReader-&gt;Close();\n                        \n                        // Display to the console the Xml before and\n                        // after encryption.\n                        Console::WriteLine(&quot;Encoding the following &quot;\n                            &quot;message: {0}&quot;, xmlDoc-&gt;InnerText);\n                        Console::WriteLine(&quot;Message encoded: {0}&quot;, \n                            outputMessage);\n                    }\n                    catch (CryptographicException^ ex) \n                    {\n                        Console::WriteLine(&quot;Cryptographic exception &quot;\n                            &quot;caught: {0}&quot;, ex);\n                    }\n\n                    break;\n                }\n                else\n                {\n                    \n                    Object^ outputObject = xmlTransform-&gt;GetOutput();\n                }\n\n            }\n        }\n\n\n        // Create an XML document with Element and Text nodes.\n        static XmlDocument^ LoadXMLDoc()\n        {\n            XmlDocument^ xmlDoc = gcnew XmlDocument;\n            XmlNode^ mainNode = \n                xmlDoc-&gt;CreateNode(XmlNodeType::Element, \n                &quot;ContosoMessages&quot;, &quot;http://www.contoso.com&quot;);\n            XmlNode^ textNode = xmlDoc-&gt;CreateTextNode(&quot;Some text &quot;\n                &quot;to encode.&quot;);\n            mainNode-&gt;AppendChild(textNode);\n            xmlDoc-&gt;AppendChild(mainNode);\n            Console::WriteLine(&quot;Created the following XML Document &quot;\n                &quot;for transformation: &quot;);\n            Console::WriteLine(xmlDoc-&gt;InnerXml);\n            return xmlDoc;\n        }\n\n\n        // Resolve the specified base and relative Uri&#39;s.\n        static Uri^ ResolveUris(Uri^ baseUri, String^ relativeUri)\n        {\n            \n            XmlUrlResolver^ xmlResolver = gcnew XmlUrlResolver;\n            xmlResolver-&gt;Credentials = \n                System::Net::CredentialCache::DefaultCredentials;\n            XmlDsigBase64Transform^ xmlTransform = \n                gcnew XmlDsigBase64Transform;\n            xmlTransform-&gt;Resolver = xmlResolver;\n            Uri^ absoluteUri = xmlResolver-&gt;ResolveUri(baseUri, \n                relativeUri);\n            if (absoluteUri != nullptr)\n            {\n                Console::WriteLine(&quot;Resolved the base Uri and &quot;\n                    &quot;relative Uri to the following:&quot;);\n                Console::WriteLine(absoluteUri);\n            }\n            else\n            {\n                Console::WriteLine(&quot;Unable to resolve the base &quot;\n                    &quot;Uri and relative Uri&quot;);\n            }\n\n            return absoluteUri;\n        }\n\n    };\n\n}\n\nint main()\n{\n    CryptographyXmlDsigBase64Transform::Example::Produce();\n}\n\n//\n// This sample produces the following output:\n//\n// Created the following XML Document for transformation:\n// &lt;ContosoMessages xmlns=&quot;http://www.contoso.com&quot;&gt;Some text to encode.\n// &lt;/ContosoMessages&gt;\n// Xml representation of the current transform:\n// &lt;Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;\n// xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n// Encoding the following message: Some text to encode.\n// Message encoded: Jmr^\n// Resolved the base Uri and relative Uri to the following:\n// http://www.microsoft.com/msdn\n// This sample completed successfully; press Enter to exit.\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the XmlDsigBase64Transform object when you need to sign the raw data associated with the encoded content of an element.  </p>\n<p> The Uniform Resource Identifier (URI) that describes the XmlDsigBase64Transform object is defined by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigBase64TransformUrl\" data-linktype=\"relative-path\">XmlDsigBase64TransformUrl</a> field.  </p>\n<p> For more information about the <code>Base64</code> decoding transform, see Section 6.6.2 of the XMLDSIG specification, which is available from the W3C at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigBase64Transform()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XmlDsigBase64Transform ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_InputTypes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_InputTypes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputTypes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of types that are valid inputs to the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput*</span> method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override Type[] InputTypes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of valid input types for the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object; you can pass only objects of one of these types to the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput*</span> method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The valid input types to <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> are <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>, and <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_OutputTypes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_OutputTypes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OutputTypes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of types that are possible outputs from the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput*</span> methods of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override Type[] OutputTypes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of valid output types for the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object; only objects of one of these types are returned from the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput*</span> methods of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> is the only valid output type for <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_GetInnerXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_GetInnerXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetInnerXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an XML representation of the parameters of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object that are suitable to be included as subelements of an XMLDSIG <code>&lt;Transform&gt;</code> element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Xml.XmlNodeList GetInnerXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A list of the XML nodes that represent the transform-specific content needed to describe the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object in an XMLDSIG <code>&lt;Transform&gt;</code> element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_GetOutput_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_GetOutput\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOutput()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object GetOutput ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the returned object must be <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_GetOutput_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_GetOutput_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOutput(Type)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object of type <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object GetOutput (Type type);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the output to return. <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> is the only valid type for this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object of type <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>type</code> parameter is not a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the returned object must be <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_LoadInnerXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_LoadInnerXml_System_Xml_XmlNodeList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadInnerXml(XmlNodeList)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Parses the specified <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> object as transform-specific content of a <code>&lt;Transform&gt;</code> element; this method is not supported because the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object has no inner XML elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nodeList</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> object to load into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not supported because the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object has no inner XML elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_LoadInput_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigBase64Transform_LoadInput_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadInput(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the specified input into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void LoadInput (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The input to load into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>obj</code> parameter is a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and it is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the input object must be one of the types in the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform#System_Security_Cryptography_Xml_XmlDsigBase64Transform_InputTypes_\" data-linktype=\"relative-path\">InputTypes</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.XmlDsigBase64Transform.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetInnerXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform.InputTypes\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInnerXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform.OutputTypes\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"9f70d711-e72e-f37e-67e2-fdb6bb3d73f3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the Base64 decoding transform as defined in Section 6.6.2 of the XMLDSIG specification.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.XmlDsigBase64Transform.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Xml.XmlDsigBase64Transform","System.Security.Cryptography.Xml.XmlDsigBase64Transform..ctor","System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetInnerXml","System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput","System.Security.Cryptography.Xml.XmlDsigBase64Transform.InputTypes","System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInnerXml","System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput","System.Security.Cryptography.Xml.XmlDsigBase64Transform.OutputTypes"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.XmlDsigBase64Transform","System::Security::Cryptography::Xml::XmlDsigBase64Transform","System.Security.Cryptography.Xml.XmlDsigBase64Transform.#ctor","System::Security::Cryptography::Xml::XmlDsigBase64Transform::#ctor","System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetInnerXml","System::Security::Cryptography::Xml::XmlDsigBase64Transform::GetInnerXml","System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput","System::Security::Cryptography::Xml::XmlDsigBase64Transform::GetOutput","System.Security.Cryptography.Xml.XmlDsigBase64Transform.InputTypes","System::Security::Cryptography::Xml::XmlDsigBase64Transform::InputTypes","System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInnerXml","System::Security::Cryptography::Xml::XmlDsigBase64Transform::LoadInnerXml","System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput","System::Security::Cryptography::Xml::XmlDsigBase64Transform::LoadInput","System.Security.Cryptography.Xml.XmlDsigBase64Transform.OutputTypes","System::Security::Cryptography::Xml::XmlDsigBase64Transform::OutputTypes"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"9f70d711-e72e-f37e-67e2-fdb6bb3d73f3","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography.Xml/XmlDsigBase64Transform.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlDsigBase64Transform class | Microsoft Docs","_op_ogTitle":"XmlDsigBase64Transform class","description":"Represents the Base64 decoding transform as defined in Section 6.6.2 of the XMLDSIG specification.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.XmlDsigBase64Transform","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.xmldsigbase64transform","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.xmldsigbase64transform","fileRelativePath":"api/System.Security.Cryptography.Xml.XmlDsigBase64Transform.html"},"themesRelativePathToOutputRoot":"_themes/"}