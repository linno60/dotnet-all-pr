{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ComponentCollection</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a read-only container for a collection of <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> objects.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class ComponentCollection : System.Collections.ReadOnlyCollectionBase</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a></span></div><span class=\"lang-csharp\">ComponentCollection</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.readonlycollectionbase#System_Collections_ReadOnlyCollectionBase_Count\" data-linktype=\"relative-path\">Count</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.readonlycollectionbase#System_Collections_ReadOnlyCollectionBase_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.readonlycollectionbase#System_Collections_ReadOnlyCollectionBase_InnerList\" data-linktype=\"relative-path\">InnerList</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.readonlycollectionbase#System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"relative-path\">ICollection.CopyTo(Array, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.readonlycollectionbase#System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_IsSynchronized\" data-linktype=\"relative-path\">ICollection.IsSynchronized</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.readonlycollectionbase#System_Collections_ReadOnlyCollectionBase_System_Collections_ICollection_SyncRoot\" data-linktype=\"relative-path\">ICollection.SyncRoot</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use a ComponentCollection to enumerate a collection of custom <code>BookComponent</code> objects.  </p>\n<pre><code class=\"lang-cs\" name=\"ContainerExmpl#2\">//This code segment implements the IContainer interface.  The code segment \n//containing the implementation of ISite and IComponent can be found in the documentation\n//for those interfaces.\n\n//Implement the LibraryContainer using the IContainer interface.\n\nclass LibraryContainer : IContainer\n{\n\tprivate ArrayList m_bookList;\n\n\tpublic LibraryContainer()\n\t{\n\t\tm_bookList = new ArrayList();\n\t}\n\n\tpublic virtual void Add(IComponent book)\n\t{\n\t\t//The book will be added without creation of the ISite object.\n\t\tm_bookList.Add(book);\n\t}\n\n\tpublic virtual void Add(IComponent book, string ISNDNNum)\n\t{\n\t\tfor(int i =0; i &lt; m_bookList.Count; ++i)\n\t\t{\n\t\t\tIComponent curObj = (IComponent)m_bookList[i];\n\t\t\tif(curObj.Site != null)\n\t\t\t{\n\t\t\t\tif(curObj.Site.Name.Equals(ISNDNNum))\n\t\t\t\t\tthrow new SystemException(&quot;The ISBN number already exists in the container&quot;); \n\t\t\t}\n\t\t}\n\n\t\tISBNSite data = new ISBNSite(this, book);\n\t\tdata.Name = ISNDNNum;\n\t\tbook.Site = data;\n\t\tm_bookList.Add(book);\n\t}\n\n\tpublic virtual void Remove(IComponent book)\n\t{\n\t\tfor(int i =0; i &lt; m_bookList.Count; ++i)\n\t\t{\t\t\t\t\n\t\t\tif(book.Equals(m_bookList[i]))\n\t\t\t{\n\t\t\t\tm_bookList.RemoveAt(i);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic ComponentCollection Components\n\t{\n\t\tget\n\t\t{\n\t\t\tIComponent[] datalist = new BookComponent[m_bookList.Count];\n\t\t\tm_bookList.CopyTo(datalist);\n\t\t\treturn new ComponentCollection(datalist);\n\t\t}\n\t}\n\n\tpublic virtual void Dispose()\n\t{\t\n\t\tfor(int i =0; i &lt; m_bookList.Count; ++i)\n\t\t{\n\t\t\tIComponent curObj = (IComponent)m_bookList[i];\n\t\t\tcurObj.Dispose();\n\t\t}\n\t\t\n\t\tm_bookList.Clear();\n\t}\n\n\tstatic void Main(string[] args)\n\t{\n\t\tLibraryContainer cntrExmpl = new LibraryContainer();\n\n\t\ttry\n\t\t{\n\t\t\tBookComponent book1 = new BookComponent(&quot;Wizard&#39;s First Rule&quot;, &quot;Terry Gooodkind&quot;);\n\t\t\tcntrExmpl.Add(book1, &quot;0812548051&quot;);\n\t\t\tBookComponent book2 = new BookComponent(&quot;Stone of Tears&quot;, &quot;Terry Gooodkind&quot;);\n\t\t\tcntrExmpl.Add(book2, &quot;0812548094&quot;);\n\t\t\tBookComponent book3 = new BookComponent(&quot;Blood of the Fold&quot;, &quot;Terry Gooodkind&quot;);\n\t\t\tcntrExmpl.Add(book3, &quot;0812551478&quot;);\n\t\t\tBookComponent book4 = new BookComponent(&quot;The Soul of the Fire&quot;, &quot;Terry Gooodkind&quot;);\n\t\t\t//This will generate exception because the ISBN already exists in the container.\n\t\t\tcntrExmpl.Add(book4, &quot;0812551478&quot;);\n\t\t}\n\t\tcatch(SystemException e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Error description: &quot; + e.Message);\n\t\t}\n\n\t\tComponentCollection datalist =cntrExmpl.Components;\n\t\tIEnumerator denum = datalist.GetEnumerator();\n\n\t\twhile(denum.MoveNext())\n\t\t{\n\t\t\tBookComponent cmp = (BookComponent)denum.Current;\n\t\t\tConsole.WriteLine(&quot;Book Title: &quot; + cmp.Title);\n\t\t\tConsole.WriteLine(&quot;Book Author: &quot; + cmp.Author);\n\t\t\tConsole.WriteLine(&quot;Book ISBN: &quot; + cmp.Site.Name);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"ContainerExmpl#2\"> //This code segment implements the IContainer interface.  The code segment\n //containing the implementation of ISite and IComponent can be found in the documentation\n //for those interfaces.\n //Implement the LibraryContainer using the IContainer interface.\n ref class LibraryContainer: public IContainer\n {\n private:\n    ArrayList^ m_bookList;\n\n public:\n    LibraryContainer()\n    {\n       m_bookList = gcnew ArrayList;\n    }\n\n    virtual void Add( IComponent^ book )\n    {\n       \n       //The book will be added without creation of the ISite object.\n       m_bookList-&gt;Add( book );\n    }\n\n    virtual void Add( IComponent^ book, String^ ISNDNNum )\n    {\n       for ( int i = 0; i &lt; m_bookList-&gt;Count; ++i )\n       {\n          IComponent^ curObj = static_cast&lt;IComponent^&gt;(m_bookList-&gt;default[ i ]);\n          if ( curObj-&gt;Site != nullptr )\n          {\n             if ( curObj-&gt;Site-&gt;Name-&gt;Equals( ISNDNNum ) )\n                            throw gcnew SystemException( &quot;The ISBN number already exists in the container&quot; );\n          }\n\n       }\n       ISBNSite^ data = gcnew ISBNSite( this,book );\n       data-&gt;Name = ISNDNNum;\n       book-&gt;Site = data;\n       m_bookList-&gt;Add( book );\n    }\n\n    virtual void Remove( IComponent^ book )\n    {\n       for ( int i = 0; i &lt; m_bookList-&gt;Count; ++i )\n       {\n          if ( book-&gt;Equals( m_bookList-&gt;default[ i ] ) )\n          {\n             m_bookList-&gt;RemoveAt( i );\n             break;\n          }\n\n       }\n    }\n\n\n    property ComponentCollection^ Components \n    {\n       virtual ComponentCollection^ get() \n       {\n          array&lt;IComponent^&gt;^datalist = gcnew array&lt;BookComponent^&gt;(m_bookList-&gt;Count);\n          m_bookList-&gt;CopyTo( datalist );\n          return gcnew ComponentCollection( datalist );\n       }\n\n    }\n\n    ~LibraryContainer()\n    {\n       for ( int i = 0; i &lt; m_bookList-&gt;Count; ++i )\n       {\n          IComponent^ curObj = static_cast&lt;IComponent^&gt;(m_bookList-&gt;default[ i ]);\n          delete curObj;\n\n       }\n       m_bookList-&gt;Clear();\n    }\n\n\n\n };\n\n\n\n [STAThreadAttribute]\n int main()\n    {\n       LibraryContainer^ cntrExmpl = gcnew LibraryContainer;\n       try\n       {\n          BookComponent^ book1 = gcnew BookComponent( &quot;Wizard&#39;s First Rule&quot;,&quot;Terry Gooodkind&quot; );\n          cntrExmpl-&gt;Add( book1, &quot;0812548051&quot; );\n          BookComponent^ book2 = gcnew BookComponent( &quot;Stone of Tears&quot;,&quot;Terry Gooodkind&quot; );\n          cntrExmpl-&gt;Add( book2, &quot;0812548094&quot; );\n          BookComponent^ book3 = gcnew BookComponent( &quot;Blood of the Fold&quot;,&quot;Terry Gooodkind&quot; );\n          cntrExmpl-&gt;Add( book3, &quot;0812551478&quot; );\n          BookComponent^ book4 = gcnew BookComponent( &quot;The Soul of the Fire&quot;,&quot;Terry Gooodkind&quot; );\n          \n          //This will generate exception because the ISBN already exists in the container.\n          cntrExmpl-&gt;Add( book4, &quot;0812551478&quot; );\n       }\n       catch ( SystemException^ e ) \n       {\n          Console::WriteLine(  &quot;Error description: {0}&quot;, e-&gt;Message );\n       }\n\n       ComponentCollection^ datalist = cntrExmpl-&gt;Components;\n       IEnumerator^ denum = datalist-&gt;GetEnumerator();\n       while ( denum-&gt;MoveNext() )\n       {\n          BookComponent^ cmp = static_cast&lt;BookComponent^&gt;(denum-&gt;Current);\n          Console::WriteLine( &quot;Book Title: {0}&quot;, cmp-&gt;Title );\n          Console::WriteLine(  &quot;Book Author: {0}&quot;, cmp-&gt;Author );\n          Console::WriteLine(  &quot;Book ISBN: {0}&quot;, cmp-&gt;Site-&gt;Name );\n       }\n\nreturn 0;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ContainerExmpl#2\">\t&#39;This code segment implements the IContainer interface.  The code segment \n\t&#39;containing the implementation of ISite and IComponent can be found in the documentation\n\t&#39;for those interfaces.\n\t\n\t&#39;Implement the LibraryContainer using the IContainer interface.\n\nClass LibraryContainer\n    Implements IContainer\n    Private m_bookList As ArrayList\n\n    Public Sub New()\n        m_bookList = New ArrayList()\n    End Sub\n\n    Public Sub Add(ByVal book As IComponent) Implements IContainer.Add\n        &#39;The book will be added without creation of the ISite object.\n        m_bookList.Add(book)\n    End Sub\n\n    Public Sub Add(ByVal book As IComponent, ByVal ISNDNNum As String) Implements IContainer.Add\n\n        Dim i As Integer\n        Dim curObj As IComponent\n\n        For i = 0 To m_bookList.Count - 1\n            curObj = CType(m_bookList(i), IComponent)\n            If curObj.Site IsNot Nothing Then\n                If (curObj.Site.Name.Equals(ISNDNNum)) Then\n                    Throw New SystemException(&quot;The ISBN number already exists in the container&quot;)\n                End If\n            End If\n        Next i\n\n        Dim data As ISBNSite = New ISBNSite(Me, book)\n        data.Name = ISNDNNum\n        book.Site = data\n        m_bookList.Add(book)\n\n    End Sub\n\n    Public Sub Remove(ByVal book As IComponent) Implements IContainer.Remove\n        Dim i As Integer\n        Dim curComp As BookComponent = CType(book, BookComponent)\n\n        For i = 0 To m_bookList.Count - 1\n            If (curComp.Equals(m_bookList(i)) = True) Then\n                m_bookList.RemoveAt(i)\n                Exit For\n            End If\n        Next i\n    End Sub\n\n\n    Public ReadOnly Property Components() As ComponentCollection Implements IContainer.Components\n        Get\n            Dim datalist(m_bookList.Count - 1) As IComponent\n            \n            m_bookList.CopyTo(datalist)\n            Return New ComponentCollection(datalist)\n        End Get\n    End Property\n\n    Public Overridable Sub Dispose() Implements IDisposable.Dispose\n        Dim i As Integer\n        For i = 0 To m_bookList.Count - 1\n            Dim curObj As IComponent = CType(m_bookList(i), IComponent)\n            curObj.Dispose()\n        Next i\n\n        m_bookList.Clear()\n    End Sub\n\n    Public Shared Sub Main()\n        Dim cntrExmpl As LibraryContainer = New LibraryContainer()\n\n        Try\n            Dim book1 As BookComponent = New BookComponent(&quot;Wizard&#39;s First Rule&quot;, &quot;Terry Gooodkind&quot;)\n            cntrExmpl.Add(book1, &quot;0812548051&quot;)\n            Dim book2 As BookComponent = New BookComponent(&quot;Stone of Tears&quot;, &quot;Terry Gooodkind&quot;)\n            cntrExmpl.Add(book2, &quot;0812548094&quot;)\n            Dim book3 As BookComponent = New BookComponent(&quot;Blood of the Fold&quot;, &quot;Terry Gooodkind&quot;)\n            cntrExmpl.Add(book3, &quot;0812551478&quot;)\n            Dim book4 As BookComponent = New BookComponent(&quot;The Soul of the Fire&quot;, &quot;Terry Gooodkind&quot;)\n            &#39;This will generate an exception, because the ISBN already exists in the container.\n            cntrExmpl.Add(book4, &quot;0812551478&quot;)\n        Catch e As SystemException\n            Console.WriteLine(&quot;Error description: &quot; + e.Message)\n        End Try\n\n        Dim datalist As ComponentCollection = cntrExmpl.Components\n        Dim denum As IEnumerator = datalist.GetEnumerator()\n\n        While (denum.MoveNext())\n            Dim cmp As BookComponent = CType(denum.Current, BookComponent)\n            Console.WriteLine(&quot;Book Title: &quot; + cmp.Title)\n            Console.WriteLine(&quot;Book Author: &quot; + cmp.Author)\n            Console.WriteLine(&quot;Book ISBN: &quot; + cmp.Site.Name)\n        End While\n    End Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This collection inherits from <a class=\"xref\" href=\"system.collections.readonlycollectionbase\" data-linktype=\"relative-path\">ReadOnlyCollectionBase</a>. The only way to add <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> objects to this collection is to use the class constructor.  </p>\n<p> This collection provides two indexer properties, a string indexer and an integer indexer. The string indexer property returns a component in the collection by name if the <a class=\"xref\" href=\"system.componentmodel.icomponent#System_ComponentModel_IComponent_Site_\" data-linktype=\"relative-path\">Site</a> property of a component in the collection is not <code>null</code> and the <a class=\"xref\" href=\"system.componentmodel.isite#System_ComponentModel_ISite_Name_\" data-linktype=\"relative-path\">Name</a> property of the <a class=\"xref\" href=\"system.componentmodel.icomponent#System_ComponentModel_IComponent_Site_\" data-linktype=\"relative-path\">Site</a> property of the component matches the specified string. The integer indexer property returns the <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> at the specified collection index. The <a class=\"xref\" href=\"system.componentmodel.componentcollection#System_ComponentModel_ComponentCollection_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> method copies the contents of the collection to a specified array, beginning writing to the array at the specified index.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_ComponentCollection__ctor_System_ComponentModel_IComponent___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ComponentCollection(IComponent[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.componentcollection\" data-linktype=\"relative-path\">ComponentCollection</a> class using the specified array of components.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ComponentCollection (System.ComponentModel.IComponent[] components);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>components</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> objects to initialize the collection with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method adds each <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> in the specified <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> array to the collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_ComponentCollection_Item_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item(Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> in the collection at the specified collection index.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.ComponentModel.IComponent this[int index] { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The collection index of the <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> to get.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> at the specified index.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If the specified index is not within the index range of the collection.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be overridden by a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_ComponentCollection_Item_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets any component in the collection matching the specified name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.ComponentModel.IComponent this[string name] { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> to get.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A component with a name matching the name specified by the <code>name</code> parameter, or <code>null</code> if the named component cannot be found in the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be overridden by a derived class.  </p>\n<p> This property returns an <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> in the collection if its <a class=\"xref\" href=\"system.componentmodel.icomponent#System_ComponentModel_IComponent_Site_\" data-linktype=\"relative-path\">Site</a> property is not <code>null</code> and the <a class=\"xref\" href=\"system.componentmodel.isite#System_ComponentModel_ISite_Name_\" data-linktype=\"relative-path\">Name</a> property of its <a class=\"xref\" href=\"system.componentmodel.icomponent#System_ComponentModel_IComponent_Site_\" data-linktype=\"relative-path\">Site</a> property matches the specified string.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This string indexer works only when the component is sited, which typically occurs only at design time. To site a <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> at run time, set the <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site_\" data-linktype=\"relative-path\">Site</a> property of the <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>. The <a class=\"xref\" href=\"system.componentmodel.isite#System_ComponentModel_ISite_Name_\" data-linktype=\"relative-path\">Name</a> property of the <a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a> set to the <a class=\"xref\" href=\"system.componentmodel.icomponent#System_ComponentModel_IComponent_Site_\" data-linktype=\"relative-path\">Site</a> property must also be set for this property to return the component.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_ComponentCollection_CopyTo_System_ComponentModel_IComponent___System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CopyTo(IComponent[], Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies the entire collection to an array, starting writing at the specified array index.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CopyTo (System.ComponentModel.IComponent[] array, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>array</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> array to copy the objects in the collection to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the <code>array</code> at which copying to should begin.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.ComponentCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ComponentCollection\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ComponentCollection..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ComponentCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ComponentCollection.Item\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"2f71a95e-a2cb-ad07-8567-c8dc6049be75\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a read-only container for a collection of  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.ComponentCollection\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.ComponentCollection.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.ComponentCollection","System.ComponentModel.ComponentCollection..ctor","System.ComponentModel.ComponentCollection.CopyTo","System.ComponentModel.ComponentCollection.Item"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.ComponentCollection","System::ComponentModel::ComponentCollection","System.ComponentModel.ComponentCollection.#ctor","System::ComponentModel::ComponentCollection::#ctor","System.ComponentModel.ComponentCollection.CopyTo","System::ComponentModel::ComponentCollection::CopyTo","System.ComponentModel.ComponentCollection.Item","System::ComponentModel::ComponentCollection::Item"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"2f71a95e-a2cb-ad07-8567-c8dc6049be75","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ComponentCollection.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ComponentCollection class | Microsoft Docs","_op_ogTitle":"ComponentCollection class","description":"Provides a read-only container for a collection of  objects.\n","toc_asset_id":"api/_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.ComponentCollection","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.componentcollection","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.componentcollection","fileRelativePath":"api/System.ComponentModel.ComponentCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}