{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ToolboxItemCreatorCallback</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a callback mechanism that can create a <a class=\"xref\" href=\"system.drawing.design.toolboxitem\" data-linktype=\"relative-path\">ToolboxItem</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate System.Drawing.Design.ToolboxItem ToolboxItemCreatorCallback(object serializedObject, string format);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">ToolboxItemCreatorCallback</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example provides a component that uses the <a class=\"xref\" href=\"system.drawing.design.itoolboxservice\" data-linktype=\"relative-path\">IToolboxService</a> to add a &quot;Text&quot; data format handler, or ToolboxItemCreatorCallback, to the toolbox. The data creator callback delegate passes any text data pasted to the toolbox and dragged onto a form to a custom <a class=\"xref\" href=\"system.drawing.design.toolboxitem\" data-linktype=\"relative-path\">ToolboxItem</a> that creates a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> containing the text.  </p>\n<pre><code class=\"lang-cpp\" name=\"ToolboxCreatorCallbackSample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Drawing::Design;\nusing namespace System::Windows::Forms;\nusing namespace System::Security::Permissions;\n\nnamespace TextDataTextBoxComponent\n{\n   // Custom toolbox item creates a TextBox and sets its Text property\n   // to the constructor-specified text.\n   [PermissionSetAttribute(SecurityAction::Demand, Name=&quot;FullTrust&quot;)]\n   public ref class TextToolboxItem: public ToolboxItem\n   {\n   private:\n      String^ text;\n      delegate void SetTextMethodHandler( Control^ c, String^ text );\n\n   public:\n      TextToolboxItem( String^ text )\n         : ToolboxItem()\n      {\n         this-&gt;text = text;\n      }\n\n   protected:\n\n      // ToolboxItem::CreateComponentsCore  to create the TextBox\n      // and link a method to set its Text property.\n\n      virtual array&lt;IComponent^&gt;^ CreateComponentsCore( IDesignerHost^ host ) override\n      {\n         TextBox^ textbox = dynamic_cast&lt;TextBox^&gt;(host-&gt;CreateComponent( TextBox::typeid ));\n         \n         // Because the designer resets the text of the textbox, use\n         // a SetTextMethodHandler to set the text to the value of\n         // the text data.\n         Control^ c = dynamic_cast&lt;Control^&gt;(host-&gt;RootComponent);\n         array&lt;Object^&gt;^temp0 = {textbox,text};\n         c-&gt;BeginInvoke( gcnew SetTextMethodHandler( this, &amp;TextToolboxItem::OnSetText ), temp0 );\n         array&lt;IComponent^&gt;^temp1 = {textbox};\n         return temp1;\n      }\n\n   private:\n\n      // Method to set the text property of a TextBox after it is initialized.\n      void OnSetText( Control^ c, String^ text )\n      {\n         c-&gt;Text = text;\n      }\n\n   };\n\n\n   // Component that adds a &quot;Text&quot; data format ToolboxItemCreatorCallback \n    // to the Toolbox. This component uses a custom ToolboxItem that \n    // creates a TextBox containing the text data.\n   public ref class TextDataTextBoxComponent: public Component\n   {\n   private:\n      bool creatorAdded;\n      IToolboxService^ ts;\n\n   public:\n      TextDataTextBoxComponent()\n      {\n         creatorAdded = false;\n      }\n\n\n      property System::ComponentModel::ISite^ Site \n      {\n         // ISite to register TextBox creator\n         virtual System::ComponentModel::ISite^ get() override\n         {\n            return __super::Site;\n         }\n\n         virtual void set( System::ComponentModel::ISite^ value ) override\n         {\n            if ( value != nullptr )\n            {\n               __super::Site = value;\n               if (  !creatorAdded )\n                              AddTextTextBoxCreator();\n            }\n            else\n            {\n               if ( creatorAdded )\n                              RemoveTextTextBoxCreator();\n               __super::Site = value;\n            }\n         }\n      }\n\n   private:\n\n      // Adds a &quot;Text&quot; data format creator to the toolbox that creates\n      // a textbox from a text fragment pasted to the toolbox.\n      void AddTextTextBoxCreator()\n      {\n         ts = dynamic_cast&lt;IToolboxService^&gt;(GetService( IToolboxService::typeid ));\n         if ( ts != nullptr )\n         {\n            ToolboxItemCreatorCallback^ textCreator = \n\t\t\t\tgcnew ToolboxItemCreatorCallback( \n\t\t\t\tthis, \n\t\t\t\t&amp;TextDataTextBoxComponent::CreateTextBoxForText );\n            try\n            {\n               ts-&gt;AddCreator( \n\t\t\t\t   textCreator, \n\t\t\t\t   &quot;Text&quot;, \n\t\t\t\t   dynamic_cast&lt;IDesignerHost^&gt;(GetService( IDesignerHost::typeid )) );\n               creatorAdded = true;\n            }\n            catch ( Exception^ ex ) \n            {\n               MessageBox::Show( ex-&gt;ToString(), &quot;Exception Information&quot; );\n            }\n         }\n      }\n\n\n      // Removes any &quot;Text&quot; data format creator from the toolbox.\n      void RemoveTextTextBoxCreator()\n      {\n         if ( ts != nullptr )\n         {\n            ts-&gt;RemoveCreator( \n\t\t\t\t&quot;Text&quot;, \n\t\t\t\tdynamic_cast&lt;IDesignerHost^&gt;(GetService( IDesignerHost::typeid )) );\n            creatorAdded = false;\n         }\n      }\n\n\n      // ToolboxItemCreatorCallback delegate format method to create\n      // the toolbox item.\n      ToolboxItem^ CreateTextBoxForText( Object^ serializedObject, String^ format )\n      {\n\t\tIDataObject^ o = gcnew DataObject(dynamic_cast&lt;IDataObject^&gt;(serializedObject));\n\n\t\tif( o-&gt;GetDataPresent(&quot;System::String&quot;, true) )\n\t\t{\n\t\t\tString^ toolboxText = dynamic_cast&lt;String^&gt;(o-&gt;GetData( &quot;System::String&quot;, true ));\n\t\t   return( gcnew TextToolboxItem( toolboxText ));\n\t\t}\n\n\t\treturn nullptr;\n\t  }\n\n   public:\n      ~TextDataTextBoxComponent()\n      {\n         if ( creatorAdded )\n                  RemoveTextTextBoxCreator();\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ToolboxCreatorCallbackSample#1\">Imports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Drawing.Design\nImports System.Security.Permissions\nImports System.Windows.Forms\n\n&#39; Component that adds a &quot;Text&quot; data format ToolboxItemCreatorCallback \n&#39; to the Toolbox. This component uses a custom ToolboxItem that \n&#39; creates a TextBox containing the text data.\n&lt;PermissionSetAttribute(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class TextDataTextBoxComponent\n    Inherits System.ComponentModel.Component\n\n    Private creatorAdded As Boolean = False\n    Private ts As IToolboxService\n\n    Public Sub New()\n    End Sub\n\n    &#39; ISite override to register TextBox creator\n    Public Overrides Property Site() As System.ComponentModel.ISite\n        Get\n            Return MyBase.Site\n        End Get\n        Set(ByVal Value As System.ComponentModel.ISite)\n            If (Value IsNot Nothing) Then\n                MyBase.Site = Value\n                If Not creatorAdded Then\n                    AddTextTextBoxCreator()\n                End If\n            Else\n                If creatorAdded Then\n                    RemoveTextTextBoxCreator()\n                End If\n                MyBase.Site = Value\n            End If\n        End Set\n    End Property\n\n    &#39; Adds a &quot;Text&quot; data format creator to the toolbox that creates \n    &#39; a textbox from a text fragment pasted to the toolbox.\n    Private Sub AddTextTextBoxCreator()\n        ts = CType(GetService(GetType(IToolboxService)), IToolboxService)\n        If (ts IsNot Nothing) Then\n            Dim textCreator As _\n            New ToolboxItemCreatorCallback(AddressOf Me.CreateTextBoxForText)\n            Try\n                ts.AddCreator( _\n                textCreator, _\n                &quot;Text&quot;, _\n                CType(GetService(GetType(IDesignerHost)), IDesignerHost))\n\n                creatorAdded = True\n            Catch ex As Exception\n                MessageBox.Show(ex.ToString(), &quot;Exception Information&quot;)\n            End Try\n        End If\n    End Sub\n\n    &#39; Removes any &quot;Text&quot; data format creator from the toolbox.\n    Private Sub RemoveTextTextBoxCreator()\n        If (ts IsNot Nothing) Then\n            ts.RemoveCreator( _\n            &quot;Text&quot;, _\n            CType(GetService(GetType(IDesignerHost)), IDesignerHost))\n            creatorAdded = False\n        End If\n    End Sub\n\n    &#39; ToolboxItemCreatorCallback delegate format method to create \n    &#39; the toolbox item.\n    Private Function CreateTextBoxForText( _\n    ByVal serializedObject As Object, _\n    ByVal format As String) As ToolboxItem\n\n        Dim o As New DataObject(CType(serializedObject, IDataObject))\n\n        Dim formats As String() = o.GetFormats()\n\n        If o.GetDataPresent(&quot;System.String&quot;, True) Then\n\n            Return New TextToolboxItem(CStr(o.GetData(&quot;System.String&quot;, True)))\n\n        End If\n\n        Return Nothing\n    End Function\n\n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If creatorAdded Then\n            RemoveTextTextBoxCreator()\n        End If\n    End Sub\n\nEnd Class\n\n&#39; Custom toolbox item creates a TextBox and sets its Text property\n&#39; to the constructor-specified text.\n&lt;PermissionSetAttribute(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class TextToolboxItem\n    Inherits System.Drawing.Design.ToolboxItem\n\n    Private [text] As String\n\n    Delegate Sub SetTextMethodHandler( _\n    ByVal c As Control, _\n    ByVal [text] As String)\n\n    Public Sub New(ByVal [text] As String)\n        Me.text = [text]\n    End Sub\n\n    &#39; ToolboxItem.CreateComponentsCore override to create the TextBox \n    &#39; and link a method to set its Text property.\n    &lt;PermissionSetAttribute(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n    Protected Overrides Function CreateComponentsCore(ByVal host As IDesignerHost) As IComponent()\n        Dim textbox As TextBox = CType(host.CreateComponent(GetType(TextBox)), TextBox)\n\n        &#39; Because the designer resets the text of the textbox, use \n        &#39; a SetTextMethodHandler to set the text to the value of \n        &#39; the text data.\n        Dim c As Control = host.RootComponent\n\n        c.BeginInvoke( _\n        New SetTextMethodHandler(AddressOf OnSetText), _\n        New Object() {textbox, [text]})\n\n        Return New System.ComponentModel.IComponent() {textbox}\n    End Function\n\n    &#39; Method to set the text property of a TextBox after it is initialized.\n    Private Sub OnSetText(ByVal c As Control, ByVal [text] As String)\n        c.Text = [text]\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"ToolboxCreatorCallbackSample#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Drawing.Design;\nusing System.Security.Permissions;\nusing System.Windows.Forms;\n\nnamespace TextDataTextBoxComponent\n{\n    // Component that adds a &quot;Text&quot; data format ToolboxItemCreatorCallback \n    // to the Toolbox. This component uses a custom ToolboxItem that \n    // creates a TextBox containing the text data.\n    [PermissionSet(SecurityAction.Demand, Name = &quot;FullTrust&quot;)]\n    public class TextDataTextBoxComponent : Component\n    {\n        private bool creatorAdded = false;\n        private IToolboxService ts;\n\n        public TextDataTextBoxComponent()\n        {                     \n        }\n\n        // ISite override to register TextBox creator\n        public override System.ComponentModel.ISite Site\n        {\n            get\n            {\n                return base.Site;\n            }\n            set\n            {\n                if( value != null )\n                {                    \n                    base.Site = value;\n\n                    if (!creatorAdded)\n                    {\n                        AddTextTextBoxCreator();\n                    }\n                }\n                else\n                {\n                    if (creatorAdded)\n                    {\n                        RemoveTextTextBoxCreator();\n                    }\n\n                    base.Site = value;             \n                }\n            }\n        }\n\n        // Adds a &quot;Text&quot; data format creator to the toolbox that creates \n        // a textbox from a text fragment pasted to the toolbox.\n        private void AddTextTextBoxCreator()\n        {\n            ts = (IToolboxService)GetService(typeof(IToolboxService));\n\n            if (ts != null) \n            {\n                ToolboxItemCreatorCallback textCreator = \n                    new ToolboxItemCreatorCallback(this.CreateTextBoxForText);\n\n                try\n                {\n                    ts.AddCreator(\n                        textCreator, \n                        &quot;Text&quot;, \n                        (IDesignerHost)GetService(typeof(IDesignerHost)));\n\n                    creatorAdded = true;\n                }\n                catch(Exception ex)\n                {\n                    MessageBox.Show(\n                        ex.ToString(), \n                        &quot;Exception Information&quot;);\n                }                \n            }\n        }\n\n        // Removes any &quot;Text&quot; data format creator from the toolbox.\n        private void RemoveTextTextBoxCreator()\n        {\n            if (ts != null)             \n            {\n                ts.RemoveCreator(\n                    &quot;Text&quot;, \n                    (IDesignerHost)GetService(typeof(IDesignerHost)));            \n\n                creatorAdded = false;\n            }\n        }\n\n        // ToolboxItemCreatorCallback delegate format method to create \n        // the toolbox item.\n        private ToolboxItem CreateTextBoxForText(\n            object serializedObject, \n            string format)\n        {\n            DataObject o = new DataObject((IDataObject)serializedObject);\n\n            string[] formats = o.GetFormats();\n\n            if (o.GetDataPresent(&quot;System.String&quot;, true))\n            {\n                string toolboxText = (string)(o.GetData(&quot;System.String&quot;, true));\n                return (new TextToolboxItem(toolboxText));\n            }\n\n            return null;\n        }\n\n        protected override void Dispose(bool disposing)\n        {\n            if (creatorAdded)\n            {\n                RemoveTextTextBoxCreator();\n            }\n        }        \n    }\n\n    // Custom toolbox item creates a TextBox and sets its Text property\n    // to the constructor-specified text.\n    [PermissionSet(SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class TextToolboxItem : ToolboxItem\n    {\n        private string text;\n        private delegate void SetTextMethodHandler(Control c, string text);\n\n        public TextToolboxItem(string text) : base()\n        {\n            this.text = text;\n        }\n\n        // ToolboxItem.CreateComponentsCore override to create the TextBox \n        // and link a method to set its Text property.\n        [PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \n        protected override IComponent[] CreateComponentsCore(IDesignerHost host)\n        {\n            System.Windows.Forms.TextBox textbox = \n                (TextBox)host.CreateComponent(typeof(TextBox));\n                \n            // Because the designer resets the text of the textbox, use \n            // a SetTextMethodHandler to set the text to the value of \n            // the text data.\n            Control c = host.RootComponent as Control;\n            c.BeginInvoke(\n                new SetTextMethodHandler(OnSetText), \n                new object[] {textbox, text});\n           \n            return new System.ComponentModel.IComponent[] { textbox };\n        }        \n\n        // Method to set the text property of a TextBox after it is initialized.\n        private void OnSetText(Control c, string text) \n        {\n            c.Text = text;\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>You can implement a toolbox item creator method with a method signature matching the method signature of this delegate type that creates a toolbox item from any object of a particular clipboard data format placed on the toolbox. For example, you can design a toolbox item creator that creates a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> to store text pasted to the toolbox from the clipboard. You can use the <a class=\"xref\" href=\"system.drawing.design.itoolboxservice#System_Drawing_Design_IToolboxService_AddCreator_\" data-linktype=\"relative-path\">AddCreator</a> method of the <a class=\"xref\" href=\"system.drawing.design.itoolboxservice\" data-linktype=\"relative-path\">IToolboxService</a> to add a ToolboxItemCreatorCallback event handler for a particular data type to the toolbox. The <code>serializedObject</code> parameter contains the data object.  </p>\n<p> When you create a ToolboxItemCreatorCallback delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.Design.ToolboxItemCreatorCallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.ToolboxItemCreatorCallback\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.ToolboxItemCreatorCallback..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.ToolboxItemCreatorCallback.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.ToolboxItemCreatorCallback.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.ToolboxItemCreatorCallback.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"e8f4cdf3-06b2-2d25-4465-ca0c03de34f9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a callback mechanism that can create a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.drawing.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Design.ToolboxItemCreatorCallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.Design.ToolboxItemCreatorCallback.yml","open_to_public_contributors":false,"api_name":["System.Drawing.Design.ToolboxItemCreatorCallback","System.Drawing.Design.ToolboxItemCreatorCallback..ctor","System.Drawing.Design.ToolboxItemCreatorCallback.Invoke","System.Drawing.Design.ToolboxItemCreatorCallback.BeginInvoke","System.Drawing.Design.ToolboxItemCreatorCallback.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Design.ToolboxItemCreatorCallback","System::Drawing::Design::ToolboxItemCreatorCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"e8f4cdf3-06b2-2d25-4465-ca0c03de34f9","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Drawing.Design/ToolboxItemCreatorCallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ToolboxItemCreatorCallback delegate | Microsoft Docs","_op_ogTitle":"ToolboxItemCreatorCallback delegate","description":"Provides a callback mechanism that can create a .\n","toc_asset_id":"api/_splitted/System.Drawing.Design/toc.json","toc_rel":"_splitted/System.Drawing.Design/toc.json","source_url":"","ms.assetid":"System.Drawing.Design.ToolboxItemCreatorCallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.design.toolboxitemcreatorcallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.design.toolboxitemcreatorcallback","fileRelativePath":"api/System.Drawing.Design.ToolboxItemCreatorCallback.html"},"themesRelativePathToOutputRoot":"_themes/"}