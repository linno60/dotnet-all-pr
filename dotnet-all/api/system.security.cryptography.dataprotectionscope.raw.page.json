{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataProtectionScope</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the scope of the data protection to be applied by the <span class=\"xref\">stem.Security.Cryptography.ProtectedData.Protect*</span> method.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum DataProtectionScope</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">DataProtectionScope</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to use data protection.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.DataProtectionSample#1\">using System;\nusing System.Security.Cryptography;\n\npublic class DataProtectionSample\n{\n// Create byte array for additional entropy when using Protect method.\n\tstatic byte [] s_aditionalEntropy = { 9, 8, 7, 6, 5 };\n\n\tpublic static void Main()\n\t{\n// Create a simple byte array containing data to be encrypted.\n\t\t\nbyte [] secret = { 0, 1, 2, 3, 4, 1, 2, 3, 4 };\n\n//Encrypt the data.\n\t\tbyte [] encryptedSecret = Protect( secret );\n\t\tConsole.WriteLine(&quot;The encrypted byte array is:&quot;);\n\t\tPrintValues(encryptedSecret);\n\t\t\n// Decrypt the data and store in a byte array.\n\t\tbyte [] originalData = Unprotect( encryptedSecret );\n\t\tConsole.WriteLine(&quot;{0}The original data is:&quot;, Environment.NewLine);\n\t\tPrintValues(originalData);\n\n\t}\n\n\tpublic static byte [] Protect( byte [] data )\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n\t\t\t//  only by the same current user.\n\t\t\treturn ProtectedData.Protect( data, s_aditionalEntropy, DataProtectionScope.CurrentUser );\n\t\t} \n\t\tcatch (CryptographicException e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Data was not encrypted. An error occurred.&quot;);\n\t\t\tConsole.WriteLine(e.ToString());\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static byte [] Unprotect( byte [] data )\n\t{\n\t\ttry\n\t\t{\n\t\t\t//Decrypt the data using DataProtectionScope.CurrentUser.\n\t\t\treturn ProtectedData.Unprotect( data, s_aditionalEntropy, DataProtectionScope.CurrentUser );\n\t\t} \n\t\tcatch (CryptographicException e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Data was not decrypted. An error occurred.&quot;);\n\t\t\tConsole.WriteLine(e.ToString());\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static void PrintValues( Byte[] myArr )  \n\t{\n\t      foreach ( Byte i in myArr )  \n\t\t  \t{\n\t\t         Console.Write( &quot;\\t{0}&quot;, i );\n\t\t\t }\n      Console.WriteLine();\n\t }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.DataProtectionSample#1\">#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\n\npublic ref class DataProtectionSample\n{\nprivate:\n\n   // Create byte array for additional entropy when using Protect method.\n   static array&lt;Byte&gt;^s_aditionalEntropy = {9,8,7,6,5};\n\npublic:\n   static void Main()\n   {\n      \n      // Create a simple byte array containing data to be encrypted.\n      array&lt;Byte&gt;^secret = {0,1,2,3,4,1,2,3,4};\n      \n      //Encrypt the data.\n      array&lt;Byte&gt;^encryptedSecret = Protect( secret );\n      Console::WriteLine( &quot;The encrypted byte array is:&quot; );\n      PrintValues( encryptedSecret );\n      \n      // Decrypt the data and store in a byte array.\n      array&lt;Byte&gt;^originalData = Unprotect( encryptedSecret );\n      Console::WriteLine( &quot;{0}The original data is:&quot;, Environment::NewLine );\n      PrintValues( originalData );\n   }\n\n   static array&lt;Byte&gt;^ Protect( array&lt;Byte&gt;^data )\n   {\n      try\n      {\n         \n         // Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n         //  only by the same current user.\n         return ProtectedData::Protect( data, s_aditionalEntropy, DataProtectionScope::CurrentUser );\n      }\n      catch ( CryptographicException^ e ) \n      {\n         Console::WriteLine( &quot;Data was not encrypted. An error occurred.&quot; );\n         Console::WriteLine( e );\n         return nullptr;\n      }\n   }\n\n   static array&lt;Byte&gt;^ Unprotect( array&lt;Byte&gt;^data )\n   {\n      try\n      {\n         \n         //Decrypt the data using DataProtectionScope.CurrentUser.\n         return ProtectedData::Unprotect( data, s_aditionalEntropy, DataProtectionScope::CurrentUser );\n      }\n      catch ( CryptographicException^ e ) \n      {\n         Console::WriteLine( &quot;Data was not decrypted. An error occurred.&quot; );\n         Console::WriteLine( e );\n         return nullptr;\n      }\n   }\n\n   static void PrintValues( array&lt;Byte&gt;^myArr )\n   {\n      System::Collections::IEnumerator^ myEnum = myArr-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         Byte i = safe_cast&lt;Byte&gt;(myEnum-&gt;Current);\n         Console::Write( &quot;\\t{0}&quot;, i );\n      }\n\n      Console::WriteLine();\n   }\n};\n\nint main()\n{\n   DataProtectionSample::Main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.DataProtectionSample#1\">Imports System\nImports System.Security.Cryptography\n\n\n\nPublic Class DataProtectionSample\n    &#39; Create byte array for additional entropy when using Protect method.\n    Private Shared s_aditionalEntropy As Byte() = {9, 8, 7, 6, 5}\n\n\n    Public Shared Sub Main()\n        &#39; Create a simple byte array containing data to be encrypted.\n        Dim secret As Byte() = {0, 1, 2, 3, 4, 1, 2, 3, 4}\n\n        &#39;Encrypt the data.\n        Dim encryptedSecret As Byte() = Protect(secret)\n        Console.WriteLine(&quot;The encrypted byte array is:&quot;)\n        PrintValues(encryptedSecret)\n\n        &#39; Decrypt the data and store in a byte array.\n        Dim originalData As Byte() = Unprotect(encryptedSecret)\n        Console.WriteLine(&quot;{0}The original data is:&quot;, Environment.NewLine)\n        PrintValues(originalData)\n\n    End Sub\n\n\n    Public Shared Function Protect(ByVal data() As Byte) As Byte()\n        Try\n            &#39; Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n            &#39;  only by the same current user.\n            Return ProtectedData.Protect(data, s_aditionalEntropy, DataProtectionScope.CurrentUser)\n        Catch e As CryptographicException\n            Console.WriteLine(&quot;Data was not encrypted. An error occurred.&quot;)\n            Console.WriteLine(e.ToString())\n            Return Nothing\n        End Try\n\n    End Function\n\n\n    Public Shared Function Unprotect(ByVal data() As Byte) As Byte()\n        Try\n            &#39;Decrypt the data using DataProtectionScope.CurrentUser.\n            Return ProtectedData.Unprotect(data, s_aditionalEntropy, DataProtectionScope.CurrentUser)\n        Catch e As CryptographicException\n            Console.WriteLine(&quot;Data was not decrypted. An error occurred.&quot;)\n            Console.WriteLine(e.ToString())\n            Return Nothing\n        End Try\n\n    End Function\n\n\n    Public Shared Sub PrintValues(ByVal myArr() As [Byte])\n        Dim i As [Byte]\n        For Each i In myArr\n            Console.Write(vbTab + &quot;{0}&quot;, i)\n        Next i\n        Console.WriteLine()\n\n    End Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This enumeration is used with the <a class=\"xref\" href=\"system.security.cryptography.protecteddata#System_Security_Cryptography_ProtectedData_Protect_\" data-linktype=\"relative-path\">Protect</a> and <a class=\"xref\" href=\"system.security.cryptography.protecteddata#System_Security_Cryptography_ProtectedData_Unprotect_\" data-linktype=\"relative-path\">Unprotect</a> methods to protect data through encryption.  </p>\n<p> <strong>Caution</strong> The LocalMachine enumeration value allows multiple accounts to unprotect data.  Use this value only when you trust every account on a computer.  For most situations, you should use the CurrentUser value.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Security_Cryptography_DataProtectionScope_CurrentUser\">\r\n      \t\t\t<span class=\"lang-csharp\">CurrentUser</span>\r\n      \t</td>\r\n      \t<td><p>The protected data is associated with the current user. Only threads running under the current user context can unprotect the data.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_DataProtectionScope_LocalMachine\">\r\n      \t\t\t<span class=\"lang-csharp\">LocalMachine</span>\r\n      \t</td>\r\n      \t<td><p>The protected data is associated with the machine context. Any process running on the computer can unprotect data. This enumeration value is usually used in server-specific applications that run on a server where untrusted users are not allowed access.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.DataProtectionScope.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DataProtectionScope\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DataProtectionScope.CurrentUser\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DataProtectionScope.LocalMachine\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"c58f3730-1b79-c7d9-add4-10c8223c1cc5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the scope of the data protection to be applied by the  method.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.DataProtectionScope\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.DataProtectionScope.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.DataProtectionScope","System.Security.Cryptography.DataProtectionScope.CurrentUser","System.Security.Cryptography.DataProtectionScope.LocalMachine"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.DataProtectionScope","System::Security::Cryptography::DataProtectionScope","System.Security.Cryptography.DataProtectionScope.CurrentUser","System::Security::Cryptography::DataProtectionScope::CurrentUser","System.Security.Cryptography.DataProtectionScope.LocalMachine","System::Security::Cryptography::DataProtectionScope::LocalMachine"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"c58f3730-1b79-c7d9-add4-10c8223c1cc5","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography/DataProtectionScope.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataProtectionScope enum | Microsoft Docs","_op_ogTitle":"DataProtectionScope enum","description":"Specifies the scope of the data protection to be applied by the  method.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.DataProtectionScope","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.dataprotectionscope","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.dataprotectionscope","fileRelativePath":"api/System.Security.Cryptography.DataProtectionScope.html"},"themesRelativePathToOutputRoot":"_themes/"}