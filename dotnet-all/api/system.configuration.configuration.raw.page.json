{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Configuration</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class Configuration</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">Configuration</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use the Configuration class to access configuration file elements.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.Configuration#31\">Imports System.Text\nImports System.Configuration\nImports System.Globalization\nImports System.ComponentModel\nImports System.Collections.Specialized\n\n&#39; Before compiling this application, \n&#39; remember to reference the System.Configuration assembly in your project. \n#Region &quot;CustomSection class&quot;\n\n&#39; Define a custom section. This class is used to\n&#39; populate the configuration file.\n&#39; It creates the following custom section:\n&#39;  &lt;CustomSection name=&quot;Contoso&quot; url=&quot;http://www.contoso.com&quot; port=&quot;8080&quot; /&gt;.\nPublic NotInheritable Class CustomSection\n    Inherits ConfigurationSection\n\n    Public Sub New()\n\n    End Sub\n\n\n    &lt;ConfigurationProperty(&quot;name&quot;, DefaultValue:=&quot;Contoso&quot;, IsRequired:=True, IsKey:=True)&gt; _\n    Public Property Name() As String\n        Get\n            Return CStr(Me(&quot;name&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;name&quot;) = value\n        End Set\n    End Property\n\n    &lt;ConfigurationProperty(&quot;url&quot;, DefaultValue:=&quot;http://www.contoso.com&quot;, IsRequired:=True), RegexStringValidator(&quot;\\w+:\\/\\/[\\w.]+\\S*&quot;)&gt; _\n    Public Property Url() As String\n        Get\n            Return CStr(Me(&quot;url&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;url&quot;) = value\n        End Set\n    End Property\n\n    &lt;ConfigurationProperty(&quot;port&quot;, DefaultValue:=CInt(8080), IsRequired:=False), IntegerValidator(MinValue:=0, MaxValue:=8080, ExcludeRange:=False)&gt; _\n    Public Property Port() As Integer\n        Get\n            Return CInt(Fix(Me(&quot;port&quot;)))\n        End Get\n        Set(ByVal value As Integer)\n            Me(&quot;port&quot;) = value\n        End Set\n    End Property\n\n\n\nEnd Class\n\n#End Region\n\n#Region &quot;Using Configuration Class&quot;\nFriend Class UsingConfigurationClass\n\n    &#39; Show how to create an instance of the Configuration class\n    &#39; that represents this application configuration file.  \n    Public Shared Sub CreateConfigurationFile()\n        Try\n\n            &#39; Create a custom configuration section.\n            Dim customSection As New CustomSection()\n\n            &#39; Get the current configuration file.\n            Dim config As System.Configuration.Configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)\n\n            &#39; Create the section entry  \n            &#39; in &lt;configSections&gt; and the \n            &#39; related target section in &lt;configuration&gt;.\n            If config.Sections(&quot;CustomSection&quot;) Is Nothing Then\n                config.Sections.Add(&quot;CustomSection&quot;, customSection)\n            End If\n\n            &#39; Create and add an entry to appSettings section.\n\n            Dim conStringname As String = &quot;LocalSqlServer&quot;\n            Dim conString As String = &quot;data source=.\\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true&quot;\n            Dim providerName As String = &quot;System.Data.SqlClient&quot;\n\n            Dim connStrSettings As New ConnectionStringSettings()\n            connStrSettings.Name = conStringname\n            connStrSettings.ConnectionString = conString\n            connStrSettings.ProviderName = providerName\n\n            config.ConnectionStrings.ConnectionStrings.Add(connStrSettings)\n\n            &#39; Add an entry to appSettings section.\n            Dim appStgCnt As Integer = ConfigurationManager.AppSettings.Count\n            Dim newKey As String = &quot;NewKey&quot; &amp; appStgCnt.ToString()\n\n            Dim newValue As String = Date.Now.ToLongDateString() &amp; &quot; &quot; &amp; Date.Now.ToLongTimeString()\n\n            config.AppSettings.Settings.Add(newKey, newValue)\n\n            &#39; Save the configuration file.\n            customSection.SectionInformation.ForceSave = True\n            config.Save(ConfigurationSaveMode.Full)\n\n            Console.WriteLine(&quot;Created configuration file: {0}&quot;, config.FilePath)\n\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;CreateConfigurationFile: {0}&quot;, err.ToString())\n        End Try\n\n    End Sub\n\n    &#39; Show how to use the GetSection(string) method.\n    Public Shared Sub GetCustomSection()\n        Try\n\n            Dim customSection As CustomSection\n\n            &#39; Get the current configuration file.\n            Dim config As System.Configuration.Configuration = TryCast(ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None), Configuration)\n\n            customSection = TryCast(config.GetSection(&quot;CustomSection&quot;), CustomSection)\n\n            Console.WriteLine(&quot;Section name: {0}&quot;, customSection.Name)\n            Console.WriteLine(&quot;Url: {0}&quot;, customSection.Url)\n            Console.WriteLine(&quot;Port: {0}&quot;, customSection.Port)\n\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;Using GetSection(string): {0}&quot;, err.ToString())\n        End Try\n\n    End Sub\n\n\n    &#39; Show how to use different modalities to save \n    &#39; a configuration file.\n    Public Shared Sub SaveConfigurationFile()\n        Try\n\n            &#39; Get the current configuration file.\n            Dim config As System.Configuration.Configuration = TryCast(ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None), Configuration)\n\n            &#39; Save the full configuration file and force save even if the file was not modified.\n            config.SaveAs(&quot;MyConfigFull.config&quot;, ConfigurationSaveMode.Full, True)\n            Console.WriteLine(&quot;Saved config file as MyConfigFull.config using the mode: {0}&quot;, ConfigurationSaveMode.Full.ToString())\n\n            config = TryCast(ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None), Configuration)\n\n            &#39; Save only the part of the configuration file that was modified. \n            config.SaveAs(&quot;MyConfigModified.config&quot;, ConfigurationSaveMode.Modified, True)\n            Console.WriteLine(&quot;Saved config file as MyConfigModified.config using the mode: {0}&quot;, ConfigurationSaveMode.Modified.ToString())\n\n            config = TryCast(ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None), Configuration)\n\n            &#39; Save the full configuration file.\n            config.SaveAs(&quot;MyConfigMinimal.config&quot;)\n            Console.WriteLine(&quot;Saved config file as MyConfigMinimal.config using the mode: {0}&quot;, ConfigurationSaveMode.Minimal.ToString())\n\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;SaveConfigurationFile: {0}&quot;, err.ToString())\n        End Try\n\n    End Sub\n\n\n    &#39; Show how use the AppSettings and ConnectionStrings \n    &#39; properties.\n    Public Shared Sub GetSections(ByVal section As String)\n        Try\n\n            &#39; Get the current configuration file.\n            Dim config As System.Configuration.Configuration = TryCast(ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None), Configuration)\n\n            &#39; Get the selected section.\n            Select Case section\n                Case &quot;appSettings&quot;\n                    Try\n                        Dim appSettings As AppSettingsSection = TryCast(config.AppSettings, AppSettingsSection)\n                        Console.WriteLine(&quot;Section name: {0}&quot;, appSettings.SectionInformation.SectionName)\n\n                        &#39; Get the AppSettings section elements.\n                        Console.WriteLine()\n                        Console.WriteLine(&quot;Using AppSettings property.&quot;)\n                        Console.WriteLine(&quot;Application settings:&quot;)\n                        &#39; Get the KeyValueConfigurationCollection \n                        &#39; from the configuration.\n                        Dim settings As KeyValueConfigurationCollection = config.AppSettings.Settings\n\n                        &#39; Display each KeyValueConfigurationElement.\n                        For Each keyValueElement As KeyValueConfigurationElement In settings\n                            Console.WriteLine(&quot;Key: {0}&quot;, keyValueElement.Key)\n                            Console.WriteLine(&quot;Value: {0}&quot;, keyValueElement.Value)\n                            Console.WriteLine()\n                        Next keyValueElement\n                    Catch e As ConfigurationErrorsException\n                        Console.WriteLine(&quot;Using AppSettings property: {0}&quot;, e.ToString())\n                    End Try\n\n                Case &quot;connectionStrings&quot;\n                    Dim conStrSection As ConnectionStringsSection = TryCast(config.ConnectionStrings, ConnectionStringsSection)\n                    Console.WriteLine(&quot;Section name: {0}&quot;, conStrSection.SectionInformation.SectionName)\n\n                    Try\n                        If conStrSection.ConnectionStrings.Count &lt;&gt; 0 Then\n                            Console.WriteLine()\n                            Console.WriteLine(&quot;Using ConnectionStrings property.&quot;)\n                            Console.WriteLine(&quot;Connection strings:&quot;)\n\n                            &#39; Get the collection elements.\n                            For Each connection As ConnectionStringSettings In conStrSection.ConnectionStrings\n                                Dim name As String = connection.Name\n                                Dim provider As String = connection.ProviderName\n                                Dim connectionString As String = connection.ConnectionString\n\n                                Console.WriteLine(&quot;Name:               {0}&quot;, name)\n                                Console.WriteLine(&quot;Connection string:  {0}&quot;, connectionString)\n                                Console.WriteLine(&quot;Provider:            {0}&quot;, provider)\n                            Next connection\n                        End If\n                    Catch e As ConfigurationErrorsException\n                        Console.WriteLine(&quot;Using ConnectionStrings property: {0}&quot;, e.ToString())\n                    End Try\n\n                Case Else\n                    Console.WriteLine(&quot;GetSections: Unknown section (0)&quot;, section)\n            End Select\n\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;GetSections: (0)&quot;, err.ToString())\n        End Try\n\n    End Sub\n\n    &#39; Show how to use the Configuration object properties \n    &#39; to obtain configuration file information.\n    Public Shared Sub GetConfigurationInformation()\n        Try\n\n            &#39; Get the current configuration file.\n            Dim config As System.Configuration.Configuration = TryCast(ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None), Configuration)\n\n            Console.WriteLine(&quot;Reading configuration information:&quot;)\n\n            Dim evalContext As ContextInformation = TryCast(config.EvaluationContext, ContextInformation)\n            Console.WriteLine(&quot;Machine level: {0}&quot;, evalContext.IsMachineLevel.ToString())\n\n            Dim filePath As String = config.FilePath\n            Console.WriteLine(&quot;File path: {0}&quot;, filePath)\n\n            Dim hasFile As Boolean = config.HasFile\n            Console.WriteLine(&quot;Has file: {0}&quot;, hasFile.ToString())\n\n\n            Dim groups As ConfigurationSectionGroupCollection = config.SectionGroups\n            Console.WriteLine(&quot;Groups: {0}&quot;, groups.Count.ToString())\n            For Each group As ConfigurationSectionGroup In groups\n                Console.WriteLine(&quot;Group Name: {0}&quot;, group.Name)\n                &#39; Console.WriteLine(&quot;Group Type: {0}&quot;, group.Type);\n            Next group\n\n\n            Dim sections As ConfigurationSectionCollection = config.Sections\n            Console.WriteLine(&quot;Sections: {0}&quot;, sections.Count.ToString())\n\n\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;GetConfigurationInformation: {0}&quot;, err.ToString())\n        End Try\n\n    End Sub\nEnd Class\n\n#End Region\n\n#Region &quot;Application Main&quot;\n&#39;*** User Interaction Class ***//\n\n&#39; Obtain user&#39;s input and provide feedback.\n&#39; This class contains the application Main() function.\n&#39; It calls the ConfigurationManager methods based \n&#39; on the user&#39;s selection.\nPublic Class ApplicationMain\n    &#39; Display user&#39;s menu.\n    Public Shared Sub UserMenu()\n        Dim applicationName As String = Environment.GetCommandLineArgs()(0) &amp; &quot;.exe&quot;\n        Dim buffer As New StringBuilder()\n\n        buffer.AppendLine(&quot;Application: &quot; &amp; applicationName)\n        buffer.AppendLine(&quot;Please, make your selection.&quot;)\n        buffer.AppendLine(&quot;?    -- Display help.&quot;)\n        buffer.AppendLine(&quot;Q,q  -- Exit the application.&quot;)\n\n        buffer.Append(&quot;1    -- Instantiate the&quot;)\n        buffer.AppendLine(&quot; Configuration class.&quot;)\n\n        buffer.Append(&quot;2    -- Use GetSection(string) to read &quot;)\n        buffer.AppendLine(&quot; a custom section.&quot;)\n\n        buffer.Append(&quot;3    -- Use SaveAs methods&quot;)\n        buffer.AppendLine(&quot; to save the configuration file.&quot;)\n\n        buffer.Append(&quot;4    -- Use AppSettings property to read&quot;)\n        buffer.AppendLine(&quot; the appSettings section.&quot;)\n        buffer.Append(&quot;5    -- Use ConnectionStrings property to read&quot;)\n        buffer.AppendLine(&quot; the connectionStrings section.&quot;)\n\n        buffer.Append(&quot;6    -- Use Configuration class properties&quot;)\n        buffer.AppendLine(&quot; to obtain configuration information.&quot;)\n\n        Console.Write(buffer.ToString())\n    End Sub\n\n    &#39; Obtain user&#39;s input and provide\n    &#39; feedback.\n    Shared Sub Main(ByVal args() As String)\n        &#39; Define user selection string.\n        Dim selection As String\n\n        &#39; Get the name of the application.\n        Dim appName As String = Environment.GetCommandLineArgs()(0)\n\n\n        &#39; Get user selection.\n        Do\n\n            UserMenu()\n            Console.Write(&quot;&gt; &quot;)\n            selection = Console.ReadLine()\n            If selection &lt;&gt; String.Empty Then\n                Exit Do\n            End If\n        Loop\n\n        Do While selection.ToLower() &lt;&gt; &quot;q&quot;\n            &#39; Process user&#39;s input.\n            Select Case selection\n                Case &quot;1&quot;\n                    &#39; Show how to create an instance of the Configuration class.\n                    UsingConfigurationClass.CreateConfigurationFile()\n\n                Case &quot;2&quot;\n                    &#39; Show how to use GetSection(string) method.\n                    UsingConfigurationClass.GetCustomSection()\n\n                Case &quot;3&quot;\n                    &#39; Show how to use ConnectionStrings.\n                    UsingConfigurationClass.SaveConfigurationFile()\n\n                Case &quot;4&quot;\n                    &#39; Show how to use the AppSettings property.\n                    UsingConfigurationClass.GetSections(&quot;appSettings&quot;)\n\n                Case &quot;5&quot;\n                    &#39; Show how to use the ConnectionStrings property.\n                    UsingConfigurationClass.GetSections(&quot;connectionStrings&quot;)\n\n                Case &quot;6&quot;\n                    &#39; Show how to obtain configuration file information.\n                    UsingConfigurationClass.GetConfigurationInformation()\n\n\n                Case Else\n                    UserMenu()\n            End Select\n            Console.Write(&quot;&gt; &quot;)\n            selection = Console.ReadLine()\n        Loop\n    End Sub\nEnd Class\n#End Region\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.Configuration#31\">using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Configuration;\nusing System.Globalization;\nusing System.ComponentModel;\nusing System.Collections.Specialized;\n\n// Before compiling this application, \n// remember to reference the System.Configuration assembly in your project. \n#region CustomSection class\n\n// Define a custom section. This class is used to\n// populate the configuration file.\n// It creates the following custom section:\n//  &lt;CustomSection name=&quot;Contoso&quot; url=&quot;http://www.contoso.com&quot; port=&quot;8080&quot; /&gt;.\npublic sealed class CustomSection : ConfigurationSection\n{\n\n    public CustomSection()\n    {\n\n    }\n\n\n    [ConfigurationProperty(&quot;name&quot;,\n     DefaultValue = &quot;Contoso&quot;,\n     IsRequired = true,\n     IsKey = true)]\n    public string Name\n    {\n        get\n        {\n            return (string)this[&quot;name&quot;];\n        }\n        set\n        {\n            this[&quot;name&quot;] = value;\n        }\n    }\n\n    [ConfigurationProperty(&quot;url&quot;,\n        DefaultValue = &quot;http://www.contoso.com&quot;,\n        IsRequired = true)]\n    [RegexStringValidator(@&quot;\\w+:\\/\\/[\\w.]+\\S*&quot;)]\n    public string Url\n    {\n        get\n        {\n            return (string)this[&quot;url&quot;];\n        }\n        set\n        {\n            this[&quot;url&quot;] = value;\n        }\n    }\n\n    [ConfigurationProperty(&quot;port&quot;,\n        DefaultValue = (int)8080,\n        IsRequired = false)]\n    [IntegerValidator(MinValue = 0,\n        MaxValue = 8080, ExcludeRange = false)]\n    public int Port\n    {\n        get\n        {\n            return (int)this[&quot;port&quot;];\n        }\n        set\n        {\n            this[&quot;port&quot;] = value;\n        }\n    }\n\n\n\n}\n\n#endregion\n\n#region Using Configuration Class\nclass UsingConfigurationClass\n{\n\n\n    // Show how to create an instance of the Configuration class\n    // that represents this application configuration file.  \n    static void CreateConfigurationFile()\n    {\n        try\n        {\n\n            // Create a custom configuration section.\n            CustomSection customSection = new CustomSection();\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Create the custom section entry  \n            // in &lt;configSections&gt; group and the \n            // related target section in &lt;configuration&gt;.\n            if (config.Sections[&quot;CustomSection&quot;] == null)\n            {\n                config.Sections.Add(&quot;CustomSection&quot;, customSection);\n            }\n\n            // Create and add an entry to appSettings section.\n            \n            string conStringname=&quot;LocalSqlServer&quot;;\n            string conString = @&quot;data source=.\\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true&quot;;\n            string providerName=&quot;System.Data.SqlClient&quot;;\n\n            ConnectionStringSettings connStrSettings = new ConnectionStringSettings();\n            connStrSettings.Name = conStringname;\n            connStrSettings.ConnectionString= conString;\n            connStrSettings.ProviderName = providerName;\n\n            config.ConnectionStrings.ConnectionStrings.Add(connStrSettings);\n            \n            // Add an entry to appSettings section.\n            int appStgCnt =\n                ConfigurationManager.AppSettings.Count;\n            string newKey = &quot;NewKey&quot; + appStgCnt.ToString();\n\n            string newValue = DateTime.Now.ToLongDateString() +\n              &quot; &quot; + DateTime.Now.ToLongTimeString();\n\n            config.AppSettings.Settings.Add(newKey, newValue);\n\n            // Save the configuration file.\n            customSection.SectionInformation.ForceSave = true;\n            config.Save(ConfigurationSaveMode.Full);\n\n            Console.WriteLine(&quot;Created configuration file: {0}&quot;,\n                config.FilePath);\n\n        }\n        catch (ConfigurationErrorsException err)\n        {\n            Console.WriteLine(&quot;CreateConfigurationFile: {0}&quot;, err.ToString());\n        }\n\n    }\n\n    // Show how to use the GetSection(string) method.\n    static void GetCustomSection()\n    {\n        try\n        {\n\n            CustomSection customSection;\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None) as Configuration;\n\n            customSection =\n                config.GetSection(&quot;CustomSection&quot;) as CustomSection;\n\n            Console.WriteLine(&quot;Section name: {0}&quot;, customSection.Name);\n            Console.WriteLine(&quot;Url: {0}&quot;, customSection.Url);\n            Console.WriteLine(&quot;Port: {0}&quot;, customSection.Port);\n\n        }\n        catch (ConfigurationErrorsException err)\n        {\n            Console.WriteLine(&quot;Using GetSection(string): {0}&quot;, err.ToString());\n        }\n\n    }\n\n\n    // Show how to use different modalities to save \n    // a configuration file.\n    static void SaveConfigurationFile()\n    {\n        try\n        {\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None) as Configuration;\n\n            // Save the full configuration file and force save even if the file was not modified.\n            config.SaveAs(&quot;MyConfigFull.config&quot;, ConfigurationSaveMode.Full, true);\n            Console.WriteLine(&quot;Saved config file as MyConfigFull.config using the mode: {0}&quot;,\n                ConfigurationSaveMode.Full.ToString());\n\n            config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None) as Configuration;\n\n            // Save only the part of the configuration file that was modified. \n            config.SaveAs(&quot;MyConfigModified.config&quot;, ConfigurationSaveMode.Modified, true);\n            Console.WriteLine(&quot;Saved config file as MyConfigModified.config using the mode: {0}&quot;,\n                ConfigurationSaveMode.Modified.ToString());\n\n            config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None) as Configuration;\n\n            // Save the full configuration file.\n            config.SaveAs(&quot;MyConfigMinimal.config&quot;);\n            Console.WriteLine(&quot;Saved config file as MyConfigMinimal.config using the mode: {0}&quot;,\n                ConfigurationSaveMode.Minimal.ToString());\n\n        }\n        catch (ConfigurationErrorsException err)\n        {\n            Console.WriteLine(&quot;SaveConfigurationFile: {0}&quot;, err.ToString());\n        }\n\n    }\n\n\n    // Show how use the AppSettings and ConnectionStrings \n    // properties.\n    static void GetSections(string section)\n    {\n        try\n        {\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None) as Configuration;\n\n            // Get the selected section.\n            switch (section)\n            {\n                case &quot;appSettings&quot;:\n                    try\n                    {\n                        AppSettingsSection appSettings =\n                            config.AppSettings as AppSettingsSection;\n                        Console.WriteLine(&quot;Section name: {0}&quot;,\n                                appSettings.SectionInformation.SectionName);\n\n                        // Get the AppSettings section elements.\n                        Console.WriteLine();\n                        Console.WriteLine(&quot;Using AppSettings property.&quot;);\n                        Console.WriteLine(&quot;Application settings:&quot;);\n                        // Get the KeyValueConfigurationCollection \n                        // from the configuration.\n                        KeyValueConfigurationCollection settings =\n                          config.AppSettings.Settings;\n\n                        // Display each KeyValueConfigurationElement.\n                        foreach (KeyValueConfigurationElement keyValueElement in settings)\n                        {\n                            Console.WriteLine(&quot;Key: {0}&quot;, keyValueElement.Key);\n                            Console.WriteLine(&quot;Value: {0}&quot;, keyValueElement.Value);\n                            Console.WriteLine();\n                        }\n                    }\n                    catch (ConfigurationErrorsException e)\n                    {\n                        Console.WriteLine(&quot;Using AppSettings property: {0}&quot;,\n                            e.ToString());\n                    }\n                    break;\n\n                case &quot;connectionStrings&quot;:\n                    ConnectionStringsSection\n                        conStrSection =\n                        config.ConnectionStrings as ConnectionStringsSection;\n                    Console.WriteLine(&quot;Section name: {0}&quot;,\n                        conStrSection.SectionInformation.SectionName);\n\n                    try\n                    {\n                        if (conStrSection.ConnectionStrings.Count != 0)\n                        {\n                            Console.WriteLine();\n                            Console.WriteLine(&quot;Using ConnectionStrings property.&quot;);\n                            Console.WriteLine(&quot;Connection strings:&quot;);\n\n                            // Get the collection elements.\n                            foreach (ConnectionStringSettings connection in\n                              conStrSection.ConnectionStrings)\n                            {\n                                string name = connection.Name;\n                                string provider = connection.ProviderName;\n                                string connectionString = connection.ConnectionString;\n\n                                Console.WriteLine(&quot;Name:               {0}&quot;,\n                                  name);\n                                Console.WriteLine(&quot;Connection string:  {0}&quot;,\n                                  connectionString);\n                                Console.WriteLine(&quot;Provider:            {0}&quot;,\n                                   provider);\n                            }\n                        }\n                    }\n                    catch (ConfigurationErrorsException e)\n                    {\n                        Console.WriteLine(&quot;Using ConnectionStrings property: {0}&quot;,\n                            e.ToString());\n                    }\n                    break;\n\n                default:\n                    Console.WriteLine(\n                        &quot;GetSections: Unknown section (0)&quot;, section);\n                    break;\n            }\n\n        }\n        catch (ConfigurationErrorsException err)\n        {\n            Console.WriteLine(&quot;GetSections: (0)&quot;, err.ToString());\n        }\n\n    }\n\n    // Show how to use the Configuration object properties \n    // to obtain configuration file information.\n    static void GetConfigurationInformation()\n    {\n        try\n        {\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None) as Configuration;\n\n            Console.WriteLine(&quot;Reading configuration information:&quot;);\n\n            ContextInformation evalContext =\n                config.EvaluationContext as ContextInformation;\n            Console.WriteLine(&quot;Machine level: {0}&quot;,\n                evalContext.IsMachineLevel.ToString());\n                    \n            string filePath = config.FilePath;\n            Console.WriteLine(&quot;File path: {0}&quot;, filePath);\n             \n            bool hasFile = config.HasFile;\n            Console.WriteLine(&quot;Has file: {0}&quot;, hasFile.ToString());\n                   \n              \n            ConfigurationSectionGroupCollection\n                groups = config.SectionGroups;\n            Console.WriteLine(&quot;Groups: {0}&quot;, groups.Count.ToString());\n            foreach (ConfigurationSectionGroup group in groups)\n            {\n                Console.WriteLine(&quot;Group Name: {0}&quot;, group.Name);\n               // Console.WriteLine(&quot;Group Type: {0}&quot;, group.Type);\n            }\n                  \n\n            ConfigurationSectionCollection\n                sections = config.Sections;\n            Console.WriteLine(&quot;Sections: {0}&quot;, sections.Count.ToString());\n            \n        }\n        catch (ConfigurationErrorsException err)\n        {\n            Console.WriteLine(&quot;GetConfigurationInformation: {0}&quot;,err.ToString());\n        }\n\n    }\n\n#endregion \n\n#region Application Main\n    //*** User Interaction Class ***//\n\n    // Obtain user&#39;s input and provide feedback.\n    // This class contains the application Main() function.\n    // It calls the ConfigurationManager methods based \n    // on the user&#39;s selection.\n    class ApplicationMain\n    {\n        // Display user&#39;s menu.\n        public static void UserMenu()\n        {\n            string applicationName =\n                Environment.GetCommandLineArgs()[0] + &quot;.exe&quot;;\n            StringBuilder buffer = new StringBuilder();\n\n            buffer.AppendLine(&quot;Application: &quot; + applicationName);\n            buffer.AppendLine(&quot;Make your selection.&quot;);\n            buffer.AppendLine(&quot;?    -- Display help.&quot;);\n            buffer.AppendLine(&quot;Q,q  -- Exit the application.&quot;);\n            \n            buffer.Append(&quot;1    -- Instantiate the&quot;);\n            buffer.AppendLine(&quot; Configuration class.&quot;);\n\n            buffer.Append(&quot;2    -- Use GetSection(string) to read &quot;);\n            buffer.AppendLine(&quot; a custom section.&quot;);\n            \n            buffer.Append(&quot;3    -- Use SaveAs methods&quot;);\n            buffer.AppendLine(&quot; to save the configuration file.&quot;);\n\n            buffer.Append(&quot;4    -- Use AppSettings property to read&quot;);\n            buffer.AppendLine(&quot; the appSettings section.&quot;);\n            buffer.Append(&quot;5    -- Use ConnectionStrings property to read&quot;);\n            buffer.AppendLine(&quot; the connectionStrings section.&quot;);\n\n            buffer.Append(&quot;6    -- Use Configuration class properties&quot;);\n            buffer.AppendLine(&quot; to obtain configuration information.&quot;);\n\n            Console.Write(buffer.ToString());\n        }\n\n        // Obtain user&#39;s input and provide\n        // feedback.\n        static void Main(string[] args)\n        {\n            // Define user selection string.\n            string selection;\n\n            // Get the name of the application.\n            string appName =\n                Environment.GetCommandLineArgs()[0];\n\n\n            // Get user selection.\n            while (true)\n            {\n\n                UserMenu();\n                Console.Write(&quot;&gt; &quot;);\n                selection = Console.ReadLine();\n                if (selection != string.Empty)\n                    break;\n            }\n\n            while (selection.ToLower() != &quot;q&quot;)\n            {\n                // Process user&#39;s input.\n                switch (selection)\n                {\n                    case &quot;1&quot;:\n                        // Show how to create an instance of the Configuration class.\n                        CreateConfigurationFile();\n                        break;\n\n                    case &quot;2&quot;:\n                        // Show how to use GetSection(string) method.\n                        GetCustomSection();\n                        break;\n\n                    case &quot;3&quot;:\n                        // Show how to use ConnectionStrings.\n                        SaveConfigurationFile();\n                        break;\n\n                    case &quot;4&quot;:\n                        // Show how to use the AppSettings property.\n                        GetSections(&quot;appSettings&quot;);\n                        break;\n\n                    case &quot;5&quot;:\n                        // Show how to use the ConnectionStrings property.\n                        GetSections(&quot;connectionStrings&quot;);\n                        break;\n\n                    case &quot;6&quot;:\n                        // Show how to obtain configuration file information.\n                        GetConfigurationInformation();\n                        break;\n\n\n                    default:\n                        UserMenu();\n                        break;\n                }\n                Console.Write(&quot;&gt; &quot;);\n                selection = Console.ReadLine();\n            }\n        }\n    }\n#endregion\n\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Configuration settings are stored in a hierarchy of configuration files. The Configuration class instance represents the merged view of the configuration settings from all of the configuration files that apply to a specific physical entity, such as a computer, or to a logical entity, such as an application or a Web site. The logical entity can exist on the local computer or on a remote server. For information about configuration files, see <a href=\"../topic/configuring%20apps%20by%20using%20configuration%20files\" data-linktype=\"relative-path\">Configuring Apps</a> and <a href=\"../topic/asp.net%20configuration%20files\" data-linktype=\"relative-path\">ASP.NET Configuration Files</a>.  </p>\n<p> When no configuration file exists for a specified entity, the Configuration object represents the default configuration settings as defined by the Machine.config file.  </p>\n<p> You can get a Configuration object by using the following classes:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.configuration.configurationmanager\" data-linktype=\"relative-path\">ConfigurationManager</a> class, if your entity is a client application.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager\" data-linktype=\"relative-path\">WebConfigurationManager</a> class, if your entity is a Web application.  </p>\n</li>\n</ul>\n<p> The names of the methods that return a Configuration object begin with &quot;Open&quot;.  </p>\n<p> You can also generate a configuration file that represents the configuration settings in a Configuration object. To do this, use one of the following methods:  </p>\n<ul>\n<li><p>Call the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_Save_\" data-linktype=\"relative-path\">Save</a> method to create a new configuration file.  </p>\n</li>\n<li><p>Call the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_SaveAs_\" data-linktype=\"relative-path\">SaveAs</a> method to generate a new configuration file at another location.  </p>\n</li>\n</ul>\n<p> The names of the methods that create configuration files begin with &quot;Save&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To enable access to configuration settings on a remote computer, use the Aspnet_regiis command-line tool. For more information about this tool, see <a href=\"../topic/asp.net%20iis%20registration%20tool%20(aspnet_regiis.exe)\" data-linktype=\"relative-path\">ASP.NET IIS Registration Tool (Aspnet_regiis.exe)</a>. For information about creating and accessing custom configuration settings other than the intrinsic sections included in the .NET Framework, refer to <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a>.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_AppSettings\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AppSettings</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.configuration.appsettingssection\" data-linktype=\"relative-path\">AppSettingsSection</a> object configuration section that applies to this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.AppSettingsSection AppSettings { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.appsettingssection\" data-linktype=\"relative-path\">AppSettingsSection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.configuration.appsettingssection\" data-linktype=\"relative-path\">AppSettingsSection</a> object representing the <code>appSettings</code> configuration section that applies to this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the AppSettings property to access and change the <code>appSettings</code> configuration section defined by default in the open configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_AssemblyStringTransformer\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AssemblyStringTransformer</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies a function delegate that is used to transform assembly strings in configuration files.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Func&lt;string,string&gt; AssemblyStringTransformer { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate that transforms type strings. The default value is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property enables a consumer of the .NET Framework configuration system to set a function delegate that is used to transform assembly strings found in configuration files. Visual Studio 2010 uses this property when a project is targeted for an earlier version of the .NET Framework. The function makes sure that assembly strings are formatted correctly for the targeted version of the .NET Framework when configuration files are updated.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_ConnectionStrings\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConnectionStrings</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"system.configuration.connectionstringssection\" data-linktype=\"relative-path\">ConnectionStringsSection</a> configuration-section object that applies to this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConnectionStringsSection ConnectionStrings { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.connectionstringssection\" data-linktype=\"relative-path\">ConnectionStringsSection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.connectionstringssection\" data-linktype=\"relative-path\">ConnectionStringsSection</a> configuration-section object representing the <code>connectionStrings</code> configuration section that applies to this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ConnectionStrings property to access and change the <code>connectionStrings</code> configuration section defined in the open configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_EvaluationContext\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EvaluationContext</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object for the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ContextInformation EvaluationContext { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object for the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object provides the context necessary for a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to respond based upon where it is being evaluated.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_FilePath\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FilePath</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the physical path to the configuration file represented by this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string FilePath { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The physical path to the configuration file represented by this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the value for this FilePath property represents a merged view and no actual file exists for the application, the path to the parent configuration file is returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_HasFile\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasFile</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether a file exists for the resource represented by this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasFile { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if there is a configuration file; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The HasFile property also returns <code>true</code> when the resource represented by this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object inherits settings from a Web.config file.  </p>\n<p> The HasFile property returns <code>false</code> when this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object represents a location-specific configuration.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_Locations\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Locations</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the locations defined within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationLocationCollection Locations { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlocationcollection\" data-linktype=\"relative-path\">ConfigurationLocationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationlocationcollection\" data-linktype=\"relative-path\">ConfigurationLocationCollection</a> containing the locations defined within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Locations property applies only when the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_HasFile_\" data-linktype=\"relative-path\">HasFile</a> property returns <code>true</code>. If this configuration inherits all of its settings, or no locations are defined, an empty collection is returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_NamespaceDeclared\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NamespaceDeclared</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the configuration file has an XML namespace.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool NamespaceDeclared { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the configuration file has an XML namespace; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Configuration files are formatted as XML files, but an XML namespace is not required. If this value is <code>true</code> after the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object is opened, then the file contains a namespace reference. If it is set to <code>true</code> before the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object is saved, then a namespace reference will be added to the file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_RootSectionGroup\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RootSectionGroup</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the root <a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a> for this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationSectionGroup RootSectionGroup { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The root section group for this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_SectionGroups\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SectionGroups</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of the section groups defined by this configuration.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationSectionGroupCollection SectionGroups { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsectiongroupcollection\" data-linktype=\"relative-path\">ConfigurationSectionGroupCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationsectiongroupcollection\" data-linktype=\"relative-path\">ConfigurationSectionGroupCollection</a> collection representing the collection of section groups for this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Configuration sections can be combined into groups for convenience and added functionality. Access the SectionGroups property to retrieve the <a class=\"xref\" href=\"system.configuration.configurationsectiongroupcollection\" data-linktype=\"relative-path\">ConfigurationSectionGroupCollection</a> object representing the collection of section groups for this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object. If this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object represents an inherited view, the merged list of section groups will be returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_Sections\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Sections</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of the sections defined by this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationSectionCollection Sections { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsectioncollection\" data-linktype=\"relative-path\">ConfigurationSectionCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of the sections defined by this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Access the Sections property to retrieve a <a class=\"xref\" href=\"system.configuration.configurationsectioncollection\" data-linktype=\"relative-path\">ConfigurationSectionCollection</a> object representing the collection of sections for this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object. If this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object represents a merged configuration, the merged list of sections will be returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_TargetFramework\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetFramework</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the targeted version of the .NET Framework when a version earlier than the current one is targeted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Runtime.Versioning.FrameworkName TargetFramework { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.versioning.frameworkname\" data-linktype=\"relative-path\">FrameworkName</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the targeted version of the .NET Framework. The default value is <code>null</code>, which indicates that the current version is targeted.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the configuration system serializes a hierarchy of configuration objects to XML, it checks the value of this property. If the property is not <code>null</code>, the configuration system performs version checks for each configuration section group and configuration section. The configuration system also performs version checks for individual configuration properties that are marked as having changed across versions. (For more information, see <a class=\"xref\" href=\"system.configuration.configurationpropertyoptions\" data-linktype=\"relative-path\">ConfigurationPropertyOptions</a>.) The configuration system also performs version checks for configuration elements in configuration sections.  </p>\n<p> If the value of this property is <code>null</code>, the configuration system does not perform any version checks during serialization.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_TypeStringTransformer\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TypeStringTransformer</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies a function delegate that is used to transform type strings in configuration files.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Func&lt;string,string&gt; TypeStringTransformer { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate that transforms type strings. The default value is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property enables a consumer of the .NET Framework configuration system to set a function delegate that is used to transform type strings found in configuration files. Visual Studio 2010 uses this property when a project is targeted for an earlier version of the .NET Framework. The function makes sure that type strings are formatted correctly for the targeted version of the .NET Framework when configuration files are updated.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_GetSection_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSection(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the specified <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationSection GetSection (string sectionName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sectionName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the section to be returned.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The specified <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Configuration settings are contained within sections that group similar settings together for convenience. The GetSection method retrieves a configuration section by its name.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_GetSectionGroup_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSectionGroup(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the specified <a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationSectionGroup GetSectionGroup (string sectionGroupName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sectionGroupName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path name of the <a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a> to return.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a> specified.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the GetSectionGroup method to obtain a specific <a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a> from a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_Save\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Save()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the configuration settings contained within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to the current XML configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Save ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be written to.  </p>\n<p> - or -  </p>\n<p> The configuration file has changed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Save method persists any configuration settings that have been modified since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created. If a configuration file does not exist at the physical location represented by the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_FilePath_\" data-linktype=\"relative-path\">FilePath</a> property, a new configuration file will be created to contain any settings that are different from the inherited configuration.  </p>\n<p> If the configuration file has changed since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created, a run-time error occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When &#39;Creator Owner&#39; is listed in the ACL (Access Control List) of the directory containing the configuration file, the current user of Save becomes the new owner of the file and inherits the permissions granted to &#39;Creator Owner&#39;. This results in an elevation of privileges for the current user and a removal of privileges for the previous owner.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_Save_System_Configuration_ConfigurationSaveMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Save(ConfigurationSaveMode)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the configuration settings contained within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to the current XML configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Save (System.Configuration.ConfigurationSaveMode saveMode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>saveMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a> value that determines which property values to save.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be written to.  </p>\n<p> - or -  </p>\n<p> The configuration file has changed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Save method persists configuration settings in the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object based on the <code>saveMode</code> parameter.  </p>\n<p> If a configuration file does not exist at the physical location represented by the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_FilePath_\" data-linktype=\"relative-path\">FilePath</a> property, a new configuration file will be created to contain any settings that are different from the inherited configuration.  </p>\n<p> If the configuration file has changed since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created, a run-time error occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When &#39;Creator Owner&#39; is listed in the ACL (Access Control List) of the directory containing the configuration file, the current user of Save becomes the new owner of the file and inherits the permissions granted to &#39;Creator Owner&#39;. This results in an elevation of privileges for the current user and a removal of privileges for the previous owner.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_Save_System_Configuration_ConfigurationSaveMode_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Save(ConfigurationSaveMode, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the configuration settings contained within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to the current XML configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Save (System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>saveMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a> value that determines which property values to save.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>forceSaveAll</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to save even if the configuration was not modified; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be written to.  </p>\n<p> - or -  </p>\n<p> The configuration file has changed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Save method persists configuration settings in the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object based on the <code>saveMode</code> and <code>forceSaveAll</code> parameters.  </p>\n<p> If a configuration file does not exist at the physical location represented by the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_FilePath_\" data-linktype=\"relative-path\">FilePath</a> property, a  new configuration file will be created to contain any settings that are different from the inherited configuration..  </p>\n<p> If the configuration file has changed since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created, a run-time error occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When &#39;Creator Owner&#39; is listed in the ACL (Access Control List) of the directory containing the configuration file, the current user of Save becomes the new owner of the file and inherits the permissions granted to &#39;Creator Owner&#39;. This results in an elevation of privileges for the current user and a removal of privileges for the previous owner.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_SaveAs_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SaveAs(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the configuration settings contained within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to the specified XML configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SaveAs (string filename);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filename</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path and file name to save the configuration file to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be written to.  </p>\n<p> - or -  </p>\n<p> The configuration file has changed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SaveAs method persists any configuration settings that have been modified since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created to a new file.  </p>\n<p> If a configuration file does not exist at the physical location represented by the  </p>\n<p> <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_FilePath_\" data-linktype=\"relative-path\">FilePath</a> property, a new configuration file will be created to contain any settings that are different from the inherited configuration..  </p>\n<p> If the configuration file has changed since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created, a run-time error occurs.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_SaveAs_System_String_System_Configuration_ConfigurationSaveMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SaveAs(String, ConfigurationSaveMode)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the configuration settings contained within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to the specified XML configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode saveMode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filename</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path and file name to save the configuration file to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>saveMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a> value that determines which property values to save.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be written to.  </p>\n<p> - or -  </p>\n<p> The configuration file has changed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SaveAs method persists configuration settings in the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to a new file based on the <code>saveMode</code> parameter.  </p>\n<p> If a configuration file does not exist at the physical location represented by the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_FilePath_\" data-linktype=\"relative-path\">FilePath</a> property, a new configuration file will be created to contain any settings that are different from the inherited configuration..  </p>\n<p> If the configuration file has changed since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created, a run-time error occurs.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Configuration_SaveAs_System_String_System_Configuration_ConfigurationSaveMode_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SaveAs(String, ConfigurationSaveMode, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the configuration settings contained within this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to the specified XML configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filename</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path and file name to save the configuration file to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>saveMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a> value that determines which property values to save.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>forceSaveAll</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to save even if the configuration was not modified; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>filename</code> is null or an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SaveAs method persists configuration settings in the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to a new file based on the <code>saveMode</code> and <code>forceSaveAll</code> parameters.  </p>\n<p> If a configuration file does not exist at the physical location represented by the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_FilePath_\" data-linktype=\"relative-path\">FilePath</a> property, a new configuration file will be created to contain any settings that are different from the inherited configuration.  </p>\n<p> If the configuration file has changed since this <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object was created, a run-time error occurs.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Configuration.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.AppSettings\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.AssemblyStringTransformer\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.ConnectionStrings\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.EvaluationContext\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.FilePath\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.GetSection\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.GetSectionGroup\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.HasFile\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.Locations\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.NamespaceDeclared\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.RootSectionGroup\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.Save\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.SaveAs\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.SectionGroups\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.Sections\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.TargetFramework\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Configuration.TypeStringTransformer\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"9979f441-3049-3f9e-042c-f4d5ac57a29e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.configuration/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.Configuration\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Configuration.yml","open_to_public_contributors":false,"api_name":["System.Configuration.Configuration","System.Configuration.Configuration.AppSettings","System.Configuration.Configuration.AssemblyStringTransformer","System.Configuration.Configuration.ConnectionStrings","System.Configuration.Configuration.EvaluationContext","System.Configuration.Configuration.FilePath","System.Configuration.Configuration.GetSection","System.Configuration.Configuration.GetSectionGroup","System.Configuration.Configuration.HasFile","System.Configuration.Configuration.Locations","System.Configuration.Configuration.NamespaceDeclared","System.Configuration.Configuration.RootSectionGroup","System.Configuration.Configuration.Save","System.Configuration.Configuration.SaveAs","System.Configuration.Configuration.SectionGroups","System.Configuration.Configuration.Sections","System.Configuration.Configuration.TargetFramework","System.Configuration.Configuration.TypeStringTransformer"],"api_location":["System.Configuration.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.Configuration","System::Configuration::Configuration","System.Configuration.Configuration.AppSettings","System::Configuration::Configuration::AppSettings","System.Configuration.Configuration.AssemblyStringTransformer","System::Configuration::Configuration::AssemblyStringTransformer","System.Configuration.Configuration.ConnectionStrings","System::Configuration::Configuration::ConnectionStrings","System.Configuration.Configuration.EvaluationContext","System::Configuration::Configuration::EvaluationContext","System.Configuration.Configuration.FilePath","System::Configuration::Configuration::FilePath","System.Configuration.Configuration.GetSection","System::Configuration::Configuration::GetSection","System.Configuration.Configuration.GetSectionGroup","System::Configuration::Configuration::GetSectionGroup","System.Configuration.Configuration.HasFile","System::Configuration::Configuration::HasFile","System.Configuration.Configuration.Locations","System::Configuration::Configuration::Locations","System.Configuration.Configuration.NamespaceDeclared","System::Configuration::Configuration::NamespaceDeclared","System.Configuration.Configuration.RootSectionGroup","System::Configuration::Configuration::RootSectionGroup","System.Configuration.Configuration.Save","System::Configuration::Configuration::Save","System.Configuration.Configuration.SaveAs","System::Configuration::Configuration::SaveAs","System.Configuration.Configuration.SectionGroups","System::Configuration::Configuration::SectionGroups","System.Configuration.Configuration.Sections","System::Configuration::Configuration::Sections","System.Configuration.Configuration.TargetFramework","System::Configuration::Configuration::TargetFramework","System.Configuration.Configuration.TypeStringTransformer","System::Configuration::Configuration::TypeStringTransformer"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"9979f441-3049-3f9e-042c-f4d5ac57a29e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Configuration/Configuration.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Configuration class | Microsoft Docs","_op_ogTitle":"Configuration class","description":"Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Configuration/toc.json","toc_rel":"_splitted/System.Configuration/toc.json","source_url":"","ms.assetid":"System.Configuration.Configuration","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configuration","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configuration","fileRelativePath":"api/System.Configuration.Configuration.html"},"themesRelativePathToOutputRoot":"_themes/"}