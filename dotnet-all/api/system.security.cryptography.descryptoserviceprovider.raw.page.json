{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DESCryptoServiceProvider</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a>) algorithm. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class DESCryptoServiceProvider : System.Security.Cryptography.DES</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm\" data-linktype=\"relative-path\">SymmetricAlgorithm</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">System.Security.Cryptography.DES</a></span></div><span class=\"lang-csharp\">DESCryptoServiceProvider</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.des#System_Security_Cryptography_DES_Create\" data-linktype=\"relative-path\">Create()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.des#System_Security_Cryptography_DES_Create_System_String_\" data-linktype=\"relative-path\">Create(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.des#System_Security_Cryptography_DES_IsSemiWeakKey_System_Byte___\" data-linktype=\"relative-path\">IsSemiWeakKey(Byte[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.des#System_Security_Cryptography_DES_IsWeakKey_System_Byte___\" data-linktype=\"relative-path\">IsWeakKey(Byte[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.des#System_Security_Cryptography_DES_Key\" data-linktype=\"relative-path\">Key</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_BlockSize\" data-linktype=\"relative-path\">BlockSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_BlockSizeValue\" data-linktype=\"relative-path\">BlockSizeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Clear\" data-linktype=\"relative-path\">Clear()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_CreateDecryptor\" data-linktype=\"relative-path\">CreateDecryptor()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_CreateEncryptor\" data-linktype=\"relative-path\">CreateEncryptor()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_FeedbackSize\" data-linktype=\"relative-path\">FeedbackSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_FeedbackSizeValue\" data-linktype=\"relative-path\">FeedbackSizeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_IV\" data-linktype=\"relative-path\">IV</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_IVValue\" data-linktype=\"relative-path\">IVValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_KeySize\" data-linktype=\"relative-path\">KeySize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_KeySizeValue\" data-linktype=\"relative-path\">KeySizeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_KeyValue\" data-linktype=\"relative-path\">KeyValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalBlockSizes\" data-linktype=\"relative-path\">LegalBlockSizes</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalBlockSizesValue\" data-linktype=\"relative-path\">LegalBlockSizesValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalKeySizes\" data-linktype=\"relative-path\">LegalKeySizes</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalKeySizesValue\" data-linktype=\"relative-path\">LegalKeySizesValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Mode\" data-linktype=\"relative-path\">Mode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_ModeValue\" data-linktype=\"relative-path\">ModeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Padding\" data-linktype=\"relative-path\">Padding</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_PaddingValue\" data-linktype=\"relative-path\">PaddingValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_ValidKeySize_System_Int32_\" data-linktype=\"relative-path\">ValidKeySize(Int32)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example uses DESCryptoServiceProvider (an implementation of <a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a>) with the specified key (<a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Key_\" data-linktype=\"relative-path\">Key</a>) and initialization vector (<a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_IV_\" data-linktype=\"relative-path\">IV</a>) to encrypt a file specified by <code>inName</code>. It then outputs the encrypted result to the file specified by <code>outName</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic DES Example#1\">void EncryptData( String^ inName, String^ outName, array&lt;Byte&gt;^desKey, array&lt;Byte&gt;^desIV )\n{\n   \n   //Create the file streams to handle the input and output files.\n   FileStream^ fin = gcnew FileStream( inName,FileMode::Open,FileAccess::Read );\n   FileStream^ fout = gcnew FileStream( outName,FileMode::OpenOrCreate,FileAccess::Write );\n   fout-&gt;SetLength( 0 );\n   \n   //Create variables to help with read and write.\n   array&lt;Byte&gt;^bin = gcnew array&lt;Byte&gt;(100);\n   long rdlen = 0; //This is the total number of bytes written.\n\n   long totlen = (long)fin-&gt;Length; //This is the total length of the input file.\n\n   int len; //This is the number of bytes to be written at a time.\n\n   DES^ des = gcnew DESCryptoServiceProvider;\n   CryptoStream^ encStream = gcnew CryptoStream( fout,des-&gt;CreateEncryptor( desKey, desIV ),CryptoStreamMode::Write );\n   Console::WriteLine( &quot;Encrypting...&quot; );\n   \n   //Read from the input file, then encrypt and write to the output file.\n   while ( rdlen &lt; totlen )\n   {\n      len = fin-&gt;Read( bin, 0, 100 );\n      encStream-&gt;Write( bin, 0, len );\n      rdlen = rdlen + len;\n      Console::WriteLine( &quot;{0} bytes processed&quot;, rdlen );\n   }\n\n   encStream-&gt;Close();\n   fout-&gt;Close();\n   fin-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DES Example#1\">private static void EncryptData(String inName, String outName, byte[] desKey, byte[] desIV)\n {    \n     //Create the file streams to handle the input and output files.\n     FileStream fin = new FileStream(inName, FileMode.Open, FileAccess.Read);\n     FileStream fout = new FileStream(outName, FileMode.OpenOrCreate, FileAccess.Write);\n     fout.SetLength(0);\n       \n     //Create variables to help with read and write.\n     byte[] bin = new byte[100]; //This is intermediate storage for the encryption.\n     long rdlen = 0;              //This is the total number of bytes written.\n     long totlen = fin.Length;    //This is the total length of the input file.\n     int len;                     //This is the number of bytes to be written at a time.\n \n     DES des = new DESCryptoServiceProvider();          \n     CryptoStream encStream = new CryptoStream(fout, des.CreateEncryptor(desKey, desIV), CryptoStreamMode.Write);\n                \n     Console.WriteLine(&quot;Encrypting...&quot;);\n \n     //Read from the input file, then encrypt and write to the output file.\n     while(rdlen &lt; totlen)\n     {\n         len = fin.Read(bin, 0, 100);\n         encStream.Write(bin, 0, len);\n         rdlen = rdlen + len;\n         Console.WriteLine(&quot;{0} bytes processed&quot;, rdlen);\n     }\n \n     encStream.Close();  \n     fout.Close();\n     fin.Close();                   \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DES Example#1\">    Private Shared Sub EncryptData(inName As String, outName As String, _\n    desKey() As Byte, desIV() As Byte)\n    \n        &#39;Create the file streams to handle the input and output files.\n        Dim fin As New FileStream(inName, FileMode.Open, FileAccess.Read)\n        Dim fout As New FileStream(outName, FileMode.OpenOrCreate, _\n           FileAccess.Write)\n        fout.SetLength(0)\n        \n        &#39;Create variables to help with read and write.\n        Dim bin(4096) As Byte &#39;This is intermediate storage for the encryption.\n        Dim rdlen As Long = 0 &#39;This is the total number of bytes written.\n        Dim totlen As Long = fin.Length &#39;Total length of the input file.\n        Dim len As Integer &#39;This is the number of bytes to be written at a time.\n        Dim des As New DESCryptoServiceProvider()\n        Dim encStream As New CryptoStream(fout, _\n           des.CreateEncryptor(desKey, desIV), CryptoStreamMode.Write)\n        \n        Console.WriteLine(&quot;Encrypting...&quot;)\n        \n        &#39;Read from the input file, then encrypt and write to the output file.\n        While rdlen &lt; totlen\n            len = fin.Read(bin, 0, 4096)\n            encStream.Write(bin, 0, len)\n            rdlen = Convert.ToInt32(rdlen + len / des.BlockSize * des.BlockSize)\n            Console.WriteLine(&quot;Processed {0} bytes, {1} bytes total&quot;, len, _\n               rdlen)\n        End While\n        \n        encStream.Close()\n    End Sub\n</code></pre><p> Decryption can be handled in the same way; use [CreateDecryptor(Byte[], Byte&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A&gt; instead of [CreateEncryptor(Byte[], Byte&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A&gt;. The same key (<a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Key_\" data-linktype=\"relative-path\">Key</a>) and initialization vector (<a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_IV_\" data-linktype=\"relative-path\">IV</a>) used to encrypt the file must be used to decrypt it.</p>\n\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This algorithm supports a key length of 64 bits.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_DESCryptoServiceProvider__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DESCryptoServiceProvider()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.descryptoserviceprovider\" data-linktype=\"relative-path\">DESCryptoServiceProvider</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DESCryptoServiceProvider ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The Data Encryption Standard (<a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a>) cryptographic service provider is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_DESCryptoServiceProvider_CreateDecryptor_System_Byte___System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateDecryptor(Byte[],Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a symmetric Data Encryption Standard (<a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a>) decryptor object with the specified key (<span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.Key*</span>) and initialization vector (<span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.IV*</span>).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgbKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The secret key to use for the symmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgbIV</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The initialization vector to use for the symmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.icryptotransform\" data-linktype=\"relative-path\">ICryptoTransform</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A symmetric <a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a> decryptor object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.Mode*</span> property is <a class=\"xref\" href=\"system.security.cryptography.ciphermode\" data-linktype=\"relative-path\">CipherMode</a>.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.Mode*</span> property is <a class=\"xref\" href=\"system.security.cryptography.ciphermode\" data-linktype=\"relative-path\">CipherMode</a> and the value of the <span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*</span> property is not 8.  </p>\n<p> -or-  </p>\n<p> An invalid key size was used.  </p>\n<p> -or-  </p>\n<p> The algorithm key size was not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method decrypts an encrypted message that was created using the <a class=\"xref\" href=\"system.security.cryptography.descryptoserviceprovider#System_Security_Cryptography_DESCryptoServiceProvider_CreateEncryptor_\" data-linktype=\"relative-path\">CreateEncryptor</a> overload with the same parameters.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_DESCryptoServiceProvider_CreateEncryptor_System_Byte___System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateEncryptor(Byte[],Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a symmetric Data Encryption Standard (<a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a>) encryptor object with the specified key (<span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.Key*</span>) and initialization vector (<span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.IV*</span>).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgbKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The secret key to use for the symmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgbIV</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The initialization vector to use for the symmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.icryptotransform\" data-linktype=\"relative-path\">ICryptoTransform</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A symmetric <a class=\"xref\" href=\"system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a> encryptor object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.Mode*</span> property is <a class=\"xref\" href=\"system.security.cryptography.ciphermode\" data-linktype=\"relative-path\">CipherMode</a>.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.Mode*</span> property is <a class=\"xref\" href=\"system.security.cryptography.ciphermode\" data-linktype=\"relative-path\">CipherMode</a> and the value of the <span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*</span> property is not 8.  </p>\n<p> -or-  </p>\n<p> An invalid key size was used.  </p>\n<p> -or-  </p>\n<p> The algorithm key size was not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.security.cryptography.descryptoserviceprovider#System_Security_Cryptography_DESCryptoServiceProvider_CreateDecryptor_\" data-linktype=\"relative-path\">CreateDecryptor</a> overload with the same parameters to decrypt the result of this method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_DESCryptoServiceProvider_GenerateIV\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GenerateIV()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Generates a random initialization vector (<span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.IV*</span>) to use for the algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void GenerateIV ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to generate a random <a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_IV_\" data-linktype=\"relative-path\">IV</a> when none is specified.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_DESCryptoServiceProvider_GenerateKey\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GenerateKey()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Generates a random key (<span class=\"xref\">stem.Security.Cryptography.SymmetricAlgorithm.Key*</span>) to be used for the algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void GenerateKey ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to generate a random key when none is specified. This method will never return a weak key (see <a class=\"xref\" href=\"system.security.cryptography.des#System_Security_Cryptography_DES_IsWeakKey_\" data-linktype=\"relative-path\">IsWeakKey</a>) or a semi-weak key (see <a class=\"xref\" href=\"system.security.cryptography.des#System_Security_Cryptography_DES_IsSemiWeakKey_\" data-linktype=\"relative-path\">IsSemiWeakKey</a>).  </p>\n<p> This algorithm supports a key length of 64 bits.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.DESCryptoServiceProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DESCryptoServiceProvider\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DESCryptoServiceProvider..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"22673f33-c24e-e73e-02ec-c34cfb1de8dc\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard () algorithm. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.DESCryptoServiceProvider\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.DESCryptoServiceProvider.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.DESCryptoServiceProvider","System.Security.Cryptography.DESCryptoServiceProvider..ctor","System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor","System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor","System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV","System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.DESCryptoServiceProvider","System::Security::Cryptography::DESCryptoServiceProvider","System.Security.Cryptography.DESCryptoServiceProvider.#ctor","System::Security::Cryptography::DESCryptoServiceProvider::#ctor","System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor","System::Security::Cryptography::DESCryptoServiceProvider::CreateDecryptor","System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor","System::Security::Cryptography::DESCryptoServiceProvider::CreateEncryptor","System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV","System::Security::Cryptography::DESCryptoServiceProvider::GenerateIV","System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey","System::Security::Cryptography::DESCryptoServiceProvider::GenerateKey"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"22673f33-c24e-e73e-02ec-c34cfb1de8dc","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DESCryptoServiceProvider class | Microsoft Docs","_op_ogTitle":"DESCryptoServiceProvider class","description":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard () algorithm. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.DESCryptoServiceProvider","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.descryptoserviceprovider","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.descryptoserviceprovider","fileRelativePath":"api/System.Security.Cryptography.DESCryptoServiceProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}