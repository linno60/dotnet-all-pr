{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">MeasureItemEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <code>MeasureItem</code> event of the <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a>, <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a>, <a class=\"xref\" href=\"system.windows.forms.checkedlistbox\" data-linktype=\"relative-path\">CheckedListBox</a>, and <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> controls.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class MeasureItemEventArgs : EventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><span class=\"lang-csharp\">MeasureItemEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> property to perform custom drawing of the items in a <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"MeasureItemEventArgs#1\">Public Class Form1\n   Inherits System.Windows.Forms.Form\n   Private WithEvents listBox1 As System.Windows.Forms.ListBox\n   Private components As System.ComponentModel.Container = Nothing\n\n   Private FontSize As Single = 12.0F\n\n   &#39;\n   &#39;  This sample displays a ListBox that contains a list of all the fonts\n   &#39;  installed on the system and draws each item in its respective font.\n   &#39;\n   Public Sub New()\n      InitializeComponent()\n\n      &#39; Populate control with the fonts installed on the system.\n      Dim families As FontFamily() = FontFamily.Families\n\n      Dim family As FontFamily\n      For Each family In families\n         Dim style As FontStyle = FontStyle.Regular\n\n         &#39; Monotype Corsiva is only available in italic\n         If family.Name = &quot;Monotype Corsiva&quot; Then\n            style = style Or FontStyle.Italic\n         End If\n\n         listBox1.Items.Add(New ListBoxFontItem(New Font(family.Name, FontSize, style, GraphicsUnit.Point)))\n      Next family\n   End Sub\n\n\n   Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n      If disposing Then\n         If (components IsNot Nothing) Then\n            components.Dispose()\n         End If\n\n         If (foreColorBrush IsNot Nothing) Then\n            foreColorBrush.Dispose()\n         End If\n      End If\n\n      MyBase.Dispose(disposing)\n   End Sub\n\n   Private Sub InitializeComponent()\n      Me.listBox1 = New System.Windows.Forms.ListBox()\n      Me.SuspendLayout()\n      &#39; \n      &#39; listBox1\n      &#39; \n      Me.listBox1.DrawMode = System.Windows.Forms.DrawMode.OwnerDrawVariable\n      Me.listBox1.Location = New System.Drawing.Point(16, 48)\n      Me.listBox1.Name = &quot;listBox1&quot;\n      Me.listBox1.SelectionMode = System.Windows.Forms.SelectionMode.MultiExtended\n      Me.listBox1.Size = New System.Drawing.Size(256, 134)\n      Me.listBox1.TabIndex = 0\n      &#39; \n      &#39; Form1\n      &#39; \n      Me.ClientSize = New System.Drawing.Size(292, 273)\n      Me.Controls.AddRange(New System.Windows.Forms.Control() {Me.listBox1})\n      Me.Name = &quot;Form1&quot;\n      Me.Text = &quot;Form1&quot;\n      Me.ResumeLayout(False)\n   End Sub\n\n   &lt;STAThread()&gt; Shared Sub Main()\n      Application.Run(New Form1())\n   End Sub\n\n   Private Sub listBox1_MeasureItem(ByVal sender As Object, ByVal e As System.Windows.Forms.MeasureItemEventArgs) Handles listBox1.MeasureItem\n      Dim font As Font = CType(listBox1.Items(e.Index), ListBoxFontItem).Font\n      Dim stringSize As SizeF = e.Graphics.MeasureString(font.Name, font)\n\n      &#39; Set the height and width of the item\n      e.ItemHeight = CInt(stringSize.Height)\n      e.ItemWidth = CInt(stringSize.Width)\n   End Sub\n\n   &#39; For efficiency, cache the brush used for drawing.\n   Private foreColorBrush As SolidBrush\n\n   Private Sub listBox1_DrawItem(ByVal sender As Object, ByVal e As System.Windows.Forms.DrawItemEventArgs) Handles listBox1.DrawItem\n      Dim brush As Brush\n\n      &#39; Create the brush using the ForeColor specified by the DrawItemEventArgs\n      If foreColorBrush Is Nothing Then\n         foreColorBrush = New SolidBrush(e.ForeColor)\n      Else\n         If Not foreColorBrush.Color.Equals(e.ForeColor) Then\n            &#39; The control&#39;s ForeColor has changed, so dispose of the cached brush and\n            &#39; create a new one.\n            foreColorBrush.Dispose()\n            foreColorBrush = New SolidBrush(e.ForeColor)\n         End If\n      End If\n\n      &#39; Select the appropriate brush depending on if the item is selected.\n      &#39; Since State can be a combinateion (bit-flag) of enum values, you can&#39;t use\n      &#39; &quot;==&quot; to compare them.\n      If (e.State And DrawItemState.Selected) = DrawItemState.Selected Then\n         brush = SystemBrushes.HighlightText\n      Else\n         brush = foreColorBrush\n      End If\n\n      &#39; Perform the painting.\n      Dim font As Font = CType(listBox1.Items(e.Index), ListBoxFontItem).Font\n      e.DrawBackground()\n      e.Graphics.DrawString(font.Name, font, brush, e.Bounds.X, e.Bounds.Y)\n      e.DrawFocusRectangle()\n   End Sub\n\n   &#39;\n   &#39;  A wrapper class for use with storing Fonts in a ListBox.  Since ListBox uses the\n   &#39;  ToString() of its items for the text it displays, this class is needed to return\n   &#39;  the name of the font, rather than its ToString() value.\n   &#39;\n   Public Class ListBoxFontItem\n      Public Font As Font\n\n      Public Sub New(ByVal f As Font)\n         Font = f\n      End Sub\n\n      Public Overrides Function ToString() As String\n         Return Font.Name\n      End Function\n   End Class\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"MeasureItemEventArgs#1\">public ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::ListBox^ listBox1;\n   System::ComponentModel::Container^ components;\n\npublic:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n\n   /// &lt;summary&gt;\n   /// Required method for Designer support - do not modify\n   /// the contents of this method with the code editor.\n   /// &lt;/summary&gt;\n   void InitializeComponent()\n   {\n      this-&gt;listBox1 = gcnew System::Windows::Forms::ListBox;\n      this-&gt;SuspendLayout();\n\n      // \n      // listBox1\n      // \n      this-&gt;listBox1-&gt;DrawMode = System::Windows::Forms::DrawMode::OwnerDrawVariable;\n      this-&gt;listBox1-&gt;Location = System::Drawing::Point( 16, 48 );\n      this-&gt;listBox1-&gt;Name = &quot;listBox1&quot;;\n      this-&gt;listBox1-&gt;SelectionMode = System::Windows::Forms::SelectionMode::MultiExtended;\n      this-&gt;listBox1-&gt;Size = System::Drawing::Size( 256, 134 );\n      this-&gt;listBox1-&gt;TabIndex = 0;\n      this-&gt;listBox1-&gt;MeasureItem += gcnew System::Windows::Forms::MeasureItemEventHandler( this, &amp;Form1::listBox1_MeasureItem );\n      this-&gt;listBox1-&gt;DrawItem += gcnew System::Windows::Forms::DrawItemEventHandler( this, &amp;Form1::listBox1_DrawItem );\n\n      // \n      // Form1\n      // \n      this-&gt;ClientSize = System::Drawing::Size( 292, 273 );\n      array&lt;System::Windows::Forms::Control^&gt;^temp0 = {this-&gt;listBox1};\n      this-&gt;Controls-&gt;AddRange( temp0 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Form1&quot;;\n      this-&gt;ResumeLayout( false );\n   }\n\n   void listBox1_MeasureItem( Object^ /*sender*/, MeasureItemEventArgs^ e )\n   {\n      System::Drawing::Font^ font = (dynamic_cast&lt;ListBoxFontItem^&gt;(listBox1-&gt;Items[ e-&gt;Index ]))-&gt;Font;\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( font-&gt;Name, font );\n      \n      // Set the height and width of the item\n      e-&gt;ItemHeight = (int)stringSize.Height;\n      e-&gt;ItemWidth = (int)stringSize.Width;\n   }\n\n   // For efficiency, cache the brush to use for drawing.\n   SolidBrush^ foreColorBrush;\n   void listBox1_DrawItem( Object^ /*sender*/, DrawItemEventArgs^ e )\n   {\n      Brush^ brush;\n\n      // Create the brush using the ForeColor specified by the DrawItemEventArgs\n      if ( foreColorBrush == nullptr )\n            foreColorBrush = gcnew SolidBrush( e-&gt;ForeColor );\n      else\n      if ( foreColorBrush-&gt;Color != e-&gt;ForeColor )\n      {\n         // The control&#39;s ForeColor has changed, so dispose of the cached brush and\n         // create a new one.\n         delete foreColorBrush;\n         foreColorBrush = gcnew SolidBrush( e-&gt;ForeColor );\n      }\n\n      // Select the appropriate brush depending on if the item is selected.\n      // Since State can be a combinateion (bit-flag) of enum values, you can&#39;t use\n      // &quot;==&quot; to compare them.\n      if ( (e-&gt;State &amp; DrawItemState::Selected) == DrawItemState::Selected )\n            brush = SystemBrushes::HighlightText;\n      else\n            brush = foreColorBrush;\n\n      // Perform the painting.\n      System::Drawing::Font^ font = (dynamic_cast&lt;ListBoxFontItem^&gt;(listBox1-&gt;Items[ e-&gt;Index ]))-&gt;Font;\n      e-&gt;DrawBackground();\n      e-&gt;Graphics-&gt;DrawString( font-&gt;Name, font, brush, e-&gt;Bounds );\n      e-&gt;DrawFocusRectangle();\n   }\n\npublic:\n\n   /// &lt;summary&gt;\n   ///  A wrapper class for use with storing Fonts in a ListBox.  Since ListBox uses the\n   ///  ToString() of its items for the text it displays, this class is needed to return\n   ///  the name of the font, rather than its ToString() value.\n   /// &lt;/summary&gt;\n   ref class ListBoxFontItem\n   {\n   public:\n      System::Drawing::Font^ Font;\n      ListBoxFontItem( System::Drawing::Font^ f )\n      {\n         Font = f;\n      }\n\n      virtual String^ ToString() override\n      {\n         return Font-&gt;Name;\n      }\n   };\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"MeasureItemEventArgs#1\"> public class Form1 : System.Windows.Forms.Form\n {\n    private System.Windows.Forms.ListBox listBox1;\n    private System.ComponentModel.Container components = null;\n\n\n    protected override void Dispose(bool disposing)\n    {\n       if( disposing )\n       {\n          if ( components != null ) \n             components.Dispose();\n\n          if ( foreColorBrush != null )\n             foreColorBrush.Dispose();\n       }\n       base.Dispose(disposing);\n    }\n\n#region Windows Form Designer generated code\n    /// &lt;summary&gt;\n    /// Required method for Designer support - do not modify\n    /// the contents of this method with the code editor.\n    /// &lt;/summary&gt;\n    private void InitializeComponent()\n    {\n       this.listBox1 = new System.Windows.Forms.ListBox();\n       this.SuspendLayout();\n       // \n       // listBox1\n       // \n       this.listBox1.DrawMode = System.Windows.Forms.DrawMode.OwnerDrawVariable;\n       this.listBox1.Location = new System.Drawing.Point(16, 48);\n       this.listBox1.Name = &quot;listBox1&quot;;\n       this.listBox1.SelectionMode = System.Windows.Forms.SelectionMode.MultiExtended;\n       this.listBox1.Size = new System.Drawing.Size(256, 134);\n       this.listBox1.TabIndex = 0;\n       this.listBox1.MeasureItem += new System.Windows.Forms.MeasureItemEventHandler(this.listBox1_MeasureItem);\n       this.listBox1.DrawItem += new System.Windows.Forms.DrawItemEventHandler(this.listBox1_DrawItem);\n       // \n       // Form1\n       // \n       this.ClientSize = new System.Drawing.Size(292, 273);\n       this.Controls.AddRange(new System.Windows.Forms.Control[] {\n                                                                    this.listBox1});\n       this.Name = &quot;Form1&quot;;\n       this.Text = &quot;Form1&quot;;\n       this.ResumeLayout(false);\n\n    }\n#endregion\n\n    [STAThread]\n    static void Main() \n    {\n       Application.Run(new Form1());\n    }\n\n    private void listBox1_MeasureItem(object sender, System.Windows.Forms.MeasureItemEventArgs e)\n    {\n       Font font = ((ListBoxFontItem)listBox1.Items[e.Index]).Font;\n       SizeF stringSize = e.Graphics.MeasureString(font.Name, font);\n\n       // Set the height and width of the item\n       e.ItemHeight = (int)stringSize.Height;\n       e.ItemWidth = (int)stringSize.Width;\n    }\n\n    // For efficiency, cache the brush to use for drawing.\n    private SolidBrush foreColorBrush;\n\n    private void listBox1_DrawItem(object sender, System.Windows.Forms.DrawItemEventArgs e)\n    {\n       Brush brush;\n\n       // Create the brush using the ForeColor specified by the DrawItemEventArgs\n       if ( foreColorBrush == null )\n          foreColorBrush = new SolidBrush(e.ForeColor);\n       else if ( foreColorBrush.Color != e.ForeColor )\n       {\n          // The control&#39;s ForeColor has changed, so dispose of the cached brush and\n          // create a new one.\n          foreColorBrush.Dispose();\n          foreColorBrush = new SolidBrush(e.ForeColor);\n       }\n\n       // Select the appropriate brush depending on if the item is selected.\n       // Since State can be a combinateion (bit-flag) of enum values, you can&#39;t use\n       // &quot;==&quot; to compare them.\n       if ( (e.State &amp; DrawItemState.Selected) == DrawItemState.Selected )\n          brush = SystemBrushes.HighlightText;\n       else\n          brush = foreColorBrush;\n\n       // Perform the painting.\n       Font font = ((ListBoxFontItem)listBox1.Items[e.Index]).Font;\n       e.DrawBackground();\n       e.Graphics.DrawString(font.Name, font, brush, e.Bounds);\n       e.DrawFocusRectangle();\n    }\n\n    /// &lt;summary&gt;\n    ///  A wrapper class for use with storing Fonts in a ListBox.  Since ListBox uses the\n    ///  ToString() of its items for the text it displays, this class is needed to return\n    ///  the name of the font, rather than its ToString() value.\n    /// &lt;/summary&gt;\n    public class ListBoxFontItem \n    {\n       public Font Font;\n\n       public ListBoxFontItem(Font f) \n       {\n          Font = f;\n       }\n\n       public override string ToString() \n       {\n          return Font.Name;\n       }\n    }\n }\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This event is sent when the <code>OwnerDraw</code> property of <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a>, <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a>, <a class=\"xref\" href=\"system.windows.forms.checkedlistbox\" data-linktype=\"relative-path\">CheckedListBox</a>, or <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is set to <code>true</code>. It is used to tell the drawing function how to size an item.  </p>\n<p> For information about the event model, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_MeasureItemEventArgs__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_MeasureItemEventArgs__ctor_System_Drawing_Graphics_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MeasureItemEventArgs(Graphics, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.measureitemeventargs\" data-linktype=\"relative-path\">MeasureItemEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public MeasureItemEventArgs (System.Drawing.Graphics graphics, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>graphics</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object being written to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the item for which you need the height or width.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_MeasureItemEventArgs__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_MeasureItemEventArgs__ctor_System_Drawing_Graphics_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MeasureItemEventArgs(Graphics, Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.measureitemeventargs\" data-linktype=\"relative-path\">MeasureItemEventArgs</a> class providing a parameter for the item height.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public MeasureItemEventArgs (System.Drawing.Graphics graphics, int index, int itemHeight);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>graphics</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object being written to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the item for which you need the height or width.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>itemHeight</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height of the item to measure relative to the <code>graphics</code> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_MeasureItemEventArgs_Graphics_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_MeasureItemEventArgs_Graphics\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Graphics</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object to measure against.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Graphics Graphics { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object to use to determine the scale of the item you are drawing.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You use a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object to determine the scale to use when setting the <a class=\"xref\" href=\"system.windows.forms.measureitemeventargs#System_Windows_Forms_MeasureItemEventArgs_ItemHeight_\" data-linktype=\"relative-path\">ItemHeight</a> and <a class=\"xref\" href=\"system.windows.forms.measureitemeventargs#System_Windows_Forms_MeasureItemEventArgs_ItemWidth_\" data-linktype=\"relative-path\">ItemWidth</a>. Different types of graphics objects can have different scales, such as the difference in measurement scale between a monitor screen and a printer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_MeasureItemEventArgs_Index_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_MeasureItemEventArgs_Index\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Index</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the index of the item for which the height and width is needed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Index { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the item to be measured.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_MeasureItemEventArgs_ItemHeight_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_MeasureItemEventArgs_ItemHeight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ItemHeight</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the height of the item specified by the <span class=\"xref\">stem.Windows.Forms.MeasureItemEventArgs.Index*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int ItemHeight { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height of the item measured.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_MeasureItemEventArgs_ItemWidth_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_MeasureItemEventArgs_ItemWidth\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ItemWidth</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the width of the item specified by the <span class=\"xref\">stem.Windows.Forms.MeasureItemEventArgs.Index*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int ItemWidth { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The width of the item measured.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is only used by <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. You use this property to ensure the menu is at least as wide as the widest menu item in the menu list.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.MeasureItemEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MeasureItemEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MeasureItemEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MeasureItemEventArgs.Graphics\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MeasureItemEventArgs.Index\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MeasureItemEventArgs.ItemHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MeasureItemEventArgs.ItemWidth\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"5b7880bf-7ef7-0822-528c-ffe0b4a4cc35\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the MeasureItem event of the , , , and  controls.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.MeasureItemEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.MeasureItemEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.MeasureItemEventArgs","System.Windows.Forms.MeasureItemEventArgs..ctor","System.Windows.Forms.MeasureItemEventArgs.Graphics","System.Windows.Forms.MeasureItemEventArgs.Index","System.Windows.Forms.MeasureItemEventArgs.ItemHeight","System.Windows.Forms.MeasureItemEventArgs.ItemWidth"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.MeasureItemEventArgs","System::Windows::Forms::MeasureItemEventArgs","System.Windows.Forms.MeasureItemEventArgs.#ctor","System::Windows::Forms::MeasureItemEventArgs::#ctor","System.Windows.Forms.MeasureItemEventArgs.Graphics","System::Windows::Forms::MeasureItemEventArgs::Graphics","System.Windows.Forms.MeasureItemEventArgs.Index","System::Windows::Forms::MeasureItemEventArgs::Index","System.Windows.Forms.MeasureItemEventArgs.ItemHeight","System::Windows::Forms::MeasureItemEventArgs::ItemHeight","System.Windows.Forms.MeasureItemEventArgs.ItemWidth","System::Windows::Forms::MeasureItemEventArgs::ItemWidth"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"5b7880bf-7ef7-0822-528c-ffe0b4a4cc35","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/MeasureItemEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MeasureItemEventArgs class | Microsoft Docs","_op_ogTitle":"MeasureItemEventArgs class","description":"Provides data for the MeasureItem event of the , , , and  controls.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.MeasureItemEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.measureitemeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.measureitemeventargs","fileRelativePath":"api/System.Windows.Forms.MeasureItemEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}