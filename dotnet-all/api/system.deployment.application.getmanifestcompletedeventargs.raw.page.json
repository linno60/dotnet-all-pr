{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GetManifestCompletedEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.deployment.application.inplacehostingmanager#System_Deployment_Application_InPlaceHostingManager_GetManifestCompleted\" data-linktype=\"relative-path\">GetManifestCompleted</a> event of <a class=\"xref\" href=\"system.deployment.application.inplacehostingmanager\" data-linktype=\"relative-path\">InPlaceHostingManager</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class GetManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a></span></div><span class=\"lang-csharp\">GetManifestCompletedEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled\" data-linktype=\"relative-path\">Cancelled</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error\" data-linktype=\"relative-path\">Error</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_RaiseExceptionIfNecessary\" data-linktype=\"relative-path\">RaiseExceptionIfNecessary()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState\" data-linktype=\"relative-path\">UserState</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to use <a class=\"xref\" href=\"system.deployment.application.inplacehostingmanager\" data-linktype=\"relative-path\">InPlaceHostingManager</a> to install a ClickOnce application programmatically on a client machine.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Deployment.Application.InPlaceHostingManager#1\">    Dim WithEvents iphm As InPlaceHostingManager = Nothing\n\n    Public Sub InstallApplication(ByVal deployManifestUriStr As String)\n        Try\n            Dim deploymentUri As New Uri(deployManifestUriStr)\n            iphm = New InPlaceHostingManager(deploymentUri, False)\n            MessageBox.Show(&quot;Created the object.&quot;)\n        Catch uriEx As UriFormatException\n            MessageBox.Show(&quot;Cannot install the application: &quot; &amp; _\n                            &quot;The deployment manifest URL supplied is not a valid URL.&quot; &amp; _\n                            &quot;Error: &quot; &amp; uriEx.Message)\n            Return\n        Catch platformEx As PlatformNotSupportedException\n            MessageBox.Show(&quot;Cannot install the application: &quot; &amp; _\n                            &quot;This program requires Windows XP or higher. &quot; &amp; _\n                            &quot;Error: &quot; &amp; platformEx.Message)\n            Return\n        Catch argumentEx As ArgumentException\n            MessageBox.Show(&quot;Cannot install the application: &quot; &amp; _\n                            &quot;The deployment manifest URL supplied is not a valid URL.&quot; &amp; _\n                            &quot;Error: &quot; &amp; argumentEx.Message)\n            Return\n        End Try\n\n        iphm.GetManifestAsync()\n    End Sub\n\n    Private Sub iphm_GetManifestCompleted(ByVal sender As Object, ByVal e As GetManifestCompletedEventArgs) Handles iphm.GetManifestCompleted\n        &#39; Check for an error.\n        If (e.Error IsNot Nothing) Then\n            &#39; Cancel download and install.\n            MessageBox.Show(&quot;Could not download manifest. Error: &quot; &amp; e.Error.Message)\n            Return\n        End If\n\n        &#39; Dim isFullTrust As Boolean = CheckForFullTrust(e.ApplicationManifest)\n\n        &#39; Verify this application can be installed.\n        Try\n            &#39; the true parameter allows InPlaceHostingManager\n            &#39; to grant the permissions requested in the application manifest. \n            iphm.AssertApplicationRequirements(True)\n        Catch ex As Exception\n            MessageBox.Show(&quot;An error occurred while verifying the application. &quot; &amp; _\n                            &quot;Error text: &quot; &amp; ex.Message)\n            Return\n        End Try\n\n        &#39; Use the information from GetManifestCompleted() to confirm \n        &#39; that the user wants to proceed.\n        Dim appInfo As String = &quot;Application Name: &quot; &amp; e.ProductName\n        appInfo &amp;= ControlChars.Lf &amp; &quot;Version: &quot; &amp; e.Version.ToString()\n        appInfo &amp;= ControlChars.Lf &amp; &quot;Support/Help Requests: &quot;\n\n        If Not (e.SupportUri Is Nothing) Then\n            appInfo &amp;= e.SupportUri.ToString()\n        Else\n            appInfo &amp;= &quot;N/A&quot;\n        End If\n\n        appInfo &amp;= ControlChars.Lf &amp; ControlChars.Lf &amp; _\n            &quot;Confirmed that this application can run with its requested permissions.&quot;\n\n        &#39; If isFullTrust Then\n        &#39;    appInfo &amp;= ControlChars.Lf &amp; ControlChars.Lf &amp; _\n        &#39;        &quot;This application requires full trust in order to run.&quot;\n        &#39; End If\n\n        appInfo &amp;= ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Proceed with installation?&quot;\n\n        Dim dr As DialogResult = MessageBox.Show(appInfo, _\n            &quot;Confirm Application Install&quot;, MessageBoxButtons.OKCancel, MessageBoxIcon.Question)\n        If dr &lt;&gt; System.Windows.Forms.DialogResult.OK Then\n            Return\n        End If\n\n        &#39; Download the deployment manifest. \n        &#39; Usually, this shouldn&#39;t throw an exception unless \n        &#39; AssertApplicationRequirements() failed, or you did not call that method\n        &#39; before calling this one.\n        Try\n            iphm.DownloadApplicationAsync()\n        Catch downloadEx As Exception\n            MessageBox.Show(&quot;Cannot initiate download of application. Error: &quot; &amp; downloadEx.Message)\n            Return\n        End Try\n    End Sub\n\n#If 0 Then\n    Private Function CheckForFullTrust(ByVal appManifest As XmlReader) As Boolean\n        Dim isFullTrust As Boolean = False\n\n        If (appManifest Is Nothing) Then\n            Throw New ArgumentNullException(&quot;appManifest cannot be null.&quot;)\n        End If\n\n        Dim xaUnrestricted As XAttribute\n        xaUnrestricted = XDocument.Load(appManifest) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v1}assembly&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}trustInfo&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}security&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}applicationRequestMinimum&quot;) _\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}PermissionSet&quot;) _\n            .Attribute(&quot;Unrestricted&quot;)  &#39; Attributes never have a namespace\n\n\n        If xaUnrestricted Then\n            If xaUnrestricted.Value = &quot;true&quot; Then\n                Return True\n            End If\n        End If\n\n        Return False\n    End Function\n#End If\n\n    Private Sub iphm_DownloadProgressChanged(ByVal sender As Object, ByVal e As DownloadProgressChangedEventArgs) Handles iphm.DownloadProgressChanged\n        &#39; you can show percentage of task completed using e.ProgressPercentage\n    End Sub\n\n    Private Sub iphm_DownloadApplicationCompleted(ByVal sender As Object, ByVal e As DownloadApplicationCompletedEventArgs) Handles iphm.DownloadApplicationCompleted\n        &#39; Check for an error.\n        If (e.Error IsNot Nothing) Then\n            &#39; Cancel download and install.\n            MessageBox.Show(&quot;Could not download and install application. Error: &quot; &amp; e.Error.Message)\n            Return\n        End If\n\n        &#39; Inform the user that their application is ready for use. \n        MessageBox.Show(&quot;Application installed! You may now run it from the Start menu.&quot;)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Deployment.Application.InPlaceHostingManager#1\">InPlaceHostingManager iphm = null;\n\npublic void InstallApplication(string deployManifestUriStr)\n{\n    try\n    {\n        Uri deploymentUri = new Uri(deployManifestUriStr);\n        iphm = new InPlaceHostingManager(deploymentUri, false);\n    }\n    catch (UriFormatException uriEx)\n    {\n        MessageBox.Show(&quot;Cannot install the application: &quot; + \n            &quot;The deployment manifest URL supplied is not a valid URL. &quot; +\n            &quot;Error: &quot; + uriEx.Message);\n        return;\n    }\n    catch (PlatformNotSupportedException platformEx)\n    {\n        MessageBox.Show(&quot;Cannot install the application: &quot; + \n            &quot;This program requires Windows XP or higher. &quot; +\n            &quot;Error: &quot; + platformEx.Message);\n        return;\n    }\n    catch (ArgumentException argumentEx)\n    {\n        MessageBox.Show(&quot;Cannot install the application: &quot; + \n            &quot;The deployment manifest URL supplied is not a valid URL. &quot; +\n            &quot;Error: &quot; + argumentEx.Message);\n        return;\n    }\n\n    iphm.GetManifestCompleted += new EventHandler&lt;GetManifestCompletedEventArgs&gt;(iphm_GetManifestCompleted);\n    iphm.GetManifestAsync();\n}\n\nvoid iphm_GetManifestCompleted(object sender, GetManifestCompletedEventArgs e)\n{\n    // Check for an error.\n    if (e.Error != null)\n    {\n        // Cancel download and install.\n        MessageBox.Show(&quot;Could not download manifest. Error: &quot; + e.Error.Message);\n        return;\n    }\n\n    // bool isFullTrust = CheckForFullTrust(e.ApplicationManifest);\n\n    // Verify this application can be installed.\n    try\n    {\n        // the true parameter allows InPlaceHostingManager\n        // to grant the permissions requested in the applicaiton manifest.\n        iphm.AssertApplicationRequirements(true) ; \n    }\n    catch (Exception ex)\n    {\n        MessageBox.Show(&quot;An error occurred while verifying the application. &quot; +\n            &quot;Error: &quot; + ex.Message);\n        return;\n    }\n\n    // Use the information from GetManifestCompleted() to confirm \n    // that the user wants to proceed.\n    string appInfo = &quot;Application Name: &quot; + e.ProductName;\n    appInfo += &quot;\\nVersion: &quot; + e.Version;\n    appInfo += &quot;\\nSupport/Help Requests: &quot; + (e.SupportUri != null ?\n        e.SupportUri.ToString() : &quot;N/A&quot;);\n    appInfo += &quot;\\n\\nConfirmed that this application can run with its requested permissions.&quot;;\n    // if (isFullTrust)\n    // appInfo += &quot;\\n\\nThis application requires full trust in order to run.&quot;;\n    appInfo += &quot;\\n\\nProceed with installation?&quot;;\n\n    DialogResult dr = MessageBox.Show(appInfo, &quot;Confirm Application Install&quot;,\n        MessageBoxButtons.OKCancel, MessageBoxIcon.Question);\n    if (dr != System.Windows.Forms.DialogResult.OK)\n    {\n        return;\n    }\n\n    // Download the deployment manifest. \n    iphm.DownloadProgressChanged += new EventHandler&lt;DownloadProgressChangedEventArgs&gt;(iphm_DownloadProgressChanged);\n    iphm.DownloadApplicationCompleted += new EventHandler&lt;DownloadApplicationCompletedEventArgs&gt;(iphm_DownloadApplicationCompleted);\n\n    try\n    {\n        // Usually this shouldn&#39;t throw an exception unless AssertApplicationRequirements() failed, \n        // or you did not call that method before calling this one.\n        iphm.DownloadApplicationAsync();\n    }\n    catch (Exception downloadEx)\n    {\n        MessageBox.Show(&quot;Cannot initiate download of application. Error: &quot; +\n            downloadEx.Message);\n        return;\n    }\n}\n\n/*\nprivate bool CheckForFullTrust(XmlReader appManifest)\n{\n    if (appManifest == null)\n    {\n        throw (new ArgumentNullException(&quot;appManifest cannot be null.&quot;));\n    }\n\n    XAttribute xaUnrestricted =\n        XDocument.Load(appManifest)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v1}assembly&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}trustInfo&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}security&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}applicationRequestMinimum&quot;)\n            .Element(&quot;{urn:schemas-microsoft-com:asm.v2}PermissionSet&quot;)\n            .Attribute(&quot;Unrestricted&quot;); // Attributes never have a namespace\n\n    if (xaUnrestricted != null)\n        if (xaUnrestricted.Value == &quot;true&quot;)\n            return true;\n\n    return false;\n}\n*/\n\nvoid iphm_DownloadApplicationCompleted(object sender, DownloadApplicationCompletedEventArgs e)\n{\n    // Check for an error.\n    if (e.Error != null)\n    {\n        // Cancel download and install.\n        MessageBox.Show(&quot;Could not download and install application. Error: &quot; + e.Error.Message);\n        return;\n    }\n\n    // Inform the user that their application is ready for use. \n    MessageBox.Show(&quot;Application installed! You may now run it from the Start menu.&quot;);\n}\n\nvoid iphm_DownloadProgressChanged(object sender, DownloadProgressChangedEventArgs e)\n{\n    // you can show percentage of task completed using e.ProgressPercentage\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use GetManifestCompletedEventArgs to obtain information about a ClickOnce application after the deployment and application manifests have been downloaded.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_ActivationContext\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ActivationContext</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the context for the current ClickOnce application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ActivationContext ActivationContext { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> object representing the context for the current application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_ApplicationIdentity\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplicationIdentity</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a description of the ClickOnce application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ApplicationIdentity ApplicationIdentity { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.applicationidentity\" data-linktype=\"relative-path\">ApplicationIdentity</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.applicationidentity\" data-linktype=\"relative-path\">ApplicationIdentity</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_ApplicationManifest\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplicationManifest</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the ClickOnce application manifest for this deployment.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlReader ApplicationManifest { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> representing the application manifest.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use this variable to grab any information you need from the application manifest, such as a list of dependencies, trust information, and so on. For more information on the structure of this document, see <a href=\"../topic/clickonce%20application%20manifest\" data-linktype=\"relative-path\">ClickOnce Application Manifest</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_DeploymentManifest\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeploymentManifest</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the ClickOnce deployment manifest for this deployment.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlReader DeploymentManifest { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> representing the deployment manifest.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_IsCached\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsCached</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this ClickOnce application is cached.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsCached { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the application is cached; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_LogFilePath\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LogFilePath</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the location of the ClickOnce error log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string LogFilePath { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the location of the ClickOnce error log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_ProductName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProductName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the name of the ClickOnce application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ProductName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representing the product name of the ClickOnce application, as stored in the assembly metadata of the application&#39;s main executable file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_SubscriptionIdentity\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SubscriptionIdentity</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a string identifying the subscription.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string SubscriptionIdentity { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string with information identifying the subscription.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_SupportUri\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SupportUri</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the location of a Web page users can visit to obtain product support for the ClickOnce application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Uri SupportUri { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the value found in the <code>supportUrl</code> attribute of the deployment manifest&#39;s <code><description></description></code> tag. For more information, see <a href=\"../topic/clickonce%20deployment%20manifest\" data-linktype=\"relative-path\">ClickOnce Deployment Manifest</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_GetManifestCompletedEventArgs_Version\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Version</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the version of the update for the ClickOnce application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Version Version { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> representing the version number contained within the downloaded manifest.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Deployment.Application.GetManifestCompletedEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.IsCached\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.ProductName\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs.Version\">\r\n<meta name=\"APILocation\" content=\"System.Deployment.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"6cee19ac-ac0c-f817-6418-a406df169819\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event of .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.deployment.application/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Deployment.Application.GetManifestCompletedEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Deployment.Application.GetManifestCompletedEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Deployment.Application.GetManifestCompletedEventArgs","System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext","System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity","System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest","System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest","System.Deployment.Application.GetManifestCompletedEventArgs.IsCached","System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath","System.Deployment.Application.GetManifestCompletedEventArgs.ProductName","System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity","System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri","System.Deployment.Application.GetManifestCompletedEventArgs.Version"],"api_location":["System.Deployment.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Deployment.Application.GetManifestCompletedEventArgs","System::Deployment::Application::GetManifestCompletedEventArgs","System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext","System::Deployment::Application::GetManifestCompletedEventArgs::ActivationContext","System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity","System::Deployment::Application::GetManifestCompletedEventArgs::ApplicationIdentity","System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest","System::Deployment::Application::GetManifestCompletedEventArgs::ApplicationManifest","System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest","System::Deployment::Application::GetManifestCompletedEventArgs::DeploymentManifest","System.Deployment.Application.GetManifestCompletedEventArgs.IsCached","System::Deployment::Application::GetManifestCompletedEventArgs::IsCached","System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath","System::Deployment::Application::GetManifestCompletedEventArgs::LogFilePath","System.Deployment.Application.GetManifestCompletedEventArgs.ProductName","System::Deployment::Application::GetManifestCompletedEventArgs::ProductName","System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity","System::Deployment::Application::GetManifestCompletedEventArgs::SubscriptionIdentity","System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri","System::Deployment::Application::GetManifestCompletedEventArgs::SupportUri","System.Deployment.Application.GetManifestCompletedEventArgs.Version","System::Deployment::Application::GetManifestCompletedEventArgs::Version"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"6cee19ac-ac0c-f817-6418-a406df169819","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Deployment.Application/GetManifestCompletedEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GetManifestCompletedEventArgs class | Microsoft Docs","_op_ogTitle":"GetManifestCompletedEventArgs class","description":"Provides data for the  event of .\n","toc_asset_id":"api/_splitted/System.Deployment.Application/toc.json","toc_rel":"_splitted/System.Deployment.Application/toc.json","source_url":"","ms.assetid":"System.Deployment.Application.GetManifestCompletedEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.deployment.application.getmanifestcompletedeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.deployment.application.getmanifestcompletedeventargs","fileRelativePath":"api/System.Deployment.Application.GetManifestCompletedEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}