{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Binding</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the simple binding between the property value of an object and the property value of a control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListBindingConverter))]\npublic class Binding</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">Binding</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example creates a Windows Form with several controls that demonstrate simple data binding. The example creates a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with two tables named <code>Customers</code> and <code>Orders</code>, and a <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> named <code>custToOrders</code>. Four controls (a <a class=\"xref\" href=\"system.windows.forms.datetimepicker\" data-linktype=\"relative-path\">DateTimePicker</a> and three <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> controls) are data bound to columns in the tables. For each control, the example creates and adds a Binding to the control through the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings_\" data-linktype=\"relative-path\">DataBindings</a> property. The example returns a <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> for each table through the form&#39;s <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a>. Four <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls increment or decrement the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> property on the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> objects.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Binding Example#1\">using System;\nusing System.Data;\nusing System.Drawing;\nusing System.Globalization;\nusing System.Windows.Forms;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n   private System.ComponentModel.Container components;\n   private Button button1;\n   private Button button2;\n   private Button button3;\n   private Button button4;\n   private TextBox text1;\n   private TextBox text2;\n   private TextBox text3;\n\n   private BindingManagerBase bmCustomers;\n   private BindingManagerBase bmOrders;\n   private DataSet ds;\n   private DateTimePicker DateTimePicker1;\n\n   public Form1()\n   {\n      // Required for Windows Form Designer support.\n      InitializeComponent();\n      // Call SetUp to bind the controls.\n      SetUp();\n   }\n \n   private void InitializeComponent()\n   {\n      // Create the form and its controls.\n      this.components = new System.ComponentModel.Container();\n      this.button1 = new System.Windows.Forms.Button();\n      this.button2 = new System.Windows.Forms.Button();\n      this.button3 = new System.Windows.Forms.Button();\n      this.button4 = new System.Windows.Forms.Button();\n      \n      this.text1= new System.Windows.Forms.TextBox();\n      this.text2= new System.Windows.Forms.TextBox();\n      this.text3= new System.Windows.Forms.TextBox();\n      \n      this.DateTimePicker1 = new DateTimePicker();\n      \n      this.Text = &quot;Binding Sample&quot;;\n      this.ClientSize = new System.Drawing.Size(450, 200);\n      \n      button1.Location = new System.Drawing.Point(24, 16);\n      button1.Size = new System.Drawing.Size(64, 24);\n      button1.Text = &quot;&lt;&quot;;\n      button1.Click+=new System.EventHandler(button1_Click);\n\n      button2.Location = new System.Drawing.Point(90, 16);\n      button2.Size = new System.Drawing.Size(64, 24);\n      button2.Text = &quot;&gt;&quot;;\n      button2.Click+=new System.EventHandler(button2_Click);\n\n      button3.Location = new System.Drawing.Point(90, 100);\n      button3.Size = new System.Drawing.Size(64, 24);\n      button3.Text = &quot;&lt;&quot;;\n      button3.Click+=new System.EventHandler(button3_Click);\n\n      button4.Location = new System.Drawing.Point(150, 100);\n      button4.Size = new System.Drawing.Size(64, 24);\n      button4.Text = &quot;&gt;&quot;;\n      button4.Click+=new System.EventHandler(button4_Click);\n\n      text1.Location = new System.Drawing.Point(24, 50);\n      text1.Size = new System.Drawing.Size(150, 24);\n\n      text2.Location = new System.Drawing.Point(190, 50);\n      text2.Size = new System.Drawing.Size(150, 24);\n\n      text3.Location = new System.Drawing.Point(290, 150);\n      text3.Size = new System.Drawing.Size(150, 24);\n      \n      DateTimePicker1.Location = new System.Drawing.Point(90, 150);\n      DateTimePicker1.Size = new System.Drawing.Size(200, 800);\n      \n      this.Controls.Add(button1);\n      this.Controls.Add(button2);\n      this.Controls.Add(button3);\n      this.Controls.Add(button4);\n      this.Controls.Add(text1);\n      this.Controls.Add(text2);\n      this.Controls.Add(text3);\n      this.Controls.Add(DateTimePicker1);\n   }\n\n   protected override void Dispose( bool disposing ){\n      if( disposing ){\n         if (components != null){\n            components.Dispose();}\n      }\n      base.Dispose( disposing );\n   }\n   public static void Main()\n   {\n      Application.Run(new Form1());\n   }\n   \n   private void SetUp()\n   {\n      // Create a DataSet with two tables and one relation.\n      MakeDataSet();\n      BindControls();\n   }\n\n   protected void BindControls()\n   {\n      /* Create two Binding objects for the first two TextBox \n         controls. The data-bound property for both controls \n         is the Text property. The data source is a DataSet \n         (ds). The data member is the  \n         &quot;TableName.ColumnName&quot; string. */\n      text1.DataBindings.Add(new Binding\n      (&quot;Text&quot;, ds, &quot;customers.custName&quot;));\n      text2.DataBindings.Add(new Binding\n      (&quot;Text&quot;, ds, &quot;customers.custID&quot;));\n      \n      /* Bind the DateTimePicker control by adding a new Binding. \n         The data member of the DateTimePicker is a \n         TableName.RelationName.ColumnName string. */\n      DateTimePicker1.DataBindings.Add(new \n      Binding(&quot;Value&quot;, ds, &quot;customers.CustToOrders.OrderDate&quot;));\n\n      /* Add event delegates for the Parse and Format events to a \n         new Binding object, and add the object to the third \n         TextBox control&#39;s BindingsCollection. The delegates \n         must be added before adding the Binding to the \n         collection; otherwise, no formatting occurs until \n         the Current object of the BindingManagerBase for \n         the data source changes. */\n         Binding b = new Binding\n         (&quot;Text&quot;, ds, &quot;customers.custToOrders.OrderAmount&quot;);\n      b.Parse+=new ConvertEventHandler(CurrencyStringToDecimal);\n      b.Format+=new ConvertEventHandler(DecimalToCurrencyString);\n      text3.DataBindings.Add(b);\n\n      // Get the BindingManagerBase for the Customers table. \n      bmCustomers = this.BindingContext [ds, &quot;Customers&quot;];\n\n      /* Get the BindingManagerBase for the Orders table using the \n         RelationName. */ \n      bmOrders = this.BindingContext[ds, &quot;customers.CustToOrders&quot;];\n   }\n\n   private void DecimalToCurrencyString(object sender, ConvertEventArgs cevent)\n   {\n      /* This method is the Format event handler. Whenever the \n         control displays a new value, the value is converted from \n         its native Decimal type to a string. The ToString method \n         then formats the value as a Currency, by using the \n         formatting character &quot;c&quot;. */\n\n      // The application can only convert to string type. \n      if(cevent.DesiredType != typeof(string)) return;\n\n      cevent.Value = ((decimal) cevent.Value).ToString(&quot;c&quot;);\n   }\n\n   private void CurrencyStringToDecimal(object sender, ConvertEventArgs cevent)\n   {   \n      /* This method is the Parse event handler. The Parse event \n         occurs whenever the displayed value changes. The static \n         ToDecimal method of the Convert class converts the \n         value back to its native Decimal type. */\n\n      // Can only convert to decimal type.\n      if(cevent.DesiredType != typeof(decimal)) return;\n\n      cevent.Value = Decimal.Parse(cevent.Value.ToString(),\n      \tNumberStyles.Currency, null);\n\n      /* To see that no precision is lost, print the unformatted \n         value. For example, changing a value to &quot;10.0001&quot; \n         causes the control to display &quot;10.00&quot;, but the \n         unformatted value remains &quot;10.0001&quot;. */\n      Console.WriteLine(cevent.Value);\n   }\n\n   private void button1_Click(object sender, System.EventArgs e)\n   {\n      // Go to the previous item in the Customer list.\n      bmCustomers.Position -= 1;\n   }\n\n   private void button2_Click(object sender, System.EventArgs e)\n   {\n      // Go to the next item in the Customer list.\n      bmCustomers.Position += 1;\n   }\n    \n   private void button3_Click(object sender, System.EventArgs e)\n   {\n      // Go to the previous item in the Orders list.\n      bmOrders.Position-=1;\n   }\n\n   private void button4_Click(object sender, System.EventArgs e)\n   {\n      // Go to the next item in the Orders list.\n      bmOrders.Position+=1;\n   }\n\n   // Create a DataSet with two tables and populate it.\n   private void MakeDataSet()\n   {\n      // Create a DataSet.\n      ds = new DataSet(&quot;myDataSet&quot;);\n      \n      // Create two DataTables.\n      DataTable tCust = new DataTable(&quot;Customers&quot;);\n      DataTable tOrders = new DataTable(&quot;Orders&quot;);\n\n      // Create two columns, and add them to the first table.\n      DataColumn cCustID = new DataColumn(&quot;CustID&quot;, typeof(int));\n      DataColumn cCustName = new DataColumn(&quot;CustName&quot;);\n      tCust.Columns.Add(cCustID);\n      tCust.Columns.Add(cCustName);\n\n      // Create three columns, and add them to the second table.\n      DataColumn cID = \n         new DataColumn(&quot;CustID&quot;, typeof(int));\n      DataColumn cOrderDate = \n         new DataColumn(&quot;orderDate&quot;,typeof(DateTime));\n      DataColumn cOrderAmount = \n         new DataColumn(&quot;OrderAmount&quot;, typeof(decimal));\n      tOrders.Columns.Add(cOrderAmount);\n      tOrders.Columns.Add(cID);\n      tOrders.Columns.Add(cOrderDate);\n\n      // Add the tables to the DataSet.\n      ds.Tables.Add(tCust);\n      ds.Tables.Add(tOrders);\n\n      // Create a DataRelation, and add it to the DataSet.\n      DataRelation dr = new DataRelation\n      (&quot;custToOrders&quot;, cCustID , cID);\n      ds.Relations.Add(dr);\n   \n      /* Populate the tables. For each customer and order, \n         create two DataRow variables. */\n      DataRow newRow1;\n      DataRow newRow2;\n\n      // Create three customers in the Customers Table.\n      for(int i = 1; i &lt; 4; i++)\n      {\n         newRow1 = tCust.NewRow();\n         newRow1[&quot;custID&quot;] = i;\n         // Add the row to the Customers table.\n         tCust.Rows.Add(newRow1);\n      }\n      // Give each customer a distinct name.\n      tCust.Rows[0][&quot;custName&quot;] = &quot;Alpha&quot;;\n      tCust.Rows[1][&quot;custName&quot;] = &quot;Beta&quot;;\n      tCust.Rows[2][&quot;custName&quot;] = &quot;Omega&quot;;\n      \n      // For each customer, create five rows in the Orders table.\n      for(int i = 1; i &lt; 4; i++)\n      {\n         for(int j = 1; j &lt; 6; j++)\n         {\n            newRow2 = tOrders.NewRow();\n            newRow2[&quot;CustID&quot;]= i;\n            newRow2[&quot;orderDate&quot;]= new DateTime(2001, i, j * 2);\n            newRow2[&quot;OrderAmount&quot;] = i * 10 + j  * .1;\n            // Add the row to the Orders table.\n            tOrders.Rows.Add(newRow2);\n         }\n      }\n   }\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Binding Example#1\">#using &lt;system.dll&gt;\n#using &lt;system.data.dll&gt;\n#using &lt;system.drawing.dll&gt;\n#using &lt;system.windows.forms.dll&gt;\n#using &lt;system.xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Drawing;\nusing namespace System::Globalization;\nusing namespace System::Windows::Forms;\n\n#define null 0L\npublic ref class Form1: public Form\n{\nprivate:\n   System::ComponentModel::Container^ components;\n   Button^ button1;\n   Button^ button2;\n   Button^ button3;\n   Button^ button4;\n   TextBox^ text1;\n   TextBox^ text2;\n   TextBox^ text3;\n   BindingManagerBase^ bmCustomers;\n   BindingManagerBase^ bmOrders;\n   DataSet^ ds;\n   DateTimePicker^ DateTimePicker1;\n\npublic:\n   Form1()\n   {\n      // Required for Windows Form Designer support.\n      InitializeComponent();\n\n      // Call SetUp to bind the controls.\n      SetUp();\n   }\n\nprivate:\n   void InitializeComponent()\n   {\n      // Create the form and its controls.\n      this-&gt;components = gcnew System::ComponentModel::Container;\n      this-&gt;button1 = gcnew Button;\n      this-&gt;button2 = gcnew Button;\n      this-&gt;button3 = gcnew Button;\n      this-&gt;button4 = gcnew Button;\n      this-&gt;text1 = gcnew TextBox;\n      this-&gt;text2 = gcnew TextBox;\n      this-&gt;text3 = gcnew TextBox;\n      this-&gt;DateTimePicker1 = gcnew DateTimePicker;\n      this-&gt;Text =  &quot;Binding Sample&quot;;\n      this-&gt;ClientSize = System::Drawing::Size( 450, 200 );\n      button1-&gt;Location = System::Drawing::Point( 24, 16 );\n      button1-&gt;Size = System::Drawing::Size( 64, 24 );\n      button1-&gt;Text =  &quot;&lt;&quot;;\n      button1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::button1_Click );\n      button2-&gt;Location = System::Drawing::Point( 90, 16 );\n      button2-&gt;Size = System::Drawing::Size( 64, 24 );\n      button2-&gt;Text =  &quot;&gt;&quot;;\n      button2-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::button2_Click );\n      button3-&gt;Location = System::Drawing::Point( 90, 100 );\n      button3-&gt;Size = System::Drawing::Size( 64, 24 );\n      button3-&gt;Text =  &quot;&lt;&quot;;\n      button3-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::button3_Click );\n      button4-&gt;Location = System::Drawing::Point( 150, 100 );\n      button4-&gt;Size = System::Drawing::Size( 64, 24 );\n      button4-&gt;Text =  &quot;&gt;&quot;;\n      button4-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::button4_Click );\n      text1-&gt;Location = System::Drawing::Point( 24, 50 );\n      text1-&gt;Size = System::Drawing::Size( 150, 24 );\n      text2-&gt;Location = System::Drawing::Point( 190, 50 );\n      text2-&gt;Size = System::Drawing::Size( 150, 24 );\n      text3-&gt;Location = System::Drawing::Point( 290, 150 );\n      text3-&gt;Size = System::Drawing::Size( 150, 24 );\n      DateTimePicker1-&gt;Location = System::Drawing::Point( 90, 150 );\n      DateTimePicker1-&gt;Size = System::Drawing::Size( 200, 800 );\n      this-&gt;Controls-&gt;Add( button1 );\n      this-&gt;Controls-&gt;Add( button2 );\n      this-&gt;Controls-&gt;Add( button3 );\n      this-&gt;Controls-&gt;Add( button4 );\n      this-&gt;Controls-&gt;Add( text1 );\n      this-&gt;Controls-&gt;Add( text2 );\n      this-&gt;Controls-&gt;Add( text3 );\n      this-&gt;Controls-&gt;Add( DateTimePicker1 );\n   }\n\npublic:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void SetUp()\n   {\n      // Create a DataSet with two tables and one relation.\n      MakeDataSet();\n      BindControls();\n   }\n\nprotected:\n   void BindControls()\n   {\n      /* Create two Binding objects for the first two TextBox \n              controls. The data-bound property for both controls \n              is the Text property. The data source is a DataSet \n              (ds). The data member is the \n              &quot;TableName.ColumnName&quot; string. */\n      text1-&gt;DataBindings-&gt;Add( gcnew Binding( &quot;Text&quot;,ds,&quot;customers.custName&quot; ) );\n      text2-&gt;DataBindings-&gt;Add( gcnew Binding( &quot;Text&quot;,ds,&quot;customers.custID&quot; ) );\n\n      /* Bind the DateTimePicker control by adding a new Binding. \n              The data member of the DateTimePicker is a \n              TableName.RelationName.ColumnName string. */\n      DateTimePicker1-&gt;DataBindings-&gt;Add( gcnew Binding( &quot;Value&quot;,ds,&quot;customers.CustToOrders.OrderDate&quot; ) );\n\n      /* Add event delegates for the Parse and Format events to a \n              new Binding object, and add the object to the third \n              TextBox control&#39;s BindingsCollection. The delegates \n              must be added before adding the Binding to the \n              collection; otherwise, no formatting occurs until \n              the Current object of the BindingManagerBase for \n              the data source changes. */\n      Binding^ b = gcnew Binding( &quot;Text&quot;,ds,&quot;customers.custToOrders.OrderAmount&quot; );\n      b-&gt;Parse += gcnew ConvertEventHandler( this, &amp;Form1::CurrencyStringToDecimal );\n      b-&gt;Format += gcnew ConvertEventHandler( this, &amp;Form1::DecimalToCurrencyString );\n      text3-&gt;DataBindings-&gt;Add( b );\n\n      // Get the BindingManagerBase for the Customers table. \n      bmCustomers = this-&gt;BindingContext[ ds, &quot;Customers&quot; ];\n\n      /* Get the BindingManagerBase for the Orders table using the \n              RelationName. */\n      bmOrders = this-&gt;BindingContext[ ds, &quot;customers.CustToOrders&quot; ];\n   }\n\nprivate:\n   void DecimalToCurrencyString( Object^ /*sender*/, ConvertEventArgs^ cevent )\n   {\n      /* This method is the Format event handler. Whenever the \n              control displays a new value, the value is converted from \n              its native Decimal type to a string. The ToString method \n              then formats the value as a Currency, by using the \n              formatting character &quot;c&quot;. */\n      // The application can only convert to string type. \n      if ( cevent-&gt;DesiredType != String::typeid )\n            return;\n\n      cevent-&gt;Value = (dynamic_cast&lt;Decimal^&gt;(cevent-&gt;Value))-&gt;ToString( &quot;c&quot; );\n   }\n\n   void CurrencyStringToDecimal( Object^ /*sender*/, ConvertEventArgs^ cevent )\n   {\n      /* This method is the Parse event handler. The Parse event \n              occurs whenever the displayed value changes. The static \n              ToDecimal method of the Convert class converts the \n              value back to its native Decimal type. */\n      // Can only convert to Decimal type.\n      if ( cevent-&gt;DesiredType != Decimal::typeid )\n            return;\n\n      cevent-&gt;Value = Decimal::Parse( cevent-&gt;Value-&gt;ToString(), NumberStyles::Currency, nullptr );\n      \n      /* To see that no precision is lost, print the unformatted \n              value. For example, changing a value to &quot;10.0001&quot; \n              causes the control to display &quot;10.00&quot;, but the \n              unformatted value remains &quot;10.0001&quot;. */\n      Console::WriteLine( cevent-&gt;Value );\n   }\n\nprivate:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Go to the previous item in the Customer list.\n      bmCustomers-&gt;Position -= 1;\n   }\n\n   void button2_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Go to the next item in the Customer list.\n      bmCustomers-&gt;Position += 1;\n   }\n\n   void button3_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Go to the previous item in the Orders list.\n      bmOrders-&gt;Position = bmOrders-&gt;Position - 1;\n   }\n\n   void button4_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Go to the next item in the Orders list.\n      bmOrders-&gt;Position = bmOrders-&gt;Position + 1;\n   }\n\nprivate:\n\n   // Create a DataSet with two tables and populate it.\n   void MakeDataSet()\n   {\n      // Create a DataSet.\n      ds = gcnew DataSet( &quot;myDataSet&quot; );\n\n      // Create two DataTables.\n      DataTable^ tCust = gcnew DataTable( &quot;Customers&quot; );\n      DataTable^ tOrders = gcnew DataTable( &quot;Orders&quot; );\n\n      // Create two columns, and add them to the first table.\n      DataColumn^ cCustID = gcnew DataColumn( &quot;CustID&quot;,Int32::typeid );\n      DataColumn^ cCustName = gcnew DataColumn( &quot;CustName&quot; );\n      tCust-&gt;Columns-&gt;Add( cCustID );\n      tCust-&gt;Columns-&gt;Add( cCustName );\n\n      // Create three columns, and add them to the second table.\n      DataColumn^ cID = gcnew DataColumn( &quot;CustID&quot;,Int32::typeid );\n      DataColumn^ cOrderDate = gcnew DataColumn( &quot;orderDate&quot;,DateTime::typeid );\n      DataColumn^ cOrderAmount = gcnew DataColumn( &quot;OrderAmount&quot;,Decimal::typeid );\n      tOrders-&gt;Columns-&gt;Add( cOrderAmount );\n      tOrders-&gt;Columns-&gt;Add( cID );\n      tOrders-&gt;Columns-&gt;Add( cOrderDate );\n\n      // Add the tables to the DataSet.\n      ds-&gt;Tables-&gt;Add( tCust );\n      ds-&gt;Tables-&gt;Add( tOrders );\n\n      // Create a DataRelation, and add it to the DataSet.\n      DataRelation^ dr = gcnew DataRelation( &quot;custToOrders&quot;,cCustID,cID );\n      ds-&gt;Relations-&gt;Add( dr );\n      \n      /* Populate the tables. For each customer and order, \n              create two DataRow variables. */\n      DataRow^ newRow1; // = new DataRow();\n\n      DataRow^ newRow2; // = new DataRow();\n\n      // Create three customers in the Customers Table.\n      for ( int i = 1; i &lt; 4; i++ )\n      {\n         newRow1 = tCust-&gt;NewRow();\n         newRow1[ &quot;custID&quot; ] = i;\n         \n         // Add the row to the Customers table.\n         tCust-&gt;Rows-&gt;Add( newRow1 );\n\n      }\n      tCust-&gt;Rows[ 0 ][ &quot;custName&quot; ] = &quot;Alpha&quot;;\n      tCust-&gt;Rows[ 1 ][ &quot;custName&quot; ] = &quot;Beta&quot;;\n      tCust-&gt;Rows[ 2 ][ &quot;custName&quot; ] = &quot;Omega&quot;;\n      \n      // For each customer, create five rows in the Orders table.\n      for ( int i = 1; i &lt; 4; i++ )\n      {\n         for ( int j = 1; j &lt; 6; j++ )\n         {\n            newRow2 = tOrders-&gt;NewRow();\n            newRow2[ &quot;CustID&quot; ] = i;\n            newRow2[ &quot;orderDate&quot; ] = System::DateTime( 2001, i, j * 2 );\n            newRow2[ &quot;OrderAmount&quot; ] = i * 10 + j * .1;\n            \n            // Add the row to the Orders table.\n            tOrders-&gt;Rows-&gt;Add( newRow2 );\n         }\n      }\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Binding Example#1\">Imports System\nImports System.ComponentModel\nImports System.Data\nImports System.Drawing\nImports System.Globalization\nImports System.Windows.Forms\n\nPublic Class Form1\n   Inherits Form\n\n   Private components As Container\n   Private button1 As Button\n   Private button2 As Button\n   Private button3 As Button\n   Private button4 As Button\n   Private text1 As TextBox\n   Private text2 As TextBox\n   Private text3 As TextBox\n\n   Private bmCustomers As BindingManagerBase\n   Private bmOrders As BindingManagerBase\n   Private ds As DataSet\n   Private DateTimePicker1 As DateTimePicker\n   \n   Public Sub New\n      &#39; Required for Windows Form Designer support.\n      InitializeComponent\n      &#39; Call SetUp to bind the controls.\n      SetUp\n   End Sub\n\n   Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n      If disposing Then\n         If (components IsNot Nothing) Then\n            components.Dispose()\n         End If\n      End If\n      MyBase.Dispose(disposing)\n    End Sub\n\n\n   Private Sub InitializeComponent\n      &#39; Create the form and its controls.\n      With Me\n         .components = New Container\n         .button1 = New Button\n         .button2 = New Button\n         .button3 = New Button\n         .button4 = New Button\n         .text1 = New TextBox\n         .text2 = New TextBox\n         .text3 = New TextBox\n\n         .DateTimePicker1 = New DateTimePicker\n         \n         .Text = &quot;Binding Sample&quot;\n         .ClientSize = New Size(450, 200)\n\n         With .button1\n            .Location = New Point(24, 16)\n            .Size = New Size(64, 24)\n            .Text = &quot;&lt;&quot;\n            AddHandler button1.click, AddressOf button1_Click\n         End With\n         \n         \n         With .button2\n            .Location = New Point(90, 16)\n            .Size = New Size(64, 24)\n            .Text = &quot;&gt;&quot;\n            AddHandler button2.click, AddressOf button2_Click\n         End With\n         \n         With .button3\n            .Location = New Point(90, 100)\n            .Size = New Size(64, 24)\n            .Text = &quot;&gt;&quot;\n            AddHandler button3.click, AddressOf button3_Click\n         End With\n\n         With .button4\n            .Location = New Point(150, 100)\n            .Size = New Size(64, 24)\n            .Text = &quot;&gt;&quot;\n            AddHandler button4.click, AddressOf button4_Click\n         End With\n\n         With .text1\n            .Location = New Point(24, 50)\n            .Size = New Size(150, 24)\n         End With\n\n         With .text2\n            .Location = New Point(190, 50)\n            .Size = New Size(150, 24)\n         End With\n\n         With .text3\n            .Location = New Point(290, 150)\n            .Size = New Size(150, 24)\n         End With\n\n            With .DateTimePicker1\n               .Location = New Point(90, 150)\n               .Size = New Size(200, 800)\n            End With\n\n            With .Controls\n            .Add(button1)\n            .Add(button2)\n            .Add(button3)\n            .Add(button4)\n            .Add(text1)\n            .Add(text2)\n            .Add(text3)\n            .Add(DateTimePicker1)\n            End With\n      End With\n   End Sub\n      \n   Public Shared Sub Main\n      Application.Run(new Form1)\n   End Sub\n\n   Private Sub SetUp\n      &#39; Create a DataSet with two tables and one relation.\n      MakeDataSet\n      BindControls\n   End Sub\n\n   Private Sub BindControls\n      &#39; Create two Binding objects for the first two TextBox\n      &#39; controls. The data-bound property for both controls\n      &#39; is the Text property.  The data source is a DataSet\n      &#39; (ds). The data member is the \n      &#39; TableName.ColumnName&quot; string.\n\n      text1.DataBindings.Add(New _\n         Binding(&quot;Text&quot;, ds, &quot;customers.custName&quot;))\n      text2.DataBindings.Add(New _\n         Binding(&quot;Text&quot;, ds, &quot;customers.custID&quot;))\n      &#39; Bind the DateTimePicker control by adding a new Binding.\n      &#39; The data member of the DateTimePicker is a\n      &#39; TableName.RelationName.ColumnName string\n      DateTimePicker1.DataBindings.Add(New _\n         Binding(&quot;Value&quot;, ds, &quot;customers.CustToOrders.OrderDate&quot;))\n      &#39; Add event delegates for the Parse and Format events to a\n      &#39; new Binding object, and add the object to the third\n      &#39; TextBox control&#39;s BindingsCollection. The delegates\n      &#39; must be added before adding the Binding to the\n      &#39; collection; otherwise, no formatting occurs until\n      &#39; the Current object of the BindingManagerBase for\n      &#39; the data source changes.\n      Dim b As Binding = New _\n         Binding(&quot;Text&quot;, ds, &quot;customers.custToOrders.OrderAmount&quot;)\n      AddHandler b.Parse, AddressOf CurrencyStringToDecimal\n      AddHandler b.Format, AddressOf DecimalToCurrencyString\n      text3.DataBindings.Add(b)\n      \n         &#39; Get the BindingManagerBase for the Customers table.\n         bmCustomers = Me.BindingContext(ds, &quot;Customers&quot;)\n\n         &#39; Get the BindingManagerBase for the Orders table using the\n         &#39; RelationName.\n         bmOrders = Me.BindingContext(ds, &quot;customers.CustToOrders&quot;)\n   End Sub\n\n   Private Sub DecimalToCurrencyString(sender As Object, cevent As ConvertEventArgs)\n      &#39; This method is the Format event handler. Whenever the \n      &#39; control displays a new value, the value is converted from \n      &#39; its native Decimal type to a string. The ToString method \n      &#39; then formats the value as a Currency, by using the \n      &#39; formatting character &quot;c&quot;.\n\n      &#39; The application can only convert to string type. \n   \n      If cevent.DesiredType IsNot GetType(String) Then\n         Exit Sub\n      End If \n   \n      cevent.Value = CType(cevent.Value, decimal).ToString(&quot;c&quot;)\n   End Sub\n\n   Private Sub CurrencyStringToDecimal(sender As Object, cevent As ConvertEventArgs)\n      &#39; This method is the Parse event handler. The Parse event \n      &#39; occurs whenever the displayed value changes. The static \n      &#39; ToDecimal method of the Convert class converts the \n      &#39; value back to its native Decimal type.\n\n      &#39; Can only convert to decimal type.\n      If cevent.DesiredType IsNot GetType(decimal) Then\n         Exit Sub\n      End If\n\n      cevent.Value = Decimal.Parse(cevent.Value.ToString, _\n      NumberStyles.Currency, nothing)\n      \n      &#39; To see that no precision is lost, print the unformatted \n      &#39; value. For example, changing a value to &quot;10.0001&quot; \n      &#39; causes the control to display &quot;10.00&quot;, but the \n      &#39; unformatted value remains &quot;10.0001&quot;.\n      Console.WriteLine(cevent.Value)\n   End Sub\n\n   Private Sub button1_Click(sender As Object, e As System.EventArgs)\n      &#39; Go to the previous item in the Customer list.\n      bmCustomers.Position -= 1\n   End Sub\n\n   Private Sub button2_Click(sender As Object, e As System.EventArgs)\n      &#39; Go to the next item in the Customer list.\n      bmCustomers.Position += 1\n   End Sub\n\n   Private Sub button3_Click(sender As Object, e As System.EventArgs)\n      &#39; Go to the previous item in the Order list.\n      bmOrders.Position -= 1\n   End Sub\n\n   Private Sub button4_Click(sender As Object, e As System.EventArgs)\n      &#39; Go to the next item in the Orders list.\n      bmOrders.Position += 1\n   End Sub\n\n   &#39; Creates a DataSet with two tables and populates it.\n   Private Sub MakeDataSet\n      &#39; Create a DataSet.\n      ds = New DataSet(&quot;myDataSet&quot;)\n\n      &#39; Creates two DataTables.\n      Dim tCust As DataTable = New DataTable(&quot;Customers&quot;)\n      Dim tOrders As DataTable = New DataTable(&quot;Orders&quot;)\n\n      &#39; Create two columns, and add them to the first table.\n      Dim cCustID As DataColumn = New DataColumn(&quot;CustID&quot;, _\n      System.Type.GetType(&quot;System.Int32&quot;))\n      Dim cCustName As DataColumn = New DataColumn(&quot;CustName&quot;)\n      tCust.Columns.Add(cCustID)\n      tCust.Columns.Add(cCustName)\n\n      &#39; Create three columns, and add them to the second table.\n      Dim cID As DataColumn = _\n         New DataColumn(&quot;CustID&quot;, System.Type.GetType(&quot;System.Int32&quot;))\n      Dim cOrderDate As DataColumn = _\n         New DataColumn(&quot;orderDate&quot;, System.Type.GetType(&quot;System.DateTime&quot;))\n      Dim cOrderAmount As DataColumn = _\n         New DataColumn(&quot;OrderAmount&quot;, System.Type.GetType(&quot;System.Decimal&quot;))\n      tOrders.Columns.Add(cOrderAmount)\n      tOrders.Columns.Add(cID)\n      tOrders.Columns.Add(cOrderDate)\n\n      &#39; Add the tables to the DataSet.\n      ds.Tables.Add(tCust)\n      ds.Tables.Add(tOrders)\n\n      &#39; Create a DataRelation, and add it to the DataSet.\n      Dim dr As DataRelation = New _\n         DataRelation(&quot;custToOrders&quot;, cCustID, cID)\n      ds.Relations.Add(dr)\n      \n      &#39; Populate the tables. For each customer and orders,\n      &#39; create two DataRow variables.\n      Dim newRow1 As DataRow\n      Dim newRow2 As DataRow\n\n         &#39; Create three customers in the Customers Table.\n         Dim i As Integer\n         For i = 1 to 3\n            newRow1 = tCust.NewRow\n            newRow1(&quot;custID&quot;) = i\n            &#39; Adds the row to the Customers table.\n            tCust.Rows.Add(newRow1)\n         Next\n\n         &#39; Give each customer a distinct name.\n         tCust.Rows(0)(&quot;custName&quot;) = &quot;Alpha&quot;\n         tCust.Rows(1)(&quot;custName&quot;) = &quot;Beta&quot;\n         tCust.Rows(2)(&quot;custName&quot;) = &quot;Omega&quot;\n\n         &#39; For each customer, create five rows in the Orders table.\n         Dim j As Integer\n         For i = 1 to 3\n         For j = 1 to 5\n            newRow2 = tOrders.NewRow\n            newRow2(&quot;CustID&quot;) = i\n            newRow2(&quot;orderDate&quot;) = New DateTime(2001, i, j * 2)\n            newRow2(&quot;OrderAmount&quot;) = i * 10 + j * .1\n            &#39; Add the row to the Orders table.\n            tOrders.Rows.Add(newRow2)\n         Next\n         Next\n   End Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the Binding class to create and maintain a simple binding between the property of a control and either the property of an object, or the property of the current object in a list of objects.  </p>\n<p> As an example of the first case, you can bind the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control to the <code>FirstName</code> property of a <code>Customer</code> object. As an example of the second case, you can bind the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control to the <code>FirstName</code> property of a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that contains customers.  </p>\n<p> The Binding class also enables you to format values for display through the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> event and to retrieve formatted values through the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> event.  </p>\n<p> When constructing a Binding instance with <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding__ctor_\" data-linktype=\"relative-path\">Binding</a> constructor, you must specify three items:  </p>\n<ul>\n<li><p>The name of the control property to bind to.  </p>\n</li>\n<li><p>The data source.  </p>\n</li>\n<li><p>The navigation path that resolves to a list or property in the data source. The navigation path is also used to create the object&#39;s <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_BindingMemberInfo_\" data-linktype=\"relative-path\">BindingMemberInfo</a> property.  </p>\n</li>\n</ul>\n<p> First, you must specify name of the control property you want to bind the data to. For example, to display data in a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control, specify the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property.  </p>\n<p> Second, you can specify an instance of any one of the classes in the following table as the data source.  </p>\n<p>  Third, you must specify the navigation path, which can be an empty string (&quot;&quot;), a single property name, or a period-delimited hierarchy of names. If you set the navigation path to an empty string, the <a class=\"xref\" href=\"system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a> method will be called on the underlying data source object.  </p>\n<p> If the data source is a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, which can contain multiple <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects, the navigation path must be used to resolve to a specific column.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the data source is a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, <a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>, or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, you are actually binding to a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>. Consequently, the bound rows are actually <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a> objects.  </p>\n</div>\n<p> A period-delimited navigation path is required when the data source is set to an object that contains multiple <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects (such as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>). You can also use a period-delimited navigation path when you bind to an object whose properties return references to other objects (such as a class with properties that return other class objects). For example, the following navigation paths all describe valid data fields:  </p>\n<ul>\n<li><p>&quot;Size.Height&quot;  </p>\n</li>\n<li><p>&quot;Suppliers.CompanyName&quot;  </p>\n</li>\n<li><p>&quot;Regions.regionsToCustomers.CustomerFirstName&quot;  </p>\n</li>\n<li><p>&quot;Regions.regionsToCustomers.customersToOrders.ordersToDetails.Quantity&quot;  </p>\n</li>\n</ul>\n<p> Each member of the path can return either a property that resolves to a single value (such as an integer), or a list of values (such as an array of strings). Although each member in the path can be a list or property, the final member must resolve to a property. Each member builds on the previous member: &quot;Size.Height&quot; resolves to the <a class=\"xref\" href=\"system.drawing.size#System_Drawing_Size_Height_\" data-linktype=\"relative-path\">Height</a> property for the current <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a>; &quot;Regions.regionsToCustomers.CustomerFirstName&quot; resolves to the first name for the current customer, where the customer is one of the customers for the current region.  </p>\n<p> A <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> returns a list of values by linking one <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to a second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> in a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. If the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects, you can specify the data member as a <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableName_\" data-linktype=\"relative-path\">TableName</a> followed by a <a class=\"xref\" href=\"system.data.datarelation#System_Data_DataRelation_RelationName_\" data-linktype=\"relative-path\">RelationName</a>, and then a <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a>. For example, if the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> named &quot;Suppliers&quot; contains a <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> named &quot;suppliers2products&quot;, the data member could be &quot;Suppliers.suppliers2products.ProductName&quot;.  </p>\n<p> The data source can consist of a set of related classes. For example, imagine a set of classes that catalogs solar systems. The class named <code>System</code> contains a property named <code>Stars</code> that returns a collection of <code>Star</code> objects. Each <code>Star</code> object has <code>Name</code> and <code>Mass</code> properties, as well as a <code>Planets</code> property that returns a collection of <code>Planet</code> objects. In this system, each planet also has <code>Mass</code> and <code>Name</code> properties. Each <code>Planet</code> object further has a <code>Moons</code> property that returns a collection of <code>Moon</code> objects, each of which also has <code>Name</code> and <code>Mass</code> properties. If you specify a <code>System</code> object as the data source, you can specify any of the following as the data member:  </p>\n<ul>\n<li><p>&quot;Stars.Name&quot;  </p>\n</li>\n<li><p>&quot;Stars.Mass&quot;  </p>\n</li>\n<li><p>&quot;Stars.Planets.Name&quot;  </p>\n</li>\n<li><p>&quot;Stars.Planets.Mass&quot;  </p>\n</li>\n<li><p>&quot;Stars.Planets.Moons.Name&quot;  </p>\n</li>\n<li><p>&quot;Stars.Planets.Moons.Mass&quot;  </p>\n</li>\n</ul>\n<p> Controls that can be simple-bound feature a collection of Binding objects in a <a class=\"xref\" href=\"system.windows.forms.controlbindingscollection\" data-linktype=\"relative-path\">ControlBindingsCollection</a>, which you can access through the control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings_\" data-linktype=\"relative-path\">DataBindings</a> property. You add a Binding to the collection by calling the <a class=\"xref\" href=\"system.windows.forms.controlbindingscollection#System_Windows_Forms_ControlBindingsCollection_Add_\" data-linktype=\"relative-path\">Add</a> method, thereby binding a property of the control to a property of an object (or to a property of the current object in a list).  </p>\n<p> You can simple-bind to any object that derives from the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">System.Windows.Forms.Control</a> class, for example, the following Windows controls:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.checkbox\" data-linktype=\"relative-path\">CheckBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.checkedlistbox\" data-linktype=\"relative-path\">CheckedListBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datetimepicker\" data-linktype=\"relative-path\">DateTimePicker</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.domainupdown\" data-linktype=\"relative-path\">DomainUpDown</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.hscrollbar\" data-linktype=\"relative-path\">HScrollBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.linklabel\" data-linktype=\"relative-path\">LinkLabel</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.monthcalendar\" data-linktype=\"relative-path\">MonthCalendar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.numericupdown\" data-linktype=\"relative-path\">NumericUpDown</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.progressbar\" data-linktype=\"relative-path\">ProgressBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.radiobutton\" data-linktype=\"relative-path\">RadioButton</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.scrollbar\" data-linktype=\"relative-path\">ScrollBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.vscrollbar\" data-linktype=\"relative-path\">VScrollBar</a>  \n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Only the <a class=\"xref\" href=\"system.windows.forms.listcontrol#System_Windows_Forms_ListControl_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> property of the <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a>, <a class=\"xref\" href=\"system.windows.forms.checkedlistbox\" data-linktype=\"relative-path\">CheckedListBox</a>, and <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a> control is simple bound.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> class is an abstract class that manages all the Binding objects for a particular data source and data member. Classes that derive from <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> are the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> and the <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a> classes. How a Binding is managed depends on whether the Binding is a list binding or a property binding. For example, if it is a list binding, you can use the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> to specify a <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> in the list; the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a>, therefore, determines which item (out of all items in the list) is actually bound to a control. To return the appropriate <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>, use the <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a>.  </p>\n<p> To add a new row to a set of controls bound to the same <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_DataSource_\" data-linktype=\"relative-path\">DataSource</a>, use the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_AddNew_\" data-linktype=\"relative-path\">AddNew</a> method of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> class. Use the <a class=\"xref\" href=\"system.windows.forms.bindingcontext#System_Windows_Forms_BindingContext_Item_\" data-linktype=\"relative-path\">Item</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> class to return the appropriate <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>. To escape the addition of the new row, use the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_CancelCurrentEdit_\" data-linktype=\"relative-path\">CancelCurrentEdit</a> method.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding__ctor_System_String_System_Object_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Binding(String, Object, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class that simple-binds the indicated control property to the specified data member of the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Binding (string propertyName, object dataSource, string dataMember);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control property to bind.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSource</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property or list to bind to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>propertyName</code> is neither a valid property of a control nor an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property given by <code>propertyName</code> does not exist on the control.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can specify an instance of any of the following classes for the data source:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a>  \n</li>\n<li><p>Any class that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface  </p>\n</li>\n<li><p>Any class  </p>\n</li>\n</ul>\n<p> See the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class for more information about creating the <code>dataMember</code> string.  </p>\n<p> When you create a binding to a control&#39;s property, the new <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> inspects the events exposed by the bound control and attaches to two particular events:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validating</a>  \n</li>\n<li><p>An event named <em>PropertyName</em><code>Changed</code> (for example, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">System.Windows.Forms.Control.BackColorChanged</a>)  </p>\n</li>\n</ul>\n<p> If you attempt to bind to a property that does not exist, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> will be thrown when the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> is added to the control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings_\" data-linktype=\"relative-path\">DataBindings</a> collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding__ctor_System_String_System_Object_System_String_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Binding(String, Object, String, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class that binds the indicated control property to the specified data member of the data source, and optionally enables formatting to be applied.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control property to bind.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSource</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property or list to bind to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formattingEnabled</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to format the displayed data; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property given by <code>propertyName</code> does not exist on the control.  </p>\n<p> -or-  </p>\n<p> The property given is a read-only property.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Formatting is disabled and <code>propertyName</code> is neither a valid property of a control nor an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding__ctor_System_String_System_Object_System_String_System_Boolean_System_Windows_Forms_DataSourceUpdateMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Binding(String, Object, String, Boolean, DataSourceUpdateMode)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class that binds the specified control property to the specified data member of the specified data source. Optionally enables formatting and propagates values to the data source based on the specified update setting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control property to bind.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSource</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property or list to bind to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formattingEnabled</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to format the displayed data; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSourceUpdateMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property given by <code>propertyName</code> does not exist on the control.  </p>\n<p> -or-  </p>\n<p> The data source or data member or control property specified are associated with another binding in the collection.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can specify an instance of any of the following classes for the data source:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a>  \n</li>\n<li><p>Any class that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface  </p>\n</li>\n<li><p>Any class  </p>\n</li>\n</ul>\n<p> See the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class for more information about creating the <code>dataMember</code> string.  </p>\n<p> When you create a binding to a control&#39;s property, the new <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> inspects the events exposed by the bound control and attaches to two particular events:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validating</a>.  </p>\n</li>\n<li><p>An event named <em>PropertyName</em><code>Changed</code> (for example, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">System.Windows.Forms.Control.BackColorChanged</a>)</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding__ctor_System_String_System_Object_System_String_System_Boolean_System_Windows_Forms_DataSourceUpdateMode_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Binding(String, Object, String, Boolean, DataSourceUpdateMode, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class that binds the indicated control property to the specified data member of the specified data source. Optionally enables formatting, propagates values to the data source based on the specified update setting, and sets the property to the specified value when a <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> is returned from the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control property to bind.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSource</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property or list to bind to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formattingEnabled</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to format the displayed data; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSourceUpdateMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nullValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to be applied to the bound control property if the data source value is <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property given by <code>propertyName</code> does not exist on the control.  </p>\n<p> -or-  </p>\n<p> The data source or data member or control property specified are associated with another binding in the collection.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can specify an instance of any of the following classes for the data source:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a>  \n</li>\n<li><p>Any class that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface  </p>\n</li>\n<li><p>Any class  </p>\n</li>\n</ul>\n<p> See the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class for more information about creating the <code>dataMember</code> string.  </p>\n<p> When you create a binding to a control&#39;s property, the new <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> inspects the events exposed by the bound control and attaches to two particular events:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validating</a>  \n</li>\n<li><p>An event named <em>PropertyName</em><code>Changed</code> (for example, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">System.Windows.Forms.Control.BackColorChanged</a>)</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding__ctor_System_String_System_Object_System_String_System_Boolean_System_Windows_Forms_DataSourceUpdateMode_System_Object_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Binding(String, Object, String, Boolean, DataSourceUpdateMode, Object, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class that binds the specified control property to the specified data member of the specified data source. Optionally enables formatting with the specified format string; propagates values to the data source based on the specified update setting; and sets the property to the specified value when a <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> is returned from the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control property to bind.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSource</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property or list to bind to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formattingEnabled</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to format the displayed data; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSourceUpdateMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nullValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to be applied to the bound control property if the data source value is <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatString</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One or more format specifier characters that indicate how a value is to be displayed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property given by <code>propertyName</code> does not exist on the control.  </p>\n<p> -or-  </p>\n<p> The data source or data member or control property specified are associated with another binding in the collection.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can specify an instance of any of the following classes for the data source:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a>  \n</li>\n<li><p>Any class that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface  </p>\n</li>\n<li><p>Any class  </p>\n</li>\n</ul>\n<p> See the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class for more information about creating the <code>dataMember</code> string.  </p>\n<p> When you create a binding to a control&#39;s property, the new <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> inspects the events exposed by the bound control and attaches to two particular events:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validating</a>  \n</li>\n<li><p>An event named <em>PropertyName</em><code>Changed</code> (for example, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">System.Windows.Forms.Control.BackColorChanged</a>)</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding__ctor_System_String_System_Object_System_String_System_Boolean_System_Windows_Forms_DataSourceUpdateMode_System_Object_System_String_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Binding(String, Object, String, Boolean, DataSourceUpdateMode, Object, String, IFormatProvider)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class with the specified control property to the specified data member of the specified data source. Optionally enables formatting with the specified format string; propagates values to the data source based on the specified update setting; enables formatting with the specified format string; sets the property to the specified value when a <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> is returned from the data source; and sets the specified format provider.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, IFormatProvider formatInfo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control property to bind.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSource</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property or list to bind to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formattingEnabled</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to format the displayed data; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSourceUpdateMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nullValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to be applied to the bound control property if the data source value is <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatString</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One or more format specifier characters that indicate how a value is to be displayed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An implementation of <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> to override default formatting behavior.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property given by <code>propertyName</code> does not exist on the control.  </p>\n<p> -or-  </p>\n<p> The data source or data member or control property specified are associated with another binding in the collection.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can specify an instance of any of the following classes for the data source:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a>  \n</li>\n<li><p>Any class that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface  </p>\n</li>\n<li><p>Any class  </p>\n</li>\n</ul>\n<p> See the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class for more information about creating the <code>dataMember</code> string.  </p>\n<p> When you create a binding to a control&#39;s property, the new <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> inspects the events exposed by the bound control and attaches to two particular events:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validating</a>  \n</li>\n<li><p>An event named <em>PropertyName</em><code>Changed</code> (for example, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">System.Windows.Forms.Control.BackColorChanged</a>)</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_BindableComponent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindableComponent</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the control the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> is associated with.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.IBindableComponent BindableComponent { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.ibindablecomponent\" data-linktype=\"relative-path\">IBindableComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.ibindablecomponent\" data-linktype=\"relative-path\">IBindableComponent</a> the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> is associated with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_BindingManagerBase\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindingManagerBase</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> for this <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.BindingManagerBase BindingManagerBase { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> that manages this <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> to iterate through a data-bound list by incrementing or decrementing the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> property. The <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> class is abstract. The <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> class, which manages data-bound lists, inherits from the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_BindingMemberInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindingMemberInfo</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an object that contains information about this binding based on the <code>dataMember</code> parameter in the <span class=\"xref\">stem.Windows.Forms.Binding.#ctor*</span> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.BindingMemberInfo BindingMemberInfo { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.bindingmemberinfo\" data-linktype=\"relative-path\">BindingMemberInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.bindingmemberinfo\" data-linktype=\"relative-path\">BindingMemberInfo</a> that contains information about this <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.bindingmemberinfo\" data-linktype=\"relative-path\">BindingMemberInfo</a> is created from the <code>dataMember</code> string passed to the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding__ctor_\" data-linktype=\"relative-path\">Binding</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_Control\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Control</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the control that the binding belongs to.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Control Control { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> that the binding belongs to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_ControlUpdateMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ControlUpdateMode</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets when changes to the data source are propagated to the bound control property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.ControlUpdateMode ControlUpdateMode { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.controlupdatemode\" data-linktype=\"relative-path\">ControlUpdateMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.controlupdatemode\" data-linktype=\"relative-path\">ControlUpdateMode</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.controlupdatemode\" data-linktype=\"relative-path\">ControlUpdateMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_DataSource\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSource</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the data source for this binding.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object DataSource { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the data source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Possible data sources include:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>  </p>\n</li>\n<li><p>Any object that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface  </p>\n</li>\n<li><p>Any object</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_DataSourceNullValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSourceNullValue</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the value to be stored in the data source if the control value is <code>null</code> or empty.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object DataSourceNullValue { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to be stored in the data source when the control property is empty or <code>null</code>. The default is <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> for value types and <code>null</code> for non-value types.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property to specify the value displayed in a bound control when the data source contains <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_DataSourceUpdateMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSourceUpdateMode</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates when changes to the bound control property are propagated to the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value that indicates when changes are propagated. The default is <a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Note that even if this property is set to <a class=\"xref\" href=\"system.windows.forms.datasourceupdatemode\" data-linktype=\"relative-path\">DataSourceUpdateMode</a>, the binding will update at least one time, when it is first established.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_FormatInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FormatInfo</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> that provides custom formatting behavior.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IFormatProvider FormatInfo { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation that provides custom formatting behavior.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Setting this property will override the default formatting behavior, which uses the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property setting.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_FormatString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FormatString</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the format specifier characters that indicate how a value is to be displayed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string FormatString { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string of format specifier characters that indicate how a value is to be displayed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The format string used should follow standard .NET Framework format specifications. For more information, see <a href=\"../topic/formatting%20types%20in%20the%20.net%20framework\" data-linktype=\"relative-path\">Formatting Types in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_FormattingEnabled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FormattingEnabled</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether type conversion and formatting is applied to the control property data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool FormattingEnabled { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if type conversion and formatting of control property data is enabled; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Setting this property to <code>true</code> also enables error-handling behavior and causes the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_BindingComplete\" data-linktype=\"relative-path\">BindingComplete</a> event to be raised. The handler of this event can take the appropriate action, based on the success, error, or exceptions in the binding process, by examining the <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs#System_Windows_Forms_BindingCompleteEventArgs_BindingCompleteState_\" data-linktype=\"relative-path\">BindingCompleteState</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_IsBinding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsBinding</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the binding is active.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsBinding { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the binding is active; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A binding is active when it meets these conditions:  </p>\n<ul>\n<li><p>All its properties are set.  </p>\n</li>\n<li><p>The user did not call <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_ResumeBinding_\" data-linktype=\"relative-path\">ResumeBinding</a> or <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> on the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> that the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> belongs to.  </p>\n</li>\n<li><p>The control to which the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> belongs has been created.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_NullValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NullValue</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to be set as the control property when the data source contains a <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object NullValue { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to be set as the control property when the data source contains a <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> value. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The data source must contain <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> for the NullValue property to be correctly applied. If the data source type is a type such as a string or integer the value of the NullValue property will be ignored. Also, the NullValue property is ignored if it is set to <code>null</code>.  </p>\n<p> A null value will be added to the data source when the control property is set to the object of NullValue. If NullValue is set to a string value, comparisons are case-insensitive.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_PropertyName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PropertyName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the control&#39;s data-bound property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PropertyName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of a control property to bind to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the PropertyName to specify the control property that you want to bind to a list in a data source. Most commonly, you bind a display property such as the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. However, because you can bind any property of a control, you can programmatically create controls at run time using data from a database.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_OnBindingComplete_System_Windows_Forms_BindingCompleteEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnBindingComplete(BindingCompleteEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_BindingComplete\" data-linktype=\"relative-path\">BindingComplete</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBindingComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_OnFormat_System_Windows_Forms_ConvertEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnFormat(ConvertEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnFormat (System.Windows.Forms.ConvertEventArgs cevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.converteventargs\" data-linktype=\"relative-path\">ConvertEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.converteventargs\" data-linktype=\"relative-path\">ConvertEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnFormat method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_OnParse_System_Windows_Forms_ConvertEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParse(ConvertEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParse (System.Windows.Forms.ConvertEventArgs cevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.converteventargs\" data-linktype=\"relative-path\">ConvertEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.converteventargs\" data-linktype=\"relative-path\">ConvertEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParse method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_ReadValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadValue()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the control property to the value read from the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadValue ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_WriteValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteValue()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads the current value from the control property and writes it to the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteValue ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_BindingComplete\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindingComplete</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Binding.FormattingEnabled*</span> property is set to <code>true</code> and a binding operation is complete, such as when data is pushed from the control to the data source or vice versa</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised under any of the following conditions when <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_FormattingEnabled_\" data-linktype=\"relative-path\">FormattingEnabled</a> is <code>true</code>:  </p>\n<ul>\n<li><p>Data from the data source is pushed onto the control property.  </p>\n</li>\n<li><p>Data from the control property is pushed onto the data source.  </p>\n</li>\n</ul>\n<p> This event is raised at the completion of these operations, independent of the completion status. For example, if a binding operation binds a null value to a <a class=\"xref\" href=\"system.windows.forms.datetimepicker#System_Windows_Forms_DateTimePicker_Value_\" data-linktype=\"relative-path\">Value</a> property, an exception is thrown, but the BindingComplete event still occurs. The handler of this event can take the appropriate action, based on the success, error, or exceptions in the binding process, by examining the <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs#System_Windows_Forms_BindingCompleteEventArgs_BindingCompleteState_\" data-linktype=\"relative-path\">BindingCompleteState</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a> parameter.  </p>\n<p> For more information about handling events, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_Format\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Format</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the property of a control is bound to a data value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.ConvertEventHandler Format;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Format event is raised when data is pushed from the data source into the control. You can handle the Format event to convert unformatted data from the data source into formatted data for display. When data is pulled from the control into the data source, the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> event is raised to unformat the displayed value, then the Format event occurs to reformat the data for display. This ensures that the bound control displays correctly formatted data regardless of whether the user enters formatted or unformatted data in the control.  </p>\n<p> The Format and <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> events allow you to create custom formats for displaying data. For example, if the data in a table is of type <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>, you can display the data in the local currency format by setting the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> property of the <a class=\"xref\" href=\"system.windows.forms.converteventargs\" data-linktype=\"relative-path\">ConvertEventArgs</a> to the formatted value in the Format event. You must consequently unformat the displayed value in the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> event.  </p>\n<p> The Format event occurs whenever the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Current_\" data-linktype=\"relative-path\">Current</a> value of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> changes, which includes:  </p>\n<ul>\n<li><p>The first time the property is bound.  </p>\n</li>\n<li><p>Any time the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> changes.  </p>\n</li>\n<li><p>Whenever the data-bound list is sorted or filtered, which is accomplished when a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> supplies the list.  </p>\n</li>\n</ul>\n<p> The Format event also occurs after the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> event. For example, when a control loses focus, its contents are parsed. Immediately afterward, as new data is pushed into the control, the Format event occurs allowing the new contents to be formatted.  </p>\n<p> For more information about handling events, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Binding_Parse\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parse</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of a data-bound control changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.ConvertEventHandler Parse;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> and Parse events allow you to create custom formats for displaying data. For example, if the data in a table is of type <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>, you can display the data in the local currency format by setting the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> property of the <a class=\"xref\" href=\"system.windows.forms.converteventargs\" data-linktype=\"relative-path\">ConvertEventArgs</a> to the formatted value in the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> event. You must consequently unformat the displayed value in the Parse event.  </p>\n<p> The Parse event occurs under the following conditions:  </p>\n<ul>\n<li><p>After the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> occurs.  </p>\n</li>\n<li><p>When the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_EndCurrentEdit_\" data-linktype=\"relative-path\">EndCurrentEdit</a> method of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> is called.  </p>\n</li>\n<li><p>When the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Current_\" data-linktype=\"relative-path\">Current</a> of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> changes (in other words, when the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> changes).  </p>\n</li>\n</ul>\n<p> For more information about handling events, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.Binding.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.BindableComponent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.BindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.add_BindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.remove_BindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.BindingManagerBase\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.BindingMemberInfo\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.Control\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.ControlUpdateMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.DataSource\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.DataSourceNullValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.DataSourceUpdateMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.Format\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.add_Format\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.remove_Format\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.FormatInfo\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.FormatString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.FormattingEnabled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.IsBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.NullValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.OnBindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.OnFormat\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.OnParse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.Parse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.add_Parse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.remove_Parse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.PropertyName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.ReadValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Binding.WriteValue\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"4be6d4dc-c00d-0c26-43cc-249a8ccff908\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the simple binding between the property value of an object and the property value of a control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.Binding\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.Binding.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.Binding","System.Windows.Forms.Binding..ctor","System.Windows.Forms.Binding.BindableComponent","System.Windows.Forms.Binding.BindingComplete","System.Windows.Forms.Binding.add_BindingComplete","System.Windows.Forms.Binding.remove_BindingComplete","System.Windows.Forms.Binding.BindingManagerBase","System.Windows.Forms.Binding.BindingMemberInfo","System.Windows.Forms.Binding.Control","System.Windows.Forms.Binding.ControlUpdateMode","System.Windows.Forms.Binding.DataSource","System.Windows.Forms.Binding.DataSourceNullValue","System.Windows.Forms.Binding.DataSourceUpdateMode","System.Windows.Forms.Binding.Format","System.Windows.Forms.Binding.add_Format","System.Windows.Forms.Binding.remove_Format","System.Windows.Forms.Binding.FormatInfo","System.Windows.Forms.Binding.FormatString","System.Windows.Forms.Binding.FormattingEnabled","System.Windows.Forms.Binding.IsBinding","System.Windows.Forms.Binding.NullValue","System.Windows.Forms.Binding.OnBindingComplete","System.Windows.Forms.Binding.OnFormat","System.Windows.Forms.Binding.OnParse","System.Windows.Forms.Binding.Parse","System.Windows.Forms.Binding.add_Parse","System.Windows.Forms.Binding.remove_Parse","System.Windows.Forms.Binding.PropertyName","System.Windows.Forms.Binding.ReadValue","System.Windows.Forms.Binding.WriteValue"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.Binding","System::Windows::Forms::Binding","System.Windows.Forms.Binding.#ctor","System::Windows::Forms::Binding::#ctor","System.Windows.Forms.Binding.BindableComponent","System::Windows::Forms::Binding::BindableComponent","System.Windows.Forms.Binding.BindingComplete","System::Windows::Forms::Binding::BindingComplete","System.Windows.Forms.Binding.BindingManagerBase","System::Windows::Forms::Binding::BindingManagerBase","System.Windows.Forms.Binding.BindingMemberInfo","System::Windows::Forms::Binding::BindingMemberInfo","System.Windows.Forms.Binding.Control","System::Windows::Forms::Binding::Control","System.Windows.Forms.Binding.ControlUpdateMode","System::Windows::Forms::Binding::ControlUpdateMode","System.Windows.Forms.Binding.DataSource","System::Windows::Forms::Binding::DataSource","System.Windows.Forms.Binding.DataSourceNullValue","System::Windows::Forms::Binding::DataSourceNullValue","System.Windows.Forms.Binding.DataSourceUpdateMode","System::Windows::Forms::Binding::DataSourceUpdateMode","System.Windows.Forms.Binding.Format","System::Windows::Forms::Binding::Format","System.Windows.Forms.Binding.FormatInfo","System::Windows::Forms::Binding::FormatInfo","System.Windows.Forms.Binding.FormatString","System::Windows::Forms::Binding::FormatString","System.Windows.Forms.Binding.FormattingEnabled","System::Windows::Forms::Binding::FormattingEnabled","System.Windows.Forms.Binding.IsBinding","System::Windows::Forms::Binding::IsBinding","System.Windows.Forms.Binding.NullValue","System::Windows::Forms::Binding::NullValue","System.Windows.Forms.Binding.OnBindingComplete","System::Windows::Forms::Binding::OnBindingComplete","System.Windows.Forms.Binding.OnFormat","System::Windows::Forms::Binding::OnFormat","System.Windows.Forms.Binding.OnParse","System::Windows::Forms::Binding::OnParse","System.Windows.Forms.Binding.Parse","System::Windows::Forms::Binding::Parse","System.Windows.Forms.Binding.PropertyName","System::Windows::Forms::Binding::PropertyName","System.Windows.Forms.Binding.ReadValue","System::Windows::Forms::Binding::ReadValue","System.Windows.Forms.Binding.WriteValue","System::Windows::Forms::Binding::WriteValue"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"4be6d4dc-c00d-0c26-43cc-249a8ccff908","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Binding.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Binding class | Microsoft Docs","_op_ogTitle":"Binding class","description":"Represents the simple binding between the property value of an object and the property value of a control.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.Binding","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.binding","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.binding","fileRelativePath":"api/System.Windows.Forms.Binding.html"},"themesRelativePathToOutputRoot":"_themes/"}