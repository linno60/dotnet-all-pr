{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">MulticastDelegate</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic abstract class MulticastDelegate : Delegate</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">MulticastDelegate</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_Clone\" data-linktype=\"relative-path\">Clone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_Combine_System_Delegate_System_Delegate_\" data-linktype=\"relative-path\">Combine(Delegate, Delegate)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_Combine_System_Delegate___\" data-linktype=\"relative-path\">Combine(Delegate[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Object_System_Reflection_MethodInfo_\" data-linktype=\"relative-path\">CreateDelegate(Type, Object, MethodInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Object_System_Reflection_MethodInfo_System_Boolean_\" data-linktype=\"relative-path\">CreateDelegate(Type, Object, MethodInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Object_System_String_\" data-linktype=\"relative-path\">CreateDelegate(Type, Object, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Object_System_String_System_Boolean_\" data-linktype=\"relative-path\">CreateDelegate(Type, Object, String, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Object_System_String_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">CreateDelegate(Type, Object, String, Boolean, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Reflection_MethodInfo_\" data-linktype=\"relative-path\">CreateDelegate(Type, MethodInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Reflection_MethodInfo_System_Boolean_\" data-linktype=\"relative-path\">CreateDelegate(Type, MethodInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Type_System_String_\" data-linktype=\"relative-path\">CreateDelegate(Type, Type, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Type_System_String_System_Boolean_\" data-linktype=\"relative-path\">CreateDelegate(Type, Type, String, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Type_System_String_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">CreateDelegate(Type, Type, String, Boolean, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_DynamicInvoke_System_Object___\" data-linktype=\"relative-path\">DynamicInvoke(Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_DynamicInvokeImpl_System_Object___\" data-linktype=\"relative-path\">DynamicInvokeImpl(Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_Method\" data-linktype=\"relative-path\">Method</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_op_Equality_System_Delegate_System_Delegate_\" data-linktype=\"relative-path\">op_Equality(Delegate, Delegate)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_op_Inequality_System_Delegate_System_Delegate_\" data-linktype=\"relative-path\">op_Inequality(Delegate, Delegate)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_Remove_System_Delegate_System_Delegate_\" data-linktype=\"relative-path\">Remove(Delegate, Delegate)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_RemoveAll_System_Delegate_System_Delegate_\" data-linktype=\"relative-path\">RemoveAll(Delegate, Delegate)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate#System_Delegate_Target\" data-linktype=\"relative-path\">Target</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example defines a class, <code>StringContainer</code>, which includes a collection of strings. One of its members is the <code>CheckAndDisplayDelegate</code> delegate, which is used to display strings stored in a <code>StringContainer</code> object that satisfy particular criteria. The delegate takes a single string as a parameter and returns <code>void</code> (or, in Visual Basic, it&#39;s a <code>Sub</code> procedure). It also includes a method, <code>DisplayAllQualified</code>, that has a single parameter, a <code>CheckAndDisplayDelegate</code> delegate. This allows the method to be called and to display a set of strings that are filtered based on the methods that the delegate contains.  </p>\n<p> The example also defines a utility class, <code>StringExtensions</code>, that has two methods:  </p>\n<ul>\n<li><p><code>ConStart</code>, which displays strings that begin with a consonant.  </p>\n</li>\n<li><p><code>VowelStart</code>, which displays strings that begin with a vowel.  </p>\n</li>\n</ul>\n<p> Note that both methods include a single string parameter and return <code>void</code>. In other words, both methods can be assigned to the  <code>CheckAndDisplayDelegate</code> delegate.  </p>\n<p> The <code>Test.Main</code> method is the application entry point. It instantiates a <code>StringContainer</code> object, populates it with strings, and creates two <code>CheckAndDisplayDelegate</code> delegates, <code>conStart</code> and <code>vowelStart</code>, that invoke a single method. It then calls the <a class=\"xref\" href=\"system.delegate#System_Delegate_Combine_\" data-linktype=\"relative-path\">Combine</a> method to create the <code>multipleDelegates</code> delegate, which initially contains the <code>ConStart</code> and  <code>VowelStart</code> delegates. Note that when the <code>multipleDelegates</code> delegate is invoked, it displays all the strings in the collection in their original order. This is because each letter is passed separately to each delegate, and each letter meets the filtering criteria of only one of the two delegates. Finally, after calls to <a class=\"xref\" href=\"system.delegate#System_Delegate_Remove_\" data-linktype=\"relative-path\">Remove</a> and <a class=\"xref\" href=\"system.delegate#System_Delegate_Combine_\" data-linktype=\"relative-path\">Combine</a>, <code>multipleDelegates</code> contains two <code>conStart</code> delegates. When it is invoked, each string in the <code>StringContainer</code> object is displayed twice.  </p>\n<pre><code class=\"lang-cpp\" name=\"Multicast Delegate Introduction#1\">using namespace System;\nusing namespace System::Collections::Generic;\n\nref class StringContainer\n{\nprivate:\n   // A generic list object that holds the strings.\n   List&lt;String^&gt;^ container = gcnew List&lt;String^&gt;;\n\npublic:\n   // Define a delegate to handle string display.\n   delegate void CheckAndDisplayDelegate(String^ str);\n\n   // A method that adds more strings to the collection.\n   void AddString(String^ str)\n   {\n      container-&gt;Add(str);\n   }\n\n   // Iterate through the strings and invoke the method(s) that the delegate points to.\n   void DisplayAllQualified(CheckAndDisplayDelegate^ displayDelegate)\n   {\n      for each (String^ str in container)\n         displayDelegate(str);\n//       System::Collections::IEnumerator^ myEnum = container-&gt;GetEnumerator();\n//       while ( myEnum-&gt;MoveNext() )\n//       {\n//          String^ str = safe_cast&lt;String^&gt;(myEnum-&gt;Current);\n//          displayDelegate(str);\n//      }\n   }\n};\n\n//end of class StringContainer\n// This class contains a few sample methods\nref class StringFuncs\n{\npublic:\n\n   // This method prints a String* that it is passed if the String* starts with a vowel\n   static void ConStart(String^ str)\n   {\n      if (  !(str[ 0 ] == &#39;a&#39; || str[ 0 ] == &#39;e&#39; || str[ 0 ] == &#39;i&#39; || str[ 0 ] == &#39;o&#39; || str[ 0 ] == &#39;u&#39;) )\n            Console::WriteLine( str );\n   }\n\n   // This method prints a String* that it is passed if the String* starts with a consonant\n   static void VowelStart( String^ str )\n   {\n      if ( (str[ 0 ] == &#39;a&#39; || str[ 0 ] == &#39;e&#39; || str[ 0 ] == &#39;i&#39; || str[ 0 ] == &#39;o&#39; || str[ 0 ] == &#39;u&#39;) )\n            Console::WriteLine( str );\n   }\n};\n\n// This function demonstrates using Delegates, including using the Remove and\n// Combine methods to create and modify delegate combinations.\nint main()\n{\n   // Declare the StringContainer class and add some strings\n   StringContainer^ container = gcnew StringContainer;\n   container-&gt;AddString( &quot;This&quot; );\n   container-&gt;AddString( &quot;is&quot; );\n   container-&gt;AddString( &quot;a&quot; );\n   container-&gt;AddString( &quot;multicast&quot; );\n   container-&gt;AddString( &quot;delegate&quot; );\n   container-&gt;AddString( &quot;example&quot; );\n\n// RETURN HERE.\n   // Create two delegates individually using different methods\n   StringContainer::CheckAndDisplayDelegate^ conStart = gcnew StringContainer::CheckAndDisplayDelegate( StringFuncs::ConStart );\n   StringContainer::CheckAndDisplayDelegate^ vowelStart = gcnew StringContainer::CheckAndDisplayDelegate( StringFuncs::VowelStart );\n\n   // Get the list of all delegates assigned to this MulticastDelegate instance. \n   array&lt;Delegate^&gt;^ delegateList = conStart-&gt;GetInvocationList();\n   Console::WriteLine(&quot;conStart contains {0} delegate(s).&quot;, delegateList-&gt;Length);\n   delegateList = vowelStart-&gt;GetInvocationList();\n   Console::WriteLine(&quot;vowelStart contains {0} delegate(s).\\n&quot;, delegateList-&gt;Length );\n\n   // Determine whether the delegates are System::Multicast delegates\n   if ( dynamic_cast&lt;System::MulticastDelegate^&gt;(conStart) &amp;&amp; dynamic_cast&lt;System::MulticastDelegate^&gt;(vowelStart) )\n   {\n      Console::WriteLine(&quot;conStart and vowelStart are derived from MulticastDelegate.\\n&quot;);\n   }\n\n   // Execute the two delegates.\n   Console::WriteLine(&quot;Executing the conStart delegate:&quot; );\n   container-&gt;DisplayAllQualified(conStart);\n   Console::WriteLine();\n   Console::WriteLine(&quot;Executing the vowelStart delegate:&quot; );\n   container-&gt;DisplayAllQualified(vowelStart);\n\n   // Create a new MulticastDelegate and call Combine to add two delegates.\n   StringContainer::CheckAndDisplayDelegate^ multipleDelegates =\n           dynamic_cast&lt;StringContainer::CheckAndDisplayDelegate^&gt;(Delegate::Combine(conStart, vowelStart));\n\n   // How many delegates does multipleDelegates contain?\n   delegateList = multipleDelegates-&gt;GetInvocationList();\n   Console::WriteLine(&quot;\\nmultipleDelegates contains {0} delegates.\\n&quot;, \n                      delegateList-&gt;Length );\n\n   //       // Pass this multicast delegate to DisplayAllQualified.\n   Console::WriteLine(&quot;Executing the multipleDelegate delegate.&quot;);\n   container-&gt;DisplayAllQualified(multipleDelegates);\n   // Call remove and combine to change the contained delegates.\n   multipleDelegates = dynamic_cast&lt;StringContainer::CheckAndDisplayDelegate^&gt;\n                      (Delegate::Remove(multipleDelegates, vowelStart));\n   multipleDelegates = dynamic_cast&lt;StringContainer::CheckAndDisplayDelegate^&gt;\n                      (Delegate::Combine(multipleDelegates, conStart));\n\n   // Pass multipleDelegates to DisplayAllQualified again.\n   Console::WriteLine(&quot;\\nExecuting the multipleDelegate delegate with two conStart delegates:&quot;);\n   container-&gt;DisplayAllQualified(multipleDelegates);\n} \n// The example displays the following output:\n//    conStart contains 1 delegate(s).\n//    vowelStart contains 1 delegate(s).\n//    \n//    conStart and vowelStart are derived from MulticastDelegate.\n//    \n//    Executing the conStart delegate:\n//    This\n//    multicast\n//    delegate\n//    \n//    Executing the vowelStart delegate:\n//    is\n//    a\n//    example\n//    \n//    \n//    multipleDelegates contains 2 delegates.\n//    \n//    Executing the multipleDelegate delegate.\n//    This\n//    is\n//    a\n//    multicast\n//    delegate\n//    example\n//    \n//    Executing the multipleDelegate delegate with two conStart delegates:\n//    This\n//    This\n//    multicast\n//    multicast\n//    delegate\n//    delegate\n</code></pre><pre><code class=\"lang-cs\" name=\"Multicast Delegate Introduction#1\">using System;\nusing System.Collections.Generic;\n\nclass StringContainer\n{\n   // Define a delegate to handle string display. \n   public delegate void CheckAndDisplayDelegate(string str);\n\n   // A generic list object that holds the strings. \n   private List&lt;String&gt; container = new List&lt;String&gt;();\n\n   // A method that adds strings to the collection. \n   public void AddString(string str) \n   {\n      container.Add(str);\n   }\n\n   // Iterate through the strings and invoke the method(s) that the delegate points to. \n   public void DisplayAllQualified(CheckAndDisplayDelegate displayDelegate) \n   {\n      foreach (var str in container) {\n         displayDelegate(str);\n      }\n   }\n }    \n\n// This class defines some methods to display strings. \nclass StringExtensions\n{\n   // Display a string if it starts with a consonant. \n   public static void ConStart(string str) \n   {\n      if (!(str[0]==&#39;a&#39;||str[0]==&#39;e&#39;||str[0]==&#39;i&#39;||str[0]==&#39;o&#39;||str[0]==&#39;u&#39;))\n          Console.WriteLine(str);\n   }\n\n   // Display a string if it starts with a vowel.\n   public static void VowelStart(string str) \n   {\n      if ((str[0]==&#39;a&#39;||str[0]==&#39;e&#39;||str[0]==&#39;i&#39;||str[0]==&#39;o&#39;||str[0]==&#39;u&#39;))\n          Console.WriteLine(str);\n   }\n}\n\n// Demonstrate the use of delegates, including the Remove and \n// Combine methods to create and modify delegate combinations. \nclass Test\n{\n   static public void Main()\n   {\n      // Declare the StringContainer class and add some strings\n      StringContainer container = new StringContainer();\n      container.AddString(&quot;This&quot;);\n      container.AddString(&quot;is&quot;);\n      container.AddString(&quot;a&quot;);\n      container.AddString(&quot;multicast&quot;);\n      container.AddString(&quot;delegate&quot;);\n      container.AddString(&quot;example&quot;);\n\n      // Create two delegates individually using different methods.\n      StringContainer.CheckAndDisplayDelegate conStart = StringExtensions.ConStart;\n      StringContainer.CheckAndDisplayDelegate vowelStart = StringExtensions.VowelStart;\n\n      // Get the list of all delegates assigned to this MulticastDelegate instance. \n      Delegate[] delegateList = conStart.GetInvocationList();\n      Console.WriteLine(&quot;conStart contains {0} delegate(s).&quot;, delegateList.Length);\n      delegateList = vowelStart.GetInvocationList();\n      Console.WriteLine(&quot;vowelStart contains {0} delegate(s).\\n&quot;, delegateList.Length);\n\n      // Determine whether the delegates are System.Multicast delegates. \n      if (conStart is System.MulticastDelegate &amp;&amp; vowelStart is System.MulticastDelegate) \n          Console.WriteLine(&quot;conStart and vowelStart are derived from MulticastDelegate.\\n&quot;);\n\n      // Execute the two delegates.\n      Console.WriteLine(&quot;Executing the conStart delegate:&quot;);\n      container.DisplayAllQualified(conStart);\n      Console.WriteLine();\n      Console.WriteLine(&quot;Executing the vowelStart delegate:&quot;);\n      container.DisplayAllQualified(vowelStart);\n      Console.WriteLine();\n      \n      // Create a new MulticastDelegate and call Combine to add two delegates.\n      StringContainer.CheckAndDisplayDelegate multipleDelegates = \n            (StringContainer.CheckAndDisplayDelegate) Delegate.Combine(conStart, vowelStart);\n\n      // How many delegates does multipleDelegates contain?\n      delegateList = multipleDelegates.GetInvocationList();\n      Console.WriteLine(&quot;\\nmultipleDelegates contains {0} delegates.\\n&quot;,\n                        delegateList.Length);\n\n      // Pass this multicast delegate to DisplayAllQualified.\n      Console.WriteLine(&quot;Executing the multipleDelegate delegate.&quot;);\n      container.DisplayAllQualified(multipleDelegates);\n\n      // Call remove and combine to change the contained delegates.\n      multipleDelegates = (StringContainer.CheckAndDisplayDelegate) Delegate.Remove(multipleDelegates, vowelStart);\n      multipleDelegates = (StringContainer.CheckAndDisplayDelegate) Delegate.Combine(multipleDelegates, conStart);\n\n      // Pass multipleDelegates to DisplayAllQualified again.\n      Console.WriteLine(&quot;\\nExecuting the multipleDelegate delegate with two conStart delegates:&quot;);\n      container.DisplayAllQualified(multipleDelegates);\n   }\n}\n// The example displays the following output:\n//    conStart contains 1 delegate(s).\n//    vowelStart contains 1 delegate(s).\n//    \n//    conStart and vowelStart are derived from MulticastDelegate.\n//    \n//    Executing the conStart delegate:\n//    This\n//    multicast\n//    delegate\n//    \n//    Executing the vowelStart delegate:\n//    is\n//    a\n//    example\n//    \n//    \n//    multipleDelegates contains 2 delegates.\n//    \n//    Executing the multipleDelegate delegate.\n//    This\n//    is\n//    a\n//    multicast\n//    delegate\n//    example\n//    \n//    Executing the multipleDelegate delegate with two conStart delegates:\n//    This\n//    This\n//    multicast\n//    multicast\n//    delegate\n//    delegate\n</code></pre><pre><code class=\"lang-vb\" name=\"Multicast Delegate Introduction#1\">Imports System.Collections.Generic\n\nClass StringContainer\n    &#39; Define a delegate to handle string display. \n    Delegate Sub CheckAndPrintDelegate(ByVal str As String)\n\n    &#39; A generic list object that holds the strings.\n    Private container As New List(Of String)()\n\n     &#39; A method that adds strings to the collection. \n     Public Sub AddString(ByVal s As String)\n        container.Add(s)\n    End Sub\n\n    &#39; Iterate through the strings and invoke the method(s) that the delegate points to.\n    Public Sub DisplayAllQualified(ByVal displayDelegate As CheckAndPrintDelegate)\n        For Each s In container\n            displayDelegate(s)\n        Next\n    End Sub\nEnd Class\n\n&#39; This class defines some methods to display strings. \nClass StringExtensions\n    &#39; Display a string if it starts with a consonant. \n    Public Shared Sub ConStart(ByVal str As String)\n        If Not (str.Chars(0) = &quot;a&quot;c Or str.Chars(0) = &quot;e&quot;c Or str.Chars(0) = &quot;i&quot;c _ \n                Or str.Chars(0) = &quot;o&quot;c Or str.Chars(0) = &quot;u&quot;c) Then\n            Console.WriteLine(str)\n        End If\n    End Sub \n\n    &#39; Display a string if it starts with a vowel.\n    Public Shared Sub VowelStart(ByVal str As String)\n        If (str.Chars(0) = &quot;a&quot;c Or str.Chars(0) = &quot;e&quot;c Or str.Chars(0) = &quot;i&quot;c _\n            Or str.Chars(0) = &quot;o&quot;c Or str.Chars(0) = &quot;u&quot;c) Then\n            Console.WriteLine(str)\n        End If\n    End Sub \nEnd Class \n\n&#39; Demonstrate the use of delegates, including the Remove and \n&#39; Combine methods to create and modify delegate combinations. \nClass Test\n    Public Shared Sub Main()\n        &#39; Declare the StringContainer class and add some strings\n        Dim container As New StringContainer()\n        container.AddString(&quot;this&quot;)\n        container.AddString(&quot;is&quot;)\n        container.AddString(&quot;a&quot;)\n        container.AddString(&quot;multicast&quot;)\n        container.AddString(&quot;delegate&quot;)\n        container.AddString(&quot;example&quot;)\n\n        &#39; Create two delegates individually using different methods.\n        Dim constart As StringContainer.CheckAndPrintDelegate = AddressOf StringExtensions.ConStart\n        Dim vowelStart As StringContainer.CheckAndPrintDelegate = AddressOf StringExtensions.VowelStart\n\n        &#39; Get the list of all delegates assigned to this MulticastDelegate instance. \n        Dim delegateList() As [Delegate] = conStart.GetInvocationList()\n        Console.WriteLine(&quot;conStart contains {0} delegate(s).&quot;, delegateList.Length)\n        delegateList = vowelStart.GetInvocationList()\n        Console.WriteLine(&quot;vowelStart contains {0} delegate(s).&quot;, delegateList.Length)\n        Console.WriteLine()\n        \n        &#39; Determine whether the delegates are System.Multicast delegates\n        If TypeOf conStart Is System.MulticastDelegate And TypeOf vowelStart Is System.MulticastDelegate Then\n            Console.WriteLine(&quot;conStart and vowelStart are derived from MulticastDelegate.&quot;)\n            Console.WriteLine()\n        End If\n\n        &#39; Run the two single delegates one after the other.\n        Console.WriteLine(&quot;Executing the conStart delegate:&quot;)\n        container.DisplayAllQualified(conStart)\n        Console.WriteLine(&quot;Executing the vowelStart delegate:&quot;)\n        container.DisplayAllQualified(vowelStart)\n        Console.WriteLine()\n\n        &#39; Create a new MulticastDelegate and call Combine to add two delegates.\n        Dim multipleDelegates As StringContainer.CheckAndPrintDelegate = \n                  CType([Delegate].Combine(conStart, vowelStart), \n                  StringContainer.CheckAndPrintDelegate)\n\n        &#39; How many delegates does multipleDelegates contain?\n        delegateList = multipleDelegates.GetInvocationList()\n        Console.WriteLine(&quot;{1}multipleDelegates contains {0} delegates.{1}&quot;,\n                          delegateList.Length, vbCrLf)\n\n        &#39; Pass this mulitcast delegate to DisplayAllQualified.\n        Console.WriteLine(&quot;Executing the multipleDelegate delegate.&quot;)\n        container.DisplayAllQualified(multipleDelegates)\n\n        &#39; Call remove and combine to change the contained delegates.\n        multipleDelegates = CType([Delegate].Remove(multipleDelegates, vowelStart), \n                            StringContainer.CheckAndPrintDelegate)\n        multipleDelegates = CType([Delegate].Combine(multipleDelegates, conStart), \n                            StringContainer.CheckAndPrintDelegate)\n\n        &#39; Pass multipleDelegates to DisplayAllQualified again.\n        Console.WriteLine()\n        Console.WriteLine(&quot;Executing the multipleDelegate delegate with two conStart delegates:&quot;)\n        container.DisplayAllQualified(multipleDelegates)\n    End Sub \nEnd Class \n&#39; The example displays the following output:\n&#39;    conStart contains 1 delegate(s).\n&#39;    vowelStart contains 1 delegate(s).\n&#39;    \n&#39;    conStart and vowelStart are derived from MulticastDelegate.\n&#39;    \n&#39;    Executing the conStart delegate:\n&#39;    This\n&#39;    multicast\n&#39;    delegate\n&#39;    \n&#39;    Executing the vowelStart delegate:\n&#39;    is\n&#39;    a\n&#39;    example\n&#39;    \n&#39;    \n&#39;    multipleDelegates contains 2 delegates.\n&#39;    \n&#39;    Executing the multipleDelegate delegate.\n&#39;    This\n&#39;    is\n&#39;    a\n&#39;    multicast\n&#39;    delegate\n&#39;    example\n&#39;    \n&#39;    Executing the multipleDelegate delegate with two conStart delegates:\n&#39;    This\n&#39;    This\n&#39;    multicast\n&#39;    multicast\n&#39;    delegate\n&#39;    delegate\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>MulticastDelegate is a special class. Compilers and other tools can derive from this class, but you cannot derive from it explicitly. The same is true of the <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> class.  </p>\n<p> In addition to the methods that delegate types inherit from MulticastDelegate, the common language runtime provides two special methods: <code>BeginInvoke</code> and <code>EndInvoke</code>. For more information about these methods, see <a href=\"../topic/calling%20synchronous%20methods%20asynchronously\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>.  </p>\n<p> A MulticastDelegate has a linked list of delegates, called an invocation list, consisting of one or more elements. When a multicast delegate is invoked, the delegates in the invocation list are called synchronously in the order in which they appear. If an error occurs during execution of the list then an exception is thrown.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate__ctor_System_Object_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MulticastDelegate(Object, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected MulticastDelegate (object target, string method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>target</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object on which <code>method</code> is defined.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the method for which a delegate is created.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor cannot be used in application code. To create a delegate by specifying the name of an instance method, use an overload of the <a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_\" data-linktype=\"relative-path\">CreateDelegate</a> method that specifies a method name and a target object. For example, the <a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Object_System_String_\" data-linktype=\"relative-path\">System.Delegate.CreateDelegate(Type, Object, String)</a> method overload creates a delegate for an instance method with a specified name.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate__ctor_System_Type_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MulticastDelegate(Type, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected MulticastDelegate (Type target, string method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>target</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of object on which <code>method</code> is defined.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the static method for which a delegate is created.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor cannot be used in application code. To create a delegate by specifying the name of a static method, use an overload of the <a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_\" data-linktype=\"relative-path\">CreateDelegate</a> method that specifies a method name but does not specify a target object. For example, the <a class=\"xref\" href=\"system.delegate#System_Delegate_CreateDelegate_System_Type_System_Type_System_String_\" data-linktype=\"relative-path\">System.Delegate.CreateDelegate(Type, Type, String)</a> method overload creates a static delegate for a method with a specified name.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_CombineImpl_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_CombineImpl_System_Delegate_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CombineImpl(Delegate)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Combines this <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> with the specified <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> to form a new delegate.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override sealed Delegate CombineImpl (Delegate follow);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>follow</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The delegate to combine with this delegate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A delegate that is the new root of the <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a> invocation list.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>follow</code> does not have the same type as this instance.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether this multicast delegate and the specified object are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override sealed bool Equals (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare with this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>obj</code> and this instance have the same invocation lists; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two delegates are equal if they are not <code>null</code> and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  </p>\n<p> Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_GetHashCode_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the hash code for this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override sealed int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A 32-bit signed integer hash code.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_GetInvocationList_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_GetInvocationList\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetInvocationList()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the invocation list of this multicast delegate, in invocation order.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override sealed Delegate[] GetInvocationList ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a>[]</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An array of delegates whose invocation lists collectively match the invocation list of this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The array contains a set of delegates, each with an invocation list of one entry. Invoking these delegates sequentially, in the order they appear in the array, produces the same results as invoking the current instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_GetMethodImpl_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_GetMethodImpl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetMethodImpl()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a static method represented by the current <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Reflection.MethodInfo GetMethodImpl ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A static method represented by the current <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a> represents multiple methods, only one method is returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_GetObjectData_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetObjectData(SerializationInfo, StreamingContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with all the data needed to serialize this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that holds all the data needed to serialize or deserialize this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>(Reserved) The location where serialized data is stored and retrieved.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitycriticalattribute\" title=\"System.Security.SecurityCriticalAttribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>info</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>A serialization error occurred.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method stores all the information in <code>info</code> necessary to serialize this instance.  </p>\n<p> The <code>context</code> parameter is reserved and is not currently used in the execution of this method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_RemoveImpl_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_RemoveImpl_System_Delegate_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoveImpl(Delegate)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes an element from the invocation list of this <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a> that is equal to the specified delegate.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override sealed Delegate RemoveImpl (Delegate value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The delegate to search for in the invocation list.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>If <code>value</code> is found in the invocation list for this instance, then a new <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> without <code>value</code> in its invocation list; otherwise, this instance with its original invocation list.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Operators\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_op_Equality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_op_Equality_System_MulticastDelegate_System_MulticastDelegate_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Equality(MulticastDelegate, MulticastDelegate)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether two <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a> objects are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Equality (MulticastDelegate d1, MulticastDelegate d2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The left operand.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The right operand.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>d1</code> and <code>d2</code> have the same invocation lists; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two delegates are equal if they are not <code>null</code> and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  </p>\n<p> Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_MulticastDelegate_op_Inequality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_MulticastDelegate_op_Inequality_System_MulticastDelegate_System_MulticastDelegate_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Inequality(MulticastDelegate, MulticastDelegate)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether two <a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a> objects are not equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Inequality (MulticastDelegate d1, MulticastDelegate d2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The left operand.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.multicastdelegate\" data-linktype=\"relative-path\">MulticastDelegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The right operand.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>d1</code> and <code>d2</code> do not have the same invocation lists; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.memberaccessexception\" data-linktype=\"relative-path\">MemberAccessException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two delegates are equal if they are not <code>null</code> and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  </p>\n<p> Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.MulticastDelegate.yml\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate..ctor\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.CombineImpl\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.Equals\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.GetInvocationList\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.GetMethodImpl\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.MulticastDelegate.RemoveImpl\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"cda6bc2e-dfc1-300b-d9e3-e3a9ee97665c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.MulticastDelegate\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.MulticastDelegate.yml","open_to_public_contributors":false,"api_name":["System.MulticastDelegate","System.MulticastDelegate..ctor","System.MulticastDelegate.CombineImpl","System.MulticastDelegate.Equals","System.MulticastDelegate.GetHashCode","System.MulticastDelegate.GetInvocationList","System.MulticastDelegate.GetMethodImpl","System.MulticastDelegate.GetObjectData","System.MulticastDelegate.op_Equality","System.MulticastDelegate.op_op_Equality","System.MulticastDelegate.op_Inequality","System.MulticastDelegate.op_op_Inequality","System.MulticastDelegate.RemoveImpl"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.MulticastDelegate","System::MulticastDelegate","System.MulticastDelegate.#ctor","System::MulticastDelegate::#ctor","System.MulticastDelegate.CombineImpl","System::MulticastDelegate::CombineImpl","System.MulticastDelegate.Equals","System::MulticastDelegate::Equals","System.MulticastDelegate.GetHashCode","System::MulticastDelegate::GetHashCode","System.MulticastDelegate.GetInvocationList","System::MulticastDelegate::GetInvocationList","System.MulticastDelegate.GetMethodImpl","System::MulticastDelegate::GetMethodImpl","System.MulticastDelegate.GetObjectData","System::MulticastDelegate::GetObjectData","System.MulticastDelegate.op_Equality","System::MulticastDelegate::op_Equality","System.MulticastDelegate.op_Inequality","System::MulticastDelegate::op_Inequality","System.MulticastDelegate.RemoveImpl","System::MulticastDelegate::RemoveImpl"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"cda6bc2e-dfc1-300b-d9e3-e3a9ee97665c","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System/MulticastDelegate.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MulticastDelegate class | Microsoft Docs","_op_ogTitle":"MulticastDelegate class","description":"Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.\n","toc_asset_id":"api/_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.MulticastDelegate","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.multicastdelegate","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.multicastdelegate","fileRelativePath":"api/System.MulticastDelegate.html"},"themesRelativePathToOutputRoot":"_themes/"}