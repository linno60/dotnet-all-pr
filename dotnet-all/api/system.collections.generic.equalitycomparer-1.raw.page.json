{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EqualityComparer&lt;T&gt;</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a base class for implementations of the <span class=\"xref\">stem.Collections.Generic.IEqualityComparer`1</span> generic interface.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>T</td>\r\n  \t\t\t<td><p>The type of objects to compare.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">EqualityComparer&lt;T&gt;</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example creates a dictionary collection of objects of type <code>Box</code> with an equality comparer. Two boxes are considered equal if their dimensions are the same. It then adds the boxes to the collection.  </p>\n<p> The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Collections.Generic.EqualityComparer#1\">&#39;Imports System.Collections\nImports System.Collections.Generic\n\nModule Program\n    Dim boxes As Dictionary(Of Box, [String])\n\n    Public Sub Main(ByVal args As String())\n\n        Dim boxDim As New BoxSameDimensions()\n        boxes = New Dictionary(Of Box, String)(boxDim)\n\n        Console.WriteLine(&quot;Boxes equality by dimensions:&quot;)\n        Dim redBox As New Box(8, 4, 8)\n        Dim greenBox As New Box(8, 6, 8)\n        Dim blueBox As New Box(8, 4, 8)\n        Dim yellowBox As New Box(8, 8, 8)\n        AddBox(redBox, &quot;red&quot;)\n        AddBox(greenBox, &quot;green&quot;)\n        AddBox(blueBox, &quot;blue&quot;)\n        AddBox(yellowBox, &quot;yellow&quot;)\n\n        Console.WriteLine()\n        Console.WriteLine(&quot;Boxes equality by volume:&quot;)\n\n        Dim boxVolume As New BoxSameVolume()\n        boxes = New Dictionary(Of Box, String)(boxVolume)\n        Dim pinkBox As New Box(8, 4, 8)\n        Dim orangeBox As New Box(8, 6, 8)\n        Dim purpleBox As New Box(4, 8, 8)\n        Dim brownBox As New Box(8, 8, 4)\n        AddBox(pinkBox, &quot;pink&quot;)\n        AddBox(orangeBox, &quot;orange&quot;)\n        AddBox(purpleBox, &quot;purple&quot;)\n        AddBox(brownBox, &quot;brown&quot;)\n    End Sub\n\n    Public Sub AddBox(ByVal bx As Box, ByVal name As String)\n        Try\n            boxes.Add(bx, name)\n            Console.WriteLine(&quot;Added {0}, Count = {1}, HashCode = {2}&quot;, _\n                              name, boxes.Count.ToString(), bx.GetHashCode())\n        Catch generatedExceptionName As ArgumentException\n            Console.WriteLine(&quot;A box equal to {0} is already in the collection.&quot;, name)\n        End Try\n    End Sub\nEnd Module\n\nPublic Class Box\n    Public Sub New(ByVal h As Integer, ByVal l As Integer, ByVal w As Integer)\n        Me.Height = h\n        Me.Length = l\n        Me.Width = w\n    End Sub\n    \n    Private _Height As Integer\n    Public Property Height() As Integer\n        Get\n            Return _Height\n        End Get\n        Set(ByVal value As Integer)\n            _Height = value\n        End Set\n    End Property\n\n    Private _Length As Integer\n    Public Property Length() As Integer\n        Get\n            Return _Length\n        End Get\n        Set(ByVal value As Integer)\n            _Length = value\n        End Set\n    End Property\n\n    Private _Width As Integer\n    Public Property Width() As Integer\n        Get\n            Return _Width\n        End Get\n        Set(ByVal value As Integer)\n            _Width = value\n        End Set\n    End Property\nEnd Class\n\nClass BoxSameDimensions : Inherits EqualityComparer(Of Box)\n    Public Overloads Overrides Function Equals(ByVal b1 As Box, _\n                                      ByVal b2 As Box) As Boolean\n        If b1 Is Nothing AndAlso b2 Is Nothing Then\n           Return True\n        Else If b1 Is Nothing OrElse b2 Is Nothing Then\n           Return False\n        End If\n\n        If b1.Height = b2.Height AndAlso b1.Length = b2.Length _\n                                 AndAlso b1.Width = b2.Width Then\n            Return True\n        Else\n            Return False\n        End If\n    End Function\n\n    Public Overloads Overrides Function GetHashCode(ByVal bx As Box) As Integer\n        Dim hCode As Integer = bx.Height Xor bx.Length Xor bx.Width\n        Return hCode.GetHashCode()\n    End Function\nEnd Class\n\nClass BoxSameVolume : Inherits EqualityComparer(Of Box)\n    Public Overloads Overrides Function Equals(ByVal b1 As Box, _\n                                          ByVal b2 As Box) As Boolean\n        If b1 Is Nothing AndAlso b2 Is Nothing Then\n           Return True\n        Else If b1 Is Nothing OrElse b2 Is Nothing Then\n           Return False\n        End If\n\n        If b1.Height * b1.Width * b1.Length = _\n                                b2.Height * b2.Width * b2.Length Then\n            Return True\n        Else\n            Return False\n        End If\n    End Function\n\n    Public Overloads Overrides Function GetHashCode(ByVal bx As Box) As Integer\n        Dim hCode As Integer = bx.Height * bx.Length * bx.Width\n        Return hCode.GetHashCode()\n    End Function\nEnd Class\n&#39; This example produces the following output:\n&#39; * \n&#39;    Boxes equality by dimensions:\n&#39;    Added red, Count = 1, HashCode = 46104728\n&#39;    Added green, Count = 2, HashCode = 12289376\n&#39;    A box equal to blue is already in the collection.\n&#39;    Added yellow, Count = 3, HashCode = 43495525\n&#39;\n&#39;    Boxes equality by volume:\n&#39;    Added pink, Count = 1, HashCode = 55915408\n&#39;    Added orange, Count = 2, HashCode = 33476626\n&#39;    A box equal to purple is already in the collection.\n&#39;    A box equal to brown is already in the collection.\n&#39; * \n&#39; \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Generic.EqualityComparer#1\">using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n\tstatic Dictionary&lt;Box, String&gt; boxes;\n\n\tstatic void Main()\n\t{\n\t\tBoxSameDimensions boxDim = new BoxSameDimensions();\n\t\tboxes = new Dictionary&lt;Box, string&gt;(boxDim);\n\n\t\tConsole.WriteLine(&quot;Boxes equality by dimensions:&quot;);\n\t\tBox redBox = new Box(8, 4, 8);\n\t\tBox greenBox = new Box(8, 6, 8);\n\t\tBox blueBox = new Box(8, 4, 8);\n\t\tBox yellowBox = new Box(8, 8, 8); \n\t\tAddBox(redBox, &quot;red&quot;);\n\t\tAddBox(greenBox, &quot;green&quot;);\n\t\tAddBox(blueBox, &quot;blue&quot;);\n\t\tAddBox(yellowBox, &quot;yellow&quot;);\n\n\t\tConsole.WriteLine();\n\t\tConsole.WriteLine(&quot;Boxes equality by volume:&quot;);\n\n\t\tBoxSameVolume boxVolume = new BoxSameVolume();\n\t\tboxes = new Dictionary&lt;Box, string&gt;(boxVolume);\n\t\tBox pinkBox = new Box(8, 4, 8);\n\t\tBox orangeBox = new Box(8, 6, 8);\n\t\tBox purpleBox = new Box(4, 8, 8);\n\t\tBox brownBox = new Box(8, 8, 4);\n\t\tAddBox(pinkBox, &quot;pink&quot;);\n\t\tAddBox(orangeBox, &quot;orange&quot;);\n\t\tAddBox(purpleBox, &quot;purple&quot;);\n\t\tAddBox(brownBox, &quot;brown&quot;);\n\t}\n\n\tpublic static void AddBox(Box bx, string name)\n\t{\n\t\ttry\n\t\t{\n\t\t\tboxes.Add(bx, name);\n\t\t\tConsole.WriteLine(&quot;Added {0}, Count = {1}, HashCode = {2}&quot;, \n\t\t\t\tname, boxes.Count.ToString(), bx.GetHashCode());\n\t\t}\n\t\tcatch (ArgumentException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;A box equal to {0} is already in the collection.&quot;, name);\n\t\t}\n\t}\n}\n\npublic class Box\n{\n\tpublic Box(int h, int l, int w)\n\t{\n\t\tthis.Height = h;\n\t\tthis.Length = l;\n\t\tthis.Width = w;\n\t}\n\tpublic int Height { get; set; }\n\tpublic int Length { get; set; }\n\tpublic int Width { get; set; }\n}\n\nclass BoxSameDimensions : EqualityComparer&lt;Box&gt;\n{\n\tpublic override bool Equals(Box b1, Box b2)\n\t{\n\t\tif (b1 == null &amp;&amp; b2 == null)\n         return true;\n      else if (b1 == null || b2 == null)\n         return false;\n         \n\t\tif (b1.Height == b2.Height &amp;&amp; b1.Length == b2.Length\n\t\t\t\t\t\t\t&amp;&amp; b1.Width == b2.Width)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic override int GetHashCode(Box bx)\n\t{\n\t\tint hCode = bx.Height ^ bx.Length ^ bx.Width;\n\t\treturn hCode.GetHashCode();\n\t}\n\n}\n\nclass BoxSameVolume : EqualityComparer&lt;Box&gt;\n{\n\tpublic override bool Equals(Box b1, Box b2)\n\t{\n\t\tif (b1 == null &amp;&amp; b2 == null)\n         return true;\n      else if (b1 == null || b2 == null)\n         return false;\n         \n      if (b1.Height * b1.Width * b1.Length == \n\t\t\tb2.Height * b2.Width * b2.Length)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic override int GetHashCode(Box bx)\n\t{\n\t\tint hCode = bx.Height * bx.Length * bx.Width;\n\t\treturn hCode.GetHashCode();\n\t}\n}\n/* This example produces the following output:\n * \n      Boxes equality by dimensions:\n      Added red, Count = 1, HashCode = 46104728\n      Added green, Count = 2, HashCode = 12289376\n      A box equal to blue is already in the collection.\n      Added yellow, Count = 3, HashCode = 43495525\n\n      Boxes equality by volume:\n      Added pink, Count = 1, HashCode = 55915408\n      Added orange, Count = 2, HashCode = 33476626\n      A box equal to purple is already in the collection.\n      A box equal to brown is already in the collection.\n * \n*/\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Derive from this class to provide a custom implementation of the <a class=\"xref\" href=\"system.collections.generic.iequalitycomparer-1\" data-linktype=\"relative-path\">IEqualityComparer&lt;T&gt;</a> generic interface for use with collection classes such as the <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> generic class, or with methods such as <a class=\"xref\" href=\"system.collections.generic.list-1#System_Collections_Generic_List_1_Sort_\" data-linktype=\"relative-path\">Sort</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property checks whether type <code>T</code> implements the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">System.IEquatable&lt;T&gt;</a> generic interface and, if so, returns an EqualityComparer(T) that invokes the implementation of the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method. Otherwise, it returns an EqualityComparer(T), as provided by <code>T</code>.  </p>\n<p> We recommend that you derive from the EqualityComparer(T) class instead of implementing the <a class=\"xref\" href=\"system.collections.generic.iequalitycomparer-1\" data-linktype=\"relative-path\">IEqualityComparer&lt;T&gt;</a> interface, because the EqualityComparer(T) class tests for equality using the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method instead of the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> method. This is consistent with the <code>Contains</code>, <code>IndexOf</code>, <code>LastIndexOf</code>, and <code>Remove</code> methods of the <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> class and other generic collections.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_EqualityComparer_1__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EqualityComparer&lt;T&gt;()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.EqualityComparer`1</span> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected EqualityComparer ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_EqualityComparer_1_Default\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Default</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a default equality comparer for the type specified by the generic argument.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default instance of the <span class=\"xref\">stem.Collections.Generic.EqualityComparer`1</span> class for type <code>T</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Default property checks whether type <code>T</code> implements the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">System.IEquatable&lt;T&gt;</a> interface and, if so, returns an <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> that uses that implementation. Otherwise, it returns an <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> that uses the overrides of <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> and <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> provided by <code>T</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_EqualityComparer_1_Equals__0__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(T,T)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, determines whether two objects of type <code>T</code> are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract bool Equals (T x, T y);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified objects are equal; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Equals method is reflexive, symmetric, and transitive. That is, it returns <code>true</code> if used to compare an object with itself; <code>true</code> for two objects <code>x</code> and <code>y</code> if it is <code>true</code> for <code>y</code> and <code>x</code>; and <code>true</code> for two objects <code>x</code> and <code>z</code> if it is <code>true</code> for <code>x</code> and <code>y</code> and also <code>true</code> for <code>y</code> and <code>z</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_EqualityComparer_1_GetHashCode__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode(T)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract int GetHashCode (T obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object for which to get a hash code.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A hash code for the specified object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The type of <code>obj</code> is a reference type and <code>obj</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_Equals_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IEqualityComparer.Equals(Object,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the specified objects are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool IEqualityComparer.Equals (object x, object y);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified objects are equal; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>x</code> or <code>y</code> is of a type that cannot be cast to type <code>T</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is a wrapper for the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Equals__0__0_\" data-linktype=\"relative-path\">Equals(T,T)</a> method, so <code>obj</code> must be cast to the type specified by the generic argument <code>T</code> of the current instance. If it cannot be cast to <code>T</code>, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n<p> Comparing <code>null</code> is allowed and does not generate an exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_GetHashCode_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IEqualityComparer.GetHashCode(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a hash code for the specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">int IEqualityComparer.GetHashCode (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> for which a hash code is to be returned.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A hash code for the specified object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The type of <code>obj</code> is a reference type and <code>obj</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>obj</code> is of a type that cannot be cast to type <code>T</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is a wrapper for the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_GetHashCode__0_\" data-linktype=\"relative-path\">GetHashCode(T)</a> method, so <code>obj</code> must be a type that can be cast to the type specified by the generic type argument <code>T</code> of the current instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.Generic.EqualityComparer-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.Default\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.Equals\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.IEqualityComparer.Equals\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.IEqualityComparer.GetHashCode\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"e45b4f27-8d80-96a5-32aa-8485530dfe60\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a base class for implementations of the  generic interface.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.collections.generic/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Generic.EqualityComparer`1\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.Generic.EqualityComparer-1.yml","open_to_public_contributors":false,"api_name":["System.Collections.Generic.EqualityComparer<T>","System.Collections.Generic.EqualityComparer<T>..ctor","System.Collections.Generic.EqualityComparer<T>.Default","System.Collections.Generic.EqualityComparer<T>.Equals","System.Collections.Generic.EqualityComparer<T>.GetHashCode","System.Collections.Generic.EqualityComparer<T>.IEqualityComparer.Equals","System.Collections.Generic.EqualityComparer<T>.IEqualityComparer.GetHashCode"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Generic.EqualityComparer`1","System::Collections::Generic::EqualityComparer`1","System.Collections.Generic.EqualityComparer`1.#ctor","System::Collections::Generic::EqualityComparer`1::#ctor","System.Collections.Generic.EqualityComparer`1.Default","System::Collections::Generic::EqualityComparer`1::Default","System.Collections.Generic.EqualityComparer`1.Equals","System::Collections::Generic::EqualityComparer`1::Equals","System.Collections.Generic.EqualityComparer`1.GetHashCode","System::Collections::Generic::EqualityComparer`1::GetHashCode","System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals","System::Collections::Generic::EqualityComparer`1::System#Collections#IEqualityComparer#Equals","System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode","System::Collections::Generic::EqualityComparer`1::System#Collections#IEqualityComparer#GetHashCode"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"e45b4f27-8d80-96a5-32aa-8485530dfe60","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EqualityComparer<T> class | Microsoft Docs","_op_ogTitle":"EqualityComparer<T> class","description":"Provides a base class for implementations of the  generic interface.\n","toc_asset_id":"api/_splitted/System.Collections.Generic/toc.json","toc_rel":"_splitted/System.Collections.Generic/toc.json","source_url":"","ms.assetid":"System.Collections.Generic.EqualityComparer`1","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.equalitycomparer-1","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.equalitycomparer-1","fileRelativePath":"api/System.Collections.Generic.EqualityComparer-1.html"},"themesRelativePathToOutputRoot":"_themes/"}