{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SoundPlayer</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Controls playback of a sound from a .wav file.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.ToolboxItem(false)]\npublic class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a></span></div><span class=\"lang-csharp\">SoundPlayer</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the use of the SoundPlayer class for playing .wav files from a local path or a Uniform Resource Identifier (URI).  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#1\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.Diagnostics\nImports System.Drawing\nImports System.Media\nImports System.Windows.Forms\n\nPublic Class SoundTestForm\n    Inherits System.Windows.Forms.Form\n    Private label1 As System.Windows.Forms.Label\n    Private WithEvents filepathTextbox As System.Windows.Forms.TextBox\n    Private WithEvents playOnceSyncButton As System.Windows.Forms.Button\n    Private WithEvents playOnceAsyncButton As System.Windows.Forms.Button\n    Private WithEvents playLoopAsyncButton As System.Windows.Forms.Button\n    Private WithEvents selectFileButton As System.Windows.Forms.Button\n\n    Private WithEvents stopButton As System.Windows.Forms.Button\n    Private statusBar As System.Windows.Forms.StatusBar\n    Private WithEvents loadSyncButton As System.Windows.Forms.Button\n    Private WithEvents loadAsyncButton As System.Windows.Forms.Button\n    Private player As SoundPlayer\n\n\n    Public Sub New()\n\n        &#39; Initialize Forms Designer generated code.\n        InitializeComponent()\n\n        &#39; Disable playback controls until a valid .wav file \n        &#39; is selected.\n        EnablePlaybackControls(False)\n\n        &#39; Set up the status bar and other controls.\n        InitializeControls()\n\n        &#39; Set up the SoundPlayer object.\n        InitializeSound()\n\n    End Sub\n\n\n    &#39; Sets up the status bar and other controls.\n    Private Sub InitializeControls()\n\n        &#39; Set up the status bar.\n        Dim panel As New StatusBarPanel\n        panel.BorderStyle = StatusBarPanelBorderStyle.Sunken\n        panel.Text = &quot;Ready.&quot;\n        panel.AutoSize = StatusBarPanelAutoSize.Spring\n        Me.statusBar.ShowPanels = True\n        Me.statusBar.Panels.Add(panel)\n\n    End Sub\n\n\n    &#39; Sets up the SoundPlayer object.\n    Private Sub InitializeSound()\n\n        &#39; Create an instance of the SoundPlayer class.\n        player = New SoundPlayer\n\n        &#39; Listen for the LoadCompleted event.\n        AddHandler player.LoadCompleted, AddressOf player_LoadCompleted\n\n        &#39; Listen for the SoundLocationChanged event.\n        AddHandler player.SoundLocationChanged, AddressOf player_LocationChanged\n\n    End Sub\n\n\n    Private Sub selectFileButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles selectFileButton.Click\n\n        &#39; Create a new OpenFileDialog.\n        Dim dlg As New OpenFileDialog\n\n        &#39; Make sure the dialog checks for existence of the \n        &#39; selected file.\n        dlg.CheckFileExists = True\n\n        &#39; Allow selection of .wav files only.\n        dlg.Filter = &quot;WAV files (*.wav)|*.wav&quot;\n        dlg.DefaultExt = &quot;.wav&quot;\n\n        &#39; Activate the file selection dialog.\n        If dlg.ShowDialog() = System.Windows.Forms.DialogResult.OK Then\n            &#39; Get the selected file&#39;s path from the dialog.\n            Me.filepathTextbox.Text = dlg.FileName\n\n            &#39; Assign the selected file&#39;s path to the SoundPlayer object.\n            player.SoundLocation = filepathTextbox.Text\n        End If\n\n    End Sub\n\n\n    &#39; Convenience method for setting message text in \n    &#39; the status bar.\n    Private Sub ReportStatus(ByVal statusMessage As String)\n\n        &#39; If the caller passed in a message...\n        If (statusMessage IsNot Nothing) AndAlso _\n            statusMessage &lt;&gt; [String].Empty Then\n            &#39; ...post the caller&#39;s message to the status bar.\n            Me.statusBar.Panels(0).Text = statusMessage\n        End If\n\n    End Sub\n\n\n    &#39; Enables and disables play controls.\n    Private Sub EnablePlaybackControls(ByVal enabled As Boolean)\n\n        Me.playOnceSyncButton.Enabled = enabled\n        Me.playOnceAsyncButton.Enabled = enabled\n        Me.playLoopAsyncButton.Enabled = enabled\n        Me.stopButton.Enabled = enabled\n\n    End Sub\n\n\n    Private Sub filepathTextbox_TextChanged(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles filepathTextbox.TextChanged\n\n        &#39; Disable playback controls until the new .wav is loaded.\n        EnablePlaybackControls(False)\n\n    End Sub\n\n\n    Private Sub loadSyncButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles loadSyncButton.Click\n\n        &#39; Disable playback controls until the .wav is successfully\n        &#39; loaded. The LoadCompleted event handler will enable them.\n        EnablePlaybackControls(False)\n\n        Try\n            &#39; Assign the selected file&#39;s path to the SoundPlayer object.\n            player.SoundLocation = filepathTextbox.Text\n\n            &#39; Load the .wav file.\n            player.Load()\n        Catch ex As Exception\n            ReportStatus(ex.Message)\n        End Try\n\n    End Sub\n\n\n    Private Sub loadAsyncButton_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles loadAsyncButton.Click\n\n        &#39; Disable playback controls until the .wav is successfully\n        &#39; loaded. The LoadCompleted event handler will enable them.\n        EnablePlaybackControls(False)\n\n        Try\n            &#39; Assign the selected file&#39;s path to the SoundPlayer object.\n            player.SoundLocation = Me.filepathTextbox.Text\n\n            &#39; Load the .wav file.\n            player.LoadAsync()\n        Catch ex As Exception\n            ReportStatus(ex.Message)\n        End Try\n\n    End Sub\n\n\n    &#39; Synchronously plays the selected .wav file once.\n    &#39; If the file is large, UI response will be visibly \n    &#39; affected.\n    Private Sub playOnceSyncButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles playOnceSyncButton.Click\n\n        ReportStatus(&quot;Playing .wav file synchronously.&quot;)\n        player.PlaySync()\n        ReportStatus(&quot;Finished playing .wav file synchronously.&quot;)\n    End Sub\n\n\n    &#39; Asynchronously plays the selected .wav file once.\n    Private Sub playOnceAsyncButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles playOnceAsyncButton.Click\n\n        ReportStatus(&quot;Playing .wav file asynchronously.&quot;)\n        player.Play()\n\n    End Sub\n\n\n    &#39; Asynchronously plays the selected .wav file until the user\n    &#39; clicks the Stop button.\n    Private Sub playLoopAsyncButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles playLoopAsyncButton.Click\n\n        ReportStatus(&quot;Looping .wav file asynchronously.&quot;)\n        player.PlayLooping()\n\n    End Sub\n\n\n    &#39; Stops the currently playing .wav file, if any.\n    Private Sub stopButton_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles stopButton.Click\n\n        player.Stop()\n        ReportStatus(&quot;Stopped by user.&quot;)\n\n    End Sub\n\n\n    &#39; Handler for the LoadCompleted event.\n    Private Sub player_LoadCompleted(ByVal sender As Object, _\n        ByVal e As AsyncCompletedEventArgs)\n\n        Dim message As String = [String].Format(&quot;LoadCompleted: {0}&quot;, _\n            Me.filepathTextbox.Text)\n        ReportStatus(message)\n        EnablePlaybackControls(True)\n\n    End Sub\n\n    &#39; Handler for the SoundLocationChanged event.\n    Private Sub player_LocationChanged(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        Dim message As String = [String].Format(&quot;SoundLocationChanged: {0}&quot;, _\n            player.SoundLocation)\n        ReportStatus(message)\n    End Sub\n\n    Private Sub playSoundFromResource(ByVal sender As Object, _\n    ByVal e As EventArgs)\n        Dim a As System.Reflection.Assembly = System.Reflection.Assembly.GetExecutingAssembly()\n        Dim s As System.IO.Stream = a.GetManifestResourceStream(&quot;&lt;AssemblyName&gt;.chimes.wav&quot;)\n        Dim player As SoundPlayer = New SoundPlayer(s)\n        player.Play()\n    End Sub\n\n    Private Sub InitializeComponent()\n        Me.filepathTextbox = New System.Windows.Forms.TextBox\n        Me.selectFileButton = New System.Windows.Forms.Button\n        Me.label1 = New System.Windows.Forms.Label\n        Me.loadSyncButton = New System.Windows.Forms.Button\n        Me.playOnceSyncButton = New System.Windows.Forms.Button\n        Me.playOnceAsyncButton = New System.Windows.Forms.Button\n        Me.stopButton = New System.Windows.Forms.Button\n        Me.playLoopAsyncButton = New System.Windows.Forms.Button\n        Me.statusBar = New System.Windows.Forms.StatusBar\n        Me.loadAsyncButton = New System.Windows.Forms.Button\n        Me.SuspendLayout()\n        &#39; \n        &#39; filepathTextbox\n        &#39; \n        Me.filepathTextbox.Anchor = CType(System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right, System.Windows.Forms.AnchorStyles)\n        Me.filepathTextbox.Location = New System.Drawing.Point(7, 25)\n        Me.filepathTextbox.Name = &quot;filepathTextbox&quot;\n        Me.filepathTextbox.Size = New System.Drawing.Size(263, 20)\n        Me.filepathTextbox.TabIndex = 1\n        Me.filepathTextbox.Text = &quot;&quot;\n        &#39; \n        &#39; selectFileButton\n        &#39; \n        Me.selectFileButton.Anchor = CType(System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right, System.Windows.Forms.AnchorStyles)\n        Me.selectFileButton.Location = New System.Drawing.Point(276, 25)\n        Me.selectFileButton.Name = &quot;selectFileButton&quot;\n        Me.selectFileButton.Size = New System.Drawing.Size(23, 21)\n        Me.selectFileButton.TabIndex = 2\n        Me.selectFileButton.Text = &quot;...&quot;\n        &#39; \n        &#39; label1\n        &#39; \n        Me.label1.Location = New System.Drawing.Point(7, 7)\n        Me.label1.Name = &quot;label1&quot;\n        Me.label1.Size = New System.Drawing.Size(145, 17)\n        Me.label1.TabIndex = 3\n        Me.label1.Text = &quot;.wav path or URL:&quot;\n        &#39; \n        &#39; loadSyncButton\n        &#39; \n        Me.loadSyncButton.Location = New System.Drawing.Point(7, 53)\n        Me.loadSyncButton.Name = &quot;loadSyncButton&quot;\n        Me.loadSyncButton.Size = New System.Drawing.Size(142, 23)\n        Me.loadSyncButton.TabIndex = 4\n        Me.loadSyncButton.Text = &quot;Load Synchronously&quot;\n        &#39; \n        &#39; playOnceSyncButton\n        &#39; \n        Me.playOnceSyncButton.Location = New System.Drawing.Point(7, 86)\n        Me.playOnceSyncButton.Name = &quot;playOnceSyncButton&quot;\n        Me.playOnceSyncButton.Size = New System.Drawing.Size(142, 23)\n        Me.playOnceSyncButton.TabIndex = 5\n        Me.playOnceSyncButton.Text = &quot;Play Once Synchronously&quot;\n        &#39; \n        &#39; playOnceAsyncButton\n        &#39; \n        Me.playOnceAsyncButton.Location = New System.Drawing.Point(149, 86)\n        Me.playOnceAsyncButton.Name = &quot;playOnceAsyncButton&quot;\n        Me.playOnceAsyncButton.Size = New System.Drawing.Size(147, 23)\n        Me.playOnceAsyncButton.TabIndex = 6\n        Me.playOnceAsyncButton.Text = &quot;Play Once Asynchronously&quot;\n        &#39; \n        &#39; stopButton\n        &#39; \n        Me.stopButton.Location = New System.Drawing.Point(149, 109)\n        Me.stopButton.Name = &quot;stopButton&quot;\n        Me.stopButton.Size = New System.Drawing.Size(147, 23)\n        Me.stopButton.TabIndex = 7\n        Me.stopButton.Text = &quot;Stop&quot;\n        &#39; \n        &#39; playLoopAsyncButton\n        &#39; \n        Me.playLoopAsyncButton.Location = New System.Drawing.Point(7, 109)\n        Me.playLoopAsyncButton.Name = &quot;playLoopAsyncButton&quot;\n        Me.playLoopAsyncButton.Size = New System.Drawing.Size(142, 23)\n        Me.playLoopAsyncButton.TabIndex = 8\n        Me.playLoopAsyncButton.Text = &quot;Loop Asynchronously&quot;\n        &#39; \n        &#39; statusBar\n        &#39; \n        Me.statusBar.Location = New System.Drawing.Point(0, 146)\n        Me.statusBar.Name = &quot;statusBar&quot;\n        Me.statusBar.Size = New System.Drawing.Size(306, 22)\n        Me.statusBar.SizingGrip = False\n        Me.statusBar.TabIndex = 9\n        Me.statusBar.Text = &quot;(no status)&quot;\n        &#39; \n        &#39; loadAsyncButton\n        &#39; \n        Me.loadAsyncButton.Location = New System.Drawing.Point(149, 53)\n        Me.loadAsyncButton.Name = &quot;loadAsyncButton&quot;\n        Me.loadAsyncButton.Size = New System.Drawing.Size(147, 23)\n        Me.loadAsyncButton.TabIndex = 10\n        Me.loadAsyncButton.Text = &quot;Load Asynchronously&quot;\n        &#39; \n        &#39; SoundTestForm\n        &#39;\n        Me.ClientSize = New System.Drawing.Size(306, 168)\n        Me.Controls.Add(loadAsyncButton)\n        Me.Controls.Add(statusBar)\n        Me.Controls.Add(playLoopAsyncButton)\n        Me.Controls.Add(stopButton)\n        Me.Controls.Add(playOnceAsyncButton)\n        Me.Controls.Add(playOnceSyncButton)\n        Me.Controls.Add(loadSyncButton)\n        Me.Controls.Add(label1)\n        Me.Controls.Add(selectFileButton)\n        Me.Controls.Add(filepathTextbox)\n        Me.MinimumSize = New System.Drawing.Size(310, 165)\n        Me.Name = &quot;SoundTestForm&quot;\n        Me.SizeGripStyle = System.Windows.Forms.SizeGripStyle.Show\n        Me.Text = &quot;Sound API Test Form&quot;\n        Me.ResumeLayout(False)\n    End Sub &#39;InitializeComponent\n\n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New SoundTestForm)\n    End Sub\nEnd Class &#39;SoundTestForm\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#1\">#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::Diagnostics;\nusing namespace System::Drawing;\nusing namespace System::Media;\nusing namespace System::Windows::Forms;\n\npublic ref class SoundTestForm: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::Label ^ label1;\n   System::Windows::Forms::TextBox^ filepathTextbox;\n   System::Windows::Forms::Button^ playOnceSyncButton;\n   System::Windows::Forms::Button^ playOnceAsyncButton;\n   System::Windows::Forms::Button^ playLoopAsyncButton;\n   System::Windows::Forms::Button^ selectFileButton;\n   System::Windows::Forms::Button^ stopButton;\n   System::Windows::Forms::StatusBar^ statusBar;\n   System::Windows::Forms::Button^ loadSyncButton;\n   System::Windows::Forms::Button^ loadAsyncButton;\n   SoundPlayer^ player;\n\npublic:\n   SoundTestForm()\n   {\n      \n      // Initialize Forms Designer generated code.\n      InitializeComponent();\n      \n      // Disable playback controls until a valid .wav file \n      // is selected.\n      EnablePlaybackControls( false );\n      \n      // Set up the status bar and other controls.\n      InitializeControls();\n      \n      // Set up the SoundPlayer object.\n      InitializeSound();\n   }\n\n\nprivate:\n\n   // Sets up the status bar and other controls.\n   void InitializeControls()\n   {\n      \n      // Set up the status bar.\n      StatusBarPanel^ panel = gcnew StatusBarPanel;\n      panel-&gt;BorderStyle = StatusBarPanelBorderStyle::Sunken;\n      panel-&gt;Text = &quot;Ready.&quot;;\n      panel-&gt;AutoSize = StatusBarPanelAutoSize::Spring;\n      this-&gt;statusBar-&gt;ShowPanels = true;\n      this-&gt;statusBar-&gt;Panels-&gt;Add( panel );\n   }\n\n\n   // Sets up the SoundPlayer object.\n   void InitializeSound()\n   {\n      \n      // Create an instance of the SoundPlayer class.\n      player = gcnew SoundPlayer;\n      \n      // Listen for the LoadCompleted event.\n      player-&gt;LoadCompleted += gcnew AsyncCompletedEventHandler( this, &amp;SoundTestForm::player_LoadCompleted );\n      \n      // Listen for the SoundLocationChanged event.\n      player-&gt;SoundLocationChanged += gcnew EventHandler( this, &amp;SoundTestForm::player_LocationChanged );\n   }\n\n   void selectFileButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Create a new OpenFileDialog.\n      OpenFileDialog^ dlg = gcnew OpenFileDialog;\n      \n      // Make sure the dialog checks for existence of the \n      // selected file.\n      dlg-&gt;CheckFileExists = true;\n      \n      // Allow selection of .wav files only.\n      dlg-&gt;Filter = &quot;WAV files (*.wav)|*.wav&quot;;\n      dlg-&gt;DefaultExt = &quot;.wav&quot;;\n      \n      // Activate the file selection dialog.\n      if ( dlg-&gt;ShowDialog() == ::DialogResult::OK )\n      {\n         \n         // Get the selected file&#39;s path from the dialog.\n         this-&gt;filepathTextbox-&gt;Text = dlg-&gt;FileName;\n         \n         // Assign the selected file&#39;s path to \n         // the SoundPlayer object.  \n         player-&gt;SoundLocation = filepathTextbox-&gt;Text;\n      }\n   }\n\n\n   // Convenience method for setting message text in \n   // the status bar.\n   void ReportStatus( String^ statusMessage )\n   {\n      \n      // If the caller passed in a message...\n      if ( (statusMessage != nullptr) &amp;&amp; (statusMessage != String::Empty) )\n      {\n         \n         // ...post the caller&#39;s message to the status bar.\n         this-&gt;statusBar-&gt;Panels[ 0 ]-&gt;Text = statusMessage;\n      }\n   }\n\n\n   // Enables and disables play controls.\n   void EnablePlaybackControls( bool enabled )\n   {\n      this-&gt;playOnceSyncButton-&gt;Enabled = enabled;\n      this-&gt;playOnceAsyncButton-&gt;Enabled = enabled;\n      this-&gt;playLoopAsyncButton-&gt;Enabled = enabled;\n      this-&gt;stopButton-&gt;Enabled = enabled;\n   }\n\n   void filepathTextbox_TextChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Disable playback controls until the new .wav is loaded.\n      EnablePlaybackControls( false );\n   }\n\n   void loadSyncButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Disable playback controls until the .wav is \n      // successfully loaded. The LoadCompleted event \n      // handler will enable them.\n      EnablePlaybackControls( false );\n      \n      try\n      {\n         \n         // Assign the selected file&#39;s path to \n         // the SoundPlayer object.  \n         player-&gt;SoundLocation = filepathTextbox-&gt;Text;\n         \n         // Load the .wav file.\n         player-&gt;Load();\n      }\n      catch ( Exception^ ex ) \n      {\n         ReportStatus( ex-&gt;Message );\n      }\n\n      \n   }\n\n   void loadAsyncButton_Click( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Disable playback controls until the .wav is \n      // successfully loaded. The LoadCompleted event \n      // handler will enable them.\n      EnablePlaybackControls( false );\n      \n      try\n      {\n         \n         // Assign the selected file&#39;s path to \n         // the SoundPlayer object.  \n         player-&gt;SoundLocation = this-&gt;filepathTextbox-&gt;Text;\n         \n         // Load the .wav file.\n         player-&gt;LoadAsync();\n      }\n      catch ( Exception^ ex ) \n      {\n         ReportStatus( ex-&gt;Message );\n      }\n\n      \n   }\n\n\n   // Synchronously plays the selected .wav file once.\n   // If the file is large, UI response will be visibly \n   // affected.\n   void playOnceSyncButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      ReportStatus( &quot;Playing .wav file synchronously.&quot; );\n      player-&gt;PlaySync();\n      ReportStatus( &quot;Finished playing .wav file synchronously.&quot; );\n      \n   }\n\n\n   // Asynchronously plays the selected .wav file once.\n   void playOnceAsyncButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      ReportStatus( &quot;Playing .wav file asynchronously.&quot; );\n      player-&gt;Play();\n      \n   }\n\n\n   // Asynchronously plays the selected .wav file until the user\n   // clicks the Stop button.\n   void playLoopAsyncButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      ReportStatus( &quot;Looping .wav file asynchronously.&quot; );\n      player-&gt;PlayLooping();\n      \n   }\n\n\n   // Stops the currently playing .wav file, if any.\n   void stopButton_Click( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      player-&gt;Stop();\n      ReportStatus( &quot;Stopped by user.&quot; );\n      \n   }\n\n\n   // Handler for the LoadCompleted event.\n   void player_LoadCompleted( Object^ /*sender*/, AsyncCompletedEventArgs^ /*e*/ )\n   {\n      String^ message = String::Format( &quot;LoadCompleted: {0}&quot;, this-&gt;filepathTextbox-&gt;Text );\n      ReportStatus( message );\n      EnablePlaybackControls( true );\n   }\n\n\n   // Handler for the SoundLocationChanged event.\n   void player_LocationChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      String^ message = String::Format( &quot;SoundLocationChanged: {0}&quot;, player-&gt;SoundLocation );\n      ReportStatus( message );\n   }\n\n\n   void InitializeComponent()\n   {\n      this-&gt;filepathTextbox = gcnew System::Windows::Forms::TextBox;\n      this-&gt;selectFileButton = gcnew System::Windows::Forms::Button;\n      this-&gt;label1 = gcnew System::Windows::Forms::Label;\n      this-&gt;loadSyncButton = gcnew System::Windows::Forms::Button;\n      this-&gt;playOnceSyncButton = gcnew System::Windows::Forms::Button;\n      this-&gt;playOnceAsyncButton = gcnew System::Windows::Forms::Button;\n      this-&gt;stopButton = gcnew System::Windows::Forms::Button;\n      this-&gt;playLoopAsyncButton = gcnew System::Windows::Forms::Button;\n      this-&gt;statusBar = gcnew System::Windows::Forms::StatusBar;\n      this-&gt;loadAsyncButton = gcnew System::Windows::Forms::Button;\n      this-&gt;SuspendLayout();\n      \n      // \n      // filepathTextbox\n      // \n      this-&gt;filepathTextbox-&gt;Anchor = (System::Windows::Forms::AnchorStyles)(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Left | System::Windows::Forms::AnchorStyles::Right);\n      this-&gt;filepathTextbox-&gt;Location = System::Drawing::Point( 7, 25 );\n      this-&gt;filepathTextbox-&gt;Name = &quot;filepathTextbox&quot;;\n      this-&gt;filepathTextbox-&gt;Size = System::Drawing::Size( 263, 20 );\n      this-&gt;filepathTextbox-&gt;TabIndex = 1;\n      this-&gt;filepathTextbox-&gt;Text = &quot;&quot;;\n      this-&gt;filepathTextbox-&gt;TextChanged += gcnew System::EventHandler( this, &amp;SoundTestForm::filepathTextbox_TextChanged );\n      \n      // \n      // selectFileButton\n      // \n      this-&gt;selectFileButton-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(AnchorStyles::Top | AnchorStyles::Right);\n      this-&gt;selectFileButton-&gt;Location = System::Drawing::Point( 276, 25 );\n      this-&gt;selectFileButton-&gt;Name = &quot;selectFileButton&quot;;\n      this-&gt;selectFileButton-&gt;Size = System::Drawing::Size( 23, 21 );\n      this-&gt;selectFileButton-&gt;TabIndex = 2;\n      this-&gt;selectFileButton-&gt;Text = &quot;...&quot;;\n      this-&gt;selectFileButton-&gt;Click += gcnew System::EventHandler( this, &amp;SoundTestForm::selectFileButton_Click );\n      \n      // \n      // label1\n      // \n      this-&gt;label1-&gt;Location = System::Drawing::Point( 7, 7 );\n      this-&gt;label1-&gt;Name = &quot;label1&quot;;\n      this-&gt;label1-&gt;Size = System::Drawing::Size( 145, 17 );\n      this-&gt;label1-&gt;TabIndex = 3;\n      this-&gt;label1-&gt;Text = &quot;.wav path or URL:&quot;;\n      \n      // \n      // loadSyncButton\n      // \n      this-&gt;loadSyncButton-&gt;Location = System::Drawing::Point( 7, 53 );\n      this-&gt;loadSyncButton-&gt;Name = &quot;loadSyncButton&quot;;\n      this-&gt;loadSyncButton-&gt;Size = System::Drawing::Size( 142, 23 );\n      this-&gt;loadSyncButton-&gt;TabIndex = 4;\n      this-&gt;loadSyncButton-&gt;Text = &quot;Load Synchronously&quot;;\n      this-&gt;loadSyncButton-&gt;Click += gcnew System::EventHandler( this, &amp;SoundTestForm::loadSyncButton_Click );\n      \n      // \n      // playOnceSyncButton\n      // \n      this-&gt;playOnceSyncButton-&gt;Location = System::Drawing::Point( 7, 86 );\n      this-&gt;playOnceSyncButton-&gt;Name = &quot;playOnceSyncButton&quot;;\n      this-&gt;playOnceSyncButton-&gt;Size = System::Drawing::Size( 142, 23 );\n      this-&gt;playOnceSyncButton-&gt;TabIndex = 5;\n      this-&gt;playOnceSyncButton-&gt;Text = &quot;Play Once Synchronously&quot;;\n      this-&gt;playOnceSyncButton-&gt;Click += gcnew System::EventHandler( this, &amp;SoundTestForm::playOnceSyncButton_Click );\n      \n      // \n      // playOnceAsyncButton\n      // \n      this-&gt;playOnceAsyncButton-&gt;Location = System::Drawing::Point( 149, 86 );\n      this-&gt;playOnceAsyncButton-&gt;Name = &quot;playOnceAsyncButton&quot;;\n      this-&gt;playOnceAsyncButton-&gt;Size = System::Drawing::Size( 147, 23 );\n      this-&gt;playOnceAsyncButton-&gt;TabIndex = 6;\n      this-&gt;playOnceAsyncButton-&gt;Text = &quot;Play Once Asynchronously&quot;;\n      this-&gt;playOnceAsyncButton-&gt;Click += gcnew System::EventHandler( this, &amp;SoundTestForm::playOnceAsyncButton_Click );\n      \n      // \n      // stopButton\n      // \n      this-&gt;stopButton-&gt;Location = System::Drawing::Point( 149, 109 );\n      this-&gt;stopButton-&gt;Name = &quot;stopButton&quot;;\n      this-&gt;stopButton-&gt;Size = System::Drawing::Size( 147, 23 );\n      this-&gt;stopButton-&gt;TabIndex = 7;\n      this-&gt;stopButton-&gt;Text = &quot;Stop&quot;;\n      this-&gt;stopButton-&gt;Click += gcnew System::EventHandler( this, &amp;SoundTestForm::stopButton_Click );\n      \n      // \n      // playLoopAsyncButton\n      // \n      this-&gt;playLoopAsyncButton-&gt;Location = System::Drawing::Point( 7, 109 );\n      this-&gt;playLoopAsyncButton-&gt;Name = &quot;playLoopAsyncButton&quot;;\n      this-&gt;playLoopAsyncButton-&gt;Size = System::Drawing::Size( 142, 23 );\n      this-&gt;playLoopAsyncButton-&gt;TabIndex = 8;\n      this-&gt;playLoopAsyncButton-&gt;Text = &quot;Loop Asynchronously&quot;;\n      this-&gt;playLoopAsyncButton-&gt;Click += gcnew System::EventHandler( this, &amp;SoundTestForm::playLoopAsyncButton_Click );\n      \n      // \n      // statusBar\n      // \n      this-&gt;statusBar-&gt;Location = System::Drawing::Point( 0, 146 );\n      this-&gt;statusBar-&gt;Name = &quot;statusBar&quot;;\n      this-&gt;statusBar-&gt;Size = System::Drawing::Size( 306, 22 );\n      this-&gt;statusBar-&gt;SizingGrip = false;\n      this-&gt;statusBar-&gt;TabIndex = 9;\n      this-&gt;statusBar-&gt;Text = &quot;(no status)&quot;;\n      \n      // \n      // loadAsyncButton\n      // \n      this-&gt;loadAsyncButton-&gt;Location = System::Drawing::Point( 149, 53 );\n      this-&gt;loadAsyncButton-&gt;Name = &quot;loadAsyncButton&quot;;\n      this-&gt;loadAsyncButton-&gt;Size = System::Drawing::Size( 147, 23 );\n      this-&gt;loadAsyncButton-&gt;TabIndex = 10;\n      this-&gt;loadAsyncButton-&gt;Text = &quot;Load Asynchronously&quot;;\n      this-&gt;loadAsyncButton-&gt;Click += gcnew System::EventHandler( this, &amp;SoundTestForm::loadAsyncButton_Click );\n      \n      // \n      // SoundTestForm\n      // \n      this-&gt;ClientSize = System::Drawing::Size( 306, 168 );\n      this-&gt;Controls-&gt;Add( this-&gt;loadAsyncButton );\n      this-&gt;Controls-&gt;Add( this-&gt;statusBar );\n      this-&gt;Controls-&gt;Add( this-&gt;playLoopAsyncButton );\n      this-&gt;Controls-&gt;Add( this-&gt;stopButton );\n      this-&gt;Controls-&gt;Add( this-&gt;playOnceAsyncButton );\n      this-&gt;Controls-&gt;Add( this-&gt;playOnceSyncButton );\n      this-&gt;Controls-&gt;Add( this-&gt;loadSyncButton );\n      this-&gt;Controls-&gt;Add( this-&gt;label1 );\n      this-&gt;Controls-&gt;Add( this-&gt;selectFileButton );\n      this-&gt;Controls-&gt;Add( this-&gt;filepathTextbox );\n      this-&gt;MinimumSize = System::Drawing::Size( 310, 165 );\n      this-&gt;Name = &quot;SoundTestForm&quot;;\n      this-&gt;SizeGripStyle = System::Windows::Forms::SizeGripStyle::Show;\n      this-&gt;Text = &quot;Sound API Test Form&quot;;\n      this-&gt;ResumeLayout( false );\n   }\n\n};\n\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew SoundTestForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#1\">\nusing System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics;\nusing System.Drawing;\nusing System.Media;\nusing System.Windows.Forms;\n\nnamespace SoundApiExample\n{\n    public class SoundTestForm : System.Windows.Forms.Form\n    {\n        private System.Windows.Forms.Label label1;\n        private System.Windows.Forms.TextBox filepathTextbox;        \n        private System.Windows.Forms.Button playOnceSyncButton;\n        private System.Windows.Forms.Button playOnceAsyncButton;\n        private System.Windows.Forms.Button playLoopAsyncButton;\n        private System.Windows.Forms.Button selectFileButton;\n        \n        private System.Windows.Forms.Button stopButton;\n        private System.Windows.Forms.StatusBar statusBar;\n        private System.Windows.Forms.Button loadSyncButton;\n        private System.Windows.Forms.Button loadAsyncButton;        \n        private SoundPlayer player;\n\n        public SoundTestForm()\n        {\n            // Initialize Forms Designer generated code.\n            InitializeComponent();\n\t\t\t\n            // Disable playback controls until a valid .wav file \n            // is selected.\n            EnablePlaybackControls(false);\n\n            // Set up the status bar and other controls.\n            InitializeControls();\n\n            // Set up the SoundPlayer object.\n            InitializeSound();\n        }\n\n        // Sets up the status bar and other controls.\n        private void InitializeControls()\n        {\n            // Set up the status bar.\n            StatusBarPanel panel = new StatusBarPanel();\n            panel.BorderStyle = StatusBarPanelBorderStyle.Sunken;\n            panel.Text = &quot;Ready.&quot;;\n            panel.AutoSize = StatusBarPanelAutoSize.Spring;\n            this.statusBar.ShowPanels = true;\n            this.statusBar.Panels.Add(panel);\n        }\n\n        // Sets up the SoundPlayer object.\n        private void InitializeSound()\n        {\n            // Create an instance of the SoundPlayer class.\n            player = new SoundPlayer();\n\n            // Listen for the LoadCompleted event.\n            player.LoadCompleted += new AsyncCompletedEventHandler(player_LoadCompleted);\n\n            // Listen for the SoundLocationChanged event.\n            player.SoundLocationChanged += new EventHandler(player_LocationChanged);\n        }\n\n        private void selectFileButton_Click(object sender, \n            System.EventArgs e)\n        {\n            // Create a new OpenFileDialog.\n            OpenFileDialog dlg = new OpenFileDialog();\n\n            // Make sure the dialog checks for existence of the \n            // selected file.\n            dlg.CheckFileExists = true;\n\n            // Allow selection of .wav files only.\n            dlg.Filter = &quot;WAV files (*.wav)|*.wav&quot;;\n            dlg.DefaultExt = &quot;.wav&quot;;\n\n            // Activate the file selection dialog.\n            if (dlg.ShowDialog() == DialogResult.OK)\n            {\n                // Get the selected file&#39;s path from the dialog.\n                this.filepathTextbox.Text = dlg.FileName;\n\n                // Assign the selected file&#39;s path to \n                // the SoundPlayer object.  \n                player.SoundLocation = filepathTextbox.Text;\n            }\n        }\n\n        // Convenience method for setting message text in \n        // the status bar.\n        private void ReportStatus(string statusMessage)\n        {\n            // If the caller passed in a message...\n            if ((statusMessage != null) &amp;&amp; (statusMessage != String.Empty))\n            {\n                // ...post the caller&#39;s message to the status bar.\n                this.statusBar.Panels[0].Text = statusMessage;\n            }\n        }\n        \n        // Enables and disables play controls.\n        private void EnablePlaybackControls(bool enabled)\n        {   \n            this.playOnceSyncButton.Enabled = enabled;\n            this.playOnceAsyncButton.Enabled = enabled;\n            this.playLoopAsyncButton.Enabled = enabled;\n            this.stopButton.Enabled = enabled;\n        }\n    \n        private void filepathTextbox_TextChanged(object sender, \n            EventArgs e)\n        {\n            // Disable playback controls until the new .wav is loaded.\n            EnablePlaybackControls(false);\n        }\n\n        private void loadSyncButton_Click(object sender, \n            System.EventArgs e)\n        {   \n            // Disable playback controls until the .wav is \n            // successfully loaded. The LoadCompleted event \n            // handler will enable them.\n            EnablePlaybackControls(false);\n\n            try\n            {\n                // Assign the selected file&#39;s path to \n                // the SoundPlayer object.  \n                player.SoundLocation = filepathTextbox.Text;\n\n                // Load the .wav file.\n                player.Load();\n            }\n            catch (Exception ex)\n            {\n                ReportStatus(ex.Message);\n            }\n        }\n\n        private void loadAsyncButton_Click(System.Object sender, \n            System.EventArgs e)\n        {\n            // Disable playback controls until the .wav is \n            // successfully loaded. The LoadCompleted event \n            // handler will enable them.\n            EnablePlaybackControls(false);\n\n            try\n            {\n                // Assign the selected file&#39;s path to \n                // the SoundPlayer object.  \n                player.SoundLocation = this.filepathTextbox.Text;\n\n                // Load the .wav file.\n                player.LoadAsync();\n            }\n            catch (Exception ex)\n            {\n                ReportStatus(ex.Message);\n            }\n        }\n\n        // Synchronously plays the selected .wav file once.\n        // If the file is large, UI response will be visibly \n        // affected.\n        private void playOnceSyncButton_Click(object sender, \n            System.EventArgs e)\n        {\t\n            ReportStatus(&quot;Playing .wav file synchronously.&quot;);\n            player.PlaySync();\n            ReportStatus(&quot;Finished playing .wav file synchronously.&quot;);\n        }\n\n        // Asynchronously plays the selected .wav file once.\n        private void playOnceAsyncButton_Click(object sender, \n            System.EventArgs e)\n        {\n            ReportStatus(&quot;Playing .wav file asynchronously.&quot;);\n            player.Play();\n        }\n\n        // Asynchronously plays the selected .wav file until the user\n        // clicks the Stop button.\n        private void playLoopAsyncButton_Click(object sender, \n            System.EventArgs e)\n        {\n            ReportStatus(&quot;Looping .wav file asynchronously.&quot;);\n            player.PlayLooping();\n        }\n\n        // Stops the currently playing .wav file, if any.\n        private void stopButton_Click(System.Object sender,\n            System.EventArgs e)\n        {\t\n            player.Stop();\n            ReportStatus(&quot;Stopped by user.&quot;);\n        }\n\n        // Handler for the LoadCompleted event.\n        private void player_LoadCompleted(object sender, \n            AsyncCompletedEventArgs e)\n        {   \n            string message = String.Format(&quot;LoadCompleted: {0}&quot;, \n                this.filepathTextbox.Text);\n            ReportStatus(message);\n            EnablePlaybackControls(true);\n        }\n\n        // Handler for the SoundLocationChanged event.\n        private void player_LocationChanged(object sender, EventArgs e)\n        {   \n            string message = String.Format(&quot;SoundLocationChanged: {0}&quot;, \n                player.SoundLocation);\n            ReportStatus(message);\n        }\n\n        private void playSoundFromResource(object sender, EventArgs e)\n        {\n            System.Reflection.Assembly a = System.Reflection.Assembly.GetExecutingAssembly();\n            System.IO.Stream s = a.GetManifestResourceStream(&quot;&lt;AssemblyName&gt;.chimes.wav&quot;);\n            SoundPlayer player = new SoundPlayer(s);\n            player.Play();\n        }\n\n        #region Windows Form Designer generated code\n        private void InitializeComponent()\n        {\n            this.filepathTextbox = new System.Windows.Forms.TextBox();\n            this.selectFileButton = new System.Windows.Forms.Button();\n            this.label1 = new System.Windows.Forms.Label();\n            this.loadSyncButton = new System.Windows.Forms.Button();\n            this.playOnceSyncButton = new System.Windows.Forms.Button();\n            this.playOnceAsyncButton = new System.Windows.Forms.Button();\n            this.stopButton = new System.Windows.Forms.Button();\n            this.playLoopAsyncButton = new System.Windows.Forms.Button();\n            this.statusBar = new System.Windows.Forms.StatusBar();\n            this.loadAsyncButton = new System.Windows.Forms.Button();\n            this.SuspendLayout();\n            // \n            // filepathTextbox\n            // \n            this.filepathTextbox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right)));\n            this.filepathTextbox.Location = new System.Drawing.Point(7, 25);\n            this.filepathTextbox.Name = &quot;filepathTextbox&quot;;\n            this.filepathTextbox.Size = new System.Drawing.Size(263, 20);\n            this.filepathTextbox.TabIndex = 1;\n            this.filepathTextbox.Text = &quot;&quot;;\n            this.filepathTextbox.TextChanged += new System.EventHandler(this.filepathTextbox_TextChanged);\n            // \n            // selectFileButton\n            // \n            this.selectFileButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));\n            this.selectFileButton.Location = new System.Drawing.Point(276, 25);\n            this.selectFileButton.Name = &quot;selectFileButton&quot;;\n            this.selectFileButton.Size = new System.Drawing.Size(23, 21);\n            this.selectFileButton.TabIndex = 2;\n            this.selectFileButton.Text = &quot;...&quot;;\n            this.selectFileButton.Click += new System.EventHandler(this.selectFileButton_Click);\n            // \n            // label1\n            // \n            this.label1.Location = new System.Drawing.Point(7, 7);\n            this.label1.Name = &quot;label1&quot;;\n            this.label1.Size = new System.Drawing.Size(145, 17);\n            this.label1.TabIndex = 3;\n            this.label1.Text = &quot;.wav path or URL:&quot;;\n            // \n            // loadSyncButton\n            // \n            this.loadSyncButton.Location = new System.Drawing.Point(7, 53);\n            this.loadSyncButton.Name = &quot;loadSyncButton&quot;;\n            this.loadSyncButton.Size = new System.Drawing.Size(142, 23);\n            this.loadSyncButton.TabIndex = 4;\n            this.loadSyncButton.Text = &quot;Load Synchronously&quot;;\n            this.loadSyncButton.Click += new System.EventHandler(this.loadSyncButton_Click);\n            // \n            // playOnceSyncButton\n            // \n            this.playOnceSyncButton.Location = new System.Drawing.Point(7, 86);\n            this.playOnceSyncButton.Name = &quot;playOnceSyncButton&quot;;\n            this.playOnceSyncButton.Size = new System.Drawing.Size(142, 23);\n            this.playOnceSyncButton.TabIndex = 5;\n            this.playOnceSyncButton.Text = &quot;Play Once Synchronously&quot;;\n            this.playOnceSyncButton.Click += new System.EventHandler(this.playOnceSyncButton_Click);\n            // \n            // playOnceAsyncButton\n            // \n            this.playOnceAsyncButton.Location = new System.Drawing.Point(149, 86);\n            this.playOnceAsyncButton.Name = &quot;playOnceAsyncButton&quot;;\n            this.playOnceAsyncButton.Size = new System.Drawing.Size(147, 23);\n            this.playOnceAsyncButton.TabIndex = 6;\n            this.playOnceAsyncButton.Text = &quot;Play Once Asynchronously&quot;;\n            this.playOnceAsyncButton.Click += new System.EventHandler(this.playOnceAsyncButton_Click);\n            // \n            // stopButton\n            // \n            this.stopButton.Location = new System.Drawing.Point(149, 109);\n            this.stopButton.Name = &quot;stopButton&quot;;\n            this.stopButton.Size = new System.Drawing.Size(147, 23);\n            this.stopButton.TabIndex = 7;\n            this.stopButton.Text = &quot;Stop&quot;;\n            this.stopButton.Click += new System.EventHandler(this.stopButton_Click);\n            // \n            // playLoopAsyncButton\n            // \n            this.playLoopAsyncButton.Location = new System.Drawing.Point(7, 109);\n            this.playLoopAsyncButton.Name = &quot;playLoopAsyncButton&quot;;\n            this.playLoopAsyncButton.Size = new System.Drawing.Size(142, 23);\n            this.playLoopAsyncButton.TabIndex = 8;\n            this.playLoopAsyncButton.Text = &quot;Loop Asynchronously&quot;;\n            this.playLoopAsyncButton.Click += new System.EventHandler(this.playLoopAsyncButton_Click);\n            // \n            // statusBar\n            // \n            this.statusBar.Location = new System.Drawing.Point(0, 146);\n            this.statusBar.Name = &quot;statusBar&quot;;\n            this.statusBar.Size = new System.Drawing.Size(306, 22);\n            this.statusBar.SizingGrip = false;\n            this.statusBar.TabIndex = 9;\n            this.statusBar.Text = &quot;(no status)&quot;;\n            // \n            // loadAsyncButton\n            // \n            this.loadAsyncButton.Location = new System.Drawing.Point(149, 53);\n            this.loadAsyncButton.Name = &quot;loadAsyncButton&quot;;\n            this.loadAsyncButton.Size = new System.Drawing.Size(147, 23);\n            this.loadAsyncButton.TabIndex = 10;\n            this.loadAsyncButton.Text = &quot;Load Asynchronously&quot;;\n            this.loadAsyncButton.Click += new System.EventHandler(this.loadAsyncButton_Click);\n            // \n            // SoundTestForm\n            // \n            this.ClientSize = new System.Drawing.Size(306, 168);\n            this.Controls.Add(this.loadAsyncButton);\n            this.Controls.Add(this.statusBar);\n            this.Controls.Add(this.playLoopAsyncButton);\n            this.Controls.Add(this.stopButton);\n            this.Controls.Add(this.playOnceAsyncButton);\n            this.Controls.Add(this.playOnceSyncButton);\n            this.Controls.Add(this.loadSyncButton);\n            this.Controls.Add(this.label1);\n            this.Controls.Add(this.selectFileButton);\n            this.Controls.Add(this.filepathTextbox);\n            this.MinimumSize = new System.Drawing.Size(310, 165);\n            this.Name = &quot;SoundTestForm&quot;;\n            this.SizeGripStyle = System.Windows.Forms.SizeGripStyle.Show;\n            this.Text = &quot;Sound API Test Form&quot;;\n            this.ResumeLayout(false);\n\n        }\n        #endregion\n        \n        [STAThread]\n        static void Main()\n        {\n            Application.Run(new SoundTestForm());\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The SoundPlayer class provides a simple interface for loading and playing a .wav file. The SoundPlayer class supports loading a .wav file from a file path, a URL, a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that contains a .wav file, or an embedded resource that contains a .wav file.  </p>\n<p> To play a sound using the SoundPlayer class, configure a SoundPlayer with a path to the .wav file and call one of the play methods. You can identify the .wav file to play by using one of the constructors or by setting either the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocation_\" data-linktype=\"relative-path\">SoundLocation</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Stream_\" data-linktype=\"relative-path\">Stream</a> property. The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called. A SoundPlayer configured to load a .wav file from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL must load the .wav file into memory before playback begins.  </p>\n<p> You can load or play a .wav file synchronously or asynchronously. If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted. Calling an asynchronous load or play method will allow the calling thread to continue without interruption. For more information on asynchronous method calls, see <a href=\"../Topic/How%20to:%20Run%20an%20Operation%20in%20the%20Background.md\" data-linktype=\"relative-path\">How to: Run an Operation in the Background</a>.  </p>\n<p> When a SoundPlayer has finished loading a .wav file, it raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event. You can examine the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> in your event handler to determine if the load succeeded or failed. The <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocationChanged\" data-linktype=\"relative-path\">SoundLocationChanged</a> event is raised when the audio source is set to a new file path or URL. The <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_StreamChanged\" data-linktype=\"relative-path\">StreamChanged</a> event is raised when the audio source is set to a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<p> For more information about SoundPlayer, see <a href=\"../topic/soundplayer%20class%20overview\" data-linktype=\"relative-path\">SoundPlayer Class Overview</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The SoundPlayer class cannot play other file types, such as .wma or .mp3. If you want to play other file types, you can use the Windows Media Player control. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=131267\" data-linktype=\"external\">Using the Windows Media Player Control in a .NET Framework Solution</a> and <a href=\"http://go.microsoft.com/fwlink/?LinkId=131269\" data-linktype=\"external\">Windows Media Player Object Model Reference for Visual Basic .NET and C#</a> in the Windows Media Player SDK.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SoundPlayer()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SoundPlayer ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes a <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> with no audio source. Until it is configured with an audio source path, the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will play a beep sound when one of its playback methods is called.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer__ctor_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SoundPlayer(Stream)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class, and attaches the .wav file within the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SoundPlayer (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to a .wav file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> passed to the <code>stream</code> parameter should be a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> containing a .wav file. The data returned by the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Read_\" data-linktype=\"relative-path\">Read</a> method of the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> should be the data within a .wav file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SoundPlayer(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class, and attaches the specified .wav file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SoundPlayer (string soundLocation);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>soundLocation</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The location of a .wav file to load.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URL value specified by <code>soundLocation</code> cannot be resolved.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string passed to the <code>soundLocation</code> parameter can be either a file path or a URL to a .wav file. If the path or URL is not valid, the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will still be constructed, but subsequent calls to a load or play method will fail.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SoundPlayer(SerializationInfo, StreamingContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>serializationInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to be used for deserialization.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The destination to be used for deserialization.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> specified in <code>serializationInfo</code> cannot be resolved.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_IsLoadCompleted_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_IsLoadCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsLoadCompleted</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether loading of a .wav file has successfully completed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsLoadCompleted { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if a .wav file is loaded; <code>false</code> if a .wav file has not yet been loaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_LoadTimeout_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_LoadTimeout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadTimeout</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the time, in milliseconds, in which the .wav file must load.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int LoadTimeout { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of milliseconds to wait. The default is 10000 (10 seconds).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>After this time has expired, the loading is canceled and a <a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a> exception is thrown.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_SoundLocation_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_SoundLocation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SoundLocation</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the file path or URL of the .wav file to load.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string SoundLocation { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file path or URL from which to load a .wav file, or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if no file path is present. The default is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is set to <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a> when the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Stream_\" data-linktype=\"relative-path\">Stream</a> property is set to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_Stream_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_Stream\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Stream</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to load the .wav file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.Stream Stream { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to load the .wav file, or <code>null</code> if no stream is available. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is set to <code>null</code> when the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocation_\" data-linktype=\"relative-path\">SoundLocation</a> property is set to a new and valid sound location.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_Tag_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_Tag\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Tag</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Tag { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_Load_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_Load\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads a sound synchronously.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Load method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The Load method may produce a delay while loading a large .wav file. In addition, painting and other events will be blocked until the load is completed. Use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> method to load a sound asynchronously, which allows the calling thread to continue without interruption.  </p>\n</div>\n<p> This method raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event when loading completes, even if the load was not successful.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_LoadAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_LoadAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadAsync()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads a .wav file from a stream or a Web resource using a new thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void LoadAsync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If a <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> is configured to load a .wav file from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or Web resource, this method begins loading a .wav file from the location using a new thread.  </p>\n<p> This method raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event when loading completes, even if the load was not successful.  </p>\n<p> If a <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.  </p>\n<p> For more information about asynchronous loading, see <a href=\"../Topic/How%20to:%20Load%20a%20Sound%20Asynchronously%20within%20a%20Windows%20Form.md\" data-linktype=\"relative-path\">How to: Load a Sound Asynchronously within a Windows Form</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_OnLoadCompleted_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_OnLoadCompleted_System_ComponentModel_AsyncCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnLoadCompleted(AsyncCompletedEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called when loading of a .wav file is complete.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnLoadCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_OnSoundLocationChanged_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_OnSoundLocationChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnSoundLocationChanged(EventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocationChanged\" data-linktype=\"relative-path\">SoundLocationChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnSoundLocationChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called when a new audio source path for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see How to: Provide Event functionality and <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSoundLocationChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_OnStreamChanged_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_OnStreamChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnStreamChanged(EventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_StreamChanged\" data-linktype=\"relative-path\">StreamChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnStreamChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called when a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> audio source for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnStreamChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_Play_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_Play\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Play()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Play ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The .wav header is corrupted; the file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> is not a PCM .wav file.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Play method plays the sound using a new thread. If you call Play before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Load_\" data-linktype=\"relative-path\">Load</a> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL, future calls to playback methods for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will not need to reload the .wav file until the path for the sound changes.  </p>\n<p> If the .wav file has not been specified or it fails to load, the Play method will play the default beep sound.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_PlayLooping_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_PlayLooping\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PlayLooping()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PlayLooping ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The .wav header is corrupted; the file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> is not a PCM .wav file.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PlayLooping method plays and loops the sound using a new thread. If you call PlayLooping before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Load_\" data-linktype=\"relative-path\">Load</a> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL, future calls to playback methods for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will not need to reload the .wav file until the path for the sound changes.  </p>\n<p> If the .wav file has not been specified or it fails to load, the PlayLooping method will play the default beep sound.  </p>\n<p> For more information about PlayLooping, see <a href=\"../Topic/How%20to:%20Loop%20a%20Sound%20Playing%20on%20a%20Windows%20Form.md\" data-linktype=\"relative-path\">How to: Loop a Sound Playing on a Windows Form</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_PlaySync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_PlaySync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PlaySync()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Plays the .wav file and loads the .wav file first if it has not been loaded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PlaySync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The .wav header is corrupted; the file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> is not a PCM .wav file.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PlaySync method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete. You can use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Load_\" data-linktype=\"relative-path\">Load</a> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL, future calls to playback methods for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will not need to reload the .wav file until the path for the sound changes.  </p>\n<p> If the .wav file has not been specified or it fails to load, the PlaySync method will play the default beep sound.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_Stop_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_Stop\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Stop()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Stops playback of the sound if playback is occurring.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Stop ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_LoadCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadCompleted</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a .wav file has been successfully or unsuccessfully loaded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised when loading of a .wav file is complete. The event arguments indicate whether the load of the sound was completed successfully or failed.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_SoundLocationChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SoundLocationChanged</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a new audio source path for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler SoundLocationChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised when a new audio source path for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_StreamChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StreamChanged</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> audio source for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler StreamChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised when a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> audio source for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Media_SoundPlayer_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Media_SoundPlayer_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo, StreamingContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see the <span class=\"xref\">stem.Runtime.Serialization.ISerializable.GetObjectData*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to populate with data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The destination (see <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>) for this serialization.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.toolboxitemattribute\" title=\"System.ComponentModel.ToolboxItemAttribute\" data-linktype=\"relative-path\">ToolboxItemAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> instance is cast to an <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Media.SoundPlayer.yml\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer..ctor\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.IsLoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Load\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.LoadAsync\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.LoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.add_LoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.remove_LoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.LoadTimeout\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.OnLoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.OnSoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.OnStreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Play\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.PlayLooping\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.PlaySync\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.SoundLocation\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.SoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.add_SoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.remove_SoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Stop\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Stream\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.StreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.add_StreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.remove_StreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Tag\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.ISerializable.GetObjectData\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"9fffd3b5-b1a8-caf1-9d85-7af5516b85da\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls playback of a sound from a .wav file.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.media/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Media.SoundPlayer\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Media.SoundPlayer.yml","open_to_public_contributors":false,"api_name":["System.Media.SoundPlayer","System.Media.SoundPlayer..ctor","System.Media.SoundPlayer.IsLoadCompleted","System.Media.SoundPlayer.Load","System.Media.SoundPlayer.LoadAsync","System.Media.SoundPlayer.LoadCompleted","System.Media.SoundPlayer.add_LoadCompleted","System.Media.SoundPlayer.remove_LoadCompleted","System.Media.SoundPlayer.LoadTimeout","System.Media.SoundPlayer.OnLoadCompleted","System.Media.SoundPlayer.OnSoundLocationChanged","System.Media.SoundPlayer.OnStreamChanged","System.Media.SoundPlayer.Play","System.Media.SoundPlayer.PlayLooping","System.Media.SoundPlayer.PlaySync","System.Media.SoundPlayer.SoundLocation","System.Media.SoundPlayer.SoundLocationChanged","System.Media.SoundPlayer.add_SoundLocationChanged","System.Media.SoundPlayer.remove_SoundLocationChanged","System.Media.SoundPlayer.Stop","System.Media.SoundPlayer.Stream","System.Media.SoundPlayer.StreamChanged","System.Media.SoundPlayer.add_StreamChanged","System.Media.SoundPlayer.remove_StreamChanged","System.Media.SoundPlayer.Tag","System.Media.SoundPlayer.ISerializable.GetObjectData"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Media.SoundPlayer","System::Media::SoundPlayer","System.Media.SoundPlayer.#ctor","System::Media::SoundPlayer::#ctor","System.Media.SoundPlayer.IsLoadCompleted","System::Media::SoundPlayer::IsLoadCompleted","System.Media.SoundPlayer.Load","System::Media::SoundPlayer::Load","System.Media.SoundPlayer.LoadAsync","System::Media::SoundPlayer::LoadAsync","System.Media.SoundPlayer.LoadCompleted","System::Media::SoundPlayer::LoadCompleted","System.Media.SoundPlayer.LoadTimeout","System::Media::SoundPlayer::LoadTimeout","System.Media.SoundPlayer.OnLoadCompleted","System::Media::SoundPlayer::OnLoadCompleted","System.Media.SoundPlayer.OnSoundLocationChanged","System::Media::SoundPlayer::OnSoundLocationChanged","System.Media.SoundPlayer.OnStreamChanged","System::Media::SoundPlayer::OnStreamChanged","System.Media.SoundPlayer.Play","System::Media::SoundPlayer::Play","System.Media.SoundPlayer.PlayLooping","System::Media::SoundPlayer::PlayLooping","System.Media.SoundPlayer.PlaySync","System::Media::SoundPlayer::PlaySync","System.Media.SoundPlayer.SoundLocation","System::Media::SoundPlayer::SoundLocation","System.Media.SoundPlayer.SoundLocationChanged","System::Media::SoundPlayer::SoundLocationChanged","System.Media.SoundPlayer.Stop","System::Media::SoundPlayer::Stop","System.Media.SoundPlayer.Stream","System::Media::SoundPlayer::Stream","System.Media.SoundPlayer.StreamChanged","System::Media::SoundPlayer::StreamChanged","System.Media.SoundPlayer.Tag","System::Media::SoundPlayer::Tag","System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData","System::Media::SoundPlayer::System#Runtime#Serialization#ISerializable#GetObjectData"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"9fffd3b5-b1a8-caf1-9d85-7af5516b85da","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Media/SoundPlayer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SoundPlayer class | Microsoft Docs","_op_ogTitle":"SoundPlayer class","description":"Controls playback of a sound from a .wav file.\n","toc_asset_id":"api/_splitted/System.Media/toc.json","toc_rel":"_splitted/System.Media/toc.json","source_url":"","ms.assetid":"System.Media.SoundPlayer","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.media.soundplayer","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.media.soundplayer","fileRelativePath":"api/System.Media.SoundPlayer.html"},"themesRelativePathToOutputRoot":"_themes/"}