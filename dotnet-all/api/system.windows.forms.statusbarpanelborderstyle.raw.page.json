{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">StatusBarPanelBorderStyle</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the appearance of the border for a <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a> on a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum StatusBarPanelBorderStyle</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">StatusBarPanelBorderStyle</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use the StatusBarPanelBorderStyle enumeration and how to handle the <a class=\"xref\" href=\"system.windows.forms.statusbar#System_Windows_Forms_StatusBar_PanelClick\" data-linktype=\"relative-path\">PanelClick</a> event.  </p>\n<p> To run the example, paste the following code in a form. Call the <code>InitializeStatusBarPanels</code> method in the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event-handling method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.StatusBarPanelExample#1\">\ninternal System.Windows.Forms.StatusBar statusBar1;\n\nprivate void InitializeStatusBarPanels()\n{\n\n\t// Create a StatusBar control.\n\tstatusBar1 = new StatusBar();\n\n\t// Dock the status bar at the top of the form. \n\tstatusBar1.Dock = DockStyle.Top;\n\n\t// Set the SizingGrip property to false so the user cannot \n\t// resize the status bar.\n\tstatusBar1.SizingGrip = false;\n\n\t// Associate the event-handling method with the \n\t// PanelClick event.\n\tstatusBar1.PanelClick += \n\t\tnew StatusBarPanelClickEventHandler(statusBar1_PanelClick);\n\n\t// Create two StatusBarPanel objects to display in statusBar1.\n\tStatusBarPanel panel1 = new StatusBarPanel();\n\tStatusBarPanel panel2 = new StatusBarPanel();\n\n\t// Set the width of panel2 explicitly and set\n\t// panel1 to fill in the remaining space.\n\tpanel2.Width = 80;\n\tpanel1.AutoSize = StatusBarPanelAutoSize.Spring;\n\n\t// Set the text alignment within each panel.\n\tpanel1.Alignment = HorizontalAlignment.Left;\n\tpanel2.Alignment = HorizontalAlignment.Right;\n\n\t// Display the first panel without a border and the second\n\t// with a raised border.\n\tpanel1.BorderStyle = StatusBarPanelBorderStyle.None;\n\tpanel2.BorderStyle = StatusBarPanelBorderStyle.Raised;\n\n\t// Set the text of the panels. The panel1 object is reserved\n\t// for line numbers, while panel2 is set to the current time.\n\tpanel1.Text = &quot;Reserved for important information.&quot;;\n\tpanel2.Text = System.DateTime.Now.ToShortTimeString();\n\n\t// Set a tooltip for panel2\n\tpanel2.ToolTipText = &quot;Click time to display seconds&quot;;\n\n\t// Display panels in statusBar1 and add them to the\n\t// status bar&#39;s StatusBarPanelCollection.\n\tstatusBar1.ShowPanels = true;\n\tstatusBar1.Panels.Add(panel1);\n\tstatusBar1.Panels.Add(panel2);\n\n\t// Add the StatusBar to the form.\n\tthis.Controls.Add(statusBar1);\n}\n\n\n// If the user clicks the status bar, check the text of the \n// StatusBarPanel.  If the text equals a short time string,\n// change it to long time display.\nprivate void statusBar1_PanelClick(object sender, \n\tStatusBarPanelClickEventArgs e)\n{\n\tif (e.StatusBarPanel.Text == \n\t\tSystem.DateTime.Now.ToShortTimeString())\n\t{\n\t\te.StatusBarPanel.Text = \n\t\t\tSystem.DateTime.Now.ToLongTimeString();\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.StatusBarPanelExample#1\">\nFriend WithEvents statusBar1 As System.Windows.Forms.StatusBar\n\nPrivate Sub InitializeStatusBarPanels()\n\n    &#39; Create a StatusBar control.\n    statusBar1 = New StatusBar\n\n    &#39; Dock the status bar at the top of the form. \n    statusBar1.Dock = DockStyle.Top\n\n    &#39; Set the SizingGrip property to false so the user cannot \n    &#39; resize the status bar.\n    statusBar1.SizingGrip = False\n\n    &#39; Create two StatusBarPanel objects to display in statusBar1.\n    Dim panel1 As New StatusBarPanel\n    Dim panel2 As New StatusBarPanel\n\n    &#39; Set the width of panel2 explicitly and set\n    &#39; panel1 to fill in the remaining space.\n    panel2.Width = 80\n    panel1.AutoSize = StatusBarPanelAutoSize.Spring\n\n    &#39; Set the text alignment within each panel.\n    panel1.Alignment = HorizontalAlignment.Left\n    panel2.Alignment = HorizontalAlignment.Right\n\n    &#39; Display the first panel without a border and the second\n    &#39; with a raised border.\n    panel1.BorderStyle = StatusBarPanelBorderStyle.None\n    panel2.BorderStyle = StatusBarPanelBorderStyle.Raised\n\n    &#39; Set the text of the panels. The panel1 object is reserved\n    &#39; for line numbers, while panel2 is set to the current time.\n    panel1.Text = &quot;Reserved for important information.&quot;\n    panel2.Text = System.DateTime.Now.ToShortTimeString\n\n    &#39; Set a tooltip for panel2\n    panel2.ToolTipText = &quot;Click time to display seconds&quot;\n\n    &#39; Display panels in statusBar1 and add them to the\n    &#39; status bar&#39;s StatusBarPanelCollection.\n    statusBar1.ShowPanels = True\n    statusBar1.Panels.Add(panel1)\n    statusBar1.Panels.Add(panel2)\n\n    &#39; Add the StatusBar to the form.\n    Me.Controls.Add(statusBar1)\nEnd Sub\n\n\n&#39; If the user clicks the status bar, check the text of the \n&#39; StatusBarPanel.  If the text equals a short time string,\n&#39; change it to long time display.\nPrivate Sub statusBar1_PanelClick(ByVal sender As Object, _\n    ByVal e As StatusBarPanelClickEventArgs) _\n        Handles statusBar1.PanelClick\n    If (e.StatusBarPanel.Text = _\n        System.DateTime.Now.ToShortTimeString) Then\n        e.StatusBarPanel.Text = System.DateTime.Now.ToLongTimeString\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.StatusBarPanelExample#1\">internal:\n   System::Windows::Forms::StatusBar^ statusBar1;\n\nprivate:\n   void InitializeStatusBarPanels()\n   {\n      \n      // Create a StatusBar control.\n      statusBar1 = gcnew StatusBar;\n      \n      // Dock the status bar at the top of the form. \n      statusBar1-&gt;Dock = DockStyle::Top;\n      \n      // Set the SizingGrip property to false so the user cannot \n      // resize the status bar.\n      statusBar1-&gt;SizingGrip = false;\n      \n      // Associate the event-handling method with the \n      // PanelClick event.\n      statusBar1-&gt;PanelClick += gcnew StatusBarPanelClickEventHandler( this, &amp;Form1::statusBar1_PanelClick );\n      \n      // Create two StatusBarPanel objects to display in statusBar1.\n      StatusBarPanel^ panel1 = gcnew StatusBarPanel;\n      StatusBarPanel^ panel2 = gcnew StatusBarPanel;\n      \n      // Set the width of panel2 explicitly and set\n      // panel1 to fill in the remaining space.\n      panel2-&gt;Width = 80;\n      panel1-&gt;AutoSize = StatusBarPanelAutoSize::Spring;\n      \n      // Set the text alignment within each panel.\n      panel1-&gt;Alignment = HorizontalAlignment::Left;\n      panel2-&gt;Alignment = HorizontalAlignment::Right;\n      \n      // Display the first panel without a border and the second\n      // with a raised border.\n      panel1-&gt;BorderStyle = StatusBarPanelBorderStyle::None;\n      panel2-&gt;BorderStyle = StatusBarPanelBorderStyle::Raised;\n      \n      // Set the text of the panels. The panel1 object is reserved\n      // for line numbers, while panel2 is set to the current time.\n      panel1-&gt;Text = &quot;Reserved for important information.&quot;;\n      panel2-&gt;Text = System::DateTime::Now.ToShortTimeString();\n      \n      // Set a tooltip for panel2\n      panel2-&gt;ToolTipText = &quot;Click time to display seconds&quot;;\n      \n      // Display panels in statusBar1 and add them to the\n      // status bar&#39;s StatusBarPanelCollection.\n      statusBar1-&gt;ShowPanels = true;\n      statusBar1-&gt;Panels-&gt;Add( panel1 );\n      statusBar1-&gt;Panels-&gt;Add( panel2 );\n      \n      // Add the StatusBar to the form.\n      this-&gt;Controls-&gt;Add( statusBar1 );\n   }\n\n   // If the user clicks the status bar, check the text of the \n   // StatusBarPanel.  If the text equals a short time string,\n   // change it to long time display.\n   void statusBar1_PanelClick( Object^ /*sender*/, StatusBarPanelClickEventArgs^ e )\n   {\n      if ( e-&gt;StatusBarPanel-&gt;Text == System::DateTime::Now.ToShortTimeString() )\n      {\n         e-&gt;StatusBarPanel-&gt;Text = System::DateTime::Now.ToLongTimeString();\n      }\n   }\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This enumeration is used by the <a class=\"xref\" href=\"system.windows.forms.statusbarpanel#System_Windows_Forms_StatusBarPanel_BorderStyle_\" data-linktype=\"relative-path\">BorderStyle</a> property of the <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a> class. The <a class=\"xref\" href=\"system.windows.forms.statusbarpanel#System_Windows_Forms_StatusBarPanel_BorderStyle_\" data-linktype=\"relative-path\">BorderStyle</a> property enables you to specify the style of border to display on a <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a> within a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a>.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Windows_Forms_StatusBarPanelBorderStyle_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>No border is displayed.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_StatusBarPanelBorderStyle_Raised\">\r\n      \t\t\t<span class=\"lang-csharp\">Raised</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a> is displayed with a three-dimensional raised border.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_StatusBarPanelBorderStyle_Sunken\">\r\n      \t\t\t<span class=\"lang-csharp\">Sunken</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a> is displayed with a three-dimensional sunken border.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.StatusBarPanelBorderStyle.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.StatusBarPanelBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.StatusBarPanelBorderStyle.None\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.StatusBarPanelBorderStyle.Raised\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.StatusBarPanelBorderStyle.Sunken\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"4bc45d6e-89c3-443e-3ed9-dd22ef576a82\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the appearance of the border for a  on a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.StatusBarPanelBorderStyle\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.StatusBarPanelBorderStyle.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.StatusBarPanelBorderStyle","System.Windows.Forms.StatusBarPanelBorderStyle.None","System.Windows.Forms.StatusBarPanelBorderStyle.Raised","System.Windows.Forms.StatusBarPanelBorderStyle.Sunken"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.StatusBarPanelBorderStyle","System::Windows::Forms::StatusBarPanelBorderStyle","System.Windows.Forms.StatusBarPanelBorderStyle.None","System::Windows::Forms::StatusBarPanelBorderStyle::None","System.Windows.Forms.StatusBarPanelBorderStyle.Raised","System::Windows::Forms::StatusBarPanelBorderStyle::Raised","System.Windows.Forms.StatusBarPanelBorderStyle.Sunken","System::Windows::Forms::StatusBarPanelBorderStyle::Sunken"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"4bc45d6e-89c3-443e-3ed9-dd22ef576a82","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/StatusBarPanelBorderStyle.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StatusBarPanelBorderStyle enum | Microsoft Docs","_op_ogTitle":"StatusBarPanelBorderStyle enum","description":"Specifies the appearance of the border for a  on a  control.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.StatusBarPanelBorderStyle","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.statusbarpanelborderstyle","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.statusbarpanelborderstyle","fileRelativePath":"api/System.Windows.Forms.StatusBarPanelBorderStyle.html"},"themesRelativePathToOutputRoot":"_themes/"}