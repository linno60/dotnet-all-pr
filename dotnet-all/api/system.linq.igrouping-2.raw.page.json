{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IGrouping&lt;TKey,TElement&gt;</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a collection of objects that have a common key.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TKey</td>\r\n  \t\t\t<td><p>The type of the key of the IGrouping(TKey,.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TElement</td>\r\n  \t\t\t<td><p>The type of the values in the IGrouping(TKey,.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to work with an IGrouping(TKey, object.  </p>\n<p> In this example, <a class=\"xref\" href=\"system.linq.enumerable#System_Linq_Enumerable_GroupBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__\" data-linktype=\"relative-path\">GroupBy&lt;TSource,TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource,TKey&gt;)</a> is called on the array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects returned by <a class=\"xref\" href=\"system.type#System_Type_GetMembers_\" data-linktype=\"relative-path\">GetMembers</a>. <a class=\"xref\" href=\"system.linq.enumerable#System_Linq_Enumerable_GroupBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__\" data-linktype=\"relative-path\">GroupBy&lt;TSource,TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource,TKey&gt;)</a> groups the objects based on the value of their <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_MemberType_\" data-linktype=\"relative-path\">MemberType</a> property. Each unique value for <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_MemberType_\" data-linktype=\"relative-path\">MemberType</a> in the array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects becomes a key for a new IGrouping(TKey, object, and the <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects that have that key form the IGrouping(TKey, object&#39;s sequence of values.  </p>\n<p> Finally, the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb356424(v=vs.110).aspx\" data-linktype=\"external\">First</a> method is called on the sequence of IGrouping(TKey, objects to obtain just the first IGrouping(TKey, object.  </p>\n<p> The example then outputs the key of the IGrouping(TKey, object and the <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_Name_\" data-linktype=\"relative-path\">Name</a> property of each value in the IGrouping(TKey, object&#39;s sequence of values. Notice that to access an IGrouping(TKey, object&#39;s sequence of values, you simply use the IGrouping(TKey, variable itself.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Linq.IGrouping#1\">// Get an IGrouping object.\nIGrouping&lt;System.Reflection.MemberTypes, System.Reflection.MemberInfo&gt; group =\n    typeof(String).GetMembers().\n    GroupBy(member =&gt; member.MemberType).\n    First();\n\n// Output the key of the IGrouping, then iterate\n// through each value in the sequence of values\n// of the IGrouping and output its Name property.\nConsole.WriteLine(&quot;\\nValues that have the key &#39;{0}&#39;:&quot;, group.Key);\nforeach (System.Reflection.MemberInfo mi in group)\n    Console.WriteLine(mi.Name);\n\n// The output is similar to:\n\n// Values that have the key &#39;Method&#39;:\n// get_Chars\n// get_Length\n// IndexOf\n// IndexOfAny\n// LastIndexOf\n// LastIndexOfAny\n// Insert\n// Replace\n// Replace\n// Remove\n// Join\n// Join\n// Equals\n// Equals\n// Equals\n// ...\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Linq.IGrouping#1\">&#39; Get an IGrouping object.\nDim group As IGrouping(Of System.Reflection.MemberTypes, System.Reflection.MemberInfo) = _\n    Type.GetType(&quot;String&quot;).GetMembers(). _\n    GroupBy(Function(ByVal member) member.MemberType). _\n    First()\n\n&#39; Output the key of the IGrouping, then iterate\n&#39; through each value in the sequence of values\n&#39; of the IGrouping and output its Name property.\nMsgBox(String.Format(&quot;\\nValues that have the key &#39;{0}&#39;:&quot;, group.Key))\nFor Each mi As System.Reflection.MemberInfo In group\n    MsgBox(mi.Name)\nNext\n\n&#39; The output is similar to:\n\n&#39; Values that have the key &#39;Method&#39;:\n&#39; get_Chars\n&#39; get_Length\n&#39; IndexOf\n&#39; IndexOfAny\n&#39; LastIndexOf\n&#39; LastIndexOfAny\n&#39; Insert\n&#39; Replace\n&#39; Replace\n&#39; Remove\n&#39; Join\n&#39; Join\n&#39; Equals\n&#39; Equals\n&#39; Equals\n&#39; ...\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>An IGrouping(TKey, is an <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> that additionally has a key. The key represents the attribute that is common to each value in the IGrouping(TKey,.  </p>\n<p> The values of an IGrouping(TKey, are accessed much as the elements of an <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> are accessed. For example, you can access the values by using a <code>foreach</code> in Visual C# or <code>For Each</code> in Visual Basic loop to iterate through the IGrouping(TKey, object. The Example section contains a code example that shows you how to access both the key and the values of an IGrouping(TKey, object.  </p>\n<p> The IGrouping(TKey, type is used by the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb341740(v=vs.110).aspx\" data-linktype=\"external\">GroupBy</a> standard query operator methods, which return a sequence of elements of type IGrouping(TKey,.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Linq_IGrouping_2_Key_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Linq_IGrouping_2_Key\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Key</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the key of the <span class=\"xref\">stem.Linq.IGrouping`2</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TKey Key { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key of the <span class=\"xref\">stem.Linq.IGrouping`2</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The key of an <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a> represents the attribute that is common to each value in the <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Linq.IGrouping-2.yml\">\r\n<meta name=\"APIName\" content=\"System.Linq.IGrouping&lt;TKey,TElement&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.IGrouping&lt;TKey,TElement&gt;.Key\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"10696765-b1c2-8c8d-d97b-302342d4eea1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of objects that have a common key.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.linq/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Linq.IGrouping`2\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Linq.IGrouping-2.yml","open_to_public_contributors":false,"api_name":["System.Linq.IGrouping<TKey,TElement>","System.Linq.IGrouping<TKey,TElement>.Key"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Linq.IGrouping`2","System::Linq::IGrouping`2","System.Linq.IGrouping`2.Key","System::Linq::IGrouping`2::Key"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"10696765-b1c2-8c8d-d97b-302342d4eea1","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Linq/IGrouping`2.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IGrouping<TKey,TElement> interface | Microsoft Docs","_op_ogTitle":"IGrouping<TKey,TElement> interface","description":"Represents a collection of objects that have a common key.\n","toc_asset_id":"api/_splitted/System.Linq/toc.json","toc_rel":"_splitted/System.Linq/toc.json","source_url":"","ms.assetid":"System.Linq.IGrouping`2","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.linq.igrouping-2","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.linq.igrouping-2","fileRelativePath":"api/System.Linq.IGrouping-2.html"},"themesRelativePathToOutputRoot":"_themes/"}