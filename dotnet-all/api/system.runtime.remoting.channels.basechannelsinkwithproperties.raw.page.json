{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">BaseChannelSinkWithProperties</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a base implementation for channel sinks that want to expose a dictionary interface to their properties.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Security.SecurityCritical]\npublic abstract class BaseChannelSinkWithProperties : System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties\" data-linktype=\"relative-path\">System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties</a></span></div><span class=\"lang-csharp\">BaseChannelSinkWithProperties</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Add_System_Object_System_Object_\" data-linktype=\"relative-path\">Add(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Clear\" data-linktype=\"relative-path\">Clear()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Contains_System_Object_\" data-linktype=\"relative-path\">Contains(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_CopyTo_System_Array_System_Int32_\" data-linktype=\"relative-path\">CopyTo(Array,Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Count\" data-linktype=\"relative-path\">Count</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_IsFixedSize\" data-linktype=\"relative-path\">IsFixedSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_IsReadOnly\" data-linktype=\"relative-path\">IsReadOnly</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_IsSynchronized\" data-linktype=\"relative-path\">IsSynchronized</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Item_System_Object_\" data-linktype=\"relative-path\">Item(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Keys\" data-linktype=\"relative-path\">Keys</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Properties\" data-linktype=\"relative-path\">Properties</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Remove_System_Object_\" data-linktype=\"relative-path\">Remove(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_SyncRoot\" data-linktype=\"relative-path\">SyncRoot</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"relative-path\">IEnumerable.GetEnumerator()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelobjectwithproperties#System_Runtime_Remoting_Channels_BaseChannelObjectWithProperties_Values\" data-linktype=\"relative-path\">Values</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<pre><code class=\"lang-cpp\" name=\"SoapClientFormatterSinkProvider_BaseChannelSinkWithProperties#2\">[SecurityPermission(SecurityAction::Demand, Flags = SecurityPermissionFlag::Infrastructure)]\nprivate ref class MyClientFormatterChannelSink: public BaseChannelSinkWithProperties, public IClientChannelSink, public IMessageSink\n{\nprivate:\n   IClientChannelSink^ nextClientSink;\n   IMessageSink^ nextMessageSink;\n\npublic:\n   MyClientFormatterChannelSink()\n      : nextClientSink( nullptr ), nextMessageSink( nullptr )\n   {}\n\n   MyClientFormatterChannelSink( IClientChannelSink^ nextSink, IMessageSink^ nextMsgSink )\n      : BaseChannelSinkWithProperties()\n   {\n      nextClientSink = nextSink;\n      nextMessageSink = nextMsgSink;\n   }\n\n\tvirtual void ProcessMessage( IMessage^ message, ITransportHeaders^ requestHeaders, Stream^ requestStream, [Out]ITransportHeaders^% responseHeaders, [Out]Stream^% responseStream )\n\t{\n      nextClientSink-&gt;ProcessMessage( message, requestHeaders, requestStream, responseHeaders, responseStream );\n\t}\n\n\n\n   virtual void AsyncProcessRequest( IClientChannelSinkStack^ sinkStack, IMessage^ msg, ITransportHeaders^ headers, Stream^ myStream )\n   {\n      sinkStack-&gt;Push( this, nullptr );\n      nextClientSink-&gt;AsyncProcessRequest( sinkStack, msg, headers, myStream );\n   }\n\n   virtual void AsyncProcessResponse( IClientResponseChannelSinkStack^ sinkStack, Object^ /*state*/, ITransportHeaders^ headers, Stream^ myStream )\n   {\n      sinkStack-&gt;AsyncProcessResponse( headers, myStream );\n   }\n\n   virtual Stream^ GetRequestStream( IMessage^ /*msg*/, ITransportHeaders^ /*headers*/ )\n   {\n      return nullptr;\n   }\n\n\n   property IClientChannelSink^ NextChannelSink \n   {\n      virtual IClientChannelSink^ get()\n      {\n         return nextClientSink;\n      }\n\n   }\n\n   property IMessageSink^ NextSink \n   {\n      virtual IMessageSink^ get()\n      {\n         return nextMessageSink;\n      }\n\n   }\n\n   virtual IMessageCtrl^ AsyncProcessMessage( IMessage^ /*msg*/, IMessageSink^ /*replySink*/ )\n   {\n      return nullptr;\n   }\n\n   virtual IMessage^ SyncProcessMessage( IMessage^ msg )\n   {\n      return nextMessageSink-&gt;SyncProcessMessage( msg );\n   }\n\n\n   property Object^ Item [Object^]\n   {\n      virtual Object^ get( Object^ key ) override\n      {\n\t\t  if ( key == MyKey::typeid )\n                  return this;\n\n         return nullptr;\n      }\n\n      virtual void set( Object^ /*value*/, Object^ /*key*/ ) override\n      {\n         throw gcnew NotSupportedException;\n      }\n\n   }\n\n   property ICollection^ Keys \n   {\n      virtual ICollection^ get() override\n      {\n         ArrayList^ myKeys = gcnew ArrayList( 1 );\n\t\t myKeys-&gt;Add( MyKey::typeid );\n         return myKeys;\n      }\n\n   }\n\n};\n\n\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapClientFormatterSinkProvider_BaseChannelSinkWithProperties#2\">&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nFriend Class MyClientFormatterChannelSink\n   Inherits BaseChannelSinkWithProperties\n   Implements IClientChannelSink, IMessageSink\n   Private nextClientSink As IClientChannelSink = Nothing\n   Private nextMessageSink As IMessageSink = Nothing\n\n   Public Sub New(nextSink As IClientChannelSink, nextMsgSink As IMessageSink)\n      MyBase.New()\n      nextClientSink = nextSink\n      nextMessageSink = nextMsgSink\n   End Sub &#39;New\n\n   Public Sub ProcessMessage(msg As IMessage, requestHeaders As ITransportHeaders, _\n               requestStream As Stream, ByRef responseHeaders As ITransportHeaders, _\n               ByRef responseStream As Stream) _\n               Implements IClientChannelSink.ProcessMessage\n      nextClientSink.ProcessMessage(msg, requestHeaders, requestStream, _\n                                    responseHeaders, responseStream)\n   End Sub &#39;ProcessMessage\n\n   Public Sub AsyncProcessRequest(sinkStack As IClientChannelSinkStack, _\n            msg As IMessage, headers As ITransportHeaders, myStream As Stream) _\n            Implements IClientChannelSink.AsyncProcessRequest\n      sinkStack.Push(Me, Nothing)\n      nextClientSink.AsyncProcessRequest(sinkStack, msg, headers, myStream)\n   End Sub &#39;AsyncProcessRequest\n\n   Public Sub AsyncProcessResponse(sinkStack As IClientResponseChannelSinkStack, _\n            state As Object, headers As ITransportHeaders, myStream As Stream) _\n            Implements IClientChannelSink.AsyncProcessResponse\n      sinkStack.AsyncProcessResponse(headers, myStream)\n   End Sub &#39;AsyncProcessResponse\n\n   Public Function GetRequestStream(msg As IMessage, headers As ITransportHeaders) As Stream _\n         Implements IClientChannelSink.GetRequestStream\n      Return Nothing\n   End Function &#39;GetRequestStream\n\n   Public ReadOnly Property NextChannelSink() As IClientChannelSink _\n         Implements IClientChannelSink.NextChannelSink\n      Get\n         Return nextClientSink\n      End Get\n   End Property\n\n   Public ReadOnly Property NextSink() As IMessageSink _\n         Implements IMessageSink.NextSink\n      Get\n         Return nextMessageSink\n      End Get\n   End Property\n\n   Public Overrides ReadOnly Property Properties() As Collections.IDictionary _\n            Implements IClientChannelSink.Properties\n      Get\n      End Get\n   End Property\n\n   Public Function AsyncProcessMessage(msg As IMessage, replySink As IMessageSink) As IMessageCtrl _\n            Implements IMessageSink.AsyncProcessMessage\n      Return Nothing\n   End Function &#39;AsyncProcessMessage\n\n   Public Function SyncProcessMessage(msg As IMessage) As IMessage _\n            Implements IMessageSink.SyncProcessMessage\n      Return nextMessageSink.SyncProcessMessage(msg)\n   End Function &#39;SyncProcessMessage\n\n   Default Public Overrides Property Item(key As Object) As Object\n      Get\n         If key Is GetType(MyKey) Then\n            Return Me\n         End If\n         Return Nothing\n      End Get\n      Set\n         Throw New NotSupportedException()\n      End Set\n   End Property\n\n   Public Overrides ReadOnly Property Keys() As ICollection\n      Get\n         Dim myKeys As New ArrayList(0)\n         myKeys.Add(GetType(MyKey))\n         Return myKeys\n      End Get\n   End Property\nEnd Class &#39;MyClientFormatterChannelSink\n\nPublic Class MyKey\nEnd Class &#39;MyKey\n</code></pre><pre><code class=\"lang-cs\" name=\"SoapClientFormatterSinkProvider_BaseChannelSinkWithProperties#2\">[SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.Infrastructure)]\ninternal class MyClientFormatterChannelSink :\n         BaseChannelSinkWithProperties, IClientChannelSink, IMessageSink\n{\n   private IClientChannelSink nextClientSink=null;\n   private IMessageSink nextMessageSink = null;\n\n   public MyClientFormatterChannelSink(IClientChannelSink nextSink,\n                                       IMessageSink nextMsgSink) : base()\n   {\n      nextClientSink = nextSink;\n      nextMessageSink = nextMsgSink;\n   }\n\n   public void ProcessMessage(IMessage msg,\n         ITransportHeaders requestHeaders, Stream requestStream,\n         out ITransportHeaders responseHeaders, out Stream responseStream)\n   {\n      nextClientSink.ProcessMessage(msg, requestHeaders, requestStream,\n               out responseHeaders, out responseStream);\n   }\n\n   public void AsyncProcessRequest(IClientChannelSinkStack sinkStack,\n                  IMessage msg, ITransportHeaders headers, Stream myStream)\n   {\n      sinkStack.Push(this, null);\n      nextClientSink.AsyncProcessRequest(sinkStack,msg,headers,myStream);\n   }\n\n   public void AsyncProcessResponse(IClientResponseChannelSinkStack sinkStack,\n         Object state, ITransportHeaders headers, Stream myStream)\n   {\n      sinkStack.AsyncProcessResponse(headers, myStream);\n   }\n\n   public Stream GetRequestStream(IMessage msg,ITransportHeaders headers)\n   {\n      return null;\n   }\n\n   public IClientChannelSink NextChannelSink\n   {\n      get\n      {\n         return nextClientSink;\n      }\n   }\n\n   public IMessageSink NextSink\n   {\n      get\n      {\n         return nextMessageSink;\n      }\n   }\n\n   public IMessageCtrl AsyncProcessMessage(IMessage msg,\n                                                IMessageSink replySink)\n   {\n      return null;\n   }\n\n   public IMessage SyncProcessMessage(IMessage msg)\n   {\n      return nextMessageSink.SyncProcessMessage(msg);\n   }\n\n   public override Object this[Object key]\n   {\n      get\n      {\n         if (key == typeof(MyKey))\n            return this;\n         return null;\n      }\n      set\n      {\n         throw new NotSupportedException();\n      }\n   }\n   public override ICollection Keys\n   {\n      get\n      {\n         ArrayList myKeys = new ArrayList(1);\n         myKeys.Add(typeof(MyKey));\n         return myKeys;\n      }\n   }\n}\npublic class MyKey\n{\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Channel sinks provide a plug-in point that allows access to the underlying messages that are flowing through the channel as well as the stream that is used by the transport mechanism to send messages to a remote object. Channel sinks are linked together in a chain of channel sink providers, and all channel messages flow through this chain of sinks before the message is serialized and transported.  </p>\n<p> This class makes a link demand and an inheritance demand at the class level. A <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown when either the immediate caller or the derived class does not have infrastructure permission. For details about security demands, see <a href=\"../topic/link%20demands\" data-linktype=\"relative-path\">Link Demands</a> and <a href=\"http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9\" data-linktype=\"external\">Inheritance Demands</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Channels_BaseChannelSinkWithProperties__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BaseChannelSinkWithProperties()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.channels.basechannelsinkwithproperties\" data-linktype=\"relative-path\">BaseChannelSinkWithProperties</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected BaseChannelSinkWithProperties ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Channel sinks are linked together in a chain of channel sink providers and all channel messages flow through this chain of sinks before the message is serialized and transported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties..ctor\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"405570e8-6bd9-cb4d-1bc0-54b39f459eb7\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a base implementation for channel sinks that want to expose a dictionary interface to their properties.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.remoting.channels/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties","System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties..ctor"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties","System::Runtime::Remoting::Channels::BaseChannelSinkWithProperties","System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties.#ctor","System::Runtime::Remoting::Channels::BaseChannelSinkWithProperties::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"405570e8-6bd9-cb4d-1bc0-54b39f459eb7","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/BaseChannelSinkWithProperties.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BaseChannelSinkWithProperties class | Microsoft Docs","_op_ogTitle":"BaseChannelSinkWithProperties class","description":"Provides a base implementation for channel sinks that want to expose a dictionary interface to their properties.\n","toc_asset_id":"api/_splitted/System.Runtime.Remoting.Channels/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Channels/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.channels.basechannelsinkwithproperties","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.channels.basechannelsinkwithproperties","fileRelativePath":"api/System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties.html"},"themesRelativePathToOutputRoot":"_themes/"}