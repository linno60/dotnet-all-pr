{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CacheItemPolicy</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a set of eviction and expiration details for a specific cache entry.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class CacheItemPolicy</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">CacheItemPolicy</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how to create an in-memory cache item that monitors the path for a text file. The cache creates a CacheItemPolicy object and sets the <a class=\"xref\" href=\"system.runtime.caching.cacheitempolicy#System_Runtime_Caching_CacheItemPolicy_AbsoluteExpiration_\" data-linktype=\"relative-path\">AbsoluteExpiration</a> property to evict the cache after 60 seconds.  </p>\n<p> [Visual Basic]  </p>\n<pre><code>Protected Sub Button1_Click(ByVal sender As Object, _  \n            ByVal e As System.EventArgs) Handles Button1.Click  \n    Dim cache As ObjectCache = MemoryCache.Default  \n    Dim fileContents As String = TryCast(cache(&quot;filecontents&quot;), _  \n            String)  \n    If fileContents Is Nothing Then  \n        Dim policy As New CacheItemPolicy()  \n        policy.AbsoluteExpiration = _  \n            DateTimeOffset.Now.AddSeconds(60.0)  \n        Dim filePaths As New List(Of String)()  \n     Dim cachedFilePath As String = Server.MapPath(&quot;~&quot;) &amp; _  \n         &quot;\\cacheText.txt&quot;  \n        filePaths.Add(cachedFilePath)  \n        policy.ChangeMonitors.Add(New _  \n            HostFileChangeMonitor(filePaths))  \n\n        &#39; Fetch the file contents.  \n        fileContents = File.ReadAllText(cachedFilePath)  \n        cache.Set(&quot;filecontents&quot;, fileContents, policy)  \n    End If  \n    Label1.Text = fileContents  \nEnd Sub  \n</code></pre><p> [C#]  </p>\n<pre><code>protected void Button1_Click(object sender, EventArgs e)  \n    {  \n        ObjectCache cache = MemoryCache.Default;  \n            string fileContents = cache[&quot;filecontents&quot;] as string;  \n            if (fileContents == null)  \n            {  \n                CacheItemPolicy policy = new CacheItemPolicy();  \n                policy.AbsoluteExpiration =   \n                    DateTimeOffset.Now.AddSeconds(60.0);  \n\n                List&lt;string&gt; filePaths = new List&lt;string&gt;();  \n             string cachedFilePath = Server.MapPath(&quot;~&quot;) +   \n                 &quot;\\\\cacheText.txt&quot;;  \n             filePaths.Add(cachedFilePath);  \n\n                policy.ChangeMonitors.Add(new   \n                    HostFileChangeMonitor(filePaths));  \n\n                // Fetch the file contents.  \n                fileContents = File.ReadAllText(cachedFilePath);  \n\n                cache.Set(&quot;filecontents&quot;, fileContents, policy);  \n\n            }  \n\n            Label1.Text = fileContents;  \n        }  \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A CacheItemPolicy instance contains information that can be associated with a cache entry. For example, when a cache entry is about to be removed from the cache, a <a class=\"xref\" href=\"system.runtime.caching.cacheentryupdatearguments\" data-linktype=\"relative-path\">CacheEntryUpdateArguments</a> object is passed to a callback method. The <a class=\"xref\" href=\"system.runtime.caching.cacheentryupdatearguments#System_Runtime_Caching_CacheEntryUpdateArguments_UpdatedCacheItemPolicy_\" data-linktype=\"relative-path\">UpdatedCacheItemPolicy</a> property of the <a class=\"xref\" href=\"system.runtime.caching.cacheentryupdatearguments\" data-linktype=\"relative-path\">CacheEntryUpdateArguments</a> object can pass a reference to a CacheItemPolicy instance that can include eviction and expiration details about the cache entry.  </p>\n<p> Some methods in the <a class=\"xref\" href=\"system.runtime.caching.memorycache\" data-linktype=\"relative-path\">MemoryCache</a> and <a class=\"xref\" href=\"system.runtime.caching.objectcache\" data-linktype=\"relative-path\">ObjectCache</a> classes accept a CacheItemPolicy instance to describe eviction or expiration policy.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Caching_CacheItemPolicy__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheItemPolicy()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.caching.cacheitempolicy\" data-linktype=\"relative-path\">CacheItemPolicy</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheItemPolicy ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Caching_CacheItemPolicy_AbsoluteExpiration\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AbsoluteExpiration</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether a cache entry should be evicted after a specified duration.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTimeOffset AbsoluteExpiration { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The period of time that must pass before a cache entry is evicted. The default value is <a class=\"xref\" href=\"system.runtime.caching.objectcache#System_Runtime_Caching_ObjectCache_InfiniteAbsoluteExpiration\" data-linktype=\"relative-path\">InfiniteAbsoluteExpiration</a>, meaning that the entry does not expire.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Caching_CacheItemPolicy_ChangeMonitors\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ChangeMonitors</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of <a class=\"xref\" href=\"system.runtime.caching.changemonitor\" data-linktype=\"relative-path\">ChangeMonitor</a> objects that are associated with a cache entry.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.runtime.caching.changemonitor\" data-linktype=\"relative-path\">ChangeMonitor</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of change monitors. The default is an empty collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can add to or remove change monitors that are associated with a cache entry. However, the set of change monitors must be complete before you pass a <a class=\"xref\" href=\"system.runtime.caching.cacheitempolicy\" data-linktype=\"relative-path\">CacheItemPolicy</a> instance to an <a class=\"xref\" href=\"system.runtime.caching.objectcache\" data-linktype=\"relative-path\">ObjectCache</a> implementation. If you change the set of change monitors on a <a class=\"xref\" href=\"system.runtime.caching.cacheitempolicy\" data-linktype=\"relative-path\">CacheItemPolicy</a> object after the <a class=\"xref\" href=\"system.runtime.caching.cacheitempolicy\" data-linktype=\"relative-path\">CacheItemPolicy</a> object has been passed to an <a class=\"xref\" href=\"system.runtime.caching.objectcache\" data-linktype=\"relative-path\">ObjectCache</a> implementation, the changes have no effect.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Caching_CacheItemPolicy_Priority\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Priority</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a priority setting that is used to determine whether to evict a cache entry.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Runtime.Caching.CacheItemPriority Priority { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.caching.cacheitempriority\" data-linktype=\"relative-path\">CacheItemPriority</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that indicates the priority for eviction. The default priority value is <a class=\"xref\" href=\"system.runtime.caching.cacheitempriority\" data-linktype=\"relative-path\">CacheItemPriority</a>, which means no priority.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In ASP.NET, the priority enumeration only has two possible priorities: <a class=\"xref\" href=\"system.runtime.caching.cacheitempriority\" data-linktype=\"relative-path\">CacheItemPriority</a> (which means no priority), and <a class=\"xref\" href=\"system.runtime.caching.cacheitempriority\" data-linktype=\"relative-path\">CacheItemPriority</a> (which means the entry cannot be removed). Therefore, the only priority that can be set is whether a cache entry should remain in the cache forever.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Adding an entry to the cache with a priority level of <a class=\"xref\" href=\"system.runtime.caching.cacheitempriority\" data-linktype=\"relative-path\">CacheItemPriority</a> can cause the cache to overflow with entries that can never be removed. Cache implementations should set the <a class=\"xref\" href=\"system.runtime.caching.cacheitempriority\" data-linktype=\"relative-path\">CacheItemPriority</a> priority for a cache entry only if the cache implementation provides ways to evict entries from the cache and to manage the number of cache entries.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Caching_CacheItemPolicy_RemovedCallback\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemovedCallback</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a reference to a <a class=\"xref\" href=\"system.runtime.caching.cacheentryremovedcallback\" data-linktype=\"relative-path\">CacheEntryRemovedCallback</a> delegate that is called after an entry is removed from the cache.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.caching.cacheentryremovedcallback\" data-linktype=\"relative-path\">CacheEntryRemovedCallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A reference to a delegate that is called by a cache implementation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>After a cache entry has been removed from the cache, the cache invokes the callback object that is referenced by the RemovedCallback property. A cache implementation can use this callback to notify the calling method that a cache entry has been removed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Caching_CacheItemPolicy_SlidingExpiration\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SlidingExpiration</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether a cache entry should be evicted if it has not been accessed in a given span of time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TimeSpan SlidingExpiration { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A span of time within which a cache entry must be accessed before the cache entry is evicted from the cache. The default is <a class=\"xref\" href=\"system.runtime.caching.objectcache#System_Runtime_Caching_ObjectCache_NoSlidingExpiration\" data-linktype=\"relative-path\">NoSlidingExpiration</a>, meaning that the item should not be expired based on a time span.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Caching_CacheItemPolicy_UpdateCallback\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateCallback</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a reference to a <a class=\"xref\" href=\"system.runtime.caching.cacheentryupdatecallback\" data-linktype=\"relative-path\">CacheEntryUpdateCallback</a> delegate that is called before a cache entry is removed from the cache.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.caching.cacheentryupdatecallback\" data-linktype=\"relative-path\">CacheEntryUpdateCallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A reference to a delegate that is called by a cache implementation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Caching.CacheItemPolicy.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy.ChangeMonitors\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy.Priority\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy.RemovedCallback\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy.SlidingExpiration\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Caching.CacheItemPolicy.UpdateCallback\">\r\n<meta name=\"APILocation\" content=\"System.Runtime.Caching.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"8ca9c517-e2ce-d2fb-3bd8-0754444e08a5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a set of eviction and expiration details for a specific cache entry.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.caching/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Caching.CacheItemPolicy\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Caching.CacheItemPolicy.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Caching.CacheItemPolicy","System.Runtime.Caching.CacheItemPolicy..ctor","System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration","System.Runtime.Caching.CacheItemPolicy.ChangeMonitors","System.Runtime.Caching.CacheItemPolicy.Priority","System.Runtime.Caching.CacheItemPolicy.RemovedCallback","System.Runtime.Caching.CacheItemPolicy.SlidingExpiration","System.Runtime.Caching.CacheItemPolicy.UpdateCallback"],"api_location":["System.Runtime.Caching.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Caching.CacheItemPolicy","System::Runtime::Caching::CacheItemPolicy","System.Runtime.Caching.CacheItemPolicy.#ctor","System::Runtime::Caching::CacheItemPolicy::#ctor","System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration","System::Runtime::Caching::CacheItemPolicy::AbsoluteExpiration","System.Runtime.Caching.CacheItemPolicy.ChangeMonitors","System::Runtime::Caching::CacheItemPolicy::ChangeMonitors","System.Runtime.Caching.CacheItemPolicy.Priority","System::Runtime::Caching::CacheItemPolicy::Priority","System.Runtime.Caching.CacheItemPolicy.RemovedCallback","System::Runtime::Caching::CacheItemPolicy::RemovedCallback","System.Runtime.Caching.CacheItemPolicy.SlidingExpiration","System::Runtime::Caching::CacheItemPolicy::SlidingExpiration","System.Runtime.Caching.CacheItemPolicy.UpdateCallback","System::Runtime::Caching::CacheItemPolicy::UpdateCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"8ca9c517-e2ce-d2fb-3bd8-0754444e08a5","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.Caching/CacheItemPolicy.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CacheItemPolicy class | Microsoft Docs","_op_ogTitle":"CacheItemPolicy class","description":"Represents a set of eviction and expiration details for a specific cache entry.\n","toc_asset_id":"api/_splitted/System.Runtime.Caching/toc.json","toc_rel":"_splitted/System.Runtime.Caching/toc.json","source_url":"","ms.assetid":"System.Runtime.Caching.CacheItemPolicy","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.caching.cacheitempolicy","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.caching.cacheitempolicy","fileRelativePath":"api/System.Runtime.Caching.CacheItemPolicy.html"},"themesRelativePathToOutputRoot":"_themes/"}