{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">InstallContext</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Contains information about the current installation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class InstallContext</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">InstallContext</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates the <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext__ctor_\" data-linktype=\"relative-path\">InstallContext</a> constructors, the <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_Parameters_\" data-linktype=\"relative-path\">Parameters</a> property and the <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_LogMessage_\" data-linktype=\"relative-path\">LogMessage</a> and <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_IsParameterTrue_\" data-linktype=\"relative-path\">IsParameterTrue</a> methods of the InstallContext class.  </p>\n<p> When the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Install_\" data-linktype=\"relative-path\">Install</a> method of the installer is called, it checks for parameters from the command line. Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.  </p>\n<p> When the program is invoked without any arguments, an empty InstallContext is created. When &quot;/LogFile&quot; and &quot;/LogtoConsole&quot; are specified, the InstallContext is created by passing the respective arguments to <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext__ctor_\" data-linktype=\"relative-path\">InstallContext</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"InstallContext_InstallContext#1\">using System;\nusing System.ComponentModel;\nusing System.Configuration.Install;\nusing System.Collections;\nusing System.Collections.Specialized;\n\nnamespace MyInstallContextNamespace\n{\n   [RunInstallerAttribute(true)]\n   class InstallContext_Example : Installer\n   {\n      public InstallContext myInstallContext;\n\n      public override void Install( IDictionary mySavedState )\n      {\n         StringDictionary myStringDictionary = myInstallContext.Parameters;\n         if( myStringDictionary.Count == 0 )\n         {\n            Console.WriteLine( &quot;No parameters have been entered in the command line &quot;\n               +&quot;hence, the install will take place in the silent mode&quot; );\n         }\n         else\n         {\n            // Check whether the &quot;LogtoConsole&quot; parameter has been set.\n            if( myInstallContext.IsParameterTrue( &quot;LogtoConsole&quot; ) == true )\n            {\n               // Display the message to the console and add it to the logfile.\n               myInstallContext.LogMessage( &quot;The &#39;Install&#39; method has been called&quot; );\n            }\n         }\n\n         // The &#39;Install procedure should be added here.\n      }\n\n      public override void Uninstall( IDictionary mySavedState )\n      {\n         // The &#39;Uninstall&#39; procedure should be added here.\n      }\n\n      public override void Rollback( IDictionary mySavedState )\n      {\n         if( myInstallContext.IsParameterTrue( &quot;LogtoConsole&quot; ) == true )\n         {\n            myInstallContext.LogMessage( &quot;The &#39;Rollback&#39; method has been called&quot; );\n         }\n\n         // The &#39;Rollback&#39; procedure should be added here.\n      }\n\n      public override void Commit( IDictionary mySavedState )\n      {\n         if( myInstallContext.IsParameterTrue( &quot;LogtoConsole&quot; ) == true )\n         {\n            myInstallContext.LogMessage( &quot;The &#39;Commit&#39; method has been called&quot; );\n         }\n\n         // The &#39;Commit&#39; procedure should be added here.\n      }\n\n      static void Main( string[] args )\n      {\n         InstallContext_Example myInstallObject = new InstallContext_Example();\n\n         IDictionary mySavedState = new Hashtable();\n\n         if( args.Length &lt; 1 )\n         {\n            // There are no command line arguments, create an empty &#39;InstallContext&#39;.\n            myInstallObject.myInstallContext = new InstallContext();\n         }\n\n         else if( ( args.Length == 1 ) &amp;&amp; ( args[ 0 ] == &quot;/?&quot; ) )\n         {\n            // Display the &#39;Help&#39; for this utility.\n            Console.WriteLine( &quot;Specify the &#39;/Logfile&#39; and &#39;/LogtoConsole&#39; parameters&quot; );\n            Console.WriteLine( &quot;Example: &quot; );\n            Console.WriteLine( &quot;InstallContext_InstallContext.exe /LogFile=example.log&quot;\n                                          +&quot; /LogtoConsole=true&quot; );\n            return;\n         }\n\n         else\n         {\n            // Create an InstallContext object with the given parameters.\n            String[] commandLine = new string[ args.Length ];\n            for( int i = 0; i &lt; args.Length; i++ )\n            {\n               commandLine[ i ] = args[ i ];\n            }\n            myInstallObject.myInstallContext = new InstallContext( args[ 0 ], commandLine);\n         }\n\n         try\n         {\n            // Call the &#39;Install&#39; method.\n            myInstallObject.Install( mySavedState );\n\n            // Call the &#39;Commit&#39; method.\n            myInstallObject.Commit( mySavedState );\n         }\n         catch( Exception )\n         {\n            // Call the &#39;Rollback&#39; method.\n            myInstallObject.Rollback( mySavedState );\n         }\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"InstallContext_InstallContext#1\">#using &lt;System.dll&gt;\n#using &lt;System.Configuration.Install.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::Configuration::Install;\nusing namespace System::Collections;\nusing namespace System::Collections::Specialized;\n\n[RunInstallerAttribute(true)]\nref class InstallContext_Example: public Installer\n{\npublic:\n   InstallContext^ myInstallContext;\n   virtual void Install( IDictionary^ mySavedState ) override\n   {\n      StringDictionary^ myStringDictionary = myInstallContext-&gt;Parameters;\n      if ( myStringDictionary-&gt;Count == 0 )\n      {\n         Console::Write( &quot;No parameters have been entered in the command line &quot; );\n         Console::WriteLine( &quot;hence, the install will take place in the silent mode&quot; );\n      }\n      else\n      {\n         // Check whether the &quot;LogtoConsole&quot; parameter has been set.\n         if ( myInstallContext-&gt;IsParameterTrue( &quot;LogtoConsole&quot; ) )\n         {\n            // Display the message to the console and add it to the logfile.\n            myInstallContext-&gt;LogMessage( &quot;The &#39;Install&#39; method has been called&quot; );\n         }\n      }\n      // The &#39;Install procedure should be added here.\n   }\n\n   virtual void Uninstall( IDictionary^ mySavedState ) override\n   {\n      // The &#39;Uninstall&#39; procedure should be added here.\n   }\n\n   virtual void Rollback( IDictionary^ mySavedState ) override\n   {\n      if ( myInstallContext-&gt;IsParameterTrue( &quot;LogtoConsole&quot; ) )\n      {\n         myInstallContext-&gt;LogMessage( &quot;The &#39;Rollback&#39; method has been called&quot; );\n      }\n\n      // The &#39;Rollback&#39; procedure should be added here.\n   }\n\n   virtual void Commit( IDictionary^ mySavedState ) override\n   {\n      if ( myInstallContext-&gt;IsParameterTrue( &quot;LogtoConsole&quot; ) )\n      {\n         myInstallContext-&gt;LogMessage( &quot;The &#39;Commit&#39; method has been called&quot; );\n      }\n\n      // The &#39;Commit&#39; procedure should be added here.\n   }\n};\n\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   InstallContext_Example^ myInstallObject = gcnew InstallContext_Example;\n   IDictionary^ mySavedState = gcnew Hashtable;\n   if ( args-&gt;Length &lt; 2 )\n   {\n      // There are no command line arguments, create an empty &#39;InstallContext&#39;.\n      myInstallObject-&gt;myInstallContext = gcnew InstallContext;\n   }\n   else\n   if ( (args-&gt;Length == 2) &amp;&amp; (args[ 1 ]-&gt;Equals( &quot;/?&quot; )) )\n   {\n      // Display the &#39;Help&#39; for this utility.\n      Console::WriteLine( &quot;Specify the &#39;/Logfile&#39; and &#39;/LogtoConsole&#39; parameters&quot; );\n      Console::WriteLine( &quot;Example: &quot; );\n      Console::WriteLine( &quot;InstallContext_InstallContext.exe /LogFile=example.log  /LogtoConsole=true&quot; );\n      return 0;\n   }\n   else\n   {\n      // Create an InstallContext object with the given parameters.\n      array&lt;String^&gt;^commandLine = gcnew array&lt;String^&gt;(args-&gt;Length - 1);\n      for ( int i = 0; i &lt; args-&gt;Length - 1; i++ )\n      {\n         commandLine[ i ] = args[ i + 1 ];\n      }\n      myInstallObject-&gt;myInstallContext = gcnew InstallContext( args[ 1 ],commandLine );\n   }\n\n   try\n   {\n      // Call the &#39;Install&#39; method.\n      myInstallObject-&gt;Install( mySavedState );\n      \n      // Call the &#39;Commit&#39; method.\n      myInstallObject-&gt;Commit( mySavedState );\n   }\n   catch ( Exception^ ) \n   {\n      // Call the &#39;Rollback&#39; method.\n      myInstallObject-&gt;Rollback( mySavedState );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallContext_InstallContext#1\">Imports System\nImports System.ComponentModel\nImports System.Configuration.Install\nImports System.Collections\nImports System.Collections.Specialized\n\nNamespace MyInstallContextNamespace\n   &lt;RunInstallerAttribute(True)&gt; Class InstallContext_Example\n      Inherits Installer\n      Public myInstallContext As InstallContext\n\n      Public Overrides Sub Install(mySavedState As IDictionary)\n         Dim myStringDictionary As StringDictionary = myInstallContext.Parameters\n         If myStringDictionary.Count = 0 Then\n            Console.WriteLine(&quot;No parameters have been entered in the command line&quot; + _\n                        &quot;hence, the install will take place in the silent mode&quot;)\n         Else\n            &#39; Check wether the &quot;LogtoConsole&quot; parameter has been set.\n            If myInstallContext.IsParameterTrue(&quot;LogtoConsole&quot;) = True Then\n               &#39; Display the message to the console and add it to the logfile.\n               myInstallContext.LogMessage(&quot;The &#39;Install&#39; method has been called&quot;)\n            End If\n         End If\n         &#39; The &#39;Install procedure should be added here.\n      End Sub &#39;Install\n\n      Public Overrides Sub Uninstall(mySavedState As IDictionary)\n         &#39; The &#39;Uninstall&#39; procedure should be added here.\n      End Sub &#39;Uninstall\n\n      Public Overrides Sub Rollback(mySavedState As IDictionary)\n         If myInstallContext.IsParameterTrue(&quot;LogtoConsole&quot;) = True Then\n            myInstallContext.LogMessage(&quot;The &#39;Rollback&#39; method has been called&quot;)\n         End If\n         &#39; The &#39;Rollback&#39; procedure should be added here.\n      End Sub &#39;Rollback\n\n      Public Overrides Sub Commit(mySavedState As IDictionary)\n         If myInstallContext.IsParameterTrue(&quot;LogtoConsole&quot;) = True Then\n            myInstallContext.LogMessage(&quot;The &#39;Commit&#39; method has been called&quot;)\n         End If\n         &#39; The &#39;Commit&#39; procedure should be added here.\n      End Sub &#39;Commit\n\n      &#39; Entry point which delegates to C-style main Private Function\n      Public Overloads Shared Sub Main()\n         Main(System.Environment.GetCommandLineArgs())\n      End Sub\n\n      Overloads Shared Sub Main(args() As String)\n         Dim myInstallObject As New InstallContext_Example()\n         Dim mySavedState = New Hashtable()\n\n         If args.Length &lt; 2 Then\n            &#39; There are no command line arguments, create an empty &#39;InstallContext&#39;.\n            myInstallObject.myInstallContext = New InstallContext()\n         ElseIf args.Length = 2 And args(1) = &quot;/?&quot; Then\n               &#39; Display the &#39;Help&#39; for this utility.\n               Console.WriteLine(&quot;Specify the &#39;/Logfile&#39; and &#39;/LogtoConsole&#39; parameters&quot;)\n               Console.WriteLine(&quot;Example: &quot;)\n               Console.WriteLine(&quot;InstallContext_InstallContext.exe /LogFile=example.log&quot; + _\n                                                         &quot; /LogtoConsole=true&quot;)\n               Return\n\n         Else\n            &#39; Create an InstallContext object with the given parameters.\n            Dim commandLine() As String = New String(args.Length - 2) {}\n            Dim i As Integer\n            For i = 1 To args.Length - 1\n               commandLine(i-1) = args(i)\n            Next i\n            myInstallObject.myInstallContext = _\n               New InstallContext(&quot;/LogFile:example.log&quot;, commandLine)\n         End If\n\n         Try\n            &#39; Call the &#39;Install&#39; method.\n            myInstallObject.Install(mySavedState)\n\n            &#39; Call the &#39;Commit&#39; method.\n            myInstallObject.Commit(mySavedState)\n         Catch\n            &#39; Call the &#39;Rollback&#39; method.\n            myInstallObject.Rollback( mySavedState )\n         End Try\n      End Sub &#39;Main\n   End Class &#39;InstallContext_Example\nEnd Namespace &#39;MyInstallContextNamespace\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Typically, an InstallContext is created by an installation executable, such as InstallUtil.exe, that installs assemblies. The installation program invokes the InstallContext constructor, passing it the default log-file path and command-line parameters.  </p>\n<p> Prior to calling its <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Install_\" data-linktype=\"relative-path\">Install</a>, <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_\" data-linktype=\"relative-path\">Commit</a>, <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Rollback_\" data-linktype=\"relative-path\">Rollback</a>, or <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> methods, the installation program sets the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a> property of an <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> to the instance of InstallContext. Before calling these methods, an <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> that contains an installer collection in the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> property sets the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a> property of each contained installer.  </p>\n<p> The <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_Parameters_\" data-linktype=\"relative-path\">Parameters</a> property contains a parsed version of the command line that is entered to run the installation executable. The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation. Call the <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_IsParameterTrue_\" data-linktype=\"relative-path\">IsParameterTrue</a> method to find out whether a command-line parameter is <code>true</code>.  </p>\n<p> Use the <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_LogMessage_\" data-linktype=\"relative-path\">LogMessage</a> method to write status messages to the installation log file and the console.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallContext__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstallContext()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.install.installcontext\" data-linktype=\"relative-path\">InstallContext</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InstallContext ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This overload does not create a log file for the installation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallContext__ctor_System_String_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstallContext(String, String[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.install.installcontext\" data-linktype=\"relative-path\">InstallContext</a> class, and creates a log file for the installation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InstallContext (string logFilePath, string[] commandLine);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logFilePath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the log file for this installation, or <code>null</code> if no log file should be created.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>commandLine</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command-line parameters entered when running the installation program, or <code>null</code> if none were entered.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the installation uses <a href=\"../topic/installutil.exe%20(installer%20tool)\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a>, this constructor creates a log file at the specified path and parses the array of command-line parameters into the <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_Parameters_\" data-linktype=\"relative-path\">Parameters</a> property. If a log-file path is specified in the command-line parameters, it is used to create the file. If the log file argument is not specified in the command line, the value of the <code>logFilePath</code> parameter is used. To suppress the creation of a log file, pass the &quot;/logfile= &quot; command-line parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallContext_Parameters\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parameters</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the command-line parameters that were entered when InstallUtil.exe was run.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Specialized.StringDictionary Parameters { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a> that represents the command-line parameters that were entered when the installation executable was run.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a new <a class=\"xref\" href=\"system.configuration.install.installcontext\" data-linktype=\"relative-path\">InstallContext</a> is created, the command-line parameters are parsed into the Parameters property. Both the keys and the values of the parameters are strings.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallContext_IsParameterTrue_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsParameterTrue(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the specified command-line parameter is <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsParameterTrue (string paramName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>paramName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the command-line parameter to check.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified parameter is set to &quot;yes&quot;, &quot;true&quot;, &quot;1&quot;, or an empty string (&quot;&quot;); otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method accesses the <a class=\"xref\" href=\"system.configuration.install.installcontext#System_Configuration_Install_InstallContext_Parameters_\" data-linktype=\"relative-path\">Parameters</a> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallContext_LogMessage_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LogMessage(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a message to the console and to the log file for the installation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void LogMessage (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An installer can call this method to write progress or other status information to the log file. If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the LogMessage method. Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and &quot;/LogToConsole= true&quot; is specified in the command line.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallContext_ParseCommandLine_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParseCommandLine(String[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Parses the command-line parameters into a string dictionary.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array containing the command-line parameters.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a> containing the parsed command-line parameters.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Install.InstallContext.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallContext\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallContext..ctor\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallContext.IsParameterTrue\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallContext.LogMessage\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallContext.Parameters\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallContext.ParseCommandLine\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.Install.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"47f92090-2d73-3b45-e9d6-d8e3d3bd7199\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains information about the current installation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.configuration.install/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.Install.InstallContext\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Install.InstallContext.yml","open_to_public_contributors":false,"api_name":["System.Configuration.Install.InstallContext","System.Configuration.Install.InstallContext..ctor","System.Configuration.Install.InstallContext.IsParameterTrue","System.Configuration.Install.InstallContext.LogMessage","System.Configuration.Install.InstallContext.Parameters","System.Configuration.Install.InstallContext.ParseCommandLine"],"api_location":["System.Configuration.Install.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.Install.InstallContext","System::Configuration::Install::InstallContext","System.Configuration.Install.InstallContext.#ctor","System::Configuration::Install::InstallContext::#ctor","System.Configuration.Install.InstallContext.IsParameterTrue","System::Configuration::Install::InstallContext::IsParameterTrue","System.Configuration.Install.InstallContext.LogMessage","System::Configuration::Install::InstallContext::LogMessage","System.Configuration.Install.InstallContext.Parameters","System::Configuration::Install::InstallContext::Parameters","System.Configuration.Install.InstallContext.ParseCommandLine","System::Configuration::Install::InstallContext::ParseCommandLine"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"47f92090-2d73-3b45-e9d6-d8e3d3bd7199","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InstallContext class | Microsoft Docs","_op_ogTitle":"InstallContext class","description":"Contains information about the current installation.\n","toc_asset_id":"api/_splitted/System.Configuration.Install/toc.json","toc_rel":"_splitted/System.Configuration.Install/toc.json","source_url":"","ms.assetid":"System.Configuration.Install.InstallContext","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.install.installcontext","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.install.installcontext","fileRelativePath":"api/System.Configuration.Install.InstallContext.html"},"themesRelativePathToOutputRoot":"_themes/"}