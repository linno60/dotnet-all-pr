{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SoapExtension</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>The base class for SOAP extensions for XML Web services created using ASP.NET.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class SoapExtension</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">SoapExtension</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following <code>TraceExtension</code> SOAP extension outputs the SOAP request and SOAP response to a specified file when applied to an XML Web service method. If the following SOAP extension is installed to run with an XML Web service, the ASPNET user account must have permission to write to the directory in which the log file is written.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic SoapExtension Example#1\">using System;\nusing System.Web.Services;\nusing System.Web.Services.Protocols;\nusing System.IO;\nusing System.Net;\n\n\t// Define a SOAP Extension that traces the SOAP request and SOAP\n\t// response for the XML Web service method the SOAP extension is\n\t// applied to.\n\n\tpublic class TraceExtension : SoapExtension \n\t{\n\t\tStream oldStream;\n\t\tStream newStream;\n\t\tstring filename;\n\n\t\t// Save the Stream representing the SOAP request or SOAP response into\n\t\t// a local memory buffer.\n\t\tpublic override Stream ChainStream( Stream stream )\n\t\t{\n\t\t\toldStream = stream;\n\t\t\tnewStream = new MemoryStream();\n\t\t\treturn newStream;\n\t\t}\n\n\t\t// When the SOAP extension is accessed for the first time, the XML Web\n\t\t// service method it is applied to is accessed to store the file\n\t\t// name passed in, using the corresponding SoapExtensionAttribute.\t\n\t\tpublic override object GetInitializer(LogicalMethodInfo methodInfo, SoapExtensionAttribute attribute) \n\t\t{\n\t\t\treturn ((TraceExtensionAttribute) attribute).Filename;\n\t\t}\n\n\t\t// The SOAP extension was configured to run using a configuration file\n\t\t// instead of an attribute applied to a specific XML Web service\n\t\t// method.\n\t\tpublic override object GetInitializer(Type WebServiceType) \n\t\t{\n\t\t\t// Return a file name to log the trace information to, based on the\n\t\t\t// type.\n\t\t\treturn &quot;C:\\\\&quot; + WebServiceType.FullName + &quot;.log&quot;;    \n\t\t}\n\n\t\t// Receive the file name stored by GetInitializer and store it in a\n\t\t// member variable for this specific instance.\n\t\tpublic override void Initialize(object initializer) \n\t\t{\n\t\t\tfilename = (string) initializer;\n\t\t}\n\n\t\t//  If the SoapMessageStage is such that the SoapRequest or\n\t\t//  SoapResponse is still in the SOAP format to be sent or received,\n\t\t//  save it out to a file.\n\t\tpublic override void ProcessMessage(SoapMessage message) \n\t\t{\n\t\t\tswitch (message.Stage) \n\t\t\t{\n\t\t\t\tcase SoapMessageStage.BeforeSerialize:\n\t\t\t\t\tbreak;\n\t\t\t\tcase SoapMessageStage.AfterSerialize:\n\t\t\t\t\tWriteOutput(message);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SoapMessageStage.BeforeDeserialize:\n\t\t\t\t\tWriteInput(message);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SoapMessageStage.AfterDeserialize:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tpublic void WriteOutput(SoapMessage message)\n\t\t{\n\t\t\tnewStream.Position = 0;\n\t\t\tFileStream fs = new FileStream(filename, FileMode.Append,\n\t\t\t\tFileAccess.Write);\n\t\t\tStreamWriter w = new StreamWriter(fs);\n\n\t\t\tstring soapString = (message is SoapServerMessage) ? &quot;SoapResponse&quot; : &quot;SoapRequest&quot;;\n\t\t\tw.WriteLine(&quot;-----&quot; + soapString + &quot; at &quot; + DateTime.Now);\n\t\t\tw.Flush();\n\t\t\tCopy(newStream, fs);\n\t\t\tw.Close();\n\t\t\tnewStream.Position = 0;\n\t\t\tCopy(newStream, oldStream);\n\t\t}\n\n\t\tpublic void WriteInput(SoapMessage message)\n\t\t{\n\t\t\tCopy(oldStream, newStream);\n\t\t\tFileStream fs = new FileStream(filename, FileMode.Append,\n\t\t\t\tFileAccess.Write);\n\t\t\tStreamWriter w = new StreamWriter(fs);\n\n\t\t\tstring soapString = (message is SoapServerMessage) ?\n\t\t\t\t&quot;SoapRequest&quot; : &quot;SoapResponse&quot;;\n\t\t\tw.WriteLine(&quot;-----&quot; + soapString + \n\t\t\t\t&quot; at &quot; + DateTime.Now);\n\t\t\tw.Flush();\n\t\t\tnewStream.Position = 0;\n\t\t\tCopy(newStream, fs);\n\t\t\tw.Close();\n\t\t\tnewStream.Position = 0;\n\t\t}\n\n\t\tvoid Copy(Stream from, Stream to) \n\t\t{\n\t\t\tTextReader reader = new StreamReader(from);\n\t\t\tTextWriter writer = new StreamWriter(to);\n\t\t\twriter.WriteLine(reader.ReadToEnd());\n\t\t\twriter.Flush();\n\t\t}\n\t}\n\n\t// Create a SoapExtensionAttribute for the SOAP Extension that can be\n\t// applied to an XML Web service method.\n\t[AttributeUsage(AttributeTargets.Method)]\n\tpublic class TraceExtensionAttribute : SoapExtensionAttribute \n\t{\n\n\t\tprivate string filename = &quot;c:\\\\log.txt&quot;;\n\t\tprivate int priority;\n\n\t\tpublic override Type ExtensionType \n\t\t{\n\t\t\tget { return typeof(TraceExtension); }\n\t\t}\n\n\t\tpublic override int Priority \n\t\t{\n\t\t\tget { return priority; }\n\t\t\tset { priority = value; }\n\t\t}\n\n\t\tpublic string Filename \n\t\t{\n\t\t\tget \n\t\t\t{\n\t\t\t\treturn filename;\n\t\t\t}\n\t\t\tset \n\t\t\t{\n\t\t\t\tfilename = value;\n\t\t\t}\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic SoapExtension Example#1\">#using &lt;System.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n\nusing namespace System;\nusing namespace System::Web::Services;\nusing namespace System::Web::Services::Protocols;\nusing namespace System::IO;\nusing namespace System::Net;\n\nref class TraceExtension;\n\n// Create a SoapExtensionAttribute for the SOAP Extension that can be\n// applied to an XML Web service method.\n[AttributeUsage(AttributeTargets::Method)]\npublic ref class TraceExtensionAttribute: public SoapExtensionAttribute\n{\nprivate:\n   String^ filename;\n   int priority;\n\npublic:\n   TraceExtensionAttribute()\n      : filename( &quot;c:\\\\log.txt&quot; )\n   {}\n\n   property Type^ ExtensionType \n   {\n      virtual Type^ get() override\n      {\n         return TraceExtension::typeid;\n      }\n   }\n\n   property int Priority \n   {\n      virtual int get() override\n      {\n         return priority;\n      }\n      virtual void set( int value ) override\n      {\n         priority = value;\n      }\n   }\n\n   property String^ Filename \n   {\n      String^ get()\n      {\n         return filename;\n      }\n      void set( String^ value )\n      {\n         filename = value;\n      }\n   }\n};\n\n// Define a SOAP Extension that traces the SOAP request and SOAP\n// response for the XML Web service method the SOAP extension is\n// applied to.\npublic ref class TraceExtension: public SoapExtension\n{\nprivate:\n   Stream^ oldStream;\n   Stream^ newStream;\n   String^ filename;\n\npublic:\n   // Save the Stream representing the SOAP request or SOAP response into\n   // a local memory buffer.\n   virtual Stream^ ChainStream( Stream^ stream ) override\n   {\n      oldStream = stream;\n      newStream = gcnew MemoryStream;\n      return newStream;\n   }\n\n   // When the SOAP extension is accessed for the first time, the XML Web\n   // service method it is applied to is accessed to store the file\n   // name passed in, using the corresponding SoapExtensionAttribute. \n   virtual Object^ GetInitializer( LogicalMethodInfo^ /*methodInfo*/, SoapExtensionAttribute^ attribute ) override\n   {\n      return (dynamic_cast&lt;TraceExtensionAttribute^&gt;(attribute))-&gt;Filename;\n   }\n\n   // The SOAP extension was configured to run using a configuration file\n   // instead of an attribute applied to a specific XML Web service\n   // method.\n   virtual Object^ GetInitializer( Type^ WebServiceType ) override\n   {\n      // Return a file name to log the trace information to, based on the\n      // type.\n      return String::Format( &quot;C:\\\\{0}.log&quot;, WebServiceType-&gt;FullName );\n   }\n\n   // Receive the file name stored by GetInitializer and store it in a\n   // member variable for this specific instance.\n   virtual void Initialize( Object^ initializer ) override\n   {\n      filename = dynamic_cast&lt;String^&gt;(initializer);\n   }\n\n   //  If the SoapMessageStage is such that the SoapRequest or\n   //  SoapResponse is still in the SOAP format to be sent or received,\n   //  save it out to a file.\n   virtual void ProcessMessage( SoapMessage^ message ) override\n   {\n      switch ( message-&gt;Stage )\n      {\n         case SoapMessageStage::BeforeSerialize:\n            break;\n         case SoapMessageStage::AfterSerialize:\n            WriteOutput( message );\n            break;\n         case SoapMessageStage::BeforeDeserialize:\n            WriteInput( message );\n            break;\n         case SoapMessageStage::AfterDeserialize:\n            break;\n      }\n   }\n\n   void WriteOutput( SoapMessage^ message )\n   {\n      newStream-&gt;Position = 0;\n      FileStream^ fs = gcnew FileStream( filename, FileMode::Append,\n         FileAccess::Write );\n      StreamWriter^ w = gcnew StreamWriter( fs );\n\n      String^ soapString = ( (SoapServerMessage^)( message ) ) ?\n         (String^)&quot;SoapResponse&quot; : &quot;SoapRequest&quot;;\n      w-&gt;WriteLine( &quot;-----{0} at {1}&quot;, soapString, DateTime::Now );\n      w-&gt;Flush();\n      Copy( newStream, fs );\n      w-&gt;Close();\n      newStream-&gt;Position = 0;\n      Copy( newStream, oldStream );\n   }\n\n   void WriteInput( SoapMessage^ message )\n   {\n      Copy( oldStream, newStream );\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Append,FileAccess::Write );\n      StreamWriter^ w = gcnew StreamWriter( fs );\n      String^ soapString = (dynamic_cast&lt;SoapServerMessage^&gt;(message)) ? (String^)&quot;SoapRequest&quot; : &quot;SoapResponse&quot;;\n      w-&gt;WriteLine( &quot;-----{0} at {1}&quot;, soapString, DateTime::Now );\n      w-&gt;Flush();\n      newStream-&gt;Position = 0;\n      Copy( newStream, fs );\n      w-&gt;Close();\n      newStream-&gt;Position = 0;\n   }\n\n   void Copy( Stream^ from, Stream^ to )\n   {\n      TextReader^ reader = gcnew StreamReader( from );\n      TextWriter^ writer = gcnew StreamWriter( to );\n      writer-&gt;WriteLine( reader-&gt;ReadToEnd() );\n      writer-&gt;Flush();\n   }\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic SoapExtension Example#1\">Imports System\nImports System.Web.Services\nImports System.Web.Services.Protocols\nImports System.IO\n\n&#39; Define a SOAP Extension that traces the SOAP request and SOAP response\n&#39; for the XML Web service method the SOAP extension is applied to.\nPublic Class TraceExtension\n    Inherits SoapExtension\n\n    Private oldStream As Stream\n    Private newStream As Stream\n    Private m_filename As String\n\n    &#39; Save the Stream representing the SOAP request or SOAP response into\n    &#39; a local memory buffer.\n    Public Overrides Function ChainStream(ByVal stream As Stream) As Stream\n        oldStream = stream\n        newStream = New MemoryStream()\n        Return newStream\n    End Function\n\n    &#39; When the SOAP extension is accessed for the first time, the XML Web\n    &#39; service method it is applied to is accessed to store the file\n    &#39; name passed in, using the corresponding SoapExtensionAttribute.    \n    Public Overloads Overrides Function GetInitializer(ByVal methodInfo As _\n        LogicalMethodInfo, _\n    ByVal attribute As SoapExtensionAttribute) As Object\n        Return CType(attribute, TraceExtensionAttribute).Filename\n    End Function\n\n    &#39; The SOAP extension was configured to run using a configuration file\n    &#39; instead of an attribute applied to a specific XML Web service\n    &#39; method.  Return a file name based on the class implementing the Web\n    &#39; Service&#39;s type.\n    Public Overloads Overrides Function GetInitializer(ByVal WebServiceType As _\n      Type) As Object\n        &#39; Return a file name to log the trace information to, based on the\n        &#39; type.\n        Return &quot;C:\\&quot; + WebServiceType.FullName + &quot;.log&quot;\n    End Function\n\n    &#39; Receive the file name stored by GetInitializer and store it in a\n    &#39; member variable for this specific instance.\n    Public Overrides Sub Initialize(ByVal initializer As Object)\n        m_filename = CStr(initializer)\n    End Sub\n\n    &#39; If the SoapMessageStage is such that the SoapRequest or SoapResponse\n    &#39; is still in the SOAP format to be sent or received over the network,\n    &#39; save it out to file.\n    Public Overrides Sub ProcessMessage(ByVal message As SoapMessage)\n        Select Case message.Stage\n            Case SoapMessageStage.BeforeSerialize\n            Case SoapMessageStage.AfterSerialize\n                WriteOutput(message)\n            Case SoapMessageStage.BeforeDeserialize\n                WriteInput(message)\n            Case SoapMessageStage.AfterDeserialize\n        End Select\n    End Sub\n\n    &#39; Write the SOAP message out to a file.\n    Public Sub WriteOutput(ByVal message As SoapMessage)\n        newStream.Position = 0\n        Dim fs As New FileStream(m_filename, FileMode.Append, _\n                                 FileAccess.Write)\n        Dim w As New StreamWriter(fs)\n        w.WriteLine(&quot;-----Response at &quot; + DateTime.Now.ToString())\n        w.Flush()\n        Copy(newStream, fs)\n        w.Close()\n        newStream.Position = 0\n        Copy(newStream, oldStream)\n    End Sub\n\n    &#39; Write the SOAP message out to a file.\n    Public Sub WriteInput(ByVal message As SoapMessage)\n        Copy(oldStream, newStream)\n        Dim fs As New FileStream(m_filename, FileMode.Append, _\n                                 FileAccess.Write)\n        Dim w As New StreamWriter(fs)\n\n        w.WriteLine(&quot;----- Request at &quot; + DateTime.Now.ToString())\n        w.Flush()\n        newStream.Position = 0\n        Copy(newStream, fs)\n        w.Close()\n        newStream.Position = 0\n    End Sub\n\n    Sub Copy(ByVal fromStream As Stream, ByVal toStream As Stream)\n        Dim reader As New StreamReader(fromStream)\n        Dim writer As New StreamWriter(toStream)\n        writer.WriteLine(reader.ReadToEnd())\n        writer.Flush()\n    End Sub\nEnd Class\n\n&#39; Create a SoapExtensionAttribute for our SOAP Extension that can be\n&#39; applied to an XML Web service method.\n&lt;AttributeUsage(AttributeTargets.Method)&gt; _\nPublic Class TraceExtensionAttribute\n    Inherits SoapExtensionAttribute\n\n    Private m_filename As String = &quot;c:\\log.txt&quot;\n    Private m_priority As Integer\n\n    Public Overrides ReadOnly Property ExtensionType() As Type\n        Get\n            Return GetType(TraceExtension)\n        End Get\n    End Property\n\n    Public Overrides Property Priority() As Integer\n        Get\n            Return m_priority\n        End Get\n        Set(ByVal Value As Integer)\n            m_priority = value\n        End Set\n    End Property\n\n    Public Property Filename() As String\n        Get\n            Return m_filename\n        End Get\n        Set(ByVal Value As String)\n            m_filename = value\n        End Set\n    End Property\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>ASP.NET allows a SOAP-related infrastructure to be built by means of an extensibility mechanism. The ASP.NET SOAP extension architecture revolves around an extension that can inspect or modify a message at specific stages in message processing on either the client or the server.  </p>\n<p> ASP.NET SOAP extensions derive from the SoapExtension class. The <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> and <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_Initialize_\" data-linktype=\"relative-path\">Initialize</a> methods provide alternative mechanisms for initializing the SOAP extension to enhance performance. <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_ProcessMessage_\" data-linktype=\"relative-path\">ProcessMessage</a> is the heart of most SOAP extensions, as the method is called at each stage defined in <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>, allowing the SOAP extension to perform the desired behavior of that specific SOAP extension. For SOAP extensions that need to modify the SOAP request or SOAP response, <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_ChainStream_\" data-linktype=\"relative-path\">ChainStream</a> provides an opportunity to receive the proposed data to be sent across the wire.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Services_Protocols_SoapExtension__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SoapExtension()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.protocols.soapextension\" data-linktype=\"relative-path\">SoapExtension</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected SoapExtension ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Services_Protocols_SoapExtension_ChainStream_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ChainStream(Stream)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a SOAP extension access to the memory buffer containing the SOAP request or response.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IO.Stream ChainStream (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A memory buffer containing the SOAP request or response.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> representing a new memory buffer that this SOAP extension can modify.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>ChainStream ensures that SOAP extensions with the highest priority can modify the actual data closest to the SOAP message sent or returned over the wire.  </p>\n<p> SOAP extensions should save references of the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> passed into ChainStream and the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> returned from ChainStream. If the SOAP extension is configured to run with a XML Web service method, the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> passed into ChainStream contains the serialized SOAP request at the <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a><a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>. Similarily, the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> reference returned from ChainStream is written into when the serialization occurs and thus contains the serialized SOAP response in the <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a><a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Services_Protocols_SoapExtension_GetInitializer_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetInitializer(Type)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a SOAP extension to initialize data specific to a class implementing an XML Web service at a one time performance cost.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract object GetInitializer (Type serviceType);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>serviceType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the class implementing the XML Web service to which the SOAP extension is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that the SOAP extension initializes for caching.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The overload of <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> that gets called by ASP.NET depends on how the SOAP extension was specified. There are two methods for specifying a SOAP extension:  </p>\n<ul>\n<li><p>Apply a custom attribute, deriving from <a class=\"xref\" href=\"system.web.services.protocols.soapextensionattribute\" data-linktype=\"relative-path\">SoapExtensionAttribute</a>, to the individual XML Web service method.  </p>\n</li>\n<li><p>Add a reference in either the web.config or app.config configuration files.  </p>\n</li>\n</ul>\n<p> If you add a reference to one of the configuration files, the SOAP extension runs for all XML Web services within the scope of that configuration file. When specifying, a SOAP extension by referencing a configuration file, ASP.NET invokes the <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> overload that passes in a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>. When specifying an extension by applying a custom attribute, ASP.NET invokes the <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> that passes in a <a class=\"xref\" href=\"system.web.services.protocols.logicalmethodinfo\" data-linktype=\"relative-path\">LogicalMethodInfo</a> and a <a class=\"xref\" href=\"system.web.services.protocols.soapextensionattribute\" data-linktype=\"relative-path\">SoapExtensionAttribute</a>.  </p>\n<p> For details on adding SOAP extensions to a configuration file, see <a href=\"http://msdn.microsoft.com/en-us/1f0d71bc-8faa-4730-b500-2a6c7b5d4f6b\" data-linktype=\"external\">&#91;&lt;topic://cpconconfigurationoptionsforaspnetwebservices&gt;&#93;</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Services_Protocols_SoapExtension_GetInitializer_System_Web_Services_Protocols_LogicalMethodInfo_System_Web_Services_Protocols_SoapExtensionAttribute_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetInitializer(LogicalMethodInfo, SoapExtensionAttribute)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method using an attribute applied to the XML Web service method at a one time performance cost.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>methodInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.protocols.logicalmethodinfo\" data-linktype=\"relative-path\">LogicalMethodInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.web.services.protocols.logicalmethodinfo\" data-linktype=\"relative-path\">LogicalMethodInfo</a> representing the specific function prototype for the XML Web service method to which the SOAP extension is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attribute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.protocols.soapextensionattribute\" data-linktype=\"relative-path\">SoapExtensionAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.web.services.protocols.soapextensionattribute\" data-linktype=\"relative-path\">SoapExtensionAttribute</a> applied to the XML Web service method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that the SOAP extension initializes for caching.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the SOAP extension is configured using a configuration file see the GetInitializer overload that accepts a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.  </p>\n<p> A SOAP extension has three opportunities to initialize data and they all have different purposes:  </p>\n<ul>\n<li><p>Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.  </p>\n</li>\n<li><p>GetInitializer - GetInitializer, however, is called just once, the first time a SOAP request is made to an XML Web services method. If a custom attribute is applied to the XML Web service method, the GetInitializer method is invoked. This allows the SOAP extension to interrogate the <a class=\"xref\" href=\"system.web.services.protocols.logicalmethodinfo\" data-linktype=\"relative-path\">LogicalMethodInfo</a> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <a class=\"xref\" href=\"system.web.services.protocols.soapextensionattribute\" data-linktype=\"relative-path\">SoapExtensionAttribute</a>. The return value is cached by ASP.NET and passed into subsequent <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_Initialize_\" data-linktype=\"relative-path\">Initialize</a> methods. Therefore, initialization done in GetInitializer is encapsulated essentially into a one-time performance hit.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_Initialize_\" data-linktype=\"relative-path\">Initialize</a> - <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_Initialize_\" data-linktype=\"relative-path\">Initialize</a> is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> initialized in GetInitializer is passed to it.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Services_Protocols_SoapExtension_Initialize_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Initialize(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a SOAP extension to initialize itself using the data cached in the <span class=\"xref\">stem.Web.Services.Protocols.SoapExtension.GetInitializer*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract void Initialize (object initializer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>initializer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> returned from <span class=\"xref\">stem.Web.Services.Protocols.SoapExtension.GetInitializer*</span> cached by ASP.NET.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A SOAP extension has three opportunities to initialize data and they all have different purposes:  </p>\n<ul>\n<li><p>Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> - <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a>, however, is called just once, the first time a SOAP request is made to an XML Web services method. If a custom attribute is applied to the XML Web service method, the <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> method is invoked. This allows the SOAP extension to interrogate the <a class=\"xref\" href=\"system.web.services.protocols.logicalmethodinfo\" data-linktype=\"relative-path\">LogicalMethodInfo</a> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <a class=\"xref\" href=\"system.web.services.protocols.soapextensionattribute\" data-linktype=\"relative-path\">SoapExtensionAttribute</a>. The return value is cached by ASP.NET and passed into subsequent Initialize methods. Therefore, initialization done in <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> is encapsulated essentially into a one-time performance hit.  </p>\n</li>\n<li><p>Initialize - Initialize is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> initialized in <a class=\"xref\" href=\"system.web.services.protocols.soapextension#System_Web_Services_Protocols_SoapExtension_GetInitializer_\" data-linktype=\"relative-path\">GetInitializer</a> is passed to it.  </p>\n</li>\n</ul>\n<p>-  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can also add a SOAP extension without deriving from <a class=\"xref\" href=\"system.web.services.protocols.soapextensionattribute\" data-linktype=\"relative-path\">SoapExtensionAttribute</a> by using the <a href=\"http://msdn.microsoft.com/en-us/7a373a98-6d82-4f8d-a6fc-2996da3fd54c\" data-linktype=\"external\">&lt;soapExtensionTypes&gt; Element</a> in a configuration file. For details, see <a href=\"http://msdn.microsoft.com/en-us/7a373a98-6d82-4f8d-a6fc-2996da3fd54c\" data-linktype=\"external\">&lt;soapExtensionTypes&gt; Element</a> and <a href=\"http://msdn.microsoft.com/en-us/97d81ace-95e7-4acc-ae39-9692a0021e95\" data-linktype=\"external\">SOAP Message Modification Using SOAP Extensions</a>.  </p>\n</div>\n<p>-</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Services_Protocols_SoapExtension_ProcessMessage_System_Web_Services_Protocols_SoapMessage_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessMessage(SoapMessage)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a SOAP extension to receive a <a class=\"xref\" href=\"system.web.services.protocols.soapmessage\" data-linktype=\"relative-path\">SoapMessage</a> to process at each <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.protocols.soapmessage\" data-linktype=\"relative-path\">SoapMessage</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.web.services.protocols.soapmessage\" data-linktype=\"relative-path\">SoapMessage</a> to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>ProcessMessage is called at all <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a> stages for SOAP extensions applied to both XML Web services created using ASP.NET and their clients. At each <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>, an instance of a class deriving from <a class=\"xref\" href=\"system.web.services.protocols.soapmessage\" data-linktype=\"relative-path\">SoapMessage</a> is passed to ProcessMessage. If the SOAP extension is running on the XML Web service client, then a <a class=\"xref\" href=\"system.web.services.protocols.soapclientmessage\" data-linktype=\"relative-path\">SoapClientMessage</a> object is passed into ProcessMessage; otherwise a <a class=\"xref\" href=\"system.web.services.protocols.soapservermessage\" data-linktype=\"relative-path\">SoapServerMessage</a> object is passed in.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Services.Protocols.SoapExtension.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapExtension\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapExtension..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapExtension.ChainStream\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapExtension.GetInitializer\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapExtension.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapExtension.ProcessMessage\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"6c4cd33a-30f1-1fa4-c09f-ff7352130856\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The base class for SOAP extensions for XML Web services created using ASP.NET.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.services.protocols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Protocols.SoapExtension\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Services.Protocols.SoapExtension.yml","open_to_public_contributors":false,"api_name":["System.Web.Services.Protocols.SoapExtension","System.Web.Services.Protocols.SoapExtension..ctor","System.Web.Services.Protocols.SoapExtension.ChainStream","System.Web.Services.Protocols.SoapExtension.GetInitializer","System.Web.Services.Protocols.SoapExtension.Initialize","System.Web.Services.Protocols.SoapExtension.ProcessMessage"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Protocols.SoapExtension","System::Web::Services::Protocols::SoapExtension","System.Web.Services.Protocols.SoapExtension.#ctor","System::Web::Services::Protocols::SoapExtension::#ctor","System.Web.Services.Protocols.SoapExtension.ChainStream","System::Web::Services::Protocols::SoapExtension::ChainStream","System.Web.Services.Protocols.SoapExtension.GetInitializer","System::Web::Services::Protocols::SoapExtension::GetInitializer","System.Web.Services.Protocols.SoapExtension.Initialize","System::Web::Services::Protocols::SoapExtension::Initialize","System.Web.Services.Protocols.SoapExtension.ProcessMessage","System::Web::Services::Protocols::SoapExtension::ProcessMessage"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"6c4cd33a-30f1-1fa4-c09f-ff7352130856","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.Services.Protocols/SoapExtension.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SoapExtension class | Microsoft Docs","_op_ogTitle":"SoapExtension class","description":"The base class for SOAP extensions for XML Web services created using ASP.NET.\n","toc_asset_id":"api/_splitted/System.Web.Services.Protocols/toc.json","toc_rel":"_splitted/System.Web.Services.Protocols/toc.json","source_url":"","ms.assetid":"System.Web.Services.Protocols.SoapExtension","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.services.protocols.soapextension","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.services.protocols.soapextension","fileRelativePath":"api/System.Web.Services.Protocols.SoapExtension.html"},"themesRelativePathToOutputRoot":"_themes/"}