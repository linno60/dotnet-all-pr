{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EventArrivedEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Holds event data for the <a class=\"xref\" href=\"system.management.managementeventwatcher#System_Management_ManagementEventWatcher_EventArrived\" data-linktype=\"relative-path\">EventArrived</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class EventArrivedEventArgs : System.Management.ManagementEventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementeventargs\" data-linktype=\"relative-path\">System.Management.ManagementEventArgs</a></span></div><span class=\"lang-csharp\">EventArrivedEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementeventargs#System_Management_ManagementEventArgs_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The following asynchronous example sets up a WMI timer to raise an event every second, and removes it when no longer needed. The <a class=\"xref\" href=\"system.management.managementeventwatcher\" data-linktype=\"relative-path\">ManagementEventWatcher</a> defines several .NET Framework events which are raised when WMI events are delivered. Delegates are attached to these events for handling the incoming data.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_EventArrivedEventArgs#1\">using System;\nusing System.Management;\n\n// This example shows asynchronous consumption of events.\n// In this example you are listening for timer events.\n// The first part of the example sets up the timer.\npublic class EventWatcherAsync \n{\n    public EventWatcherAsync()\n    {\n        // Set up a timer to raise events every 1 second\n        //=============================================\n        ManagementClass timerClass = \n            new ManagementClass(&quot;__IntervalTimerInstruction&quot;);\n        ManagementObject timer = timerClass.CreateInstance();\n        timer[&quot;TimerId&quot;] = &quot;Timer1&quot;;\n        timer[&quot;IntervalBetweenEvents&quot;] = 1000;\n        timer.Put();\n\n        // Set up the event consumer\n        //==========================\n        // Create event query to receive timer events\n        WqlEventQuery query = \n            new WqlEventQuery(&quot;__TimerEvent&quot;,\n            &quot;TimerId=\\&quot;Timer1\\&quot;&quot;);\n\n        // Initialize an event watcher and \n        // subscribe to timer events \n        ManagementEventWatcher watcher = \n            new ManagementEventWatcher(query);\n\n        // Set up a listener for events\n        watcher.EventArrived += \n            new EventArrivedEventHandler(\n            this.HandleEvent);\n\n        // Start listening\n        watcher.Start();\n\n        // Do something in the meantime\n        System.Threading.Thread.Sleep(10000);\n      \n        // Stop listening\n        watcher.Stop();\n        \n    }\n\n\n    private void HandleEvent(object sender,\n        EventArrivedEventArgs e)   \n    {\n        Console.WriteLine(&quot;Event arrived !&quot;);\n    }\n\n    public static void Main(string[] args) \n    {\n        // start the event watcher\n        EventWatcherAsync eventWatcher = new\n            EventWatcherAsync();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_EventArrivedEventArgs#1\">Imports System\nImports System.Management\n\n&#39; This example shows asynchronous consumption of events.\n&#39; In this example you are listening for timer events.\n&#39; The first part of the example sets up the timer.\n\nPublic Class EventWatcherAsync\n\n    Public Sub New()\n        &#39; Set up a timer to raise events every 1 second\n        &#39;=============================================\n        Dim timerClass As New ManagementClass( _\n            &quot;__IntervalTimerInstruction&quot;)\n        Dim timer As ManagementObject = _\n            timerClass.CreateInstance()\n        timer(&quot;TimerId&quot;) = &quot;Timer1&quot;\n        timer(&quot;IntervalBetweenEvents&quot;) = 1000\n        timer.Put()\n\n        &#39; Set up the event consumer\n        &#39;==========================\n        &#39; Create event query to receive timer events\n        Dim query As New WqlEventQuery(&quot;__TimerEvent&quot;, _\n            &quot;TimerId=&quot;&quot;Timer1&quot;&quot;&quot;)\n\n        &#39; Initialize an event watcher and subscribe to \n        &#39; events that match this query\n        Dim watcher As New ManagementEventWatcher(query)\n\n        &#39; Set up a listener for events\n        AddHandler watcher.EventArrived, _\n            AddressOf Me.HandleEvent\n\n        &#39; Start listening\n        watcher.Start()\n\n        &#39; Do something in the meantime\n        System.Threading.Thread.Sleep(10000)\n\n        &#39; Stop listening\n        watcher.Stop()\n\n    End Sub\n\n    Private Sub HandleEvent(ByVal sender As Object, _\n        ByVal e As EventArrivedEventArgs)\n\n        Console.WriteLine(&quot;Event arrived !&quot;)\n    End Sub\n\n    Public Overloads Shared Function _\n            Main(ByVal args() As String) As Integer\n\n        &#39;start the event watcher\n        Dim eventWatcher As New EventWatcherAsync\n\n        Return 0\n\n    End Function\n\nEnd Class\n</code></pre>\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Management_EventArrivedEventArgs_NewEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NewEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the WMI event that was delivered.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Management.ManagementBaseObject NewEvent { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementbaseobject\" data-linktype=\"relative-path\">ManagementBaseObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.management.managementbaseobject\" data-linktype=\"relative-path\">ManagementBaseObject</a> that contains the delivered WMI event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h3 class=\"accented\" id=\"property-value\">Property Value</h3>\n<p> The object representing the WMI event.  </p>\n<h3 class=\"accented\" id=\"net-framework-security\">.NET Framework Security</h3>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../topic/using%20libraries%20from%20partially%20trusted%20code\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.EventArrivedEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.EventArrivedEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Management.EventArrivedEventArgs.NewEvent\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"ab6b7921-d78a-dc19-08c8-a276f153f31f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Holds event data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.management/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.EventArrivedEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.EventArrivedEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Management.EventArrivedEventArgs","System.Management.EventArrivedEventArgs.NewEvent"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.EventArrivedEventArgs","System::Management::EventArrivedEventArgs","System.Management.EventArrivedEventArgs.NewEvent","System::Management::EventArrivedEventArgs::NewEvent"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"ab6b7921-d78a-dc19-08c8-a276f153f31f","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Management/EventArrivedEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventArrivedEventArgs class | Microsoft Docs","_op_ogTitle":"EventArrivedEventArgs class","description":"Holds event data for the  event.\n","toc_asset_id":"api/_splitted/System.Management/toc.json","toc_rel":"_splitted/System.Management/toc.json","source_url":"","ms.assetid":"System.Management.EventArrivedEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.management.eventarrivedeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.management.eventarrivedeventargs","fileRelativePath":"api/System.Management.EventArrivedEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}