{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DrawListViewItemEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class DrawListViewItemEventArgs : EventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a></span></div><span class=\"lang-csharp\">DrawListViewItemEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to provide custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control in the example has a gradient background. Subitems with negative values have a red foreground and a black background.  </p>\n<p> A handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawItem</a> event draws the background for entire items. A handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the text values and both the text and background for subitems that have negative values. A handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> event draws each column header.  </p>\n<p> A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> component provides a way to switch between the details view and the list view. In the list view, only the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawItem</a> event is fired. In this case, the text and background are both drawn in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawItem</a> event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#1\">using System;\nusing System.Drawing;\nusing System.Drawing.Drawing2D;\nusing System.Globalization;\nusing System.Windows.Forms;\n\npublic class ListViewOwnerDraw : Form\n{\n    private ListView listView1 = new ListView();\n    private ContextMenu contextMenu1 = new ContextMenu();\n\n    public ListViewOwnerDraw()\n    {\n        // Initialize the ListView control.\n        listView1.BackColor = Color.Black;\n        listView1.ForeColor = Color.White;\n        listView1.Dock = DockStyle.Fill;\n        listView1.View = View.Details;\n        listView1.FullRowSelect = true;\n\n        // Add columns to the ListView control.\n        listView1.Columns.Add(&quot;Name&quot;, 100, HorizontalAlignment.Center);\n        listView1.Columns.Add(&quot;First&quot;, 100, HorizontalAlignment.Center);\n        listView1.Columns.Add(&quot;Second&quot;, 100, HorizontalAlignment.Center);\n        listView1.Columns.Add(&quot;Third&quot;, 100, HorizontalAlignment.Center);\n\n        // Create items and add them to the ListView control.\n        ListViewItem listViewItem1 = new ListViewItem(new string[] { &quot;One&quot;, &quot;20&quot;, &quot;30&quot;, &quot;-40&quot; }, -1);\n        ListViewItem listViewItem2 = new ListViewItem(new string[] { &quot;Two&quot;, &quot;-250&quot;, &quot;145&quot;, &quot;37&quot; }, -1);\n        ListViewItem listViewItem3 = new ListViewItem(new string[] { &quot;Three&quot;, &quot;200&quot;, &quot;800&quot;, &quot;-1,001&quot; }, -1);\n        ListViewItem listViewItem4 = new ListViewItem(new string[] { &quot;Four&quot;, &quot;not available&quot;, &quot;-2&quot;, &quot;100&quot; }, -1);\n        listView1.Items.AddRange(new ListViewItem[] { listViewItem1, listViewItem2, listViewItem3, listViewItem4 });\n\n        // Initialize the shortcut menu and \n        // assign it to the ListView control.\n        contextMenu1.MenuItems.Add(&quot;List&quot;,\n            new EventHandler(menuItemList_Click));\n        contextMenu1.MenuItems.Add(&quot;Details&quot;,\n            new EventHandler(menuItemDetails_Click));\n        listView1.ContextMenu = contextMenu1;\n\n        // Configure the ListView control for owner-draw and add \n        // handlers for the owner-draw events.\n        listView1.OwnerDraw = true;\n        listView1.DrawItem += new\n            DrawListViewItemEventHandler(listView1_DrawItem);\n        listView1.DrawSubItem += new\n            DrawListViewSubItemEventHandler(listView1_DrawSubItem);\n        listView1.DrawColumnHeader += new\n            DrawListViewColumnHeaderEventHandler(listView1_DrawColumnHeader);\n\n        // Add a handler for the MouseUp event so an item can be \n        // selected by clicking anywhere along its width.\n        listView1.MouseUp += new MouseEventHandler(listView1_MouseUp);\n\n        // Add handlers for various events to compensate for an \n        // extra DrawItem event that occurs the first time the mouse \n        // moves over each row. \n        listView1.MouseMove += new MouseEventHandler(listView1_MouseMove);\n        listView1.ColumnWidthChanged += new ColumnWidthChangedEventHandler(listView1_ColumnWidthChanged);\n        listView1.Invalidated += new InvalidateEventHandler(listView1_Invalidated);\n\n        // Initialize the form and add the ListView control to it.\n        this.ClientSize = new Size(450, 150);\n        this.FormBorderStyle = FormBorderStyle.FixedSingle;\n        this.MaximizeBox = false;\n        this.Text = &quot;ListView OwnerDraw Example&quot;;\n        this.Controls.Add(listView1);\n    }\n\n    // Clean up any resources being used.        \n    protected override void Dispose(bool disposing)\n    {\n        if (disposing)\n        {\n            contextMenu1.Dispose();\n        }\n        base.Dispose(disposing);\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.Run(new ListViewOwnerDraw());\n    }\n\n    // Sets the ListView control to the List view.\n    private void menuItemList_Click(object sender, EventArgs e)\n    {\n        listView1.View = View.List;\n        listView1.Invalidate();\n    }\n\n    // Sets the ListView control to the Details view.\n    private void menuItemDetails_Click(object sender, EventArgs e)\n    {\n        listView1.View = View.Details;\n\n        // Reset the tag on each item to re-enable the workaround in\n        // the MouseMove event handler.\n        foreach (ListViewItem item in listView1.Items)\n        {\n            item.Tag = null;\n        }\n    }\n\n    // Selects and focuses an item when it is clicked anywhere along \n    // its width. The click must normally be on the parent item text.\n    private void listView1_MouseUp(object sender, MouseEventArgs e)\n    {\n        ListViewItem clickedItem = listView1.GetItemAt(5, e.Y);\n        if (clickedItem != null)\n        {\n            clickedItem.Selected = true;\n            clickedItem.Focused = true;\n        }\n    }\n\n    // Draws the backgrounds for entire ListView items.\n    private void listView1_DrawItem(object sender,\n        DrawListViewItemEventArgs e)\n    {\n        if ((e.State &amp; ListViewItemStates.Selected) != 0)\n        {\n            // Draw the background and focus rectangle for a selected item.\n            e.Graphics.FillRectangle(Brushes.Maroon, e.Bounds);\n            e.DrawFocusRectangle();\n        }\n        else\n        {\n            // Draw the background for an unselected item.\n            using (LinearGradientBrush brush =\n                new LinearGradientBrush(e.Bounds, Color.Orange,\n                Color.Maroon, LinearGradientMode.Horizontal))\n            {\n                e.Graphics.FillRectangle(brush, e.Bounds);\n            }\n        }\n\n        // Draw the item text for views other than the Details view.\n        if (listView1.View != View.Details)\n        {\n            e.DrawText();\n        }\n    }\n\n    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n\n    // Draws column headers.\n    private void listView1_DrawColumnHeader(object sender,\n        DrawListViewColumnHeaderEventArgs e)\n    {\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    break;\n            }\n\n            // Draw the standard header background.\n            e.DrawBackground();\n\n            // Draw the header text.\n            using (Font headerFont =\n                        new Font(&quot;Helvetica&quot;, 10, FontStyle.Bold))\n            {\n                e.Graphics.DrawString(e.Header.Text, headerFont,\n                    Brushes.Black, e.Bounds, sf);\n            }\n        }\n        return;\n    }\n\n    // Forces each row to repaint itself the first time the mouse moves over \n    // it, compensating for an extra DrawItem event sent by the wrapped \n    // Win32 control. This issue occurs each time the ListView is invalidated.\n    private void listView1_MouseMove(object sender, MouseEventArgs e)\n    {\n        ListViewItem item = listView1.GetItemAt(e.X, e.Y);\n        if (item != null &amp;&amp; item.Tag == null)\n        {\n            listView1.Invalidate(item.Bounds);\n            item.Tag = &quot;tagged&quot;;\n        }\n    }\n\n    // Resets the item tags. \n    void listView1_Invalidated(object sender, InvalidateEventArgs e)\n    {\n        foreach (ListViewItem item in listView1.Items)\n        {\n            if (item == null) return;\n            item.Tag = null;\n        }\n    }\n\n    // Forces the entire control to repaint if a column width is changed.\n    void listView1_ColumnWidthChanged(object sender, \n        ColumnWidthChangedEventArgs e)\n    {\n        listView1.Invalidate();\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#1\">Imports System\nImports System.Drawing\nImports System.Drawing.Drawing2D\nImports System.Globalization\nImports System.Windows.Forms\n\nPublic Class ListViewOwnerDraw\n    Inherits Form\n    Private WithEvents listView1 As New ListView()\n    Private WithEvents contextMenu1 As New ContextMenu()\n    Private WithEvents listMenuItem As New MenuItem(&quot;List&quot;)\n    Private WithEvents detailsMenuItem As New MenuItem(&quot;Details&quot;)\n\n    Public Sub New()\n\n        &#39; Initialize the shortcut menu. \n        contextMenu1.MenuItems.AddRange(New MenuItem() _\n            {Me.listMenuItem, Me.detailsMenuItem})\n\n        &#39; Initialize the ListView control.\n        With Me.listView1\n            .BackColor = Color.Black\n            .ForeColor = Color.White\n            .Dock = DockStyle.Fill\n            .View = View.Details\n            .FullRowSelect = True\n            .OwnerDraw = True\n            .ContextMenu = Me.contextMenu1\n        End With\n\n        &#39; Add columns to the ListView control.\n        With Me.listView1.Columns\n            .Add(&quot;Name&quot;, 100, HorizontalAlignment.Center)\n            .Add(&quot;First&quot;, 100, HorizontalAlignment.Center)\n            .Add(&quot;Second&quot;, 100, HorizontalAlignment.Center)\n            .Add(&quot;Third&quot;, 100, HorizontalAlignment.Center)\n        End With\n\n        &#39; Create items and add them to the ListView control.\n        Dim listViewItem1 As New ListViewItem(New String() _\n            {&quot;One&quot;, &quot;20&quot;, &quot;30&quot;, &quot;-40&quot;}, -1)\n        Dim listViewItem2 As New ListViewItem(New String() _\n            {&quot;Two&quot;, &quot;-250&quot;, &quot;145&quot;, &quot;37&quot;}, -1)\n        Dim listViewItem3 As New ListViewItem(New String() _\n            {&quot;Three&quot;, &quot;200&quot;, &quot;800&quot;, &quot;-1,001&quot;}, -1)\n        Dim listViewItem4 As New ListViewItem(New String() _\n            {&quot;Four&quot;, &quot;not available&quot;, &quot;-2&quot;, &quot;100&quot;}, -1)\n        Me.listView1.Items.AddRange(New ListViewItem() _\n            {listViewItem1, listViewItem2, listViewItem3, listViewItem4})\n\n        &#39; Initialize the form and add the ListView control to it.\n        With Me\n            .ClientSize = New Size(450, 150)\n            .FormBorderStyle = FormBorderStyle.FixedSingle\n            .MaximizeBox = False\n            .Text = &quot;ListView OwnerDraw Example&quot;\n            .Controls.Add(Me.listView1)\n        End With\n\n    End Sub\n\n    &#39; Clean up any resources being used.        \n    Protected Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            contextMenu1.Dispose()\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New ListViewOwnerDraw())\n    End Sub\n\n    &#39; Sets the ListView control to the List view.\n    Private Sub menuItemList_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) _\n        Handles listMenuItem.Click\n\n        Me.listView1.View = View.List\n\n    End Sub\n\n    &#39; Sets the ListView control to the Details view.\n    Private Sub menuItemDetails_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) _\n        Handles detailsMenuItem.Click\n\n        Me.listView1.View = View.Details\n\n        &#39; Reset the tag on each item to re-enable the workaround \n        &#39; in the MouseMove event handler.\n        For Each item As ListViewItem In listView1.Items\n            item.Tag = Nothing\n        Next\n\n    End Sub\n\n    &#39; Selects and focuses an item when it is clicked anywhere along \n    &#39; its width. The click must normally be on the parent item text.\n    Private Sub listView1_MouseUp(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) _\n        Handles listView1.MouseUp\n\n        Dim clickedItem As ListViewItem = Me.listView1.GetItemAt(5, e.Y)\n        If (clickedItem IsNot Nothing) Then\n            clickedItem.Selected = True\n            clickedItem.Focused = True\n        End If\n\n    End Sub\n\n    &#39; Draws the backgrounds for entire ListView items.\n    Private Sub listView1_DrawItem(ByVal sender As Object, _\n        ByVal e As DrawListViewItemEventArgs) _\n        Handles listView1.DrawItem\n\n        If Not (e.State And ListViewItemStates.Selected) = 0 Then\n\n            &#39; Draw the background for a selected item.\n            e.Graphics.FillRectangle(Brushes.Maroon, e.Bounds)\n            e.DrawFocusRectangle()\n\n        Else\n\n            &#39; Draw the background for an unselected item.\n            Dim brush As New LinearGradientBrush(e.Bounds, Color.Orange, _\n                Color.Maroon, LinearGradientMode.Horizontal)\n            Try\n                e.Graphics.FillRectangle(brush, e.Bounds)\n            Finally\n                brush.Dispose()\n            End Try\n\n        End If\n\n        &#39; Draw the item text for views other than the Details view.\n        If Not Me.listView1.View = View.Details Then\n            e.DrawText()\n        End If\n\n    End Sub\n\n    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n\n    &#39; Draws column headers.\n    Private Sub listView1_DrawColumnHeader(ByVal sender As Object, _\n        ByVal e As DrawListViewColumnHeaderEventArgs) _\n        Handles listView1.DrawColumnHeader\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n            End Select\n\n            &#39; Draw the standard header background.\n            e.DrawBackground()\n\n            &#39; Draw the header text.\n            Dim headerFont As New Font(&quot;Helvetica&quot;, 10, FontStyle.Bold)\n            Try\n                e.Graphics.DrawString(e.Header.Text, headerFont, _\n                    Brushes.Black, e.Bounds, sf)\n            Finally\n                headerFont.Dispose()\n            End Try\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n\n    &#39; Forces each row to repaint itself the first time the mouse moves over \n    &#39; it, compensating for an extra DrawItem event sent by the wrapped \n    &#39; Win32 control.\n    Private Sub listView1_MouseMove(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) _\n        Handles listView1.MouseMove\n\n        Dim item As ListViewItem = listView1.GetItemAt(e.X, e.Y)\n        If item IsNot Nothing AndAlso item.Tag Is Nothing Then\n            listView1.Invalidate(item.Bounds)\n            item.Tag = &quot;tagged&quot;\n        End If\n\n    End Sub\n\n    &#39; Resets the item tags. \n    Private Sub listView1_Invalidated(ByVal sender As Object, _\n        ByVal e As InvalidateEventArgs) Handles listView1.Invalidated\n\n        For Each item As ListViewItem In listView1.Items\n            If item Is Nothing Then Return\n            item.Tag = Nothing\n        Next\n\n    End Sub\n\n    &#39; Forces the entire control to repaint if a column width is changed.\n    Private Sub listView1_ColumnWidthChanged(ByVal sender As Object, _\n        ByVal e As ColumnWidthChangedEventArgs) Handles listView1.ColumnWidthChanged\n\n        listView1.Invalidate()\n\n    End Sub\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawItem</a> event enables you to customize the appearance of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using owner drawing.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawItem</a> event is raised by a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property is set to <code>true</code>. The DrawListViewItemEventArgs passed to the event handler contains information about the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw and also provides methods to help you draw the item.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_State_\" data-linktype=\"relative-path\">State</a> or <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Item_\" data-linktype=\"relative-path\">Item</a> properties to retrieve information about the item to draw. Use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_ItemIndex_\" data-linktype=\"relative-path\">ItemIndex</a> property to retrieve the index of the item.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> property to do the actual drawing within the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property. To draw standard <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> elements that do not need customization, use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_DrawBackground_\" data-linktype=\"relative-path\">DrawBackground</a>, <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_DrawText_\" data-linktype=\"relative-path\">DrawText</a>, and <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_DrawFocusRectangle_\" data-linktype=\"relative-path\">DrawFocusRectangle</a> methods.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To avoid issues with graphics flickering when owner drawing, override the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> property to <code>true</code>. This feature is available only on Windows XP and the Windows Server 2003 family when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs__ctor_System_Drawing_Graphics_System_Windows_Forms_ListViewItem_System_Drawing_Rectangle_System_Int32_System_Windows_Forms_ListViewItemStates_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawListViewItemEventArgs(Graphics,ListViewItem,Rectangle,Int32,ListViewItemStates)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs\" data-linktype=\"relative-path\">DrawListViewItemEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DrawListViewItemEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.ListViewItem item, System.Drawing.Rectangle bounds, int itemIndex, System.Windows.Forms.ListViewItemStates state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>graphics</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> surface on which to draw.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>item</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> within which to draw.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>itemIndex</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> within the <span class=\"xref\">stem.Windows.Forms.ListView.Items*</span> collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a> values indicating the current state of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_Bounds\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Bounds</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the size and location of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Rectangle Bounds { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The location specified by this property is relative to the upper left corner of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<p> To retrieve the bounds for specific portions of a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>, use the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_GetBounds_\" data-linktype=\"relative-path\">GetBounds</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_DrawDefault\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawDefault</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a property indicating whether the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control will use the default drawing for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool DrawDefault { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the system draws the item; <code>false</code> if the event handler draws the item. The default value is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Set this property to <code>true</code> when the item does not require custom drawing. This is useful when you need to customize only certain items within the control, such as selected items.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_Graphics\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Graphics</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Graphics Graphics { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> class provides properties and methods useful for drawing on the display device.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_Item\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.ListViewItem Item { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this property to access the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw. This is useful when the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_State_\" data-linktype=\"relative-path\">State</a> property does not provide adequate information to meet your needs. The <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_State_\" data-linktype=\"relative-path\">State</a> property provides only basic state information that you can use, for example, to determine whether an item is selected, checked, or focused. The Item property, on the other hand, allows you to access all members of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>. You must access the item directly, for example, to draw the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Text_\" data-linktype=\"relative-path\">Text</a> value yourself rather than using the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_DrawText_\" data-linktype=\"relative-path\">DrawText</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_ItemIndex\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ItemIndex</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the index of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> within the <span class=\"xref\">stem.Windows.Forms.ListView.Items*</span> collection of the containing <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int ItemIndex { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> within the <span class=\"xref\">stem.Windows.Forms.ListView.Items*</span> collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_State\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">State</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the current state of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.ListViewItemStates State { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a> values indicating the current state of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this property to check whether the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to draw is in a particular state. This property provides only basic state information about the item. You can use this property, for example, to determine whether an item is selected, checked, or focused. If you need to know more, retrieve the item through the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Item_\" data-linktype=\"relative-path\">Item</a> property and check its properties directly.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_DrawBackground\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawBackground()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws the background of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> using its current background color.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DrawBackground ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to draw a standard background that uses the current value of the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property. The background is drawn to fill the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_DrawFocusRectangle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawFocusRectangle()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a focus rectangle for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> if it has focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DrawFocusRectangle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to draw a standard focus rectangle around the item. The focus rectangle is normally drawn within the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property. If the control is in the details view and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a> property value is <code>false</code>, however, the focus rectangle is drawn around the default text area for the first column of the item.  </p>\n<p> The focus rectangle is drawn only when the item has focus, so you do not need to check the focus state of the item before you call this method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_DrawText\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawText()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws the text of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> using its current foreground color.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DrawText ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to draw the item text using the current values of the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> and <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Font_\" data-linktype=\"relative-path\">Font</a> properties. The text is drawn within the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property. You can also draw the text manually using the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> retrieved through the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> property.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_DrawText_\" data-linktype=\"relative-path\">DrawText</a> method is most useful when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to a value other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>. In the details view, this method draws the text for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>, but does not draw the text for subitems. Therefore, in the details view, it is generally more convenient to draw all of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> text in a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DrawListViewItemEventArgs_DrawText_System_Windows_Forms_TextFormatFlags_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawText(TextFormatFlags)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws the text of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> using its current foreground color and formatting it with the specified <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DrawText (System.Windows.Forms.TextFormatFlags flags);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>flags</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to draw the item text using the current values of the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> and <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Font_\" data-linktype=\"relative-path\">Font</a> properties. The <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values specified in the <code>flags</code> parameter let you provide formatting properties for the node label, such as text alignment. The text is drawn within the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property. You can also draw the text manually using the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> retrieved through the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> property.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_DrawText_\" data-linktype=\"relative-path\">DrawText</a> method is most useful when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to a value other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>. In the details view, this method draws the text for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>, but does not draw the text for subitems. Therefore, in the details view, it is generally more convenient to draw all of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> text in a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DrawListViewItemEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.Bounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.DrawText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.Graphics\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.Item\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewItemEventArgs.State\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"82ba17af-325e-040f-e5c3-6076d9b51183\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DrawListViewItemEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DrawListViewItemEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DrawListViewItemEventArgs","System.Windows.Forms.DrawListViewItemEventArgs..ctor","System.Windows.Forms.DrawListViewItemEventArgs.Bounds","System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground","System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault","System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle","System.Windows.Forms.DrawListViewItemEventArgs.DrawText","System.Windows.Forms.DrawListViewItemEventArgs.Graphics","System.Windows.Forms.DrawListViewItemEventArgs.Item","System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex","System.Windows.Forms.DrawListViewItemEventArgs.State"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DrawListViewItemEventArgs","System::Windows::Forms::DrawListViewItemEventArgs","System.Windows.Forms.DrawListViewItemEventArgs.#ctor","System::Windows::Forms::DrawListViewItemEventArgs::#ctor","System.Windows.Forms.DrawListViewItemEventArgs.Bounds","System::Windows::Forms::DrawListViewItemEventArgs::Bounds","System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground","System::Windows::Forms::DrawListViewItemEventArgs::DrawBackground","System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault","System::Windows::Forms::DrawListViewItemEventArgs::DrawDefault","System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle","System::Windows::Forms::DrawListViewItemEventArgs::DrawFocusRectangle","System.Windows.Forms.DrawListViewItemEventArgs.DrawText","System::Windows::Forms::DrawListViewItemEventArgs::DrawText","System.Windows.Forms.DrawListViewItemEventArgs.Graphics","System::Windows::Forms::DrawListViewItemEventArgs::Graphics","System.Windows.Forms.DrawListViewItemEventArgs.Item","System::Windows::Forms::DrawListViewItemEventArgs::Item","System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex","System::Windows::Forms::DrawListViewItemEventArgs::ItemIndex","System.Windows.Forms.DrawListViewItemEventArgs.State","System::Windows::Forms::DrawListViewItemEventArgs::State"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"82ba17af-325e-040f-e5c3-6076d9b51183","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DrawListViewItemEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DrawListViewItemEventArgs class | Microsoft Docs","_op_ogTitle":"DrawListViewItemEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DrawListViewItemEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.drawlistviewitemeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.drawlistviewitemeventargs","fileRelativePath":"api/System.Windows.Forms.DrawListViewItemEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}