{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridPageChangedEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DataGridPageChangedEventHandler(object source, DataGridPageChangedEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DataGridPageChangedEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to specify and code a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event. It displays pages on the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control in 10-item increments.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridAllowPaging#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    Function CreateDataSource() As ICollection\n        &#39; Create sample data for the DataGrid control.\n        Dim dt As DataTable = New DataTable()\n        Dim dr As DataRow\n \n        &#39; Define the columns of the table.\n        dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n        dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n        dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n        &#39; Populate the table with sample values.\n        Dim i As Integer\n        For i = 0 To 100\n            dr = dt.NewRow()\n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n            dt.Rows.Add(dr)\n        Next i\n \n        Dim dv As DataView = New DataView(dt)\n        Return dv\n    End Function\n \n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Load sample data only once, when the page is first loaded.\n        If Not IsPostBack Then\n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n        End If\n    End Sub\n\n    Sub Check_Change(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Allow or prevent paging depending on the user&#39;s selection.\n        ItemsGrid.AllowPaging = AllowPagingCheckBox.Checked()\n\n        &#39; Rebind the data to refresh the DataGrid control. \n        ItemsGrid.DataSource = CreateDataSource()\n        ItemsGrid.DataBind()\n    End Sub\n\n    Sub Grid_Change(ByVal sender As Object, ByVal e As DataGridPageChangedEventArgs)\n        &#39; For the DataGrid control to navigate to the correct page when\n        &#39; paging is allowed, the CurrentPageIndex property must be updated\n        &#39; programmatically. This process is usually accomplished in the\n        &#39; event-handling method for the PageIndexChanged event.\n\n        &#39; Set CurrentPageIndex to the page the user clicked.\n        ItemsGrid.CurrentPageIndex = e.NewPageIndex\n\n        &#39; Rebind the data to refresh the DataGrid control. \n        ItemsGrid.DataSource = CreateDataSource()\n        ItemsGrid.DataBind()\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head2&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n\n    &lt;h3&gt;DataGrid AllowPaging Example&lt;/h3&gt;\n\n    &lt;p&gt;Select whether to allow paging in the DataGrid control.&lt;br /&gt;\n       &lt;asp:CheckBox id=&quot;AllowPagingCheckBox&quot;\n            Text=&quot;Allow paging&quot;\n            AutoPostBack=&quot;True&quot;\n            Checked=&quot;True&quot;\n            OnCheckedChanged=&quot;Check_Change&quot;\n            runat=&quot;server&quot; /&gt;\n    &lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;asp:Label ID=&quot;Label1&quot; runat=&quot;server&quot; \n        AssociatedControlID=&quot;ItemsGrid&quot; \n        Font-Bold=&quot;true&quot;&gt;Product List&lt;/asp:Label&gt;\n    &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n        BorderColor=&quot;Gray&quot;\n        BorderWidth=&quot;1&quot;\n        CellPadding=&quot;3&quot;\n        UseAccessibleHeader=&quot;true&quot;\n        AutoGenerateColumns=&quot;False&quot;\n        PageSize=&quot;10&quot;\n        AllowPaging=&quot;True&quot;\n        OnPageIndexChanged=&quot;Grid_Change&quot;&gt;\n\n        &lt;HeaderStyle BackColor=&quot;LightBlue&quot; /&gt;\n        &lt;Columns&gt;\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 ItemStyle-HorizontalAlign=&quot;center&quot;\n                 HeaderText=&quot;Item&quot; /&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                HeaderText=&quot;Description&quot; \n                ItemStyle-HorizontalAlign=&quot;left&quot;\n                SortExpression=&quot;StringValue&quot; /&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot; /&gt;\n\n        &lt;/Columns&gt;\n        &lt;ItemStyle HorizontalAlign=&quot;Right&quot; /&gt;\n    &lt;/asp:DataGrid&gt;\n\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridAllowPaging#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    private ICollection CreateDataSource()\n    {\n        // Create sample data for the DataGrid control.\n        DataTable dt = new DataTable();\n        DataRow dr;\n\n        // Define the columns of the table.\n        dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n        dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n        dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(Double)));\n\n        // Populate the table with sample values.\n        for (int i = 0; i &lt;= 100; i++) \n        {\n            dr = dt.NewRow();\n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n\n            dt.Rows.Add(dr);\n        }\n        DataView dv = new DataView(dt);\n        return dv;\n    }\n\n    private void Page_Load(Object sender, EventArgs e)\n    { \n        // Load sample data only once, when the page is first loaded.\n        if (!IsPostBack)\n        { \n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n        }\n    }\n\n    private void Check_Change(Object sender, EventArgs e)\n    {\n        // Allow or prevent paging depending \n        // on the user&#39;s selection.\n        ItemsGrid.AllowPaging = AllowPagingCheckBox.Checked;\n\n        // Rebind the data to refresh the DataGrid control. \n        ItemsGrid.DataSource = CreateDataSource();\n        ItemsGrid.DataBind();\n    }\n\n    private void Grid_Change(Object sender, DataGridPageChangedEventArgs e) \n    {\n        // For the DataGrid control to navigate to the correct page when\n        // paging is allowed, the CurrentPageIndex property must be updated\n        // programmatically. This process is usually accomplished in the\n        // event-handling method for the PageIndexChanged event.\n\n        // Set CurrentPageIndex to the page the user clicked.\n        ItemsGrid.CurrentPageIndex = e.NewPageIndex;\n\n        // Rebind the data to refresh the DataGrid control. \n        ItemsGrid.DataSource = CreateDataSource();\n        ItemsGrid.DataBind();\n    }\n&lt;/script&gt;\n \n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n \n    &lt;h3&gt;DataGrid AllowPaging Example&lt;/h3&gt;\n\n    &lt;p&gt;Select whether to allow paging in the DataGrid control.&lt;br /&gt;\n       &lt;asp:CheckBox id=&quot;AllowPagingCheckBox&quot;\n            Text=&quot;Allow paging&quot;\n            AutoPostBack=&quot;True&quot;\n            Checked=&quot;True&quot;\n            OnCheckedChanged=&quot;Check_Change&quot;\n            runat=&quot;server&quot; /&gt;\n    &lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;asp:Label runat=&quot;server&quot; \n        AssociatedControlID=&quot;ItemsGrid&quot; \n        Font-Bold=&quot;true&quot;&gt;Product List&lt;/asp:Label&gt;\n    &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n        BorderColor=&quot;Gray&quot;\n        BorderWidth=&quot;1&quot;\n        CellPadding=&quot;3&quot;\n        AutoGenerateColumns=&quot;False&quot;\n        UseAccessibleHeader=&quot;true&quot;\n        PageSize=&quot;10&quot;\n        AllowPaging=&quot;True&quot;\n        OnPageIndexChanged=&quot;Grid_Change&quot;&gt;\n\n        &lt;HeaderStyle BackColor=&quot;LightBlue&quot; /&gt;\n        &lt;Columns&gt;\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 ItemStyle-HorizontalAlign=&quot;center&quot;\n                 HeaderText=&quot;Item&quot; /&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                HeaderText=&quot;Description&quot; \n                ItemStyle-HorizontalAlign=&quot;left&quot;\n                SortExpression=&quot;StringValue&quot; /&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot; /&gt;\n\n        &lt;/Columns&gt;\n        &lt;ItemStyle HorizontalAlign=&quot;Right&quot; /&gt;\n    &lt;/asp:DataGrid&gt;\n\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"PageIndexChanged#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource()\n      {\n\n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(Double)));\n \n         // Populate the table with sample values.\n         for (int i=0; i&lt;=100; i++) \n         {\n\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         \n         }\n \n         DataView dv = new DataView(dt);\n\n         return dv;\n      \n      }\n \n      void Page_Load(Object sender, EventArgs e)\n      { \n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack)\n         { \n         \n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         \n         }\n\n         // Manually register the event-handling method for the PageIndexChanged  \n         // event of the DataGrid control.\n         ItemsGrid.PageIndexChanged += new DataGridPageChangedEventHandler(this.Grid_Change);\n\n      }\n\n      void Check_Change(Object sender, EventArgs e)\n      {\n   \n         // Allow or prevent paging depending on the user&#39;s selection.\n         if (AllowPagingCheckBox.Checked)\n         {\n\n            ItemsGrid.AllowPaging = true;\n\n         }\n         else\n         {\n\n            ItemsGrid.AllowPaging = false;\n\n         }\n\n         // Re-bind the data to refresh the DataGrid control. \n         ItemsGrid.DataSource = CreateDataSource();\n         ItemsGrid.DataBind();\n\n      }\n\n      void Grid_Change(Object sender, DataGridPageChangedEventArgs e) \n      {\n \n         // For the DataGrid control to navigate to the correct page when paging is\n         // allowed, the CurrentPageIndex property must be programmatically updated.\n         // This process is usually accomplished in the event-handling method for the\n         // PageIndexChanged event.\n\n         // Set CurrentPageIndex to the page the user clicked.\n         ItemsGrid.CurrentPageIndex = e.NewPageIndex;\n\n         // Re-bind the data to refresh the DataGrid control. \n         ItemsGrid.DataSource = CreateDataSource();\n         ItemsGrid.DataBind();\n      \n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid PageIndexChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid PageIndexChanged Example&lt;/h3&gt;\n\n      Select whether to allow paging in the DataGrid control.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           PageSize=&quot;10&quot;\n           AllowPaging=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;hr /&gt;\n\n      &lt;table cellpadding=&quot;5&quot;&gt;\n\n         &lt;tr&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:CheckBox id=&quot;AllowPagingCheckBox&quot;\n                    Text=&quot;Allow paging&quot;\n                    AutoPostBack=&quot;True&quot;\n                    Checked=&quot;True&quot;\n                    OnCheckedChanged=&quot;Check_Change&quot;\n                    runat=&quot;server&quot;/&gt;\n\n            &lt;/td&gt;\n            \n         &lt;/tr&gt;\n\n      &lt;/table&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"PageIndexChanged#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n\n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i=0 To 100\n\n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n         \n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n\n         Return dv\n      \n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs)\n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n         \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n         \n         End If\n\n         &#39; Manually register the event-handling method for the PageIndexChanged  \n         &#39; event of the DataGrid control.\n         AddHandler ItemsGrid.PageIndexChanged, AddressOf Grid_Change\n\n      End Sub\n\n      Sub Check_Change(sender As Object, e As EventArgs)\n   \n         &#39; Allow or prevent paging depending on the user&#39;s selection.\n         If AllowPagingCheckBox.Checked Then\n\n            ItemsGrid.AllowPaging = True\n\n         Else\n\n            ItemsGrid.AllowPaging = False\n\n         End If\n\n         &#39; Re-bind the data to refresh the DataGrid control. \n         ItemsGrid.DataSource = CreateDataSource()\n         ItemsGrid.DataBind()\n\n      End Sub\n\n      Sub Grid_Change(sender As Object, e As DataGridPageChangedEventArgs) \n \n         &#39; For the DataGrid control to navigate to the correct page when paging is\n         &#39; allowed, the CurrentPageIndex property must be programmatically updated.\n         &#39; This process is usually accomplished in the event-handling method for the\n         &#39; PageIndexChanged event.\n\n         &#39; Set CurrentPageIndex to the page the user clicked.\n         ItemsGrid.CurrentPageIndex = e.NewPageIndex\n\n         &#39; Re-bind the data to refresh the DataGrid control. \n         ItemsGrid.DataSource = CreateDataSource()\n         ItemsGrid.DataBind()\n      \n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid PageIndexChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid PageIndexChanged Example&lt;/h3&gt;\n\n      Select whether to allow paging in the DataGrid control.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           PageSize=&quot;10&quot;\n           AllowPaging=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;hr /&gt;\n\n      &lt;table cellpadding=&quot;5&quot;&gt;\n\n         &lt;tr&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:CheckBox id=&quot;AllowPagingCheckBox&quot;\n                    Text=&quot;Allow paging&quot;\n                    AutoPostBack=&quot;True&quot;\n                    Checked=&quot;True&quot;\n                    OnCheckedChanged=&quot;Check_Change&quot;\n                    runat=&quot;server&quot;/&gt;\n\n            &lt;/td&gt;\n            \n         &lt;/tr&gt;\n\n      &lt;/table&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event is raised when a button in the page selection element of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is clicked.  </p>\n<p> When you create a DataGridPageChangedEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataGridPageChangedEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridPageChangedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridPageChangedEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridPageChangedEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridPageChangedEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridPageChangedEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"583f4414-1530-4035-0111-48f7f9f33210\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of the  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DataGridPageChangedEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataGridPageChangedEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.DataGridPageChangedEventHandler","System.Web.UI.WebControls.DataGridPageChangedEventHandler..ctor","System.Web.UI.WebControls.DataGridPageChangedEventHandler.Invoke","System.Web.UI.WebControls.DataGridPageChangedEventHandler.BeginInvoke","System.Web.UI.WebControls.DataGridPageChangedEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DataGridPageChangedEventHandler","System::Web::UI::WebControls::DataGridPageChangedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"583f4414-1530-4035-0111-48f7f9f33210","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/DataGridPageChangedEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridPageChangedEventHandler delegate | Microsoft Docs","_op_ogTitle":"DataGridPageChangedEventHandler delegate","description":"Represents the method that handles the  event of the  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DataGridPageChangedEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datagridpagechangedeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datagridpagechangedeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.DataGridPageChangedEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}