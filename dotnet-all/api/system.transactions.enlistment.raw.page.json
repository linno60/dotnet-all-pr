{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Enlistment</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class Enlistment</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">Enlistment</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.preparingenlistment\" data-linktype=\"relative-path\">PreparingEnlistment</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.singlephaseenlistment\" data-linktype=\"relative-path\">SinglePhaseEnlistment</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows an implementation of the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface, and when the <a class=\"xref\" href=\"system.transactions.enlistment#System_Transactions_Enlistment_Done_\" data-linktype=\"relative-path\">Done</a> method should be called.  </p>\n<pre><code class=\"lang-cs\" name=\"Tx_Enlist#2\">class myEnlistmentClass : IEnlistmentNotification\n{\n\tpublic void Prepare(PreparingEnlistment preparingEnlistment)\n\t{\n\t\tConsole.WriteLine(&quot;Prepare notification received&quot;);\n\n\t\t//Perform transactional work\n\n\t\t//If work finished correctly, reply prepared\n\t\tpreparingEnlistment.Prepared();\n\n\t\t// otherwise, do a ForceRollback\n\t\tpreparingEnlistment.ForceRollback();\n\t}\n\n\tpublic void Commit(Enlistment enlistment)\n\t{\n\t\tConsole.WriteLine(&quot;Commit notification received&quot;);\n\n\t\t//Do any work necessary when commit notification is received\n\n\t\t//Declare done on the enlistment\n\t\tenlistment.Done();\n\t}\n\n\tpublic void Rollback(Enlistment enlistment)\n\t{\n\t\tConsole.WriteLine(&quot;Rollback notification received&quot;);\n\n\t\t//Do any work necessary when rollback notification is received\n\n\t\t//Declare done on the enlistment\n\t\tenlistment.Done();\n\t}\n\n\tpublic void InDoubt(Enlistment enlistment)\n\t{\n\t\tConsole.WriteLine(&quot;In doubt notification received&quot;);\n\n\t\t//Do any work necessary when indout notification is received\n\t\t\n\t\t//Declare done on the enlistment\n\t\tenlistment.Done();\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Tx_Enlist#2\">Public Class EnlistmentClass\n\tImplements IEnlistmentNotification\n\n\tPublic Sub Prepare(ByVal myPreparingEnlistment As PreparingEnlistment) Implements System.Transactions.IEnlistmentNotification.Prepare\n\t\tConsole.WriteLine(&quot;Prepare notification received&quot;)\n\n\t\t&#39;Perform transactional work\n\n\t\t&#39;If work finished correctly, reply with prepared\n\t\tmyPreparingEnlistment.Prepared()\n\tEnd Sub\n\n\tPublic Sub Commit(ByVal myEnlistment As Enlistment) Implements System.Transactions.IEnlistmentNotification.Commit\n\t\tConsole.WriteLine(&quot;Commit notification received&quot;)\n\n\t\t&#39;Do any work necessary when commit notification is received\n\n\t\t&#39;Declare done on the enlistment\n\t\tmyEnlistment.Done()\n\tEnd Sub\n\n\tPublic Sub Rollback(ByVal myEnlistment As Enlistment) Implements System.Transactions.IEnlistmentNotification.Rollback\n\t\tConsole.WriteLine(&quot;Rollback notification received&quot;)\n\n\t\t&#39;Do any work necessary when rollback notification is received\n\n\t\t&#39;Declare done on the enlistment\n\t\tmyEnlistment.Done()\n\tEnd Sub\n\n\tPublic Sub InDoubt(ByVal myEnlistment As Enlistment) Implements System.Transactions.IEnlistmentNotification.InDoubt\n\t\tConsole.WriteLine(&quot;In doubt notification received&quot;)\n\n\t\t&#39;Do any work necessary when indout notification is received\n\n\t\t&#39;Declare done on the enlistment\n\t\tmyEnlistment.Done()\n\tEnd Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When the <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_EnlistVolatile_\" data-linktype=\"relative-path\">EnlistVolatile</a> and <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_EnlistDurable_\" data-linktype=\"relative-path\">EnlistDurable</a> methods of the <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> object are invoked to enlist a participant in a transaction, they return this object describing the enlistment.  </p>\n<p> During the final phase of the transaction commit, the transaction manager passes this object to a resource manager implementing the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface that has enlisted in a transaction. Specifically, the transaction manager calls either the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification#System_Transactions_IEnlistmentNotification_Commit_\" data-linktype=\"relative-path\">Commit</a> or the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification#System_Transactions_IEnlistmentNotification_Rollback_\" data-linktype=\"relative-path\">Rollback</a> method of the participant, depending on whether the latter has decided to commit or roll back the transaction. The participant should call the <a class=\"xref\" href=\"system.transactions.enlistment#System_Transactions_Enlistment_Done_\" data-linktype=\"relative-path\">Done</a> method of this object to let the transaction manager know that it has completed its work.  </p>\n<p> An enlistment can call the <a class=\"xref\" href=\"system.transactions.enlistment#System_Transactions_Enlistment_Done_\" data-linktype=\"relative-path\">Done</a> method at anytime before it has called <a class=\"xref\" href=\"system.transactions.preparingenlistment#System_Transactions_PreparingEnlistment_Prepared_\" data-linktype=\"relative-path\">Prepared</a> in the prepare phase.  By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome. Note that, after the <a class=\"xref\" href=\"system.transactions.enlistment#System_Transactions_Enlistment_Done_\" data-linktype=\"relative-path\">Done</a> method is called, the enlisted participant receives no further notifications from the transaction manager.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Transactions_Enlistment_Done_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Transactions_Enlistment_Done\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Done()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates that the transaction participant has completed its work.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Done ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>During the final phase of the transaction commit, the transaction manager calls either the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification#System_Transactions_IEnlistmentNotification_Commit_\" data-linktype=\"relative-path\">Commit</a>, <a class=\"xref\" href=\"system.transactions.ienlistmentnotification#System_Transactions_IEnlistmentNotification_Rollback_\" data-linktype=\"relative-path\">Rollback</a> or <a class=\"xref\" href=\"system.transactions.ienlistmentnotification#System_Transactions_IEnlistmentNotification_InDoubt_\" data-linktype=\"relative-path\">InDoubt</a> method of the participant, depending on whether the transaction is to be committed or rolled back. The resource manager should perform any work necessary to finish the transaction and then inform the transaction manager that it has finished by calling the Done method on the <code>enlistment</code> parameter.  </p>\n<p> If the resource manager has enlisted durably, but does not respond by calling Done method, the transaction manager is unsure that the resource manager has received the respective notification call. As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.  If Done is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource. This results in resources not being able to be reclaimed. In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process. In the case of a transaction managed by <a class=\"xref\" href=\"system.transactions\" data-linktype=\"relative-path\">System.Transactions</a>, this results in a gradual and continual increase in the memory consumption of the resource manager&#39;s process. Therefore, it is crucial that you call the Done method once your resource manager is done with your prepare work.  </p>\n<p> An enlistment can call the Done method at anytime before it has called <a class=\"xref\" href=\"system.transactions.preparingenlistment#System_Transactions_PreparingEnlistment_Prepared_\" data-linktype=\"relative-path\">Prepared</a> in the prepare phase. By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome. Note that, after this method is called, the enlisted participant receives no further notifications from the transaction manager.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \t<h2 class=\"accented\">Thread Safety</h2>\r\n  \tThis type is thread safe.\r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Transactions.Enlistment.yml\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Enlistment\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Enlistment.Done\">\r\n<meta name=\"APILocation\" content=\"System.Transactions.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"aa171668-2223-3223-de5d-85a012a5d716\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.transactions/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Transactions.Enlistment\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Transactions.Enlistment.yml","open_to_public_contributors":false,"api_name":["System.Transactions.Enlistment","System.Transactions.Enlistment.Done"],"api_location":["System.Transactions.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Transactions.Enlistment","System::Transactions::Enlistment","System.Transactions.Enlistment.Done","System::Transactions::Enlistment::Done"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"aa171668-2223-3223-de5d-85a012a5d716","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Transactions/Enlistment.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Enlistment class | Microsoft Docs","_op_ogTitle":"Enlistment class","description":"Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.\n","toc_asset_id":"api/_splitted/System.Transactions/toc.json","toc_rel":"_splitted/System.Transactions/toc.json","source_url":"","ms.assetid":"System.Transactions.Enlistment","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.transactions.enlistment","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.transactions.enlistment","fileRelativePath":"api/System.Transactions.Enlistment.html"},"themesRelativePathToOutputRoot":"_themes/"}