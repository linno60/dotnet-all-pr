{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SocketAsyncEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents an asynchronous socket operation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class SocketAsyncEventArgs : EventArgs, IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><span class=\"lang-csharp\">SocketAsyncEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example implements the connection logic for the socket server that uses the SocketAsyncEventArgs class. After accepting a connection, all data read from the client is sent back to the client. The read and echo back to the client pattern is continued until the client disconnects. The BufferManager class that is used by this example is displayed in the code example for the [SetBuffer(Byte&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt; method. The SocketAsyncEventArgsPool class that is used in this example is displayed in the code example for the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs__ctor_\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLAsyncSocketServer#3\">// Implements the connection logic for the socket server.  \n// After accepting a connection, all data read from the client \n// is sent back to the client. The read and echo back to the client pattern \n// is continued until the client disconnects.\nclass Server\n{\n    private int m_numConnections;   // the maximum number of connections the sample is designed to handle simultaneously \n    private int m_receiveBufferSize;// buffer size to use for each socket I/O operation \n    BufferManager m_bufferManager;  // represents a large reusable set of buffers for all socket operations\n    const int opsToPreAlloc = 2;    // read, write (don&#39;t alloc buffer space for accepts)\n    Socket listenSocket;            // the socket used to listen for incoming connection requests\n    // pool of reusable SocketAsyncEventArgs objects for write, read and accept socket operations\n    SocketAsyncEventArgsPool m_readWritePool;\n    int m_totalBytesRead;           // counter of the total # bytes received by the server\n    int m_numConnectedSockets;      // the total number of clients connected to the server \n    Semaphore m_maxNumberAcceptedClients;\n\n    // Create an uninitialized server instance.  \n    // To start the server listening for connection requests\n    // call the Init method followed by Start method \n    //\n    // &lt;param name=&quot;numConnections&quot;&gt;the maximum number of connections the sample is designed to handle simultaneously&lt;/param&gt;\n    // &lt;param name=&quot;receiveBufferSize&quot;&gt;buffer size to use for each socket I/O operation&lt;/param&gt;\n    public Server(int numConnections, int receiveBufferSize)\n    {\n        m_totalBytesRead = 0;\n        m_numConnectedSockets = 0;\n        m_numConnections = numConnections;\n        m_receiveBufferSize = receiveBufferSize;\n        // allocate buffers such that the maximum number of sockets can have one outstanding read and \n        //write posted to the socket simultaneously  \n        m_bufferManager = new BufferManager(receiveBufferSize * numConnections * opsToPreAlloc,\n            receiveBufferSize);\n  \n        m_readWritePool = new SocketAsyncEventArgsPool(numConnections);\n        m_maxNumberAcceptedClients = new Semaphore(numConnections, numConnections); \n    }\n\n    // Initializes the server by preallocating reusable buffers and \n    // context objects.  These objects do not need to be preallocated \n    // or reused, but it is done this way to illustrate how the API can \n    // easily be used to create reusable objects to increase server performance.\n    //\n    public void Init()\n    {\n        // Allocates one large byte buffer which all I/O operations use a piece of.  This gaurds \n        // against memory fragmentation\n        m_bufferManager.InitBuffer();\n\n        // preallocate pool of SocketAsyncEventArgs objects\n        SocketAsyncEventArgs readWriteEventArg;\n\n        for (int i = 0; i &lt; m_numConnections; i++)\n        {\n            //Pre-allocate a set of reusable SocketAsyncEventArgs\n            readWriteEventArg = new SocketAsyncEventArgs();\n            readWriteEventArg.Completed += new EventHandler&lt;SocketAsyncEventArgs&gt;(IO_Completed);\n            readWriteEventArg.UserToken = new AsyncUserToken();\n\n            // assign a byte buffer from the buffer pool to the SocketAsyncEventArg object\n            m_bufferManager.SetBuffer(readWriteEventArg);\n\n            // add SocketAsyncEventArg to the pool\n            m_readWritePool.Push(readWriteEventArg);\n        }\n\n    }\n\n    // Starts the server such that it is listening for \n    // incoming connection requests.    \n    //\n    // &lt;param name=&quot;localEndPoint&quot;&gt;The endpoint which the server will listening \n    // for connection requests on&lt;/param&gt;\n    public void Start(IPEndPoint localEndPoint)\n    {\n        // create the socket which listens for incoming connections\n        listenSocket = new Socket(localEndPoint.AddressFamily, SocketType.Stream, ProtocolType.Tcp);\n        listenSocket.Bind(localEndPoint);\n        // start the server with a listen backlog of 100 connections\n        listenSocket.Listen(100);\n        \n        // post accepts on the listening socket\n        StartAccept(null);            \n\n        //Console.WriteLine(&quot;{0} connected sockets with one outstanding receive posted to each....press any key&quot;, m_outstandingReadCount);\n        Console.WriteLine(&quot;Press any key to terminate the server process....&quot;);\n        Console.ReadKey();\n    }\n\n\n    // Begins an operation to accept a connection request from the client \n    //\n    // &lt;param name=&quot;acceptEventArg&quot;&gt;The context object to use when issuing \n    // the accept operation on the server&#39;s listening socket&lt;/param&gt;\n    public void StartAccept(SocketAsyncEventArgs acceptEventArg)\n    {\n        if (acceptEventArg == null)\n        {\n            acceptEventArg = new SocketAsyncEventArgs();\n            acceptEventArg.Completed += new EventHandler&lt;SocketAsyncEventArgs&gt;(AcceptEventArg_Completed);\n        }\n        else\n        {\n            // socket must be cleared since the context object is being reused\n            acceptEventArg.AcceptSocket = null;\n        }\n\n        m_maxNumberAcceptedClients.WaitOne();\n        bool willRaiseEvent = listenSocket.AcceptAsync(acceptEventArg);\n        if (!willRaiseEvent)\n        {\n            ProcessAccept(acceptEventArg);\n        }\n    }\n\n    // This method is the callback method associated with Socket.AcceptAsync \n    // operations and is invoked when an accept operation is complete\n    //\n    void AcceptEventArg_Completed(object sender, SocketAsyncEventArgs e)\n    {\n        ProcessAccept(e);\n    }\n\n    private void ProcessAccept(SocketAsyncEventArgs e)\n    {\n        Interlocked.Increment(ref m_numConnectedSockets);\n        Console.WriteLine(&quot;Client connection accepted. There are {0} clients connected to the server&quot;,\n            m_numConnectedSockets);\n\n        // Get the socket for the accepted client connection and put it into the \n        //ReadEventArg object user token\n        SocketAsyncEventArgs readEventArgs = m_readWritePool.Pop();\n        ((AsyncUserToken)readEventArgs.UserToken).Socket = e.AcceptSocket;\n\n        // As soon as the client is connected, post a receive to the connection\n        bool willRaiseEvent = e.AcceptSocket.ReceiveAsync(readEventArgs);\n        if(!willRaiseEvent){\n            ProcessReceive(readEventArgs);\n        }\n\n        // Accept the next connection request\n        StartAccept(e);\n    }\n\n    // This method is called whenever a receive or send operation is completed on a socket \n    //\n    // &lt;param name=&quot;e&quot;&gt;SocketAsyncEventArg associated with the completed receive operation&lt;/param&gt;\n    void IO_Completed(object sender, SocketAsyncEventArgs e)\n    {\n        // determine which type of operation just completed and call the associated handler\n        switch (e.LastOperation)\n        {\n            case SocketAsyncOperation.Receive:\n                ProcessReceive(e);\n                break;\n            case SocketAsyncOperation.Send:\n                ProcessSend(e);\n                break;\n            default:\n                throw new ArgumentException(&quot;The last operation completed on the socket was not a receive or send&quot;);\n        }       \n\n    }\n    \n    // This method is invoked when an asynchronous receive operation completes. \n    // If the remote host closed the connection, then the socket is closed.  \n    // If data was received then the data is echoed back to the client.\n    //\n    private void ProcessReceive(SocketAsyncEventArgs e)\n    {\n        // check if the remote host closed the connection\n        AsyncUserToken token = (AsyncUserToken)e.UserToken;\n        if (e.BytesTransferred &gt; 0 &amp;&amp; e.SocketError == SocketError.Success)\n        {\n            //increment the count of the total bytes receive by the server\n            Interlocked.Add(ref m_totalBytesRead, e.BytesTransferred);\n            Console.WriteLine(&quot;The server has read a total of {0} bytes&quot;, m_totalBytesRead);\n            \n            //echo the data received back to the client\n            e.SetBuffer(e.Offset, e.BytesTransferred);\n            bool willRaiseEvent = token.Socket.SendAsync(e);\n            if (!willRaiseEvent)\n            {\n                ProcessSend(e);\n            }\n          \n        }\n        else\n        {\n            CloseClientSocket(e);\n        }\n    }\n\n    // This method is invoked when an asynchronous send operation completes.  \n    // The method issues another receive on the socket to read any additional \n    // data sent from the client\n    //\n    // &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;\n    private void ProcessSend(SocketAsyncEventArgs e)\n    {\n        if (e.SocketError == SocketError.Success)\n        {\n            // done echoing data back to the client\n            AsyncUserToken token = (AsyncUserToken)e.UserToken;\n            // read the next block of data send from the client\n            bool willRaiseEvent = token.Socket.ReceiveAsync(e);\n            if (!willRaiseEvent)\n            {\n                ProcessReceive(e);\n            }\n        }\n        else\n        {\n            CloseClientSocket(e);\n        }\n    }\n\n    private void CloseClientSocket(SocketAsyncEventArgs e)\n    {\n        AsyncUserToken token = e.UserToken as AsyncUserToken;\n\n        // close the socket associated with the client\n        try\n        {\n            token.Socket.Shutdown(SocketShutdown.Send);\n        }\n        // throws if client process has already closed\n        catch (Exception) { }\n        token.Socket.Close();\n\n        // decrement the counter keeping track of the total number of clients connected to the server\n        Interlocked.Decrement(ref m_numConnectedSockets);\n        m_maxNumberAcceptedClients.Release();\n        Console.WriteLine(&quot;A client has been disconnected from the server. There are {0} clients connected to the server&quot;, m_numConnectedSockets);\n\n        // Free the SocketAsyncEventArg so they can be reused by another client\n        m_readWritePool.Push(e);\n    }\n\n}    \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The SocketAsyncEventArgs class is part of a set of enhancements to the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">System.Net.Sockets.Socket</a> class that provide an alternative asynchronous pattern that can be used by specialized high-performance socket applications. This class was specifically designed for network server applications that require high performance. An application can use the enhanced asynchronous pattern exclusively or only in targeted hot areas (for example, when receiving large amounts of data).  </p>\n<p> The main feature of these enhancements is the avoidance of the repeated allocation and synchronization of objects during high-volume asynchronous socket I/O. The Begin/End design pattern currently implemented by the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">System.Net.Sockets.Socket</a> class requires a <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">System.IAsyncResult</a> object be allocated for each asynchronous socket operation.  </p>\n<p> In the new <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">System.Net.Sockets.Socket</a> class enhancements, asynchronous socket operations are described by reusable SocketAsyncEventArgs objects allocated and maintained by the application. High-performance socket applications know best the amount of overlapped socket operations that must be sustained. The application can create as many of the SocketAsyncEventArgs objects that it needs. For example, if a server application needs to have 15 socket accept operations outstanding at all times to support incoming client connection rates, it can allocate 15 reusable SocketAsyncEventArgs objects for that purpose.  </p>\n<p> The pattern for performing an asynchronous socket operation with this class consists of the following steps:  </p>\n<ol>\n<li><p>Allocate a new SocketAsyncEventArgs context object, or get a free one from an application pool.  </p>\n</li>\n<li><p>Set properties on the context object to the operation about to be performed (the completion callback method, the data buffer, the offset into the buffer, and the maximum amount of data to transfer, for example).  </p>\n</li>\n<li><p>Call the appropriate socket method (xxxAsync) to initiate the asynchronous operation.  </p>\n</li>\n<li><p>If the asynchronous socket method (xxxAsync) returns true, in the callback, query the context properties for completion status.  </p>\n</li>\n<li><p>If the asynchronous socket method (xxxAsync) returns false, the operation completed synchronously. The context properties may be queried for the operation result.  </p>\n</li>\n<li><p>Reuse the context for another operation, put it back in the pool, or discard it.  </p>\n</li>\n</ol>\n<p> The lifetime of the new asynchronous socket operation context object is determined by references by the application code and asynchronous I/O references. It is not necessary for the application to retain a reference to an asynchronous socket operation context object after it is submitted as a parameter to one of the asynchronous socket operation methods. It will remain referenced until the completion callback returns. However it is advantageous for the application to retain the reference to the context so that it can be reused for a future asynchronous socket operation.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SocketAsyncEventArgs()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an empty <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SocketAsyncEventArgs ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The platform is not supported.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>After calling this constructor all properties will have their default values:  </p>\n<ul>\n<li><p>Object references will be null  </p>\n</li>\n<li><p>Properties that return an integer will return zero.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_LastOperation_\" data-linktype=\"relative-path\">LastOperation</a> property will be equal to <a class=\"xref\" href=\"system.net.sockets.socketasyncoperation\" data-linktype=\"relative-path\">SocketAsyncOperation</a>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_SendPacketsFlags_\" data-linktype=\"relative-path\">SendPacketsFlags</a> property will be equal to <a class=\"xref\" href=\"system.net.sockets.transmitfileoptions\" data-linktype=\"relative-path\">System.Net.Sockets.TransmitFileOptions</a>, which specifies no flags will be used.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_SocketFlags_\" data-linktype=\"relative-path\">SocketFlags</a> property will be equal to <a class=\"xref\" href=\"system.net.sockets.socketasyncoperation\" data-linktype=\"relative-path\">SocketAsyncOperation</a>.  </p>\n</li>\n</ul>\n<p> The caller must set the appropriate properties prior to passing the object to the appropriate asynchronous socket (xxxAsync) method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_AcceptSocket_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_AcceptSocket\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AcceptSocket</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.Socket AcceptSocket { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> to use or the socket created for accepting a connection with an asynchronous socket method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property can be used to provide an already created <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> that will be used for an asynchronous socket accept operation. Upon completion of the accept operation, it is the socket representing the accepted connection. If not supplied (set to null) before calling the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_AcceptAsync_\" data-linktype=\"relative-path\">AcceptAsync</a> method, a new socket will be created automatically and be accessible in the completion callback with this property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_Buffer_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_Buffer\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Buffer</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the data buffer to use with an asynchronous socket method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] Buffer { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that represents the data buffer to use with an asynchronous socket method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property gets the data buffer currently associated with the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> instance. To set the buffer, the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_SetBuffer_\" data-linktype=\"relative-path\">SetBuffer</a> method must be used.  </p>\n<p> This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_AcceptAsync_\" data-linktype=\"relative-path\">AcceptAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ConnectAsync_\" data-linktype=\"relative-path\">ConnectAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveAsync_\" data-linktype=\"relative-path\">ReceiveAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveFromAsync_\" data-linktype=\"relative-path\">ReceiveFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveMessageFromAsync_\" data-linktype=\"relative-path\">ReceiveMessageFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>, and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendToAsync_\" data-linktype=\"relative-path\">SendToAsync</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_BufferList_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_BufferList\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BufferList</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an array of data buffers to use with an asynchronous socket method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; BufferList { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.arraysegment-1\" data-linktype=\"relative-path\">ArraySegment</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>&gt;&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> that represents an array of data buffers to use with an asynchronous socket method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There are ambiguous buffers specified on a set operation. This exception occurs if the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property has been set to a non-null value and an attempt was made to set the BufferList property to a non-null value.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveAsync_\" data-linktype=\"relative-path\">ReceiveAsync</a> and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods.  </p>\n<p> This property is used to provide multiple buffers of data to be sent or to provide multiple buffers in which to store received data for an asynchronous socket operation that can send or receive data. Multiple buffers using the BufferList property are supported by the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveAsync_\" data-linktype=\"relative-path\">ReceiveAsync</a> and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods.  </p>\n<p> If the BufferList property is set to a non-null value, the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Buffer_\" data-linktype=\"relative-path\">Buffer</a> property must be null and is ignored by the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveAsync_\" data-linktype=\"relative-path\">ReceiveAsync</a> and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Buffer_\" data-linktype=\"relative-path\">Buffer</a> was set to a non-null value and an attempt is made to set the BufferList property to a non-null value, an exception is thrown.  </p>\n<p> If the BufferList property is set to a non-null value, the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ConnectAsync_\" data-linktype=\"relative-path\">ConnectAsync</a> and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_AcceptAsync_\" data-linktype=\"relative-path\">AcceptAsync</a> methods will throw an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> The BufferList parameter is ignored by the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_DisconnectAsync_\" data-linktype=\"relative-path\">DisconnectAsync</a> and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendPacketsAsync_\" data-linktype=\"relative-path\">SendPacketsAsync</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_BytesTransferred_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_BytesTransferred\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BytesTransferred</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of bytes transferred in the socket operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int BytesTransferred { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the number of bytes transferred in the socket operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property provides the number of bytes transferred in an asynchronous socket operation that can receive or send data. If zero is returned from a read operation, the remote end has closed the connection.  </p>\n<p> This property is set by all asynchronous socket operations except the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_DisconnectAsync_\" data-linktype=\"relative-path\">DisconnectAsync</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_ConnectByNameError_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_ConnectByNameError\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConnectByNameError</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the exception in the case of a connection failure when a <a class=\"xref\" href=\"system.net.dnsendpoint\" data-linktype=\"relative-path\">DnsEndPoint</a> was used.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Exception ConnectByNameError { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that indicates the cause of the connection error when a <a class=\"xref\" href=\"system.net.dnsendpoint\" data-linktype=\"relative-path\">DnsEndPoint</a> was specified for the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In the case of a connection failure when a <a class=\"xref\" href=\"system.net.dnsendpoint\" data-linktype=\"relative-path\">DnsEndPoint</a> was specified for the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_RemoteEndPoint_\" data-linktype=\"relative-path\">RemoteEndPoint</a> property, the ConnectByNameError property will contain the exception that indicates the detailed cause of the socket error.  </p>\n<p> When an <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> was specified for the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_RemoteEndPoint_\" data-linktype=\"relative-path\">RemoteEndPoint</a> property and a connection failure occurs, the ConnectByNameError property will be a <code>null</code> reference.  </p>\n<p> The <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_SocketError_\" data-linktype=\"relative-path\">SocketError</a> property is always set in the case of a connection failure. The ConnectByNameError property contains more information about the failure if it was a failure connecting to a <a class=\"xref\" href=\"system.net.dnsendpoint\" data-linktype=\"relative-path\">DnsEndPoint</a>. If an application is only interested in whether the connect operation succeeded or failed, then the application only needs to check the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_SocketError_\" data-linktype=\"relative-path\">SocketError</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_ConnectSocket_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_ConnectSocket\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConnectSocket</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The created and connected <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> object after successful completion of the <span class=\"xref\">stem.Net.Sockets.Socket.ConnectAsync*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.Socket ConnectSocket { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The connected <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>After successful completion of the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ConnectAsync_\" data-linktype=\"relative-path\">ConnectAsync</a> method, this property contains the newly created and connected <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_Count_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_Count\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Count</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Count { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the maximum amount of data, in bytes, to send or receive.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is set by calling the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_SetBuffer_\" data-linktype=\"relative-path\">SetBuffer</a> method.  </p>\n<p> This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_AcceptAsync_\" data-linktype=\"relative-path\">AcceptAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ConnectAsync_\" data-linktype=\"relative-path\">ConnectAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveAsync_\" data-linktype=\"relative-path\">ReceiveAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveFromAsync_\" data-linktype=\"relative-path\">ReceiveFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveMessageFromAsync_\" data-linktype=\"relative-path\">ReceiveMessageFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>, and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendToAsync_\" data-linktype=\"relative-path\">SendToAsync</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_DisconnectReuseSocket_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_DisconnectReuseSocket\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisconnectReuseSocket</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that specifies if socket can be reused after a disconnect operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool DisconnectReuseSocket { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> that specifies if socket can be reused after a disconnect operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is used to alter the behavior of <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_DisconnectAsync_\" data-linktype=\"relative-path\">DisconnectAsync</a> method. If true, a socket disconnected by the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_DisconnectAsync_\" data-linktype=\"relative-path\">DisconnectAsync</a> method can be reused after disconnect completion in subsequent socket accept or connect operations.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_LastOperation_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_LastOperation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LastOperation</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the type of socket operation most recently performed with this context object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.SocketAsyncOperation LastOperation { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketasyncoperation\" data-linktype=\"relative-path\">SocketAsyncOperation</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.sockets.socketasyncoperation\" data-linktype=\"relative-path\">SocketAsyncOperation</a> instance that indicates the type of socket operation most recently performed with this context object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property describes the asynchronous socket operation that was most recently completed using this <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> object. The value of this property will be <a class=\"xref\" href=\"system.net.sockets.socketasyncoperation\" data-linktype=\"relative-path\">System.Net.Sockets.SocketAsyncOperation</a> until the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> instance is used to begin an asynchronous socket operation. The property will then be set to the type of operation being performed in the methods that take the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> as a parameter. This property more easily facilitates using a single completion callback delegate for multiple kinds of asynchronous socket operations.  </p>\n<p> This property remains valid in a <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> instance until the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> instance is used for another asynchronous socket (xxxAsync) operation.  </p>\n<p> This property is set by all asynchronous socket (xxxAsync) methods.  </p>\n<p> Calling an asynchronous socket method (xxxAsync) on the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">System.Net.Sockets.Socket</a> class sets this property value. This property is intended for use with the SocketAsyncCallback completion routine implemented by the application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_Offset_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_Offset\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Offset</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the offset, in bytes, into the data buffer referenced by the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Offset { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the offset, in bytes, into the data buffer referenced by the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property describes the starting byte offset of data in the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Buffer_\" data-linktype=\"relative-path\">Buffer</a> property. This value is set by calling the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_SetBuffer_\" data-linktype=\"relative-path\">SetBuffer</a> method.  </p>\n<p> This property does not apply to the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_BufferList_\" data-linktype=\"relative-path\">BufferList</a> property.  </p>\n<p> This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_AcceptAsync_\" data-linktype=\"relative-path\">AcceptAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ConnectAsync_\" data-linktype=\"relative-path\">ConnectAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveAsync_\" data-linktype=\"relative-path\">ReceiveAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveFromAsync_\" data-linktype=\"relative-path\">ReceiveFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveMessageFromAsync_\" data-linktype=\"relative-path\">ReceiveMessageFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>, and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendToAsync_\" data-linktype=\"relative-path\">SendToAsync</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_ReceiveMessageFromPacketInfo_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_ReceiveMessageFromPacketInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReceiveMessageFromPacketInfo</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the IP address and interface of a received packet.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.ippacketinformation\" data-linktype=\"relative-path\">IPPacketInformation</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.sockets.ippacketinformation\" data-linktype=\"relative-path\">IPPacketInformation</a> instance that contains the destination IP address and interface of a received packet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property provides information about a packet received using the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveMessageFromAsync_\" data-linktype=\"relative-path\">ReceiveMessageFromAsync</a> method.  </p>\n<p> This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveMessageFromAsync_\" data-linktype=\"relative-path\">ReceiveMessageFromAsync</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_RemoteEndPoint_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_RemoteEndPoint\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoteEndPoint</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the remote IP endpoint for an asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.EndPoint RemoteEndPoint { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.endpoint\" data-linktype=\"relative-path\">EndPoint</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.endpoint\" data-linktype=\"relative-path\">EndPoint</a> that represents the remote IP endpoint for an asynchronous operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property specifies the remote endpoint. This property can specify the remote endpoint to which to connect using the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ConnectAsync_\" data-linktype=\"relative-path\">ConnectAsync</a> method. This property can specify the remote endpoint to which to send data using <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendToAsync_\" data-linktype=\"relative-path\">SendToAsync</a> method. This property can specify the remote endpoint from which data was received using the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveFromAsync_\" data-linktype=\"relative-path\">ReceiveFromAsync</a> or <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveMessageFromAsync_\" data-linktype=\"relative-path\">ReceiveMessageFromAsync</a> methods.  </p>\n<p> This remote endpoint specified by this property can include an IPv4 or IPv6 address.  </p>\n<p> This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ConnectAsync_\" data-linktype=\"relative-path\">ConnectAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveFromAsync_\" data-linktype=\"relative-path\">ReceiveFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveMessageFromAsync_\" data-linktype=\"relative-path\">ReceiveMessageFromAsync</a>, or <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendToAsync_\" data-linktype=\"relative-path\">SendToAsync</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SendPacketsElements_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SendPacketsElements\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SendPacketsElements</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an array of buffers to be sent for an asynchronous operation used by the <span class=\"xref\">stem.Net.Sockets.Socket.SendPacketsAsync*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.SendPacketsElement[] SendPacketsElements { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.sendpacketselement\" data-linktype=\"relative-path\">SendPacketsElement</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.net.sockets.sendpacketselement\" data-linktype=\"relative-path\">SendPacketsElement</a> objects that represent an array of buffers to be sent.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The array of buffers can represent a file or files in memory or a set of memory data buffers. This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendPacketsAsync_\" data-linktype=\"relative-path\">SendPacketsAsync</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SendPacketsFlags_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SendPacketsFlags\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SendPacketsFlags</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a bitwise combination of <a class=\"xref\" href=\"system.net.sockets.transmitfileoptions\" data-linktype=\"relative-path\">TransmitFileOptions</a> values for an asynchronous operation used by the <span class=\"xref\">stem.Net.Sockets.Socket.SendPacketsAsync*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.TransmitFileOptions SendPacketsFlags { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.transmitfileoptions\" data-linktype=\"relative-path\">TransmitFileOptions</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.sockets.transmitfileoptions\" data-linktype=\"relative-path\">TransmitFileOptions</a> that contains a bitwise combination of values that are used with an asynchronous operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property specifies the <a class=\"xref\" href=\"system.net.sockets.transmitfileoptions\" data-linktype=\"relative-path\">TransmitFileOptions</a> that are used by the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendPacketsAsync_\" data-linktype=\"relative-path\">SendPacketsAsync</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SendPacketsSendSize_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SendPacketsSendSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SendPacketsSendSize</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the size, in bytes, of the data block used in the send operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int SendPacketsSendSize { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the size, in bytes, of the data block used in the send operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Set this property to zero to let the sockets layer select a default send size. Setting this property to 0xFFFFFFFF enables the caller to control the size and content of each send request, achieved by using the <a class=\"xref\" href=\"system.net.sockets.sendpacketselement#System_Net_Sockets_SendPacketsElement_EndOfPacket_\" data-linktype=\"relative-path\">EndOfPacket</a> property. This capability is useful for message protocols that place limitations on the size of individual send requests.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SocketClientAccessPolicyProtocol_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SocketClientAccessPolicyProtocol\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SocketClientAccessPolicyProtocol</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the protocol to use to download the socket client access policy file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketclientaccesspolicyprotocol\" data-linktype=\"relative-path\">SocketClientAccessPolicyProtocol</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <a class=\"xref\" href=\"system.net.sockets.socketclientaccesspolicyprotocol\" data-linktype=\"relative-path\">SocketClientAccessPolicyProtocol</a>.  </p>\n<p> The protocol to use to download the socket client access policy file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.editorbrowsableattribute\" title=\"System.ComponentModel.EditorBrowsableAttribute\" data-linktype=\"relative-path\">EditorBrowsableAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.sockets.socketclientaccesspolicyprotocol\" data-linktype=\"relative-path\">SocketClientAccessPolicyProtocol</a> specifies the method to download a client access policy file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SocketError_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SocketError\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SocketError</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the result of the asynchronous socket operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.SocketError SocketError { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketerror\" data-linktype=\"relative-path\">SocketError</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.sockets.socketerror\" data-linktype=\"relative-path\">SocketError</a> that represents the result of the asynchronous socket operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property provides the completion status of an asynchronous socket operation. A value of <a class=\"xref\" href=\"system.net.sockets.socketerror\" data-linktype=\"relative-path\">System.Net.Sockets.SocketError</a> indicates successful completion of an operation. This property is primarily used in an application’s event handler routine.  </p>\n<p> This property is used with all of the asynchronous socket (xxxAsync) methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SocketFlags_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SocketFlags\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SocketFlags</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Sockets.SocketFlags SocketFlags { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketflags\" data-linktype=\"relative-path\">SocketFlags</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.sockets.socketflags\" data-linktype=\"relative-path\">SocketFlags</a> that represents the results of an asynchronous socket operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The property specifies the bitwise combination of the <a class=\"xref\" href=\"system.net.sockets.socketflags\" data-linktype=\"relative-path\">System.Net.Sockets.SocketFlags</a> to be used for an asynchronous socket operation.  </p>\n<p> This property is used with the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveAsync_\" data-linktype=\"relative-path\">ReceiveAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_ReceiveFromAsync_\" data-linktype=\"relative-path\">ReceiveFromAsync</a>, <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>, and <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_SendToAsync_\" data-linktype=\"relative-path\">SendToAsync</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_UserToken_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_UserToken\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UserToken</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a user or application object associated with this asynchronous socket operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object UserToken { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents the user or application object associated with this asynchronous socket operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property can be used by an application to associate an application state object with the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> object. Primarily, this property is a way for an application to pass state to the application’s event handler (for example, the asynchronous operation completion method).  </p>\n<p> This property is used with all of the asynchronous socket (xxxAsync) methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> instance and optionally disposes of the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../topic/network%20tracing%20in%20the%20.net%20framework\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_Finalize_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_Finalize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Finalize()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Frees resources used by the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">~SocketAsyncEventArgs ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> class finalizer closes the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> and free resources associated with the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_OnCompleted_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_OnCompleted_System_Net_Sockets_SocketAsyncEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnCompleted(SocketAsyncEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents a method that is called when an asynchronous operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnCompleted (System.Net.Sockets.SocketAsyncEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event that is signaled.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not callable by user code. This method gets called by the internals of the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> object when the current operation is complete. This method is used with all asynchronous socket (xxxAsync) methods.  </p>\n<p> An application that creates a class inheriting from <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> can override this method to hook into this completion notification and clean up any resources that it allocated for the operation. The default implementation just raises the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Completed\" data-linktype=\"relative-path\">Completed</a> event.  </p>\n<p> This method is used to hook up an event handler to be used as the completion callback for a subsequent asynchronous socket operation. The caller must implement at least one callback delegate inherited from this method prior to starting an asynchronous socket operation using one of the asynchronous (xxxAsync) methods on the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">System.Net.Sockets.Socket</a> class.  </p>\n<p> The caller&#39;s OnCompleted method provides a way for client applications to complete an asynchronous socket operation. A callback delegate must be implemented when an asynchronous socket operation is initiated. The completion callback delegate(s) inherited from the OnCompleted method must contain program logic to finish processing the asynchronous socket operation for the client.  </p>\n<p> When an asynchronous operation is signaled, the application uses the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> object parameter to obtain status of the completed asynchronous socket operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SetBuffer_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SetBuffer_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetBuffer(Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the data buffer to use with an asynchronous socket method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetBuffer (int offset, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The offset, in bytes, in the data buffer where the operation starts.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum amount of data, in bytes, to send or receive in the buffer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>An argument was out of range. This exception occurs if the <code>offset</code> parameter is less than zero or greater than the length of the array in the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property. This exception also occurs if the <code>count</code> parameter is less than zero or greater than the length of the array in the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property minus the <code>offset</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>offset</code> and <code>count</code> parameters can&#39;t be negative numbers. The combination of the <code>offset</code> and <code>count</code> parameters must be in bounds of the buffer array in the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Buffer_\" data-linktype=\"relative-path\">Buffer</a> property.  </p>\n<p> This method sets the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Count_\" data-linktype=\"relative-path\">Count</a> property to the <code>count</code> parameter and the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Offset_\" data-linktype=\"relative-path\">Offset</a> property to the <code>offset</code> parameter. If the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Buffer_\" data-linktype=\"relative-path\">Buffer</a> property is null, this method ignores the <code>offset</code> and <code>count</code> parameters and sets the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Offset_\" data-linktype=\"relative-path\">Offset</a> and <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Count_\" data-linktype=\"relative-path\">Count</a> properties to 0.  </p>\n<p> This method does not change the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Buffer_\" data-linktype=\"relative-path\">Buffer</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_Sockets_SocketAsyncEventArgs_SetBuffer_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_SetBuffer_System_Byte___System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetBuffer(Byte[], Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the data buffer to use with an asynchronous socket method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetBuffer (byte[] buffer, int offset, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to use with an asynchronous socket method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The offset, in bytes, in the data buffer where the operation starts.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum amount of data, in bytes, to send or receive in the buffer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There are ambiguous buffers specified. This exception occurs if the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property is also not null and the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.BufferList*</span> property is also not null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>An argument was out of range. This exception occurs if the <code>offset</code> parameter is less than zero or greater than the length of the array in the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property. This exception also occurs if the <code>count</code> parameter is less than zero or greater than the length of the array in the <span class=\"xref\">stem.Net.Sockets.SocketAsyncEventArgs.Buffer*</span> property minus the <code>offset</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>offset</code> and <code>count</code> parameters can&#39;t be negative numbers. The combination of the <code>offset</code> and <code>count</code> parameters must be in bounds of the data array in the <code>buffer</code> parameter.  </p>\n<p> This method sets the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Buffer_\" data-linktype=\"relative-path\">Buffer</a> property to the <code>buffer</code> parameter, the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Count_\" data-linktype=\"relative-path\">Count</a> property to the <code>count</code> parameter, and the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs#System_Net_Sockets_SocketAsyncEventArgs_Offset_\" data-linktype=\"relative-path\">Offset</a> property to the <code>offset</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_Sockets_SocketAsyncEventArgs_Completed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Completed</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The event used to complete an asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; Completed;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Completed event provides a way for client applications to complete an asynchronous socket operation. An event handler should be attached to the event within a <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> instance when an asynchronous socket operation is initiated, otherwise the application will not be able to determine when the operation completes.  </p>\n<p> The completion callback delegates referenced by the Completed event contains program logic to finish processing the asynchronous socket operation for the client.  </p>\n<p> When the event is signaled, the application uses the <a class=\"xref\" href=\"system.net.sockets.socketasynceventargs\" data-linktype=\"relative-path\">SocketAsyncEventArgs</a> object parameter to obtain the status of the completed asynchronous socket operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Sockets.SocketAsyncEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.Buffer\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.BufferList\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.Completed\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.add_Completed\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.remove_Completed\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.Count\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.LastOperation\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.Offset\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.OnCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.SetBuffer\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.SocketError\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.SocketFlags\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketAsyncEventArgs.UserToken\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"cb6facfe-bb20-e504-33e4-51600d2a53da\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an asynchronous socket operation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net.sockets/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Sockets.SocketAsyncEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Sockets.SocketAsyncEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Net.Sockets.SocketAsyncEventArgs","System.Net.Sockets.SocketAsyncEventArgs..ctor","System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket","System.Net.Sockets.SocketAsyncEventArgs.Buffer","System.Net.Sockets.SocketAsyncEventArgs.BufferList","System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred","System.Net.Sockets.SocketAsyncEventArgs.Completed","System.Net.Sockets.SocketAsyncEventArgs.add_Completed","System.Net.Sockets.SocketAsyncEventArgs.remove_Completed","System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError","System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket","System.Net.Sockets.SocketAsyncEventArgs.Count","System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket","System.Net.Sockets.SocketAsyncEventArgs.Dispose","System.Net.Sockets.SocketAsyncEventArgs.Finalize","System.Net.Sockets.SocketAsyncEventArgs.LastOperation","System.Net.Sockets.SocketAsyncEventArgs.Offset","System.Net.Sockets.SocketAsyncEventArgs.OnCompleted","System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo","System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint","System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements","System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags","System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize","System.Net.Sockets.SocketAsyncEventArgs.SetBuffer","System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol","System.Net.Sockets.SocketAsyncEventArgs.SocketError","System.Net.Sockets.SocketAsyncEventArgs.SocketFlags","System.Net.Sockets.SocketAsyncEventArgs.UserToken"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Sockets.SocketAsyncEventArgs","System::Net::Sockets::SocketAsyncEventArgs","System.Net.Sockets.SocketAsyncEventArgs.#ctor","System::Net::Sockets::SocketAsyncEventArgs::#ctor","System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket","System::Net::Sockets::SocketAsyncEventArgs::AcceptSocket","System.Net.Sockets.SocketAsyncEventArgs.Buffer","System::Net::Sockets::SocketAsyncEventArgs::Buffer","System.Net.Sockets.SocketAsyncEventArgs.BufferList","System::Net::Sockets::SocketAsyncEventArgs::BufferList","System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred","System::Net::Sockets::SocketAsyncEventArgs::BytesTransferred","System.Net.Sockets.SocketAsyncEventArgs.Completed","System::Net::Sockets::SocketAsyncEventArgs::Completed","System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError","System::Net::Sockets::SocketAsyncEventArgs::ConnectByNameError","System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket","System::Net::Sockets::SocketAsyncEventArgs::ConnectSocket","System.Net.Sockets.SocketAsyncEventArgs.Count","System::Net::Sockets::SocketAsyncEventArgs::Count","System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket","System::Net::Sockets::SocketAsyncEventArgs::DisconnectReuseSocket","System.Net.Sockets.SocketAsyncEventArgs.Dispose","System::Net::Sockets::SocketAsyncEventArgs::Dispose","System.Net.Sockets.SocketAsyncEventArgs.Finalize","System::Net::Sockets::SocketAsyncEventArgs::Finalize","System.Net.Sockets.SocketAsyncEventArgs.LastOperation","System::Net::Sockets::SocketAsyncEventArgs::LastOperation","System.Net.Sockets.SocketAsyncEventArgs.Offset","System::Net::Sockets::SocketAsyncEventArgs::Offset","System.Net.Sockets.SocketAsyncEventArgs.OnCompleted","System::Net::Sockets::SocketAsyncEventArgs::OnCompleted","System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo","System::Net::Sockets::SocketAsyncEventArgs::ReceiveMessageFromPacketInfo","System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint","System::Net::Sockets::SocketAsyncEventArgs::RemoteEndPoint","System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements","System::Net::Sockets::SocketAsyncEventArgs::SendPacketsElements","System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags","System::Net::Sockets::SocketAsyncEventArgs::SendPacketsFlags","System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize","System::Net::Sockets::SocketAsyncEventArgs::SendPacketsSendSize","System.Net.Sockets.SocketAsyncEventArgs.SetBuffer","System::Net::Sockets::SocketAsyncEventArgs::SetBuffer","System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol","System::Net::Sockets::SocketAsyncEventArgs::SocketClientAccessPolicyProtocol","System.Net.Sockets.SocketAsyncEventArgs.SocketError","System::Net::Sockets::SocketAsyncEventArgs::SocketError","System.Net.Sockets.SocketAsyncEventArgs.SocketFlags","System::Net::Sockets::SocketAsyncEventArgs::SocketFlags","System.Net.Sockets.SocketAsyncEventArgs.UserToken","System::Net::Sockets::SocketAsyncEventArgs::UserToken"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"cb6facfe-bb20-e504-33e4-51600d2a53da","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Net.Sockets/SocketAsyncEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SocketAsyncEventArgs class | Microsoft Docs","_op_ogTitle":"SocketAsyncEventArgs class","description":"Represents an asynchronous socket operation.\n","toc_asset_id":"api/_splitted/System.Net.Sockets/toc.json","toc_rel":"_splitted/System.Net.Sockets/toc.json","source_url":"","ms.assetid":"System.Net.Sockets.SocketAsyncEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.socketasynceventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.socketasynceventargs","fileRelativePath":"api/System.Net.Sockets.SocketAsyncEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}