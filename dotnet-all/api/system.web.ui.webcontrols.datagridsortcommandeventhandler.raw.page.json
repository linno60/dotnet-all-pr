{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridSortCommandEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_SortCommand\" data-linktype=\"relative-path\">SortCommand</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DataGridSortCommandEventHandler(object source, DataGridSortCommandEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DataGridSortCommandEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to specify and code a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_SortCommand\" data-linktype=\"relative-path\">SortCommand</a> event to sort a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridAllowSorting#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    ICollection CreateDataSource()\n    {\n        // Create a Random object to mix up the \n        // order of items in the sample data.\n        Random randNum = new Random();\n\n        // Create sample data for the DataGrid control.\n        DataTable dt = new DataTable();\n\n        // Define the columns of the table.\n        dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n        dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n        dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(Double)));\n\n        // Populate the table with sample values.\n        for (int i = 0; i &lt;= 8; i++)\n        {\n            DataRow dr = dt.NewRow();\n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + randNum.Next(1, 15).ToString();\n            dr[2] = 1.23 * randNum.Next(1, 15);\n            dt.Rows.Add(dr);\n        }\n\n        // To persist the data source between posts to the server,\n        // store it in session state.  \n        Session[&quot;Source&quot;] = dt;\n        DataView dv = new DataView(dt);\n        return dv;\n    }\n\n    void Page_Load(Object sender, EventArgs e)\n    {\n        // Load sample data only once, when the page is first loaded.\n        if (!IsPostBack)\n        {\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n        }\n    }\n\n    void Sort_Grid(Object sender, DataGridSortCommandEventArgs e)\n    {\n        // Retrieve the data source from session state.\n        DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n        // Create a DataView from the DataTable.\n        DataView dv = new DataView(dt);\n\n        // The DataView provides an easy way to sort. Simply set the\n        // Sort property with the name of the field to sort by.\n        dv.Sort = e.SortExpression;\n\n        // Rebind the data source and specify that it should be sorted\n        // by the field specified in the SortExpression property.\n        ItemsGrid.DataSource = dv;\n        ItemsGrid.DataBind();\n    }\n\n    void Check_Change(Object sender, EventArgs e)\n    {\n        // Allow or prevent sorting depending on the user&#39;s selection.\n        ItemsGrid.AllowSorting = AllowSortingCheckBox.Checked;\n\n        // After changing the property, rebind the data to\n        // refresh the DataGrid control.\n\n        // Retrieve the data source from session state.\n        DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n        // Create a DataView from the DataTable.\n        DataView dv = new DataView(dt);\n\n        // Rebind the data source.\n        ItemsGrid.DataSource = dv;\n        ItemsGrid.DataBind();\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n        ExtractTemplateRows Example\n    &lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n      &lt;h3&gt;DataGrid AllowSorting Example&lt;/h3&gt;\n\n      &lt;p&gt;Select whether to allow sorting in the DataGrid control.&lt;br /&gt;\n      &lt;asp:CheckBox id=&quot;AllowSortingCheckBox&quot;\n           Text=&quot;Allow sorting&quot;\n           AutoPostBack=&quot;True&quot;\n           Checked=&quot;True&quot;\n           OnCheckedChanged=&quot;Check_Change&quot;\n           runat=&quot;server&quot;/&gt;&lt;/p&gt;\n      &lt;hr /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           OnSortCommand=&quot;Sort_Grid&quot;\n           UseAccessibleHeader=&quot;true&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           AllowSorting=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot; /&gt;\n         &lt;Columns&gt;\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n            &lt;/asp:BoundColumn&gt;\n         &lt;/Columns&gt; \n      &lt;/asp:DataGrid&gt;\n \n   &lt;/div&gt;\n   &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridAllowSorting#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    Function CreateDataSource() As ICollection\n        &#39; Create a Random object to mix up the order \n        &#39; of items in the sample data.\n        Dim randNum As Random = New Random()\n\n        &#39; Create sample data for the DataGrid control.\n        Dim dt As DataTable = New DataTable()\n\n        &#39; Define the columns of the table.\n        dt.Columns.Add( _\n            New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n        dt.Columns.Add( _\n            New DataColumn(&quot;StringValue&quot;, GetType(String)))\n        dt.Columns.Add( _\n            New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n\n        &#39; Populate the table with sample values.\n        Dim i As Integer\n        For i = 0 To 8\n            Dim dr As DataRow = dt.NewRow()\n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; randNum.Next(1, 15).ToString()\n            dr(2) = 1.23 * randNum.Next(1, 15)\n            dt.Rows.Add(dr)\n        Next\n\n        &#39; Persist the data source between posts to \n        &#39; the server, in the session state.  \n        Session(&quot;Source&quot;) = dt\n\n        Dim dv As DataView = New DataView(dt)\n        Return dv\n    End Function\n\n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Load sample data when the page is first loaded.\n        If Not IsPostBack Then\n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n        End If\n    End Sub\n\n    Sub Sort_Grid(ByVal sender As Object, _\n        ByVal e As DataGridSortCommandEventArgs)\n\n        &#39; Retrieve the data source from session state.\n        Dim dt As DataTable = _\n            CType(Session(&quot;Source&quot;), DataTable)\n\n        &#39; Create a DataView from the DataTable.\n        Dim dv As DataView = New DataView(dt)\n\n        &#39; The DataView provides an easy way to \n        &#39; sort. Simply set the Sort property with \n        &#39; the name of the field to sort by.\n        dv.Sort = e.SortExpression\n\n        &#39; Rebind the data source and specify that \n        &#39; it should be sorted by the field specified \n        &#39; in the SortExpression property.\n        ItemsGrid.DataSource = dv\n        ItemsGrid.DataBind()\n    End Sub\n\n    Sub Check_Change(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; Allow or prevent sorting depending \n        &#39; on the user&#39;s selection.\n        ItemsGrid.AllowSorting = _\n            AllowSortingCheckBox.Checked\n\n        &#39; After changing the property, rebind \n        &#39; the data to refresh the DataGrid control.\n\n        &#39; Retrieve data source from session state.\n        Dim dt As DataTable = _\n            CType(Session(&quot;Source&quot;), DataTable)\n\n        &#39; Create a DataView from the DataTable.\n        Dim dv As DataView = New DataView(dt)\n\n        &#39; Rebind the data source.\n        ItemsGrid.DataSource = dv\n        ItemsGrid.DataBind()\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n        ExtractTemplateRows Example\n    &lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n      &lt;h3&gt;DataGrid AllowSorting Example&lt;/h3&gt;\n\n      &lt;p&gt;Select whether to allow sorting in the DataGrid control.&lt;br /&gt;\n      &lt;asp:CheckBox id=&quot;AllowSortingCheckBox&quot;\n           Text=&quot;Allow sorting&quot;\n           AutoPostBack=&quot;True&quot;\n           Checked=&quot;True&quot;\n           OnCheckedChanged=&quot;Check_Change&quot;\n           runat=&quot;server&quot;/&gt;&lt;/p&gt;\n      &lt;hr /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           OnSortCommand=&quot;Sort_Grid&quot;\n           UseAccessibleHeader=&quot;true&quot; \n           AutoGenerateColumns=&quot;False&quot;\n           AllowSorting=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot; /&gt;\n         &lt;Columns&gt;\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n            &lt;/asp:BoundColumn&gt;\n         &lt;/Columns&gt; \n      &lt;/asp:DataGrid&gt;\n \n   &lt;/div&gt;\n   &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridSortCommand#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource()\n      {\n      \n         // Create a Random object to mix up the order of items in the sample data.\n         Random Rand_Num = new Random();\n\n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(Double)));\n \n         // Populate the table with sample values.\n         for (int i=0; i&lt;=8; i++) \n         {\n\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + Rand_Num.Next(1, 15).ToString();\n            dr[2] = 1.23 * Rand_Num.Next(1, 15);\n \n            dt.Rows.Add(dr);\n         \n         }\n\n         // To persist the data source between posts to the server, store it\n         // in session state.  \n         Session[&quot;Source&quot;] = dt;\n \n         DataView dv = new DataView(dt);\n\n         return dv;\n      \n      }\n \n      void Page_Load(Object sender, EventArgs e)\n      { \n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack)\n         { \n         \n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         \n         }\n\n         // Manually register the event-handling method for the PageIndexChanged  \n         // event of the DataGrid control.\n         ItemsGrid.SortCommand += new DataGridSortCommandEventHandler(this.Sort_Grid);\n\n      }\n\n      void Sort_Grid(Object sender, DataGridSortCommandEventArgs e)\n      { \n\n         // Retrieve the data source from session state.\n         DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n         // Create a DataView from the DataTable.\n         DataView dv = new DataView(dt);\n\n         // The DataView provides an easy way to sort. Simply set the Sort property with\n         // the name of the field to sort by.\n         dv.Sort = e.SortExpression;\n\n         // Re-bind the data source and specify that it should be sorted\n         // by the field specified in the SortExpression property.\n         ItemsGrid.DataSource = dv;\n         ItemsGrid.DataBind();\n\n      }\n\n      void Check_Change(Object sender, EventArgs e)\n      {\n   \n         // Allow or prevent sorting depending on the user&#39;s selection.\n         if (AllowSortingCheckBox.Checked)\n         {\n\n            ItemsGrid.AllowSorting = true;\n\n         }\n         else\n         {\n\n            ItemsGrid.AllowSorting = false;\n\n         }\n\n         // After changing the property, re-bind the data to\n         // refresh the DataGrid control.\n\n         // Retrieve the data source from session state.\n         DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n         // Create a DataView from the DataTable.\n         DataView dv = new DataView(dt);\n\n         // Re-bind the data source.\n         ItemsGrid.DataSource = dv;\n         ItemsGrid.DataBind();\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid SortCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid SortCommand Example&lt;/h3&gt;\n\n      Select whether to allow sorting in the DataGrid control.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           AllowSorting=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;hr /&gt;\n\n      &lt;asp:CheckBox id=&quot;AllowSortingCheckBox&quot;\n           Text=&quot;Allow sorting&quot;\n           AutoPostBack=&quot;True&quot;\n           Checked=&quot;True&quot;\n           OnCheckedChanged=&quot;Check_Change&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridSortCommand#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create a Random object to mix up the order of items in the sample data.\n         Dim Rand_Num As Random = New Random()\n\n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 8 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; Rand_Num.Next(1, 15).ToString()\n            dr(2) = 1.23 * Rand_Num.Next(1, 15)\n \n            dt.Rows.Add(dr)\n         \n         Next i\n\n         &#39; To persist the data source between posts to the server, store it\n         &#39; in session state.  \n         Session(&quot;Source&quot;) = dt\n \n         Dim dv As DataView = New DataView(dt)\n\n         Return dv\n      \n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n         \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n         \n         End If\n\n         &#39; Manually register the event-handling method for the PageIndexChanged  \n         &#39; event of the DataGrid control.\n         AddHandler ItemsGrid.SortCommand, AddressOf Sort_Grid\n\n      End Sub\n\n      Sub Sort_Grid(sender As Object, e As DataGridSortCommandEventArgs) \n\n         &#39; Retrieve the data source from session state.\n         Dim dt As DataTable = CType(Session(&quot;Source&quot;), DataTable)\n\n         &#39; Create a DataView from the DataTable.\n         Dim dv As DataView = New DataView(dt)\n\n         &#39; The DataView provides an easy way to sort. Simply set the Sort property with\n         &#39; the name of the field to sort by.\n         dv.Sort = e.SortExpression\n\n         &#39; Re-bind the data source and specify that it should be sorted\n         &#39; by the field specified in the SortExpression property.\n         ItemsGrid.DataSource = dv\n         ItemsGrid.DataBind()\n\n      End Sub\n\n      Sub Check_Change(sender As Object, e As EventArgs)\n   \n         &#39; Allow or prevent sorting depending on the user&#39;s selection.\n         If AllowSortingCheckBox.Checked Then\n\n            ItemsGrid.AllowSorting = True\n\n         Else\n\n            ItemsGrid.AllowSorting = False\n\n         End If\n\n         &#39; After changing the property, re-bind the data to\n         &#39; refresh the DataGrid control.\n\n         &#39; Retrieve the data source from session state.\n         Dim dt As DataTable = CType(Session(&quot;Source&quot;), DataTable)\n\n         &#39; Create a DataView from the DataTable.\n         Dim dv As DataView = New DataView(dt)\n\n         &#39; Re-bind the data source.\n         ItemsGrid.DataSource = dv\n         ItemsGrid.DataBind()\n\n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid SortCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid SortCommand Example&lt;/h3&gt;\n\n      Select whether to allow sorting in the DataGrid control.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           AllowSorting=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;hr /&gt;\n\n      &lt;asp:CheckBox id=&quot;AllowSortingCheckBox&quot;\n           Text=&quot;Allow sorting&quot;\n           AutoPostBack=&quot;True&quot;\n           Checked=&quot;True&quot;\n           OnCheckedChanged=&quot;Check_Change&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When sorting is enabled by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_AllowSorting_\" data-linktype=\"relative-path\">AllowSorting</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control to <code>true</code>, <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> controls are rendered in the header of each column. These links allow you to sort the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control by the selected column. The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_SortCommand\" data-linktype=\"relative-path\">SortCommand</a> event is raised when a <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control is clicked.  </p>\n<p> When you create a DataGridSortCommandEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataGridSortCommandEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridSortCommandEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridSortCommandEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridSortCommandEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridSortCommandEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridSortCommandEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"b2614bb1-8a23-6747-4388-03bd9c7dc981\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of the  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DataGridSortCommandEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataGridSortCommandEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.DataGridSortCommandEventHandler","System.Web.UI.WebControls.DataGridSortCommandEventHandler..ctor","System.Web.UI.WebControls.DataGridSortCommandEventHandler.Invoke","System.Web.UI.WebControls.DataGridSortCommandEventHandler.BeginInvoke","System.Web.UI.WebControls.DataGridSortCommandEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DataGridSortCommandEventHandler","System::Web::UI::WebControls::DataGridSortCommandEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"b2614bb1-8a23-6747-4388-03bd9c7dc981","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/DataGridSortCommandEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridSortCommandEventHandler delegate | Microsoft Docs","_op_ogTitle":"DataGridSortCommandEventHandler delegate","description":"Represents the method that handles the  event of the  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DataGridSortCommandEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datagridsortcommandeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datagridsortcommandeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.DataGridSortCommandEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}