{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IQueryable&lt;T&gt;</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides functionality to evaluate queries against a specific data source wherein the type of the data is known.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IQueryable&lt;out T&gt; : System.Collections.Generic.IEnumerable&lt;out T&gt;, System.Linq.IQueryable</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>T</td>\r\n  \t\t\t<td><p>The type of the data in the data source.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The IQueryable(T) interface is intended for implementation by query providers.  </p>\n<p> This interface inherits the <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> interface so that if it represents a query, the results of that query can be enumerated. Enumeration forces the expression tree associated with an IQueryable(T) object to be executed. Queries that do not return enumerable results are executed when the <a class=\"xref\" href=\"system.linq.iqueryprovider#System_Linq_IQueryProvider_Execute__1_System_Linq_Expressions_Expression_\" data-linktype=\"relative-path\">Execute&lt;TResult&gt;(Expression)</a> method is called.  </p>\n<p> The definition of &quot;executing an expression tree&quot; is specific to a query provider. For example, it may involve translating the expression tree to a query language appropriate for an underlying data source.  </p>\n<p> The IQueryable(T) interface enables queries to be polymorphic. That is, because a query against an <code>IQueryable</code> data source is represented as an expression tree, it can be executed against different types of data sources.  </p>\n<p> The <code>static</code> (<code>Shared</code> in Visual Basic) methods defined in the class <a class=\"xref\" href=\"system.linq.queryable\" data-linktype=\"relative-path\">Queryable</a> (except for <a class=\"xref\" href=\"system.linq.queryable#System_Linq_Queryable_AsQueryable_\" data-linktype=\"relative-path\">AsQueryable</a>, <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb356406(v=vs.110).aspx\" data-linktype=\"external\">ThenBy</a>, and <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb347128(v=vs.110).aspx\" data-linktype=\"external\">ThenByDescending</a>) extend objects of types that implement the IQueryable(T) interface.  </p>\n<p> For more information about how to create your own LINQ provider, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=112370\" data-linktype=\"external\">LINQ: Building an IQueryable Provider</a> on MSDN Blogs.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Linq.IQueryable-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Linq.IQueryable&lt;T&gt;\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-23 07:05 AM\">\r\n<meta name=\"document_id\" content=\"67a8f457-679a-33f7-6849-5cd47aa59db5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides functionality to evaluate queries against a specific data source wherein the type of the data is known.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.linq/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Linq.IQueryable`1\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Linq.IQueryable-1.yml","open_to_public_contributors":false,"api_name":["System.Linq.IQueryable<T>"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Linq.IQueryable`1","System::Linq::IQueryable`1"],"dev_langs":["csharp"],"updated_at":"2017-03-23 07:05 AM","document_id":"67a8f457-679a-33f7-6849-5cd47aa59db5","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Linq/IQueryable`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IQueryable<T> interface | Microsoft Docs","_op_ogTitle":"IQueryable<T> interface","description":"Provides functionality to evaluate queries against a specific data source wherein the type of the data is known.\n","toc_asset_id":"api/_splitted/System.Linq/toc.json","toc_rel":"_splitted/System.Linq/toc.json","source_url":"","ms.assetid":"System.Linq.IQueryable`1","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.linq.iqueryable-1","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.linq.iqueryable-1","fileRelativePath":"api/System.Linq.IQueryable-1.html"},"themesRelativePathToOutputRoot":"_themes/"}