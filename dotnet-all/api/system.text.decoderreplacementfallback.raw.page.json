{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DecoderReplacementFallback</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an output character. The fallback emits a user-specified replacement string instead of a decoded input byte sequence. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class DecoderReplacementFallback : System.Text.DecoderFallback</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallback\" data-linktype=\"relative-path\">DecoderFallback</a></span></div><span class=\"lang-csharp\">DecoderReplacementFallback</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallback#System_Text_DecoderFallback_ExceptionFallback\" data-linktype=\"relative-path\">ExceptionFallback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallback#System_Text_DecoderFallback_ReplacementFallback\" data-linktype=\"relative-path\">ReplacementFallback</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the DecoderReplacementFallback class.  </p>\n<pre><code class=\"lang-cpp\" name=\"sys.txt.fallbackDecRpl#1\">// This example demonstrates the DecoderReplacementFallback class.\n\nusing namespace System;\nusing namespace System::Text;\n\nint main()\n{ \n    // Create an encoding, which is equivalent to calling the \n    // ASCIIEncoding class constructor. \n    // The DecoderReplacementFallback parameter specifies that the \n    // string &quot;(error)&quot; is to replace characters that cannot be decoded. \n    // An encoder replacement fallback is also specified, but in this code\n    // example the encoding operation cannot fail.  \n\n    Encoding^ asciiEncoding = Encoding::GetEncoding(&quot;us-ascii&quot;,\n        gcnew EncoderReplacementFallback(&quot;(unknown)&quot;),\n        gcnew DecoderReplacementFallback(&quot;(error)&quot;));\n    String^ inputString = &quot;XYZ&quot;;\n    String^ decodedString;\n    String^ twoNewLines = Environment::NewLine + Environment::NewLine;\n    array&lt;Byte&gt;^ encodedBytes = gcnew array&lt;Byte&gt;(\n        asciiEncoding-&gt;GetByteCount(inputString));\n    int numberOfEncodedBytes = 0;\n\n    // ---------------------------------------------------------------------\n    Console::Clear();\n\n    // Display the name of the encoding.\n    Console::WriteLine(&quot;The name of the encoding is \\&quot;{0}\\&quot;.{1}&quot;,\n        asciiEncoding-&gt;WebName, Environment::NewLine);\n\n    // Display the input string in text.\n    Console::WriteLine(&quot;Input string ({0} characters): \\&quot;{1}\\&quot;&quot;, \n        inputString-&gt;Length, inputString);\n\n    // Display the input string in hexadecimal.\n    Console::Write(&quot;Input string in hexadecimal: &quot;);\n    for each (char c in inputString) \n    {\n        Console::Write(&quot;0x{0:X2} &quot;, c);\n    }\n    Console::Write(twoNewLines);\n\n    // ---------------------------------------------------------------------\n    // Encode the input string. \n\n    Console::WriteLine(&quot;Encode the input string...&quot;);\n    numberOfEncodedBytes = asciiEncoding-&gt;GetBytes(inputString, 0,\n        inputString-&gt;Length, encodedBytes, 0);\n\n    // Display the encoded bytes.\n    Console::WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):{1}&quot;, \n        numberOfEncodedBytes, Environment::NewLine);\n    for each (Byte b in encodedBytes)\n    {\n        Console::Write(&quot;0x{0:X2} &quot;, b);\n    }\n    Console::Write(twoNewLines);\n\n    // ---------------------------------------------------------------------\n\n    // Replace the encoded byte sequences for the characters &#39;X&#39; and &#39;Z&#39;\n    // with the value 0xFF, which is outside the valid range of 0x00 to 0x7F\n    // for ASCIIEncoding. The resulting byte sequence is actually the\n    // beginning of this code example because it is the input to the decoder\n    // operation, and is equivalent to a corrupted or improperly encoded\n    // byte sequence. \n\n    encodedBytes[0] = 0xFF;\n    encodedBytes[2] = 0xFF;\n\n    Console::WriteLine(&quot;Display the corrupted byte sequence...&quot;);\n    Console::WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):{1}&quot;, \n        numberOfEncodedBytes, Environment::NewLine);\n    for each (Byte b in encodedBytes)\n    {\n        Console::Write(&quot;0x{0:X2} &quot;, b);\n    }\n    Console::Write(twoNewLines);\n\n    // ---------------------------------------------------------------------\n    // Decode the encoded bytes.\n\n    Console::WriteLine(&quot;Compare the decoded bytes to the input string...&quot;);\n    decodedString = asciiEncoding-&gt;GetString(encodedBytes);\n\n    // Display the input string and the decoded string for comparison.\n    Console::WriteLine(&quot;Input string:  \\&quot;{0}\\&quot;&quot;, inputString);\n    Console::WriteLine(&quot;Decoded string:\\&quot;{0}\\&quot;&quot;, decodedString);\n}\n/*\nThis code example produces the following results:\n\nThe name of the encoding is &quot;us-ascii&quot;.\n\nInput string (3 characters): &quot;XYZ&quot;\nInput string in hexadecimal: 0x58 0x59 0x5A\n\nEncode the input string...\nEncoded bytes in hexadecimal (3 bytes):\n\n0x58 0x59 0x5A\n\nDisplay the corrupted byte sequence...\nEncoded bytes in hexadecimal (3 bytes):\n\n0xFF 0x59 0xFF\n\nCompare the decoded bytes to the input string...\nInput string:  &quot;XYZ&quot;\nDecoded string:&quot;(error)Y(error)&quot;\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"sys.txt.fallbackDecRpl#1\">&#39; This example demonstrates the DecoderReplacementFallback class.\nImports System\nImports System.Text\n\nClass Sample\n    Public Shared Sub Main() \n        \n        &#39; Create an encoding, which is equivalent to calling the \n        &#39; ASCIIEncoding class constructor. \n        &#39; The DecoderReplacementFallback parameter specifies that the \n        &#39; string &quot;(error)&quot; is to replace characters that cannot be decoded. \n        &#39; An encoder replacement fallback is also specified, but in this code\n        &#39; example the encoding operation cannot fail.  \n\n        Dim erf As New EncoderReplacementFallback(&quot;(unknown)&quot;)\n        Dim drf As New DecoderReplacementFallback(&quot;(error)&quot;)\n        Dim ae As Encoding = Encoding.GetEncoding(&quot;us-ascii&quot;, erf, drf)\n        Dim inputString As String = &quot;XYZ&quot;\n        Dim decodedString As String\n        Dim twoNewLines As String = vbCrLf &amp; vbCrLf\n        Dim numberOfEncodedBytes As Integer = ae.GetByteCount(inputString)\n        &#39; Counteract the compiler implicitly adding an extra element.\n        Dim encodedBytes(numberOfEncodedBytes - 1) As Byte\n        \n        &#39; --------------------------------------------------------------------------\n        Console.Clear()\n        \n        &#39; Display the name of the encoding.\n        Console.WriteLine(&quot;The name of the encoding is &quot;&quot;{0}&quot;&quot;.&quot; &amp; vbCrLf, ae.WebName)\n        \n        &#39; Display the input string in text.\n        Console.WriteLine(&quot;Input string ({0} characters): &quot;&quot;{1}&quot;&quot;&quot;, _\n                          inputString.Length, inputString)\n        \n        &#39; Display the input string in hexadecimal. \n        &#39; Each element is converted to an integer with Convert.ToInt32.\n        Console.Write(&quot;Input string in hexadecimal: &quot;)\n        Dim c As Char\n        For Each c In  inputString.ToCharArray()\n            Console.Write(&quot;0x{0:X2} &quot;, Convert.ToInt32(c))\n        Next c\n        Console.Write(twoNewLines)\n        \n        &#39; --------------------------------------------------------------------------\n        &#39; Encode the input string. \n        Console.WriteLine(&quot;Encode the input string...&quot;)\n        numberOfEncodedBytes = ae.GetBytes(inputString, 0, inputString.Length, _\n                                           encodedBytes, 0)\n        \n        &#39; Display the encoded bytes. \n        &#39; Each element is converted to an integer with Convert.ToInt32.\n        Console.WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):&quot; &amp; vbCrLf, _\n                                                         numberOfEncodedBytes)\n        Dim b As Byte\n        For Each b In  encodedBytes\n            Console.Write(&quot;0x{0:X2} &quot;, Convert.ToInt32(b))\n        Next b\n        Console.Write(twoNewLines)\n        \n        &#39; --------------------------------------------------------------------------\n        &#39; Replace the encoded byte sequences for the characters &#39;X&#39; and &#39;Z&#39; with the \n        &#39; value 0xFF, which is outside the valid range of 0x00 to 0x7F for \n        &#39; ASCIIEncoding. The resulting byte sequence is actually the beginning of \n        &#39; this code example because it is the input to the decoder operation, and \n        &#39; is equivalent to a corrupted or improperly encoded byte sequence. \n\n        encodedBytes(0) = &amp;HFF\n        encodedBytes(2) = &amp;HFF\n        \n        Console.WriteLine(&quot;Display the corrupted byte sequence...&quot;)\n        Console.WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):&quot; &amp; vbCrLf, _\n                           numberOfEncodedBytes)\n        For Each b In  encodedBytes\n            Console.Write(&quot;0x{0:X2} &quot;, Convert.ToInt32(b))\n        Next b\n        Console.Write(twoNewLines)\n        \n        &#39; --------------------------------------------------------------------------\n        &#39; Decode the encoded bytes.\n        Console.WriteLine(&quot;Compare the decoded bytes to the input string...&quot;)\n        decodedString = ae.GetString(encodedBytes)\n        \n        &#39; Display the input string and the decoded string for comparison.\n        Console.WriteLine(&quot;Input string:  &quot;&quot;{0}&quot;&quot;&quot;, inputString)\n        Console.WriteLine(&quot;Decoded string:&quot;&quot;{0}&quot;&quot;&quot;, decodedString)\n    \n    End Sub &#39;Main\nEnd Class &#39;Sample\n&#39;\n&#39;This code example produces the following results:\n&#39;\n&#39;The name of the encoding is &quot;us-ascii&quot;.\n&#39;\n&#39;Input string (3 characters): &quot;XYZ&quot;\n&#39;Input string in hexadecimal: 0x58 0x59 0x5A\n&#39;\n&#39;Encode the input string...\n&#39;Encoded bytes in hexadecimal (3 bytes):\n&#39;\n&#39;0x58 0x59 0x5A\n&#39;\n&#39;Display the corrupted byte sequence...\n&#39;Encoded bytes in hexadecimal (3 bytes):\n&#39;\n&#39;0xFF 0x59 0xFF\n&#39;\n&#39;Compare the decoded bytes to the input string...\n&#39;Input string:  &quot;XYZ&quot;\n&#39;Decoded string:&quot;(error)Y(error)&quot;\n&#39;\n</code></pre><pre><code class=\"lang-cs\" name=\"sys.txt.fallbackDecRpl#1\">// This example demonstrates the DecoderReplacementFallback class.\n\nusing System;\nusing System.Text;\n\nclass Sample \n{\n    public static void Main() \n    {\n\n// Create an encoding, which is equivalent to calling the \n// ASCIIEncoding class constructor. \n// The DecoderReplacementFallback parameter specifies that the \n// string &quot;(error)&quot; is to replace characters that cannot be decoded. \n// An encoder replacement fallback is also specified, but in this code\n// example the encoding operation cannot fail.  \n\n    Encoding ae = Encoding.GetEncoding(\n                  &quot;us-ascii&quot;,\n                  new EncoderReplacementFallback(&quot;(unknown)&quot;), \n                  new DecoderReplacementFallback(&quot;(error)&quot;));\n    string inputString = &quot;XYZ&quot;;\n    string decodedString;\n    string twoNewLines = &quot;\\n\\n&quot;;\n    byte[] encodedBytes = new byte[ae.GetByteCount(inputString)];\n    int numberOfEncodedBytes = 0;\n\n// --------------------------------------------------------------------------\n    Console.Clear();\n\n// Display the name of the encoding.\n    Console.WriteLine(&quot;The name of the encoding is \\&quot;{0}\\&quot;.\\n&quot;, ae.WebName);\n\n// Display the input string in text.\n    Console.WriteLine(&quot;Input string ({0} characters): \\&quot;{1}\\&quot;&quot;, \n                       inputString.Length, inputString);\n\n// Display the input string in hexadecimal.\n    Console.Write(&quot;Input string in hexadecimal: &quot;);\n    foreach (char c in inputString.ToCharArray()) \n        {\n        Console.Write(&quot;0x{0:X2} &quot;, (int)c);\n        }\n    Console.Write(twoNewLines);\n\n// --------------------------------------------------------------------------\n// Encode the input string. \n\n    Console.WriteLine(&quot;Encode the input string...&quot;);\n    numberOfEncodedBytes = ae.GetBytes(inputString, 0, inputString.Length, \n                                       encodedBytes, 0);\n\n// Display the encoded bytes.\n    Console.WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):\\n&quot;, \n                       numberOfEncodedBytes);\n    foreach (byte b in encodedBytes)\n        {\n        Console.Write(&quot;0x{0:X2} &quot;, (int)b);\n        }\n    Console.Write(twoNewLines);\n\n// --------------------------------------------------------------------------\n\n// Replace the encoded byte sequences for the characters &#39;X&#39; and &#39;Z&#39; with the \n// value 0xFF, which is outside the valid range of 0x00 to 0x7F for \n// ASCIIEncoding. The resulting byte sequence is actually the beginning of \n// this code example because it is the input to the decoder operation, and \n// is equivalent to a corrupted or improperly encoded byte sequence. \n\n    encodedBytes[0] = 0xFF;\n    encodedBytes[2] = 0xFF;\n\n    Console.WriteLine(&quot;Display the corrupted byte sequence...&quot;);\n    Console.WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):\\n&quot;, \n                       numberOfEncodedBytes);\n    foreach (byte b in encodedBytes)\n        {\n        Console.Write(&quot;0x{0:X2} &quot;, (int)b);\n        }\n    Console.Write(twoNewLines);\n\n// --------------------------------------------------------------------------\n// Decode the encoded bytes.\n\n    Console.WriteLine(&quot;Compare the decoded bytes to the input string...&quot;);\n    decodedString = ae.GetString(encodedBytes);\n\n// Display the input string and the decoded string for comparison.\n    Console.WriteLine(&quot;Input string:  \\&quot;{0}\\&quot;&quot;, inputString);\n    Console.WriteLine(&quot;Decoded string:\\&quot;{0}\\&quot;&quot;, decodedString);\n    }\n}\n/*\nThis code example produces the following results:\n\nThe name of the encoding is &quot;us-ascii&quot;.\n\nInput string (3 characters): &quot;XYZ&quot;\nInput string in hexadecimal: 0x58 0x59 0x5A\n\nEncode the input string...\nEncoded bytes in hexadecimal (3 bytes):\n\n0x58 0x59 0x5A\n\nDisplay the corrupted byte sequence...\nEncoded bytes in hexadecimal (3 bytes):\n\n0xFF 0x59 0xFF\n\nCompare the decoded bytes to the input string...\nInput string:  &quot;XYZ&quot;\nDecoded string:&quot;(error)Y(error)&quot;\n\n*/\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. For example, an <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> object cannot decode a byte value greater than 0x7F. If an input byte sequence cannot be converted to an output character, a DecoderReplacementFallback object emits a replacement string into the output to represent the original input byte sequence. The conversion process then continues to decode the remainder of the original input.  </p>\n<p> The replacement string used by a DecoderReplacementFallback object is determined by the call to its class constructor. Two options are available:  </p>\n<ul>\n<li><p>Replacement with the default character. If you call the <a class=\"xref\" href=\"system.text.decoderreplacementfallback#System_Text_DecoderReplacementFallback__ctor\" data-linktype=\"relative-path\">DecoderReplacementFallback()</a> constructor, the replacement character is &quot;?&quot; (U+003F).  </p>\n</li>\n<li><p>Replacement with a string of your choice. If you call the <a class=\"xref\" href=\"system.text.decoderreplacementfallback#System_Text_DecoderReplacementFallback__ctor_System_String_\" data-linktype=\"relative-path\">DecoderReplacementFallback(String)</a> constructor, you provide the replacement string.  </p>\n</li>\n</ul>\n<p> This class is one of two .NET Framework classes that implement different fallback strategies for handling decoding conversion failures. The other class is the <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a> class, which throws a <a class=\"xref\" href=\"system.text.decoderfallbackexception\" data-linktype=\"relative-path\">DecoderFallbackException</a> when an invalid byte sequence is encountered.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Text_DecoderReplacementFallback__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_DecoderReplacementFallback__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DecoderReplacementFallback()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DecoderReplacementFallback ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default, the replacement string that is the value of this <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object is &quot;?&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Text_DecoderReplacementFallback__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_DecoderReplacementFallback__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DecoderReplacementFallback(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> class using a specified replacement string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DecoderReplacementFallback (string replacement);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>replacement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that is emitted in a decoding operation in place of an input byte sequence that cannot be decoded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>replacement</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>replacement</code> contains an invalid surrogate pair. In other words, the surrogate pair does not consist of one high surrogate component followed by one low surrogate component.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>replacement</code> parameter initializes the replacement string that is the value of the <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object. A commonly used value is the Unicode &quot;Replacement Character&quot; (U+FFFD), which is specifically intended to replace an incoming character having a value that is unknown or unrepresentable in Unicode.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Text_DecoderReplacementFallback_DefaultString_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_DecoderReplacementFallback_DefaultString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultString</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the replacement string that is the value of the <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DefaultString { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A substitute string that is emitted in place of an input byte sequence that cannot be decoded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Text_DecoderReplacementFallback_MaxCharCount_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_DecoderReplacementFallback_MaxCharCount\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxCharCount</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of characters in the replacement string for the <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int MaxCharCount { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of characters in the string that is emitted in place of a byte sequence that cannot be decoded, that is, the length of the string returned by the <span class=\"xref\">stem.Text.DecoderReplacementFallback.DefaultString*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Text_DecoderReplacementFallback_CreateFallbackBuffer_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_DecoderReplacementFallback_CreateFallbackBuffer\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateFallbackBuffer()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <a class=\"xref\" href=\"system.text.decoderfallbackbuffer\" data-linktype=\"relative-path\">DecoderFallbackBuffer</a> object that is initialized with the replacement string of this <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Text.DecoderFallbackBuffer CreateFallbackBuffer ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallbackbuffer\" data-linktype=\"relative-path\">DecoderFallbackBuffer</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.text.decoderfallbackbuffer\" data-linktype=\"relative-path\">DecoderFallbackBuffer</a> object that specifies a string to use instead of the original decoding operation input.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Text_DecoderReplacementFallback_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_DecoderReplacementFallback_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether the value of a specified object is equal to the <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>value</code> is a <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object having a <span class=\"xref\">stem.Text.DecoderReplacementFallback.DefaultString*</span> property that is equal to the <span class=\"xref\">stem.Text.DecoderReplacementFallback.DefaultString*</span> property of the current <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Text_DecoderReplacementFallback_GetHashCode_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_DecoderReplacementFallback_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the hash code for the value of the <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The hash code of the value of the object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of a <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a> object is the value of its <a class=\"xref\" href=\"system.text.decoderreplacementfallback#System_Text_DecoderReplacementFallback_DefaultString_\" data-linktype=\"relative-path\">DefaultString</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Text.DecoderReplacementFallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Text.DecoderReplacementFallback\">\r\n<meta name=\"APIName\" content=\"System.Text.DecoderReplacementFallback..ctor\">\r\n<meta name=\"APIName\" content=\"System.Text.DecoderReplacementFallback.CreateFallbackBuffer\">\r\n<meta name=\"APIName\" content=\"System.Text.DecoderReplacementFallback.DefaultString\">\r\n<meta name=\"APIName\" content=\"System.Text.DecoderReplacementFallback.Equals\">\r\n<meta name=\"APIName\" content=\"System.Text.DecoderReplacementFallback.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Text.DecoderReplacementFallback.MaxCharCount\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"df51b351-19b5-f8ce-b728-7f7f36340c88\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an output character. The fallback emits a user-specified replacement string in…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.text/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Text.DecoderReplacementFallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Text.DecoderReplacementFallback.yml","open_to_public_contributors":false,"api_name":["System.Text.DecoderReplacementFallback","System.Text.DecoderReplacementFallback..ctor","System.Text.DecoderReplacementFallback.CreateFallbackBuffer","System.Text.DecoderReplacementFallback.DefaultString","System.Text.DecoderReplacementFallback.Equals","System.Text.DecoderReplacementFallback.GetHashCode","System.Text.DecoderReplacementFallback.MaxCharCount"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Text.DecoderReplacementFallback","System::Text::DecoderReplacementFallback","System.Text.DecoderReplacementFallback.#ctor","System::Text::DecoderReplacementFallback::#ctor","System.Text.DecoderReplacementFallback.CreateFallbackBuffer","System::Text::DecoderReplacementFallback::CreateFallbackBuffer","System.Text.DecoderReplacementFallback.DefaultString","System::Text::DecoderReplacementFallback::DefaultString","System.Text.DecoderReplacementFallback.Equals","System::Text::DecoderReplacementFallback::Equals","System.Text.DecoderReplacementFallback.GetHashCode","System::Text::DecoderReplacementFallback::GetHashCode","System.Text.DecoderReplacementFallback.MaxCharCount","System::Text::DecoderReplacementFallback::MaxCharCount"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"df51b351-19b5-f8ce-b728-7f7f36340c88","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Text/DecoderReplacementFallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DecoderReplacementFallback class | Microsoft Docs","_op_ogTitle":"DecoderReplacementFallback class","description":"Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an output character. The fallback emits a user-specified replacement string in…","toc_asset_id":"api/_splitted/System.Text/toc.json","toc_rel":"_splitted/System.Text/toc.json","source_url":"","ms.assetid":"System.Text.DecoderReplacementFallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.text.decoderreplacementfallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.text.decoderreplacementfallback","fileRelativePath":"api/System.Text.DecoderReplacementFallback.html"},"themesRelativePathToOutputRoot":"_themes/"}