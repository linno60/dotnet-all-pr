{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CodeLabeledStatement</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a labeled statement or a stand-alone label.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\n[ECMA2Yaml.Models.ECMAAttribute]\npublic class CodeLabeledStatement : System.CodeDom.CodeStatement</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeobject\" data-linktype=\"relative-path\">CodeObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a></span></div><span class=\"lang-csharp\">CodeLabeledStatement</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeobject#System_CodeDom_CodeObject_UserData\" data-linktype=\"relative-path\">UserData</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement#System_CodeDom_CodeStatement_EndDirectives\" data-linktype=\"relative-path\">EndDirectives</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement#System_CodeDom_CodeStatement_LinePragma\" data-linktype=\"relative-path\">LinePragma</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement#System_CodeDom_CodeStatement_StartDirectives\" data-linktype=\"relative-path\">StartDirectives</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example code demonstrates use of a <a class=\"xref\" href=\"system.codedom.codegotostatement\" data-linktype=\"relative-path\">CodeGotoStatement</a> and a CodeLabeledStatement to redirect program flow.  </p>\n<pre><code class=\"lang-cpp\" name=\"CodeGotoStatementExample#2\">// Declares a type to contain the example code.\nCodeTypeDeclaration^ type1 = gcnew CodeTypeDeclaration( &quot;Type1&quot; );\n\n// Declares an entry point method.\nCodeEntryPointMethod^ entry1 = gcnew CodeEntryPointMethod;\ntype1-&gt;Members-&gt;Add( entry1 );\n\n// Adds a goto statement to continue program flow at the &quot;JumpToLabel&quot; label.\nCodeGotoStatement^ goto1 = gcnew CodeGotoStatement( &quot;JumpToLabel&quot; );\nentry1-&gt;Statements-&gt;Add( goto1 );\n\n// Invokes Console.WriteLine to print &quot;Test Output&quot;, which is skipped by the goto statement.\narray&lt;CodeExpression^&gt;^temp = {gcnew CodePrimitiveExpression( &quot;Test Output.&quot; )};\nCodeMethodInvokeExpression^ method1 = gcnew CodeMethodInvokeExpression( gcnew CodeTypeReferenceExpression( &quot;System.Console&quot; ),&quot;WriteLine&quot;,temp );\nentry1-&gt;Statements-&gt;Add( method1 );\n\n// Declares a label named &quot;JumpToLabel&quot; associated with a method to output a test string using Console.WriteLine.\narray&lt;CodeExpression^&gt;^temp2 = {gcnew CodePrimitiveExpression( &quot;Output from labeled statement.&quot; )};\nCodeMethodInvokeExpression^ method2 = gcnew CodeMethodInvokeExpression( gcnew CodeTypeReferenceExpression( &quot;System.Console&quot; ),&quot;WriteLine&quot;,temp2 );\nCodeLabeledStatement^ label1 = gcnew CodeLabeledStatement( &quot;JumpToLabel&quot;,gcnew CodeExpressionStatement( method2 ) );\nentry1-&gt;Statements-&gt;Add( label1 );\n\n// A C# code generator produces the following source code for the preceeding example code:\n//    public class Type1 \n//    {\n//        \n//        public static void Main() \n//        {\n//            goto JumpToLabel;\n//            System.Console.WriteLine(&quot;Test Output&quot;);\n//            JumpToLabel:\n//            System.Console.WriteLine(&quot;Output from labeled statement.&quot;);\n//        }\n//    }\n</code></pre><pre><code class=\"lang-cs\" name=\"CodeGotoStatementExample#2\">// Declares a type to contain the example code.\nCodeTypeDeclaration type1 = new CodeTypeDeclaration(&quot;Type1&quot;);            \n// Declares an entry point method.\nCodeEntryPointMethod entry1 = new CodeEntryPointMethod();                        \ntype1.Members.Add( entry1 );\n// Adds a goto statement to continue program flow at the &quot;JumpToLabel&quot; label.\nCodeGotoStatement goto1 = new CodeGotoStatement(&quot;JumpToLabel&quot;);\nentry1.Statements.Add( goto1 );\n// Invokes Console.WriteLine to print &quot;Test Output&quot;, which is skipped by the goto statement.\nCodeMethodInvokeExpression method1 = new CodeMethodInvokeExpression(\n    new CodeTypeReferenceExpression(&quot;System.Console&quot;), &quot;WriteLine&quot;, new CodePrimitiveExpression(&quot;Test Output.&quot;));\nentry1.Statements.Add( method1 );\n// Declares a label named &quot;JumpToLabel&quot; associated with a method to output a test string using Console.WriteLine.\nCodeMethodInvokeExpression method2 = new CodeMethodInvokeExpression(\n    new CodeTypeReferenceExpression(&quot;System.Console&quot;), &quot;WriteLine&quot;, new CodePrimitiveExpression(&quot;Output from labeled statement.&quot;));\nCodeLabeledStatement label1 = new CodeLabeledStatement(&quot;JumpToLabel&quot;, new CodeExpressionStatement(method2) );\nentry1.Statements.Add( label1 );\n\n// A C# code generator produces the following source code for the preceeding example code:\n\n//    public class Type1 \n//    {\n//        \n//        public static void Main() \n//        {\n//            goto JumpToLabel;\n//            System.Console.WriteLine(&quot;Test Output&quot;);\n//            JumpToLabel:\n//            System.Console.WriteLine(&quot;Output from labeled statement.&quot;);\n//        }\n//    }\n</code></pre><pre><code class=\"lang-vb\" name=\"CodeGotoStatementExample#2\">&#39; Declares a type to contain the example code.\nDim type1 As New CodeTypeDeclaration(&quot;Type1&quot;)\n&#39; Declares an entry point method.\nDim entry1 As New CodeEntryPointMethod()\ntype1.Members.Add(entry1)\n&#39; Adds a goto statement to continue program flow at the &quot;JumpToLabel&quot; label.\nDim goto1 As New CodeGotoStatement(&quot;JumpToLabel&quot;)\nentry1.Statements.Add(goto1)\n&#39; Invokes Console.WriteLine to print &quot;Test Output&quot;, which is skipped by the goto statement.\nDim method1 As New CodeMethodInvokeExpression(New CodeTypeReferenceExpression(&quot;System.Console&quot;), &quot;WriteLine&quot;, New CodePrimitiveExpression(&quot;Test Output.&quot;))\nentry1.Statements.Add(method1)\n&#39; Declares a label named &quot;JumpToLabel&quot; associated with a method to output a test string using Console.WriteLine.\nDim method2 As New CodeMethodInvokeExpression(New CodeTypeReferenceExpression(&quot;System.Console&quot;), &quot;WriteLine&quot;, New CodePrimitiveExpression(&quot;Output from labeled statement.&quot;))\nDim label1 As New CodeLabeledStatement(&quot;JumpToLabel&quot;, New CodeExpressionStatement(method2))\nentry1.Statements.Add(label1)\n\n&#39; A Visual Basic code generator produces the following source code for the preceeding example code:\n\n&#39;   Public Class Type1\n&#39;\n&#39;       Public Shared Sub Main()\n&#39;           GoTo JumpToLabel\n&#39;           System.Console.WriteLine(&quot;Test Output&quot;)\n&#39;           JumpToLabel:\n&#39;           System.Console.WriteLine(&quot;Output from labeled statement.&quot;)\n&#39;       End Sub\n&#39;   End Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>CodeLabeledStatement represents a label and optionally, an associated statement. A label can be used to indicate the target of a <a class=\"xref\" href=\"system.codedom.codegotostatement\" data-linktype=\"relative-path\">CodeGotoStatement</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.codedom.codelabeledstatement#System_CodeDom_CodeLabeledStatement_Statement_\" data-linktype=\"relative-path\">Statement</a> property is optional. To create only a label, leave the <a class=\"xref\" href=\"system.codedom.codelabeledstatement#System_CodeDom_CodeLabeledStatement_Statement_\" data-linktype=\"relative-path\">Statement</a> property uninitialized.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Not all languages support <code>goto</code> statements and labels, so you should test wheter a code generator supports <code>goto</code> statements and labels by calling the <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator#System_CodeDom_Compiler_ICodeGenerator_Supports_\" data-linktype=\"relative-path\">Supports</a> method with the <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> flag.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeLabeledStatement__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeLabeledStatement__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeLabeledStatement()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codelabeledstatement\" data-linktype=\"relative-path\">CodeLabeledStatement</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeLabeledStatement ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeLabeledStatement__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeLabeledStatement__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeLabeledStatement(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codelabeledstatement\" data-linktype=\"relative-path\">CodeLabeledStatement</a> class using the specified label name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeLabeledStatement (string label);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>label</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the label.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeLabeledStatement__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeLabeledStatement__ctor_System_String_System_CodeDom_CodeStatement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeLabeledStatement(String, CodeStatement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codelabeledstatement\" data-linktype=\"relative-path\">CodeLabeledStatement</a> class using the specified label name and statement.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeLabeledStatement (string label, System.CodeDom.CodeStatement statement);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>label</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the label.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>statement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> to associate with the label.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeLabeledStatement_Label_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeLabeledStatement_Label\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Label</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the label.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Label { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the label.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeLabeledStatement_Statement_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeLabeledStatement_Statement\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Statement</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the optional associated statement.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.CodeDom.CodeStatement Statement { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> that indicates the statement associated with the label.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If this property is not set, the <a class=\"xref\" href=\"system.codedom.codelabeledstatement\" data-linktype=\"relative-path\">CodeLabeledStatement</a> represents only a label, rather than a labeled statement.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodeLabeledStatement.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeLabeledStatement\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeLabeledStatement..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeLabeledStatement.Label\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeLabeledStatement.Statement\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"48f05508-19f7-0ce5-8f33-34d5597875c3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a labeled statement or a stand-alone label.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.codedom/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodeLabeledStatement\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodeLabeledStatement.yml","open_to_public_contributors":false,"api_name":["System.CodeDom.CodeLabeledStatement","System.CodeDom.CodeLabeledStatement..ctor","System.CodeDom.CodeLabeledStatement.Label","System.CodeDom.CodeLabeledStatement.Statement"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodeLabeledStatement","System::CodeDom::CodeLabeledStatement","System.CodeDom.CodeLabeledStatement.#ctor","System::CodeDom::CodeLabeledStatement::#ctor","System.CodeDom.CodeLabeledStatement.Label","System::CodeDom::CodeLabeledStatement::Label","System.CodeDom.CodeLabeledStatement.Statement","System::CodeDom::CodeLabeledStatement::Statement"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"48f05508-19f7-0ce5-8f33-34d5597875c3","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.CodeDom/CodeLabeledStatement.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeLabeledStatement class | Microsoft Docs","_op_ogTitle":"CodeLabeledStatement class","description":"Represents a labeled statement or a stand-alone label.\n","toc_asset_id":"api/_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodeLabeledStatement","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codelabeledstatement","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codelabeledstatement","fileRelativePath":"api/System.CodeDom.CodeLabeledStatement.html"},"themesRelativePathToOutputRoot":"_themes/"}