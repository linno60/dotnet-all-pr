{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">RepeatDirection</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the direction in which items of a list control are displayed.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum RepeatDirection</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">RepeatDirection</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<pre><code class=\"lang-vb\" name=\"DataListLayout#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataList control.\n         Dim dt As DataTable = New DataTable()\n         dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n         dt.Columns.Add(New DataColumn(&quot;ImageValue&quot;, GetType(String)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 8 \n\n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Description for item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n            dr(3) = &quot;Image&quot; &amp; i.ToString() &amp; &quot;.jpg&quot;\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n\n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n     \n            ItemsList.DataSource = CreateDataSource()\n            ItemsList.DataBind()\n         \n         End If\n\n      End Sub\n \n      Sub Button_Click(sender As Object, e As EventArgs) \n \n         &#39; Set the repeat direction based on the selected value of the\n         &#39; DirectionList DropDownList control.\n         ItemsList.RepeatDirection = _\n             CType(DirectionList.SelectedIndex, RepeatDirection)\n\n         &#39; Set the repeat layout based on the selected value of the\n         &#39; LayoutList DropDownList control.\n         ItemsList.RepeatLayout = CType(LayoutList.SelectedIndex, RepeatLayout)\n\n         &#39; Set the number of columns to display based on the selected\n         &#39; value of the ColumnsList DropDownList control.\n         ItemsList.RepeatColumns = ColumnsList.SelectedIndex\n\n         &#39; Show or hide the gridlines based on the value of the\n         &#39; ShowBorderCheckBox. Note that gridlines are displayed\n         &#39; only if the RepeatLayout property is set to Table.\n         If ShowBorderCheckBox.Checked _\n             And ItemsList.RepeatLayout = RepeatLayout.Table Then \n\n            ItemsList.BorderWidth = Unit.Pixel(1)\n            ItemsList.GridLines = GridLines.Both\n         \n         Else  \n    \n            ItemsList.BorderWidth = Unit.Pixel(0)\n            ItemsList.GridLines = GridLines.None\n         \n         End If\n    \n      End Sub    \n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataList Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           BorderColor=&quot;black&quot;\n           CellPadding=&quot;5&quot;\n           CellSpacing=&quot;5&quot;\n           RepeatDirection=&quot;Vertical&quot;\n           RepeatLayout=&quot;Table&quot;\n           RepeatColumns=&quot;0&quot;\n           BorderWidth=&quot;0&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            List of items\n\n         &lt;/HeaderTemplate&gt;\n               \n         &lt;ItemTemplate&gt;\n\n            Description: &lt;br /&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price: &lt;%# DataBinder.Eval(Container.DataItem, &quot;CurrencyValue&quot;, &quot;{0:c}&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            &lt;asp:Image id=&quot;ProductImage&quot;\n                 AlternatingText=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;&#39;\n                 ImageUrl=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;ImageValue&quot;) %&gt;&#39;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n \n      &lt;hr /&gt;\n\n      &lt;table cellpadding=&quot;5&quot;&gt;\n\n         &lt;tr&gt;\n\n            &lt;th&gt;\n\n               Repeat direction:\n\n            &lt;/th&gt;\n\n            &lt;th&gt;\n\n               Repeat layout:\n\n            &lt;/th&gt;\n\n            &lt;th&gt;\n\n               Repeat columns:\n\n            &lt;/th&gt;\n\n            &lt;th&gt;\n\n               &lt;asp:CheckBox id=&quot;ShowBorderCheckBox&quot;\n                    Text=&quot;Show border&quot;\n                    Checked=&quot;False&quot; \n                    runat=&quot;server&quot; /&gt;\n\n            &lt;/th&gt;\n\n         &lt;/tr&gt;\n\n         &lt;tr&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:DropDownList id=&quot;DirectionList&quot; \n                    runat=&quot;server&quot;&gt;\n\n                  &lt;asp:ListItem&gt;Horizontal&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem Selected=&quot;True&quot;&gt;Vertical&lt;/asp:ListItem&gt;\n\n               &lt;/asp:DropDownList&gt;\n\n            &lt;/td&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:DropDownList id=&quot;LayoutList&quot; \n                    runat=&quot;server&quot;&gt;\n\n                  &lt;asp:ListItem Selected=&quot;True&quot;&gt;Table&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;Flow&lt;/asp:ListItem&gt;\n\n               &lt;/asp:DropDownList&gt;\n\n            &lt;/td&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:DropDownList id=&quot;ColumnsList&quot; \n                    runat=&quot;server&quot;&gt;\n\n                  &lt;asp:ListItem Selected=&quot;True&quot;&gt;0&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;1&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;2&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;3&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;4&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;5&lt;/asp:ListItem&gt;\n\n               &lt;/asp:DropDownList&gt;\n\n            &lt;/td&gt;\n\n            &lt;td&gt;\n\n               &amp;nbsp;\n\n            &lt;/td&gt;\n\n\n         &lt;/tr&gt;\n\n      &lt;/table&gt;     \n         \n      &lt;asp:LinkButton id=&quot;RefreshButton&quot; \n           Text=&quot;Refresh DataList&quot; \n           OnClick=&quot;Button_Click&quot; \n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataListLayout#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataList control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n         dt.Columns.Add(new DataColumn(&quot;ImageValue&quot;, typeof(String)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Description for item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n            dr[3] = &quot;Image&quot; + i.ToString() + &quot;.jpg&quot;;\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            ItemsList.DataSource = CreateDataSource();\n            ItemsList.DataBind();\n         }\n\n      }\n \n      void Button_Click(Object sender, EventArgs e) \n      {\n \n         // Set the repeat direction based on the selected value of the\n         // DirectionList DropDownList control.\n         ItemsList.RepeatDirection = \n             (RepeatDirection)DirectionList.SelectedIndex;\n\n         // Set the repeat layout based on the selected value of the\n         // LayoutList DropDownList control.\n         ItemsList.RepeatLayout = (RepeatLayout)LayoutList.SelectedIndex;\n\n         // Set the number of columns to display based on the selected\n         // value of the ColumnsList DropDownList control.\n         ItemsList.RepeatColumns = ColumnsList.SelectedIndex;\n\n         // Show or hide the gridlines based on the value of the\n         // ShowBorderCheckBox property. Note that gridlines are displayed\n         // only if the RepeatLayout property is set to Table.\n         if ((ShowBorderCheckBox.Checked) \n             &amp;&amp; (ItemsList.RepeatLayout == RepeatLayout.Table)) \n         {\n            ItemsList.BorderWidth = Unit.Pixel(1);\n            ItemsList.GridLines = GridLines.Both;\n         }    \n         else  \n         {\n            ItemsList.BorderWidth = Unit.Pixel(0);\n            ItemsList.GridLines = GridLines.None;\n         }\n    \n      }    \n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataList Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           BorderColor=&quot;black&quot;\n           CellPadding=&quot;5&quot;\n           CellSpacing=&quot;5&quot;\n           RepeatDirection=&quot;Vertical&quot;\n           RepeatLayout=&quot;Table&quot;\n           RepeatColumns=&quot;0&quot;\n           BorderWidth=&quot;0&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            List of items\n\n         &lt;/HeaderTemplate&gt;\n               \n         &lt;ItemTemplate&gt;\n\n            Description: &lt;br /&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price: &lt;%# DataBinder.Eval(Container.DataItem, &quot;CurrencyValue&quot;, &quot;{0:c}&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            &lt;asp:Image id=&quot;ProductImage&quot;\n                 AlternatingText=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;&#39;\n                 ImageUrl=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;ImageValue&quot;) %&gt;&#39;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n \n      &lt;hr /&gt;\n\n      &lt;table cellpadding=&quot;5&quot;&gt;\n\n         &lt;tr&gt;\n\n            &lt;th&gt;\n\n               Repeat direction:\n\n            &lt;/th&gt;\n\n            &lt;th&gt;\n\n               Repeat layout:\n\n            &lt;/th&gt;\n\n            &lt;th&gt;\n\n               Repeat columns:\n\n            &lt;/th&gt;\n\n            &lt;th&gt;\n\n               &lt;asp:CheckBox id=&quot;ShowBorderCheckBox&quot;\n                    Text=&quot;Show border&quot;\n                    Checked=&quot;False&quot; \n                    runat=&quot;server&quot; /&gt;\n\n            &lt;/th&gt;\n\n         &lt;/tr&gt;\n\n         &lt;tr&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:DropDownList id=&quot;DirectionList&quot; \n                    runat=&quot;server&quot;&gt;\n\n                  &lt;asp:ListItem&gt;Horizontal&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem Selected=&quot;True&quot;&gt;Vertical&lt;/asp:ListItem&gt;\n\n               &lt;/asp:DropDownList&gt;\n\n            &lt;/td&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:DropDownList id=&quot;LayoutList&quot; \n                    runat=&quot;server&quot;&gt;\n\n                  &lt;asp:ListItem Selected=&quot;True&quot;&gt;Table&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;Flow&lt;/asp:ListItem&gt;\n\n               &lt;/asp:DropDownList&gt;\n\n            &lt;/td&gt;\n\n            &lt;td&gt;\n\n               &lt;asp:DropDownList id=&quot;ColumnsList&quot; \n                    runat=&quot;server&quot;&gt;\n\n                  &lt;asp:ListItem Selected=&quot;True&quot;&gt;0&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;1&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;2&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;3&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;4&lt;/asp:ListItem&gt;\n                  &lt;asp:ListItem&gt;5&lt;/asp:ListItem&gt;\n\n               &lt;/asp:DropDownList&gt;\n\n            &lt;/td&gt;\n\n            &lt;td&gt;\n\n               &amp;nbsp;\n\n            &lt;/td&gt;\n\n\n         &lt;/tr&gt;\n\n      &lt;/table&gt;     \n         \n      &lt;asp:LinkButton id=&quot;RefreshButton&quot; \n           Text=&quot;Refresh DataList&quot; \n           OnClick=&quot;Button_Click&quot; \n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The RepeatDirection enumeration represents the different directions in which the items of a list control can be displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The number of columns displayed is always determined by the <code>RepeatColumns</code> property of the list control.  </p>\n</div>\n<p> Horizontal specifies that the items of a list control are displayed in rows loaded from left to right, then top to bottom, until all items are rendered. For example, if the <code>RepeatColumns</code> property of the list control is set to three, the items of the list control are displayed in three columns.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n</tr>\n<tr>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n</tr>\n<tr>\n<td>7</td>\n<td>8</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p> Vertical specifies that the items of a list control are displayed in columns loaded from top to bottom, then left to right, until all items are rendered. For example, if the <code>RepeatColumns</code> property of the list control is set to three, the items of the list control are displayed in rows of three items.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>4</td>\n<td>7</td>\n</tr>\n<tr>\n<td>2</td>\n<td>5</td>\n<td>8</td>\n</tr>\n<tr>\n<td>3</td>\n<td>6</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Web_UI_WebControls_RepeatDirection_Horizontal\">\r\n      \t\t\t<span class=\"lang-csharp\">Horizontal</span>\r\n      \t</td>\r\n      \t<td><p>Items of a list are displayed horizontally in rows from left to right, then top to bottom, until all items are rendered.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_UI_WebControls_RepeatDirection_Vertical\">\r\n      \t\t\t<span class=\"lang-csharp\">Vertical</span>\r\n      \t</td>\r\n      \t<td><p>Items of a list are displayed vertically in columns from top to bottom, and then left to right, until all items are rendered.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.RepeatDirection.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.RepeatDirection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.RepeatDirection.Horizontal\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.RepeatDirection.Vertical\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"f063bac5-f9b8-b9d1-336c-ba05a742f861\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the direction in which items of a list control are displayed.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.RepeatDirection\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.RepeatDirection.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.RepeatDirection","System.Web.UI.WebControls.RepeatDirection.Horizontal","System.Web.UI.WebControls.RepeatDirection.Vertical"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.RepeatDirection","System::Web::UI::WebControls::RepeatDirection","System.Web.UI.WebControls.RepeatDirection.Horizontal","System::Web::UI::WebControls::RepeatDirection::Horizontal","System.Web.UI.WebControls.RepeatDirection.Vertical","System::Web::UI::WebControls::RepeatDirection::Vertical"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"f063bac5-f9b8-b9d1-336c-ba05a742f861","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/RepeatDirection.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RepeatDirection enum | Microsoft Docs","_op_ogTitle":"RepeatDirection enum","description":"Specifies the direction in which items of a list control are displayed.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.RepeatDirection","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.repeatdirection","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.repeatdirection","fileRelativePath":"api/System.Web.UI.WebControls.RepeatDirection.html"},"themesRelativePathToOutputRoot":"_themes/"}