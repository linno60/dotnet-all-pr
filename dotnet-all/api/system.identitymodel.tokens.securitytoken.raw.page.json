{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SecurityToken</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a base class used to implement all security tokens.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class SecurityToken</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">SecurityToken</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The code examples that are used in the SecurityToken topics are taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a <code>SimpleWebToken</code> class and a <code>SimpleWebTokenHandler</code> class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see <a href=\"../topic/wif%20code%20sample%20index\" data-linktype=\"relative-path\">WIF Code Sample Index</a>. The following code shows the implementation of the <code>SimpleWebToken</code> class. This class extends SecurityToken.  </p>\n<pre><code class=\"lang-cs\" name=\"WifCustomTokenST#1\">/// &lt;summary&gt;\n/// Defines the set of constants for the Simple Web Token.\n/// &lt;/summary&gt;\npublic static class SimpleWebTokenConstants\n{\n    public const string Audience = &quot;Audience&quot;;\n    public const string ExpiresOn = &quot;ExpiresOn&quot;;\n    public const string Id = &quot;Id&quot;;\n    public const string Issuer = &quot;Issuer&quot;;\n    public const string Signature = &quot;HMACSHA256&quot;;\n    public const string ValidFrom = &quot;ValidFrom&quot;;\n    public const string ValueTypeUri = &quot;http://schemas.xmlsoap.org/ws/2009/11/swt-token-profile-1.0&quot;;     \n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WifCustomTokenST#2\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Collections.Specialized;\nusing System.IdentityModel.Tokens;\n\nnamespace SimpleWebToken\n{\n    /// &lt;summary&gt;\n    /// This class represents the token format for the SimpleWebToken.\n    /// &lt;/summary&gt;\n    public class SimpleWebToken : SecurityToken\n    {\n        public static DateTime SwtBaseTime = new DateTime( 1970, 1, 1, 0, 0, 0, 0 ); // per SWT psec\n\n        NameValueCollection _properties;\n        string _serilaizedToken;\n\n        /// &lt;summary&gt;\n        /// Initializes a new instance of the &lt;see cref=&quot;SimpleWebToken&quot;/&gt; class.\n        /// This is internal contructor is only called from the &lt;see cref=&quot;SimpleWebTokenHandler&quot;/&gt; when reading a token received from the wire.\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;properties&quot;&gt;The collection represents all the key value pairs in the token.&lt;/param&gt;\n        /// &lt;param name=&quot;serializedToken&quot;&gt;The serialized form of the token.&lt;/param&gt;\n        internal SimpleWebToken( NameValueCollection properties, string serializedToken )\n            : this(properties)\n        {\n            _serilaizedToken = serializedToken;            \n        }\n\n        /// &lt;summary&gt;\n        /// Initializes a new instance of the &lt;see cref=&quot;SimpleWebToken&quot;/&gt; class.\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;properties&quot;&gt;The collection represents all the key value pairs in the token.&lt;/param&gt;\n        public SimpleWebToken( NameValueCollection properties )\n        {\n            if ( properties == null )\n            {\n                throw new ArgumentNullException( &quot;properties&quot; );\n            }\n\n            _properties = properties;\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the Id of the token.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The Id of the token.&lt;/value&gt;\n        public override string Id\n        {\n            get \n            {\n                return _properties[SimpleWebTokenConstants.Id];\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the keys associated with this token.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The keys associated with this token.&lt;/value&gt;\n        public override ReadOnlyCollection&lt;SecurityKey&gt; SecurityKeys\n        {\n            get \n            { \n                return new ReadOnlyCollection&lt;SecurityKey&gt;( new List&lt;SecurityKey&gt;() ); \n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the time from when the token is valid.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The time from when the token is valid.&lt;/value&gt;\n        public override DateTime ValidFrom\n        {\n            get \n            {\n                string validFrom = _properties[SimpleWebTokenConstants.ValidFrom];\n                return GetTimeAsDateTime( String.IsNullOrEmpty( validFrom ) ? &quot;0&quot; : validFrom );\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the time when the token expires.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The time upto which the token is valid.&lt;/value&gt;\n        public override DateTime ValidTo\n        {\n            get\n            {\n                string expiryTime = _properties[SimpleWebTokenConstants.ExpiresOn];\n                return GetTimeAsDateTime( String.IsNullOrEmpty( expiryTime ) ? &quot;0&quot; : expiryTime );\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the Audience for the token.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The audience of the token.&lt;/value&gt;\n        public string Audience\n        {\n            get \n            {\n                return _properties[SimpleWebTokenConstants.Audience];\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the Issuer for the token.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The issuer for the token.&lt;/value&gt;\n        public string Issuer\n        {\n            get \n            { \n                return _properties[SimpleWebTokenConstants.Issuer]; \n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the signature for the token.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The signature for the token.&lt;/value&gt;\n        public string Signature\n        {\n            get \n            { \n                return _properties[SimpleWebTokenConstants.Signature]; \n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the serialized form of the token if the token was created from its serialized form by the token handler.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;The serialized form of the token.&lt;/value&gt;\n        public string SerializedToken\n        {\n            get\n            {\n                return _serilaizedToken;\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Creates a copy of all key value pairs of the token.\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;A copy of all the key value pairs in the token.&lt;/returns&gt;\n        public NameValueCollection GetAllProperties()\n        {\n            return new NameValueCollection( _properties );\n        }\n\n        /// &lt;summary&gt;\n        /// Convert the time in seconds to a &lt;see cref=&quot;DateTime&quot;/&gt; object based on the base time \n        /// defined by the Simple Web Token.\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;expiryTime&quot;&gt;The time in seconds.&lt;/param&gt;\n        /// &lt;returns&gt;The time as a &lt;see cref=&quot;DateTime&quot;/&gt; object.&lt;/returns&gt;\n        protected virtual DateTime GetTimeAsDateTime( string expiryTime )\n        {\n            long totalSeconds = 0;\n            if ( !long.TryParse( expiryTime, out totalSeconds ) )\n            {\n                throw new SecurityTokenException(&quot;Invalid expiry time. Expected the time to be in seconds passed from 1 January 1970.&quot;);\n            }\n\n            long maxSeconds = (long)( DateTime.MaxValue - SwtBaseTime ).TotalSeconds - 1;\n            if ( totalSeconds &gt; maxSeconds )\n            {\n                totalSeconds = maxSeconds;\n            }\n\n            return SwtBaseTime.AddSeconds( totalSeconds );\n        } \n    }    \n}\n\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use a security token to provide authentication credentials or to protect a message.  </p>\n<p> A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject. All security tokens derive from the SecurityToken class.  </p>\n<p> Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code. In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler\" data-linktype=\"relative-path\">SecurityTokenHandler</a> base class. Validating a token involves not just ensuring that the token is valid, but also returning a <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> instance from the token that can be used in making authentication and authorization decisions. The <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> is constructed by the token handler’s implementation of the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.  </p>\n<p> WIF ships with support for the following types of security tokens:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.saml2securitytoken\" data-linktype=\"relative-path\">Saml2SecurityToken</a>: Represents a security token that is based upon a SAML 2.0 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.samlsecuritytoken\" data-linktype=\"relative-path\">SamlSecurityToken</a>:  Represents a security token that is based upon a SAML 1.1 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.kerberosrequestorsecuritytoken\" data-linktype=\"relative-path\">KerberosRequestorSecurityToken</a> and <a class=\"xref\" href=\"system.identitymodel.tokens.kerberosreceiversecuritytoken\" data-linktype=\"relative-path\">KerberosReceiverSecurityToken</a>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.rsasecuritytoken\" data-linktype=\"relative-path\">RsaSecurityToken</a>: Represents a security token that is based upon key that is created using the RSA algorithm.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.sessionsecuritytoken\" data-linktype=\"relative-path\">SessionSecurityToken</a>: Represents a security token that contains information about a session.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.usernamesecuritytoken\" data-linktype=\"relative-path\">UserNameSecurityToken</a>: Represents a security token that is based on a username and password.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.windowssecuritytoken\" data-linktype=\"relative-path\">WindowsSecurityToken</a>: Represents a security token that is based on the identity of a Windows domain or user account.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.x509securitytoken\" data-linktype=\"relative-path\">X509SecurityToken</a>: Represents a security token that is based on an X.509 certificate.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.identitymodel.tokens.x509windowssecuritytoken\" data-linktype=\"relative-path\">X509WindowsSecurityToken</a>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.  </p>\n<p>Two other security token classes, <a class=\"xref\" href=\"system.identitymodel.tokens.genericxmlsecuritytoken\" data-linktype=\"relative-path\">GenericXmlSecurityToken</a> and <a class=\"xref\" href=\"system.identitymodel.tokens.encryptedsecuritytoken\" data-linktype=\"relative-path\">EncryptedSecurityToken</a>, can be used to help handle general cases.  </p>\n<p>Broadly speaking security tokens fall into three major categories:  </p>\n</li>\n<li><p>Tokens that carry or reference cryptographic key material. For example the <a class=\"xref\" href=\"system.identitymodel.tokens.rsasecuritytoken\" data-linktype=\"relative-path\">RsaSecurityToken</a> and <a class=\"xref\" href=\"system.identitymodel.tokens.x509securitytoken\" data-linktype=\"relative-path\">X509SecurityToken</a> types are often used for this purpose.  </p>\n</li>\n<li><p>Tokens that represent credentials for users that have already been authenticated. For example, the <a class=\"xref\" href=\"system.identitymodel.tokens.usernamesecuritytoken\" data-linktype=\"relative-path\">UserNameSecurityToken</a>, <a class=\"xref\" href=\"system.identitymodel.tokens.windowssecuritytoken\" data-linktype=\"relative-path\">WindowsSecurityToken</a>, and, in the case of a user authenticated using a certificate, the <a class=\"xref\" href=\"system.identitymodel.tokens.x509securitytoken\" data-linktype=\"relative-path\">X509SecurityToken</a> types.  </p>\n</li>\n<li><p>Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol. These are typically returned in a <code>wst:RequestSecurityTokenResponse</code> XML fragment. The <a class=\"xref\" href=\"system.identitymodel.tokens.saml2securitytoken\" data-linktype=\"relative-path\">Saml2SecurityToken</a> and <a class=\"xref\" href=\"system.identitymodel.tokens.samlsecuritytoken\" data-linktype=\"relative-path\">SamlSecurityToken</a> types are most often used to represent these tokens.  </p>\n<p>A special token type, the <a class=\"xref\" href=\"system.identitymodel.tokens.sessionsecuritytoken\" data-linktype=\"relative-path\">SessionSecurityToken</a>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.  </p>\n<p>To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token. To add support for new token types, you can derive directly from the SecurityToken class. When you do this, you will also need to create a token handler class by deriving from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler\" data-linktype=\"relative-path\">SecurityTokenHandler</a> class. Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <a class=\"xref\" href=\"system.identitymodel.tokens.issuertokenresolver\" data-linktype=\"relative-path\">IssuerTokenResolver</a> class as well as one or more custom key identifier clause types by deriving from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a> class.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SecurityToken()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Called by constructors in derived classes to initialize the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected SecurityToken ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_Id\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Id</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a unique identifier of the security token.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract string Id { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The unique identifier of the security token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Typically, when a security token is serialized into XML, the <code>Id</code> attribute for the security token is set to the value of the Id property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_SecurityKeys\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SecurityKeys</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the cryptographic keys associated with the security token.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.identitymodel.tokens.securitykey\" data-linktype=\"relative-path\">SecurityKey</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> of type <a class=\"xref\" href=\"system.identitymodel.tokens.securitykey\" data-linktype=\"relative-path\">SecurityKey</a> that contains the set of keys associated with the security token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.identitymodel.tokens.samlsecuritytoken#System_IdentityModel_Tokens_SamlSecurityToken_SecurityKeys_\" data-linktype=\"relative-path\">SecurityKeys</a> property to set the cryptographic keys for this security token to protect tokens or a SOAP message. The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_ValidFrom\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ValidFrom</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the first instant in time at which this security token is valid.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract DateTime ValidFrom { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that represents the instant in time at which this security token is first valid.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ValidFrom and <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken#System_IdentityModel_Tokens_SecurityToken_ValidTo_\" data-linktype=\"relative-path\">ValidTo</a> properties to determine the time period in which a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a> token is valid. The ValidFrom and <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken#System_IdentityModel_Tokens_SecurityToken_ValidTo_\" data-linktype=\"relative-path\">ValidTo</a> properties represent the first and last instants in time in which the security token is valid, respectively.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_ValidTo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ValidTo</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the last instant in time at which this security token is valid.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract DateTime ValidTo { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that represents the last instant in time at which this security token is valid.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken#System_IdentityModel_Tokens_SecurityToken_ValidFrom_\" data-linktype=\"relative-path\">ValidFrom</a> and ValidTo properties to determine the time period in which a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a> token is valid. The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken#System_IdentityModel_Tokens_SecurityToken_ValidFrom_\" data-linktype=\"relative-path\">ValidFrom</a> and ValidTo properties represent the first and last instants in time in which the security token is valid, respectively.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_CanCreateKeyIdentifierClause__1\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanCreateKeyIdentifierClause&lt;T&gt;()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether this security token is capable of creating the specified key identifier.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> when <code>T</code> is of type <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the CanCreateKeyIdentifierClause(T) method to determine whether a security token can create a specific key identifier. To create the key identifier call the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/ms570598(v=vs.110).aspx\" data-linktype=\"external\">CreateKeyIdentifierClause</a> method.  </p>\n<p> The default implementation supports key identifier clauses of type <a class=\"xref\" href=\"system.identitymodel.tokens.localidkeyidentifierclause\" data-linktype=\"relative-path\">LocalIdKeyIdentifierClause</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_CreateKeyIdentifierClause__1\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateKeyIdentifierClause&lt;T&gt;()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates the specified key identifier clause.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a> that is a key identifier clause for the security token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/ms570597(v=vs.110).aspx\" data-linktype=\"external\">CanCreateKeyIdentifierClause</a> method to determine whether a security token can create a specific key identifier. To create the key identifier call the CreateKeyIdentifierClause(T) method.  </p>\n<p> The default implementation supports key identifier clauses of type <a class=\"xref\" href=\"system.identitymodel.tokens.localidkeyidentifierclause\" data-linktype=\"relative-path\">LocalIdKeyIdentifierClause</a>. If a key identifier clause of type <a class=\"xref\" href=\"system.identitymodel.tokens.localidkeyidentifierclause\" data-linktype=\"relative-path\">LocalIdKeyIdentifierClause</a> cannot be created, a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> is thrown.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_MatchesKeyIdentifierClause_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyIdentifierClause</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a> to compare to this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>keyIdentifierClause</code> is a <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a> and it has the same unique identifier as the <span class=\"xref\">stem.IdentityModel.Tokens.SecurityToken.Id*</span> property; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation supports key identifier clauses of type <a class=\"xref\" href=\"system.identitymodel.tokens.localidkeyidentifierclause\" data-linktype=\"relative-path\">LocalIdKeyIdentifierClause</a></p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityToken_ResolveKeyIdentifierClause_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the key for the specified key identifier clause.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyIdentifierClause</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a> to get the key for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykey\" data-linktype=\"relative-path\">SecurityKey</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.identitymodel.tokens.securitykey\" data-linktype=\"relative-path\">SecurityKey</a> that represents the key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ResolveKeyIdentifierClause method calls the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken#System_IdentityModel_Tokens_SecurityToken_MatchesKeyIdentifierClause_\" data-linktype=\"relative-path\">MatchesKeyIdentifierClause</a> to first determine whether the specified key identifier clause is the same as this instance.  </p>\n<p> The default implementation returns the first element of the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken#System_IdentityModel_Tokens_SecurityToken_SecurityKeys_\" data-linktype=\"relative-path\">SecurityKeys</a> collection if the collection is not empty and if <a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken#System_IdentityModel_Tokens_SecurityToken_MatchesKeyIdentifierClause_\" data-linktype=\"relative-path\">MatchesKeyIdentifierClause</a> returns <code>true</code>; otherwise, it returns <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.IdentityModel.Tokens.SecurityToken.yml\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken..ctor\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.Id\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.SecurityKeys\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.ValidFrom\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityToken.ValidTo\">\r\n<meta name=\"APILocation\" content=\"System.IdentityModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"213acb44-b0f5-96df-0fec-a34ff85b60fe\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a base class used to implement all security tokens.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.identitymodel.tokens/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IdentityModel.Tokens.SecurityToken\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.IdentityModel.Tokens.SecurityToken.yml","open_to_public_contributors":false,"api_name":["System.IdentityModel.Tokens.SecurityToken","System.IdentityModel.Tokens.SecurityToken..ctor","System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>","System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>","System.IdentityModel.Tokens.SecurityToken.Id","System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause","System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause","System.IdentityModel.Tokens.SecurityToken.SecurityKeys","System.IdentityModel.Tokens.SecurityToken.ValidFrom","System.IdentityModel.Tokens.SecurityToken.ValidTo"],"api_location":["System.IdentityModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IdentityModel.Tokens.SecurityToken","System::IdentityModel::Tokens::SecurityToken","System.IdentityModel.Tokens.SecurityToken.#ctor","System::IdentityModel::Tokens::SecurityToken::#ctor","System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1","System::IdentityModel::Tokens::SecurityToken::CanCreateKeyIdentifierClause``1","System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1","System::IdentityModel::Tokens::SecurityToken::CreateKeyIdentifierClause``1","System.IdentityModel.Tokens.SecurityToken.Id","System::IdentityModel::Tokens::SecurityToken::Id","System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause","System::IdentityModel::Tokens::SecurityToken::MatchesKeyIdentifierClause","System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause","System::IdentityModel::Tokens::SecurityToken::ResolveKeyIdentifierClause","System.IdentityModel.Tokens.SecurityToken.SecurityKeys","System::IdentityModel::Tokens::SecurityToken::SecurityKeys","System.IdentityModel.Tokens.SecurityToken.ValidFrom","System::IdentityModel::Tokens::SecurityToken::ValidFrom","System.IdentityModel.Tokens.SecurityToken.ValidTo","System::IdentityModel::Tokens::SecurityToken::ValidTo"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"213acb44-b0f5-96df-0fec-a34ff85b60fe","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SecurityToken class | Microsoft Docs","_op_ogTitle":"SecurityToken class","description":"Represents a base class used to implement all security tokens.\n","toc_asset_id":"api/_splitted/System.IdentityModel.Tokens/toc.json","toc_rel":"_splitted/System.IdentityModel.Tokens/toc.json","source_url":"","ms.assetid":"System.IdentityModel.Tokens.SecurityToken","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.identitymodel.tokens.securitytoken","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.identitymodel.tokens.securitytoken","fileRelativePath":"api/System.IdentityModel.Tokens.SecurityToken.html"},"themesRelativePathToOutputRoot":"_themes/"}