{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SecurityAction</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the security actions that can be performed using declarative security.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic enum SecurityAction</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">SecurityAction</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This example shows how to notify the CLR that code in called methods has only <a class=\"xref\" href=\"system.security.permissions.isolatedstoragepermission\" data-linktype=\"relative-path\">IsolatedStoragePermission</a>, and also demonstrates how to write and read from isolated storage.  </p>\n<pre><code class=\"lang-cs\" name=\"IsolatedStoragePermissionAttribute#1\">using System;\nusing System.Security.Permissions;\nusing System.IO.IsolatedStorage;\nusing System.IO;\n\n// Notify the CLR to only grant IsolatedStorageFilePermission to called methods. \n// This restricts the called methods to working only with storage files that are isolated \n// by user and assembly.\n[IsolatedStorageFilePermission(SecurityAction.PermitOnly, UsageAllowed = IsolatedStorageContainment.AssemblyIsolationByUser)]\npublic sealed class App\n{\n    static void Main()\n    {\n        WriteIsolatedStorage();\n\n    }\n    private static void WriteIsolatedStorage()\n    {\n        // Attempt to create a storage file that is isolated by user and assembly.\n        // IsolatedStorageFilePermission granted to the attribute at the top of this file \n        // allows CLR to load this assembly and execution of this statement.\n        using (Stream s = new IsolatedStorageFileStream(&quot;AssemblyData&quot;, FileMode.Create, IsolatedStorageFile.GetUserStoreForAssembly()))\n        {\n\n            // Write some data out to the isolated file.\n            using (StreamWriter sw = new StreamWriter(s))\n            {\n                sw.Write(&quot;This is some test data.&quot;);\n            }\n        }\n\n        // Attempt to open the file that was previously created.\n        using (Stream s = new IsolatedStorageFileStream(&quot;AssemblyData&quot;, FileMode.Open, IsolatedStorageFile.GetUserStoreForAssembly()))\n        {\n            // Read the data from the file and display it.\n            using (StreamReader sr = new StreamReader(s))\n            {\n                Console.WriteLine(sr.ReadLine());\n            }\n        }\n    }\n}\n\n// This code produces the following output.\n//\n//  Some test data.\n</code></pre><pre><code class=\"lang-vb\" name=\"IsolatedStoragePermissionAttribute#1\">Option Strict On\nImports System\nImports System.Security.Permissions\nImports System.IO.IsolatedStorage\nImports System.IO\n\n\n&#39; Notify the CLR to only grant IsolatedStorageFilePermission to called methods. \n&#39; This restricts the called methods to working only with storage files that are isolated \n&#39; by user and assembly.\n&lt;IsolatedStorageFilePermission(SecurityAction.PermitOnly, UsageAllowed:=IsolatedStorageContainment.AssemblyIsolationByUser)&gt; _\nPublic NotInheritable Class App\n\n    Shared Sub Main()\n        WriteIsolatedStorage()\n    End Sub &#39;Main\n    Shared Sub WriteIsolatedStorage()\n        &#39; Attempt to create a storage file that is isolated by user and assembly.\n        &#39; IsolatedStorageFilePermission granted to the attribute at the top of this file \n        &#39; allows CLR to load this assembly and execution of this statement.\n        Dim s As New IsolatedStorageFileStream(&quot;AssemblyData&quot;, FileMode.Create, IsolatedStorageFile.GetUserStoreForAssembly())\n        Try\n\n            &#39; Write some data out to the isolated file.\n            Dim sw As New StreamWriter(s)\n            Try\n                sw.Write(&quot;This is some test data.&quot;)\n            Finally\n                sw.Dispose()\n            End Try\n        Finally\n            s.Dispose()\n        End Try\n\n        &#39; Attempt to open the file that was previously created.\n        Dim t As New IsolatedStorageFileStream(&quot;AssemblyData&quot;, FileMode.Open, IsolatedStorageFile.GetUserStoreForAssembly())\n        Try\n            &#39; Read the data from the file and display it.\n            Dim sr As New StreamReader(t)\n            Try\n                Console.WriteLine(sr.ReadLine())\n            Finally\n                sr.Dispose()\n            End Try\n        Finally\n            t.Dispose()\n        End Try\n\n    End Sub\nEnd Class &#39;App\n\n&#39; This code produces the following output.\n&#39;\n&#39;  Some test data.\n</code></pre><pre><code class=\"lang-cpp\" name=\"IsolatedStoragePermissionAttribute#1\">using namespace System;\nusing namespace System::Security;\nusing namespace System::Security::Permissions;\nusing namespace System::IO::IsolatedStorage;\nusing namespace System::IO;\n\n\nstatic void WriteIsolatedStorage()\n{\n    try\n    {\n        // Attempt to create a storage file that is isolated by\n        // user and assembly. IsolatedStorageFilePermission\n        // granted to the attribute at the top of this file\n        // allows CLR to load this assembly and execution of this\n        // statement.\n        Stream^ fileCreateStream = gcnew\n            IsolatedStorageFileStream(\n            &quot;AssemblyData&quot;,\n            FileMode::Create,\n            IsolatedStorageFile::GetUserStoreForAssembly());\n\n        StreamWriter^ streamWriter = gcnew StreamWriter(\n            fileCreateStream);\n        try\n        {\n            // Write some data out to the isolated file.\n\n            streamWriter-&gt;Write(&quot;This is some test data.&quot;);\n            streamWriter-&gt;Close();\t\n        }\n        finally\n        {\n            delete fileCreateStream;\n            delete streamWriter;\n        } \n    }\n    catch (IOException^ ex)\n    {\n        Console::WriteLine(ex-&gt;Message);\n    }\n\n    try\n    {\n        Stream^ fileOpenStream =\n            gcnew IsolatedStorageFileStream(\n            &quot;AssemblyData&quot;,\n            FileMode::Open,\n            IsolatedStorageFile::GetUserStoreForAssembly());\n        // Attempt to open the file that was previously created.\n\n        StreamReader^ streamReader = gcnew StreamReader(\n            fileOpenStream);\n        try\n        { \n            // Read the data from the file and display it.\n\n            Console::WriteLine(streamReader-&gt;ReadLine());\n            streamReader-&gt;Close();\n        }\n        finally\n        {\n            delete fileOpenStream;\n            delete streamReader;\n        }\n    }\n    catch (FileNotFoundException^ ex)\n    {\n        Console::WriteLine(ex-&gt;Message);\n    }\n    catch (IOException^ ex)\n    {\n        Console::WriteLine(ex-&gt;Message);\n    }\n}\n// Notify the CLR to only grant IsolatedStorageFilePermission to called methods. \n// This restricts the called methods to working only with storage files that are isolated \n// by user and assembly.\n[IsolatedStorageFilePermission(SecurityAction::PermitOnly, UsageAllowed = IsolatedStorageContainment::AssemblyIsolationByUser)]\nint main()\n{\n\tWriteIsolatedStorage();\n}\n\n// This code produces the following output.\n//\n//  This is some test data.\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The following table describes the time that each security action takes place and the targets that it supports.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> In the .NET Framework 4, runtime support has been removed for enforcing the Deny, RequestMinimum, RequestOptional, and RequestRefuse permission requests. These requests should not be used in code that is based on .NET Framework 4 or later. For more information about this and other changes, see <a href=\"../topic/security%20changes%20in%20the%20.net%20framework\" data-linktype=\"relative-path\">Security Changes</a>.  </p>\n</div>\n<p> You should not useLinkDemand in the .NET Framework 4. Instead, use the <a class=\"xref\" href=\"system.security.securitycriticalattribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a> to restrict usage to fully trusted applications, or use Demand to restrict partially trusted callers.  </p>\n<table>\n<thead>\n<tr>\n<th>Declaration of security action</th>\n<th>Time of action</th>\n<th>Targets supported</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LinkDemand</code> (do not use in the .NET Framework 4)</td>\n<td>Just-in-time compilation</td>\n<td>Class, method</td>\n</tr>\n<tr>\n<td><code>InheritanceDemand</code></td>\n<td>Load time</td>\n<td>Class, method</td>\n</tr>\n<tr>\n<td><code>Demand</code></td>\n<td>Run time</td>\n<td>Class, method</td>\n</tr>\n<tr>\n<td><code>Assert</code></td>\n<td>Run time</td>\n<td>Class, method</td>\n</tr>\n<tr>\n<td><code>Deny</code> (obsolete in the .NET Framework 4)</td>\n<td>Run time</td>\n<td>Class, method</td>\n</tr>\n<tr>\n<td><code>PermitOnly</code></td>\n<td>Run time</td>\n<td>Class, method</td>\n</tr>\n<tr>\n<td><code>RequestMinimum</code> (obsolete in the .NET Framework 4)</td>\n<td>Grant time</td>\n<td>Assembly</td>\n</tr>\n<tr>\n<td><code>RequestOptional</code> (obsolete in the .NET Framework 4)</td>\n<td>Grant time</td>\n<td>Assembly</td>\n</tr>\n<tr>\n<td><code>RequestRefuse</code> (obsolete in the .NET Framework 4)</td>\n<td>Grant time</td>\n<td>Assembly</td>\n</tr>\n</tbody>\n</table>\n<p> For additional information about attribute targets, see <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_Assert\">\r\n      \t\t\t<span class=\"lang-csharp\">Assert</span>\r\n      \t</td>\r\n      \t<td><p>The calling code can access the resource identified by the current permission object, even if callers higher in the stack have not been granted permission to access the resource (see <a href=\"../topic/using%20the%20assert%20method\" data-linktype=\"relative-path\">Using the Assert Method</a>).</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_Demand\">\r\n      \t\t\t<span class=\"lang-csharp\">Demand</span>\r\n      \t</td>\r\n      \t<td><p>All callers higher in the call stack are required to have been granted the permission specified by the current permission object.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_Deny\">\r\n      \t\t\t<span class=\"lang-csharp\">Deny</span>\r\n      \t</td>\r\n      \t<td><p>The ability to access the resource specified by the current permission object is denied to callers, even if they have been granted permission to access it (see <a href=\"http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25\" data-linktype=\"external\">Using the Deny Method</a>).</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_InheritanceDemand\">\r\n      \t\t\t<span class=\"lang-csharp\">InheritanceDemand</span>\r\n      \t</td>\r\n      \t<td><p>The derived class inheriting the class or overriding a method is required to have been granted the specified permission..</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_LinkDemand\">\r\n      \t\t\t<span class=\"lang-csharp\">LinkDemand</span>\r\n      \t</td>\r\n      \t<td><p>The immediate caller is required to have been granted the specified permission. Do not use in the .NET Framework 4. For full trust, use <a class=\"xref\" href=\"system.security.securitycriticalattribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a> instead; for partial trust, use Demand.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_PermitOnly\">\r\n      \t\t\t<span class=\"lang-csharp\">PermitOnly</span>\r\n      \t</td>\r\n      \t<td><p>Only the resources specified by this permission object can be accessed, even if the code has been granted permission to access other resources.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_RequestMinimum\">\r\n      \t\t\t<span class=\"lang-csharp\">RequestMinimum</span>\r\n      \t</td>\r\n      \t<td><p>The request for the minimum permissions required for code to run. This action can only be used within the scope of the assembly.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_RequestOptional\">\r\n      \t\t\t<span class=\"lang-csharp\">RequestOptional</span>\r\n      \t</td>\r\n      \t<td><p>The request for additional permissions that are optional (not required to run). This request implicitly refuses all other permissions not specifically requested. This action can only be used within the scope of the assembly.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Permissions_SecurityAction_RequestRefuse\">\r\n      \t\t\t<span class=\"lang-csharp\">RequestRefuse</span>\r\n      \t</td>\r\n      \t<td><p>The request that permissions that might be misused will not be granted to the calling code. This action can only be used within the scope of the assembly.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Permissions.SecurityAction.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.Assert\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.Demand\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.Deny\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.InheritanceDemand\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.LinkDemand\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.PermitOnly\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.RequestMinimum\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.RequestOptional\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.SecurityAction.RequestRefuse\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"3a5a2e5f-42d8-ad1d-ff68-1cbc14c8943b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the security actions that can be performed using declarative security.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.permissions/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Permissions.SecurityAction\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Permissions.SecurityAction.yml","open_to_public_contributors":false,"api_name":["System.Security.Permissions.SecurityAction","System.Security.Permissions.SecurityAction.Assert","System.Security.Permissions.SecurityAction.Demand","System.Security.Permissions.SecurityAction.Deny","System.Security.Permissions.SecurityAction.InheritanceDemand","System.Security.Permissions.SecurityAction.LinkDemand","System.Security.Permissions.SecurityAction.PermitOnly","System.Security.Permissions.SecurityAction.RequestMinimum","System.Security.Permissions.SecurityAction.RequestOptional","System.Security.Permissions.SecurityAction.RequestRefuse"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Permissions.SecurityAction","System::Security::Permissions::SecurityAction","System.Security.Permissions.SecurityAction.Assert","System::Security::Permissions::SecurityAction::Assert","System.Security.Permissions.SecurityAction.Demand","System::Security::Permissions::SecurityAction::Demand","System.Security.Permissions.SecurityAction.Deny","System::Security::Permissions::SecurityAction::Deny","System.Security.Permissions.SecurityAction.InheritanceDemand","System::Security::Permissions::SecurityAction::InheritanceDemand","System.Security.Permissions.SecurityAction.LinkDemand","System::Security::Permissions::SecurityAction::LinkDemand","System.Security.Permissions.SecurityAction.PermitOnly","System::Security::Permissions::SecurityAction::PermitOnly","System.Security.Permissions.SecurityAction.RequestMinimum","System::Security::Permissions::SecurityAction::RequestMinimum","System.Security.Permissions.SecurityAction.RequestOptional","System::Security::Permissions::SecurityAction::RequestOptional","System.Security.Permissions.SecurityAction.RequestRefuse","System::Security::Permissions::SecurityAction::RequestRefuse"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"3a5a2e5f-42d8-ad1d-ff68-1cbc14c8943b","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Permissions/SecurityAction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SecurityAction enum | Microsoft Docs","_op_ogTitle":"SecurityAction enum","description":"Specifies the security actions that can be performed using declarative security.\n","toc_asset_id":"api/_splitted/System.Security.Permissions/toc.json","toc_rel":"_splitted/System.Security.Permissions/toc.json","source_url":"","ms.assetid":"System.Security.Permissions.SecurityAction","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.permissions.securityaction","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.permissions.securityaction","fileRelativePath":"api/System.Security.Permissions.SecurityAction.html"},"themesRelativePathToOutputRoot":"_themes/"}