{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">PaintEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event of a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void PaintEventHandler(object sender, PaintEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">PaintEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code examples draws lines and text on a <a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"Control.Paint#1\">// This example creates a PictureBox control on the form and draws to it.\n// This example assumes that the Form_Load event handler method is\n// connected to the Load event of the form.\n\nprivate PictureBox pictureBox1 = new PictureBox();\nprivate void Form1_Load(object sender, System.EventArgs e)\n{\n    // Dock the PictureBox to the form and set its background to white.\n    pictureBox1.Dock = DockStyle.Fill;\n    pictureBox1.BackColor = Color.White;\n    // Connect the Paint event of the PictureBox to the event handler method.\n    pictureBox1.Paint += new System.Windows.Forms.PaintEventHandler(this.pictureBox1_Paint);\n\n    // Add the PictureBox control to the Form.\n    this.Controls.Add(pictureBox1);\n}\n\nprivate void pictureBox1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)\n{\n    // Create a local version of the graphics object for the PictureBox.\n    Graphics g = e.Graphics;\n\n    // Draw a string on the PictureBox.\n    g.DrawString(&quot;This is a diagonal line drawn on the control&quot;,\n        new Font(&quot;Arial&quot;,10), System.Drawing.Brushes.Blue, new Point(30,30));\n    // Draw a line in the PictureBox.\n    g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, pictureBox1.Top,\n        pictureBox1.Right, pictureBox1.Bottom);\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Control.Paint#1\">   // This example creates a PictureBox control on the form and draws to it.\n   // This example assumes that the Form_Load event handler method is\n   // connected to the Load event of the form.\nprivate:\n   PictureBox^ pictureBox1;\n   void Form1_Load( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      pictureBox1 = gcnew PictureBox;\n\n      // Dock the PictureBox to the form and set its background to white.\n      pictureBox1-&gt;Dock = DockStyle::Fill;\n      pictureBox1-&gt;BackColor = Color::White;\n\n      // Connect the Paint event of the PictureBox to the event handler method.\n      pictureBox1-&gt;Paint += gcnew System::Windows::Forms::PaintEventHandler( this, &amp;Form1::pictureBox1_Paint );\n\n      // Add the PictureBox control to the Form.\n      this-&gt;Controls-&gt;Add( pictureBox1 );\n   }\n\n   void pictureBox1_Paint( Object^ /*sender*/, System::Windows::Forms::PaintEventArgs^ e )\n   {\n      // Create a local version of the graphics object for the PictureBox.\n      Graphics^ g = e-&gt;Graphics;\n\n      // Draw a string on the PictureBox.\n      g-&gt;DrawString( &quot;This is a diagonal line drawn on the control&quot;,\n         gcnew System::Drawing::Font( &quot;Arial&quot;,10 ), System::Drawing::Brushes::Blue, Point(30,30) );\n\n      // Draw a line in the PictureBox.\n      g-&gt;DrawLine( System::Drawing::Pens::Red, pictureBox1-&gt;Left, pictureBox1-&gt;Top,\n         pictureBox1-&gt;Right, pictureBox1-&gt;Bottom );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control.Paint#1\">&#39; This example creates a PictureBox control on the form and draws to it. \n&#39; This example assumes that the Form_Load event handler method is connected \n&#39; to the Load event of the form.\nPrivate pictureBox1 As New PictureBox()\n\nPrivate Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load\n    &#39; Dock the PictureBox to the form and set its background to white.\n    pictureBox1.Dock = DockStyle.Fill\n    pictureBox1.BackColor = Color.White\n    &#39; Connect the Paint event of the PictureBox to the event handler method.\n    AddHandler pictureBox1.Paint, AddressOf Me.pictureBox1_Paint\n\n    &#39; Add the PictureBox control to the Form.\n    Me.Controls.Add(pictureBox1)\nEnd Sub &#39;Form1_Load\n\n\nPrivate Sub pictureBox1_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs)\n    &#39; Create a local version of the graphics object for the PictureBox.\n    Dim g As Graphics = e.Graphics\n\n    &#39; Draw a string on the PictureBox.\n    g.DrawString(&quot;This is a diagonal line drawn on the control&quot;, _\n        New Font(&quot;Arial&quot;, 10), Brushes.Red, New PointF(30.0F, 30.0F))\n    &#39; Draw a line in the PictureBox.\n    g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, _ \n        pictureBox1.Top, pictureBox1.Right, pictureBox1.Bottom)\nEnd Sub &#39;pictureBox1_Paint\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a PaintEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.PaintEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"960239bd-d003-075a-d5b7-0f5811cb2e81\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  event of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.PaintEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.PaintEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.PaintEventHandler","System.Windows.Forms.PaintEventHandler..ctor","System.Windows.Forms.PaintEventHandler.Invoke","System.Windows.Forms.PaintEventHandler.BeginInvoke","System.Windows.Forms.PaintEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.PaintEventHandler","System::Windows::Forms::PaintEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"960239bd-d003-075a-d5b7-0f5811cb2e81","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/PaintEventHandler.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PaintEventHandler delegate | Microsoft Docs","_op_ogTitle":"PaintEventHandler delegate","description":"Represents the method that will handle the  event of a .\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.PaintEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.painteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.painteventhandler","fileRelativePath":"api/System.Windows.Forms.PaintEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}