{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">RequestCacheLevel</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies caching behavior for resources obtained using <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> and its derived classes.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum RequestCacheLevel</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">RequestCacheLevel</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example creates policy that returns a resource only if it is in the cache.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSimpleCache#13\">static WebResponse^ GetResponseFromCache( Uri^ uri )\n{\n   RequestCachePolicy^ policy = gcnew RequestCachePolicy( RequestCacheLevel::CacheOnly );\n   WebRequest^ request = WebRequest::Create( uri );\n   request-&gt;CachePolicy = policy;\n   WebResponse^ response = request-&gt;GetResponse();\n   Console::WriteLine( L&quot;Policy level is {0}.&quot;, policy-&gt;Level );\n   Console::WriteLine( L&quot;Is the response from the cache? {0}&quot;, response-&gt;IsFromCache );\n   return response;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSimpleCache#13\">public static WebResponse GetResponseFromCache(Uri uri)\n{\n     RequestCachePolicy policy = \n        new  RequestCachePolicy( RequestCacheLevel.CacheOnly);\n    WebRequest request = WebRequest.Create(uri);\n    request.CachePolicy = policy;\n    WebResponse response = request.GetResponse();\n    Console.WriteLine(&quot;Policy level is {0}.&quot;, policy.Level.ToString());\n    Console.WriteLine(&quot;Is the response from the cache? {0}&quot;, response.IsFromCache);  \n    return response;\n    \n} \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Members of this enumeration are used to initialize <a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a> objects. The current setting for a <a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a> object is available in the <a class=\"xref\" href=\"system.net.cache.httprequestcachepolicy#System_Net_Cache_HttpRequestCachePolicy_Level_\" data-linktype=\"relative-path\">Level</a> property.  </p>\n<p> This <a class=\"xref\" href=\"system.net.cache.httprequestcachelevel\" data-linktype=\"relative-path\">HttpRequestCacheLevel</a> value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.  </p>\n<p> The <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_DefaultCachePolicy_\" data-linktype=\"relative-path\">DefaultCachePolicy</a> property is used to get or set the default cache policy for <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instances. The <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CachePolicy_\" data-linktype=\"relative-path\">CachePolicy</a> property is used to get or set the default cache policy for a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances. The <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CachePolicy_\" data-linktype=\"relative-path\">CachePolicy</a> property is used to get or set the cache policy for a specific request.  </p>\n<p> A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Net_Cache_RequestCacheLevel_BypassCache\">\r\n      \t\t\t<span class=\"lang-csharp\">BypassCache</span>\r\n      \t</td>\r\n      \t<td><p>Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Cache_RequestCacheLevel_CacheIfAvailable\">\r\n      \t\t\t<span class=\"lang-csharp\">CacheIfAvailable</span>\r\n      \t</td>\r\n      \t<td><p>Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Cache_RequestCacheLevel_CacheOnly\">\r\n      \t\t\t<span class=\"lang-csharp\">CacheOnly</span>\r\n      \t</td>\r\n      \t<td><p>Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> exception is thrown if the item is not in the client cache.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Cache_RequestCacheLevel_Default\">\r\n      \t\t\t<span class=\"lang-csharp\">Default</span>\r\n      \t</td>\r\n      \t<td><p>Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Cache_RequestCacheLevel_NoCacheNoStore\">\r\n      \t\t\t<span class=\"lang-csharp\">NoCacheNoStore</span>\r\n      \t</td>\r\n      \t<td><p>Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the <code>no-cache</code> cache control directive.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Cache_RequestCacheLevel_Reload\">\r\n      \t\t\t<span class=\"lang-csharp\">Reload</span>\r\n      \t</td>\r\n      \t<td><p>Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the <code>no-cache</code> cache control directive and the no-cache <code>Pragma</code> header.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Cache_RequestCacheLevel_Revalidate\">\r\n      \t\t\t<span class=\"lang-csharp\">Revalidate</span>\r\n      \t</td>\r\n      \t<td><p>Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Cache.RequestCacheLevel.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel.BypassCache\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel.CacheIfAvailable\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel.CacheOnly\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel.Default\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel.NoCacheNoStore\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel.Reload\">\r\n<meta name=\"APIName\" content=\"System.Net.Cache.RequestCacheLevel.Revalidate\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"aa8cf2c3-e94a-3833-d10b-ae2bc7635b85\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies caching behavior for resources obtained using  and its derived classes.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net.cache/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Cache.RequestCacheLevel\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Cache.RequestCacheLevel.yml","open_to_public_contributors":false,"api_name":["System.Net.Cache.RequestCacheLevel","System.Net.Cache.RequestCacheLevel.BypassCache","System.Net.Cache.RequestCacheLevel.CacheIfAvailable","System.Net.Cache.RequestCacheLevel.CacheOnly","System.Net.Cache.RequestCacheLevel.Default","System.Net.Cache.RequestCacheLevel.NoCacheNoStore","System.Net.Cache.RequestCacheLevel.Reload","System.Net.Cache.RequestCacheLevel.Revalidate"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Cache.RequestCacheLevel","System::Net::Cache::RequestCacheLevel","System.Net.Cache.RequestCacheLevel.BypassCache","System::Net::Cache::RequestCacheLevel::BypassCache","System.Net.Cache.RequestCacheLevel.CacheIfAvailable","System::Net::Cache::RequestCacheLevel::CacheIfAvailable","System.Net.Cache.RequestCacheLevel.CacheOnly","System::Net::Cache::RequestCacheLevel::CacheOnly","System.Net.Cache.RequestCacheLevel.Default","System::Net::Cache::RequestCacheLevel::Default","System.Net.Cache.RequestCacheLevel.NoCacheNoStore","System::Net::Cache::RequestCacheLevel::NoCacheNoStore","System.Net.Cache.RequestCacheLevel.Reload","System::Net::Cache::RequestCacheLevel::Reload","System.Net.Cache.RequestCacheLevel.Revalidate","System::Net::Cache::RequestCacheLevel::Revalidate"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"aa8cf2c3-e94a-3833-d10b-ae2bc7635b85","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Net.Cache/RequestCacheLevel.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RequestCacheLevel enum | Microsoft Docs","_op_ogTitle":"RequestCacheLevel enum","description":"Specifies caching behavior for resources obtained using  and its derived classes.\n","toc_asset_id":"api/_splitted/System.Net.Cache/toc.json","toc_rel":"_splitted/System.Net.Cache/toc.json","source_url":"","ms.assetid":"System.Net.Cache.RequestCacheLevel","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.cache.requestcachelevel","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.cache.requestcachelevel","fileRelativePath":"api/System.Net.Cache.RequestCacheLevel.html"},"themesRelativePathToOutputRoot":"_themes/"}