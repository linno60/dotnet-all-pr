{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">AuditLogLocation</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the location where security-related event logs are written.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum AuditLogLocation</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">AuditLogLocation</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example sets the <a class=\"xref\" href=\"system.servicemodel.description.servicesecurityauditbehavior#System_ServiceModel_Description_ServiceSecurityAuditBehavior_AuditLogLocation_\" data-linktype=\"relative-path\">AuditLogLocation</a> property to one of the AuditLogLocation values.  </p>\n<pre><code class=\"lang-cs\" name=\"AuditingSecurityEvents#1\">public static void Main()\n{\n    // Get base address from appsettings in configuration.\n    Uri baseAddress = new Uri(ConfigurationManager.\n        AppSettings[&quot;baseAddress&quot;]);\n\n    // Create a ServiceHost for the CalculatorService type \n    // and provide the base address.\n    using (ServiceHost serviceHost = new \n        ServiceHost(typeof(CalculatorService), baseAddress))\n    {\n        // Create a new auditing behavior and set the log location.\n        ServiceSecurityAuditBehavior newAudit = \n            new ServiceSecurityAuditBehavior();\n        newAudit.AuditLogLocation = \n            AuditLogLocation.Application;\n        newAudit.MessageAuthenticationAuditLevel = \n            AuditLevel.SuccessOrFailure;\n        newAudit.ServiceAuthorizationAuditLevel = \n            AuditLevel.SuccessOrFailure;\n        newAudit.SuppressAuditFailure = false;\n        // Remove the old behavior and add the new.\n        serviceHost.Description.\n            Behaviors.Remove&lt;ServiceSecurityAuditBehavior&gt;();\n        serviceHost.Description.Behaviors.Add(newAudit);\n        // Open the ServiceHostBase to create listeners \n        // and start listening for messages.\n        serviceHost.Open();\n\n        // The service can now be accessed.\n        Console.WriteLine(&quot;The service is ready.&quot;);\n        Console.WriteLine(&quot;Press &lt;ENTER&gt; to terminate service.&quot;);\n        Console.WriteLine();\n        Console.ReadLine();\n\n        // Close the ServiceHostBase to shutdown the service.\n        serviceHost.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"AuditingSecurityEvents#1\">Public Shared Sub Main() \n    &#39; Get base address from appsettings in configuration.\n    Dim baseAddress As New Uri(ConfigurationManager.AppSettings(&quot;baseAddress&quot;))\n    \n    &#39; Create a ServiceHost for the CalculatorService type \n    &#39; and provide the base address.\n    Dim serviceHost As New ServiceHost(GetType(CalculatorService), baseAddress)\n    Try\n        &#39; Create a new auditing behavior and set the log location.\n        Dim newAudit As New ServiceSecurityAuditBehavior()\n        newAudit.AuditLogLocation = AuditLogLocation.Application\n        newAudit.MessageAuthenticationAuditLevel = _\n            AuditLevel.SuccessOrFailure\n        newAudit.ServiceAuthorizationAuditLevel = _\n            AuditLevel.SuccessOrFailure\n        newAudit.SuppressAuditFailure = False\n        &#39; Remove the old behavior and add the new.\n        serviceHost.Description.Behaviors.Remove(Of ServiceSecurityAuditBehavior)\n        serviceHost.Description.Behaviors.Add(newAudit)\n        &#39; Open the ServiceHostBase to create listeners \n        &#39; and start listening for messages.\n        serviceHost.Open()\n        \n        &#39; The service can now be accessed.\n        Console.WriteLine(&quot;The service is ready.&quot;)\n        Console.WriteLine(&quot;Press &lt;ENTER&gt; to terminate service.&quot;)\n        Console.WriteLine()\n        Console.ReadLine()\n        \n        &#39; Close the ServiceHostBase to shutdown the service.\n        serviceHost.Close()\n    Finally\n    End Try\n\nEnd Sub \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When creating a Windows Communication Foundation (WCF) application that requires authentication and/or authorization of callers, you can specify that events related to security be recorded for either success, failure, or both. The location of the log is determined by this enumeration.  </p>\n<p> The level of the audit log is specified by setting the <a class=\"xref\" href=\"system.servicemodel.description.servicesecurityauditbehavior#System_ServiceModel_Description_ServiceSecurityAuditBehavior_MessageAuthenticationAuditLevel_\" data-linktype=\"relative-path\">MessageAuthenticationAuditLevel</a> or the <a class=\"xref\" href=\"system.servicemodel.description.servicesecurityauditbehavior#System_ServiceModel_Description_ServiceSecurityAuditBehavior_ServiceAuthorizationAuditLevel_\" data-linktype=\"relative-path\">ServiceAuthorizationAuditLevel</a> property of the <a class=\"xref\" href=\"system.servicemodel.description.servicesecurityauditbehavior\" data-linktype=\"relative-path\">ServiceSecurityAuditBehavior</a> class to one of the <a class=\"xref\" href=\"system.servicemodel.auditlevel\" data-linktype=\"relative-path\">AuditLevel</a> values.  </p>\n<p> You can also specify audit behavior using the <a href=\"../Topic/%3CserviceSecurityAudit%3E.md\" data-linktype=\"relative-path\">&amp;lt;serviceSecurityAudit&amp;gt;</a> binding.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If the <a class=\"xref\" href=\"system.servicemodel.description.servicesecurityauditbehavior#System_ServiceModel_Description_ServiceSecurityAuditBehavior_AuditLogLocation_\" data-linktype=\"relative-path\">AuditLogLocation</a> property is set to Security and <code>Audit Object Access</code> is not set in the <code>Local Security Policy</code>, audit events will not be written to the Security log. No failure is returned, but audit entries will not be written to the Security log. In addition, the calling thread must have <code>SeAuditPrivilege</code> to be able to write to the Security log.  </p>\n</div>\n<h3 class=\"accented\" id=\"default-dependent-on-operating-system\">Default Dependent on Operating System</h3>\n<p> When setting the property to the Default value, the operating system determines which log will actually be written to. For more information, see <a href=\"../topic/auditing%20security%20events\" data-linktype=\"relative-path\">Auditing</a>.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_ServiceModel_AuditLogLocation_Application\">\r\n      \t\t\t<span class=\"lang-csharp\">Application</span>\r\n      \t</td>\r\n      \t<td><p>Specifies the Application log in the event log.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceModel_AuditLogLocation_Default\">\r\n      \t\t\t<span class=\"lang-csharp\">Default</span>\r\n      \t</td>\r\n      \t<td><p>Specifies the default location, which is determined by the operating system. If writing to the Security log is supported (such as on Windows Vista and Windows Server 2003 and later platforms), the default log location is the Security log. Otherwise (such as in Windows XP SP2), the default log location is the Application log.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceModel_AuditLogLocation_Security\">\r\n      \t\t\t<span class=\"lang-csharp\">Security</span>\r\n      \t</td>\r\n      \t<td><p>Specifies the Security log in the event log. The calling thread must have <code>SeAuditPrivilege</code> to be able to write to the Security log.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.AuditLogLocation.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.AuditLogLocation\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.AuditLogLocation.Application\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.AuditLogLocation.Default\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.AuditLogLocation.Security\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"283b1520-abeb-6d17-e123-2784ca4be7fa\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the location where security-related event logs are written.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.servicemodel/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.AuditLogLocation\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.AuditLogLocation.yml","open_to_public_contributors":false,"api_name":["System.ServiceModel.AuditLogLocation","System.ServiceModel.AuditLogLocation.Application","System.ServiceModel.AuditLogLocation.Default","System.ServiceModel.AuditLogLocation.Security"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.AuditLogLocation","System::ServiceModel::AuditLogLocation","System.ServiceModel.AuditLogLocation.Application","System::ServiceModel::AuditLogLocation::Application","System.ServiceModel.AuditLogLocation.Default","System::ServiceModel::AuditLogLocation::Default","System.ServiceModel.AuditLogLocation.Security","System::ServiceModel::AuditLogLocation::Security"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"283b1520-abeb-6d17-e123-2784ca4be7fa","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ServiceModel/AuditLogLocation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AuditLogLocation enum | Microsoft Docs","_op_ogTitle":"AuditLogLocation enum","description":"Specifies the location where security-related event logs are written.\n","toc_asset_id":"api/_splitted/System.ServiceModel/toc.json","toc_rel":"_splitted/System.ServiceModel/toc.json","source_url":"","ms.assetid":"System.ServiceModel.AuditLogLocation","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.auditloglocation","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.auditloglocation","fileRelativePath":"api/System.ServiceModel.AuditLogLocation.html"},"themesRelativePathToOutputRoot":"_themes/"}