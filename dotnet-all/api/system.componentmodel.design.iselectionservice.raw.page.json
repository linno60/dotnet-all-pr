{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ISelectionService</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface for a designer to select components.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface ISelectionService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates use of the ISelectionService to handle the <a class=\"xref\" href=\"system.componentmodel.design.iselectionservice#System_ComponentModel_Design_ISelectionService_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> and <a class=\"xref\" href=\"system.componentmodel.design.iselectionservice#System_ComponentModel_Design_ISelectionService_SelectionChanging\" data-linktype=\"relative-path\">SelectionChanging</a> events.  </p>\n<pre><code class=\"lang-vb\" name=\"ISelectionServiceSample#1\">Imports System\nImports System.Drawing\nImports System.Collections\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Windows.Forms\nImports Microsoft.VisualBasic\n\n&#39;  This sample demonstrates using the ISelectionService\n&#39;  interface to receive notification of selection change events.  \n\n&#39;  The SelectionComponent control attempts to retrieve an instance \n&#39;  of the ISelectionService when it is sited. If it can, it attaches \n&#39;  event handlers for events provided by the service that display\n&#39;  a message when a component is selected or deselected.\n&#39;  To run this sample, add the SelectionComponent control to a Form and\n&#39;  then select or deselect components in design mode to see the behavior \n&#39;  of the component change event handlers. \n\nNamespace ISelectionServiceExample\n\n    Public Class SelectionComponent\n        Inherits System.Windows.Forms.UserControl\n        Private tbox1 As System.Windows.Forms.TextBox\n        Private selectionService As ISelectionService        \n\n        Public Sub New()\n            &#39; Initialize control\n            Me.SuspendLayout()\n            Me.Name = &quot;SelectionComponent&quot;\n            Me.Size = New System.Drawing.Size(608, 296)\n            Me.tbox1 = New System.Windows.Forms.TextBox()\n            Me.tbox1.Location = New System.Drawing.Point(24, 16)\n            Me.tbox1.Name = &quot;listBox1&quot;\n            Me.tbox1.Multiline = True\n            Me.tbox1.Size = New System.Drawing.Size(560, 251)\n            Me.tbox1.TabIndex = 0\n            Me.Controls.Add(Me.tbox1)\n            Me.ResumeLayout()\n        End Sub &#39;New\n\n        Public Overrides Property Site() As ISite\n            Get\n                Return MyBase.Site\n            End Get\n            Set(ByVal Value As ISite)\n                &#39; The ISelectionService is available in design mode \n                &#39; only, and only after the component is sited.\n                If (selectionService IsNot Nothing) Then\n                    &#39; Because the selection service has been \n                    &#39; previously obtained, the component may be in \n                    &#39; the process of being resited. \n                    &#39; Detatch the previous selection change event \n                    &#39; handlers in case the new selection\n                    &#39; service is a new service instance belonging to \n                    &#39; another design mode service host.\n                    RemoveHandler selectionService.SelectionChanged, AddressOf OnSelectionChanged\n                    RemoveHandler selectionService.SelectionChanging, AddressOf OnSelectionChanging\n                End If\n\n                &#39; Establish the new site for the component.\n                MyBase.Site = Value\n\n                If MyBase.Site Is Nothing Then\n                    Return\n                End If\n\n                &#39; The selection service is not available outside of \n                &#39; design mode. A call requesting the service \n                &#39; using GetService while not in design mode will \n                &#39; return null.\n                selectionService = Me.Site.GetService(GetType(ISelectionService))\n\n                &#39; If an instance of the ISelectionService was obtained, \n                &#39; attach event handlers for the selection \n                &#39; changing and selection changed events.\n                If (selectionService IsNot Nothing) Then\n                    &#39; Add an event handler for the SelectionChanging and SelectionChanged events.\n                    AddHandler selectionService.SelectionChanging, AddressOf OnSelectionChanging\n                    AddHandler selectionService.SelectionChanged, AddressOf OnSelectionChanged\n                End If\n            End Set\n        End Property\n\n        Private Sub OnSelectionChanged(ByVal sender As Object, ByVal args As EventArgs)            \n            tbox1.AppendText(&quot;The selected component was changed.  Selected components:&quot; + Microsoft.VisualBasic.ControlChars.CrLf + &quot;    &quot; + GetSelectedComponents() + Microsoft.VisualBasic.ControlChars.CrLf)\n        End Sub &#39;OnSelectionChanged\n\n        Private Sub OnSelectionChanging(ByVal sender As Object, ByVal args As EventArgs)                        \n            tbox1.AppendText(&quot;The selected component is changing.  Selected components:&quot; + Microsoft.VisualBasic.ControlChars.CrLf + &quot;    &quot; + GetSelectedComponents() + Microsoft.VisualBasic.ControlChars.CrLf)\n        End Sub &#39;OnSelectionChanging\n\n        Private Function GetSelectedComponents() As String\n            Dim selectedString As String = String.Empty\n            Dim components(CType(selectionService.GetSelectedComponents(), ICollection).Count - 1) As Object\n            CType(selectionService.GetSelectedComponents(), ICollection).CopyTo(components, 0)\n\n            Dim i As Integer\n            For i = 0 To components.Length - 1\n                If i &lt;&gt; 0 Then\n                    selectedString += &quot;&amp;&amp; &quot;\n                End If\n                If CType(selectionService.PrimarySelection, IComponent) Is CType(components(i), IComponent) Then\n                    selectedString += &quot;PrimarySelection:&quot;\n                End If\n                selectedString += CType(components(i), IComponent).Site.Name + &quot; &quot;\n            Next i\n\n            Return selectedString\n        End Function &#39;GetSelectedComponents\n\n        &#39; Clean up any resources being used.\n        Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n            &#39; Detatch the event handlers for the selection service.\n            If (selectionService IsNot Nothing) Then\n                RemoveHandler selectionService.SelectionChanging, AddressOf OnSelectionChanging\n                RemoveHandler selectionService.SelectionChanged, AddressOf OnSelectionChanged\n            End If\n            MyBase.Dispose(disposing)\n        End Sub &#39;Dispose\n    End Class &#39;SelectionComponent\n\nEnd Namespace &#39;ISelectionServiceExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"ISelectionServiceSample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Windows::Forms;\n\n/*  This sample demonstrates using the ISelectionService\ninterface to receive notification of selection change events.  \nThe SelectionComponent control attempts to retrieve an instance \nof the ISelectionService when it is sited. If it can, it attaches \nevent handlers for events provided by the service that display\na message when a component is selected or deselected.\n\nTo run this sample, add the SelectionComponent control to a Form and\nthen select or deselect components in design mode to see the behavior \nof the component change event handlers. */\nnamespace ISelectionServiceExample\n{\n   public ref class SelectionComponent: public System::Windows::Forms::UserControl\n   {\n   private:\n      System::Windows::Forms::TextBox^ tbox1;\n      ISelectionService^ selectionService;\n\n   public:\n      SelectionComponent()\n      {\n         // Initialize control\n         this-&gt;SuspendLayout();\n         this-&gt;Name = &quot;SelectionComponent&quot;;\n         this-&gt;Size = System::Drawing::Size( 608, 296 );\n         this-&gt;tbox1 = gcnew System::Windows::Forms::TextBox;\n         this-&gt;tbox1-&gt;Location = System::Drawing::Point( 24, 16 );\n         this-&gt;tbox1-&gt;Name = &quot;listBox1&quot;;\n         this-&gt;tbox1-&gt;Multiline = true;\n         this-&gt;tbox1-&gt;Size = System::Drawing::Size( 560, 251 );\n         this-&gt;tbox1-&gt;TabIndex = 0;\n         this-&gt;Controls-&gt;Add( this-&gt;tbox1 );\n         this-&gt;ResumeLayout();\n      }\n\n      property ISite^ Site \n      {\n         virtual ISite^ get() override\n         {\n            return __super::Site;\n         }\n\n         virtual void set( ISite^ value ) override\n         {\n            // The ISelectionService is available in design mode \n            // only, and only after the component is sited.\n            if ( selectionService != nullptr )\n            {\n               // Because the selection service has been \n               // previously obtained, the component may be in \n               // the process of being resited. \n               // Detatch the previous selection change event \n               // handlers in case the new selection\n               // service is a new service instance belonging to \n               // another design mode service host.\n               selectionService-&gt;SelectionChanged -= gcnew EventHandler( this, &amp;SelectionComponent::OnSelectionChanged );\n               selectionService-&gt;SelectionChanging -= gcnew EventHandler( this, &amp;SelectionComponent::OnSelectionChanging );\n            }\n\n            // Establish the new site for the component.\n            __super::Site = value;\n            if ( __super::Site == nullptr )\n                        return;\n\n            // The selection service is not available outside of \n            // design mode. A call requesting the service \n            // using GetService while not in design mode will \n            // return null.\n            selectionService = dynamic_cast&lt;ISelectionService^&gt;(this-&gt;Site-&gt;GetService( ISelectionService::typeid ));\n\n            // If an instance of the ISelectionService was obtained, \n            // attach event handlers for the selection \n            // changing and selection changed events.\n            if ( selectionService != nullptr )\n            {\n               // Add an event handler for the SelectionChanging \n               // and SelectionChanged events.\n               selectionService-&gt;SelectionChanging += gcnew EventHandler( this, &amp;SelectionComponent::OnSelectionChanging );\n               selectionService-&gt;SelectionChanged += gcnew EventHandler( this, &amp;SelectionComponent::OnSelectionChanged );\n            }\n         }\n      }\n\n   private:\n      void OnSelectionChanged( Object^ /*sender*/, EventArgs^ /*args*/ )\n      {\n         tbox1-&gt;AppendText( String::Format( &quot;The selected component was changed.  Selected components:\\r\\n    {0}\\r\\n&quot;, GetSelectedComponents() ) );\n      }\n\n      void OnSelectionChanging( Object^ /*sender*/, EventArgs^ /*args*/ )\n      {\n         tbox1-&gt;AppendText( String::Format( &quot;The selected component is changing. Selected components:\\r\\n    {0}\\r\\n&quot;, GetSelectedComponents() ) );\n      }\n\n      String^ GetSelectedComponents()\n      {\n         String^ selectedString = String::Empty;\n         array&lt;Object^&gt;^components = gcnew array&lt;Object^&gt;((dynamic_cast&lt;ICollection^&gt;(selectionService-&gt;GetSelectedComponents()))-&gt;Count);\n         (dynamic_cast&lt;ICollection^&gt;(selectionService-&gt;GetSelectedComponents()))-&gt;CopyTo( components, 0 );\n         for ( int i = 0; i &lt; components-&gt;Length; i++ )\n         {\n            if ( i != 0 )\n                        selectedString = selectedString + &quot;&amp;&amp; &quot;;\n\n            if ( (dynamic_cast&lt;IComponent^&gt;(selectionService-&gt;PrimarySelection)) == (dynamic_cast&lt;IComponent^&gt;(components[ i ])) )\n                        selectedString = selectedString + &quot;PrimarySelection:&quot;;\n\n            selectedString = selectedString + (dynamic_cast&lt;IComponent^&gt;(components[ i ]))-&gt;Site-&gt;Name + &quot; &quot;;\n\n         }\n         return selectedString;\n      }\n\n      // Clean up any resources being used.\n   public:\n      ~SelectionComponent()\n      {\n         // Detach the event handlers for the selection service.\n         if ( selectionService != nullptr )\n         {\n            selectionService-&gt;SelectionChanging -= gcnew EventHandler( this, &amp;SelectionComponent::OnSelectionChanging );\n            selectionService-&gt;SelectionChanged -= gcnew EventHandler( this, &amp;SelectionComponent::OnSelectionChanged );\n         }\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"ISelectionServiceSample#1\">using System;\nusing System.Drawing;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Windows.Forms;\n\n/*  This sample demonstrates using the ISelectionService\n    interface to receive notification of selection change events.  \n    The SelectionComponent control attempts to retrieve an instance \n    of the ISelectionService when it is sited. If it can, it attaches \n    event handlers for events provided by the service that display\n    a message when a component is selected or deselected.\n\n    To run this sample, add the SelectionComponent control to a Form and\n    then select or deselect components in design mode to see the behavior \n    of the component change event handlers. */\n\nnamespace ISelectionServiceExample \n{\n    public class SelectionComponent : System.Windows.Forms.UserControl \n    {\t\t\n        private System.Windows.Forms.TextBox tbox1;\n        private ISelectionService selectionService;\n        \n        public SelectionComponent() \n        {\n            // Initialize control\n            this.SuspendLayout();\t\t\t\n            this.Name = &quot;SelectionComponent&quot;;\n            this.Size = new System.Drawing.Size(608, 296);\t\t\t\t\t\t\t\t\t\n            this.tbox1 = new System.Windows.Forms.TextBox();\t\t\t\n            this.tbox1.Location = new System.Drawing.Point(24, 16);\n            this.tbox1.Name = &quot;listBox1&quot;;\n            this.tbox1.Multiline = true;\n            this.tbox1.Size = new System.Drawing.Size(560, 251);\n            this.tbox1.TabIndex = 0;\n            this.Controls.Add(this.tbox1);\n            this.ResumeLayout();\n        }\n        \n        public override ISite Site \n        {\n            get \n            {\n                return base.Site;\n            }\n            set \n            {\n                // The ISelectionService is available in design mode \n                // only, and only after the component is sited.\n                if (selectionService != null) \n                {\n                    // Because the selection service has been \n                    // previously obtained, the component may be in \n                    // the process of being resited. \n                    // Detatch the previous selection change event \n                    // handlers in case the new selection\n                    // service is a new service instance belonging to \n                    // another design mode service host.\n                    selectionService.SelectionChanged -= new EventHandler(OnSelectionChanged);\n                    selectionService.SelectionChanging -= new EventHandler(OnSelectionChanging);\n                }\n\n                // Establish the new site for the component.\n                base.Site = value;\t\t\t\t\n\n                if( base.Site == null )\n                    return;\n\n                // The selection service is not available outside of \n                // design mode. A call requesting the service \n                // using GetService while not in design mode will \n                // return null.\n                selectionService = (ISelectionService)this.Site.GetService(typeof(ISelectionService));\n\n                // If an instance of the ISelectionService was obtained, \n                // attach event handlers for the selection \n                // changing and selection changed events.\n                if (selectionService != null)\n                {\n                    // Add an event handler for the SelectionChanging \n                    // and SelectionChanged events.\n                    selectionService.SelectionChanging += new EventHandler(OnSelectionChanging);\t\t\t\t\t\n                    selectionService.SelectionChanged += new EventHandler(OnSelectionChanged);\t\n                }\n            }\n        }\n        \n        private void OnSelectionChanged(object sender, EventArgs args)\n        {\t\t\t\t\t\t\n            tbox1.AppendText(&quot;The selected component was changed.  Selected components:\\r\\n    &quot; + GetSelectedComponents() + &quot;\\r\\n&quot;);\n        }\n        \n        private void OnSelectionChanging(object sender, EventArgs args)\n        {\n            tbox1.AppendText(&quot;The selected component is changing. Selected components:\\r\\n    &quot; + GetSelectedComponents() + &quot;\\r\\n&quot;);\t\t\t\n        }\n        \n        private string GetSelectedComponents()\n        {\n            string selectedString = String.Empty;\n            object[] components = new object[((ICollection)selectionService.GetSelectedComponents()).Count];\n            ((ICollection)selectionService.GetSelectedComponents()).CopyTo(components, 0);\n\n            for(int i=0; i&lt;components.Length; i++)\n            {\n                if( i != 0 )\n                    selectedString += &quot;&amp;&amp; &quot;;\n                if( ((IComponent)selectionService.PrimarySelection) == ((IComponent)components[i]) )\n                    selectedString += &quot;PrimarySelection:&quot;;\t\t\t\t\n                selectedString += ((IComponent)components[i]).Site.Name+&quot; &quot;;\n            }\n            return selectedString;\n        }\n        \n        // Clean up any resources being used.\n        protected override void Dispose( bool disposing )\n        {\n            // Detatch the event handlers for the selection service.\n            if( selectionService != null )\n            {\n                selectionService.SelectionChanging -= new EventHandler(this.OnSelectionChanging);\n                selectionService.SelectionChanged -= new EventHandler(this.OnSelectionChanged);\n            }\n\n            base.Dispose( disposing );\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When a component is selected, its viewable or editable properties are shown in the Properties window.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_ISelectionService_PrimarySelection_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_PrimarySelection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PrimarySelection</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the object that is currently the primary selected object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object PrimarySelection { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object that is currently the primary selected object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When multiple components are selected at design time, one of the objects is the primary selected object. Some operations behave differently depending on which selected component is the primary selected object. The primary selected object is typically the last object that was selected, but the primary object of a multiple component selection can be changed to any of the selected components. The primary selected object has a selection border that is distinct in appearance from the other selected objects. The specific type of visual distinction depends on the development environment&#39;s implementation of a selection user interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_ISelectionService_SelectionCount_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_SelectionCount\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectionCount</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the count of selected objects.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int SelectionCount { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of selected objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_ISelectionService_GetComponentSelected_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_GetComponentSelected_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetComponentSelected(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the specified component is currently selected.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool GetComponentSelected (object component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The component to test.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the component is part of the user&#39;s current selection; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be used to check whether a specific component is currently selected. This process is generally quicker than getting and parsing the entire list of selected components.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_ISelectionService_GetSelectedComponents_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_GetSelectedComponents\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSelectedComponents()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of components that are currently selected.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.ICollection GetSelectedComponents ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A collection that represents the current set of components that are selected.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_ISelectionService_SetSelectedComponents_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_SetSelectedComponents_System_Collections_ICollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetSelectedComponents(ICollection)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Selects the specified collection of components.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetSelectedComponents (System.Collections.ICollection components);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>components</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The collection of components to select.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the array is <code>null</code> or does not contain any components, SetSelectedComponents selects the top-level component in the designer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_ISelectionService_SetSelectedComponents_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_SetSelectedComponents_System_Collections_ICollection_System_ComponentModel_Design_SelectionTypes_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetSelectedComponents(ICollection, SelectionTypes)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Selects the components from within the specified collection of components that match the specified selection type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetSelectedComponents (System.Collections.ICollection components, System.ComponentModel.Design.SelectionTypes selectionType);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>components</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The collection of components to select.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>selectionType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.selectiontypes\" data-linktype=\"relative-path\">SelectionTypes</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value from the <a class=\"xref\" href=\"system.componentmodel.design.selectiontypes\" data-linktype=\"relative-path\">SelectionTypes</a> enumeration. The default is <a class=\"xref\" href=\"system.componentmodel.design.selectiontypes\" data-linktype=\"relative-path\">SelectionTypes</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the array is <code>null</code> or does not contain any components, <a class=\"xref\" href=\"system.componentmodel.design.iselectionservice#System_ComponentModel_Design_ISelectionService_SetSelectedComponents_\" data-linktype=\"relative-path\">SetSelectedComponents</a> selects the top-level component in the designer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_SelectionChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectionChanged</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the current selection changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler SelectionChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_ISelectionService_SelectionChanging\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectionChanging</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the current selection is about to change.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler SelectionChanging;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.ISelectionService.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.GetComponentSelected\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.GetSelectedComponents\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.PrimarySelection\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.SelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.add_SelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.remove_SelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.SelectionChanging\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.add_SelectionChanging\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.remove_SelectionChanging\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.SelectionCount\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ISelectionService.SetSelectedComponents\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"3b7f58ae-64dd-1510-d899-7beb1cce8673\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface for a designer to select components.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.ISelectionService\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.ISelectionService.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.ISelectionService","System.ComponentModel.Design.ISelectionService.GetComponentSelected","System.ComponentModel.Design.ISelectionService.GetSelectedComponents","System.ComponentModel.Design.ISelectionService.PrimarySelection","System.ComponentModel.Design.ISelectionService.SelectionChanged","System.ComponentModel.Design.ISelectionService.add_SelectionChanged","System.ComponentModel.Design.ISelectionService.remove_SelectionChanged","System.ComponentModel.Design.ISelectionService.SelectionChanging","System.ComponentModel.Design.ISelectionService.add_SelectionChanging","System.ComponentModel.Design.ISelectionService.remove_SelectionChanging","System.ComponentModel.Design.ISelectionService.SelectionCount","System.ComponentModel.Design.ISelectionService.SetSelectedComponents"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.ISelectionService","System::ComponentModel::Design::ISelectionService","System.ComponentModel.Design.ISelectionService.GetComponentSelected","System::ComponentModel::Design::ISelectionService::GetComponentSelected","System.ComponentModel.Design.ISelectionService.GetSelectedComponents","System::ComponentModel::Design::ISelectionService::GetSelectedComponents","System.ComponentModel.Design.ISelectionService.PrimarySelection","System::ComponentModel::Design::ISelectionService::PrimarySelection","System.ComponentModel.Design.ISelectionService.SelectionChanged","System::ComponentModel::Design::ISelectionService::SelectionChanged","System.ComponentModel.Design.ISelectionService.SelectionChanging","System::ComponentModel::Design::ISelectionService::SelectionChanging","System.ComponentModel.Design.ISelectionService.SelectionCount","System::ComponentModel::Design::ISelectionService::SelectionCount","System.ComponentModel.Design.ISelectionService.SetSelectedComponents","System::ComponentModel::Design::ISelectionService::SetSelectedComponents"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"3b7f58ae-64dd-1510-d899-7beb1cce8673","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/ISelectionService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ISelectionService interface | Microsoft Docs","_op_ogTitle":"ISelectionService interface","description":"Provides an interface for a designer to select components.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.ISelectionService","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.iselectionservice","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.iselectionservice","fileRelativePath":"api/System.ComponentModel.Design.ISelectionService.html"},"themesRelativePathToOutputRoot":"_themes/"}