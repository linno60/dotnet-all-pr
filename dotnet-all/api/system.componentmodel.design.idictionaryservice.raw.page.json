{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDictionaryService</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a basic, component site-specific, key-value pair dictionary through a service that a designer can use to store user-defined data.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDictionaryService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example control and designer use the IDictionaryService to share data through its site-specific key-value pair dictionary.  </p>\n<pre><code class=\"lang-cs\" name=\"IDictionaryServiceExample#1\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Data;\nusing System.Windows.Forms;\n\nnamespace IDictionaryServiceControl\n{\n    // This example control works with the IDictionaryServiceDesigner to demonstrate\n    // using the IDictionaryService for storing data provided by a designer, and\n    // accessing it from a control. The IDictionaryService provides a Site-specific \n    // key-based dictionary. An IDictionaryServiceDesigner sets an ArrayList of strings \n    // to the dictionary with a &quot;DesignerData&quot; key, and its contents are accessed and\n    // displayed once the Update box is clicked at design time.\n    [DesignerAttribute(typeof(IDictionaryServiceDesigner), typeof(IDesigner))]\n    public class IDictionaryServiceControl : System.Windows.Forms.UserControl\n    {\n        public ArrayList al;\n\n        public IDictionaryServiceControl()\n        {            \n            // Initializes the example control.\n            al = new ArrayList();\n            this.Size = new Size(344, 88);\n            this.BackColor = Color.White;\n        }\n\n        // Draws the instructions and user interface, and any strings contained \n        // in a local ArrayList.\n        protected override void OnPaint(System.Windows.Forms.PaintEventArgs e)\n        {\n            if( this.DesignMode )\n            {\n                e.Graphics.DrawString(&quot;IDictionaryServiceDesigner Control&quot;, new Font(FontFamily.GenericMonospace, 9), new SolidBrush(Color.Blue), 5, 4);                         \n                e.Graphics.DrawString(&quot;Click the Update box to update display strings&quot;, new Font(FontFamily.GenericMonospace, 8), new SolidBrush(Color.DarkGreen), 5, 17);\n                e.Graphics.DrawString(&quot;from the IDictionaryService.&quot;, new Font(FontFamily.GenericMonospace, 8), new SolidBrush(Color.DarkGreen), 5, 29);                 \n                \n                e.Graphics.FillRectangle(new SolidBrush(Color.Beige), 270, 7, 60, 10);\n                e.Graphics.DrawRectangle(new Pen(new SolidBrush(Color.Black), 1), 270, 7, 60, 10);\n                e.Graphics.DrawString(&quot;Update&quot;, new Font(FontFamily.GenericMonospace, 7), new SolidBrush(Color.Black), 282, 7);\n\n                for( int i=0; i&lt;al.Count; i++ )            \n                    e.Graphics.DrawString((string)al[i], new Font(FontFamily.GenericMonospace, 8), new SolidBrush(Color.Black), 5, 44+(i*12));            \n            }\n        }\n\n        // On mouse down, this method attempts to access the IDictionaryService and \n        // obtain an ArrayList with a key of &quot;DesignerData&quot; in the dictionary.\n        // If successful, this ArrayList is set to the local ArrayList.\n        protected override void OnMouseDown(System.Windows.Forms.MouseEventArgs e)\n        {\n            // Attempts to obtain the IDictionaryService using the Control.GetService method.\n            IDictionaryService ds = (IDictionaryService)GetService(typeof(IDictionaryService));\n            // If the service was obtained...\n            if( ds != null )\n            {\n                // Attempts to retrieve a list with a key of &quot;DesignerData&quot;.\n                ArrayList list = (ArrayList)ds.GetValue( &quot;DesignerData&quot; );\n                // If the list exists, sets the list obtained by the \n                // IDictionaryService to the local list.\n                if( list != null )\n                    this.al = list;\n                this.Refresh();\n            }\n        }\n    }\n\n    // This designer uses the IDictionaryService to store an ArrayList of\n    // information strings that the associated control can access and \n    // display. The IDictionaryService creates a new dictionary for each Site.\n    public class IDictionaryServiceDesigner : System.Windows.Forms.Design.ControlDesigner\n    {\n        public IDictionaryServiceDesigner()\n        {\n        }\n\n        // On designer initialization, this method attempts to obtain \n        // the IDictionaryService, and populates an ArrayList\n        // associated with a &quot;DesignerData&quot; key in the dictionary with \n        // designer- and control-related information strings.\n        public override void Initialize(System.ComponentModel.IComponent component)\n        {\n            base.Initialize(component);            \n            IDictionaryService ds = (IDictionaryService)component.Site.GetService(typeof(IDictionaryService));\n            if( ds != null )\n            {\n                // If the dictionary service does not contain a \n                // DesignerData key, adds an ArrayList for that key.\n                if( ds.GetValue( &quot;DesignerData&quot; ) == null )           \n                {\n                    ds.SetValue( &quot;DesignerData&quot;, new ArrayList() );\n                       ds.SetValue( &quot;DesignerData&quot;, new ArrayList() );\n                }\n\n                // Obtains the ArrayList with the &quot;DesignerData&quot; key \n                // from the dictionary service.\n                ArrayList al = (ArrayList)ds.GetValue( &quot;DesignerData&quot; );\n                if( al != null )\n                {\n                    al.Clear();\n                    // Populates the array list with designer and \n                    // control information strings.\n                    al.Add( &quot;Designer type: &quot;+this.GetType().Name );\n                    al.Add( &quot;Control type:  &quot;+this.Control.GetType().Name );\n                    al.Add( &quot;Control name:  &quot;+this.Control.Name );                    \n                }\n            }\n        }\n\n        protected override bool GetHitTest(System.Drawing.Point point)\n        {\n            // Translates the point to client coordinates and passes the \n            // messages to the control while over the click box.\n            Point translated = this.Control.PointToClient(point);\n            if( translated.X &gt; 269 &amp;&amp; translated.X &lt; 331 \n                &amp;&amp; translated.Y &gt; 7 &amp;&amp; translated.Y &lt; 18 )\n                return true;\n            else\n                return base.GetHitTest(point);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"IDictionaryServiceExample#1\">#using &lt;System.Design.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Data.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Data;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\n\nnamespace IDictionaryServiceControl\n{\n   ref class IDictionaryServiceDesigner;\n\n   // This example control works with the IDictionaryServiceDesigner to demonstrate\n   // using the IDictionaryService for storing data provided by a designer, and\n   // accessing it from a control. The IDictionaryService provides a Site-specific \n   // key-based dictionary. An IDictionaryServiceDesigner sets an ArrayList of strings \n   // to the dictionary with a &quot;DesignerData&quot; key, and its contents are accessed and\n   // displayed once the Update box is clicked at design time.\n\n   [DesignerAttribute(IDictionaryServiceDesigner::typeid,IDesigner::typeid)]\n   public ref class IDictionaryServiceControl: public System::Windows::Forms::UserControl\n   {\n   public:\n      ArrayList^ al;\n      IDictionaryServiceControl()\n      {\n         // Initializes the example control.\n         al = gcnew ArrayList;\n         this-&gt;Size = System::Drawing::Size( 344, 88 );\n         this-&gt;BackColor = Color::White;\n      }\n\n   protected:\n\n      // Draws the instructions and user interface, and any strings contained \n      // in a local ArrayList.\n      virtual void OnPaint( System::Windows::Forms::PaintEventArgs^ e ) override\n      {\n         if ( this-&gt;DesignMode )\n         {\n            e-&gt;Graphics-&gt;DrawString( &quot;IDictionaryServiceDesigner Control&quot;, gcnew System::Drawing::Font( FontFamily::GenericMonospace,9 ), gcnew SolidBrush( Color::Blue ), 5, 4 );\n            e-&gt;Graphics-&gt;DrawString( &quot;Click the Update box to update display strings&quot;, gcnew System::Drawing::Font( FontFamily::GenericMonospace,8 ), gcnew SolidBrush( Color::DarkGreen ), 5, 17 );\n            e-&gt;Graphics-&gt;DrawString( &quot;from the IDictionaryService.&quot;, gcnew System::Drawing::Font( FontFamily::GenericMonospace,8 ), gcnew SolidBrush( Color::DarkGreen ), 5, 29 );\n            e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Beige ), 270, 7, 60, 10 );\n            e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( gcnew SolidBrush( Color::Black ),1 ), 270, 7, 60, 10 );\n            e-&gt;Graphics-&gt;DrawString( &quot;Update&quot;, gcnew System::Drawing::Font( FontFamily::GenericMonospace,7 ), gcnew SolidBrush( Color::Black ), 282, 7 );\n            for ( int i = 0; i &lt; al-&gt;Count; i++ )\n               e-&gt;Graphics-&gt;DrawString( dynamic_cast&lt;String^&gt;(al[ i ]), gcnew System::Drawing::Font( FontFamily::GenericMonospace,8 ), gcnew SolidBrush( Color::Black ), 5.0f, 44.0f + (i * 12) );\n         }\n      }\n\n      // On mouse down, this method attempts to access the IDictionaryService and \n      // obtain an ArrayList with a key of &quot;DesignerData&quot; in the dictionary.\n      // If successful, this ArrayList is set to the local ArrayList.\n      virtual void OnMouseDown( System::Windows::Forms::MouseEventArgs^ /*e*/ ) override\n      {\n         // Attempts to obtain the IDictionaryService using the Control.GetService method.\n         IDictionaryService^ ds = dynamic_cast&lt;IDictionaryService^&gt;(GetService( IDictionaryService::typeid ));\n\n         // If the service was obtained...\n         if ( ds != nullptr )\n         {\n            // Attempts to retrieve a list with a key of &quot;DesignerData&quot;.\n            ArrayList^ list = dynamic_cast&lt;ArrayList^&gt;(ds-&gt;GetValue( &quot;DesignerData&quot; ));\n            \n            // If the list exists, sets the list obtained by the \n            // IDictionaryService to the local list.\n            if ( list != nullptr )\n                        this-&gt;al = list;\n            this-&gt;Refresh();\n         }\n      }\n\n   };\n\n   // This designer uses the IDictionaryService to store an ArrayList of\n   // information strings that the associated control can access and \n   // display. The IDictionaryService creates a new dictionary for each Site.\n   public ref class IDictionaryServiceDesigner: public System::Windows::Forms::Design::ControlDesigner\n   {\n   public:\n      IDictionaryServiceDesigner(){}\n\n      // On designer initialization, this method attempts to obtain \n      // the IDictionaryService, and populates an ArrayList\n      // associated with a &quot;DesignerData&quot; key in the dictionary with \n      // designer- and control-related information strings.\n      virtual void Initialize( System::ComponentModel::IComponent^ component ) override\n      {\n         ControlDesigner::Initialize( component );\n         IDictionaryService^ ds = dynamic_cast&lt;IDictionaryService^&gt;(component-&gt;Site-&gt;GetService( IDictionaryService::typeid ));\n         if ( ds != nullptr )\n         {\n            // If the dictionary service does not contain a \n            // DesignerData key, adds an ArrayList for that key.\n            if ( ds-&gt;GetValue( &quot;DesignerData&quot; ) == nullptr )\n            {\n               ds-&gt;SetValue( &quot;DesignerData&quot;, gcnew ArrayList );\n               ds-&gt;SetValue( &quot;DesignerData&quot;, gcnew ArrayList );\n            }\n\n            // Obtains the ArrayList with the &quot;DesignerData&quot; key \n            // from the dictionary service.\n            ArrayList^ al = dynamic_cast&lt;ArrayList^&gt;(ds-&gt;GetValue( &quot;DesignerData&quot; ));\n            if ( al != nullptr )\n            {\n               al-&gt;Clear();\n\n               // Populates the array list with designer and \n               // control information strings.\n               al-&gt;Add( String::Format( &quot;Designer type: {0}&quot;, this-&gt;GetType()-&gt;Name ) );\n               al-&gt;Add( String::Format( &quot;Control type:  {0}&quot;, this-&gt;Control-&gt;GetType()-&gt;Name ) );\n               al-&gt;Add( String::Format( &quot;Control name:  {0}&quot;, this-&gt;Control-&gt;Name ) );\n            }\n         }\n      }\n\n   protected:\n      virtual bool GetHitTest( System::Drawing::Point point ) override\n      {\n         // Translates the point to client coordinates and passes the \n         // messages to the control while over the click box.\n         Point translated = this-&gt;Control-&gt;PointToClient( point );\n         if ( translated.X &gt; 269 &amp;&amp; translated.X &lt; 331 &amp;&amp; translated.Y &gt; 7 &amp;&amp; translated.Y &lt; 18 )\n                  return true;\n         else\n                  return ControlDesigner::GetHitTest( point );\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IDictionaryServiceExample#1\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Data\nImports System.Windows.Forms\n\nNamespace IDictionaryServiceControl\n\n    &#39; This example control works with the IDictionaryServiceDesigner to demonstrate\n    &#39; using the IDictionaryService for storing data provided by a designer, and\n    &#39; accessing it from a control. The IDictionaryService provides a Site-specific \n    &#39; key-based dictionary. An IDictionaryServiceDesigner sets an ArrayList of strings \n    &#39; to the dictionary with a &quot;DesignerData&quot; key, and its contents are accessed and\n    &#39; displayed once the Update box is clicked at design time.\n    &lt;DesignerAttribute(GetType(IDictionaryServiceDesigner), GetType(IDesigner))&gt; _\n     Public Class IDictionaryServiceControl\n        Inherits System.Windows.Forms.UserControl\n        Public al As ArrayList\n\n        Public Sub New()\n            &#39; Initializes the example control.\n            al = New ArrayList()\n            Me.Size = New Size(344, 88)\n            Me.BackColor = Color.White\n        End Sub \n\n        &#39; Draws the instructions and user interface, and any strings contained\n        &#39; in a local ArrayList.\n        Protected Overrides Sub OnPaint(ByVal e As System.Windows.Forms.PaintEventArgs)\n            If Me.DesignMode Then\n                e.Graphics.DrawString(&quot;IDictionaryServiceDesigner Control&quot;, New Font(FontFamily.GenericMonospace, 9), New SolidBrush(Color.Blue), 5, 4)\n                e.Graphics.DrawString(&quot;Click the Update box to update display strings&quot;, New Font(FontFamily.GenericMonospace, 8), New SolidBrush(Color.DarkGreen), 5, 17)\n                e.Graphics.DrawString(&quot;from the IDictionaryService.&quot;, New Font(FontFamily.GenericMonospace, 8), New SolidBrush(Color.DarkGreen), 5, 29)\n\n                e.Graphics.FillRectangle(New SolidBrush(Color.Beige), 270, 7, 60, 10)\n                e.Graphics.DrawRectangle(New Pen(New SolidBrush(Color.Black), 1), 270, 7, 60, 10)\n                e.Graphics.DrawString(&quot;Update&quot;, New Font(FontFamily.GenericMonospace, 7), New SolidBrush(Color.Black), 282, 7)\n\n                Dim i As Integer\n                For i = 0 To al.Count - 1\n                    e.Graphics.DrawString(CStr(al(i)), New Font(FontFamily.GenericMonospace, 8), New SolidBrush(Color.Black), 5, 44 + i * 12)\n                Next i\n            End If\n        End Sub\n\n        &#39; On mouse down, this method attempts to access the IDictionaryService and \n        &#39; obtain an ArrayList with a key of &quot;DesignerData&quot; in the dictionary.\n        &#39; If successful, this ArrayList is set to the local ArrayList.\n        Protected Overrides Sub OnMouseDown(ByVal e As System.Windows.Forms.MouseEventArgs)\n            &#39; Attempts to obtain the IDictionaryService using the Control.GetService method.\n            Dim ds As IDictionaryService = CType(GetService(GetType(IDictionaryService)), IDictionaryService)\n            &#39; If the service was obtained...\n            If (ds IsNot Nothing) Then\n                &#39; Attempts to retrieve a list with a key of &quot;DesignerData&quot;.\n                Dim list As ArrayList = CType(ds.GetValue(&quot;DesignerData&quot;), ArrayList)\n                &#39; If the list exists, sets the list obtained by the \n                &#39; IDictionaryService to the local list.\n                If (list IsNot Nothing) Then\n                    Me.al = list\n                End If\n                Me.Refresh()\n            End If\n        End Sub \n    End Class \n\n    &#39; This designer uses the IDictionaryService to store an ArrayList of \n    &#39; information strings that the associated control can access and \n    &#39; display. The IDictionaryService creates a new dictionary for each Site.\n    Public Class IDictionaryServiceDesigner\n        Inherits System.Windows.Forms.Design.ControlDesigner\n\n        Public Sub New()\n        End Sub \n\n        &#39; On designer initialization, this method attempts to obtain \n        &#39; the IDictionaryService, and populates an ArrayList\n        &#39; associated with a &quot;DesignerData&quot; key in the dictionary with \n        &#39; designer- and control-related information strings.\n        Public Overrides Sub Initialize(ByVal component As System.ComponentModel.IComponent)\n            MyBase.Initialize(component)\n            Dim ds As IDictionaryService = CType(component.Site.GetService(GetType(IDictionaryService)), IDictionaryService)\n            If (ds IsNot Nothing) Then\n                &#39; If the dictionary service does not contain a \n                &#39; DesignerData key, adds an ArrayList for that key.\n                If ds.GetValue(&quot;DesignerData&quot;) Is Nothing Then\n                    ds.SetValue(&quot;DesignerData&quot;, New ArrayList())\n                    ds.SetValue(&quot;DesignerData&quot;, New ArrayList())\n                End If\n\n                &#39; Obtains the ArrayList with the &quot;DesignerData&quot; key \n                &#39; from the dictionary service.\n                Dim al As ArrayList = CType(ds.GetValue(&quot;DesignerData&quot;), ArrayList)\n                If (al IsNot Nothing) Then\n                    al.Clear()\n                    &#39; Populates the array list with designer and \n                    &#39; control information strings.\n                    al.Add((&quot;Designer type: &quot; + Me.GetType().Name))\n                    al.Add((&quot;Control type:  &quot; + Me.Control.GetType().Name))\n                    al.Add((&quot;Control name:  &quot; + Me.Control.Name))\n                End If\n            End If\n        End Sub \n\n        &#39; Translates the point to client coordinates and passes the \n        &#39; messages to the control while over the click box.\n        Protected Overrides Function GetHitTest(ByVal point As System.Drawing.Point) As Boolean\n            Dim translated As Point = Me.Control.PointToClient(point)\n            If translated.X &gt; 269 And translated.X &lt; 331 And translated.Y &gt; 7 And translated.Y &lt; 18 Then\n                Return True\n            Else\n                Return MyBase.GetHitTest(point)\n            End If\n        End Function \n    End Class \n\nEnd Namespace \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This service provides a simple interface to set, retrieve, and look up objects with associated keys.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IDictionaryService_GetKey_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDictionaryService_GetKey_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetKey(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the key corresponding to the specified value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetKey (object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value to look up in the dictionary.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The associated key, or <code>null</code> if no key exists.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IDictionaryService_GetValue_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDictionaryService_GetValue_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetValue(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value corresponding to the specified key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetValue (object key);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key to look up the value for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The associated value, or <code>null</code> if no value exists.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IDictionaryService_SetValue_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDictionaryService_SetValue_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetValue(Object, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the specified key-value pair.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetValue (object key, object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object to use as the key to associate the value with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value to store.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDictionaryService.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDictionaryService\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDictionaryService.GetKey\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDictionaryService.GetValue\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDictionaryService.SetValue\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"14f06316-9c0f-06d0-f8cd-1a3b980d86ce\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a basic, component site-specific, key-value pair dictionary through a service that a designer can use to store user-defined data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.IDictionaryService\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDictionaryService.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.IDictionaryService","System.ComponentModel.Design.IDictionaryService.GetKey","System.ComponentModel.Design.IDictionaryService.GetValue","System.ComponentModel.Design.IDictionaryService.SetValue"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.IDictionaryService","System::ComponentModel::Design::IDictionaryService","System.ComponentModel.Design.IDictionaryService.GetKey","System::ComponentModel::Design::IDictionaryService::GetKey","System.ComponentModel.Design.IDictionaryService.GetValue","System::ComponentModel::Design::IDictionaryService::GetValue","System.ComponentModel.Design.IDictionaryService.SetValue","System::ComponentModel::Design::IDictionaryService::SetValue"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"14f06316-9c0f-06d0-f8cd-1a3b980d86ce","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/IDictionaryService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDictionaryService interface | Microsoft Docs","_op_ogTitle":"IDictionaryService interface","description":"Provides a basic, component site-specific, key-value pair dictionary through a service that a designer can use to store user-defined data.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.IDictionaryService","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idictionaryservice","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idictionaryservice","fileRelativePath":"api/System.ComponentModel.Design.IDictionaryService.html"},"themesRelativePathToOutputRoot":"_themes/"}