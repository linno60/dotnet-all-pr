{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ConfigurationElement</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a configuration element within a configuration file.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class ConfigurationElement</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">ConfigurationElement</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to implement a custom ConfigurationElement both as an individual element in a custom section and as a collection of elements in a custom section. The example consists of the following files:  </p>\n<ul>\n<li><p>An app.config file that contains a custom section that is named <code>MyUrls</code>. This section contains a simple element (it does not contain any other elements) and a collection of elements. The simple element is named <code>simple</code> and the collection is named <code>urls</code>.  </p>\n</li>\n<li><p>A console application. The application reads the contents of the app.config file and writes the information to the console. It uses classes that derive from ConfigurationElement, <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a>, and <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a>.  </p>\n</li>\n<li><p>A class named <code>UrlsSection</code> that derives from the <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> class. This class is used to access the <code>MyUrls</code> section in the configuration file.  </p>\n</li>\n<li><p>A class named <code>UrlsCollection</code> that derives from the <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a> class. This class is used to access the <code>urls</code> collection in the configuration file.  </p>\n</li>\n<li><p>A class named <code>UrlConfigElement</code> that derives from the ConfigurationElement class. This class is used to access the <code>simple</code> element and the members of the <code>urls</code> collection in the configuration file.  </p>\n</li>\n</ul>\n<p> To run the example, perform the following steps:  </p>\n<ol>\n<li><p>Create a solution that has a console application project and a class library project that is named <code>ConfigurationElement</code>.  </p>\n</li>\n<li><p>Put the three class files in the class library project and put the other files in the console library project.  </p>\n</li>\n<li><p>In both projects set a reference to <code>System.Configuration</code>.  </p>\n</li>\n<li><p>In the console application project set a project reference to the class library project.  </p>\n</li>\n</ol>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#151\">// Set Assembly name to ConfigurationElement\nusing System;\nusing System.Configuration;\nusing System.Collections;\n\nnamespace Samples.AspNet\n{\n    // Entry point for console application that reads the \n    // app.config file and writes to the console the \n    // URLs in the custom section.  \n    class TestConfigurationElement\n    {\n        static void Main(string[] args)\n        {\n            // Get current configuration file.\n            System.Configuration.Configuration config =\n                ConfigurationManager.OpenExeConfiguration(\n                ConfigurationUserLevel.None);\n\n            // Get the MyUrls section.\n            UrlsSection myUrlsSection =\n                config.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n            if (myUrlsSection == null)\n                Console.WriteLine(&quot;Failed to load UrlsSection.&quot;);\n            else\n            {\n                Console.WriteLine(&quot;The &#39;simple&#39; element of app.config:&quot;);\n                Console.WriteLine(&quot;  Name={0} URL={1} Port={2}&quot;,\n                    myUrlsSection.Simple.Name,\n                    myUrlsSection.Simple.Url,\n                    myUrlsSection.Simple.Port);\n\n                Console.WriteLine(&quot;The urls collection of app.config:&quot;);\n                for (int i = 0; i &lt; myUrlsSection.Urls.Count; i++)\n                {\n                    Console.WriteLine(&quot;  Name={0} URL={1} Port={2}&quot;,\n                        myUrlsSection.Urls[i].Name,\n                        myUrlsSection.Urls[i].Url,\n                        myUrlsSection.Urls[i].Port);\n                }\n            }\n            Console.ReadLine();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#151\">&#39; Set Assembly name to ConfigurationElement\n&#39; and set Root namespace to Samples.AspNet\nImports System\nImports System.Configuration\nImports System.Collections\n\nClass TestConfigurationElement\n    &#39; Entry point for console application that reads the \n    &#39; app.config file and writes to the console the \n    &#39; URLs in the custom section.\n    Shared Sub Main(ByVal args() As String)\n        &#39; Get the current configuration file.\n        Dim config As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n        &#39; Get the MyUrls section.\n        Dim myUrlsSection As UrlsSection = _\n            config.GetSection(&quot;MyUrls&quot;)\n\n        If myUrlsSection Is Nothing Then\n            Console.WriteLine(&quot;Failed to load UrlsSection.&quot;)\n        Else\n            Console.WriteLine(&quot;The &#39;simple&#39; element of app.config:&quot;)\n            Console.WriteLine(&quot;  Name={0} URL={1} Port={2}&quot;, _\n                myUrlsSection.Simple.Name, _\n                myUrlsSection.Simple.Url, _\n                myUrlsSection.Simple.Port)\n            Console.WriteLine(&quot;The urls collection of app.config:&quot;)\n            Dim i As Integer\n            For i = 0 To myUrlsSection.Urls.Count - 1\n                Console.WriteLine(&quot;  Name={0} URL={1} Port={2}&quot;, _\n                i, myUrlsSection.Urls(i).Name, _\n                myUrlsSection.Urls(i).Url, _\n                myUrlsSection.Urls(i).Port)\n            Next i\n        End If\n        Console.ReadLine()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#71\">using System;\nusing System.Configuration;\nusing System.Collections;\n\n\nnamespace Samples.AspNet\n{\n    // Define a custom section containing an individual\n    // element and a collection of elements.\n    public class UrlsSection : ConfigurationSection\n    {\n        [ConfigurationProperty(&quot;name&quot;, \n            DefaultValue = &quot;MyFavorites&quot;,\n            IsRequired = true, \n            IsKey = false)]\n        [StringValidator(InvalidCharacters = \n            &quot; ~!@#$%^&amp;*()[]{}/;&#39;\\&quot;|\\\\&quot;,\n            MinLength = 1, MaxLength = 60)]\n        public string Name\n        {\n\n            get\n            {\n                return (string)this[&quot;name&quot;];\n            }\n            set\n            {\n                this[&quot;name&quot;] = value;\n            }\n\n        }\n\n        // Declare an element (not in a collection) of the type\n        // UrlConfigElement. In the configuration\n        // file it corresponds to &lt;simple .... /&gt;.\n        [ConfigurationProperty(&quot;simple&quot;)]\n        public UrlConfigElement Simple\n        {\n            get\n            {\n                UrlConfigElement url =\n                (UrlConfigElement)base[&quot;simple&quot;];\n                return url;\n            }\n        }\n\n        // Declare a collection element represented \n        // in the configuration file by the sub-section\n        // &lt;urls&gt; &lt;add .../&gt; &lt;/urls&gt; \n        // Note: the &quot;IsDefaultCollection = false&quot; \n        // instructs the .NET Framework to build a nested \n        // section like &lt;urls&gt; ...&lt;/urls&gt;.\n        [ConfigurationProperty(&quot;urls&quot;,\n            IsDefaultCollection = false)]\n        public UrlsCollection Urls\n        {\n            get\n            {\n                UrlsCollection urlsCollection =\n                (UrlsCollection)base[&quot;urls&quot;];\n                return urlsCollection;\n            }\n        }\n\n\n        protected override void DeserializeSection(\n            System.Xml.XmlReader reader)\n        {\n            base.DeserializeSection(reader);\n            // You can add custom processing code here.\n        }\n\n        protected override string SerializeSection(\n            ConfigurationElement parentElement,\n            string name, ConfigurationSaveMode saveMode)\n        {\n            string s =\n                base.SerializeSection(parentElement,\n                name, saveMode);\n            // You can add custom processing code here.\n            return s;\n        }\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#71\">Imports System\nImports System.Configuration\nImports System.Collections\n\n&#39; Define a custom section containing an individual\n&#39; element and a collection of elements.\nPublic Class UrlsSection\n    Inherits ConfigurationSection\n\n    &lt;ConfigurationProperty(&quot;name&quot;, _\n        DefaultValue:=&quot;MyFavorites&quot;, _\n        IsRequired:=True, _\n        IsKey:=False), _\n        StringValidator( _\n        InvalidCharacters:=&quot; ~!@#$%^&amp;*()[]{}/;&#39;&quot;&quot;|\\&quot;, _\n        MinLength:=1, MaxLength:=60)&gt; _\n        Public Property Name() As String\n\n        Get\n            Return CStr(Me(&quot;name&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;name&quot;) = value\n        End Set\n    End Property\n    \n    &#39; Declare an element (not in a collection) of the type\n    &#39; UrlConfigElement. In the configuration\n    &#39; file it corresponds to &lt;simple .... /&gt;.\n    &lt;ConfigurationProperty(&quot;simple&quot;)&gt; _\n        Public ReadOnly Property Simple() _\n        As UrlConfigElement\n\n        Get\n            Dim url As UrlConfigElement = _\n                CType(Me(&quot;simple&quot;),  _\n                UrlConfigElement)\n            Return url\n        End Get\n    End Property\n    \n    &#39; Declare a collection element represented \n    &#39; in the configuration file by the sub-section\n    &#39; &lt;urls&gt; &lt;add .../&gt; &lt;/urls&gt; \n    &#39; Note: the &quot;IsDefaultCollection = false&quot; \n    &#39; instructs the .NET Framework to build a nested \n    &#39; section like &lt;urls&gt; ...&lt;/urls&gt;.\n    &lt;ConfigurationProperty(&quot;urls&quot;, _\n        IsDefaultCollection:=False)&gt; _\n        Public ReadOnly Property Urls() _\n        As UrlsCollection\n\n        Get\n            Dim urlsCollection _\n                As UrlsCollection = _\n                CType(Me(&quot;urls&quot;), UrlsCollection)\n            Return urlsCollection\n        End Get\n    End Property\n\n    Protected Overrides Sub DeserializeSection( _\n        ByVal reader As System.Xml.XmlReader)\n\n        MyBase.DeserializeSection(reader)\n        &#39; Enter your custom processing code here.\n    End Sub &#39;DeserializeSection\n\n    Protected Overrides Function SerializeSection( _\n        ByVal parentElement As ConfigurationElement, _\n        ByVal name As String, _\n        ByVal saveMode As ConfigurationSaveMode) As String\n\n        Dim s As String = _\n            MyBase.SerializeSection(parentElement, _\n            name, saveMode)\n        &#39; Enter your custom processing code here.\n        Return s\n    End Function &#39;SerializeSection\nEnd Class &#39;UrlsSection \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#51\">Imports System\nImports System.Configuration\nImports System.Collections\n\nPublic Class UrlsCollection\n    Inherits ConfigurationElementCollection\n\n    Public Sub New()\n        &#39; Add one url to the collection.  This is\n        &#39; not necessary; could leave the collection \n        &#39; empty until items are added to it outside\n        &#39; the constructor.\n        Dim url As UrlConfigElement = _\n            CType(CreateNewElement(), UrlConfigElement)\n        &#39; Add the element to the collection.\n        Add(url)\n    End Sub &#39;New\n\n    Public Overrides ReadOnly Property CollectionType() _\n        As ConfigurationElementCollectionType\n\n        Get\n            Return ConfigurationElementCollectionType.AddRemoveClearMap\n        End Get\n    End Property\n\n    Protected Overloads Overrides Function CreateNewElement() _\n        As ConfigurationElement\n\n        Return New UrlConfigElement()\n    End Function &#39;CreateNewElement\n\n    Protected Overloads Overrides Function CreateNewElement( _\n        ByVal elementName As String) _\n        As ConfigurationElement\n\n        Return New UrlConfigElement(elementName)\n    End Function &#39;CreateNewElement\n\n    Protected Overrides Function GetElementKey( _\n        ByVal element As ConfigurationElement) As [Object]\n\n        Return CType(element, UrlConfigElement).Name\n    End Function &#39;GetElementKey\n\n    Public Shadows Property AddElementName() As String\n\n        Get\n            Return MyBase.AddElementName\n        End Get\n\n        Set(ByVal value As String)\n            MyBase.AddElementName = value\n        End Set\n    End Property\n\n    Public Shadows Property ClearElementName() As String\n        Get\n            Return MyBase.ClearElementName\n        End Get\n\n        Set(ByVal value As String)\n            MyBase.ClearElementName = value\n        End Set\n    End Property\n\n    Public Shadows ReadOnly Property RemoveElementName() As String\n        Get\n            Return MyBase.RemoveElementName\n        End Get\n    End Property\n\n    Public Shadows ReadOnly Property Count() As Integer\n        Get\n            Return MyBase.Count\n        End Get\n    End Property\n\n    Default Public Shadows Property Item( _\n    ByVal index As Integer) As UrlConfigElement\n        Get\n            Return CType(BaseGet(index), UrlConfigElement)\n        End Get\n\n        Set(ByVal value As UrlConfigElement)\n            If Not (BaseGet(index) Is Nothing) Then\n                BaseRemoveAt(index)\n            End If\n            BaseAdd(index, value)\n        End Set\n    End Property\n\n    Default Public Shadows ReadOnly Property Item( _\n        ByVal Name As String) As UrlConfigElement\n\n        Get\n            Return CType(BaseGet(Name), UrlConfigElement)\n        End Get\n    End Property\n\n    Public Function IndexOf( _\n        ByVal url As UrlConfigElement) As Integer\n\n        Return BaseIndexOf(url)\n    End Function &#39;IndexOf\n\n    Public Sub Add(ByVal url As UrlConfigElement)\n        BaseAdd(url)\n        &#39; Add custom code here.\n    End Sub &#39;Add\n\n    Protected Overrides Sub BaseAdd( _\n    ByVal element As ConfigurationElement)\n        BaseAdd(element, False)\n        &#39; Add custom code here.\n    End Sub &#39;BaseAdd\n\n    Public Overloads Sub Remove( _\n        ByVal url As UrlConfigElement)\n\n        If BaseIndexOf(url) &gt;= 0 Then\n            BaseRemove(url.Name)\n        End If\n    End Sub &#39;Remove\n\n    Public Sub RemoveAt(ByVal index As Integer)\n        BaseRemoveAt(index)\n    End Sub &#39;RemoveAt\n\n    Public Overloads Sub Remove(ByVal name As String)\n        BaseRemove(name)\n    End Sub &#39;Remove    \n\n    Public Sub Clear()\n        BaseClear()\n    End Sub &#39;Clear &#39; \nEnd Class &#39;UrlsCollection\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#51\">using System;\nusing System.Configuration;\nusing System.Collections;\n\nnamespace Samples.AspNet\n{\n    public class UrlsCollection : ConfigurationElementCollection\n    {\n        public UrlsCollection()\n        {\n            // Add one url to the collection.  This is\n            // not necessary; could leave the collection \n            // empty until items are added to it outside\n            // the constructor.\n            UrlConfigElement url = \n                (UrlConfigElement)CreateNewElement();\n            Add(url);\n        }\n\n        public override \n            ConfigurationElementCollectionType CollectionType\n        {\n            get\n            {\n                return \n\n                    ConfigurationElementCollectionType.AddRemoveClearMap;\n            }\n        }\n\n        protected override \n            ConfigurationElement CreateNewElement()\n        {\n            return new UrlConfigElement();\n        }\n\n\n        protected override \n            ConfigurationElement CreateNewElement(\n            string elementName)\n        {\n            return new UrlConfigElement(elementName);\n        }\n\n\n        protected override Object \n            GetElementKey(ConfigurationElement element)\n        {\n            return ((UrlConfigElement)element).Name;\n        }\n\n\n        public new string AddElementName\n        {\n            get\n            { return base.AddElementName; }\n\n            set\n            { base.AddElementName = value; }\n\n        }\n\n        public new string ClearElementName\n        {\n            get\n            { return base.ClearElementName; }\n\n            set\n            { base.ClearElementName = value; }\n\n        }\n\n        public new string RemoveElementName\n        {\n            get\n            { return base.RemoveElementName; }\n        }\n\n        public new int Count\n        {\n            get { return base.Count; }\n        }\n\n\n        public UrlConfigElement this[int index]\n        {\n            get\n            {\n                return (UrlConfigElement)BaseGet(index);\n            }\n            set\n            {\n                if (BaseGet(index) != null)\n                {\n                    BaseRemoveAt(index);\n                }\n                BaseAdd(index, value);\n            }\n        }\n\n        new public UrlConfigElement this[string Name]\n        {\n            get\n            {\n                return (UrlConfigElement)BaseGet(Name);\n            }\n        }\n\n        public int IndexOf(UrlConfigElement url)\n        {\n            return BaseIndexOf(url);\n        }\n\n        public void Add(UrlConfigElement url)\n        {\n            BaseAdd(url);\n            // Add custom code here.\n        }\n\n        protected override void \n            BaseAdd(ConfigurationElement element)\n        {\n            BaseAdd(element, false);\n            // Add custom code here.\n        }\n\n        public void Remove(UrlConfigElement url)\n        {\n            if (BaseIndexOf(url) &gt;= 0)\n                BaseRemove(url.Name);\n        }\n\n        public void RemoveAt(int index)\n        {\n            BaseRemoveAt(index);\n        }\n\n        public void Remove(string name)\n        {\n            BaseRemove(name);\n        }\n\n        public void Clear()\n        {\n            BaseClear();\n            // Add custom code here.\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#31\">using System;\nusing System.Configuration;\nusing System.Collections;\n\nnamespace Samples.AspNet\n{\n    public class UrlConfigElement : ConfigurationElement\n    {\n        // Constructor allowing name, url, and port to be specified.\n        public UrlConfigElement(String newName,\n            String newUrl, int newPort)\n        {\n            Name = newName;\n            Url = newUrl;\n            Port = newPort;\n        }\n\n        // Default constructor, will use default values as defined\n        // below.\n        public UrlConfigElement()\n        {\n        }\n\n        // Constructor allowing name to be specified, will take the\n        // default values for url and port.\n        public UrlConfigElement(string elementName)\n        {\n            Name = elementName;\n        }\n\n        [ConfigurationProperty(&quot;name&quot;, \n            DefaultValue = &quot;Microsoft&quot;,\n            IsRequired = true, \n            IsKey = true)]\n        public string Name\n        {\n            get\n            {\n                return (string)this[&quot;name&quot;];\n            }\n            set\n            {\n                this[&quot;name&quot;] = value;\n            }\n        }\n\n        [ConfigurationProperty(&quot;url&quot;,\n            DefaultValue = &quot;http://www.microsoft.com&quot;,\n            IsRequired = true)]\n        [RegexStringValidator(@&quot;\\w+:\\/\\/[\\w.]+\\S*&quot;)]\n        public string Url\n        {\n            get\n            {\n                return (string)this[&quot;url&quot;];\n            }\n            set\n            {\n                this[&quot;url&quot;] = value;\n            }\n        }\n\n        [ConfigurationProperty(&quot;port&quot;,\n            DefaultValue = (int)0,\n            IsRequired = false)]\n        [IntegerValidator(MinValue = 0,\n            MaxValue = 8080, ExcludeRange = false)]\n        public int Port\n        {\n            get\n            {\n                return (int)this[&quot;port&quot;];\n            }\n            set\n            {\n                this[&quot;port&quot;] = value;\n            }\n        }\n\n        protected override void DeserializeElement(\n           System.Xml.XmlReader reader, \n            bool serializeCollectionKey)\n        {\n            base.DeserializeElement(reader, \n                serializeCollectionKey);\n            // You can your custom processing code here.\n        }\n\n\n        protected override bool SerializeElement(\n            System.Xml.XmlWriter writer, \n            bool serializeCollectionKey)\n        {\n            bool ret = base.SerializeElement(writer, \n                serializeCollectionKey);\n            // You can enter your custom processing code here.\n            return ret;\n\n        }\n\n\n        protected override bool IsModified()\n        {\n            bool ret = base.IsModified();\n            // You can enter your custom processing code here.\n            return ret;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#31\">Imports System\nImports System.Configuration\nImports System.Collections\n\nPublic Class UrlConfigElement\n    Inherits ConfigurationElement\n\n    &#39; Constructor allowing name, url, and port to be specified.\n    Public Sub New(ByVal newName As String, _\n        ByVal newUrl As String, _\n        ByVal newPort As Integer)\n\n        Name = newName\n        Url = newUrl\n        Port = newPort\n\n    End Sub &#39;New\n\n    &#39; Default constructor, will use default values as defined\n    Public Sub New()\n\n    End Sub &#39;New\n\n\n    &#39; Constructor allowing name to be specified, will take the\n    &#39; default values for url and port.\n    Public Sub New(ByVal elementName As String)\n        Name = elementName\n\n    End Sub &#39;New\n\n\n    &lt;ConfigurationProperty(&quot;name&quot;, _\n        DefaultValue:=&quot;Microsoft&quot;, _\n        IsRequired:=True, _\n        IsKey:=True)&gt; _\n        Public Property Name() As String\n\n        Get\n            Return CStr(Me(&quot;name&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;name&quot;) = value\n        End Set\n    End Property\n\n\n    &lt;ConfigurationProperty(&quot;url&quot;, _\n        DefaultValue:=&quot;http://www.microsoft.com&quot;, _\n        IsRequired:=True), _\n        RegexStringValidator(&quot;\\w+:\\/\\/[\\w.]+\\S*&quot;)&gt; _\n        Public Property Url() As String\n\n        Get\n            Return CStr(Me(&quot;url&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;url&quot;) = value\n        End Set\n    End Property\n\n\n    &lt;ConfigurationProperty(&quot;port&quot;, _\n        DefaultValue:=0, _\n        IsRequired:=False), _\n        IntegerValidator(MinValue:=0, _\n        MaxValue:=8080, ExcludeRange:=False)&gt; _\n        Public Property Port() As Integer\n\n        Get\n            Return Fix(Me(&quot;port&quot;))\n        End Get\n        Set(ByVal value As Integer)\n            Me(&quot;port&quot;) = value\n        End Set\n    End Property\n\n\n    Protected Overrides Sub DeserializeElement(ByVal reader _\n        As System.Xml.XmlReader, _\n        ByVal serializeCollectionKey As Boolean)\n\n        MyBase.DeserializeElement(reader, _\n            serializeCollectionKey)\n        &#39; Enter your custom processing code here.\n    End Sub &#39;DeserializeElement\n\n    Protected Overrides Function SerializeElement(ByVal writer _\n        As System.Xml.XmlWriter, _\n        ByVal serializeCollectionKey As Boolean) As Boolean\n\n        Dim ret As Boolean = _\n            MyBase.SerializeElement(writer, serializeCollectionKey)\n        &#39; Enter your custom processing code here.\n        Return ret\n    End Function &#39;SerializeElement\n\n    Protected Overrides Function IsModified() As Boolean\n        Dim ret As Boolean = MyBase.IsModified()\n        &#39; Enter your custom processing code here.\n        Return ret\n\n    End Function &#39;IsModified\nEnd Class &#39;UrlConfigElement \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ConfigurationElement is an abstract class that is used to represent an XML element in a configuration file (such as Web.config). An element in a configuration file can contain zero, one, or more child elements.  </p>\n<p> Because the ConfigurationElement class is defined as abstract, you cannot create an instance of it. You can only derive classes from it. The .NET Framework includes classes that derive from the ConfigurationElement class in order to represent standard XML configuration elements, such as <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a>. You can also extend the ConfigurationElement class to access custom configuration elements and sections. The example included later in this topic shows how to access custom configuration elements and sections by using custom classes that derive from ConfigurationElement.  </p>\n<p> You can also extend the standard configuration types such as ConfigurationElement, <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a>, <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a>, and <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a>. For more information, see the documentation for those classes.  </p>\n<p> For more information about how to access information in configuration files, see the <a class=\"xref\" href=\"system.configuration.configurationmanager\" data-linktype=\"relative-path\">ConfigurationManager</a> class and the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager\" data-linktype=\"relative-path\">WebConfigurationManager</a> class.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConfigurationElement()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ConfigurationElement ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You create a new instance of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> class, for example, every time your application needs to add a new element to the related <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a> collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_CurrentConfiguration\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrentConfiguration</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a reference to the top-level <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> instance that represents the configuration hierarchy that the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance belongs to.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.Configuration CurrentConfiguration { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The top-level <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> instance that the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance belongs to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CurrentConfiguration property makes it easy to determine which version of the .NET Framework is targeted. The <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_TargetFramework_\" data-linktype=\"relative-path\">TargetFramework</a> property of the top-level <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> instance indicates the targeted framework version.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_ElementInformation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ElementInformation</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an <a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a> object that contains the non-customizable information and functionality of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ElementInformation ElementInformation { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a> that contains the non-customizable information and functionality of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_ElementProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ElementProperty</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.configuration.configurationelementproperty\" data-linktype=\"relative-path\">ConfigurationElementProperty</a> object that represents the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object itself.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Configuration.ConfigurationElementProperty ElementProperty { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelementproperty\" data-linktype=\"relative-path\">ConfigurationElementProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationelementproperty\" data-linktype=\"relative-path\">ConfigurationElementProperty</a> that represents the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> itself.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_EvaluationContext\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EvaluationContext</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Configuration.ContextInformation EvaluationContext { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current element is not associated with a context.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object provides the context necessary for a <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to make decisions based upon where it is being evaluated.  </p>\n<p> The <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object provides environment details related to an element of the configuration. For example, you can use the <a class=\"xref\" href=\"system.configuration.contextinformation#System_Configuration_ContextInformation_IsMachineLevel_\" data-linktype=\"relative-path\">IsMachineLevel</a> property to determine whether a <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> was set in Machine.config, or you can determine which hierarchy a <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> element belongs to by using the <a class=\"xref\" href=\"system.configuration.contextinformation#System_Configuration_ContextInformation_HostingContext_\" data-linktype=\"relative-path\">HostingContext</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_HasContext\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasContext</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether the <span class=\"xref\">stem.Configuration.ConfigurationElement.CurrentConfiguration*</span> property is <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool HasContext { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>false if the <span class=\"xref\">stem.Configuration.ConfigurationElement.CurrentConfiguration*</span> property is <code>null</code>; otherwise, <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_Item_System_Configuration_ConfigurationProperty_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item(ConfigurationProperty)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a property or attribute of this configuration element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected object this[System.Configuration.ConfigurationProperty prop] { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>prop</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property to access.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The specified property, attribute, or child element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationexception\" data-linktype=\"relative-path\">ConfigurationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>prop</code> is <code>null</code> or does not exist within the element.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>prop</code> is read only or locked.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the Item property to get or set the values of a <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a> object.  </p>\n<p> In C#, this property is the indexer for the <a class=\"xref\" href=\"system.configuration.configurationsectioncollection\" data-linktype=\"relative-path\">ConfigurationSectionCollection</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_Item_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a property, attribute, or child element of this configuration element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected object this[string propertyName] { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a> to access.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The specified property, attribute, or child element</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>prop</code> is read-only or locked.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the Item property to get or set the values of a <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a> object.  </p>\n<p> In C#, this property is the indexer for the <a class=\"xref\" href=\"system.configuration.configurationsectioncollection\" data-linktype=\"relative-path\">ConfigurationSectionCollection</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_LockAllAttributesExcept\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LockAllAttributesExcept</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of locked attributes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationLockCollection LockAllAttributesExcept { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked attributes (properties) for the element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LockAllAttributesExcept property allows you to lock all the attributes at once, with the exception of the one you specify. To do that, you use the <a class=\"xref\" href=\"system.configuration.configurationlockcollection#System_Configuration_ConfigurationLockCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method, as explained in the Example section.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockAllAttributesExcept property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> property if you want to put a general lock on the parent element itself and its child elements.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_LockAllElementsExcept\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LockAllElementsExcept</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of locked elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationLockCollection LockAllElementsExcept { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked elements.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LockAllElementsExcept property allows you to lock all the elements at once, except for the one you specify.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockAllElementsExcept property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> property if you want to put a general lock on the element itself and its child elements.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_LockAttributes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LockAttributes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of locked attributes</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationLockCollection LockAttributes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked attributes (properties) for the element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LockAttributes property allows you to lock all the attributes you specify.  </p>\n<p> To do that you use the <a class=\"xref\" href=\"system.configuration.configurationlockcollection#System_Configuration_ConfigurationLockCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method, as explained in the Example section.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockAttributes property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> if you want to put a general lock on the element itself and its child elements.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_LockElements\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LockElements</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of locked elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationLockCollection LockElements { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked elements.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LockElements property allows you to lock all the elements you specify.  </p>\n<p> To do that, you use the <a class=\"xref\" href=\"system.configuration.configurationlockcollection#System_Configuration_ConfigurationLockCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method, as explained in the next example.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockElements property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> if you want to put a general lock on the element itself and its child elements.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_LockItem\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LockItem</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the element is locked.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool LockItem { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the element is locked; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The element has already been locked at a higher configuration level.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the LockItem property if you want to put a general lock on the element itself and its child elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_Properties\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Properties</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Configuration.ConfigurationPropertyCollection Properties { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationpropertycollection\" data-linktype=\"relative-path\">ConfigurationPropertyCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationpropertycollection\" data-linktype=\"relative-path\">ConfigurationPropertyCollection</a> of properties for the element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Properties property, also called the property bag, contains all the properties (attributes) that apply to the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_DeserializeElement_System_Xml_XmlReader_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeserializeElement(XmlReader, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML from the configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that reads from the configuration file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>serializeCollectionKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to serialize only the collection key properties; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The element to read is locked.  </p>\n<p> - or -  </p>\n<p> An attribute of the current node is not recognized.  </p>\n<p> - or -  </p>\n<p> The lock status of the current node cannot be determined.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance to the specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object compareTo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>compareTo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the object to compare with is equal to the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a unique value representing the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A unique value representing the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_GetTransformedAssemblyString_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTransformedAssemblyString(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the transformed version of the specified assembly name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual string GetTransformedAssemblyString (string assemblyName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>assemblyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the assembly.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The transformed version of the assembly name. If no transformer is available, the <code>assemblyName</code> parameter value is returned unchanged. The <span class=\"xref\">stem.Configuration.Configuration.TypeStringTransformer*</span> property is <code>null</code> if no transformer is available.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeElement_\" data-linktype=\"relative-path\">SerializeElement</a> method and the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeToXmlElement_\" data-linktype=\"relative-path\">SerializeToXmlElement</a> method call this method in order to transform an assembly name when an earlier version of the .NET Framework is targeted.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_GetTransformedTypeString_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTransformedTypeString(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the transformed version of the specified type name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual string GetTransformedTypeString (string typeName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>typeName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the type.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The transformed version of the specified type name. If no transformer is available, the <code>typeName</code> parameter value is returned unchanged. The <span class=\"xref\">stem.Configuration.Configuration.TypeStringTransformer*</span> property is <code>null</code> if no transformer is available.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeElement_\" data-linktype=\"relative-path\">SerializeElement</a> method and the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeToXmlElement_\" data-linktype=\"relative-path\">SerializeToXmlElement</a> method call this method in order to transform a type name when an earlier version of the .NET Framework is targeted.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_Init\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Init()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to its initial state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Init ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_InitializeDefault\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InitializeDefault()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Used to initialize a default set of values for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void InitializeDefault ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Called to set the internal state of the object to appropriate default values.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_IsModified\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsModified()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool IsModified ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the element has been modified; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The IsModified method determines whether this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object will be written to the configuration file when the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_Save_\" data-linktype=\"relative-path\">Save</a> method is called. If the return value is <code>false</code>, it is assumed that the configuration file represents the current state of the element.  </p>\n<p> By default, IsModified returns <code>true</code> after a property is set through the indexer to this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.  </p>\n<p> Override the IsModified method to provide custom indication of the state of this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> element.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_IsReadOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsReadOnly()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object is read-only.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool IsReadOnly ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object is read-only; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The system defines configuration elements that cannot be modified.  </p>\n<p> To determine which elements can be modified, use the IsReadOnly method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_ListErrors_System_Collections_IList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ListErrors(IList)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the invalid-property errors in this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object, and in all subelements, to the passed list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void ListErrors (System.Collections.IList errorList);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>errorList</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedAttribute_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDeserializeUnrecognizedAttribute(String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether an unknown attribute is encountered during deserialization.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool OnDeserializeUnrecognizedAttribute (string name, string value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the unrecognized attribute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the unrecognized attribute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> when an unknown attribute is encountered while deserializing; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OnDeserializeUnrecognizedAttribute is invoked when an unknown attribute is encountered while deserializing the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedElement_System_String_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDeserializeUnrecognizedElement(String, XmlReader)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether an unknown element is encountered during deserialization.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>elementName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the unknown subelement.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> being used for deserialization.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> when an unknown element is encountered while deserializing; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The element identified by <code>elementName</code> is locked.  </p>\n<p> - or -  </p>\n<p> One or more of the element&#39;s attributes is locked.  </p>\n<p> - or -  </p>\n<p> <code>elementName</code> is unrecognized, or the element has an unrecognized attribute.  </p>\n<p> - or -  </p>\n<p> The element has a Boolean attribute with an invalid value.  </p>\n<p> - or -  </p>\n<p> An attempt was made to deserialize a property more than once.  </p>\n<p> - or -  </p>\n<p> An attempt was made to deserialize a property that is not a valid member of the element.  </p>\n<p> - or -  </p>\n<p> The element cannot contain a CDATA or text element.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OnDeserializeUnrecognizedElement is invoked when an unknown attribute is encountered while deserializing the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_OnRequiredPropertyNotFound_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRequiredPropertyNotFound(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Throws an exception when a required property is not found.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual object OnRequiredPropertyNotFound (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the required attribute that was not found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>None.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedElement_\" data-linktype=\"relative-path\">OnDeserializeUnrecognizedElement</a> is invoked when an unknown attribute is encountered while deserializing the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_PostDeserialize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PostDeserialize()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Called after deserialization.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void PostDeserialize ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_PreSerialize_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreSerialize(XmlWriter)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Called before serialization.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void PreSerialize (System.Xml.XmlWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that will be used to serialize the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_Reset_System_Configuration_ConfigurationElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Reset(ConfigurationElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the internal state of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object, including the locks and the properties collections.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Reset (System.Configuration.ConfigurationElement parentElement);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>parentElement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The parent node of the configuration element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_ResetModified\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetModified()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the value of the <span class=\"xref\">stem.Configuration.ConfigurationElement.IsModified*</span> method to <code>false</code> when implemented in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void ResetModified ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ResetModified method is automatically called after changes to this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object have been written to the configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_SerializeElement_System_Xml_XmlWriter_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SerializeElement(XmlWriter, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the contents of this configuration element to the configuration file when implemented in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that writes to the configuration file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>serializeCollectionKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to serialize only the collection key properties; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if any data was actually serialized; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current attribute is locked at a higher configuration level.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_SerializeToXmlElement_System_Xml_XmlWriter_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SerializeToXmlElement(XmlWriter, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool SerializeToXmlElement (System.Xml.XmlWriter writer, string elementName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that writes to the configuration file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>elementName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> to be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if writing was successful; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The element has multiple child elements.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SerializeToXmlElement method is called after the call to the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_Unmerge_\" data-linktype=\"relative-path\">Unmerge</a> method during serialization. The SerializeToXmlElement method writes out the contents of the configuration element between the beginning and ending tags of the element. Override SerializeToXmlElement to provide a custom serialization method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_SetPropertyValue_System_Configuration_ConfigurationProperty_System_Object_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetPropertyValue(ConfigurationProperty, Object, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets a property to the specified value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void SetPropertyValue (System.Configuration.ConfigurationProperty prop, object value, bool ignoreLocks);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>prop</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element property to set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value to assign to the property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ignoreLocks</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the locks on the property should be ignored; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Occurs if the element is read-only or <code>ignoreLocks</code> is <code>true</code> but the locks cannot be ignored.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_SetReadOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetReadOnly()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the <span class=\"xref\">stem.Configuration.ConfigurationElement.IsReadOnly*</span> property for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object and all subelements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void SetReadOnly ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is used internally to set aside those system-configuration elements that cannot be modified.  </p>\n<p> To determine which elements can be modified, use the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationElement_Unmerge_System_Configuration_ConfigurationElement_System_Configuration_ConfigurationElement_System_Configuration_ConfigurationSaveMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Modifies the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to remove all values that should not be saved.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sourceElement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> at the current level containing a merged view of the properties.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>parentElement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The parent <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>, or <code>null</code> if this is the top level.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>saveMode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a> that determines which property values to include.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called before the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object is saved by the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object in order to remove all unneeded properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.ConfigurationElement.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement..ctor\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.CurrentConfiguration\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.DeserializeElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ElementInformation\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ElementProperty\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Equals\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.EvaluationContext\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.GetTransformedAssemblyString\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.GetTransformedTypeString\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.HasContext\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Init\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.InitializeDefault\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.IsModified\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Item\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ListErrors\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockAllAttributesExcept\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockAllElementsExcept\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockAttributes\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockElements\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockItem\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.PostDeserialize\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.PreSerialize\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Properties\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Reset\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ResetModified\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SerializeElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SerializeToXmlElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SetPropertyValue\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SetReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Unmerge\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"e273437f-e3ca-e682-cee0-f38d827fc7c0\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a configuration element within a configuration file.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.configuration/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.ConfigurationElement\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.ConfigurationElement.yml","open_to_public_contributors":false,"api_name":["System.Configuration.ConfigurationElement","System.Configuration.ConfigurationElement..ctor","System.Configuration.ConfigurationElement.CurrentConfiguration","System.Configuration.ConfigurationElement.DeserializeElement","System.Configuration.ConfigurationElement.ElementInformation","System.Configuration.ConfigurationElement.ElementProperty","System.Configuration.ConfigurationElement.Equals","System.Configuration.ConfigurationElement.EvaluationContext","System.Configuration.ConfigurationElement.GetHashCode","System.Configuration.ConfigurationElement.GetTransformedAssemblyString","System.Configuration.ConfigurationElement.GetTransformedTypeString","System.Configuration.ConfigurationElement.HasContext","System.Configuration.ConfigurationElement.Init","System.Configuration.ConfigurationElement.InitializeDefault","System.Configuration.ConfigurationElement.IsModified","System.Configuration.ConfigurationElement.IsReadOnly","System.Configuration.ConfigurationElement.Item","System.Configuration.ConfigurationElement.ListErrors","System.Configuration.ConfigurationElement.LockAllAttributesExcept","System.Configuration.ConfigurationElement.LockAllElementsExcept","System.Configuration.ConfigurationElement.LockAttributes","System.Configuration.ConfigurationElement.LockElements","System.Configuration.ConfigurationElement.LockItem","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement","System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound","System.Configuration.ConfigurationElement.PostDeserialize","System.Configuration.ConfigurationElement.PreSerialize","System.Configuration.ConfigurationElement.Properties","System.Configuration.ConfigurationElement.Reset","System.Configuration.ConfigurationElement.ResetModified","System.Configuration.ConfigurationElement.SerializeElement","System.Configuration.ConfigurationElement.SerializeToXmlElement","System.Configuration.ConfigurationElement.SetPropertyValue","System.Configuration.ConfigurationElement.SetReadOnly","System.Configuration.ConfigurationElement.Unmerge"],"api_location":["System.Configuration.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.ConfigurationElement","System::Configuration::ConfigurationElement","System.Configuration.ConfigurationElement.#ctor","System::Configuration::ConfigurationElement::#ctor","System.Configuration.ConfigurationElement.CurrentConfiguration","System::Configuration::ConfigurationElement::CurrentConfiguration","System.Configuration.ConfigurationElement.DeserializeElement","System::Configuration::ConfigurationElement::DeserializeElement","System.Configuration.ConfigurationElement.ElementInformation","System::Configuration::ConfigurationElement::ElementInformation","System.Configuration.ConfigurationElement.ElementProperty","System::Configuration::ConfigurationElement::ElementProperty","System.Configuration.ConfigurationElement.Equals","System::Configuration::ConfigurationElement::Equals","System.Configuration.ConfigurationElement.EvaluationContext","System::Configuration::ConfigurationElement::EvaluationContext","System.Configuration.ConfigurationElement.GetHashCode","System::Configuration::ConfigurationElement::GetHashCode","System.Configuration.ConfigurationElement.GetTransformedAssemblyString","System::Configuration::ConfigurationElement::GetTransformedAssemblyString","System.Configuration.ConfigurationElement.GetTransformedTypeString","System::Configuration::ConfigurationElement::GetTransformedTypeString","System.Configuration.ConfigurationElement.HasContext","System::Configuration::ConfigurationElement::HasContext","System.Configuration.ConfigurationElement.Init","System::Configuration::ConfigurationElement::Init","System.Configuration.ConfigurationElement.InitializeDefault","System::Configuration::ConfigurationElement::InitializeDefault","System.Configuration.ConfigurationElement.IsModified","System::Configuration::ConfigurationElement::IsModified","System.Configuration.ConfigurationElement.IsReadOnly","System::Configuration::ConfigurationElement::IsReadOnly","System.Configuration.ConfigurationElement.Item","System::Configuration::ConfigurationElement::Item","System.Configuration.ConfigurationElement.ListErrors","System::Configuration::ConfigurationElement::ListErrors","System.Configuration.ConfigurationElement.LockAllAttributesExcept","System::Configuration::ConfigurationElement::LockAllAttributesExcept","System.Configuration.ConfigurationElement.LockAllElementsExcept","System::Configuration::ConfigurationElement::LockAllElementsExcept","System.Configuration.ConfigurationElement.LockAttributes","System::Configuration::ConfigurationElement::LockAttributes","System.Configuration.ConfigurationElement.LockElements","System::Configuration::ConfigurationElement::LockElements","System.Configuration.ConfigurationElement.LockItem","System::Configuration::ConfigurationElement::LockItem","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute","System::Configuration::ConfigurationElement::OnDeserializeUnrecognizedAttribute","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement","System::Configuration::ConfigurationElement::OnDeserializeUnrecognizedElement","System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound","System::Configuration::ConfigurationElement::OnRequiredPropertyNotFound","System.Configuration.ConfigurationElement.PostDeserialize","System::Configuration::ConfigurationElement::PostDeserialize","System.Configuration.ConfigurationElement.PreSerialize","System::Configuration::ConfigurationElement::PreSerialize","System.Configuration.ConfigurationElement.Properties","System::Configuration::ConfigurationElement::Properties","System.Configuration.ConfigurationElement.Reset","System::Configuration::ConfigurationElement::Reset","System.Configuration.ConfigurationElement.ResetModified","System::Configuration::ConfigurationElement::ResetModified","System.Configuration.ConfigurationElement.SerializeElement","System::Configuration::ConfigurationElement::SerializeElement","System.Configuration.ConfigurationElement.SerializeToXmlElement","System::Configuration::ConfigurationElement::SerializeToXmlElement","System.Configuration.ConfigurationElement.SetPropertyValue","System::Configuration::ConfigurationElement::SetPropertyValue","System.Configuration.ConfigurationElement.SetReadOnly","System::Configuration::ConfigurationElement::SetReadOnly","System.Configuration.ConfigurationElement.Unmerge","System::Configuration::ConfigurationElement::Unmerge"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"e273437f-e3ca-e682-cee0-f38d827fc7c0","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationElement.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConfigurationElement class | Microsoft Docs","_op_ogTitle":"ConfigurationElement class","description":"Represents a configuration element within a configuration file.\n","toc_asset_id":"api/_splitted/System.Configuration/toc.json","toc_rel":"_splitted/System.Configuration/toc.json","source_url":"","ms.assetid":"System.Configuration.ConfigurationElement","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationelement","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationelement","fileRelativePath":"api/System.Configuration.ConfigurationElement.html"},"themesRelativePathToOutputRoot":"_themes/"}