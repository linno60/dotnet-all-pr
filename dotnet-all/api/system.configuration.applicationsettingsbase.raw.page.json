{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ApplicationSettingsBase</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingsbase\" data-linktype=\"relative-path\">SettingsBase</a></span></div><span class=\"lang-csharp\">ApplicationSettingsBase</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingsbase#System_Configuration_SettingsBase_Initialize_System_Configuration_SettingsContext_System_Configuration_SettingsPropertyCollection_System_Configuration_SettingsProviderCollection_\" data-linktype=\"relative-path\">Initialize(SettingsContext, SettingsPropertyCollection, SettingsProviderCollection)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingsbase#System_Configuration_SettingsBase_IsSynchronized\" data-linktype=\"relative-path\">IsSynchronized</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingsbase#System_Configuration_SettingsBase_Synchronized_System_Configuration_SettingsBase_\" data-linktype=\"relative-path\">Synchronized(SettingsBase)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the <code>FormSettings</code> class, named <code>FormLocation</code>, <code>FormSize</code>, <code>FormBackColor</code> and <code>FormText</code>, respectively. All except for <code>FormText</code> and <code>Size</code> are data bound to their associated form properties and have a default setting value applied using <a class=\"xref\" href=\"system.configuration.defaultsettingvalueattribute\" data-linktype=\"relative-path\">DefaultSettingValueAttribute</a>.  </p>\n<p> The form contains four child controls that have the following names and functions:  </p>\n<ul>\n<li><p>A button named <code>btnBackColor</code> used to display the <strong>Color</strong> common dialog box.  </p>\n</li>\n<li><p>A button named <code>btnReload</code> used to <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reload_\" data-linktype=\"relative-path\">Reload</a> the application settings.  </p>\n</li>\n<li><p>A button named <code>btnReset</code> used to <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reset_\" data-linktype=\"relative-path\">Reset</a> the application settings.  </p>\n</li>\n<li><p>A textbox named <code>tbStatus</code> used to display status information about the program.  </p>\n</li>\n</ul>\n<p> Notice that after every execution of the application, an additional period character is appended to the title text of the form.  </p>\n<p> This code example requires a Form with a <a class=\"xref\" href=\"system.windows.forms.colordialog\" data-linktype=\"relative-path\">ColorDialog</a> class named <code>colorDialog1</code>, and a <a class=\"xref\" href=\"system.windows.forms.statusstrip\" data-linktype=\"relative-path\">StatusStrip</a> control with a <a class=\"xref\" href=\"system.windows.forms.toolstripstatuslabel\" data-linktype=\"relative-path\">ToolStripStatusLabel</a> named <code>tbStatus</code>. Additionally, it requires three <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> objects named <code>btnReload</code>, <code>btnReset</code>, and <code>btnBackColor</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"AppSettingsSample#1\">\n#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::Drawing;\nusing namespace System::Configuration;\nusing namespace System::Windows::Forms;\n\nnamespace AppSettingsSample\n{\n    //Application settings wrapper class\n    ref class FormSettings sealed: public ApplicationSettingsBase\n    {\n    public:\n        [UserScopedSettingAttribute()]\n        property String^ FormText\n        {\n            String^ get()\n            {\n                return (String^)this[&quot;FormText&quot;];\n            }\n            void set( String^ value )\n            {\n                this[&quot;FormText&quot;] = value;\n            }\n        }\n\n    public:\n        [UserScopedSettingAttribute()]\n        [DefaultSettingValueAttribute(&quot;0, 0&quot;)]\n        property Point FormLocation\n        {\n            Point get()\n            {\n                return (Point)(this[&quot;FormLocation&quot;]);\n            }\n            void set( Point value )\n            {\n                this[&quot;FormLocation&quot;] = value;\n            }\n        }\n\n    public:\n        [UserScopedSettingAttribute()]\n        [DefaultSettingValueAttribute(&quot;225, 200&quot;)]\n        property Size FormSize\n        {\n            Size get()\n            {\n                return (Size)this[&quot;FormSize&quot;];\n            }\n            void set( Size value )\n            {\n                this[&quot;FormSize&quot;] = value;\n            }\n        }\n\n    public:\n        [UserScopedSettingAttribute()]\n        [DefaultSettingValueAttribute(&quot;LightGray&quot;)]\n        property Color FormBackColor\n        {\n            Color get()\n            {\n                return (Color)this[&quot;FormBackColor&quot;];\n            }\n            void set(Color value)\n            {\n                this[&quot;FormBackColor&quot;] = value;\n            }\n        }\n\n    };\n\n    ref class AppSettingsForm : Form\n    {\n        /// &lt;summary&gt;\n        /// Required designer variable.\n        /// &lt;/summary&gt;\n    private:\n        System::ComponentModel::IContainer^ components;\n\n        /// &lt;summary&gt;\n        /// Clean up any resources being used. The Dispose(true) \n\t\t/// pattern for embedded objects is implemented with this\n\t\t/// code that just contains a destructor \n        /// &lt;/summary&gt;\n    public:\n\t\t~AppSettingsForm()\n\t\t{\n\t\t\tif (components != nullptr)\n\t\t\t{\n\t\t\t\tdelete components;\n\t\t\t}\n\t\t}\n\n#pragma region Windows Form Designer generated code\n\n        /// &lt;summary&gt;\n        /// Required method for Designer support - do not modify\n        /// the contents of this method with the code editor.\n        /// &lt;/summary&gt;\n    private:\n        void InitializeComponent()\n        {\n            this-&gt;components = nullptr;\n            this-&gt;colorDialog = gcnew System::Windows::Forms::ColorDialog();\n            this-&gt;backColorButton = gcnew System::Windows::Forms::Button();\n            this-&gt;resetButton = gcnew System::Windows::Forms::Button();\n            this-&gt;statusDisplay = gcnew System::Windows::Forms::TextBox();\n            this-&gt;reloadButton = gcnew System::Windows::Forms::Button();\n            this-&gt;SuspendLayout();\n            //\n            // backColorButton\n            //\n            this-&gt;backColorButton-&gt;Location = System::Drawing::Point(26, 24);\n            this-&gt;backColorButton-&gt;Name = &quot;backColorButton&quot;;\n            this-&gt;backColorButton-&gt;Size = System::Drawing::Size(159, 23);\n            this-&gt;backColorButton-&gt;TabIndex = 0;\n            this-&gt;backColorButton-&gt;Text = &quot;Change Background Color&quot;;\n            this-&gt;backColorButton-&gt;Click += gcnew System::EventHandler\n                (this,&amp;AppSettingsForm::BackColorButton_Click);\n            //\n            // resetButton\n            //\n            this-&gt;resetButton-&gt;Location = System::Drawing::Point(26, 90);\n            this-&gt;resetButton-&gt;Name = &quot;resetButton&quot;;\n            this-&gt;resetButton-&gt;Size = System::Drawing::Size(159, 23);\n            this-&gt;resetButton-&gt;TabIndex = 1;\n            this-&gt;resetButton-&gt;Text = &quot;Reset to Defaults&quot;;\n            this-&gt;resetButton-&gt;Click += gcnew System::EventHandler\n                (this,&amp;AppSettingsForm::ResetButton_Click);\n            //\n            // statusDisplay\n            //\n            this-&gt;statusDisplay-&gt;Location = System::Drawing::Point(26, 123);\n            this-&gt;statusDisplay-&gt;Name = &quot;statusDisplay&quot;;\n            this-&gt;statusDisplay-&gt;Size = System::Drawing::Size(159, 20);\n            this-&gt;statusDisplay-&gt;TabIndex = 2;\n            //\n            // reloadButton\n            //\n            this-&gt;reloadButton-&gt;Location = System::Drawing::Point(26, 57);\n            this-&gt;reloadButton-&gt;Name = &quot;reloadButton&quot;;\n            this-&gt;reloadButton-&gt;Size = System::Drawing::Size(159, 23);\n            this-&gt;reloadButton-&gt;TabIndex = 3;\n            this-&gt;reloadButton-&gt;Text = &quot;Reload from Storage&quot;;\n            this-&gt;reloadButton-&gt;Click += gcnew System::EventHandler\n                (this,&amp;AppSettingsForm::ReloadButton_Click);\n            //\n            // AppSettingsForm\n            //\n            this-&gt;ClientSize = System::Drawing::Size(217, 166);\n            this-&gt;Controls-&gt;Add(this-&gt;reloadButton);\n            this-&gt;Controls-&gt;Add(this-&gt;statusDisplay);\n            this-&gt;Controls-&gt;Add(this-&gt;resetButton);\n            this-&gt;Controls-&gt;Add(this-&gt;backColorButton);\n            this-&gt;Name = &quot;AppSettingsForm&quot;;\n            this-&gt;Text = &quot;App Settings&quot;;\n            this-&gt;FormClosing += gcnew\n                System::Windows::Forms::FormClosingEventHandler\n                (this,&amp;AppSettingsForm::AppSettingsForm_FormClosing);\n            this-&gt;Load += gcnew System::EventHandler(this,\n                &amp;AppSettingsForm::AppSettingsForm_Load);\n            this-&gt;ResumeLayout(false);\n            this-&gt;PerformLayout();\n\n        }\n\n#pragma endregion\n\n    private:\n        System::Windows::Forms::ColorDialog^ colorDialog;\n\n        System::Windows::Forms::Button^ backColorButton;\n\n        System::Windows::Forms::Button^ resetButton;\n\n        System::Windows::Forms::TextBox^ statusDisplay;\n\n        System::Windows::Forms::Button^ reloadButton;\n\n\n\n        FormSettings ^ formSettings;\n\n    public:\n        AppSettingsForm()\n        {\n            formSettings = gcnew FormSettings;\n            InitializeComponent();\n        }\n\n    private:\n        void AppSettingsForm_Load(Object^ sender, EventArgs^ e)\n        {\n            //Associate settings property event handlers.\n            formSettings-&gt;SettingChanging += gcnew SettingChangingEventHandler(\n                this, &amp;AppSettingsForm::FormSettings_SettingChanging);\n            formSettings-&gt;SettingsSaving += gcnew SettingsSavingEventHandler(\n                this,&amp;AppSettingsForm::FormSettings_SettingsSaving);\n\n            //Data bind settings properties with straightforward associations.\n            Binding^ backColorBinding = gcnew Binding(&quot;BackColor&quot;, \n                formSettings, &quot;FormBackColor&quot;, true, \n                DataSourceUpdateMode::OnPropertyChanged);\n            this-&gt;DataBindings-&gt;Add(backColorBinding);\n            Binding^ sizeBinding = gcnew Binding(&quot;Size&quot;, formSettings,\n                &quot;FormSize&quot;, true, DataSourceUpdateMode::OnPropertyChanged);\n            this-&gt;DataBindings-&gt;Add(sizeBinding);\n            Binding^ locationBinding = gcnew Binding(&quot;Location&quot;, formSettings,\n                &quot;FormLocation&quot;, true, DataSourceUpdateMode::OnPropertyChanged);\n            this-&gt;DataBindings-&gt;Add(locationBinding);\n\n            //For more complex associations, manually assign associations.\n            String^ savedText = formSettings-&gt;FormText;\n            //Since there is no default value for FormText.\n            if (savedText != nullptr)\n            {\n                this-&gt;Text = savedText;\n            }\n        }\n\n    private:\n        void AppSettingsForm_FormClosing(Object^ sender,\n            FormClosingEventArgs^ e)\n        {\n            //Synchronize manual associations first.\n            formSettings-&gt;FormText = this-&gt;Text + &#39;.&#39;;\n            formSettings-&gt;Save();\n        }\n\n    private:\n        void BackColorButton_Click(Object^ sender, EventArgs^ e)\n        {\n            if (::DialogResult::OK == colorDialog-&gt;ShowDialog())\n            {\n                Color color = colorDialog-&gt;Color;\n                this-&gt;BackColor = color;\n            }\n        }\n\n    private:\n        void ResetButton_Click(Object^ sender, EventArgs^ e)\n        {\n            formSettings-&gt;Reset();\n            this-&gt;BackColor = SystemColors::Control;\n        }\n\n    private:\n        void ReloadButton_Click(Object^ sender, EventArgs^ e)\n        {\n            formSettings-&gt;Reload();\n        }\n\n    private:\n        void FormSettings_SettingChanging(Object^ sender,\n            SettingChangingEventArgs^ e)\n        {\n            statusDisplay-&gt;Text = e-&gt;SettingName + &quot;: &quot; + e-&gt;NewValue;\n        }\n\n    private:\n        void FormSettings_SettingsSaving(Object^ sender,\n            CancelEventArgs^ e)\n        {\n            //Should check for settings changes first.\n            ::DialogResult^ dialogResult = MessageBox::Show(\n                &quot;Save current values for application settings?&quot;,\n                &quot;Save Settings&quot;, MessageBoxButtons::YesNo);\n            if (::DialogResult::No == dialogResult)\n            {\n                e-&gt;Cancel = true;\n            }\n        }\n    };\n</code></pre><pre><code class=\"lang-cs\" name=\"AppSettingsSample#1\">partial class Form1 : Form\n{\n    private FormSettings frmSettings1 = new FormSettings();\n\n    public Form1()\n    {\n        InitializeComponent();\n    }\n\n    private void Form1_Load(object sender, EventArgs e)\n    {\n        this.FormClosing += new FormClosingEventHandler(Form1_FormClosing);\n\n        //Associate settings property event handlers.\n        frmSettings1.SettingChanging += new SettingChangingEventHandler(\n                                            frmSettings1_SettingChanging);\n        frmSettings1.SettingsSaving += new SettingsSavingEventHandler(\n                                            frmSettings1_SettingsSaving);\n\n        //Data bind settings properties with straightforward associations.\n        Binding bndBackColor = new Binding(&quot;BackColor&quot;, frmSettings1, \n            &quot;FormBackColor&quot;, true, DataSourceUpdateMode.OnPropertyChanged);\n        this.DataBindings.Add(bndBackColor);\n        Binding bndLocation = new Binding(&quot;Location&quot;, frmSettings1, \n            &quot;FormLocation&quot;, true, DataSourceUpdateMode.OnPropertyChanged);\n        this.DataBindings.Add(bndLocation);\n\n        // Assign Size property, since databinding to Size doesn&#39;t work well.\n         this.Size = frmSettings1.FormSize;\n\n        //For more complex associations, manually assign associations.\n        String savedText = frmSettings1.FormText;\n        //Since there is no default value for FormText.\n        if (savedText != null)\n            this.Text = savedText;\n    }\n\n    private void Form1_FormClosing(object sender, FormClosingEventArgs e)\n    {\n        //Synchronize manual associations first.\n        frmSettings1.FormText = this.Text + &#39;.&#39;;\n        frmSettings1.FormSize = this.Size;\n        frmSettings1.Save();\n    }\n\n    private void btnBackColor_Click(object sender, EventArgs e)\n    {\n        if (DialogResult.OK == colorDialog1.ShowDialog())\n        {\n            Color c = colorDialog1.Color;\n            this.BackColor = c;\n        }\n    }\n\n    private void btnReset_Click(object sender, EventArgs e)\n    {\n        frmSettings1.Reset();\n        this.BackColor = SystemColors.Control;\n    }\n\n    private void btnReload_Click(object sender, EventArgs e)\n    {\n        frmSettings1.Reload();\n    }\n\n    void frmSettings1_SettingChanging(object sender, SettingChangingEventArgs e)\n    {\n        tbStatus.Text = e.SettingName + &quot;: &quot; + e.NewValue;\n    }\n\n    void frmSettings1_SettingsSaving(object sender, CancelEventArgs e)\n    {\n        //Should check for settings changes first.\n        DialogResult dr = MessageBox.Show(\n                        &quot;Save current values for application settings?&quot;,\n                        &quot;Save Settings&quot;, MessageBoxButtons.YesNo);\n        if (DialogResult.No == dr)\n        {\n            e.Cancel = true;\n        }\n    }\n\n}\n\n//Application settings wrapper class\nsealed class FormSettings : ApplicationSettingsBase\n{\n    [UserScopedSettingAttribute()]\n    public String FormText\n    {\n        get { return (String)this[&quot;FormText&quot;]; }\n        set { this[&quot;FormText&quot;] = value; }\n    }\n\n    [UserScopedSettingAttribute()]\n    [DefaultSettingValueAttribute(&quot;0, 0&quot;)]\n    public Point FormLocation\n    {\n        get { return (Point)(this[&quot;FormLocation&quot;]); }\n        set { this[&quot;FormLocation&quot;] = value; }\n    }\n\n    [UserScopedSettingAttribute()]\n    [DefaultSettingValueAttribute(&quot;225, 200&quot;)]\n    public Size FormSize\n    {\n        get { return (Size)this[&quot;FormSize&quot;]; }\n        set { this[&quot;FormSize&quot;] = value; }\n    }\n\n\n    [UserScopedSettingAttribute()]\n    [DefaultSettingValueAttribute(&quot;LightGray&quot;)]\n    public Color FormBackColor\n    {\n        get { return (Color)this[&quot;FormBackColor&quot;]; }\n        set { this[&quot;FormBackColor&quot;] = value; }\n    }\n\n}\n\n</code></pre><pre><code class=\"lang-vb\" name=\"AppSettingsSample#1\">Imports System.Configuration\nImports System.ComponentModel\n\nPublic Class Form1\n\n    Private WithEvents frmSettings1 As New FormSettings\n\n    Private Sub Form1_Load(ByVal sender As Object, ByVal e As EventArgs) _\n            Handles MyBase.Load\n        &#39;Settings property event handlers are associated through WithEvents \n        &#39;  and Handles combination.\n\n        &#39;Data bind settings properties with straightforward associations.\n        Dim bndBackColor As New Binding(&quot;BackColor&quot;, frmSettings1, &quot;FormBackColor&quot;, _\n                True, DataSourceUpdateMode.OnPropertyChanged)\n        Me.DataBindings.Add(bndBackColor)\n        Dim bndLocation As New Binding(&quot;Location&quot;, frmSettings1, &quot;FormLocation&quot;, _\n                True, DataSourceUpdateMode.OnPropertyChanged)\n        Me.DataBindings.Add(bndLocation)\n\n        &#39; Assign Size property, since databinding to Size doesn&#39;t work well.\n        Me.Size = frmSettings1.FormSize\n\n        &#39;For more complex associations, manually assign associations.\n        Dim savedText As String = frmSettings1.FormText\n        &#39;Since there is no default value for FormText.\n        If (savedText IsNot Nothing) Then\n            Me.Text = savedText\n        End If\n    End Sub\n\n    Private Sub Form1_FormClosing_1(ByVal sender As Object, ByVal e As _\n            FormClosingEventArgs) Handles MyBase.FormClosing\n        &#39;Synchronize manual associations first.\n        frmSettings1.FormText = Me.Text + &quot;.&quot;c\n\n        &#39; Save size settings manually.\n        frmSettings1.FormSize = Me.Size\n\n        frmSettings1.Save()\n    End Sub\n\n    Private Sub btnBackColor_Click(ByVal sender As Object, ByVal e As EventArgs) _\n            Handles btnBackColor.Click\n        If System.Windows.Forms.DialogResult.OK = colorDialog1.ShowDialog() Then\n            Dim c As Color = colorDialog1.Color\n            Me.BackColor = c\n        End If\n    End Sub\n\n    Private Sub btnReset_Click(ByVal sender As Object, ByVal e As EventArgs) _\n            Handles btnReset.Click\n        frmSettings1.Reset()\n        Me.BackColor = SystemColors.Control\n    End Sub\n\n    Private Sub btnReload_Click(ByVal sender As Object, ByVal e As EventArgs) _\n            Handles btnReload.Click\n        frmSettings1.Reload()\n    End Sub\n\n    Private Sub frmSettings1_SettingChanging(ByVal sender As Object, ByVal e As _\n            SettingChangingEventArgs) Handles frmSettings1.SettingChanging\n        tbStatus.Text = e.SettingName &amp; &quot;: &quot; &amp; e.NewValue.ToString\n    End Sub\n\n    Private Sub frmSettings1_SettingsSaving(ByVal sender As Object, ByVal e As _\n            CancelEventArgs) Handles frmSettings1.SettingsSaving\n        &#39;Should check for settings changes first.\n        Dim dr As DialogResult = MessageBox.Show( _\n            &quot;Save current values for application settings?&quot;, &quot;Save Settings&quot;, _\n            MessageBoxButtons.YesNo)\n        If (System.Windows.Forms.DialogResult.No = dr) Then\n            e.Cancel = True\n        End If\n    End Sub\nEnd Class\n\n&#39;Application settings wrapper class. This class defines the settings we intend to use in our application.\nNotInheritable Class FormSettings\n    Inherits ApplicationSettingsBase\n\n    &lt;UserScopedSettingAttribute()&gt; _\n    Public Property FormText() As String\n        Get\n            Return CStr(Me(&quot;FormText&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;FormText&quot;) = value\n        End Set\n    End Property\n\n    &lt;UserScopedSettingAttribute(), DefaultSettingValueAttribute(&quot;0, 0&quot;)&gt; _\n    Public Property FormLocation() As Point\n        Get\n            Return CType(Me(&quot;FormLocation&quot;), Point)\n        End Get\n        Set(ByVal value As Point)\n            Me(&quot;FormLocation&quot;) = value\n        End Set\n    End Property\n\n    &lt;UserScopedSettingAttribute(), DefaultSettingValueAttribute(&quot;225, 200&quot;)&gt; _\n    Public Property FormSize() As Size\n        Get\n            Return CType(Me(&quot;FormSize&quot;), Size)\n        End Get\n        Set(ByVal value As Size)\n            Me(&quot;FormSize&quot;) = value\n        End Set\n    End Property\n\n    &lt;UserScopedSettingAttribute(), DefaultSettingValueAttribute(&quot;LightGray&quot;)&gt; _\n    Public Property FormBackColor() As Color\n        Get\n            Return CType(Me(&quot;FormBackColor&quot;), Color)\n        End Get\n        Set(ByVal value As Color)\n            Me(&quot;FormBackColor&quot;) = value\n        End Set\n    End Property\nEnd Class\n\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>ApplicationSettingsBase adds the following functionality to the <a class=\"xref\" href=\"system.configuration.settingsbase\" data-linktype=\"relative-path\">SettingsBase</a> class, which is used by Web-based applications:  </p>\n<ul>\n<li><p>The ability to detect attributes on a derived, settings wrapper class. ApplicationSettingsBase supports the declarative model used for wrapper class properties, as described later.  </p>\n</li>\n<li><p>Higher-level <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Save_\" data-linktype=\"relative-path\">Save</a> and <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reload_\" data-linktype=\"relative-path\">Reload</a> methods.  </p>\n</li>\n<li><p>Additional validation events that you can handle to ensure the correctness of individual settings.  </p>\n</li>\n</ul>\n<p> In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from ApplicationSettingsBase. The wrapper class customizes ApplicationSettingsBase in the following ways:  </p>\n<ul>\n<li><p>For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class. This property has <code>get</code> and <code>set</code> accessors for read/write application settings, but only a <code>get</code> accessor for read-only settings.  </p>\n</li>\n<li><p>Appropriated attributes must be applied to the wrapper class&#39;s public properties to indicate characteristics of the settings property, such as the setting&#39;s scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on. Each property is required to specify its scope, using either <a class=\"xref\" href=\"system.configuration.applicationscopedsettingattribute\" data-linktype=\"relative-path\">ApplicationScopedSettingAttribute</a> or <a class=\"xref\" href=\"system.configuration.userscopedsettingattribute\" data-linktype=\"relative-path\">UserScopedSettingAttribute</a>. Application-scoped settings are read-only if the default <a class=\"xref\" href=\"system.configuration.localfilesettingsprovider\" data-linktype=\"relative-path\">LocalFileSettingsProvider</a> is used.  </p>\n</li>\n</ul>\n<p> The ApplicationSettingsBase class uses reflection to detect these attributes at run time. Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.  </p>\n<p> When an application has multiple settings wrapper classes, each class defines a <em>settings group</em>. Each group has the following characteristics:  </p>\n<ul>\n<li><p>A group can contain any number or type of property settings.  </p>\n</li>\n<li><p>If the group name is not explicitly set by the decorating the wrapper class with a <a class=\"xref\" href=\"system.configuration.settingsgroupnameattribute\" data-linktype=\"relative-path\">SettingsGroupNameAttribute</a>, then a name is automatically generated.  </p>\n</li>\n</ul>\n<p> By default, all client-based applications use the <a class=\"xref\" href=\"system.configuration.localfilesettingsprovider\" data-linktype=\"relative-path\">LocalFileSettingsProvider</a> to provide storage. If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <a class=\"xref\" href=\"system.configuration.settingsproviderattribute\" data-linktype=\"relative-path\">SettingsProviderAttribute</a>.  </p>\n<p> For more information about using application settings, see <a href=\"../topic/application%20settings%20for%20windows%20forms\" data-linktype=\"relative-path\">Application Settings for Windows Forms</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplicationSettingsBase()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes an instance of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> class to its default state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ApplicationSettingsBase ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a>.  </p>\n<p> When an instance of a wrapper class is created, inherited code will automatically perform the following actions:  </p>\n<ol>\n<li><p>Reflect over the class.  </p>\n</li>\n<li><p>For each property on the wrapper marked with either <code>[UserScopedSettingAttribute]</code> or <code>[ApplicationScopedSettingAttribute]</code>, a corresponding <a class=\"xref\" href=\"system.configuration.settingsproperty\" data-linktype=\"relative-path\">SettingsProperty</a> is created.  </p>\n</li>\n<li><p>Each <a class=\"xref\" href=\"system.configuration.settingsproperty\" data-linktype=\"relative-path\">SettingsProperty</a> has some of its properties set based on other attributes that are optionally present on the wrapper&#39;s properties, such as the default value or the settings provider.  </p>\n</li>\n<li><p>All other attributes are simply put into an attribute bag, the <a class=\"xref\" href=\"system.configuration.settingsproperty#System_Configuration_SettingsProperty_Attributes_\" data-linktype=\"relative-path\">Attributes</a> property of the <a class=\"xref\" href=\"system.configuration.settingsproperty\" data-linktype=\"relative-path\">SettingsProperty</a> class.  </p>\n</li>\n<li><p>All <a class=\"xref\" href=\"system.configuration.settingsproperty\" data-linktype=\"relative-path\">SettingsProperty</a> objects are added to a <a class=\"xref\" href=\"system.configuration.settingspropertycollection\" data-linktype=\"relative-path\">SettingsPropertyCollection</a> represented by the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Properties_\" data-linktype=\"relative-path\">Properties</a> property of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> class. This collection is then passed to the <a class=\"xref\" href=\"system.configuration.settingsbase#System_Configuration_SettingsBase_Initialize_\" data-linktype=\"relative-path\">Initialize</a> method.  </p>\n</li>\n</ol>\n<p> As implied by step 3 mentioned previously, <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> natively works with several property attributes, specifically the following: <a class=\"xref\" href=\"system.configuration.settingsproviderattribute\" data-linktype=\"relative-path\">SettingsProviderAttribute</a>, <a class=\"xref\" href=\"system.configuration.defaultsettingvalueattribute\" data-linktype=\"relative-path\">DefaultSettingValueAttribute</a>, and <a class=\"xref\" href=\"system.configuration.settingsserializeasattribute\" data-linktype=\"relative-path\">SettingsSerializeAsAttribute</a>. All other settings attributes are simply passed through to the appropriate underlying provider.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase__ctor_System_ComponentModel_IComponent_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplicationSettingsBase(IComponent)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes an instance of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> class using the supplied owner component.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>owner</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The component that will act as the owner of the application settings object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>owner</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor is exactly equivalent to the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase__ctor_System_ComponentModel_IComponent_System_String_\" data-linktype=\"relative-path\">ApplicationSettingsBase(IComponent, String)</a> constructor using the invocation:  </p>\n<p> <code>ApplicationSettingsBase(owner, String.Empty)</code>  </p>\n<p> For information about how reflection is used during the instantiation of a wrapper class, see the default <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase__ctor\" data-linktype=\"relative-path\">ApplicationSettingsBase()</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplicationSettingsBase(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes an instance of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> class using the supplied settings key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ApplicationSettingsBase (string settingsKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>settingsKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that uniquely identifies separate instances of the wrapper class.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingsKey_\" data-linktype=\"relative-path\">SettingsKey</a> property to the value of the <code>settingsKey</code> parameter. This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.  </p>\n<p> For information about how reflection is used during the instantiation of a wrapper class, see the default <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase__ctor\" data-linktype=\"relative-path\">ApplicationSettingsBase()</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase__ctor_System_ComponentModel_IComponent_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplicationSettingsBase(IComponent, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes an instance of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> class using the supplied owner component and settings key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>owner</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The component that will act as the owner of the application settings object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>settingsKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that uniquely identifies separate instances of the wrapper class.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>owner</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> object specified by the <code>owner</code> parameter acts as the owner of the current instance of this applications settings class. During the initialization of the settings wrapper class derived from <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a>, the owner&#39;s site is queried for a <a class=\"xref\" href=\"system.configuration.isettingsproviderservice\" data-linktype=\"relative-path\">ISettingsProviderService</a>. If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <a class=\"xref\" href=\"system.configuration.settingsproviderattribute\" data-linktype=\"relative-path\">SettingsProviderAttribute</a>.  </p>\n<p> This constructor initializes the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingsKey_\" data-linktype=\"relative-path\">SettingsKey</a> property to the value of the <code>settingsKey</code> parameter. This property is useful in disambiguating different instances of the wrapper class in the same application domain.  </p>\n<p> For information about how reflection is used during the instantiation of a wrapper class, see the default <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase__ctor\" data-linktype=\"relative-path\">ApplicationSettingsBase()</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Context\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Context</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the application settings context associated with the settings group.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Configuration.SettingsContext Context { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingscontext\" data-linktype=\"relative-path\">SettingsContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.settingscontext\" data-linktype=\"relative-path\">SettingsContext</a> associated with the settings group.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Each settings wrapper class derived from <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> has a context associated with it. The context is passed to the settings provider for each property to identify how the property is used. Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.  </p>\n<p> In contrast, the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingsKey_\" data-linktype=\"relative-path\">SettingsKey</a> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Item_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the value of the specified application settings property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object this[string propertyName] { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the name of the property to access.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If found, the value of the named settings property; otherwise, <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingspropertynotfoundexception\" data-linktype=\"relative-path\">SettingsPropertyNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There are no properties associated with the current wrapper or the specified property could not be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingspropertyisreadonlyexception\" data-linktype=\"relative-path\">SettingsPropertyIsReadOnlyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>An attempt was made to set a read-only property.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingspropertywrongtypeexception\" data-linktype=\"relative-path\">SettingsPropertyWrongTypeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value supplied is of a type incompatible with the settings property, during a set operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be parsed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Item property, also known as the indexer, is routinely used in the settings wrapper class derived from <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a>. Item binds the public property of the wrapper class to the corresponding settings property.  </p>\n<p> Item raises several events depending on the operation being performed:  </p>\n<ul>\n<li><p>The first time a property is retrieved, the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingsLoaded\" data-linktype=\"relative-path\">SettingsLoaded</a> event is raised.  </p>\n</li>\n<li><p>When a property is set, the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_OnSettingChanging_\" data-linktype=\"relative-path\">OnSettingChanging</a> event is raised. If the handler does not cancel the event, then the property value is set and the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_PropertyChanged\" data-linktype=\"relative-path\">PropertyChanged</a> event is raised.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Properties\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Properties</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of settings properties in the wrapper.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Configuration.SettingsPropertyCollection Properties { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingspropertycollection\" data-linktype=\"relative-path\">SettingsPropertyCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.settingspropertycollection\" data-linktype=\"relative-path\">SettingsPropertyCollection</a> containing all the <a class=\"xref\" href=\"system.configuration.settingsproperty\" data-linktype=\"relative-path\">SettingsProperty</a> objects used in the current wrapper.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The associated settings provider could not be found or its instantiation failed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>get</code> accessor of the Properties property reflects over the metadata of the settings wrapper class, which is derived from <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a>, to dynamically determine the set of available application settings properties.  </p>\n<p> The <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference. These characteristics are mirrored as properties in the <a class=\"xref\" href=\"system.configuration.settingsproperty\" data-linktype=\"relative-path\">SettingsProperty</a> class. All other attributes of the settings property are just passed through to its associated settings provider.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_PropertyValues\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PropertyValues</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of property values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingspropertyvaluecollection\" data-linktype=\"relative-path\">SettingsPropertyValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.settingspropertyvaluecollection\" data-linktype=\"relative-path\">SettingsPropertyValueCollection</a> of property values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Providers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Providers</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of application settings providers used by the wrapper.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Configuration.SettingsProviderCollection Providers { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingsprovidercollection\" data-linktype=\"relative-path\">SettingsProviderCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.settingsprovidercollection\" data-linktype=\"relative-path\">SettingsProviderCollection</a> containing all the <a class=\"xref\" href=\"system.configuration.settingsprovider\" data-linktype=\"relative-path\">SettingsProvider</a> objects used by the settings properties of the current settings wrapper.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.configuration.settingsproviderattribute\" data-linktype=\"relative-path\">SettingsProviderAttribute</a> determines what setting provider is used by a settings wrapper class or an individual setting property. If this attribute is not specified, a client application will use the <a class=\"xref\" href=\"system.configuration.localfilesettingsprovider\" data-linktype=\"relative-path\">LocalFileSettingsProvider</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_SettingsKey\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SettingsKey</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the settings key for the application settings group.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string SettingsKey { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the settings key for the current settings group.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SettingsKey property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.  </p>\n<p> Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application. The value of SettingsKey should be set according to how the property values are intended to be shared.  </p>\n<ul>\n<li><p>If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then SettingsKey should have the same value in all of the instances. This is the default behavior of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a> class.  </p>\n</li>\n<li><p>If the settings properties of the wrapper are intended to be per instance, then SettingsKey should have a unique value for every instance. The <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase__ctor_System_String_\" data-linktype=\"relative-path\">ApplicationSettingsBase(String)</a> version of the constructor enables you to initialize SettingsKey to a unique string.  </p>\n</li>\n</ul>\n<p> In contrast, the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Context_\" data-linktype=\"relative-path\">Context</a> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.  </p>\n<p> The <a class=\"xref\" href=\"system.configuration.settingchangingeventargs\" data-linktype=\"relative-path\">SettingChangingEventArgs</a> class contains a similar <a class=\"xref\" href=\"system.configuration.settingchangingeventargs#System_Configuration_SettingChangingEventArgs_SettingKey_\" data-linktype=\"relative-path\">SettingKey</a> property that helps identify the source of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingChanging\" data-linktype=\"relative-path\">SettingChanging</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_GetPreviousVersion_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetPreviousVersion(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the value of the named settings property for the previous version of the same application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetPreviousVersion (string propertyName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the name of the settings property whose value is to be returned.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> containing the value of the specified <a class=\"xref\" href=\"system.configuration.settingsproperty\" data-linktype=\"relative-path\">SettingsProperty</a> if found; otherwise, <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingspropertynotfoundexception\" data-linktype=\"relative-path\">SettingsPropertyNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property does not exist. The property count is zero or the property cannot be found in the data store.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetPreviousVersion method is often used in conjunction with the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Upgrade_\" data-linktype=\"relative-path\">Upgrade</a> method when migrating application settings during the installation of a new version of an application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPropertyChanged(Object, PropertyChangedEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_PropertyChanged\" data-linktype=\"relative-path\">PropertyChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sender</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source of the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPropertyChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_OnSettingChanging_System_Object_System_Configuration_SettingChangingEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnSettingChanging(Object, SettingChangingEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingChanging\" data-linktype=\"relative-path\">SettingChanging</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sender</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source of the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingchangingeventargs\" data-linktype=\"relative-path\">SettingChangingEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.settingchangingeventargs\" data-linktype=\"relative-path\">SettingChangingEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSettingChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_OnSettingsLoaded_System_Object_System_Configuration_SettingsLoadedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnSettingsLoaded(Object, SettingsLoadedEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingsLoaded\" data-linktype=\"relative-path\">SettingsLoaded</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sender</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source of the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.settingsloadedeventargs\" data-linktype=\"relative-path\">SettingsLoadedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.configuration.settingsloadedeventargs\" data-linktype=\"relative-path\">SettingsLoadedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSettingsLoaded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_OnSettingsSaving_System_Object_System_ComponentModel_CancelEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnSettingsSaving(Object, CancelEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingsSaving\" data-linktype=\"relative-path\">SettingsSaving</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sender</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source of the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSettingsSaving method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Reload\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Reload()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Refreshes the application settings property values from persistent storage.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Reload ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Reload method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed. This method performs the following actions:  </p>\n<ul>\n<li><p>It clears the currently cached properties by clearing the collection represented by the <a class=\"xref\" href=\"system.configuration.settingsbase#System_Configuration_SettingsBase_PropertyValues_\" data-linktype=\"relative-path\">PropertyValues</a> property.  </p>\n</li>\n<li><p>It raises the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_PropertyChanged\" data-linktype=\"relative-path\">PropertyChanged</a> event for every member of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Properties_\" data-linktype=\"relative-path\">Properties</a> collection.  </p>\n</li>\n</ul>\n<p> Reload contrasts with <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reset_\" data-linktype=\"relative-path\">Reset</a> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Reset\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Reset()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Restores the persisted application settings values to their corresponding default properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Reset ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be parsed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Reset method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings. This method performs the following actions:  </p>\n<ul>\n<li><p>It calls the <a class=\"xref\" href=\"system.configuration.iapplicationsettingsprovider#System_Configuration_IApplicationSettingsProvider_Reset_\" data-linktype=\"relative-path\">Reset</a> method on every settings provider that supports this optional method.  </p>\n</li>\n<li><p>It calls the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reload_\" data-linktype=\"relative-path\">Reload</a> method to force a refresh of the settings property values.  </p>\n</li>\n</ul>\n<p> <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reload_\" data-linktype=\"relative-path\">Reload</a> contrasts with Reset in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Save\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Save()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Stores the current values of the application settings properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Save ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Save method writes the current value of each settings property to its associated data store. For each property, this method calls the <a class=\"xref\" href=\"system.configuration.settingsprovider#System_Configuration_SettingsProvider_SetPropertyValues_\" data-linktype=\"relative-path\">SetPropertyValues</a> method on the associated settings provider.  </p>\n<p> This method differs from the base class implementation in that it raises the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingsSaving\" data-linktype=\"relative-path\">SettingsSaving</a> event before the values are written.  </p>\n<p> If the only settings defined are application-scoped settings, Save will have no effect and return no error if called with the default <a class=\"xref\" href=\"system.configuration.localfilesettingsprovider\" data-linktype=\"relative-path\">LocalFileSettingsProvider</a>. <a class=\"xref\" href=\"system.configuration.localfilesettingsprovider\" data-linktype=\"relative-path\">LocalFileSettingsProvider</a> only saves user-scoped settings.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization. In contrast, these values are not automatically saved when an application ends. Therefore, you must explicitly call the Save method to persist the current values of the application settings. This is typically performed in the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event handler of the primary or containing <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_Upgrade\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Upgrade()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Updates application settings to reflect a more recent installation of the application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void Upgrade ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The configuration file could not be parsed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Upgrade method performs two actions to assure smooth transition to a new version of an application:  </p>\n<ul>\n<li><p>It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <a class=\"xref\" href=\"system.configuration.iapplicationsettingsprovider#System_Configuration_IApplicationSettingsProvider_Upgrade_\" data-linktype=\"relative-path\">Upgrade</a> method, assuming they have implemented the <a class=\"xref\" href=\"system.configuration.iapplicationsettingsprovider\" data-linktype=\"relative-path\">IApplicationSettingsProvider</a> interface. This action is not performed if the settings wrapper class is marked with <a class=\"xref\" href=\"system.configuration.nosettingsversionupgradeattribute\" data-linktype=\"relative-path\">NoSettingsVersionUpgradeAttribute</a>.  </p>\n</li>\n<li><p>It reloads the values for all of the application settings.  </p>\n</li>\n</ul>\n<p> You can override the default behavior of Upgrade to implement custom upgrading or merging behavior. Use the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_GetPreviousVersion_\" data-linktype=\"relative-path\">GetPreviousVersion</a> method to retrieve individual values for a setting for the previous version of the application. Examples of custom upgrade behavior include:  </p>\n<ul>\n<li><p>Using new policy defaults that override one or more of the previous user-specified values or previous defaults.  </p>\n</li>\n<li><p>Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_PropertyChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PropertyChanged</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after the value of an application settings property is changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PropertyChanged event is raised when a settings property is changed through the <code>set</code> accessor of the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Item_\" data-linktype=\"relative-path\">Item</a> method, or for every property that is restored when a call is made to the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reload_\" data-linktype=\"relative-path\">Reload</a> or <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reset_\" data-linktype=\"relative-path\">Reset</a> methods.  </p>\n<p> There is no corresponding <code>PropertyChanging</code> event for this class; instead, see the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_SettingChanging\" data-linktype=\"relative-path\">SettingChanging</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_SettingChanging\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SettingChanging</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs before the value of an application settings property is changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Configuration.SettingChangingEventHandler SettingChanging;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SettingChanging event occurs before an application setting value property is changed through the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Item_\" data-linktype=\"relative-path\">Item</a> method. This event is not raised when the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reload_\" data-linktype=\"relative-path\">Reload</a> or <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reset_\" data-linktype=\"relative-path\">Reset</a> methods are called. SettingChanging can be canceled through the <a class=\"xref\" href=\"system.configuration.settingchangingeventargs\" data-linktype=\"relative-path\">SettingChangingEventArgs</a> event data class.  </p>\n<p> You typically use the SettingChanging event to handle immediate validation of an individual settings property. For more information about validation, see <a href=\"../Topic/How%20to:%20Validate%20Application%20Settings.md\" data-linktype=\"relative-path\">How to: Validate Application Settings</a>.  </p>\n<p> There is no corresponding <code>SettingChanged</code> event for this class; instead, see the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_PropertyChanged\" data-linktype=\"relative-path\">PropertyChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_SettingsLoaded\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SettingsLoaded</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after the application settings are retrieved from storage.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SettingsLoaded event occurs only after the initial <code>get</code> access of the first configuration property used, typically through the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Item_\" data-linktype=\"relative-path\">Item</a> method. Subsequent accesses use values for the settings property that are cached locally. The <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reset_\" data-linktype=\"relative-path\">Reset</a> and <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Reload_\" data-linktype=\"relative-path\">Reload</a> methods will clear all cached values so this event will be raised again upon subsequent property access.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ApplicationSettingsBase_SettingsSaving\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SettingsSaving</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs before values are saved to the data store.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Configuration.SettingsSavingEventHandler SettingsSaving;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SettingsSaving event is raised by the <a class=\"xref\" href=\"system.configuration.applicationsettingsbase#System_Configuration_ApplicationSettingsBase_Save_\" data-linktype=\"relative-path\">Save</a> method before it stores the application settings properties to their associated data store. The associated event handler can cancel this event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.ApplicationSettingsBase.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase..ctor\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Context\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.GetPreviousVersion\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Item\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.OnPropertyChanged\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.OnSettingChanging\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.OnSettingsLoaded\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.OnSettingsSaving\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Properties\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.PropertyChanged\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.add_PropertyChanged\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.remove_PropertyChanged\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.PropertyValues\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Providers\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Reload\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Reset\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Save\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.SettingChanging\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.add_SettingChanging\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.remove_SettingChanging\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.SettingsKey\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.SettingsLoaded\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.add_SettingsLoaded\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.remove_SettingsLoaded\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.SettingsSaving\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.add_SettingsSaving\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.remove_SettingsSaving\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ApplicationSettingsBase.Upgrade\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"b94d54bf-c677-244d-7cb2-5e896a470b63\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.configuration/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.ApplicationSettingsBase\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.ApplicationSettingsBase.yml","open_to_public_contributors":false,"api_name":["System.Configuration.ApplicationSettingsBase","System.Configuration.ApplicationSettingsBase..ctor","System.Configuration.ApplicationSettingsBase.Context","System.Configuration.ApplicationSettingsBase.GetPreviousVersion","System.Configuration.ApplicationSettingsBase.Item","System.Configuration.ApplicationSettingsBase.OnPropertyChanged","System.Configuration.ApplicationSettingsBase.OnSettingChanging","System.Configuration.ApplicationSettingsBase.OnSettingsLoaded","System.Configuration.ApplicationSettingsBase.OnSettingsSaving","System.Configuration.ApplicationSettingsBase.Properties","System.Configuration.ApplicationSettingsBase.PropertyChanged","System.Configuration.ApplicationSettingsBase.add_PropertyChanged","System.Configuration.ApplicationSettingsBase.remove_PropertyChanged","System.Configuration.ApplicationSettingsBase.PropertyValues","System.Configuration.ApplicationSettingsBase.Providers","System.Configuration.ApplicationSettingsBase.Reload","System.Configuration.ApplicationSettingsBase.Reset","System.Configuration.ApplicationSettingsBase.Save","System.Configuration.ApplicationSettingsBase.SettingChanging","System.Configuration.ApplicationSettingsBase.add_SettingChanging","System.Configuration.ApplicationSettingsBase.remove_SettingChanging","System.Configuration.ApplicationSettingsBase.SettingsKey","System.Configuration.ApplicationSettingsBase.SettingsLoaded","System.Configuration.ApplicationSettingsBase.add_SettingsLoaded","System.Configuration.ApplicationSettingsBase.remove_SettingsLoaded","System.Configuration.ApplicationSettingsBase.SettingsSaving","System.Configuration.ApplicationSettingsBase.add_SettingsSaving","System.Configuration.ApplicationSettingsBase.remove_SettingsSaving","System.Configuration.ApplicationSettingsBase.Upgrade"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.ApplicationSettingsBase","System::Configuration::ApplicationSettingsBase","System.Configuration.ApplicationSettingsBase.#ctor","System::Configuration::ApplicationSettingsBase::#ctor","System.Configuration.ApplicationSettingsBase.Context","System::Configuration::ApplicationSettingsBase::Context","System.Configuration.ApplicationSettingsBase.GetPreviousVersion","System::Configuration::ApplicationSettingsBase::GetPreviousVersion","System.Configuration.ApplicationSettingsBase.Item","System::Configuration::ApplicationSettingsBase::Item","System.Configuration.ApplicationSettingsBase.OnPropertyChanged","System::Configuration::ApplicationSettingsBase::OnPropertyChanged","System.Configuration.ApplicationSettingsBase.OnSettingChanging","System::Configuration::ApplicationSettingsBase::OnSettingChanging","System.Configuration.ApplicationSettingsBase.OnSettingsLoaded","System::Configuration::ApplicationSettingsBase::OnSettingsLoaded","System.Configuration.ApplicationSettingsBase.OnSettingsSaving","System::Configuration::ApplicationSettingsBase::OnSettingsSaving","System.Configuration.ApplicationSettingsBase.Properties","System::Configuration::ApplicationSettingsBase::Properties","System.Configuration.ApplicationSettingsBase.PropertyChanged","System::Configuration::ApplicationSettingsBase::PropertyChanged","System.Configuration.ApplicationSettingsBase.PropertyValues","System::Configuration::ApplicationSettingsBase::PropertyValues","System.Configuration.ApplicationSettingsBase.Providers","System::Configuration::ApplicationSettingsBase::Providers","System.Configuration.ApplicationSettingsBase.Reload","System::Configuration::ApplicationSettingsBase::Reload","System.Configuration.ApplicationSettingsBase.Reset","System::Configuration::ApplicationSettingsBase::Reset","System.Configuration.ApplicationSettingsBase.Save","System::Configuration::ApplicationSettingsBase::Save","System.Configuration.ApplicationSettingsBase.SettingChanging","System::Configuration::ApplicationSettingsBase::SettingChanging","System.Configuration.ApplicationSettingsBase.SettingsKey","System::Configuration::ApplicationSettingsBase::SettingsKey","System.Configuration.ApplicationSettingsBase.SettingsLoaded","System::Configuration::ApplicationSettingsBase::SettingsLoaded","System.Configuration.ApplicationSettingsBase.SettingsSaving","System::Configuration::ApplicationSettingsBase::SettingsSaving","System.Configuration.ApplicationSettingsBase.Upgrade","System::Configuration::ApplicationSettingsBase::Upgrade"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"b94d54bf-c677-244d-7cb2-5e896a470b63","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ApplicationSettingsBase.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ApplicationSettingsBase class | Microsoft Docs","_op_ogTitle":"ApplicationSettingsBase class","description":"Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.\n","toc_asset_id":"api/_splitted/System.Configuration/toc.json","toc_rel":"_splitted/System.Configuration/toc.json","source_url":"","ms.assetid":"System.Configuration.ApplicationSettingsBase","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.applicationsettingsbase","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.applicationsettingsbase","fileRelativePath":"api/System.Configuration.ApplicationSettingsBase.html"},"themesRelativePathToOutputRoot":"_themes/"}