{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">InstrumentationType</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the type of instrumentation provided by a class.  </p>\n<p> Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The <a href=\"https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx\" data-linktype=\"external\">MI APIs</a> should be used for all new development.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum InstrumentationType</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">InstrumentationType</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to create a management event class by using the InstrumentationType enumeration.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_InstrumentationType#1\">using System;\nusing System.Management;\nusing System.Configuration.Install;\nusing System.Management.Instrumentation;\n\n// This example demonstrates how to create\n// a management event class by using\n// the InstrumentationType enumeration\n\n// Specify which namespace the management event\n// class is created in\n[assembly:Instrumented(&quot;Root/Default&quot;)]\n\n// Let the system know you will run\n// InstallUtil.exe tool against this assembly\n[System.ComponentModel.RunInstaller(true)]\npublic class MyInstaller : \n    DefaultManagementProjectInstaller {}\n\nnamespace WMISample\n{\n    // Create a management instrumentation event class\n    [InstrumentationClass(InstrumentationType.Event)]\n    public class MyEvent\n    {\n        private string EventName;\n        public void setEventName(string name)\n        {\n            EventName = name;\n        }\n    }\n\n    public class WMIInstrumentedEventExample\n    {\n        public static void Main() \n        {\n            MyEvent e = new MyEvent();\n            e.setEventName(&quot;Hello&quot;);\n        \n            // Fire a management event\n            Instrumentation.Fire(e);        \n            return;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_InstrumentationType#1\">Imports System\nImports System.Management\nImports System.Configuration.Install\nImports System.Management.Instrumentation\n\n&#39; This sample demonstrates how to create\n&#39; a management event class by using\n&#39; the InstrumentationType enumeration\n\n&#39; Specify which namespace the management event\n&#39; class is created in\n&lt;Assembly: Instrumented(&quot;Root/Default&quot;)&gt; \n\n&#39; Let the system know InstallUtil.exe tool will\n&#39; be run against this assembly\n&lt;System.ComponentModel.RunInstaller(True)&gt; _\nPublic Class MyInstaller\n    Inherits DefaultManagementProjectInstaller\nEnd Class &#39;MyInstaller\n\nNamespace WMISample\n    &#39; Create a management instrumentation event class\n    &lt;InstrumentationClass(InstrumentationType.Event)&gt; _\n    Public Class MyEvent\n        Private EventName As String\n        Function setEventName(ByVal name As String)\n            EventName = name\n        End Function\n    End Class\n\n    Public Class SampleEventProvider\n        Public Shared Function Main(ByVal args() _\n            As String) As Integer\n\n            Dim e As New MyEvent\n            e.setEventName(&quot;Hello&quot;)\n\n            &#39; Fire a management event\n            System.Management.Instrumentation. _\n                Instrumentation.Fire(e)\n\n            Return 0\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n  \r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Management_Instrumentation_InstrumentationType_Abstract\">\r\n      \t\t\t<span class=\"lang-csharp\">Abstract</span>\r\n      \t</td>\r\n      \t<td><p>The class defines an abstract class for management instrumentation.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Management_Instrumentation_InstrumentationType_Event\">\r\n      \t\t\t<span class=\"lang-csharp\">Event</span>\r\n      \t</td>\r\n      \t<td><p>The class provides events for management instrumentation.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Management_Instrumentation_InstrumentationType_Instance\">\r\n      \t\t\t<span class=\"lang-csharp\">Instance</span>\r\n      \t</td>\r\n      \t<td><p>The class provides instances for management instrumentation.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.Instrumentation.InstrumentationType.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationType\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationType.Abstract\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationType.Event\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationType.Instance\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"4336b77b-1d39-0862-926e-23d037bad74d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the type of instrumentation provided by a class.  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available foâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.management.instrumentation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.Instrumentation.InstrumentationType\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.Instrumentation.InstrumentationType.yml","open_to_public_contributors":false,"api_name":["System.Management.Instrumentation.InstrumentationType","System.Management.Instrumentation.InstrumentationType.Abstract","System.Management.Instrumentation.InstrumentationType.Event","System.Management.Instrumentation.InstrumentationType.Instance"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.Instrumentation.InstrumentationType","System::Management::Instrumentation::InstrumentationType","System.Management.Instrumentation.InstrumentationType.Abstract","System::Management::Instrumentation::InstrumentationType::Abstract","System.Management.Instrumentation.InstrumentationType.Event","System::Management::Instrumentation::InstrumentationType::Event","System.Management.Instrumentation.InstrumentationType.Instance","System::Management::Instrumentation::InstrumentationType::Instance"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"4336b77b-1d39-0862-926e-23d037bad74d","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Management.Instrumentation/InstrumentationType.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InstrumentationType enum | Microsoft Docs","_op_ogTitle":"InstrumentationType enum","description":"Specifies the type of instrumentation provided by a class.  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available foâ€¦","toc_asset_id":"api/_splitted/System.Management.Instrumentation/toc.json","toc_rel":"_splitted/System.Management.Instrumentation/toc.json","source_url":"","ms.assetid":"System.Management.Instrumentation.InstrumentationType","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.management.instrumentation.instrumentationtype","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.management.instrumentation.instrumentationtype","fileRelativePath":"api/System.Management.Instrumentation.InstrumentationType.html"},"themesRelativePathToOutputRoot":"_themes/"}