{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">AllowPartiallyTrustedCallersAttribute</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Allows an assembly to be called by partially trusted code. Without this declaration, only fully trusted callers are able to use the assembly. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false, Inherited=false)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class AllowPartiallyTrustedCallersAttribute : Attribute</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></span></div><span class=\"lang-csharp\">AllowPartiallyTrustedCallersAttribute</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how to use the AllowPartiallyTrustedCallersAttribute class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.AllowPartiallyTrustedCallersAttribute#1\">// The following HTML code can be used to call the user control in this sample.\n//\n//&lt;HTML&gt;\n//\t&lt;BODY&gt;\n//\t\t&lt;OBJECT id=&quot;usercontrol&quot; classid=&quot;usercontrol.dll#UserControl.UserControl1&quot; width=&quot;800&quot;\n//\t\theight=&quot;300&quot; style=&quot;font-size:12;&quot;&gt;\n//\t\t&lt;/OBJECT&gt;\n//\t\t&lt;p&gt;\n//\t&lt;/BODY&gt;\n//&lt;/HTML&gt;\n\n// To run this test control you must create a strong name key, snkey.snk, and \n// a code group that gives full trust to assemblies signed with snkey.snk.\n\n// The user control displays an OpenFileDialog box, then displays a text box containing the name of \n// the file selected and a list box that displays the contents of the file.  The selected file must \n// contain text in order for the control to display the data properly.\n\n// Caution  This sample demonstrates the use of the Assert method.  Calling Assert removes the \n// requirement that all code in the call chain must be granted permission to access the specified \n// resource, it can open up security vulnerabilities if used incorrectly or inappropriately. Therefore, \n// it should be used with great caution.  Assert should always be followed with a RevertAssert \n// command to restore the security settings.\n\n\nusing System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Drawing;\nusing System.Data;\nusing System.Windows.Forms;\nusing System.IO;\nusing System.Security;\nusing System.Security.Permissions;\nusing System.Reflection;\nusing System.Runtime.CompilerServices;\n\n// This strong name key is used to create a code group that gives permissions to this assembly.\n[assembly: AssemblyKeyFile(&quot;snKey.snk&quot;)]\n[assembly: AssemblyVersion(&quot;1.0.0.0&quot;)]\n\n// The AllowPartiallyTrustedCallersAttribute requires the assembly to be signed with a strong name key.\n// This attribute is necessary since the control is called by either an intranet or Internet\n// Web page that should be running under restricted permissions.\n[assembly:AllowPartiallyTrustedCallers]\nnamespace UserControl\n{\n\t// The userControl1 displays an OpenFileDialog box, then displays a text box containing the name of \n\t// the file selected and a list box that displays the contents of the file.  The selected file must \n\t// contain text in order for the control to display the data properly.\n\tpublic class UserControl1 : System.Windows.Forms.UserControl\n\t{\n\t\tprivate System.Windows.Forms.TextBox textBox1;\n\t\tprivate System.Windows.Forms.ListBox listBox1;\n\t\t// Required designer variable.\n\t\tprivate System.ComponentModel.Container components = null;\n\n              // Demand the zone requirement for the calling application.\n              [ZoneIdentityPermission(SecurityAction.Demand, Zone = SecurityZone.Intranet)]\n\t\tpublic UserControl1()\n\t\t{\n\t\t\t// This call is required by the Windows.Forms Form Designer.\n\t\t\tInitializeComponent();\n\n\t\t\t// The OpenFileDialog box should not require any special permissions.\n\t\t\tOpenFileDialog fileDialog = new OpenFileDialog();\n\t\t\tif(fileDialog.ShowDialog() == DialogResult.OK)\n\t\t\t{\n\t\t\t\t// Reading the name of the selected file from the OpenFileDialog box\n\t\t\t\t// and reading the file requires FileIOPermission.  The user control should \n\t\t\t\t// have this permission granted through its code group; the Web page that calls the \n\t\t\t\t// control should not have this permission.  The Assert command prevents a stack walk \n\t\t\t\t// that would fail because the caller does not have the required FileIOPermission.  \n\t\t\t\t// The use of Assert can open up security vulnerabilities if used incorrectly or \n\t\t\t\t// inappropriately. Therefore, it should be used with great caution.\n\t\t\t\t// The Assert command should be followed by a RevertAssert as soon as the file operation \n\t\t\t\t// is completed.\n\t\t\t\tnew FileIOPermission(PermissionState.Unrestricted).Assert();\n\t\t\t\ttextBox1.Text = fileDialog.FileName;\n\t\t\t\t// Display the contents of the file in the text box.\n\t\t\t\tFileStream fsIn = new FileStream(textBox1.Text, FileMode.Open, FileAccess.Read, \n\t\t\t\t\tFileShare.Read);\n\t\t\t\tStreamReader sr = new StreamReader(fsIn);\n\t\t\t\n\t\t\t\t// Process every line in the file\n\t\t\t\tfor (String Line = sr.ReadLine(); Line != null; Line = sr.ReadLine()) \n\t\t\t\t{\n\t\t\t\t\tlistBox1.Items.Add(Line);\n\t\t\t\t}\n\t\t\t\t// It is very important to call RevertAssert to restore the stack walk for\n\t\t\t\t// file operations.\n\t\t\t\tFileIOPermission.RevertAssert();\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up any resources being used.\n\t\tprotected override void Dispose( bool disposing )\n\t\t{\n\t\t\tif( disposing )\n\t\t\t{\n\t\t\t\tif( components != null )\n\t\t\t\t\tcomponents.Dispose();\n\t\t\t}\n\t\t\tbase.Dispose( disposing );\n\t\t}\n\n\t\t#region Component Designer generated code\n\t\t/// &lt;summary&gt;\n\t\t/// Required method for Designer support - do not modify \n\t\t/// the contents of this method with the code editor.\n\t\t/// &lt;/summary&gt;\n\t\tprivate void InitializeComponent()\n\t\t{\n\t\t\tthis.textBox1 = new System.Windows.Forms.TextBox();\n\t\t\tthis.listBox1 = new System.Windows.Forms.ListBox();\n\t\t\tthis.SuspendLayout();\n\t\t\t// \n\t\t\t// textBox1\n\t\t\t// \n\t\t\tthis.textBox1.Location = new System.Drawing.Point(208, 112);\n\t\t\tthis.textBox1.Name = &quot;textBox1&quot;;\n\t\t\tthis.textBox1.Size = new System.Drawing.Size(320, 20);\n\t\t\tthis.textBox1.TabIndex = 0;\n\t\t\tthis.textBox1.Text = &quot;textBox1&quot;;\n\t\t\tthis.textBox1.TextChanged += new System.EventHandler(this.textBox1_TextChanged);\n\t\t\t// \n\t\t\t// listBox1\n\t\t\t// \n\t\t\tthis.listBox1.Location = new System.Drawing.Point(200, 184);\n\t\t\tthis.listBox1.Name = &quot;listBox1&quot;;\n\t\t\tthis.listBox1.Size = new System.Drawing.Size(336, 108);\n\t\t\tthis.listBox1.TabIndex = 1;\n\t\t\t// \n\t\t\t// UserControl1\n\t\t\t// \n\t\t\tthis.Controls.Add(this.listBox1);\n\t\t\tthis.Controls.Add(this.textBox1);\n\t\t\tthis.Name = &quot;UserControl1&quot;;\n\t\t\tthis.Size = new System.Drawing.Size(592, 400);\n\t\t\tthis.Load += new System.EventHandler(this.UserControl1_Load);\n\t\t\tthis.ResumeLayout(false);\n\n\t\t}\n\t\t#endregion\n\n\t\tprivate void UserControl1_Load(object sender, System.EventArgs e)\n\t\t{\n\t\t\n\t\t}\n\n\t\tprivate void textBox1_TextChanged(object sender, System.EventArgs e)\n\t\t{\n\t\t\n\t\t}\n\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.AllowPartiallyTrustedCallersAttribute#1\">&#39; The following HTML code can be used to call the user control in this sample.\n&#39;\n&#39;&lt;HTML&gt;\n&#39;\t&lt;BODY&gt;\n&#39;\t\t&lt;OBJECT id=&quot;usercontrol&quot; classid=&quot;usercontrol.dll#UserControl.UserControl1&quot; width=&quot;800&quot;\n&#39;\t\theight=&quot;300&quot; style=&quot;font-size:12;&quot;&gt;\n&#39;\t\t&lt;/OBJECT&gt;\n&#39;\t\t&lt;p&gt;\n&#39;\t&lt;/BODY&gt;\n&#39;&lt;/HTML&gt;\n&#39; To run this test control you must create a strong name key, snkey.snk, and \n&#39; a code group that gives full trust to assemblies signed with snkey.snk.\n&#39; The user control displays an OpenFileDialog box, then displays a text box containing the name of \n&#39; the file selected and a list box that displays the contents of the file.  The selected file must \n&#39; contain text in order for the control to display the data properly.\n&#39; Caution  This sample demonstrates the use of the Assert method.  Calling Assert removes the \n&#39; requirement that all code in the call chain must be granted permission to access the specified \n&#39; resource, it can open up security vulnerabilities if used incorrectly or inappropriately. Therefore, \n&#39; it should be used with great caution.  Assert should always be followed with a RevertAssert \n&#39; command to restore the security settings.\n\nImports System\nImports System.Collections\nImports System.ComponentModel\nImports System.Drawing\nImports System.Data\nImports System.Windows.Forms\nImports System.IO\nImports System.Security\nImports System.Security.Permissions\nImports System.Reflection\nImports System.Runtime.CompilerServices\nImports Microsoft.VisualBasic\n\n\n&#39; This strong name key is used to create a code group that gives permissions to this assembly.\n\n&lt;Assembly: AssemblyKeyFile(&quot;snKey.snk&quot;)&gt; \n\n&lt;Assembly: AssemblyVersion(&quot;1.0.0.0&quot;)&gt; \n&#39; The AllowPartiallyTrustedCallersAttribute requires the assembly to be signed with a strong name key.\n&#39; This attribute is necessary since the control is called by either an intranet or Internet\n&#39; Web page that should be running under restricted permissions.\n\n&lt;Assembly: AllowPartiallyTrustedCallers()&gt; \n\n&#39; The userControl1 displays an OpenFileDialog box, then displays a text box containing the name of \n&#39; the file selected and a list box that displays the contents of the file.  The selected file must \n&#39; contain text in order for the control to display the data properly.\n\n&#39;Demand the zone requirement for the calling application.\n&lt;ZoneIdentityPermissionAttribute(SecurityAction.Demand, Zone:=SecurityZone.Intranet)&gt; _\nPublic Class UserControl1\n    Inherits System.Windows.Forms.UserControl\n    Private WithEvents textBox1 As System.Windows.Forms.TextBox\n    Private listBox1 As System.Windows.Forms.ListBox\n    &#39; Required designer variable.\n    Private components As System.ComponentModel.Container = Nothing\n\n\n    Public Sub New()\n        &#39; This call is required by the Windows.Forms Form Designer.\n        InitializeComponent()\n\n        &#39; The OpenFileDialog box should not require any special permissions.\n        Dim fileDialog As New OpenFileDialog\n        If fileDialog.ShowDialog() = DialogResult.OK Then\n            &#39; Reading the name of the selected file from the OpenFileDialog box\n            &#39; and reading the file requires FileIOPermission.  The user control should \n            &#39; have this permission granted through its code group; the Web page that calls the \n            &#39; control should not have this permission.  The Assert command prevents a stack walk \n            &#39; that would fail because the caller does not have the required FileIOPermission.  \n            &#39; The use of Assert can open up security vulnerabilities if used incorrectly or \n            &#39; inappropriately. Therefore, it should be used with great caution.\n            &#39; The Assert command should be followed by a RevertAssert as soon as the file operation \n            &#39; is completed.\n            Dim fileIOPermission As New FileIOPermission(PermissionState.Unrestricted)\n            fileIOPermission.Assert()\n            textBox1.Text = fileDialog.FileName\n            &#39; Display the contents of the file in the text box.\n            Dim fsIn As New FileStream(textBox1.Text, FileMode.Open, FileAccess.Read, FileShare.Read)\n            Dim sr As New StreamReader(fsIn)\n\n            &#39; Process every line in the file\n            Dim Line As String\n            Line = sr.ReadLine()\n            While Not (Line Is Nothing)\n                listBox1.Items.Add(Line)\n                Line = sr.ReadLine()\n            End While\n            &#39; It is very important to call RevertAssert to restore the stack walk for\n            &#39; file operations.\n            fileIOPermission.RevertAssert()\n        End If\n    End Sub &#39;New\n\n\n    &#39; Clean up any resources being used.\n    Protected Overloads Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            If Not (components Is Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub &#39;Dispose\n\n\n    &#39; Required method for Designer support - do not modify \n    &#39; the contents of this method with the code editor.\n    Private Sub InitializeComponent()\n        Me.textBox1 = New System.Windows.Forms.TextBox\n        Me.listBox1 = New System.Windows.Forms.ListBox\n        Me.SuspendLayout()\n        &#39; \n        &#39; textBox1\n        &#39; \n        Me.textBox1.Location = New System.Drawing.Point(208, 112)\n        Me.textBox1.Name = &quot;textBox1&quot;\n        Me.textBox1.Size = New System.Drawing.Size(320, 20)\n        Me.textBox1.TabIndex = 0\n        Me.textBox1.Text = &quot;textBox1&quot;\n        &#39; \n        &#39; listBox1\n        &#39; \n        Me.listBox1.Location = New System.Drawing.Point(200, 184)\n        Me.listBox1.Name = &quot;listBox1&quot;\n        Me.listBox1.Size = New System.Drawing.Size(336, 108)\n        Me.listBox1.TabIndex = 1\n        &#39; \n        &#39; UserControl1\n        &#39; \n        Me.Controls.Add(listBox1)\n        Me.Controls.Add(textBox1)\n        Me.Name = &quot;UserControl1&quot;\n        Me.Size = New System.Drawing.Size(592, 400)\n        Me.ResumeLayout(False)\n    End Sub &#39;InitializeComponent\n\n    Private Sub UserControl1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load\n    End Sub &#39;UserControl1_Load\n\n    Private Sub textBox1_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles textBox1.TextChanged\n    End Sub &#39;textBox1_TextChanged\nEnd Class &#39;UserControl1 \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.AllowPartiallyTrustedCallersAttribute#1\">// The following HTML code can be used to call the user control in this sample.\n//\n//&lt;HTML&gt;\n// &lt;BODY&gt;\n//  &lt;OBJECT id=&quot;usercontrol&quot; classid=&quot;usercontrol.dll#UserControl.UserControl1&quot; width=&quot;800&quot;\n//  height=&quot;300&quot; style=&quot;font-size:12;&quot;&gt;\n//  &lt;/OBJECT&gt;\n//  &lt;p&gt;\n// &lt;/BODY&gt;\n//&lt;/HTML&gt;\n// To run this test control you must create a strong name key, snkey.snk, and\n// a code group that gives full trust to assemblies signed with snkey.snk.\n// The user control displays an OpenFileDialog box, then displays a text box containing the name of\n// the file selected and a list box that displays the contents of the file.  The selected file must\n// contain text in order for the control to display the data properly.\n// Caution  This sample demonstrates the use of the Assert method.  Calling Assert removes the\n// requirement that all code in the call chain must be granted permission to access the specified\n// resource, it can open up security vulnerabilities if used incorrectly or inappropriately. Therefore,\n// it should be used with great caution.  Assert should always be followed with a RevertAssert\n// command to restore the security settings.\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Data.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::Drawing;\nusing namespace System::Data;\nusing namespace System::Windows::Forms;\nusing namespace System::IO;\nusing namespace System::Security;\nusing namespace System::Security::Permissions;\nusing namespace System::Reflection;\nusing namespace System::Runtime::CompilerServices;\n\n// This strong name key is used to create a code group that gives permissions to this assembly.\n// The AllowPartiallyTrustedCallersAttribute requires the assembly to be signed with a strong name key.\n// This attribute is necessary since the control is called by either an intranet or Internet\n// Web page that should be running under restricted permissions.\n// The userControl1 displays an OpenFileDialog box, then displays a text box containing the name of \n// the file selected and a list box that displays the contents of the file.  The selected file must \n// contain text in order for the control to display the data properly.\n\n[assembly:AssemblyKeyFile(&quot;snKey.snk&quot;)];\n[assembly:AssemblyVersion(&quot;1.0.0.0&quot;)];\n[assembly:AllowPartiallyTrustedCallers];\npublic ref class UserControl1: public System::Windows::Forms::UserControl\n{\nprivate:\n   System::Windows::Forms::TextBox^ textBox1;\n   System::Windows::Forms::ListBox^ listBox1;\n\n   // Required designer variable.\n   System::ComponentModel::Container^ components;\n\npublic:\n// Demand the zone requirement for the calling application.\n[ZoneIdentityPermission(SecurityAction::Demand, Zone = SecurityZone::Intranet)]\n   UserControl1()\n   {\n      \n      // This call is required by the Windows.Forms Form Designer.\n      InitializeComponent();\n      \n      // The OpenFileDialog box should not require any special permissions.\n      OpenFileDialog^ fileDialog = gcnew OpenFileDialog;\n      if ( fileDialog-&gt;ShowDialog() == DialogResult::OK )\n      {\n         \n         // Reading the name of the selected file from the OpenFileDialog box\n         // and reading the file requires FileIOPermission.  The user control should \n         // have this permission granted through its code group; the Web page that calls the \n         // control should not have this permission.  The Assert command prevents a stack walk \n         // that would fail because the caller does not have the required FileIOPermission.  \n         // The use of Assert can open up security vulnerabilities if used incorrectly or \n         // inappropriately. Therefore, it should be used with great caution.\n         // The Assert command should be followed by a RevertAssert as soon as the file operation \n         // is completed.\n         (gcnew FileIOPermission( PermissionState::Unrestricted ))-&gt;Assert();\n         textBox1-&gt;Text = fileDialog-&gt;FileName;\n\n         // Display the contents of the file in the text box.\n         FileStream^ fsIn = gcnew FileStream( textBox1-&gt;Text,FileMode::Open,FileAccess::Read,FileShare::Read );\n         StreamReader^ sr = gcnew StreamReader( fsIn );\n         \n         // Process every line in the file\n         for ( String ^ Line = sr-&gt;ReadLine(); Line != nullptr; Line = sr-&gt;ReadLine() )\n         {\n            listBox1-&gt;Items-&gt;Add( Line );\n\n         }\n\n         // file operations.\n         FileIOPermission::RevertAssert();\n      }\n   }\n\nprivate:\n\n   /// &lt;summary&gt;\n   /// Required method for Designer support - do not modify \n   /// the contents of this method with the code editor.\n   /// &lt;/summary&gt;\n   void InitializeComponent()\n   {\n      this-&gt;textBox1 = gcnew System::Windows::Forms::TextBox;\n      this-&gt;listBox1 = gcnew System::Windows::Forms::ListBox;\n      this-&gt;SuspendLayout();\n      \n      // \n      // textBox1\n      // \n      this-&gt;textBox1-&gt;Location = System::Drawing::Point( 208, 112 );\n      this-&gt;textBox1-&gt;Name = &quot;textBox1&quot;;\n      this-&gt;textBox1-&gt;Size = System::Drawing::Size( 320, 20 );\n      this-&gt;textBox1-&gt;TabIndex = 0;\n      this-&gt;textBox1-&gt;Text = &quot;textBox1&quot;;\n      this-&gt;textBox1-&gt;TextChanged += gcnew System::EventHandler( this,&amp;UserControl1::textBox1_TextChanged );\n      \n      // \n      // listBox1\n      // \n      this-&gt;listBox1-&gt;Location = System::Drawing::Point( 200, 184 );\n      this-&gt;listBox1-&gt;Name = &quot;listBox1&quot;;\n      this-&gt;listBox1-&gt;Size = System::Drawing::Size( 336, 108 );\n      this-&gt;listBox1-&gt;TabIndex = 1;\n      \n      // \n      // UserControl1\n      // \n      this-&gt;Controls-&gt;Add( this-&gt;listBox1 );\n      this-&gt;Controls-&gt;Add( this-&gt;textBox1 );\n      this-&gt;Name = &quot;UserControl1&quot;;\n      this-&gt;Size = System::Drawing::Size( 592, 400 );\n      this-&gt;Load += gcnew System::EventHandler( this,&amp;UserControl1::UserControl1_Load );\n      this-&gt;ResumeLayout( false );\n   }\n\n   void UserControl1_Load( Object^ /*sender*/, System::EventArgs^ /*e*/ ){}\n\n   void textBox1_TextChanged( Object^ /*sender*/, System::EventArgs^ /*e*/ ){}\n\n};\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<div class=\"NOTE\"><h5>Note</h5><p> The .NET Framework 4 introduces new security rules that affect the behavior of the AllowPartiallyTrustedCallersAttribute attribute (see <a href=\"../topic/security-transparent%20code,%20level%202\" data-linktype=\"relative-path\">Security-Transparent Code, Level 2</a>). In the .NET Framework 4, all code defaults to security-transparent, that is, partially trusted. However, you can annotate individual types and members to assign them other transparency attributes. For this and other security changes, see <a href=\"../topic/security%20changes%20in%20the%20.net%20framework\" data-linktype=\"relative-path\">Security Changes</a>.  </p>\n</div>\n<p> .NET Framework version 2.0 () assemblies must be strong-named to effectively use the AllowPartiallyTrustedCallersAttribute (APTCA) attribute. .NET Framework 4 () assemblies do not have to be strong-named for the APTCA attribute to be effective, and they can contain transparent, security-critical and security-safe-critical code. For more information about applying attributes at the assembly level, see <a href=\"../topic/applying%20attributes\" data-linktype=\"relative-path\">Applying Attributes</a>.  </p>\n<p> By default, if a strong-named,  assembly does not explicitly apply this attribute at the assembly level, it can be called only by other assemblies that are granted full trust. This restriction is enforced by placing a <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">SecurityAction</a> for <code>FullTrust</code> on every public or protected method on every publicly accessible class in the assembly. Assemblies that are intended to be called by partially trusted code can declare their intent through the use of AllowPartiallyTrustedCallersAttribute. An example of the declaration in C# is <code>[assembly:AllowPartiallyTrustedCallers]</code>; an example in Visual Basic is <code>&lt;assembly:AllowPartiallyTrustedCallers&gt;</code>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The presence of this assembly-level attribute prevents the default behavior of placing <code>FullTrust</code><a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">SecurityAction</a> security checks, and makes the assembly callable from any other (partially or fully trusted) assembly.  </p>\n</div>\n<p> When the APTCA attribute is present, all other security checks function as intended, including any class-level or method-level declarative security attributes that are present. This attribute blocks only the implicit, fully trusted caller demand.  </p>\n<p> This is not a declarative security attribute, but a regular attribute (it derives from <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>, not from <a class=\"xref\" href=\"system.security.permissions.securityattribute\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityAttribute</a>).  </p>\n<p> For more information, see <a href=\"../topic/using%20libraries%20from%20partially%20trusted%20code\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_AllowPartiallyTrustedCallersAttribute__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_AllowPartiallyTrustedCallersAttribute__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowPartiallyTrustedCallersAttribute()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.allowpartiallytrustedcallersattribute\" data-linktype=\"relative-path\">AllowPartiallyTrustedCallersAttribute</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public AllowPartiallyTrustedCallersAttribute ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This attribute should be applied only at the assembly level.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_AllowPartiallyTrustedCallersAttribute_PartialTrustVisibilityLevel_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_AllowPartiallyTrustedCallersAttribute_PartialTrustVisibilityLevel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PartialTrustVisibilityLevel</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the default partial trust visibility for code that is marked with the <a class=\"xref\" href=\"system.security.allowpartiallytrustedcallersattribute\" data-linktype=\"relative-path\">AllowPartiallyTrustedCallersAttribute</a> (APTCA) attribute.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.PartialTrustVisibilityLevel PartialTrustVisibilityLevel { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.partialtrustvisibilitylevel\" data-linktype=\"relative-path\">PartialTrustVisibilityLevel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values. The default is <a class=\"xref\" href=\"system.security.partialtrustvisibilitylevel\" data-linktype=\"relative-path\">PartialTrustVisibilityLevel</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The following examples demonstrate how to use this property.  </p>\n<ul>\n<li><p>Default, unconditional APTCA:  </p>\n<pre><code>[assembly: AllowPartiallyTrustedCallers]  \n</code></pre><p> Defaults to <a class=\"xref\" href=\"system.security.partialtrustvisibilitylevel\" data-linktype=\"relative-path\">PartialTrustVisibilityLevel</a>.  </p>\n</li>\n<li><p>Explicit, unconditional APTCA:  </p>\n<pre><code>[assembly: AllowPartiallyTrustedCallers(PartialTrustVisibilityLevel=VisibleToAllHosts)]  \n</code></pre><p> The assembly can always be called by partial-trust code.  </p>\n</li>\n<li><p>Explicit, conditional APTCA:  </p>\n<pre><code>[assembly: AllowPartiallyTrustedCallers(PartialTrustVisibilityLevel=NotVisibleByDefault)]  \n</code></pre><p> The assembly has been audited for partial trust, but it is not visible to partial-trust code by default. To make the assembly visible to partial-trust code, add it to the <a class=\"xref\" href=\"system.appdomainsetup#System_AppDomainSetup_PartialTrustVisibleAssemblies_\" data-linktype=\"relative-path\">PartialTrustVisibleAssemblies</a> property.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.AllowPartiallyTrustedCallersAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.AllowPartiallyTrustedCallersAttribute\">\r\n<meta name=\"APIName\" content=\"System.Security.AllowPartiallyTrustedCallersAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"bf7a4912-1325-8d10-3981-05de961813fb\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Allows an assembly to be called by partially trusted code. Without this declaration, only fully trusted callers are able to use the assembly. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.AllowPartiallyTrustedCallersAttribute\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.AllowPartiallyTrustedCallersAttribute.yml","open_to_public_contributors":false,"api_name":["System.Security.AllowPartiallyTrustedCallersAttribute","System.Security.AllowPartiallyTrustedCallersAttribute..ctor","System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.AllowPartiallyTrustedCallersAttribute","System::Security::AllowPartiallyTrustedCallersAttribute","System.Security.AllowPartiallyTrustedCallersAttribute.#ctor","System::Security::AllowPartiallyTrustedCallersAttribute::#ctor","System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel","System::Security::AllowPartiallyTrustedCallersAttribute::PartialTrustVisibilityLevel"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"bf7a4912-1325-8d10-3981-05de961813fb","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security/AllowPartiallyTrustedCallersAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AllowPartiallyTrustedCallersAttribute class | Microsoft Docs","_op_ogTitle":"AllowPartiallyTrustedCallersAttribute class","description":"Allows an assembly to be called by partially trusted code. Without this declaration, only fully trusted callers are able to use the assembly. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security/toc.json","toc_rel":"_splitted/System.Security/toc.json","source_url":"","ms.assetid":"System.Security.AllowPartiallyTrustedCallersAttribute","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.allowpartiallytrustedcallersattribute","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.allowpartiallytrustedcallersattribute","fileRelativePath":"api/System.Security.AllowPartiallyTrustedCallersAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}