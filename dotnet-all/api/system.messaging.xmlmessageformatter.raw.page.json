{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">XmlMessageFormatter</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">XmlMessageFormatter</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The XmlMessageFormatter is the default formatter that an instance of <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a> uses to serialize messages written to the queue. When you create an instance of <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a>, an instance of XmlMessageFormatter is created for you and associated with the <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a>. You can specify a different formatter by creating it in your code and assigning it to the <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_Formatter_\" data-linktype=\"relative-path\">Formatter</a> property of your <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a>.  </p>\n<p> A queue&#39;s default XmlMessageFormatter instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> or <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> property on the formatter. You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter__ctor_\" data-linktype=\"relative-path\">XmlMessageFormatter</a> constructor.  </p>\n<p> When specifying <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> rather than <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a>, type existence is checked at compile time rather than read time, reducing possibility for error. <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> requires every entry to be fully qualified, specifying its assembly name. Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.  </p>\n<p> The <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties tell the formatter what schemas to attempt to match when deserializing a message. This allows the formatter to interpret the message body.  </p>\n<p> The instance serialized in the message body must comply with one of the schemas represented in the type array. When you read the message using the <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_Receive_\" data-linktype=\"relative-path\">Receive</a> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.  </p>\n<p> Only one of the two properties needs to be set when reading from the queue, but you can set both. The set of types is the combined set from the two properties. The decision of which property to use is specific to your application. If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.  </p>\n<p> The XmlMessageFormatter is a crucial component of loosely coupled XML-based messaging. The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application. The class must have a default constructor.  </p>\n<p> The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data. The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed. As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlMessageFormatter()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> class, without target types set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XmlMessageFormatter ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.  </p>\n<p> To read a message from a queue using an instance of <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> created using this constructor, you must set the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> or <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties so the formatter knows what types to attempt to deserialize.  </p>\n<p> When you create a new <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a>, a default <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> instance is created, without the target types set. As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter__ctor_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlMessageFormatter(String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> class, setting target types passed in as an array of (fully qualified) string values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XmlMessageFormatter (string[] targetTypeNames);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetTypeNames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that specifies the set of possible types that will be deserialized by the formatter from the message provided. These values must be fully qualified, for example, &quot;MyNamespace.MyOrders, MyOrdersAssemblyName&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>targetTypeNames</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The constructors with target type parameters are most frequently used when reading from the queue. When writing, it is not necessary to specify target types.  </p>\n<p> This overload of the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter__ctor_\" data-linktype=\"relative-path\">XmlMessageFormatter</a> constructor sets the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> property to the array values passed in through the <code>targetTypeNames</code> parameter. Setting this property enables a <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a> using this <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> instance to read messages containing objects of given types.  </p>\n<p> Both the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties tell the formatter what schemas to attempt to match when deserializing a message. This allows the formatter to interpret the message body.  </p>\n<p> The instance serialized in the message body must comply with one of the schemas represented in the type array. When you read the message using the <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_Receive_\" data-linktype=\"relative-path\">Receive</a> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.  </p>\n<p> Only one of the two properties needs to be set when reading from the queue, but you can set both. The set of types is the combined set from the two properties. The decision of which one to use is specific to your application. If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter__ctor_System_Type___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlMessageFormatter(Type[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> class, setting target types passed in as an array of object types.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XmlMessageFormatter (Type[] targetTypes);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetTypes</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of type <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>targetTypes</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The constructors with target type parameters are most frequently used when reading from the queue. When writing, it is not necessary to specify target types.  </p>\n<p> This overload of the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter__ctor_\" data-linktype=\"relative-path\">XmlMessageFormatter</a> constructor sets the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> property to the array values passed in through the <code>targetTypes</code> parameter. Setting this property enables a <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a> using this <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> instance to read messages containing objects of the given types.  </p>\n<p> Both the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties tell the formatter what schemas to attempt to match when deserializing a message. This allows the formatter to interpret the message body.  </p>\n<p> The instance serialized in the message body must comply with one of the schemas represented in the type array. When you read the message using the <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_Receive_\" data-linktype=\"relative-path\">Receive</a> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.  </p>\n<p> Only one of the two properties needs to be set when reading from the queue, but you can set both. The set of types is the combined set from the two properties. The decision of which one to use is specific to your application. If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.  </p>\n<p> When specifying <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> rather than <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a>, type existence is checked at compile time rather than read time, reducing possibility for error. <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> requires every entry to be fully qualified, specifying its assembly name. Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.  </p>\n<p> When using <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a>, you can add each object (for example, <code>MyClass</code>) to the list in a way demonstrated by the following C# code.  </p>\n<pre><code>TargetTypes = new Type[]{typeof(MyClass)}  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter_TargetTypeNames\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetTypeNames</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string[] TargetTypeNames { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that specifies the types of objects to deserialize from the message body when reading the message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The TargetTypeNames property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Both the TargetTypeNames and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties tell the formatter what schemas to attempt to match when deserializing a message. This allows the formatter to interpret the message body.  </p>\n<p> The instance serialized in the message body must comply with one of the schemas represented in the type array. When you read the message using the <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_Receive_\" data-linktype=\"relative-path\">Receive</a> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.  </p>\n<p> Only one of the two properties needs to be set when reading from the queue, but you can set both. The set of types is the combined set from the two properties. The decision of which property to use is specific to your application. If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.  </p>\n<p> TargetTypeNames requires every entry to be fully qualified, specifying its assembly name. Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.  </p>\n<p> The target types are only required when reading from the queue. The TargetTypeNames and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties do not need to be set to write to the queue.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter_TargetTypes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetTypes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Type[] TargetTypes { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of type <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that specifies the types of objects to deserialize from the message body when reading the message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The TargetTypes property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Both the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and TargetTypes properties tell the formatter what schemas to attempt to match when deserializing a message. This allows the formatter to interpret the message body.  </p>\n<p> The instance serialized in the message body must comply with one of the schemas represented in the type array. When you read the message using the <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_Receive_\" data-linktype=\"relative-path\">Receive</a> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.  </p>\n<p> Only one of the two properties needs to be set when reading from the queue, but you can set both. The set of types is the combined set from the two properties. The decision of which property to use is specific to your application. If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.  </p>\n<p> The target types are only required when reading from the queue. The <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and TargetTypes properties do not need to be set to write to the queue.  </p>\n<p> When specifying TargetTypes rather than <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a>, type existence is checked at compile time rather than read time, reducing possibility for error.  </p>\n<p> When using TargetTypes, you can add each object (for example, <code>MyClass</code>) to the list in a way demonstrated by the C# code <code>TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter_CanRead_System_Messaging_Message_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanRead(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the formatter can deserialize the message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CanRead (System.Messaging.Message message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.messaging.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.messaging.message\" data-linktype=\"relative-path\">Message</a> to inspect.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the XML formatter can deserialize the message; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Neither the <span class=\"xref\">stem.Messaging.XmlMessageFormatter.TargetTypeNames*</span> nor <span class=\"xref\">stem.Messaging.XmlMessageFormatter.TargetTypes*</span> property has been set.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>message</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When CanRead is called, the formatter attempts to determine if the contents of the message are something it can deserialize. The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties. CanRead returns <code>false</code> under the following two circumstances:  </p>\n<ul>\n<li><p>The message was not formatted using the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a>.  </p>\n</li>\n<li><p>The schema of the message body is not among those listed in either the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> or <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> property.  </p>\n<p>The <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties tell the formatter what types of objects it must be able to deserialize. If any type is missing from the list, yet is found within the message, CanRead returns <code>false</code>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an instance of the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> class whose read/write properties (the sets of target types) are the same as the current <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose properties are identical to those of this <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> instance, but whose metadata does not specify it to be a formatter class instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method creates a copy of the formatter and initializes all its properties to the values of this <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter_Read_System_Messaging_Message_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Read(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads the contents from the given message and creates an object that contains the deserialized message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Read (System.Messaging.Message message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.messaging.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.messaging.message\" data-linktype=\"relative-path\">Message</a>, in XML format, to deserialize.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The deserialized message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Neither the <span class=\"xref\">stem.Messaging.XmlMessageFormatter.TargetTypeNames*</span> nor <span class=\"xref\">stem.Messaging.XmlMessageFormatter.TargetTypes*</span> property has been set.  </p>\n<p> -or-  </p>\n<p> The instance serialized in the message body does not comply with any of the schemas represented by the types in the <span class=\"xref\">stem.Messaging.XmlMessageFormatter.TargetTypeNames*</span> and <span class=\"xref\">stem.Messaging.XmlMessageFormatter.TargetTypes*</span> properties.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>message</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Both the <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> and <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> properties tell the formatter what schemas to attempt to match when deserializing a message. One of these properties must be set before the message can be deserialized.  </p>\n<p> The instance serialized in the message body must comply with one of the schemas represented in the type array. When you read the message using the <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_Receive_\" data-linktype=\"relative-path\">Receive</a> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.  </p>\n<p> The target types do not have to be specified in order to write to the queue.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Messaging_XmlMessageFormatter_Write_System_Messaging_Message_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Write(Message,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Serializes an object into the body of the message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Write (System.Messaging.Message message, object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.messaging.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.messaging.message\" data-linktype=\"relative-path\">Message</a> whose <span class=\"xref\">stem.Messaging.Message.Body*</span> property will contain the serialized object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to be serialized into the message body.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>message</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>obj</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The target types need not be specified to write to the queue as they must be when reading. The <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypeNames_\" data-linktype=\"relative-path\">TargetTypeNames</a> or <a class=\"xref\" href=\"system.messaging.xmlmessageformatter#System_Messaging_XmlMessageFormatter_TargetTypes_\" data-linktype=\"relative-path\">TargetTypes</a> property is used by the formatter only when deserializing a message.  </p>\n<p> The <a class=\"xref\" href=\"system.messaging.xmlmessageformatter\" data-linktype=\"relative-path\">XmlMessageFormatter</a> makes use of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class, which defines what can be serialized. Only public fields and public properties can be serialized. Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Messaging.XmlMessageFormatter.yml\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter.CanRead\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter.Clone\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter.Read\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter.TargetTypeNames\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter.TargetTypes\">\r\n<meta name=\"APIName\" content=\"System.Messaging.XmlMessageFormatter.Write\">\r\n<meta name=\"APILocation\" content=\"System.Messaging.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-22 02:45 AM\">\r\n<meta name=\"document_id\" content=\"2e5e8746-6907-65b5-18fd-1db6ef535e60\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.messaging/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Messaging.XmlMessageFormatter\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Messaging.XmlMessageFormatter.yml","open_to_public_contributors":false,"api_name":["System.Messaging.XmlMessageFormatter","System.Messaging.XmlMessageFormatter..ctor","System.Messaging.XmlMessageFormatter.CanRead","System.Messaging.XmlMessageFormatter.Clone","System.Messaging.XmlMessageFormatter.Read","System.Messaging.XmlMessageFormatter.TargetTypeNames","System.Messaging.XmlMessageFormatter.TargetTypes","System.Messaging.XmlMessageFormatter.Write"],"api_location":["System.Messaging.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Messaging.XmlMessageFormatter","System::Messaging::XmlMessageFormatter","System.Messaging.XmlMessageFormatter.#ctor","System::Messaging::XmlMessageFormatter::#ctor","System.Messaging.XmlMessageFormatter.CanRead","System::Messaging::XmlMessageFormatter::CanRead","System.Messaging.XmlMessageFormatter.Clone","System::Messaging::XmlMessageFormatter::Clone","System.Messaging.XmlMessageFormatter.Read","System::Messaging::XmlMessageFormatter::Read","System.Messaging.XmlMessageFormatter.TargetTypeNames","System::Messaging::XmlMessageFormatter::TargetTypeNames","System.Messaging.XmlMessageFormatter.TargetTypes","System::Messaging::XmlMessageFormatter::TargetTypes","System.Messaging.XmlMessageFormatter.Write","System::Messaging::XmlMessageFormatter::Write"],"dev_langs":["csharp"],"updated_at":"2017-03-22 02:45 AM","document_id":"2e5e8746-6907-65b5-18fd-1db6ef535e60","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/xml/System.Messaging/XmlMessageFormatter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlMessageFormatter class | Microsoft Docs","_op_ogTitle":"XmlMessageFormatter class","description":"Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.\n","toc_asset_id":"api/_splitted/System.Messaging/toc.json","toc_rel":"_splitted/System.Messaging/toc.json","source_url":"","ms.assetid":"System.Messaging.XmlMessageFormatter","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/api/system.messaging.xmlmessageformatter","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/api/system.messaging.xmlmessageformatter","fileRelativePath":"api/System.Messaging.XmlMessageFormatter.html"},"themesRelativePathToOutputRoot":"_themes/"}