{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ConvertEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> and <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> events of a <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void ConvertEventHandler(object sender, ConvertEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">ConvertEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code  </p>\n<p> example creates a <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a>, adds a ConvertEventHandler delegate to both the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> and <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> events, and adds the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> to the <a class=\"xref\" href=\"system.windows.forms.bindingscollection\" data-linktype=\"relative-path\">BindingsCollection</a> of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control through the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings_\" data-linktype=\"relative-path\">DataBindings</a> property. The <code>DecimalToCurrency</code> event delegate, added to the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> event, formats the bound value (a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> type) as currency using the <a class=\"xref\" href=\"system.decimal#System_Decimal_ToString_\" data-linktype=\"relative-path\">ToString</a> method. The <code>CurrencyToDecimal</code> event delegate, added to the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Parse\" data-linktype=\"relative-path\">Parse</a> event, converts the value displayed by the control back to the <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> type.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic ConvertEventHandler Example#1\">private:\n   void DecimalToCurrency( Object^ /*sender*/, ConvertEventArgs^ cevent )\n   {\n      // The method converts only to string type. Test this using the DesiredType.\n      if ( cevent-&gt;DesiredType != String::typeid )\n      {\n         return;\n      }\n      \n      // Use the ToString method to format the value as currency (&quot;c&quot;).\n      cevent-&gt;Value = ( (Decimal^)(cevent-&gt;Value) )-&gt;ToString( &quot;c&quot; );\n   }\n\n   void CurrencyToDecimal( Object^ /*sender*/, ConvertEventArgs^ cevent )\n   {\n      // &#39; The method converts only to decimal type. \n      if ( cevent-&gt;DesiredType != Decimal::typeid )\n      {\n         return;\n      }\n\n      // Converts the string back to decimal using the static ToDecimal method.\n      cevent-&gt;Value = Convert::ToDecimal( cevent-&gt;Value-&gt;ToString() );\n   }\n\n   void BindControl()\n   {\n      // Creates the binding first. The OrderAmount is typed as Decimal.\n      Binding^ b = gcnew Binding(\n         &quot;Text&quot;,ds,&quot;customers.custToOrders.OrderAmount&quot; );\n      \n      // Add the delegates to the events.\n      b-&gt;Format += gcnew ConvertEventHandler(\n         this, &amp;Form1::DecimalToCurrency );\n      b-&gt;Parse += gcnew ConvertEventHandler(\n         this, &amp;Form1::CurrencyToDecimal );\n      text1-&gt;DataBindings-&gt;Add( b );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic ConvertEventHandler Example#1\">Private Sub DecimalToCurrency(sender As Object, cevent As ConvertEventArgs)\n    &#39; The method converts only to string type. Test this using the DesiredType.\n    If cevent.DesiredType IsNot GetType(String) Then\n        Return\n    End If \n    &#39; Use the ToString method to format the value as currency (&quot;c&quot;).\n    cevent.Value = CDec(cevent.Value).ToString(&quot;c&quot;)\nEnd Sub \n\n\nPrivate Sub CurrencyToDecimal(sender As Object, cevent As ConvertEventArgs)\n    &#39; The method converts only to decimal type. \n    If cevent.DesiredType IsNot GetType(Decimal) Then\n        Return\n    End If \n    &#39; Converts the string back to decimal using the static ToDecimal method.\n    cevent.Value = Convert.ToDecimal(cevent.Value.ToString())\nEnd Sub \n\n\nPrivate Sub BindControl()\n    &#39; Creates the binding first. The OrderAmount is typed as Decimal.\n    Dim b As New Binding(&quot;Text&quot;, ds, &quot;customers.custToOrders.OrderAmount&quot;)\n    &#39; Adds the delegates to the events.\n    AddHandler b.Format, AddressOf DecimalToCurrency\n    AddHandler b.Parse, AddressOf CurrencyToDecimal\n    text1.DataBindings.Add(b)\nEnd Sub \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic ConvertEventHandler Example#1\">private void DecimalToCurrency(object sender, ConvertEventArgs cevent)\n{\n   // The method converts only to string type. Test this using the DesiredType.\n   if (cevent.DesiredType != typeof(string)) return;\n\n   // Use the ToString method to format the value as currency (&quot;c&quot;).\n   cevent.Value = ((decimal) cevent.Value).ToString(&quot;c&quot;);\n}\n\nprivate void CurrencyToDecimal(object sender, ConvertEventArgs cevent)\n{\n   // &#39; The method converts only to decimal type. \n   if (cevent.DesiredType != typeof(decimal)) return;\n\n   // Converts the string back to decimal using the static ToDecimal method.\n   cevent.Value = Convert.ToDecimal(cevent.Value.ToString());\n}\n\nprivate void BindControl()\n{\n   // Creates the binding first. The OrderAmount is typed as Decimal.\n   Binding b = new Binding\n      (&quot;Text&quot;, ds, &quot;customers.custToOrders.OrderAmount&quot;);\n   // Add the delegates to the events.\n   b.Format += new ConvertEventHandler(DecimalToCurrency);\n   b.Parse += new ConvertEventHandler(CurrencyToDecimal);\n   text1.DataBindings.Add(b);\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a ConvertEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.ConvertEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ConvertEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ConvertEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ConvertEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ConvertEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ConvertEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"c9189a1c-d572-b4d3-4722-96e4dac51a90\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  and  events of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.ConvertEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.ConvertEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.ConvertEventHandler","System.Windows.Forms.ConvertEventHandler..ctor","System.Windows.Forms.ConvertEventHandler.Invoke","System.Windows.Forms.ConvertEventHandler.BeginInvoke","System.Windows.Forms.ConvertEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.ConvertEventHandler","System::Windows::Forms::ConvertEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"c9189a1c-d572-b4d3-4722-96e4dac51a90","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/ConvertEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConvertEventHandler delegate | Microsoft Docs","_op_ogTitle":"ConvertEventHandler delegate","description":"Represents the method that will handle the  and  events of a .\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.ConvertEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.converteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.converteventhandler","fileRelativePath":"api/System.Windows.Forms.ConvertEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}