{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">PingReply</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides information about the status and data resulting from a <span class=\"xref\">stem.Net.NetworkInformation.Ping.Send*</span> or <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> operation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class PingReply</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">PingReply</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates using <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class to send an ICMP echo request synchronously and display the response.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSync#1\">using System;\nusing System.Net;\nusing System.Net.NetworkInformation;\nusing System.Text;\n\nnamespace Examples.System.Net.NetworkInformation.PingTest\n{\n    public class PingExample\n    {\n        // args[0] can be an IPaddress or host name.\n        public static void Main (string[] args)\n        {\n            Ping pingSender = new Ping ();\n            PingOptions options = new PingOptions ();\n\n            // Use the default Ttl value which is 128,\n            // but change the fragmentation behavior.\n            options.DontFragment = true;\n\n            // Create a buffer of 32 bytes of data to be transmitted.\n            string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n            byte[] buffer = Encoding.ASCII.GetBytes (data);\n            int timeout = 120;\n            PingReply reply = pingSender.Send (args[0], timeout, buffer, options);\n            if (reply.Status == IPStatus.Success)\n            {\n                Console.WriteLine (&quot;Address: {0}&quot;, reply.Address.ToString ());\n                Console.WriteLine (&quot;RoundTrip time: {0}&quot;, reply.RoundtripTime);\n                Console.WriteLine (&quot;Time to live: {0}&quot;, reply.Options.Ttl);\n                Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, reply.Options.DontFragment);\n                Console.WriteLine (&quot;Buffer size: {0}&quot;, reply.Buffer.Length);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSync#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::Net::NetworkInformation;\nusing namespace System::Text;\n\n// args[1] can be an IPaddress or host name.\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   \n   Ping ^ pingSender = gcnew Ping;\n   PingOptions ^ options = gcnew PingOptions;\n   \n   // Use the default Ttl value which is 128,\n   // but change the fragmentation behavior.\n   options-&gt;DontFragment = true;\n   \n   // Create a buffer of 32 bytes of data to be transmitted.\n   String^ data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n   array&lt;Byte&gt;^buffer = Encoding::ASCII-&gt;GetBytes( data );\n   int timeout = 120;\n   PingReply ^ reply = pingSender-&gt;Send( args[ 1 ], timeout, buffer, options );\n   \n   if ( reply-&gt;Status == IPStatus::Success )\n   {\n      Console::WriteLine( &quot;Address: {0}&quot;, reply-&gt;Address-&gt;ToString() );\n      Console::WriteLine( &quot;RoundTrip time: {0}&quot;, reply-&gt;RoundtripTime );\n      Console::WriteLine( &quot;Time to live: {0}&quot;, reply-&gt;Options-&gt;Ttl );\n      Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, reply-&gt;Options-&gt;DontFragment );\n      Console::WriteLine( &quot;Buffer size: {0}&quot;, reply-&gt;Buffer-&gt;Length );\n   }\n\n   \n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message. The <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class uses instances of the PingReply class to return information about the operation, such as its status and the time taken to send the request and receive the reply.  </p>\n<p> The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods return instances of the PingReply class directly. The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods return a PingReply in the <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> method&#39;s <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> parameter. The PingReply is accessed through the <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs#System_Net_NetworkInformation_PingCompletedEventArgs_Reply_\" data-linktype=\"relative-path\">Reply</a> property.  </p>\n<p> If the value of <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is not <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>, you should not use the values returned by the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_RoundtripTime_\" data-linktype=\"relative-path\">RoundtripTime</a>, <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Options_\" data-linktype=\"relative-path\">Options</a> or <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Buffer_\" data-linktype=\"relative-path\">Buffer</a> properties. The <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_RoundtripTime_\" data-linktype=\"relative-path\">RoundtripTime</a> property will return zero, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Buffer_\" data-linktype=\"relative-path\">Buffer</a> property will return an empty array, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Options_\" data-linktype=\"relative-path\">Options</a> property will return <code>null</code>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_NetworkInformation_PingReply_Address_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_PingReply_Address\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Address</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.IPAddress Address { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> containing the destination for the ICMP echo message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Address returned by any of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overloads can originate from a malicious remote computer. Do not connect to the remote computer using this address. Use DNS to determine the IP address of the machine to which you want to connect.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_NetworkInformation_PingReply_Buffer_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_PingReply_Buffer\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Buffer</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] Buffer { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed. The data buffer, combined with the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers. For additional information, see &quot;Traceroute&quot; in RFC 1574, Section 3.2, available at <a href=\"http://www.ietf.org\" data-linktype=\"external\">http://www.ietf.org</a>.  </p>\n<p> The default buffer used with <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> and <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> contains 32 bytes of data.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_NetworkInformation_PingReply_Options_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_PingReply_Options\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Options</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.NetworkInformation.PingOptions Options { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <span class=\"xref\">stem.Net.NetworkInformation.PingReply.Status*</span> is <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>; otherwise, <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TTL defines the number of times nodes can forward a packet as it travels between its source and destination. If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.  </p>\n<p> The <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> value specified in the ICMP echo request controls packet fragmentation. If <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a> error is returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_NetworkInformation_PingReply_RoundtripTime_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_PingReply_RoundtripTime\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RoundtripTime</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long RoundtripTime { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> that specifies the round trip time, in milliseconds.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the Echo request fails, the RoundtripTime time is reported as 0, which is also a valid value when the request succeeds. You must check the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> to determine whether the value returned by this property should be ignored.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Net_NetworkInformation_PingReply_Status_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_PingReply_Status\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Status</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.NetworkInformation.IPStatus Status { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a> value indicating the result of the request.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the value of Status is not <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>, you should not use the values returned by the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_RoundtripTime_\" data-linktype=\"relative-path\">RoundtripTime</a>, <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Options_\" data-linktype=\"relative-path\">Options</a> or <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Buffer_\" data-linktype=\"relative-path\">Buffer</a> properties. The <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_RoundtripTime_\" data-linktype=\"relative-path\">RoundtripTime</a> and <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Buffer_\" data-linktype=\"relative-path\">Buffer</a> properties will return zero, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Options_\" data-linktype=\"relative-path\">Options</a> property will return <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.NetworkInformation.PingReply.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.PingReply\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.PingReply.Address\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.PingReply.Buffer\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.PingReply.Options\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.PingReply.RoundtripTime\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.PingReply.Status\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"bd6532cb-405a-27c6-d66c-66adfe47ad88\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides information about the status and data resulting from a  or  operation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net.networkinformation/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.NetworkInformation.PingReply\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.NetworkInformation.PingReply.yml","open_to_public_contributors":false,"api_name":["System.Net.NetworkInformation.PingReply","System.Net.NetworkInformation.PingReply.Address","System.Net.NetworkInformation.PingReply.Buffer","System.Net.NetworkInformation.PingReply.Options","System.Net.NetworkInformation.PingReply.RoundtripTime","System.Net.NetworkInformation.PingReply.Status"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.NetworkInformation.PingReply","System::Net::NetworkInformation::PingReply","System.Net.NetworkInformation.PingReply.Address","System::Net::NetworkInformation::PingReply::Address","System.Net.NetworkInformation.PingReply.Buffer","System::Net::NetworkInformation::PingReply::Buffer","System.Net.NetworkInformation.PingReply.Options","System::Net::NetworkInformation::PingReply::Options","System.Net.NetworkInformation.PingReply.RoundtripTime","System::Net::NetworkInformation::PingReply::RoundtripTime","System.Net.NetworkInformation.PingReply.Status","System::Net::NetworkInformation::PingReply::Status"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"bd6532cb-405a-27c6-d66c-66adfe47ad88","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Net.NetworkInformation/PingReply.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PingReply class | Microsoft Docs","_op_ogTitle":"PingReply class","description":"Provides information about the status and data resulting from a  or  operation.\n","toc_asset_id":"api/_splitted/System.Net.NetworkInformation/toc.json","toc_rel":"_splitted/System.Net.NetworkInformation/toc.json","source_url":"","ms.assetid":"System.Net.NetworkInformation.PingReply","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.networkinformation.pingreply","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.networkinformation.pingreply","fileRelativePath":"api/System.Net.NetworkInformation.PingReply.html"},"themesRelativePathToOutputRoot":"_themes/"}