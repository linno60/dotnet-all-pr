{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ScrollBarRenderer</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides methods used to render a scroll bar control with visual styles. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class ScrollBarRenderer</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">ScrollBarRenderer</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to create a custom control that uses the ScrollBarRenderer methods to draw a scroll bar that responds to mouse clicks.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ScrollBarRenderer#0\">#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::VisualStyles;\n\nnamespace ScrollBarRendererSample\n{\n    public ref class CustomScrollBar : public Control\n    {\n    private:\n        Rectangle clickedBarRectangle;\n    private:\n        Rectangle thumbRectangle;\n    private:\n        Rectangle leftArrowRectangle;\n    private:\n        Rectangle rightArrowRectangle;\n    private:\n        bool leftArrowClicked;\n    private:\n        bool rightArrowClicked;\n    private:\n        bool leftBarClicked;\n    private:\n        bool rightBarClicked;\n    private:\n        bool thumbClicked;\n    private:\n        ScrollBarState thumbState;\n    private:\n        ScrollBarArrowButtonState leftButtonState;\n    private:\n        ScrollBarArrowButtonState rightButtonState;\n    private:\n        int thumbWidth;\n    private:\n        int arrowWidth;\n\n        // The right limit of the thumb&#39;s right border.\n    private:\n        int thumbRightLimitRight;\n\n        // The right limit of the thumb&#39;s left border.\n    private:\n        int thumbRightLimitLeft;\n\n        // The left limit of thumb&#39;s left border.\n    private:\n        int thumbLeftLimit;\n\n        // The distance from the left edge of the thumb to the\n        // cursor tip.\n    private:\n        int thumbPosition;\n\n        // The distance from the left edge of the scroll bar track\n        // to the cursor tip.\n    private:\n        int trackPosition;\n\n        // This timer draws the moving thumb while the scroll arrows or\n        // track are pressed.\n    private:\n        Timer^ progressTimer;\n\n    public:\n        CustomScrollBar() : Control()\n        {\n            thumbState = ScrollBarState::Normal;\n            leftButtonState = ScrollBarArrowButtonState::LeftNormal;\n            rightButtonState = ScrollBarArrowButtonState::RightNormal;\n\n            // This control does not allow these widths to be altered.\n            thumbWidth = 15;\n            arrowWidth = 17;\n\n            progressTimer = gcnew Timer();\n            this-&gt;Location = Point(10, 10);\n            this-&gt;Width = 200;\n            this-&gt;Height = 20;\n            this-&gt;DoubleBuffered = true;\n\n            SetUpScrollBar();\n            progressTimer-&gt;Interval = 20;\n            progressTimer-&gt;Tick += \n                gcnew EventHandler(this, &amp;CustomScrollBar::progressTimer_Tick);\n        }\n\n        // Calculate the sizes of the scroll bar elements.\n    private:\n        void SetUpScrollBar()\n        {\n            clickedBarRectangle = ClientRectangle;\n            thumbRectangle = Rectangle(\n                ClientRectangle.X + ClientRectangle.Width / 2,\n                ClientRectangle.Y, thumbWidth,\n                ClientRectangle.Height);\n            leftArrowRectangle = Rectangle(\n                ClientRectangle.X, ClientRectangle.Y,\n                arrowWidth, ClientRectangle.Height);\n            rightArrowRectangle = Rectangle(\n                ClientRectangle.Right - arrowWidth,\n                ClientRectangle.Y, arrowWidth,\n                ClientRectangle.Height);\n\n            // Set the default starting thumb position.\n            thumbPosition = thumbWidth / 2;\n\n            // Set the right limit of the thumb&#39;s right border.\n            thumbRightLimitRight = ClientRectangle.Right - arrowWidth;\n\n            // Set the right limit of the thumb&#39;s left border.\n            thumbRightLimitLeft = thumbRightLimitRight - thumbWidth;\n\n            // Set the left limit of the thumb&#39;s left border.\n            thumbLeftLimit = ClientRectangle.X + arrowWidth;\n        }\n\n        // Draw the scroll bar in its normal state.\n    protected:\n        virtual void OnPaint(PaintEventArgs^ e) override\n        {\n            __super::OnPaint(e);\n\n            // Visual styles are not enabled.\n            if (!ScrollBarRenderer::IsSupported)\n            {\n                this-&gt;Parent-&gt;Text = &quot;CustomScrollBar Disabled&quot;;\n                return;\n            }\n\n            this-&gt;Parent-&gt;Text = &quot;CustomScrollBar Enabled&quot;;\n\n            // Draw the scroll bar track.\n            ScrollBarRenderer::DrawRightHorizontalTrack(e-&gt;Graphics,\n                ClientRectangle, ScrollBarState::Normal);\n\n            // Draw the thumb and thumb grip in the current state.\n            ScrollBarRenderer::DrawHorizontalThumb(e-&gt;Graphics,\n                thumbRectangle, thumbState);\n            ScrollBarRenderer::DrawHorizontalThumbGrip(e-&gt;Graphics,\n                thumbRectangle, thumbState);\n\n            // Draw the scroll arrows in the current state.\n            ScrollBarRenderer::DrawArrowButton(e-&gt;Graphics,\n                leftArrowRectangle, leftButtonState);\n            ScrollBarRenderer::DrawArrowButton(e-&gt;Graphics,\n                rightArrowRectangle, rightButtonState);\n\n            // Draw a highlighted rectangle in the left side of the scroll\n            // bar track if the user has clicked between the left arrow\n            // and thumb.\n            if (leftBarClicked)\n            {\n                clickedBarRectangle.X = thumbLeftLimit;\n                clickedBarRectangle.Width = thumbRectangle.X - thumbLeftLimit;\n                ScrollBarRenderer::DrawLeftHorizontalTrack(e-&gt;Graphics,\n                    clickedBarRectangle, ScrollBarState::Pressed);\n            }\n\n            // Draw a highlighted rectangle in the right side of the scroll\n            // bar track if the user has clicked between the right arrow\n            // and thumb.\n            else if (rightBarClicked)\n            {\n                clickedBarRectangle.X =\n                    thumbRectangle.X + thumbRectangle.Width;\n                clickedBarRectangle.Width =\n                    thumbRightLimitRight - clickedBarRectangle.X;\n                ScrollBarRenderer::DrawRightHorizontalTrack(e-&gt;Graphics,\n                    clickedBarRectangle, ScrollBarState::Pressed);\n            }\n        }\n\n        // Handle a mouse click in the scroll bar.\n    protected:\n        virtual void OnMouseDown(MouseEventArgs^ e) override \n        {\n            __super::OnMouseDown(e);\n\n            if (!ScrollBarRenderer::IsSupported)\n            {\n                return;\n            }\n\n            // When the thumb is clicked, update the distance from the left\n            // edge of the thumb to the cursor tip.\n            if (thumbRectangle.Contains(e-&gt;Location))\n            {\n                thumbClicked = true;\n                thumbPosition = e-&gt;Location.X - thumbRectangle.X;\n                thumbState = ScrollBarState::Pressed;\n            }\n\n            // When the left arrow is clicked, start the timer to scroll\n            // while the arrow is held down.\n            else if (leftArrowRectangle.Contains(e-&gt;Location))\n            {\n                leftArrowClicked = true;\n                leftButtonState = ScrollBarArrowButtonState::LeftPressed;\n                progressTimer-&gt;Start();\n            }\n\n            // When the right arrow is clicked, start the timer to scroll\n            // while the arrow is held down.\n            else if (rightArrowRectangle.Contains(e-&gt;Location))\n            {\n                rightArrowClicked = true;\n                rightButtonState = ScrollBarArrowButtonState::RightPressed;\n                progressTimer-&gt;Start();\n            }\n\n            // When the scroll bar is clicked, start the timer to move the\n            // thumb while the mouse is held down.\n            else\n            {\n                trackPosition = e-&gt;Location.X;\n\n                if (e-&gt;Location.X &lt; this-&gt;thumbRectangle.X)\n                {\n                    leftBarClicked = true;\n                }\n                else\n                {\n                    rightBarClicked = true;\n                }\n                progressTimer-&gt;Start();\n            }\n\n            Invalidate();\n        }\n\n        // Draw the track.\n    protected:\n        virtual void OnMouseUp(MouseEventArgs^ e) override\n        {\n            __super::OnMouseUp(e);\n\n            if (!ScrollBarRenderer::IsSupported)\n            {\n                return;\n            }\n\n            // Update the thumb position, if the new location is within\n            // the bounds.\n            if (thumbClicked)\n            {\n                thumbClicked = false;\n                thumbState = ScrollBarState::Normal;\n\n                if (e-&gt;Location.X &gt; (thumbLeftLimit + thumbPosition) &amp;&amp;\n                    e-&gt;Location.X &lt; (thumbRightLimitLeft + thumbPosition))\n                {\n                    thumbRectangle.X = e-&gt;Location.X - thumbPosition;\n                }\n            }\n\n            // If one of the four thumb movement areas was clicked,\n            // stop the timer.\n            else if (leftArrowClicked)\n            {\n                leftArrowClicked = false;\n                leftButtonState = ScrollBarArrowButtonState::LeftNormal;\n                progressTimer-&gt;Stop();\n            }\n\n            else if (rightArrowClicked)\n            {\n                rightArrowClicked = false;\n                rightButtonState = ScrollBarArrowButtonState::RightNormal;\n                progressTimer-&gt;Stop();\n            }\n\n            else if (leftBarClicked)\n            {\n                leftBarClicked = false;\n                progressTimer-&gt;Stop();\n            }\n\n            else if (rightBarClicked)\n            {\n                rightBarClicked = false;\n                progressTimer-&gt;Stop();\n            }\n\n            Invalidate();\n        }\n\n        // Track mouse movements if the user clicks on the scroll bar thumb.\n    protected:\n        virtual void OnMouseMove(MouseEventArgs^ e) override\n        {\n            __super::OnMouseMove(e);\n\n            if (!ScrollBarRenderer::IsSupported)\n            {\n                return;\n            }\n\n            // Update the thumb position, if the new location is\n            // within the bounds.\n            if (thumbClicked)\n            {\n                // The thumb is all the way to the left.\n                if (e-&gt;Location.X &lt;= (thumbLeftLimit + thumbPosition))\n                {\n                    thumbRectangle.X = thumbLeftLimit;\n                }\n\n                // The thumb is all the way to the right.\n                else if (e-&gt;Location.X &gt;= \n                    (thumbRightLimitLeft + thumbPosition))\n                {\n                    thumbRectangle.X = thumbRightLimitLeft;\n                }\n\n                // The thumb is between the ends of the track.\n                else\n                {\n                    thumbRectangle.X = e-&gt;Location.X - thumbPosition;\n                }\n\n                Invalidate();\n            }\n        }\n\n        // Recalculate the sizes of the scroll bar elements.\n    protected:\n        virtual void OnSizeChanged(EventArgs^ e) override\n        {\n            __super::OnSizeChanged(e);\n            SetUpScrollBar();\n        }\n\n        // Handle the timer tick by updating the thumb position.\n    private:\n        void progressTimer_Tick(Object^ sender, EventArgs^ myEventArgs)\n        {\n            if (!ScrollBarRenderer::IsSupported)\n            {\n                return;\n            }\n\n            // If an arrow is clicked, move the thumb in small increments.\n            if (rightArrowClicked &amp;&amp; thumbRectangle.X &lt; thumbRightLimitLeft)\n            {\n                thumbRectangle.X++;\n            }\n            else if (leftArrowClicked &amp;&amp; thumbRectangle.X &gt; thumbLeftLimit)\n            {\n                thumbRectangle.X--;\n            }\n\n            // If the track bar to right of the thumb is clicked, move the\n            // thumb to the right in larger increments until the right edge\n            // of the thumb hits the cursor.\n            else if (rightBarClicked &amp;&amp;\n                thumbRectangle.X &lt; thumbRightLimitLeft &amp;&amp;\n                thumbRectangle.X + thumbRectangle.Width &lt; trackPosition)\n            {\n                thumbRectangle.X += 3;\n            }\n\n            // If the track bar to left of the thumb is clicked, move the\n            // thumb to the left in larger increments until the left edge\n            // of the thumb hits the cursor.\n            else if (leftBarClicked &amp;&amp;\n                thumbRectangle.X &gt; thumbLeftLimit &amp;&amp;\n                thumbRectangle.X &gt; trackPosition)\n            {\n                thumbRectangle.X -= 3;\n            }\n\n            Invalidate();\n        }\n    };\n\n\n    public ref class Form1 : public Form\n    {\n    public:\n        Form1() : Form()\n        {\n            this-&gt;Size = System::Drawing::Size(500, 500);\n\n            CustomScrollBar^ sampleCustomScrollBar = gcnew CustomScrollBar();\n            sampleCustomScrollBar-&gt;Location = Point(50, 100);\n            sampleCustomScrollBar-&gt;Size = System::Drawing::Size(200, 20);\n\n            Controls-&gt;Add(sampleCustomScrollBar);\n        }\n    };\n}\n\n[STAThread]\nint main()\n{\n    // The call to EnableVisualStyles below does not affect whether\n    // ScrollBarRenderer.IsSupported is true; as long as visual styles\n    // are enabled by the operating system, IsSupported is true.\n    Application::EnableVisualStyles();\n    Application::Run(gcnew ScrollBarRendererSample::Form1());\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ScrollBarRenderer#0\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\nImports System.Windows.Forms.VisualStyles\n\nNamespace ScrollBarRendererSample\n\n    Class Form1\n        Inherits Form\n\n        Public Sub New()\n            Me.Size = New Size(500, 500)\n\n            Dim Bar1 As New CustomScrollBar()\n            Bar1.Location = New Point(50, 100)\n            Bar1.Size = New Size(200, 20)\n\n            Controls.Add(Bar1)\n        End Sub\n\n        &lt;STAThread()&gt; _\n        Shared Sub Main()\n            &#39; The call to EnableVisualStyles below does not affect whether \n            &#39; ScrollBarRenderer.IsSupported is true; as long as visual styles \n            &#39; are enabled by the operating system, IsSupported is true.\n            Application.EnableVisualStyles()\n            Application.Run(New Form1())\n        End Sub\n    End Class\n\n    Public Class CustomScrollBar\n        Inherits Control\n\n        Private clickedBarRectangle As Rectangle\n        Private thumbRectangle As Rectangle\n        Private leftArrowRectangle As Rectangle\n        Private rightArrowRectangle As Rectangle\n        Private leftArrowClicked As Boolean = False\n        Private rightArrowClicked As Boolean = False\n        Private leftBarClicked As Boolean = False\n        Private rightBarClicked As Boolean = False\n        Private thumbClicked As Boolean = False\n        Private thumbState As ScrollBarState = ScrollBarState.Normal\n        Private leftButtonState As ScrollBarArrowButtonState = _\n            ScrollBarArrowButtonState.LeftNormal\n        Private rightButtonState As ScrollBarArrowButtonState = _\n            ScrollBarArrowButtonState.RightNormal\n\n        &#39; This control does not allow these widths to be altered.\n        Private thumbWidth As Integer = 15\n        Private arrowWidth As Integer = 17\n\n        &#39; Set the right limit of the thumb&#39;s right border.\n        Private thumbRightLimitRight As Integer = 0\n\n        &#39; Set the right limit of the thumb&#39;s left border.\n        Private thumbRightLimitLeft As Integer = 0\n\n        &#39; Set the left limit of thumb&#39;s left border.\n        Private thumbLeftLimit As Integer = 0\n\n        &#39; Set the distance from the left edge of the thumb to the \n        &#39; cursor tip.\n        Private thumbPosition As Integer = 0\n\n        &#39; Set the distance from the left edge of the scroll bar track to \n        &#39; the cursor tip.\n        Private trackPosition As Integer = 0\n\n        &#39; This timer draws the moving thumb while the scroll arrows or \n        &#39; track are pressed.\n        Private WithEvents progressTimer As New Timer()\n\n        Public Sub New()\n            With Me\n                .Location = New Point(10, 10)\n                .Width = 200\n                .Height = 20\n                .DoubleBuffered = True\n            End With\n            SetUpScrollBar()\n            progressTimer.Interval = 20\n        End Sub\n\n        &#39; Calculate the sizes of the scroll bar elements.\n        Private Sub SetUpScrollBar()\n\n            clickedBarRectangle = Me.ClientRectangle\n            thumbRectangle = New Rectangle(ClientRectangle.X + _\n                Me.ClientRectangle.Width / 2, Me.ClientRectangle.Y, _\n                thumbWidth, Me.ClientRectangle.Height)\n            leftArrowRectangle = New Rectangle(Me.ClientRectangle.X, _\n                Me.ClientRectangle.Y, arrowWidth, Me.ClientRectangle.Height)\n            rightArrowRectangle = New Rectangle(Me.ClientRectangle.Right - _\n                arrowWidth, Me.ClientRectangle.Y, arrowWidth, _\n                Me.ClientRectangle.Height)\n\n            &#39; Set the default starting thumb position.\n            thumbPosition = thumbWidth / 2\n\n            &#39; Set the right limit of the thumb&#39;s right border.\n            thumbRightLimitRight = Me.ClientRectangle.Right - arrowWidth\n\n            &#39; Set the right limit of the thumb&#39;s left border.\n            thumbRightLimitLeft = thumbRightLimitRight - thumbWidth\n\n            &#39; Set the left limit of the thumb&#39;s left border.\n            thumbLeftLimit = Me.ClientRectangle.X + arrowWidth\n        End Sub\n\n        &#39; Draw the scroll bar in its normal state.\n        Protected Overrides Sub OnPaint(ByVal e As PaintEventArgs)\n            MyBase.OnPaint(e)\n\n            &#39; Visual styles are not enabled.\n            If Not ScrollBarRenderer.IsSupported Then\n                Me.Parent.Text = &quot;CustomScrollBar Disabled&quot;\n                Return\n            End If\n\n            Me.Parent.Text = &quot;CustomScrollBar Enabled&quot;\n\n            &#39; Draw the scroll bar track.\n            ScrollBarRenderer.DrawRightHorizontalTrack(e.Graphics, _\n                Me.ClientRectangle, ScrollBarState.Normal)\n\n            &#39; Draw the thumb and thumb grip in the current state.\n            ScrollBarRenderer.DrawHorizontalThumb(e.Graphics, _\n                thumbRectangle, thumbState)\n            ScrollBarRenderer.DrawHorizontalThumbGrip(e.Graphics, _\n                thumbRectangle, thumbState)\n\n            &#39; Draw the scroll arrows in the current state.\n            ScrollBarRenderer.DrawArrowButton(e.Graphics, _\n                leftArrowRectangle, leftButtonState)\n            ScrollBarRenderer.DrawArrowButton(e.Graphics, _\n                rightArrowRectangle, rightButtonState)\n\n            &#39; Draw a highlighted rectangle in the left side of the scroll \n            &#39; bar track if the user has clicked between the left arrow \n            &#39; and thumb.\n            If leftBarClicked Then\n                clickedBarRectangle.X = thumbLeftLimit\n                clickedBarRectangle.Width = thumbRectangle.X - thumbLeftLimit\n                ScrollBarRenderer.DrawLeftHorizontalTrack(e.Graphics, _\n                    clickedBarRectangle, ScrollBarState.Pressed)\n\n            &#39; Draw a highlighted rectangle in the right side of the scroll \n            &#39; bar track if the user has clicked between the right arrow \n            &#39; and thumb.\n            ElseIf rightBarClicked Then\n                clickedBarRectangle.X = thumbRectangle.X + _\n                    thumbRectangle.Width\n                clickedBarRectangle.Width = thumbRightLimitRight - _\n                    clickedBarRectangle.X\n                ScrollBarRenderer.DrawRightHorizontalTrack(e.Graphics, _\n                    clickedBarRectangle, ScrollBarState.Pressed)\n            End If\n        End Sub\n\n        &#39; Handle a mouse click in the scroll bar.\n        Protected Overrides Sub OnMouseDown(ByVal e As MouseEventArgs)\n            MyBase.OnMouseDown(e)\n\n            If Not ScrollBarRenderer.IsSupported Then\n                Return\n            End If\n\n            &#39; When the thumb is clicked, update the distance from the left\n            &#39; edge of the thumb to the cursor tip.\n            If thumbRectangle.Contains(e.Location) Then\n                thumbClicked = True\n                thumbPosition = e.Location.X - thumbRectangle.X\n                thumbState = ScrollBarState.Pressed\n\n            &#39; When the left arrow is clicked, start the timer to scroll \n            &#39; while the arrow is held down.\n            ElseIf leftArrowRectangle.Contains(e.Location) Then\n                leftArrowClicked = True\n                leftButtonState = ScrollBarArrowButtonState.LeftPressed\n                progressTimer.Start()\n\n            &#39; When the right arrow is clicked, start the timer to scroll \n            &#39; while arrow is held down.\n            ElseIf rightArrowRectangle.Contains(e.Location) Then\n                rightArrowClicked = True\n                rightButtonState = ScrollBarArrowButtonState.RightPressed\n                progressTimer.Start()\n\n            &#39; When the scroll bar is clicked, start the timer to move the\n            &#39; thumb while the mouse is held down.\n            Else\n                trackPosition = e.Location.X\n                If e.Location.X &lt; Me.thumbRectangle.X Then\n                    leftBarClicked = True\n                Else\n                    rightBarClicked = True\n                End If\n                progressTimer.Start()\n            End If\n\n            Invalidate()\n        End Sub\n\n        &#39; Draw the track.\n        Protected Overrides Sub OnMouseUp(ByVal e As MouseEventArgs)\n            MyBase.OnMouseUp(e)\n\n            If Not ScrollBarRenderer.IsSupported Then\n                Return\n            End If\n\n            &#39; Update the thumb position, if the new location is within \n            &#39; the bounds.\n            If thumbClicked Then\n                thumbClicked = False\n                thumbState = ScrollBarState.Normal\n                If e.Location.X &gt; thumbLeftLimit + thumbPosition And _\n                    e.Location.X &lt; thumbRightLimitLeft + thumbPosition Then\n                    thumbRectangle.X = e.Location.X - thumbPosition\n                    thumbClicked = False\n                End If\n\n            &#39; If one of the four thumb movement areas was clicked, \n            &#39; stop the timer.\n            ElseIf leftArrowClicked Then\n                leftArrowClicked = False\n                leftButtonState = ScrollBarArrowButtonState.LeftNormal\n                progressTimer.Stop()\n\n            ElseIf rightArrowClicked Then\n                rightArrowClicked = False\n                rightButtonState = ScrollBarArrowButtonState.RightNormal\n                progressTimer.Stop()\n\n            ElseIf leftBarClicked Then\n                leftBarClicked = False\n                progressTimer.Stop()\n\n            ElseIf rightBarClicked Then\n                rightBarClicked = False\n                progressTimer.Stop()\n            End If\n\n            Invalidate()\n        End Sub\n\n        &#39; Track mouse movements if the user clicks on the scroll bar thumb.\n        Protected Overrides Sub OnMouseMove(ByVal e As MouseEventArgs)\n            MyBase.OnMouseMove(e)\n\n            If Not ScrollBarRenderer.IsSupported Then\n                Return\n            End If\n\n            &#39; Update the thumb position, if the new location is \n            &#39; within the bounds.\n            If thumbClicked Then\n\n                &#39; The thumb is all the way to the left.\n                If e.Location.X &lt;= thumbLeftLimit + thumbPosition Then\n                    thumbRectangle.X = thumbLeftLimit\n\n                &#39; The thumb is all the way to the right.\n                ElseIf e.Location.X &gt;= thumbRightLimitLeft + thumbPosition Then\n                    thumbRectangle.X = thumbRightLimitLeft\n\n                &#39; The thumb is between the ends of the track.\n                Else\n                    thumbRectangle.X = e.Location.X - thumbPosition\n                End If\n\n                Invalidate()\n\n            End If\n        End Sub\n\n        &#39; Recalculate the sizes of the scroll bar elements.\n        Protected Overrides Sub OnSizeChanged(ByVal e As EventArgs)\n            MyBase.OnSizeChanged(e)\n            SetUpScrollBar()\n        End Sub\n\n        &#39; Handle the timer tick by updating the thumb position.\n        Private Sub progressTimer_Tick(ByVal sender As Object, _\n            ByVal myEventArgs As EventArgs) Handles progressTimer.Tick\n\n            If Not ScrollBarRenderer.IsSupported Then\n                Return\n            End If\n\n            &#39; If an arrow is clicked, move the thumb in small increments.\n            If rightArrowClicked And thumbRectangle.X &lt; thumbRightLimitLeft Then\n                thumbRectangle.X += 1\n\n            ElseIf leftArrowClicked And thumbRectangle.X &gt; thumbLeftLimit Then\n                    thumbRectangle.X -= 1\n\n            &#39; If the track bar to right of the thumb is clicked, move the \n            &#39; thumb to the right in larger increments until the right edge \n            &#39; of the thumb hits the cursor.\n            ElseIf rightBarClicked And thumbRectangle.X &lt; thumbRightLimitLeft _\n                And thumbRectangle.X + thumbRectangle.Width &lt; trackPosition Then\n                thumbRectangle.X += 3\n\n            &#39; If the track bar to left of the thumb is clicked, move the \n            &#39; thumb to the left in larger increments until the left edge \n            &#39; of the thumb hits the cursor.\n            ElseIf leftBarClicked And thumbRectangle.X &gt; thumbLeftLimit And _\n                thumbRectangle.X &gt; trackPosition Then\n                thumbRectangle.X -= 3\n            End If\n\n            Invalidate()\n        End Sub\n\n    End Class\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ScrollBarRenderer#0\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\nusing System.Windows.Forms.VisualStyles;\n\nnamespace ScrollBarRendererSample\n{\n    class Form1 : Form\n    {\n        public Form1()\n            : base()\n        {\n            this.Size = new Size(500, 500);\n\n            CustomScrollBar Bar1 = new CustomScrollBar();\n            Bar1.Location = new Point(50, 100);\n            Bar1.Size = new Size(200, 20);\n\n            Controls.Add(Bar1);\n        }\n\n        [STAThread]\n        static void Main()\n        {\n            // The call to EnableVisualStyles below does not affect whether \n            // ScrollBarRenderer.IsSupported is true; as long as visual styles \n            // are enabled by the operating system, IsSupported is true.\n            Application.EnableVisualStyles();\n            Application.Run(new Form1());\n        }\n    }\n\n    public class CustomScrollBar : Control\n    {\n        private Rectangle clickedBarRectangle;\n        private Rectangle thumbRectangle;\n        private Rectangle leftArrowRectangle;\n        private Rectangle rightArrowRectangle;\n        private bool leftArrowClicked = false;\n        private bool rightArrowClicked = false;\n        private bool leftBarClicked = false;\n        private bool rightBarClicked = false;\n        private bool thumbClicked = false;\n        private ScrollBarState thumbState = ScrollBarState.Normal;\n        private ScrollBarArrowButtonState leftButtonState =\n            ScrollBarArrowButtonState.LeftNormal;\n        private ScrollBarArrowButtonState rightButtonState =\n            ScrollBarArrowButtonState.RightNormal;\n\n        // This control does not allow these widths to be altered.\n        private int thumbWidth = 15;\n        private int arrowWidth = 17;\n\n        // Set the right limit of the thumb&#39;s right border.\n        private int thumbRightLimitRight = 0;\n\n        // Set the right limit of the thumb&#39;s left border.\n        private int thumbRightLimitLeft = 0;\n\n        // Set the left limit of thumb&#39;s left border.\n        private int thumbLeftLimit = 0;\n\n        // Set the distance from the left edge of the thumb to the \n        // cursor tip.\n        private int thumbPosition = 0;\n\n        // Set the distance from the left edge of the scroll bar track \n        // to the cursor tip.\n        private int trackPosition = 0;\n\n        // This timer draws the moving thumb while the scroll arrows or \n        // track are pressed.\n        private Timer progressTimer = new Timer();\n\n        public CustomScrollBar()\n            : base()\n        {\n            this.Location = new Point(10, 10);\n            this.Width = 200;\n            this.Height = 20;\n            this.DoubleBuffered = true;\n\n            SetUpScrollBar();\n            progressTimer.Interval = 20;\n            progressTimer.Tick += new EventHandler(progressTimer_Tick);\n        }\n\n        // Calculate the sizes of the scroll bar elements.\n        private void SetUpScrollBar()\n        {\n            clickedBarRectangle = ClientRectangle;\n            thumbRectangle = new Rectangle(\n                ClientRectangle.X + ClientRectangle.Width / 2,\n                ClientRectangle.Y, thumbWidth,\n                ClientRectangle.Height);\n            leftArrowRectangle = new Rectangle(\n                ClientRectangle.X, ClientRectangle.Y,\n                arrowWidth, ClientRectangle.Height);\n            rightArrowRectangle = new Rectangle(\n                ClientRectangle.Right - arrowWidth,\n                ClientRectangle.Y, arrowWidth,\n                ClientRectangle.Height);\n\n            // Set the default starting thumb position.\n            thumbPosition = thumbWidth / 2;\n\n            // Set the right limit of the thumb&#39;s right border.\n            thumbRightLimitRight = ClientRectangle.Right - arrowWidth;\n\n            // Set the right limit of the thumb&#39;s left border.\n            thumbRightLimitLeft = thumbRightLimitRight - thumbWidth;\n\n            // Set the left limit of the thumb&#39;s left border.\n            thumbLeftLimit = ClientRectangle.X + arrowWidth;\n        }\n\n        // Draw the scroll bar in its normal state.\n        protected override void OnPaint(PaintEventArgs e)\n        {\n            base.OnPaint(e);\n\n            // Visual styles are not enabled.\n            if (!ScrollBarRenderer.IsSupported)\n            {\n                this.Parent.Text = &quot;CustomScrollBar Disabled&quot;;\n                return;\n            }\n\n            this.Parent.Text = &quot;CustomScrollBar Enabled&quot;;\n\n            // Draw the scroll bar track.\n            ScrollBarRenderer.DrawRightHorizontalTrack(e.Graphics,\n                ClientRectangle, ScrollBarState.Normal);\n\n            // Draw the thumb and thumb grip in the current state.\n            ScrollBarRenderer.DrawHorizontalThumb(e.Graphics,\n                thumbRectangle, thumbState);\n            ScrollBarRenderer.DrawHorizontalThumbGrip(e.Graphics,\n                thumbRectangle, thumbState);\n\n            // Draw the scroll arrows in the current state.\n            ScrollBarRenderer.DrawArrowButton(e.Graphics,\n                    leftArrowRectangle, leftButtonState);\n            ScrollBarRenderer.DrawArrowButton(e.Graphics,\n                    rightArrowRectangle, rightButtonState);\n\n            // Draw a highlighted rectangle in the left side of the scroll \n            // bar track if the user has clicked between the left arrow \n            // and thumb.\n            if (leftBarClicked)\n            {\n                clickedBarRectangle.X = thumbLeftLimit;\n                clickedBarRectangle.Width = thumbRectangle.X - thumbLeftLimit;\n                ScrollBarRenderer.DrawLeftHorizontalTrack(e.Graphics,\n                    clickedBarRectangle, ScrollBarState.Pressed);\n            }\n\n            // Draw a highlighted rectangle in the right side of the scroll \n            // bar track if the user has clicked between the right arrow \n            // and thumb.\n            else if (rightBarClicked)\n            {\n                clickedBarRectangle.X =\n                    thumbRectangle.X + thumbRectangle.Width;\n                clickedBarRectangle.Width =\n                    thumbRightLimitRight - clickedBarRectangle.X;\n                ScrollBarRenderer.DrawRightHorizontalTrack(e.Graphics,\n                    clickedBarRectangle, ScrollBarState.Pressed);\n            }\n        }\n\n        // Handle a mouse click in the scroll bar.\n        protected override void OnMouseDown(MouseEventArgs e)\n        {\n            base.OnMouseDown(e);\n\n            if (!ScrollBarRenderer.IsSupported)\n                return;\n\n            // When the thumb is clicked, update the distance from the left\n            // edge of the thumb to the cursor tip.\n            if (thumbRectangle.Contains(e.Location))\n            {\n                thumbClicked = true;\n                thumbPosition = e.Location.X - thumbRectangle.X;\n                thumbState = ScrollBarState.Pressed;\n            }\n\n            // When the left arrow is clicked, start the timer to scroll \n            // while the arrow is held down.\n            else if (leftArrowRectangle.Contains(e.Location))\n            {\n                leftArrowClicked = true;\n                leftButtonState = ScrollBarArrowButtonState.LeftPressed;\n                progressTimer.Start();\n            }\n\n            // When the right arrow is clicked, start the timer to scroll \n            // while the arrow is held down.\n            else if (rightArrowRectangle.Contains(e.Location))\n            {\n                rightArrowClicked = true;\n                rightButtonState = ScrollBarArrowButtonState.RightPressed;\n                progressTimer.Start();\n            }\n\n            // When the scroll bar is clicked, start the timer to move the\n            // thumb while the mouse is held down.\n            else\n            {\n                trackPosition = e.Location.X;\n\n                if (e.Location.X &lt; this.thumbRectangle.X)\n                {\n                    leftBarClicked = true;\n                }\n                else\n                {\n                    rightBarClicked = true;\n                }\n                progressTimer.Start();\n            }\n\n            Invalidate();\n        }\n\n        // Draw the track.\n        protected override void OnMouseUp(MouseEventArgs e)\n        {\n            base.OnMouseUp(e);\n\n            if (!ScrollBarRenderer.IsSupported)\n                return;\n\n            // Update the thumb position, if the new location is within \n            // the bounds.\n            if (thumbClicked)\n            {\n                thumbClicked = false;\n                thumbState = ScrollBarState.Normal;\n\n                if (e.Location.X &gt; (thumbLeftLimit + thumbPosition) &amp;&amp;\n                    e.Location.X &lt; (thumbRightLimitLeft + thumbPosition))\n                {\n                    thumbRectangle.X = e.Location.X - thumbPosition;\n                    thumbClicked = false;\n                }\n            }\n\n            // If one of the four thumb movement areas was clicked, \n            // stop the timer.\n            else if (leftArrowClicked)\n            {\n                leftArrowClicked = false;\n                leftButtonState = ScrollBarArrowButtonState.LeftNormal;\n                progressTimer.Stop();\n            }\n\n            else if (rightArrowClicked)\n            {\n                rightArrowClicked = false;\n                rightButtonState = ScrollBarArrowButtonState.RightNormal;\n                progressTimer.Stop();\n            }\n\n            else if (leftBarClicked)\n            {\n                leftBarClicked = false;\n                progressTimer.Stop();\n            }\n\n            else if (rightBarClicked)\n            {\n                rightBarClicked = false;\n                progressTimer.Stop();\n            }\n\n            Invalidate();\n        }\n\n        // Track mouse movements if the user clicks on the scroll bar thumb.\n        protected override void OnMouseMove(MouseEventArgs e)\n        {\n            base.OnMouseMove(e);\n\n            if (!ScrollBarRenderer.IsSupported)\n                return;\n\n            // Update the thumb position, if the new location is \n            // within the bounds.\n            if (thumbClicked)\n            {\n                // The thumb is all the way to the left.\n                if (e.Location.X &lt;= (thumbLeftLimit + thumbPosition))\n                {\n                    thumbRectangle.X = thumbLeftLimit;\n                }\n\n                // The thumb is all the way to the right.\n                else if (e.Location.X &gt;= (thumbRightLimitLeft + thumbPosition))\n                {\n                    thumbRectangle.X = thumbRightLimitLeft;\n                }\n\n                // The thumb is between the ends of the track.\n                else\n                {\n                    thumbRectangle.X = e.Location.X - thumbPosition;\n                }\n\n                Invalidate();\n            }\n        }\n\n        // Recalculate the sizes of the scroll bar elements.\n        protected override void OnSizeChanged(EventArgs e)\n        {\n            base.OnSizeChanged(e);\n            SetUpScrollBar();\n        }\n\n        // Handle the timer tick by updating the thumb position.\n        private void progressTimer_Tick(object sender, EventArgs myEventArgs)\n        {\n            if (!ScrollBarRenderer.IsSupported)\n                return;\n\n            // If an arrow is clicked, move the thumb in small increments.\n            if (rightArrowClicked &amp;&amp; thumbRectangle.X &lt; thumbRightLimitLeft)\n            {\n                thumbRectangle.X++;\n            }\n            else if (leftArrowClicked &amp;&amp; thumbRectangle.X &gt; thumbLeftLimit)\n            {\n                thumbRectangle.X--;\n            }\n\n            // If the track bar to right of the thumb is clicked, move the \n            // thumb to the right in larger increments until the right edge \n            // of the thumb hits the cursor.\n            else if (rightBarClicked &amp;&amp;\n                thumbRectangle.X &lt; thumbRightLimitLeft &amp;&amp;\n                thumbRectangle.X + thumbRectangle.Width &lt; trackPosition)\n            {\n                thumbRectangle.X += 3;\n            }\n\n            // If the track bar to left of the thumb is clicked, move the \n            // thumb to the left in larger increments until the left edge \n            // of the thumb hits the cursor.\n            else if (leftBarClicked &amp;&amp;\n                thumbRectangle.X &gt; thumbLeftLimit &amp;&amp;\n                thumbRectangle.X &gt; trackPosition)\n            {\n                thumbRectangle.X -= 3;\n            }\n\n            Invalidate();\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ScrollBarRenderer class provides a set of <code>static</code> methods that can be used to render a scroll bar control with the current visual style of the operating system. Rendering a control refers to drawing the user interface of a control. This is useful if you are drawing a custom control that should have the appearance of the current visual style. To draw a scroll bar, use a combination of the methods in this class to render each part of the scroll bar.  </p>\n<p> If visual styles are enabled in the operating system and visual styles are applied to the client area of application windows, the methods of this class will draw the scroll bar with the current visual style. Otherwise, the methods of this class will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>. To determine whether the members of this class can be used, you can check the value of the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property.  </p>\n<p> This class wraps the functionality of a <a class=\"xref\" href=\"system.windows.forms.visualstyles.visualstylerenderer\" data-linktype=\"relative-path\">System.Windows.Forms.VisualStyles.VisualStyleRenderer</a> that is set to one of the elements exposed by the <a class=\"xref\" href=\"system.windows.forms.visualstyles.visualstyleelement.scrollbar\" data-linktype=\"relative-path\">System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar</a> class. For more information, see <a href=\"../topic/rendering%20controls%20with%20visual%20styles\" data-linktype=\"relative-path\">Rendering Controls with Visual Styles</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_IsSupported_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_IsSupported\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsSupported</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer\" data-linktype=\"relative-path\">ScrollBarRenderer</a> class can be used to draw a scroll bar with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool IsSupported { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the user has enabled visual styles in the operating system and visual styles are applied to the client areas of application windows; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If this property is <code>false</code>, the methods of this class will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawArrowButton_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawArrowButton_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarArrowButtonState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawArrowButton(Graphics, Rectangle, ScrollBarArrowButtonState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a scroll arrow with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawArrowButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll arrow.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll arrow.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbararrowbuttonstate\" data-linktype=\"relative-path\">ScrollBarArrowButtonState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbararrowbuttonstate\" data-linktype=\"relative-path\">ScrollBarArrowButtonState</a> values that specifies the visual state of the scroll arrow.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawHorizontalThumb_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawHorizontalThumb_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawHorizontalThumb(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a horizontal scroll box (also known as the thumb) with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawHorizontalThumb (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll box.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll box.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll box.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawHorizontalThumbGrip_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawHorizontalThumbGrip_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawHorizontalThumbGrip(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a grip on a horizontal scroll box (also known as the thumb) with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawHorizontalThumbGrip (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawLeftHorizontalTrack_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawLeftHorizontalTrack_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawLeftHorizontalTrack(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a horizontal scroll bar track with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawLeftHorizontalTrack (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawLowerVerticalTrack_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawLowerVerticalTrack_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawLowerVerticalTrack(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a vertical scroll bar track with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawLowerVerticalTrack (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawRightHorizontalTrack_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawRightHorizontalTrack_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawRightHorizontalTrack(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a horizontal scroll bar track with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawRightHorizontalTrack (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawSizeBox_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawSizeBox_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarSizeBoxState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawSizeBox(Graphics, Rectangle, ScrollBarSizeBoxState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a scroll bar sizing handle with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawSizeBox (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarSizeBoxState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the sizing handle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the sizing handle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarsizeboxstate\" data-linktype=\"relative-path\">ScrollBarSizeBoxState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarsizeboxstate\" data-linktype=\"relative-path\">ScrollBarSizeBoxState</a> values that specifies the visual state of the sizing handle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawUpperVerticalTrack_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawUpperVerticalTrack_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawUpperVerticalTrack(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a vertical scroll bar track with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawUpperVerticalTrack (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll bar track.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawVerticalThumb_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawVerticalThumb_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawVerticalThumb(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a vertical scroll box (also known as the thumb) with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawVerticalThumb (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll box.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll box.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll box.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_DrawVerticalThumbGrip_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_DrawVerticalThumbGrip_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawVerticalThumbGrip(Graphics, Rectangle, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Draws a grip on a vertical scroll box (also known as the thumb) with visual styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DrawVerticalThumbGrip (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the bounds of the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_GetSizeBoxSize_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_GetSizeBoxSize_System_Drawing_Graphics_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSizeBoxSize(Graphics, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the size of the sizing handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Drawing.Size GetSizeBoxSize (System.Drawing.Graphics g, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> this operation will use.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the sizing handle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that specifies the size of the sizing handle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The size of the sizing handle is determined by the current visual style of the operating system.  </p>\n<p> Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_ScrollBarRenderer_GetThumbGripSize_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_ScrollBarRenderer_GetThumbGripSize_System_Drawing_Graphics_System_Windows_Forms_VisualStyles_ScrollBarState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetThumbGripSize(Graphics, ScrollBarState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the size of the scroll box grip.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Drawing.Size GetThumbGripSize (System.Drawing.Graphics g, System.Windows.Forms.VisualStyles.ScrollBarState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>g</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> this operation will use.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.visualstyles.scrollbarstate\" data-linktype=\"relative-path\">ScrollBarState</a> values that specifies the visual state of the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that specifies the size of the scroll box grip.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system does not support visual styles.  </p>\n<p> -or-  </p>\n<p> Visual styles are disabled by the user in the operating system.  </p>\n<p> -or-  </p>\n<p> Visual styles are not applied to the client area of application windows.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The size of the scroll box grip is determined by the current visual style of the operating system.  </p>\n<p> Before using this method, you should verify that the <a class=\"xref\" href=\"system.windows.forms.scrollbarrenderer#System_Windows_Forms_ScrollBarRenderer_IsSupported_\" data-linktype=\"relative-path\">IsSupported</a> property returns <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.ScrollBarRenderer.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawArrowButton\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawHorizontalThumb\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawHorizontalThumbGrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawLeftHorizontalTrack\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawLowerVerticalTrack\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawRightHorizontalTrack\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawSizeBox\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawUpperVerticalTrack\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawVerticalThumb\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.DrawVerticalThumbGrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.GetSizeBoxSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.GetThumbGripSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ScrollBarRenderer.IsSupported\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"0a666db3-cc1b-3429-952f-93e1adacbc61\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods used to render a scroll bar control with visual styles. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.ScrollBarRenderer\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.ScrollBarRenderer.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.ScrollBarRenderer","System.Windows.Forms.ScrollBarRenderer.DrawArrowButton","System.Windows.Forms.ScrollBarRenderer.DrawHorizontalThumb","System.Windows.Forms.ScrollBarRenderer.DrawHorizontalThumbGrip","System.Windows.Forms.ScrollBarRenderer.DrawLeftHorizontalTrack","System.Windows.Forms.ScrollBarRenderer.DrawLowerVerticalTrack","System.Windows.Forms.ScrollBarRenderer.DrawRightHorizontalTrack","System.Windows.Forms.ScrollBarRenderer.DrawSizeBox","System.Windows.Forms.ScrollBarRenderer.DrawUpperVerticalTrack","System.Windows.Forms.ScrollBarRenderer.DrawVerticalThumb","System.Windows.Forms.ScrollBarRenderer.DrawVerticalThumbGrip","System.Windows.Forms.ScrollBarRenderer.GetSizeBoxSize","System.Windows.Forms.ScrollBarRenderer.GetThumbGripSize","System.Windows.Forms.ScrollBarRenderer.IsSupported"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.ScrollBarRenderer","System::Windows::Forms::ScrollBarRenderer","System.Windows.Forms.ScrollBarRenderer.DrawArrowButton","System::Windows::Forms::ScrollBarRenderer::DrawArrowButton","System.Windows.Forms.ScrollBarRenderer.DrawHorizontalThumb","System::Windows::Forms::ScrollBarRenderer::DrawHorizontalThumb","System.Windows.Forms.ScrollBarRenderer.DrawHorizontalThumbGrip","System::Windows::Forms::ScrollBarRenderer::DrawHorizontalThumbGrip","System.Windows.Forms.ScrollBarRenderer.DrawLeftHorizontalTrack","System::Windows::Forms::ScrollBarRenderer::DrawLeftHorizontalTrack","System.Windows.Forms.ScrollBarRenderer.DrawLowerVerticalTrack","System::Windows::Forms::ScrollBarRenderer::DrawLowerVerticalTrack","System.Windows.Forms.ScrollBarRenderer.DrawRightHorizontalTrack","System::Windows::Forms::ScrollBarRenderer::DrawRightHorizontalTrack","System.Windows.Forms.ScrollBarRenderer.DrawSizeBox","System::Windows::Forms::ScrollBarRenderer::DrawSizeBox","System.Windows.Forms.ScrollBarRenderer.DrawUpperVerticalTrack","System::Windows::Forms::ScrollBarRenderer::DrawUpperVerticalTrack","System.Windows.Forms.ScrollBarRenderer.DrawVerticalThumb","System::Windows::Forms::ScrollBarRenderer::DrawVerticalThumb","System.Windows.Forms.ScrollBarRenderer.DrawVerticalThumbGrip","System::Windows::Forms::ScrollBarRenderer::DrawVerticalThumbGrip","System.Windows.Forms.ScrollBarRenderer.GetSizeBoxSize","System::Windows::Forms::ScrollBarRenderer::GetSizeBoxSize","System.Windows.Forms.ScrollBarRenderer.GetThumbGripSize","System::Windows::Forms::ScrollBarRenderer::GetThumbGripSize","System.Windows.Forms.ScrollBarRenderer.IsSupported","System::Windows::Forms::ScrollBarRenderer::IsSupported"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"0a666db3-cc1b-3429-952f-93e1adacbc61","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/ScrollBarRenderer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ScrollBarRenderer class | Microsoft Docs","_op_ogTitle":"ScrollBarRenderer class","description":"Provides methods used to render a scroll bar control with visual styles. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.ScrollBarRenderer","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollbarrenderer","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollbarrenderer","fileRelativePath":"api/System.Windows.Forms.ScrollBarRenderer.html"},"themesRelativePathToOutputRoot":"_themes/"}