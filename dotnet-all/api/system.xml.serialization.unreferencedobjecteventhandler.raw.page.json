{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">UnreferencedObjectEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnreferencedObject\" data-linktype=\"relative-path\">UnreferencedObject</a> event of an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void UnreferencedObjectEventHandler(object sender, UnreferencedObjectEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">UnreferencedObjectEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example adds an UnreferencedObjectEventHandler to an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>. The event is handled by the <code>Serializer_UnreferencedObject</code> method. To run the example, cut and paste the following XML into a file named UnrefObj.xml.  </p>\n<pre><code>&lt;wrapper&gt;  \n  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;  \n   &lt;/Group&gt;  \n&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;/wrapper&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"UnreferencedObject Event Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   public string GroupName;\n   public Vehicle GroupVehicle;\n}\n [SoapInclude(typeof(Vehicle))]\npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;);\n   }\n   \n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping(\n      typeof(Group)));\n      XmlSerializer mySerializer =  \n      new XmlSerializer(myMapping);\n \n      mySerializer.UnreferencedObject += \n      new UnreferencedObjectEventHandler\n      (Serializer_UnreferencedObject);\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n   }\n\n   private void Serializer_UnreferencedObject\n   (object sender, UnreferencedObjectEventArgs e){\n      Console.WriteLine(&quot;UnreferencedObject:&quot;);\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId);\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject);\n      Vehicle myVehicle = (Vehicle) e.UnreferencedObject;\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber);\n   }\n}\n\n// The file named &quot;UnrefObj.xml&quot; should contain this XML:\n\n// &lt;wrapper&gt;\n\n//  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n//n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n\n//&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n\n//&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"UnreferencedObject Event Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\nref class Vehicle;\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = ((gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid ));\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( myMapping );\n      mySerializer-&gt;UnreferencedObject += gcnew UnreferencedObjectEventHandler( this, &amp;Run::Serializer_UnreferencedObject );\n      \n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement();\n      \n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   void Serializer_UnreferencedObject( Object^ /*sender*/, UnreferencedObjectEventArgs^ e )\n   {\n      Console::WriteLine( &quot;UnreferencedObject:&quot; );\n      Console::WriteLine( &quot;ID: {0}&quot;, e-&gt;UnreferencedId );\n      Console::WriteLine( &quot;UnreferencedObject: {0}&quot;, e-&gt;UnreferencedObject );\n      Vehicle^ myVehicle = dynamic_cast&lt;Vehicle^&gt;(e-&gt;UnreferencedObject);\n      Console::WriteLine( &quot;License: {0}&quot;, myVehicle-&gt;licenseNumber );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;DeserializeObject( &quot;UnrefObj.xml&quot; );\n}\n\n// The file named S&quot;UnrefObj.xml&quot; should contain this XML:\n// &lt;wrapper&gt;\n//  &lt;Group xmlns:xsi=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=S&quot;http://www.w3.org/2001/XMLSchema&quot; id=S&quot;id1&quot; \n//n1:GroupName=S&quot;.NET&quot; xmlns:n1=S&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n//&lt;Vehicle id=S&quot;id2&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n//&lt;Vehicle id=S&quot;id3&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"UnreferencedObject Event Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&#39; You must use the SoapIncludeAttribute to inform the XmlSerializer\n&#39; that the Vehicle type should be recognized when deserializing.\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n    Public GroupName As String \n   public GroupVehicle As Vehicle \nEnd Class\n\nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\n \nPublic Class Run\n   Shared Sub Main()\n      Dim test As Run = new Run()\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;)\n   End Sub\n   \n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim myMapping As XmlTypeMapping = _\n      (new SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n      Dim mySerializer As XmlSerializer =  _\n      new XmlSerializer(myMapping)\n\n      AddHandler mySerializer.UnreferencedObject, _\n      AddressOf Serializer_UnreferencedObject\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      new XmlTextReader(filename)\n      reader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group  \n      myGroup = CType( mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n   End Sub\n   \n   Private Sub Serializer_UnreferencedObject _\n   (sender As object , e As UnreferencedObjectEventArgs)\n      Console.WriteLine(&quot;UnreferencedObject:&quot;)\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId)\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject)\n      Dim myVehicle As Vehicle = CType(e.UnreferencedObject, Vehicle)\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber)\n       End Sub\n End Class\n \n&#39; The XML document should contain this information:\n\n&#39;&lt;wrapper&gt;\n\n&#39;  &lt;Group xmlns:xsi=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot; \n&#39;xmlns:xsd=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n&#39;n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http:&#39;www.cpandl.com&quot;&gt;\n&#39;   &lt;/Group&gt;\n\n&#39;&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;/wrapper&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create an UnreferencedObjectEventHandler delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>  </p>\n<p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnreferencedObject\" data-linktype=\"relative-path\">UnreferencedObject</a> event occurs only when you call the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Xml.Serialization.UnreferencedObjectEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"789e1e63-55c4-7c24-8a78-1db916552501\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of an .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.xml.serialization/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.UnreferencedObjectEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Xml.Serialization.UnreferencedObjectEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Xml.Serialization.UnreferencedObjectEventHandler","System.Xml.Serialization.UnreferencedObjectEventHandler..ctor","System.Xml.Serialization.UnreferencedObjectEventHandler.Invoke","System.Xml.Serialization.UnreferencedObjectEventHandler.BeginInvoke","System.Xml.Serialization.UnreferencedObjectEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.UnreferencedObjectEventHandler","System::Xml::Serialization::UnreferencedObjectEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"789e1e63-55c4-7c24-8a78-1db916552501","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/UnreferencedObjectEventHandler.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UnreferencedObjectEventHandler delegate | Microsoft Docs","_op_ogTitle":"UnreferencedObjectEventHandler delegate","description":"Represents the method that handles the  event of an .\n","toc_asset_id":"api/_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.UnreferencedObjectEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.xml.serialization.unreferencedobjecteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.xml.serialization.unreferencedobjecteventhandler","fileRelativePath":"api/System.Xml.Serialization.UnreferencedObjectEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}