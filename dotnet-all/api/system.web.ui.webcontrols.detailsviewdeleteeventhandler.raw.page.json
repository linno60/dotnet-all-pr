{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DetailsViewDeleteEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DetailsViewDeleteEventHandler(object sender, DetailsViewDeleteEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DetailsViewDeleteEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to programmatically add a DetailsViewDeleteEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewDeleteEventHandlerInline#1\">\n&lt;%@ page language=&quot;C#&quot;%&gt;\n  \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void Page_Load(Object sender, EventArgs e)\n  {\n    \n    // Create a new DetailsView object.\n    DetailsView customerDetailsView = new DetailsView();\n    \n    // Set the DetailsView object&#39;s properties.\n    customerDetailsView.ID = &quot;CustomerDetailsView&quot;;\n    customerDetailsView.DataSourceID = &quot;DetailsViewSource&quot;;\n    customerDetailsView.AutoGenerateRows = true;\n    customerDetailsView.AutoGenerateDeleteButton = true;\n    customerDetailsView.AllowPaging = true;\n    customerDetailsView.PagerSettings.Mode = PagerButtons.NextPrevious;\n    customerDetailsView.DataKeyNames = new String[1] { &quot;CustomerID&quot; };\n\n    // Programmatically register the event-handling method\n    // for the ItemDeleting event of a DetailsView control.\n    customerDetailsView.ItemDeleting += new DetailsViewDeleteEventHandler(this.CustomerDetailsView_ItemDeleting);\n\n    // Add the DetailsView object to the Controls collection\n    // of the PlaceHolder control.\n    DetailsViewPlaceHolder.Controls.Add(customerDetailsView);\n\n  }\n\n  void CustomerDetailsView_ItemDeleting(Object sender, DetailsViewDeleteEventArgs e)\n  {\n\n    // Get customer ID and name from the Keys and Values\n    // properties.\n    String keyValue = e.Keys[&quot;CustomerID&quot;].ToString();\n    String customerName = e.Values[&quot;CompanyName&quot;].ToString();\n\n    // Cancel the delete operation if the user attempts to \n    // delete protected record. In this example, records\n    // with a customer ID that starts with with &quot;A&quot; cannot\n    // be deleted.\n    if (keyValue.StartsWith(&quot;A&quot;))\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot delete &quot; +\n        customerName + &quot;. This customer is protected.&quot;;\n    }\n    else\n    {\n      MessageLabel.Text = &quot;Row &quot; + e.RowIndex.ToString() +\n        &quot; deleted.&quot;;\n    }\n\n  }\n\n&lt;/script&gt;\n \n &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;   \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeleteEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeleteEventHandler Example&lt;/h3&gt;\n        \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:PlaceHolder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewDeleteEventHandlerInline#1\">\n&lt;%@ page language=&quot;VB&quot;%&gt;\n  \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n    \n    &#39; Create a new DetailsView object.\n    Dim customerDetailsView As New DetailsView()\n    \n    &#39; Set the DetailsView object&#39;s properties.\n    customerDetailsView.ID = &quot;CustomerDetailsView&quot;\n    customerDetailsView.DataSourceID = &quot;DetailsViewSource&quot;\n    customerDetailsView.AutoGenerateRows = True\n    customerDetailsView.AutoGenerateDeleteButton = True\n    customerDetailsView.AllowPaging = True\n    customerDetailsView.PagerSettings.Mode = PagerButtons.NextPrevious\n    \n    Dim keyArray() As String = {&quot;CustomerID&quot;}\n    customerDetailsView.DataKeyNames = keyArray\n    \n    &#39; Programmatically register the event-handling method\n    &#39; for the ItemDeleting event of a DetailsView control.\n    AddHandler customerDetailsView.ItemDeleting, AddressOf CustomerDetailsView_ItemDeleting\n\n    &#39; Add the DetailsView object to the Controls collection\n    &#39; of the PlaceHolder control.\n    DetailsViewPlaceHolder.Controls.Add(customerDetailsView)\n\n  End Sub\n\n  Sub CustomerDetailsView_ItemDeleting(ByVal sender As Object, ByVal e As DetailsViewDeleteEventArgs)\n\n    &#39; Get customer ID and name from the Keys and Values\n    &#39; properties.\n    Dim keyValue As String = e.Keys(&quot;CustomerID&quot;).ToString()\n    Dim customerName As String = e.Values(&quot;CompanyName&quot;).ToString()\n\n    &#39; Cancel the delete operation if the user attempts to \n    &#39; delete protected record. In this example, records\n    &#39; with a customer ID that starts with with &quot;A&quot; cannot\n    &#39; be deleted.\n    If keyValue.StartsWith(&quot;A&quot;) Then\n\n      e.Cancel = True\n      MessageLabel.Text = &quot;You cannot delete &quot; &amp; _\n        customerName &amp; &quot;. This customer is protected.&quot;\n  \n    Else\n  \n      MessageLabel.Text = &quot;Row &quot; &amp; e.RowIndex.ToString() &amp; _\n        &quot; deleted.&quot;\n  \n    End If\n  \n  End Sub\n\n&lt;/script&gt;\n  \n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;    \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeleteEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeleteEventHandler Example&lt;/h3&gt;\n        \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:PlaceHolder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to declaratively add a DetailsViewDeleteEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewDeleteEventHandler#1\">\n&lt;%@ page language=&quot;C#&quot;%&gt;\n  \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomerDetailsView_ItemDeleting(Object sender, \n    DetailsViewDeleteEventArgs e)\n  {\n\n    // Get customer ID and name from the Keys and Values\n    // properties.\n    String keyValue = e.Keys[&quot;CustomerID&quot;].ToString();\n    String customerName = e.Values[&quot;CompanyName&quot;].ToString();\n\n    // Cancel the delete operation if the user attempts to \n    // delete protected record. In this example, records\n    // with a customer ID that starts with with &quot;A&quot; cannot\n    // be deleted.\n    if (keyValue.StartsWith(&quot;A&quot;))\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot delete &quot; +\n        customerName + &quot;. This customer is protected.&quot;;\n    }\n    else\n    {\n      MessageLabel.Text = &quot;Row &quot; + e.RowIndex.ToString() +\n        &quot; deleted.&quot;;\n    }\n\n  }\n\n&lt;/script&gt;\n \n &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;   \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeleteEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeleteEventHandler Example&lt;/h3&gt;\n        \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot;\n          onitemdeleting=&quot;CustomerDetailsView_ItemDeleting&quot;  \n          runat=&quot;server&quot;&gt;\n        \n          &lt;pagersettings mode=&quot;NextPrevious&quot;/&gt;\n        \n        &lt;/asp:detailsview&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewDeleteEventHandler#1\">\n&lt;%@ page language=&quot;VB&quot; autoeventwireup=&quot;false&quot;%&gt;\n  \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomerDetailsView_ItemDeleting(ByVal sender As Object, _\n    ByVal e As DetailsViewDeleteEventArgs) _\n    Handles CustomerDetailsView.ItemDeleting\n\n    &#39; Get customer ID and name from the Keys and Values\n    &#39; properties.\n    Dim keyValue As String = e.Keys(&quot;CustomerID&quot;).ToString()\n    Dim customerName As String = e.Values(&quot;CompanyName&quot;).ToString()\n\n    &#39; Cancel the delete operation if the user attempts to \n    &#39; delete protected record. In this example, records\n    &#39; with a customer ID that starts with with &quot;A&quot; cannot\n    &#39; be deleted.\n    If keyValue.StartsWith(&quot;A&quot;) Then\n\n      e.Cancel = True\n      MessageLabel.Text = &quot;You cannot delete &quot; &amp; _\n        customerName &amp; &quot;. This customer is protected.&quot;\n  \n    Else\n  \n      MessageLabel.Text = &quot;Row &quot; &amp; e.RowIndex.ToString() &amp; _\n        &quot; deleted.&quot;\n  \n    End If\n  \n  End Sub\n\n&lt;/script&gt;\n  \n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;    \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeleteEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeleteEventHandler Example&lt;/h3&gt;\n        \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          runat=&quot;server&quot;&gt;\n        \n          &lt;pagersettings mode=&quot;NextPrevious&quot;/&gt;\n        \n        &lt;/asp:detailsview&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event when a Delete button (a button with its <code>CommandName</code> property set to &quot;Delete&quot;) within the control is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control deletes the record. This allows you to provide an event handler that performs a custom routine, such as checking the results of a delete operation, whenever this event occurs.  </p>\n<p> When you create a DetailsViewDeleteEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DetailsViewDeleteEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeleteEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeleteEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeleteEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeleteEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeleteEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"f0157725-a28c-1c4c-044a-081a1588c8e9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DetailsViewDeleteEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DetailsViewDeleteEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.DetailsViewDeleteEventHandler","System.Web.UI.WebControls.DetailsViewDeleteEventHandler..ctor","System.Web.UI.WebControls.DetailsViewDeleteEventHandler.Invoke","System.Web.UI.WebControls.DetailsViewDeleteEventHandler.BeginInvoke","System.Web.UI.WebControls.DetailsViewDeleteEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DetailsViewDeleteEventHandler","System::Web::UI::WebControls::DetailsViewDeleteEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"f0157725-a28c-1c4c-044a-081a1588c8e9","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/DetailsViewDeleteEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DetailsViewDeleteEventHandler delegate | Microsoft Docs","_op_ogTitle":"DetailsViewDeleteEventHandler delegate","description":"Represents the method that handles the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DetailsViewDeleteEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.detailsviewdeleteeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.detailsviewdeleteeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.DetailsViewDeleteEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}