{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IBindingList</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the features required to support both complex and simple scenarios when binding to a data source.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IBindingList : System.Collections.IList</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example provides a simple implementation of the IBindingList interface. The <code>CustomerList</code> class stores customer information in a list. This example assumes that you have used the <code>Customer</code> class that can be found in the example in the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"Binding_Editable#2\">public class CustomersList :  CollectionBase, IBindingList\n{\n   \n\tprivate ListChangedEventArgs resetEvent = new ListChangedEventArgs(ListChangedType.Reset, -1);\n\tprivate ListChangedEventHandler onListChanged;\n\n\tpublic void LoadCustomers() \n\t{\n\t\tIList l = (IList)this;\n\t\tl.Add(ReadCustomer1());\n\t\tl.Add(ReadCustomer2());\n\t\tOnListChanged(resetEvent);\n\t}\n\n\tpublic Customer this[int index] \n\t{\n\t\tget \n\t\t{\n\t\t\treturn (Customer)(List[index]);\n\t\t}\n\t\tset \n\t\t{\n\t\t\tList[index] = value;\n\t\t}\n\t}\n\n\tpublic int Add (Customer value) \n\t{\n\t\treturn List.Add(value);\n\t}\n\n\tpublic Customer AddNew() \n\t{\n\t\treturn (Customer)((IBindingList)this).AddNew();\n\t}\n\n\tpublic void Remove (Customer value) \n\t{\n\t\tList.Remove(value);\n\t}\n\n       \n\tprotected virtual void OnListChanged(ListChangedEventArgs ev) \n\t{\n\t\tif (onListChanged != null) \n\t\t{\n\t\t\tonListChanged(this, ev);\n\t\t}\n\t}\n       \n\n\tprotected override void OnClear() \n\t{\n\t\tforeach (Customer c in List) \n\t\t{\n\t\t\tc.Parent = null;\n\t\t}\n\t}\n\n\tprotected override void OnClearComplete() \n\t{\n\t\tOnListChanged(resetEvent);\n\t}\n\n\tprotected override void OnInsertComplete(int index, object value) \n\t{\n\t\tCustomer c = (Customer)value;\n\t\tc.Parent = this;\n\t\tOnListChanged(new ListChangedEventArgs(ListChangedType.ItemAdded, index));\n\t}\n\n\tprotected override void OnRemoveComplete(int index, object value) \n\t{\n\t\tCustomer c = (Customer)value;\n\t\tc.Parent = this;\n\t\tOnListChanged(new ListChangedEventArgs(ListChangedType.ItemDeleted, index));\n\t}\n\n\tprotected override void OnSetComplete(int index, object oldValue, object newValue) \n\t{\n\t\tif (oldValue != newValue) \n\t\t{\n\n\t\t\tCustomer oldcust = (Customer)oldValue;\n\t\t\tCustomer newcust = (Customer)newValue;\n               \n\t\t\toldcust.Parent = null;\n\t\t\tnewcust.Parent = this;\n               \n\t\t\t\n\t\t\tOnListChanged(new ListChangedEventArgs(ListChangedType.ItemAdded, index));\n\t\t}\n\t}\n       \n\t// Called by Customer when it changes.\n\tinternal void CustomerChanged(Customer cust) \n\t{\n\t\t\n\t\tint index = List.IndexOf(cust);\n           \n\t\tOnListChanged(new ListChangedEventArgs(ListChangedType.ItemChanged, index));\n\t}\n       \n\n\t// Implements IBindingList.\n\tbool IBindingList.AllowEdit \n\t{ \n\t\tget { return true ; }\n\t}\n\n\tbool IBindingList.AllowNew \n\t{ \n\t\tget { return true ; }\n\t}\n\n\tbool IBindingList.AllowRemove \n\t{ \n\t\tget { return true ; }\n\t}\n\n\tbool IBindingList.SupportsChangeNotification \n\t{ \n\t\tget { return true ; }\n\t}\n       \n\tbool IBindingList.SupportsSearching \n\t{ \n\t\tget { return false ; }\n\t}\n\n\tbool IBindingList.SupportsSorting \n\t{ \n\t\tget { return false ; }\n\t}\n\n\n\t// Events.\n\tpublic event ListChangedEventHandler ListChanged \n\t{\n\t\tadd \n\t\t{\n\t\t\tonListChanged += value;\n\t\t}\n\t\tremove \n\t\t{\n\t\t\tonListChanged -= value;\n\t\t}\n\t}\n\n\t// Methods.\n\tobject IBindingList.AddNew() \n\t{\n\t\tCustomer c = new Customer(this.Count.ToString());\n\t\tList.Add(c);\n\t\treturn c;\n\t}\n\n\n\t// Unsupported properties.\n\tbool IBindingList.IsSorted \n\t{ \n\t\tget { throw new NotSupportedException(); }\n\t}\n\n\tListSortDirection IBindingList.SortDirection \n\t{ \n\t\tget { throw new NotSupportedException(); }\n\t}\n\n\n\tPropertyDescriptor IBindingList.SortProperty \n\t{ \n\t\tget { throw new NotSupportedException(); }\n\t}\n\n\n\t// Unsupported Methods.\n\tvoid IBindingList.AddIndex(PropertyDescriptor property) \n\t{\n\t\tthrow new NotSupportedException(); \n\t}\n\n\tvoid IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction) \n\t{\n\t\tthrow new NotSupportedException(); \n\t}\n\n\tint IBindingList.Find(PropertyDescriptor property, object key) \n\t{\n\t\tthrow new NotSupportedException(); \n\t}\n\n\tvoid IBindingList.RemoveIndex(PropertyDescriptor property) \n\t{\n\t\tthrow new NotSupportedException(); \n\t}\n\n\tvoid IBindingList.RemoveSort() \n\t{\n\t\tthrow new NotSupportedException(); \n\t}\n\n\t// Worker functions to populate the list with data.\n\tprivate static Customer ReadCustomer1() \n\t{\n\t\tCustomer cust = new Customer(&quot;536-45-1245&quot;);\n\t\tcust.FirstName = &quot;Jo&quot;;\n\t\tcust.LastName = &quot;Brown&quot;;\n\t\treturn cust;\n\t}\n       \n\tprivate static Customer ReadCustomer2() \n\t{\n\t\tCustomer cust = new Customer(&quot;246-12-5645&quot;);\n\t\tcust.FirstName = &quot;Robert&quot;;\n\t\tcust.LastName = &quot;Brown&quot;;\n\t\treturn cust;\n\t}\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Binding_Editable#2\">public ref class CustomersList: public CollectionBase, public IBindingList\n{\nprivate:\n   ListChangedEventArgs^ resetEvent;\n   ListChangedEventHandler^ onListChanged;\n   virtual event ListChangedEventHandler^ ListChanged;\n\npublic:\n   property bool AllowEdit \n   {\n      // Implements IBindingList.\n      virtual bool get() sealed\n      {\n         return true;\n      }\n   }\n\n   virtual property bool AllowNew \n   {\n      bool get()\n      {\n         return true;\n      }\n   }\n\n   property bool AllowRemove \n   {\n      virtual bool get()\n      {\n         return true;\n      }\n\n   }\n\n   property bool SupportsChangeNotification \n   {\n      virtual bool get()\n      {\n         return true;\n      }\n\n   }\n\n   property bool SupportsSearching \n   {\n      virtual bool get()\n      {\n         return true;\n      }\n\n   }\n\n   property bool SupportsSorting \n   {\n      virtual bool get()\n      {\n         return true;\n      }\n\n   }\n\n   // Methods.\n   virtual Object^ AddNew()\n   {\n      Customer^ c = gcnew Customer( this-&gt;Count-&gt;ToString() );\n      List-&gt;Add( c );\n      return c;\n   }\n\n\n   property bool IsSorted \n   {\n\n      // Unsupported properties.\n      virtual bool get()\n      {\n         throw gcnew NotSupportedException;\n         return false;\n      }\n\n   }\n\n   property ListSortDirection SortDirection \n   {\n      virtual ListSortDirection get()\n      {\n         throw gcnew NotSupportedException;\n         return ListSortDirection::Ascending;\n      }\n\n   }\n\n   property PropertyDescriptor^ SortProperty \n   {\n      virtual PropertyDescriptor^ get()\n      {\n         throw gcnew NotSupportedException;\n         return nullptr;\n      }\n\n   }\n\n   // Unsupported Methods.\n   virtual void AddIndex( PropertyDescriptor^ property )\n   {\n      throw gcnew NotSupportedException;\n   }\n\n   virtual void ApplySort( PropertyDescriptor^ property, ListSortDirection direction )\n   {\n      throw gcnew NotSupportedException;\n   }\n\n   virtual int Find( PropertyDescriptor^ property, Object^ key )\n   {\n      throw gcnew NotSupportedException;\n      return 0;\n   }\n\n   virtual void RemoveIndex( PropertyDescriptor^ property )\n   {\n      throw gcnew NotSupportedException;\n   }\n\n   virtual void RemoveSort()\n   {\n      throw gcnew NotSupportedException;\n   }\n\n\n   // Worker functions to populate the list with data.\n   static Customer^ ReadCustomer1()\n   {\n      Customer^ cust = gcnew Customer( &quot;536-45-1245&quot; );\n      cust-&gt;FirstName = &quot;Jo&quot;;\n      cust-&gt;LastName = &quot;Brown&quot;;\n      return cust;\n   }\n\n   static Customer^ ReadCustomer2()\n   {\n      Customer^ cust = gcnew Customer( &quot;246-12-5645&quot; );\n      cust-&gt;FirstName = &quot;Robert&quot;;\n      cust-&gt;LastName = &quot;Brown&quot;;\n      return cust;\n   }\n\nprotected:\n   virtual void OnListChanged( ListChangedEventArgs^ ev )\n   {\n      if ( onListChanged != nullptr )\n      {\n         onListChanged( this, ev );\n      }\n   }\n\n   virtual void OnClear() override\n   {\n      List-&gt;Clear();\n   }\n\n   virtual void OnClearComplete() override\n   {\n      OnListChanged( resetEvent );\n   }\n\n   virtual void OnInsertComplete( int index, Object^ value ) override\n   {\n      Customer^ c = safe_cast&lt;Customer^&gt;(value);\n      c-&gt;Parent = this;\n      OnListChanged( gcnew ListChangedEventArgs( ListChangedType::ItemAdded,index ) );\n   }\n\n   virtual void OnRemoveComplete( int index, Object^ value ) override\n   {\n      Customer^ c = safe_cast&lt;Customer^&gt;(value);\n      c-&gt;Parent = this;\n      OnListChanged( gcnew ListChangedEventArgs( ListChangedType::ItemDeleted,index ) );\n   }\n\n   virtual void OnSetComplete( int index, Object^ oldValue, Object^ newValue ) override\n   {\n      if ( oldValue != newValue )\n      {\n         Customer^ oldcust = safe_cast&lt;Customer^&gt;(oldValue);\n         Customer^ newcust = safe_cast&lt;Customer^&gt;(newValue);\n         oldcust-&gt;Parent = 0;\n         newcust-&gt;Parent = this;\n         OnListChanged( gcnew ListChangedEventArgs( ListChangedType::ItemAdded,index ) );\n      }\n   }\n\npublic:\n\n   // Constructor\n   CustomersList()\n   {\n      resetEvent = gcnew ListChangedEventArgs( ListChangedType::Reset,-1 );\n   }\n\n   void LoadCustomers()\n   {\n      IList^ l = static_cast&lt;IList^&gt;(this);\n      l-&gt;Add( ReadCustomer1() );\n      l-&gt;Add( ReadCustomer2() );\n      OnListChanged( resetEvent );\n   }\n\n   property Object^ Item [int]\n   {\n      Object^ get( int index )\n      {\n         return static_cast&lt;Customer^&gt;(List-&gt;Item[ index ]);\n      }\n\n      void set( int index, Object^ value )\n      {\n         List-&gt;Item[ index ] = value;\n      }\n\n   }\n   int Add( Customer^ value )\n   {\n      return List-&gt;Add( value );\n   }\n\n   Customer^ AddNew()\n   {\n      return safe_cast&lt;Customer^&gt;(static_cast&lt;IBindingList^&gt;(this)-&gt;AddNew());\n   }\n\n   void Remove( Customer^ value )\n   {\n      List-&gt;Remove( value );\n   }\n\ninternal:\n\n   // Called by Customer when it changes.\n   void CustomerChanged( Customer^ cust )\n   {\n      int index = List-&gt;IndexOf( cust );\n      OnListChanged( gcnew ListChangedEventArgs( ListChangedType::ItemChanged,index ) );\n   }\n\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"Binding_Editable#2\">Public Class CustomersList\n    Inherits CollectionBase\n    Implements IBindingList \n\n    Private resetEvent As New ListChangedEventArgs(ListChangedType.Reset, -1)\n    Private onListChanged1 As ListChangedEventHandler\n\n\n    Public Sub LoadCustomers()\n        Dim l As IList = CType(Me, IList)\n        l.Add(ReadCustomer1())\n        l.Add(ReadCustomer2())\n        OnListChanged(resetEvent)\n    End Sub \n\n\n    Default Public Property Item(ByVal index As Integer) As Customer\n        Get\n            Return CType(List(index), Customer)\n        End Get\n        Set(ByVal Value As Customer)\n            List(index) = Value\n        End Set\n    End Property\n\n\n    Public Function Add(ByVal value As Customer) As Integer\n        Return List.Add(value)\n    End Function \n\n\n    Public Function AddNew2() As Customer\n        Return CType(CType(Me, IBindingList).AddNew(), Customer)\n    End Function \n\n\n    Public Sub Remove(ByVal value As Customer)\n        List.Remove(value)\n    End Sub \n\n\n\n    Protected Overridable Sub OnListChanged(ByVal ev As ListChangedEventArgs)\n        If (onListChanged1 IsNot Nothing) Then\n            onListChanged1(Me, ev)\n        End If\n    End Sub \n\n\n\n    Protected Overrides Sub OnClear()\n        Dim c As Customer\n        For Each c In List\n            c.parent = Nothing\n        Next c\n    End Sub \n\n\n    Protected Overrides Sub OnClearComplete()\n        OnListChanged(resetEvent)\n    End Sub \n\n\n    Protected Overrides Sub OnInsertComplete(ByVal index As Integer, ByVal value As Object)\n        Dim c As Customer = CType(value, Customer)\n        c.parent = Me\n        OnListChanged(New ListChangedEventArgs(ListChangedType.ItemAdded, index))\n    End Sub \n\n\n    Protected Overrides Sub OnRemoveComplete(ByVal index As Integer, ByVal value As Object)\n        Dim c As Customer = CType(value, Customer)\n        c.parent = Me\n        OnListChanged(New ListChangedEventArgs(ListChangedType.ItemDeleted, index))\n    End Sub \n\n\n    Protected Overrides Sub OnSetComplete(ByVal index As Integer, ByVal oldValue As Object, ByVal newValue As Object)\n        If oldValue &lt;&gt; newValue Then\n\n            Dim oldcust As Customer = CType(oldValue, Customer)\n            Dim newcust As Customer = CType(newValue, Customer)\n\n            oldcust.parent = Nothing\n            newcust.parent = Me\n\n            OnListChanged(New ListChangedEventArgs(ListChangedType.ItemAdded, index))\n        End If\n    End Sub \n\n\n    &#39; Called by Customer when it changes.\n    Friend Sub CustomerChanged(ByVal cust As Customer)\n        Dim index As Integer = List.IndexOf(cust)\n        OnListChanged(New ListChangedEventArgs(ListChangedType.ItemChanged, index))\n    End Sub \n\n\n    &#39; Implements IBindingList.\n\n    ReadOnly Property AllowEdit() As Boolean Implements IBindingList.AllowEdit\n        Get\n            Return True\n        End Get\n    End Property\n\n    ReadOnly Property AllowNew() As Boolean Implements IBindingList.AllowNew\n        Get\n            Return True\n        End Get\n    End Property\n\n    ReadOnly Property AllowRemove() As Boolean Implements IBindingList.AllowRemove\n        Get\n            Return True\n        End Get\n    End Property\n\n    ReadOnly Property SupportsChangeNotification() As Boolean Implements IBindingList.SupportsChangeNotification\n        Get\n            Return True\n        End Get\n    End Property\n\n    ReadOnly Property SupportsSearching() As Boolean Implements IBindingList.SupportsSearching\n        Get\n            Return False\n        End Get\n    End Property\n\n    ReadOnly Property SupportsSorting() As Boolean Implements IBindingList.SupportsSorting\n        Get\n            Return False\n        End Get\n    End Property\n\n    &#39; Events.\n    Public Event ListChanged As ListChangedEventHandler Implements IBindingList.ListChanged\n\n\n    &#39; Methods.\n    Function AddNew() As Object Implements IBindingList.AddNew\n        Dim c As New Customer(Me.Count.ToString())\n        List.Add(c)\n        Return c\n    End Function \n\n\n    &#39; Unsupported properties.\n\n    ReadOnly Property IsSorted() As Boolean Implements IBindingList.IsSorted\n        Get\n            Throw New NotSupportedException()\n        End Get\n    End Property\n\n    ReadOnly Property SortDirection() As ListSortDirection Implements IBindingList.SortDirection\n        Get\n            Throw New NotSupportedException()\n        End Get\n    End Property\n\n\n    ReadOnly Property SortProperty() As PropertyDescriptor Implements IBindingList.SortProperty\n        Get\n            Throw New NotSupportedException()\n        End Get\n    End Property\n\n\n    &#39; Unsupported Methods.\n    Sub AddIndex(ByVal prop As PropertyDescriptor) Implements IBindingList.AddIndex\n        Throw New NotSupportedException()\n    End Sub \n\n\n    Sub ApplySort(ByVal prop As PropertyDescriptor, ByVal direction As ListSortDirection) Implements IBindingList.ApplySort\n        Throw New NotSupportedException()\n    End Sub \n\n\n    Function Find(ByVal prop As PropertyDescriptor, ByVal key As Object) As Integer Implements IBindingList.Find\n        Throw New NotSupportedException()\n    End Function \n\n\n    Sub RemoveIndex(ByVal prop As PropertyDescriptor) Implements IBindingList.RemoveIndex\n        Throw New NotSupportedException()\n    End Sub \n\n\n    Sub RemoveSort() Implements IBindingList.RemoveSort\n        Throw New NotSupportedException()\n    End Sub \n\n\n    &#39; Worker functions to populate the list with data.\n    Private Shared Function ReadCustomer1() As Customer\n        Dim cust As New Customer(&quot;536-45-1245&quot;)\n        cust.FirstName = &quot;Jo&quot;\n        cust.LastName = &quot;Brown&quot;\n        Return cust\n    End Function \n\n\n    Private Shared Function ReadCustomer2() As Customer\n        Dim cust As New Customer(&quot;246-12-5645&quot;)\n        cust.FirstName = &quot;Robert&quot;\n        cust.LastName = &quot;Brown&quot;\n        Return cust\n    End Function \nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This interface is implemented by the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> class. Implementation of a method should exhibit the same behavior as the implementation of that method in the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> class.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ApplySort_\" data-linktype=\"relative-path\">ApplySort</a> or <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_RemoveSort_\" data-linktype=\"relative-path\">RemoveSort</a> methods, you should raise a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event with the <a class=\"xref\" href=\"system.componentmodel.listchangedtype\" data-linktype=\"relative-path\">ListChangedType</a> enumeration.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AddNew_\" data-linktype=\"relative-path\">AddNew</a> method, you should raise a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event with the <a class=\"xref\" href=\"system.componentmodel.listchangedtype\" data-linktype=\"relative-path\">ListChangedType</a> enumeration carrying the appropriate index. The added row is in a state where pressing the ESC on a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control can remove the new row. Raising the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event with the <a class=\"xref\" href=\"system.componentmodel.listchangedtype\" data-linktype=\"relative-path\">ListChangedType</a> enumeration a second time on this row indicates that the item is now a row not in the &quot;new&quot; state.  </p>\n<p> When you remove an item or call the <a class=\"xref\" href=\"system.componentmodel.ieditableobject#System_ComponentModel_IEditableObject_CancelEdit_\" data-linktype=\"relative-path\">CancelEdit</a> method on a new row (if that row implements <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a>), you should raise a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event with the <a class=\"xref\" href=\"system.componentmodel.listchangedtype\" data-linktype=\"relative-path\">ListChangedType</a> enumeration carrying the appropriate index.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_AllowEdit_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_AllowEdit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowEdit</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether you can update items in the list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AllowEdit { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if you can update the items in the list; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_AllowNew_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_AllowNew\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowNew</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether you can add items to the list using <span class=\"xref\">stem.ComponentModel.IBindingList.AddNew*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AllowNew { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if you can add items to the list using <span class=\"xref\">stem.ComponentModel.IBindingList.AddNew*</span>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If <a class=\"xref\" href=\"system.collections.ilist#System_Collections_IList_IsFixedSize_\" data-linktype=\"relative-path\">IsFixedSize</a> or <a class=\"xref\" href=\"system.collections.ilist#System_Collections_IList_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> is <code>true</code>, this property returns <code>false</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_AllowRemove_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_AllowRemove\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowRemove</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether you can remove items from the list, using <span class=\"xref\">stem.Collections.IList.Remove*</span> or <span class=\"xref\">stem.Collections.IList.RemoveAt*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AllowRemove { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if you can remove items from the list; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If <a class=\"xref\" href=\"system.collections.ilist#System_Collections_IList_IsFixedSize_\" data-linktype=\"relative-path\">IsFixedSize</a> or <a class=\"xref\" href=\"system.collections.ilist#System_Collections_IList_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> is <code>true</code>, this property returns <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If AllowRemove returns <code>false</code>, <a class=\"xref\" href=\"system.collections.ilist#System_Collections_IList_Remove_\" data-linktype=\"relative-path\">Remove</a> and <a class=\"xref\" href=\"system.collections.ilist#System_Collections_IList_RemoveAt_\" data-linktype=\"relative-path\">RemoveAt</a> throw a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_IsSorted_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_IsSorted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsSorted</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether the items in the list are sorted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsSorted { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <span class=\"xref\">stem.ComponentModel.IBindingList.ApplySort*</span> has been called and <span class=\"xref\">stem.ComponentModel.IBindingList.RemoveSort*</span> has not been called; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.IBindingList.SupportsSorting*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is supported if <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SupportsSorting_\" data-linktype=\"relative-path\">SupportsSorting</a> is <code>true</code>; otherwise, this property throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> If IsSorted returns <code>true</code>, items are added or removed in the order of the sort.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_SortDirection_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_SortDirection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SortDirection</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the direction of the sort.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.ListSortDirection SortDirection { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.listsortdirection\" data-linktype=\"relative-path\">ListSortDirection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.componentmodel.listsortdirection\" data-linktype=\"relative-path\">ListSortDirection</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.IBindingList.SupportsSorting*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is supported if <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SupportsSorting_\" data-linktype=\"relative-path\">SupportsSorting</a> is <code>true</code>; otherwise, this property throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_SortProperty_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_SortProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SortProperty</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> that is being used for sorting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.PropertyDescriptor SortProperty { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> that is being used for sorting.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.IBindingList.SupportsSorting*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is supported if <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SupportsSorting_\" data-linktype=\"relative-path\">SupportsSorting</a> is <code>true</code>; otherwise, this property throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_SupportsChangeNotification_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_SupportsChangeNotification\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SupportsChangeNotification</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event is raised when the list changes or an item in the list changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool SupportsChangeNotification { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event is raised when the list changes or when an item changes; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Objects in the list must notify the list when they change, so the list can raise a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_SupportsSearching_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_SupportsSearching\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SupportsSearching</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether the list supports searching using the <span class=\"xref\">stem.ComponentModel.IBindingList.Find*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool SupportsSearching { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the list supports searching using the <span class=\"xref\">stem.ComponentModel.IBindingList.Find*</span> method; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_SupportsSorting_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_SupportsSorting\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SupportsSorting</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether the list supports sorting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool SupportsSorting { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the list supports sorting; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If this property is <code>true</code>, then <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_IsSorted_\" data-linktype=\"relative-path\">IsSorted</a>, <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SortProperty_\" data-linktype=\"relative-path\">SortProperty</a>, <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SortDirection_\" data-linktype=\"relative-path\">SortDirection</a>, <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ApplySort_\" data-linktype=\"relative-path\">ApplySort</a>, and <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_RemoveSort_\" data-linktype=\"relative-path\">RemoveSort</a> are supported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_AddIndex_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_AddIndex_System_ComponentModel_PropertyDescriptor_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddIndex(PropertyDescriptor)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> to the indexes used for searching.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddIndex (System.ComponentModel.PropertyDescriptor property);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>property</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> to add to the indexes used for searching.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The list must support this method. However, support for this method can be a nonoperation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_AddNew_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_AddNew\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddNew()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds a new item to the list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object AddNew ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The item added to the list.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.IBindingList.AllowNew*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is supported only if <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AllowNew_\" data-linktype=\"relative-path\">AllowNew</a> is <code>true</code>; otherwise, a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> is thrown.  </p>\n<p> Implementing this method means that the <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> list must understand the type of objects to add to the list and must understand how to create a new instance of that type. For example, if you have a collection of <code>myCustomer</code> objects, the AddNew method should add a new <code>myCustomer</code> object to the list.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the objects in this list implement the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface, calling the <a class=\"xref\" href=\"system.componentmodel.ieditableobject#System_ComponentModel_IEditableObject_CancelEdit_\" data-linktype=\"relative-path\">CancelEdit</a> method should discard an object, not add it to the list, when the object was created using the AddNew method. The object should only be added to the list when the <a class=\"xref\" href=\"system.componentmodel.ieditableobject#System_ComponentModel_IEditableObject_EndEdit_\" data-linktype=\"relative-path\">EndEdit</a> method is called. Therefore, you must sychronize the object and the list carefully.  </p>\n</div>\n<p> When this method is called, you should raise a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event with the <a class=\"xref\" href=\"system.componentmodel.listchangedtype\" data-linktype=\"relative-path\">ListChangedType</a> enumeration carrying the appropriate index. The added row is in a state where hitting Esc on a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control can remove the new row. Raising the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event with the <a class=\"xref\" href=\"system.componentmodel.listchangedtype\" data-linktype=\"relative-path\">ListChangedType</a> enumeration a second time on this row indicates that the item is now a normal row (not in new state).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_ApplySort_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_ApplySort_System_ComponentModel_PropertyDescriptor_System_ComponentModel_ListSortDirection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplySort(PropertyDescriptor, ListSortDirection)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sorts the list based on a <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> and a <a class=\"xref\" href=\"system.componentmodel.listsortdirection\" data-linktype=\"relative-path\">ListSortDirection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>property</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> to sort by.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>direction</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.listsortdirection\" data-linktype=\"relative-path\">ListSortDirection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.componentmodel.listsortdirection\" data-linktype=\"relative-path\">ListSortDirection</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.IBindingList.SupportsSorting*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If items are added or removed, these items are placed in the order of the sort.  </p>\n<p> This method is supported if <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SupportsSorting_\" data-linktype=\"relative-path\">SupportsSorting</a> is <code>true</code>; otherwise, this method throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_Find_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_Find_System_ComponentModel_PropertyDescriptor_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Find(PropertyDescriptor, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the index of the row that has the given <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Find (System.ComponentModel.PropertyDescriptor property, object key);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>property</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> to search on.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the <code>property</code> parameter to search for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The index of the row that has the given <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.IBindingList.SupportsSearching*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method will select the first row where the value of the <code>property</code> parameter equals the value of the <code>key</code> parameter.  </p>\n<p> This method is supported if <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SupportsSearching_\" data-linktype=\"relative-path\">SupportsSearching</a> is <code>true</code>, otherwise this method throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_RemoveIndex_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_RemoveIndex_System_ComponentModel_PropertyDescriptor_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoveIndex(PropertyDescriptor)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> from the indexes used for searching.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RemoveIndex (System.ComponentModel.PropertyDescriptor property);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>property</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> to remove from the indexes used for searching.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The list must support this method. However, support for this method can be a nonoperation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_IBindingList_RemoveSort_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_RemoveSort\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoveSort()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes any sort applied using <span class=\"xref\">stem.ComponentModel.IBindingList.ApplySort*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RemoveSort ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.IBindingList.SupportsSorting*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is supported if <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SupportsSorting_\" data-linktype=\"relative-path\">SupportsSorting</a> is <code>true</code>; otherwise, this property throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> When you call this method, you should raise a <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event with the <a class=\"xref\" href=\"system.componentmodel.listchangedtype\" data-linktype=\"relative-path\">ListChangedType</a> enumeration.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IBindingList_ListChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ListChanged</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the list changes or an item in the list changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.ListChangedEventHandler ListChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised only if the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_SupportsChangeNotification_\" data-linktype=\"relative-path\">SupportsChangeNotification</a> property is <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.IBindingList.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.AddIndex\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.AddNew\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.AllowEdit\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.AllowNew\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.AllowRemove\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.ApplySort\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.Find\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.IsSorted\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.ListChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.add_ListChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.remove_ListChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.RemoveIndex\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.RemoveSort\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.SortDirection\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.SortProperty\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.SupportsChangeNotification\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.SupportsSearching\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IBindingList.SupportsSorting\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"cfa30e7a-71d9-b1b5-d03c-231a7ee24e51\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the features required to support both complex and simple scenarios when binding to a data source.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.IBindingList\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.IBindingList.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.IBindingList","System.ComponentModel.IBindingList.AddIndex","System.ComponentModel.IBindingList.AddNew","System.ComponentModel.IBindingList.AllowEdit","System.ComponentModel.IBindingList.AllowNew","System.ComponentModel.IBindingList.AllowRemove","System.ComponentModel.IBindingList.ApplySort","System.ComponentModel.IBindingList.Find","System.ComponentModel.IBindingList.IsSorted","System.ComponentModel.IBindingList.ListChanged","System.ComponentModel.IBindingList.add_ListChanged","System.ComponentModel.IBindingList.remove_ListChanged","System.ComponentModel.IBindingList.RemoveIndex","System.ComponentModel.IBindingList.RemoveSort","System.ComponentModel.IBindingList.SortDirection","System.ComponentModel.IBindingList.SortProperty","System.ComponentModel.IBindingList.SupportsChangeNotification","System.ComponentModel.IBindingList.SupportsSearching","System.ComponentModel.IBindingList.SupportsSorting"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.IBindingList","System::ComponentModel::IBindingList","System.ComponentModel.IBindingList.AddIndex","System::ComponentModel::IBindingList::AddIndex","System.ComponentModel.IBindingList.AddNew","System::ComponentModel::IBindingList::AddNew","System.ComponentModel.IBindingList.AllowEdit","System::ComponentModel::IBindingList::AllowEdit","System.ComponentModel.IBindingList.AllowNew","System::ComponentModel::IBindingList::AllowNew","System.ComponentModel.IBindingList.AllowRemove","System::ComponentModel::IBindingList::AllowRemove","System.ComponentModel.IBindingList.ApplySort","System::ComponentModel::IBindingList::ApplySort","System.ComponentModel.IBindingList.Find","System::ComponentModel::IBindingList::Find","System.ComponentModel.IBindingList.IsSorted","System::ComponentModel::IBindingList::IsSorted","System.ComponentModel.IBindingList.ListChanged","System::ComponentModel::IBindingList::ListChanged","System.ComponentModel.IBindingList.RemoveIndex","System::ComponentModel::IBindingList::RemoveIndex","System.ComponentModel.IBindingList.RemoveSort","System::ComponentModel::IBindingList::RemoveSort","System.ComponentModel.IBindingList.SortDirection","System::ComponentModel::IBindingList::SortDirection","System.ComponentModel.IBindingList.SortProperty","System::ComponentModel::IBindingList::SortProperty","System.ComponentModel.IBindingList.SupportsChangeNotification","System::ComponentModel::IBindingList::SupportsChangeNotification","System.ComponentModel.IBindingList.SupportsSearching","System::ComponentModel::IBindingList::SupportsSearching","System.ComponentModel.IBindingList.SupportsSorting","System::ComponentModel::IBindingList::SupportsSorting"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"cfa30e7a-71d9-b1b5-d03c-231a7ee24e51","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel/IBindingList.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IBindingList interface | Microsoft Docs","_op_ogTitle":"IBindingList interface","description":"Provides the features required to support both complex and simple scenarios when binding to a data source.\n","toc_asset_id":"api/_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.IBindingList","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.ibindinglist","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.ibindinglist","fileRelativePath":"api/System.ComponentModel.IBindingList.html"},"themesRelativePathToOutputRoot":"_themes/"}