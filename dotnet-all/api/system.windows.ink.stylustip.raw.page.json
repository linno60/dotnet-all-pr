{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">StylusTip</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the tip to be used to draw a <a class=\"xref\" href=\"system.windows.ink.stroke\" data-linktype=\"relative-path\">Stroke</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum StylusTip</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">StylusTip</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to use two <a class=\"xref\" href=\"system.windows.ink.drawingattributes\" data-linktype=\"relative-path\">DrawingAttributes</a> objects to simulate using a pen and a highlighter on the same <a class=\"xref\" href=\"system.windows.controls.inkcanvas\" data-linktype=\"relative-path\">InkCanvas</a>. The highlighter&#39;s <a class=\"xref\" href=\"system.windows.ink.drawingattributes#System_Windows_Ink_DrawingAttributes_StylusTip_\" data-linktype=\"relative-path\">StylusTip</a> property is set to Rectangle.  </p>\n<p> The example assumes the root element in the &quot;XAML&quot; file is a <a class=\"xref\" href=\"system.windows.controls.dockpanel\" data-linktype=\"relative-path\">DockPanel</a> called <code>root</code>. It also assumes that there is a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> called <code>btnToggleHilighter</code> and that the <a class=\"xref\" href=\"system.windows.controls.primitives.buttonbase#System_Windows_Controls_Primitives_ButtonBase_Click\" data-linktype=\"relative-path\">Click</a> event has been connected to the event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"DrawingAttributes#3\">InkCanvas inkCanvas1 = new InkCanvas();\nDrawingAttributes inkDA;\nDrawingAttributes highlighterDA;\nbool useHighlighter = false;\n\n// Add an InkCanvas to the window, and allow the user to \n// switch between using a green pen and a purple highlighter \n// on the InkCanvas.\nprivate void WindowLoaded(object sender, EventArgs e)\n{\n    inkCanvas1.Background = Brushes.DarkSlateBlue;\n    inkCanvas1.DefaultDrawingAttributes.Color = Colors.SpringGreen;\n\n    root.Children.Add(inkCanvas1);\n\n    // Set up the DrawingAttributes for the pen.\n    inkDA = new DrawingAttributes();\n    inkDA.Color = Colors.SpringGreen;\n    inkDA.Height = 5;\n    inkDA.Width = 5;\n    inkDA.FitToCurve = false;\n\n    // Set up the DrawingAttributes for the highlighter.\n    highlighterDA = new DrawingAttributes();\n    highlighterDA.Color = Colors.Orchid;\n    highlighterDA.IsHighlighter = true;\n    highlighterDA.IgnorePressure = true;\n    highlighterDA.StylusTip = StylusTip.Rectangle;\n    highlighterDA.Height = 30;\n    highlighterDA.Width = 10;\n\n    inkCanvas1.DefaultDrawingAttributes = inkDA;\n}\n\n// Create a button called switchHighlighter and use \n// SwitchHighlighter_Click to handle the Click event.  \n// The useHighlighter variable is a boolean that indicates\n// whether the InkCanvas renders ink as a highlighter.\n\n// Switch between using the &#39;pen&#39; DrawingAttributes and the \n// &#39;highlighter&#39; DrawingAttributes.\nvoid SwitchHighlighter_Click(Object sender, RoutedEventArgs e)\n{\n    useHighlighter = !useHighlighter;\n    \n    if (useHighlighter)\n    {\n        switchHighlighter.Content = &quot;Use Pen&quot;;\n        inkCanvas1.DefaultDrawingAttributes = highlighterDA;\n    }\n    else\n    {\n        switchHighlighter.Content = &quot;Use Highlighter&quot;;\n        inkCanvas1.DefaultDrawingAttributes = inkDA;\n\n    }\n}\n\n</code></pre><pre><code class=\"lang-vb\" name=\"DrawingAttributes#3\">Private WithEvents inkCanvas1 As New InkCanvas()\nPrivate inkDA As DrawingAttributes\nPrivate highlighterDA As DrawingAttributes\nPrivate useHighlighter As Boolean = False\n\n&#39; Add an InkCanvas to the window, and allow the user to \n&#39; switch between using a green pen and a purple highlighter \n&#39; on the InkCanvas.\nPrivate Sub WindowLoaded(ByVal sender As Object, ByVal e As RoutedEventArgs)\n\n    inkCanvas1.Background = Brushes.DarkSlateBlue\n    inkCanvas1.DefaultDrawingAttributes.Color = Colors.SpringGreen\n\n    &#39; Add the InkCanvas to the DockPanel, named root.\n    root.Children.Add(inkCanvas1)\n\n    &#39; Set up the DrawingAttributes for the pen.\n    inkDA = New DrawingAttributes()\n    With inkDA\n        .Color = Colors.SpringGreen\n        .Height = 5\n        .Width = 5\n        .FitToCurve = True\n    End With\n\n    &#39; Set up the DrawingAttributes for the highlighter.\n    highlighterDA = New DrawingAttributes()\n    With highlighterDA\n        .Color = Colors.Orchid\n        .IsHighlighter = True\n        .IgnorePressure = True\n        .StylusTip = StylusTip.Rectangle\n        .Height = 30\n        .Width = 10\n    End With\n\n    inkCanvas1.DefaultDrawingAttributes = inkDA\n\nEnd Sub &#39;WindowLoaded\n\n\n&#39; Create a button called switchHighlighter and use \n&#39; SwitchHighlighter_Click to handle the Click event.  \n&#39; The useHighlighter variable is a boolean that indicates\n&#39; whether the InkCanvas renders ink as a highlighter.\n\n&#39; Switch between using the &#39;pen&#39; DrawingAttributes and the \n&#39; &#39;highlighter&#39; DrawingAttributes when the user clicks on .\nPrivate Sub SwitchHighlighter_Click(ByVal sender As [Object], ByVal e As RoutedEventArgs)\n\n    useHighlighter = Not useHighlighter\n\n    If useHighlighter Then\n        switchHighlighter.Content = &quot;Use Pen&quot;\n        inkCanvas1.DefaultDrawingAttributes = highlighterDA\n    Else\n\n        switchHighlighter.Content = &quot;Use Highlighter&quot;\n        inkCanvas1.DefaultDrawingAttributes = inkDA\n    End If\n\nEnd Sub &#39;SwitchHighlighter_Click\n\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>You can specify the shape of the tip that is used to draw <a class=\"xref\" href=\"system.windows.ink.stroke\" data-linktype=\"relative-path\">Stroke</a> objects by setting the <a class=\"xref\" href=\"system.windows.ink.drawingattributes#System_Windows_Ink_DrawingAttributes_StylusTip_\" data-linktype=\"relative-path\">StylusTip</a> property.  </p>\n<p><a name=\"xamlTextUsage_StylusTip\"></a>   </p>\n<h3 class=\"accented\" id=\"xaml-text-usage\">XAML Text Usage</h3>\n<p> This class is not typically used in XAML.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Windows_Ink_StylusTip_Ellipse\">\r\n      \t\t\t<span class=\"lang-csharp\">Ellipse</span>\r\n      \t</td>\r\n      \t<td><p>Represents an ellipse-shaped tip.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Ink_StylusTip_Rectangle\">\r\n      \t\t\t<span class=\"lang-csharp\">Rectangle</span>\r\n      \t</td>\r\n      \t<td><p>Represents a rectangle-shaped tip.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Ink.StylusTip.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Ink.StylusTip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Ink.StylusTip.Ellipse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Ink.StylusTip.Rectangle\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"472b9f26-c8fa-1ce0-25bc-a00f26af7174\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the tip to be used to draw a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.ink/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Ink.StylusTip\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Ink.StylusTip.yml","open_to_public_contributors":false,"api_name":["System.Windows.Ink.StylusTip","System.Windows.Ink.StylusTip.Ellipse","System.Windows.Ink.StylusTip.Rectangle"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Ink.StylusTip","System::Windows::Ink::StylusTip","System.Windows.Ink.StylusTip.Ellipse","System::Windows::Ink::StylusTip::Ellipse","System.Windows.Ink.StylusTip.Rectangle","System::Windows::Ink::StylusTip::Rectangle"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"472b9f26-c8fa-1ce0-25bc-a00f26af7174","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Ink/StylusTip.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StylusTip enum | Microsoft Docs","_op_ogTitle":"StylusTip enum","description":"Specifies the tip to be used to draw a .\n","toc_asset_id":"api/_splitted/System.Windows.Ink/toc.json","toc_rel":"_splitted/System.Windows.Ink/toc.json","source_url":"","ms.assetid":"System.Windows.Ink.StylusTip","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.ink.stylustip","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.ink.stylustip","fileRelativePath":"api/System.Windows.Ink.StylusTip.html"},"themesRelativePathToOutputRoot":"_themes/"}