{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IWeakEventListener</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IWeakEventListener</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> (a dispatcher) forwards an event by calling the <a class=\"xref\" href=\"system.windows.iweakeventlistener#System_Windows_IWeakEventListener_ReceiveWeakEvent_\" data-linktype=\"relative-path\">ReceiveWeakEvent</a> method on classes that implement this interface, and that have been added as listeners by calling <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> methods beforehand.  </p>\n<p> The principal reason for following the WeakEvent pattern is when the event source has an object lifetime that is potentially independent of the event listeners. Using the central event dispatching of a <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> enables the handlers for listeners to be garbage collected (or manually purged) even if the source object lifetime extends beyond the listeners. By contrast, a normal event hookup using <code>+=</code> or equivalent language-specific event syntax causes the potentially still-connected source to hold a strong reference to the handlers. This keeps the listener references from being garbage collected in a timely fashion.  </p>\n<p> One common situation where the relationships between sources and listeners suggests the use of this pattern is the handling of update events coming from sources for data bindings.  </p>\n<p> You can use the WeakEvent pattern to listen for events that are external to your application. You only need to define a <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> for it, provide listening behavior in <a class=\"xref\" href=\"system.windows.iweakeventlistener#System_Windows_IWeakEventListener_ReceiveWeakEvent_\" data-linktype=\"relative-path\">ReceiveWeakEvent</a>, and use the <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> to attach the handler references rather than <code>+=</code>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_IWeakEventListener_ReceiveWeakEvent_System_Type_System_Object_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReceiveWeakEvent(Type,Object,EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Receives events from the centralized event manager.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>managerType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> calling this method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sender</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Object that originated the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the listener handled the event. It is considered an error by the <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return <code>false</code> if it receives an event that it does not recognize or handle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.IWeakEventListener.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.IWeakEventListener\">\r\n<meta name=\"APIName\" content=\"System.Windows.IWeakEventListener.ReceiveWeakEvent\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-23 08:04 AM\">\r\n<meta name=\"document_id\" content=\"b53ee0ef-fd20-5c5d-920d-b0dbeffb1584\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.IWeakEventListener\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.IWeakEventListener.yml","open_to_public_contributors":false,"api_name":["System.Windows.IWeakEventListener","System.Windows.IWeakEventListener.ReceiveWeakEvent"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.IWeakEventListener","System::Windows::IWeakEventListener","System.Windows.IWeakEventListener.ReceiveWeakEvent","System::Windows::IWeakEventListener::ReceiveWeakEvent"],"dev_langs":["csharp"],"updated_at":"2017-03-23 08:04 AM","document_id":"b53ee0ef-fd20-5c5d-920d-b0dbeffb1584","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows/IWeakEventListener.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IWeakEventListener interface | Microsoft Docs","_op_ogTitle":"IWeakEventListener interface","description":"Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a .\n","toc_asset_id":"api/_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.IWeakEventListener","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.iweakeventlistener","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.iweakeventlistener","fileRelativePath":"api/System.Windows.IWeakEventListener.html"},"themesRelativePathToOutputRoot":"_themes/"}