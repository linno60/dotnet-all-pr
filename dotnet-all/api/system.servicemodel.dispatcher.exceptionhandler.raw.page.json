{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ExceptionHandler</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Extend the ExceptionHandler class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class ExceptionHandler</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">ExceptionHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows an implementation of the ExceptionHandler abstract class that overrides the <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler#System_ServiceModel_Dispatcher_ExceptionHandler_HandleException_\" data-linktype=\"relative-path\">HandleException</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UEExceptionHandler#0\">using System;\nusing System.ServiceModel.Dispatcher; // ExceptionHandler\n\nnamespace CS\n{\n    public class MyExceptionHandler: ExceptionHandler\n    {\n            // HandleException method override gives control to \n            // your code.\n            public override bool HandleException ( Exception ex )\n            {\n                // This method contains logic to decide whether \n                // the exception is serious enough\n                // to terminate the process.\n                return ShouldTerminateProcess (ex);\n            }\n\n            public bool ShouldTerminateProcess (Exception ex)\n            {\n                // Write your logic here.\n                return  true;\n            }\n    } \n  \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UEExceptionHandler#0\">\n\nImports System\nImports System.ServiceModel.Dispatcher &#39; ExceptionHandler\n\nNamespace CS\n\tPublic Class MyExceptionHandler\n\t\tInherits ExceptionHandler\n\t\t\t&#39; HandleException method override gives control to \n\t\t\t&#39; your code.\n\t\t\tPublic Overrides Function HandleException(ByVal ex As Exception) As Boolean\n\t\t\t\t&#39; This method contains logic to decide whether \n\t\t\t\t&#39; the exception is serious enough\n\t\t\t\t&#39; to terminate the process.\n\t\t\t\tReturn ShouldTerminateProcess (ex)\n\t\t\tEnd Function\n\n\t\t\tPublic Function ShouldTerminateProcess(ByVal ex As Exception) As Boolean\n\t\t\t\t&#39; Write your logic here.\n\t\t\t\tReturn True\n\t\t\tEnd Function\n\tEnd Class\n\n</code></pre><p> The following code example shows how to enable the custom <code>MyExceptionHandler</code> for unhandled exceptions that occur within the WCF runtime.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UEExceptionHandler#1\">    static void Main(string[] args)\n    {\n        // Create an instance of the MyExceptionHander class.\n        MyExceptionHandler thisExceptionHandler =\n            new MyExceptionHandler();\n\n        // Enable the custom handler by setting \n        //   AsynchronousThreadExceptionHandler property\n        //   to this object.\n        ExceptionHandler.AsynchronousThreadExceptionHandler = \n            thisExceptionHandler;\n\n        // After the handler is set, write your call to \n        // System.ServiceModel.ICommunication.Open here\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"S_UEExceptionHandler#1\">    Sub Main(ByVal args() As String)\n        &#39; Create an instance of the MyExceptionHander class.\n        Dim thisExceptionHandler As New MyExceptionHandler()\n\n        &#39; Enable the custom handler by setting \n        &#39;   AsynchronousThreadExceptionHandler property\n        &#39;   to this object.\n        ExceptionHandler.AsynchronousThreadExceptionHandler = thisExceptionHandler\n\n        &#39; After the handler is set, write your call to \n        &#39; System.ServiceModel.ICommunication.Open here\n    End Sub\nEnd Module\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Extend the ExceptionHandler class and override the <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler#System_ServiceModel_Dispatcher_ExceptionHandler_HandleException_\" data-linktype=\"relative-path\">HandleException</a> method to determine whether an exception should terminate the application. Then create a new instance of your custom ExceptionHandler class and assign it to the static <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler#System_ServiceModel_Dispatcher_ExceptionHandler_AsynchronousThreadExceptionHandler_\" data-linktype=\"relative-path\">AsynchronousThreadExceptionHandler</a> or <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler#System_ServiceModel_Dispatcher_ExceptionHandler_TransportExceptionHandler_\" data-linktype=\"relative-path\">TransportExceptionHandler</a> property prior to creating WCF clients or services.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_ExceptionHandler__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExceptionHandler()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ExceptionHandler ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_ExceptionHandler_AlwaysHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AlwaysHandle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an instance of <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> that handles all exceptions.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> object that returns <code>true</code> for all exceptions.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_ExceptionHandler_AsynchronousThreadExceptionHandler\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AsynchronousThreadExceptionHandler</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the current <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> implementation for the application domain.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Assign a custom <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> object that receives unhandled exceptions that occur on asynchronous Windows Communication Foundation (WCF) threads.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default, the AsynchronousThreadExceptionHandler property is <code>null</code>, and unhandled exceptions on asynchronous WCF threads terminate the application.  Set this property to an <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> object to receive and react to these exceptions.  </p>\n<p> If an unhandled exception occurs on an asynchronous WCF thread and reaches this handler, the state of the application domain may be compromised.  <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler#System_ServiceModel_Dispatcher_ExceptionHandler_HandleException_\" data-linktype=\"relative-path\">HandleException</a> should not return <code>true</code> for these exceptions.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_ExceptionHandler_TransportExceptionHandler\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TransportExceptionHandler</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the current transport <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> implementation for the application domain.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A custom <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> object that receives unhandled exceptions that occur within the global Windows Communication Foundation (WCF) transports.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default, the TransportExceptionHandler property is set to the value of <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler#System_ServiceModel_Dispatcher_ExceptionHandler_AlwaysHandle_\" data-linktype=\"relative-path\">AlwaysHandle</a>, causing unhandled exceptions within WCF transports to be ignored.  Set this property to an instance of <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a> to receive and react to these exceptions.  </p>\n<p> If an unhandled exception occurs within a global WCF transport and reaches this handler, there is a possibility that the state of the application domain is compromised. <a class=\"xref\" href=\"system.servicemodel.dispatcher.exceptionhandler#System_ServiceModel_Dispatcher_ExceptionHandler_HandleException_\" data-linktype=\"relative-path\">HandleException</a> can return <code>false</code> for these exceptions to cause the application to be terminated.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_ExceptionHandler_HandleException_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HandleException(Exception)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, returns <code>true</code> if the exception has been handled, or <code>false</code> if the exception should be rethrown and the application terminated.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract bool HandleException (Exception exception);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>exception</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The exception the occurred within the Windows Communication Foundation (WCF) runtime and which may terminate the application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the exception has been handled; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The HandleException property returns <code>true</code> if the exception has been handled. If it returns <code>false</code> or throws a different exception, the original exception is rethrown.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Dispatcher.ExceptionHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.ExceptionHandler\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.ExceptionHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.ExceptionHandler.HandleException\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"d22e650e-8e1b-3989-57f1-2ac3233cc4da\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Extend the ExceptionHandler class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.servicemodel.dispatcher/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Dispatcher.ExceptionHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Dispatcher.ExceptionHandler.yml","open_to_public_contributors":false,"api_name":["System.ServiceModel.Dispatcher.ExceptionHandler","System.ServiceModel.Dispatcher.ExceptionHandler..ctor","System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle","System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler","System.ServiceModel.Dispatcher.ExceptionHandler.HandleException","System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Dispatcher.ExceptionHandler","System::ServiceModel::Dispatcher::ExceptionHandler","System.ServiceModel.Dispatcher.ExceptionHandler.#ctor","System::ServiceModel::Dispatcher::ExceptionHandler::#ctor","System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle","System::ServiceModel::Dispatcher::ExceptionHandler::AlwaysHandle","System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler","System::ServiceModel::Dispatcher::ExceptionHandler::AsynchronousThreadExceptionHandler","System.ServiceModel.Dispatcher.ExceptionHandler.HandleException","System::ServiceModel::Dispatcher::ExceptionHandler::HandleException","System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler","System::ServiceModel::Dispatcher::ExceptionHandler::TransportExceptionHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"d22e650e-8e1b-3989-57f1-2ac3233cc4da","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ExceptionHandler.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ExceptionHandler class | Microsoft Docs","_op_ogTitle":"ExceptionHandler class","description":"Extend the ExceptionHandler class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.\n","toc_asset_id":"api/_splitted/System.ServiceModel.Dispatcher/toc.json","toc_rel":"_splitted/System.ServiceModel.Dispatcher/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Dispatcher.ExceptionHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.dispatcher.exceptionhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.dispatcher.exceptionhandler","fileRelativePath":"api/System.ServiceModel.Dispatcher.ExceptionHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}