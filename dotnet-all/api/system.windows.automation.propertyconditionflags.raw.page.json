{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">PropertyConditionFlags</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Contains values that specify how a property value is tested in a <a class=\"xref\" href=\"system.windows.automation.propertycondition\" data-linktype=\"relative-path\">PropertyCondition</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\npublic enum PropertyConditionFlags</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">PropertyConditionFlags</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.flagsattribute\" title=\"System.FlagsAttribute\" data-linktype=\"relative-path\">FlagsAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>In the following example, IgnoreCase is set in a <a class=\"xref\" href=\"system.windows.automation.propertycondition\" data-linktype=\"relative-path\">PropertyCondition</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#110\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Find a UI Automation child element by ID.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;controlName&quot;&gt;Name of the control, such as &quot;button1&quot;&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;rootElement&quot;&gt;Parent element, such as an application window, or the \n&#39;&#39;&#39; AutomationElement.RootElement when searching for the application window.&lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;The UI Automation element.&lt;/returns&gt;\nPrivate Function FindChildElement(ByVal controlName As String, ByVal rootElement As AutomationElement) _\n    As AutomationElement\n    If controlName = &quot;&quot; OrElse rootElement Is Nothing Then\n        Throw New ArgumentException(&quot;Argument cannot be null or empty.&quot;)\n    End If\n    &#39; Set a property condition that will be used to find the main form of the\n    &#39; target application. In the case of a WinForms control, the name of the control\n    &#39; is also the AutomationId of the element representing the control.\n    Dim propCondition As New PropertyCondition(AutomationElement.AutomationIdProperty, _\n        controlName, PropertyConditionFlags.IgnoreCase)\n\n    &#39; Find the element.\n    Return rootElement.FindFirst(TreeScope.Element Or TreeScope.Children, propCondition)\n\nEnd Function &#39;FindChildElement\n\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#110\">/// &lt;summary&gt;\n/// Find a UI Automation child element by ID.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;controlName&quot;&gt;Name of the control, such as &quot;button1&quot;&lt;/param&gt;\n/// &lt;param name=&quot;parentElement&quot;&gt;Parent element, such as an application window, or the \n/// AutomationElement.RootElement when searching for the application window.&lt;/param&gt;\n/// &lt;returns&gt;The UI Automation element.&lt;/returns&gt;\nprivate AutomationElement FindChildElement(String controlName, AutomationElement rootElement)\n{\n    if ((controlName == &quot;&quot;) || (rootElement == null))\n    {\n        throw new ArgumentException(&quot;Argument cannot be null or empty.&quot;);\n    }\n    // Set a property condition that will be used to find the main form of the\n    // target application. In the case of a WinForms control, the name of the control\n    // is also the AutomationId of the element representing the control.\n    Condition propCondition = new PropertyCondition(\n        AutomationElement.AutomationIdProperty, controlName, PropertyConditionFlags.IgnoreCase);\n\n    // Find the element.\n    return rootElement.FindFirst(TreeScope.Element | TreeScope.Children, propCondition);\n}\n</code></pre>\r\n  \r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Windows_Automation_PropertyConditionFlags_IgnoreCase\">\r\n      \t\t\t<span class=\"lang-csharp\">IgnoreCase</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that comparison with a string property value is not case-sensitive.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Automation_PropertyConditionFlags_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that the property value is tested using default behavior (case-sensitive comparison for strings).</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Automation.PropertyConditionFlags.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.PropertyConditionFlags\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.PropertyConditionFlags.IgnoreCase\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.PropertyConditionFlags.None\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"3c882ac5-cf95-02c2-c71a-4103232d396f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains values that specify how a property value is tested in a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.automation/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.PropertyConditionFlags\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Automation.PropertyConditionFlags.yml","open_to_public_contributors":false,"api_name":["System.Windows.Automation.PropertyConditionFlags","System.Windows.Automation.PropertyConditionFlags.IgnoreCase","System.Windows.Automation.PropertyConditionFlags.None"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.PropertyConditionFlags","System::Windows::Automation::PropertyConditionFlags","System.Windows.Automation.PropertyConditionFlags.IgnoreCase","System::Windows::Automation::PropertyConditionFlags::IgnoreCase","System.Windows.Automation.PropertyConditionFlags.None","System::Windows::Automation::PropertyConditionFlags::None"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"3c882ac5-cf95-02c2-c71a-4103232d396f","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Automation/PropertyConditionFlags.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PropertyConditionFlags enum | Microsoft Docs","_op_ogTitle":"PropertyConditionFlags enum","description":"Contains values that specify how a property value is tested in a .\n","toc_asset_id":"api/_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.PropertyConditionFlags","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.automation.propertyconditionflags","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.automation.propertyconditionflags","fileRelativePath":"api/System.Windows.Automation.PropertyConditionFlags.html"},"themesRelativePathToOutputRoot":"_themes/"}