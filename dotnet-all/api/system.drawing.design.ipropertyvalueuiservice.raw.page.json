{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IPropertyValueUIService</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface to manage the images, ToolTips, and event handlers for the properties of a component displayed in a property browser.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IPropertyValueUIService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example creates a component that obtains an instance of the IPropertyValueUIService interface and adds a <a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a> to the service. The handler provides a <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> object for any properties of the component named <code>HorizontalMargin</code> or <code>VerticalMargin</code>. The <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked. The image and the ToolTip are displayed in a <a class=\"xref\" href=\"system.windows.forms.propertygrid\" data-linktype=\"relative-path\">PropertyGrid</a> when the grid is showing these properties of the component.  </p>\n<pre><code class=\"lang-cpp\" name=\"IPropertyValueUIServiceExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Drawing::Design;\nusing namespace System::IO;\nusing namespace System::Runtime::Serialization;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\n\nnamespace PropertyValueUIServiceExample\n{\n\n   // This component obtains the IPropertyValueUIService and adds a\n   // PropertyValueUIHandler that provides PropertyValueUIItem objects\n   // which provide an image, ToolTip, and invoke event handler to\n   // any properties named horizontalMargin and verticalMargin,\n   // such as the example integer properties on this component.\n   public ref class PropertyUIComponent: public System::ComponentModel::Component\n   {\n   public:\n\n      property int horizontalMargin \n      {\n         // Example property for which to provide a PropertyValueUIItem.\n         int get()\n         {\n            return hMargin;\n         }\n\n         void set( int value )\n         {\n            hMargin = value;\n         }\n\n      }\n\n      property int verticalMargin \n      {\n         // Example property for which to provide a PropertyValueUIItem.\n         int get()\n         {\n            return vMargin;\n         }\n\n         void set( int value )\n         {\n            vMargin = value;\n         }\n\n      }\n\n   private:\n\n      // Field storing the value of the horizontalMargin property.\n      int hMargin;\n\n      // Field storing the value of the verticalMargin property.\n      int vMargin;\n\n      // Base64-encoded serialized image data for image icon.\n      String^ imageBlob1;\n\n   public:\n\n      // Constructor.\n      PropertyUIComponent( System::ComponentModel::IContainer^ container )\n      {\n         imageBlob1 = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuMzMwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9gAAAAJCTfYAAAAAAAAANgAAACgAAAAIAAAACAAAAAEAGAAAAAAAAAAAAMQOAADEDgAAAAAAAAAAAAD///////////////////////////////////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////////////////////////////////8L&quot;;\n         if ( container != nullptr )\n                  container-&gt;Add( this );\n\n         hMargin = 0;\n         vMargin = 0;\n      }\n\n\n      // Default component constructor that specifies no container.\n      PropertyUIComponent()\n      {\n         imageBlob1 = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuMzMwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9gAAAAJCTfYAAAAAAAAANgAAACgAAAAIAAAACAAAAAEAGAAAAAAAAAAAAMQOAADEDgAAAAAAAAAAAAD///////////////////////////////////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////////////////////////////////8L&quot;;\n         hMargin = 0;\n         vMargin = 0;\n      }\n\n\n   private:\n\n      // PropertyValueUIHandler delegate that provides PropertyValueUIItem\n      // objects to any properties named horizontalMargin or verticalMargin.\n      void marginPropertyValueUIHandler( System::ComponentModel::ITypeDescriptorContext^ /*context*/, System::ComponentModel::PropertyDescriptor^ propDesc, ArrayList^ itemList )\n      {\n         // A PropertyValueUIHandler added to the IPropertyValueUIService\n         // is queried once for each property of a component and passed\n         // a PropertyDescriptor that represents the characteristics of\n         // the property when the Properties window is set to a new\n         // component. A PropertyValueUIHandler can determine whether\n         // to add a PropertyValueUIItem for the object to its ValueUIItem\n         // list depending on the values of the PropertyDescriptor.\n         if ( propDesc-&gt;DisplayName-&gt;Equals( &quot;horizontalMargin&quot; ) )\n         {\n            Image^ img = DeserializeFromBase64Text( imageBlob1 );\n            itemList-&gt;Add( gcnew PropertyValueUIItem( img,gcnew PropertyValueUIItemInvokeHandler( this, &amp;PropertyUIComponent::marginInvoke ),&quot;Test ToolTip&quot; ) );\n         }\n\n         if ( propDesc-&gt;DisplayName-&gt;Equals( &quot;verticalMargin&quot; ) )\n         {\n            Image^ img = DeserializeFromBase64Text( imageBlob1 );\n            img-&gt;RotateFlip( RotateFlipType::Rotate90FlipNone );\n            itemList-&gt;Add( gcnew PropertyValueUIItem( img,gcnew PropertyValueUIItemInvokeHandler( this, &amp;PropertyUIComponent::marginInvoke ),&quot;Test ToolTip&quot; ) );\n         }\n      }\n\n      // Invoke handler associated with the PropertyValueUIItem objects\n      // provided by the marginPropertyValueUIHandler.\n      void marginInvoke( System::ComponentModel::ITypeDescriptorContext^ /*context*/, System::ComponentModel::PropertyDescriptor^ /*propDesc*/, PropertyValueUIItem^ /*item*/ )\n      {\n         MessageBox::Show( &quot;Test invoke message box&quot; );\n      }\n\n   public:\n\n      property System::ComponentModel::ISite^ Site \n      {\n         // Component::Site  to add the marginPropertyValueUIHandler\n         // when the component is sited, and to remove it when the site is\n         // set to 0.\n         virtual System::ComponentModel::ISite^ get() override\n         {\n            return __super::Site;\n         }\n\n         virtual void set( System::ComponentModel::ISite^ value ) override\n         {\n            if ( value != nullptr )\n            {\n               __super::Site = value;\n               IPropertyValueUIService^ uiService = dynamic_cast&lt;IPropertyValueUIService^&gt;(this-&gt;GetService( IPropertyValueUIService::typeid ));\n               if ( uiService != nullptr )\n                              uiService-&gt;AddPropertyValueUIHandler( gcnew PropertyValueUIHandler( this, &amp;PropertyUIComponent::marginPropertyValueUIHandler ) );\n            }\n            else\n            {\n               IPropertyValueUIService^ uiService = dynamic_cast&lt;IPropertyValueUIService^&gt;(this-&gt;GetService( IPropertyValueUIService::typeid ));\n               if ( uiService != nullptr )\n                              uiService-&gt;RemovePropertyValueUIHandler( gcnew PropertyValueUIHandler( this, &amp;PropertyUIComponent::marginPropertyValueUIHandler ) );\n               __super::Site = value;\n            }\n         }\n      }\n\n   private:\n\n      // This method can be used to retrieve an Image from a block\n      // of Base64-encoded text.\n      Image^ DeserializeFromBase64Text( String^ text )\n      {\n         Image^ img = nullptr;\n         array&lt;Byte&gt;^memBytes = Convert::FromBase64String( text );\n         IFormatter^ formatter = gcnew BinaryFormatter;\n         MemoryStream^ stream = gcnew MemoryStream( memBytes );\n         img = dynamic_cast&lt;Image^&gt;(formatter-&gt;Deserialize( stream ));\n         stream-&gt;Close();\n         return img;\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"IPropertyValueUIServiceExample#1\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Drawing.Design;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\nnamespace PropertyValueUIServiceExample\n{\n    // This component obtains the IPropertyValueUIService and adds a\n    // PropertyValueUIHandler that provides PropertyValueUIItem objects\n    // which provide an image, ToolTip, and invoke event handler to\n    // any properties named HorizontalMargin and VerticalMargin, \n    // such as the example integer properties on this component.    \n    public class PropertyUIComponent : System.ComponentModel.Component\n    {\n        // Example property for which to provide a PropertyValueUIItem.\n        public int HorizontalMargin \n        {\n            get\n            {\n                return hMargin;\n            }\n            set\n            {\n                hMargin = value;\n            }\n        }\n        // Example property for which to provide a PropertyValueUIItem.\n        public int VerticalMargin\n        {\n            get\n            {\n                return vMargin;\n            }\n            set\n            {\n                vMargin = value;\n            }\n        }\n\n        // Field storing the value of the HorizontalMargin property.\n        private int hMargin;\n\n        // Field storing the value of the VerticalMargin property.\n        private int vMargin;        \n\n        // Base64-encoded serialized image data for image icon.\n        private string imageBlob1 = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuMzMwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9gAAAAJCTfYAAAAAAAAANgAAACgAAAAIAAAACAAAAAEAGAAAAAAAAAAAAMQOAADEDgAAAAAAAAAAAAD///////////////////////////////////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////////////////////////////////8L&quot;;\n                \n        // Constructor.\n        public PropertyUIComponent(System.ComponentModel.IContainer container)\n        {\n            if( container != null )\n                container.Add(this);\n            hMargin = 0;\t\t\n            vMargin = 0;\n        }\n\n        // Default component constructor that specifies no container.\n        public PropertyUIComponent() : this(null)\n        {}\n\n        // PropertyValueUIHandler delegate that provides PropertyValueUIItem\n        // objects to any properties named HorizontalMargin or VerticalMargin.\n        private void marginPropertyValueUIHandler(System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc, ArrayList itemList)\n        {\n            // A PropertyValueUIHandler added to the IPropertyValueUIService\n            // is queried once for each property of a component and passed\n            // a PropertyDescriptor that represents the characteristics of \n            // the property when the Properties window is set to a new \n            // component. A PropertyValueUIHandler can determine whether \n            // to add a PropertyValueUIItem for the object to its ValueUIItem \n            // list depending on the values of the PropertyDescriptor.\n            if( propDesc.DisplayName.Equals( &quot;HorizontalMargin&quot; ) )\n            {\n                Image img = DeserializeFromBase64Text(imageBlob1);\n                itemList.Add( new PropertyValueUIItem( img, new PropertyValueUIItemInvokeHandler(this.marginInvoke), &quot;Test ToolTip&quot;) );\n            }\n            if( propDesc.DisplayName.Equals( &quot;VerticalMargin&quot; ) )\n            {\n                Image img = DeserializeFromBase64Text(imageBlob1);\n                img.RotateFlip(RotateFlipType.Rotate90FlipNone);\n                itemList.Add( new PropertyValueUIItem( img, new PropertyValueUIItemInvokeHandler(this.marginInvoke), &quot;Test ToolTip&quot;) );\n            }\n        }\n\n        // Invoke handler associated with the PropertyValueUIItem objects \n        // provided by the marginPropertyValueUIHandler.\n        private void marginInvoke(System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc, PropertyValueUIItem item)\n        {\n            MessageBox.Show(&quot;Test invoke message box&quot;);\n        }\n\n        // Component.Site override to add the marginPropertyValueUIHandler\n        // when the component is sited, and to remove it when the site is \n        // set to null.\n        public override System.ComponentModel.ISite Site\n        {\n            get\n            {\n                return base.Site;\n            }\n            set\n            {                \n                if( value != null )\n                {\n                    base.Site = value;\n                    IPropertyValueUIService uiService = (IPropertyValueUIService)this.GetService(typeof(IPropertyValueUIService));\n                    if( uiService != null )                    \n                        uiService.AddPropertyValueUIHandler( new PropertyValueUIHandler(this.marginPropertyValueUIHandler) );                                        \n                }\n                else\n                {\n                    IPropertyValueUIService uiService = (IPropertyValueUIService)this.GetService(typeof(IPropertyValueUIService));\n                    if( uiService != null )                    \n                        uiService.RemovePropertyValueUIHandler( new PropertyValueUIHandler(this.marginPropertyValueUIHandler) );                                        \n                    base.Site = value;\n                }\n            }\n        }\n\n        // This method can be used to retrieve an Image from a block \n        // of Base64-encoded text.\n        private Image DeserializeFromBase64Text(string text)\n        {\n            Image img = null;\n            byte[] memBytes = Convert.FromBase64String(text);\n            IFormatter formatter = new BinaryFormatter();\n            MemoryStream stream = new MemoryStream(memBytes);\n            img = (Image)formatter.Deserialize(stream);\n            stream.Close();\n            return img;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IPropertyValueUIServiceExample#1\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Drawing.Design\nImports System.IO\nImports System.Runtime.Serialization\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n&#39; This component obtains the IPropertyValueUIService and adds a\n&#39; PropertyValueUIHandler that provides PropertyValueUIItem objects\n&#39; which provide an image, tooltip and invoke event handler to\n&#39; any properties named HorizontalMargin and VerticalMargin, \n&#39; such as the example integer properties on this component.    \nPublic Class PropertyUIComponent\n    Inherits System.ComponentModel.Component\n\n    &#39; Example property for which to provide PropertyValueUIItem.\n    Public Property HorizontalMargin() As Integer\n        Get\n            Return hMargin\n        End Get\n        Set(ByVal Value As Integer)\n            hMargin = Value\n        End Set\n    End Property\n\n    &#39; Example property for which to provide PropertyValueUIItem.       \n    Public Property VerticalMargin() As Integer\n        Get\n            Return vMargin\n        End Get\n        Set(ByVal Value As Integer)\n            vMargin = Value\n        End Set\n    End Property\n\n    &#39; Field storing the value of the HorizontalMargin property\n    Private hMargin As Integer\n\n    &#39; Field storing the value of the VerticalMargin property\n    Private vMargin As Integer\n\n    &#39; Base64-encoded serialized image data for image icon.\n    Private imageBlob1 As String = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuMzMwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9gAAAAJCTfYAAAAAAAAANgAAACgAAAAIAAAACAAAAAEAGAAAAAAAAAAAAMQOAADEDgAAAAAAAAAAAAD///////////////////////////////////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///8AAAAAAAD///8AAAD///////8AAAD///////////////8AAAD///////8AAAD///////////////8AAAD///////////////////////////////////8L&quot;\n\n    &#39; Constructor.\n    Public Sub New(ByVal container As System.ComponentModel.IContainer)\n        If (container IsNot Nothing) Then\n            container.Add(Me)\n        End If\n        hMargin = 0\n        vMargin = 0\n    End Sub\n\n    &#39; Default component constructor that specifies no container.\n    Public Sub New()\n        MyClass.New(Nothing)\n    End Sub\n\n    &#39; PropertyValueUIHandler delegate that provides PropertyValueUIItem\n    &#39; objects to any properties named HorizontalMargin or VerticalMargin.\n    Private Sub marginPropertyValueUIHandler(ByVal context As System.ComponentModel.ITypeDescriptorContext, ByVal propDesc As System.ComponentModel.PropertyDescriptor, ByVal itemList As ArrayList)\n        &#39; A PropertyValueUIHandler added to the IPropertyValueUIService\n        &#39; is queried once for each property of a component and passed\n        &#39; a PropertyDescriptor that represents the characteristics of \n        &#39; the property when the Properties window is set to a new \n        &#39; component. A PropertyValueUIHandler can determine whether \n        &#39; to add a PropertyValueUIItem for the object to its ValueUIItem \n        &#39; list depending on the values of the PropertyDescriptor.\n        If propDesc.DisplayName.Equals(&quot;HorizontalMargin&quot;) Then\n            Dim img As Image = DeserializeFromBase64Text(imageBlob1)\n            itemList.Add(New PropertyValueUIItem(img, New PropertyValueUIItemInvokeHandler(AddressOf Me.marginInvoke), &quot;Test ToolTip&quot;))\n        End If\n        If propDesc.DisplayName.Equals(&quot;VerticalMargin&quot;) Then\n            Dim img As Image = DeserializeFromBase64Text(imageBlob1)\n            img.RotateFlip(RotateFlipType.Rotate90FlipNone)\n            itemList.Add(New PropertyValueUIItem(img, New PropertyValueUIItemInvokeHandler(AddressOf Me.marginInvoke), &quot;Test ToolTip&quot;))\n        End If\n    End Sub\n\n    &#39; Invoke handler associated with the PropertyValueUIItem objects \n    &#39; provided by the marginPropertyValueUIHandler.\n    Private Sub marginInvoke(ByVal context As System.ComponentModel.ITypeDescriptorContext, ByVal propDesc As System.ComponentModel.PropertyDescriptor, ByVal item As PropertyValueUIItem)\n        MessageBox.Show(&quot;Test invoke message box&quot;)\n    End Sub\n\n    &#39; Component.Site override to add the marginPropertyValueUIHandler\n    &#39; when the component is sited, and to remove it when the site is \n    &#39; set to null.\n    Public Overrides Property Site() As System.ComponentModel.ISite\n        Get\n            Return MyBase.Site\n        End Get\n        Set(ByVal Value As System.ComponentModel.ISite)\n            If (Value IsNot Nothing) Then\n                MyBase.Site = Value\n                Dim uiService As IPropertyValueUIService = CType(Me.GetService(GetType(IPropertyValueUIService)), IPropertyValueUIService)\n                If (uiService IsNot Nothing) Then\n                    uiService.AddPropertyValueUIHandler(New PropertyValueUIHandler(AddressOf Me.marginPropertyValueUIHandler))\n                End If\n            Else\n                Dim uiService As IPropertyValueUIService = CType(Me.GetService(GetType(IPropertyValueUIService)), IPropertyValueUIService)\n                If (uiService IsNot Nothing) Then\n                    uiService.RemovePropertyValueUIHandler(New PropertyValueUIHandler(AddressOf Me.marginPropertyValueUIHandler))\n                End If\n                MyBase.Site = Value\n            End If\n        End Set\n    End Property\n\n    &#39; This method can be used to retrieve an Image from a block \n    &#39; of Base64-encoded text.\n    Private Function DeserializeFromBase64Text(ByVal [text] As String) As Image\n        Dim img As Image = Nothing\n        Dim memBytes As Byte() = Convert.FromBase64String([text])\n        Dim formatter As New BinaryFormatter()\n        Dim stream As New MemoryStream(memBytes)\n        img = CType(formatter.Deserialize(stream), Image)\n        stream.Close()\n        Return img\n    End Function\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A component can use the IPropertyValueUIService interface to provide <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> objects for any properties of the component. A <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> associated with a property can provide an image, a ToolTip and an event handler for the event that is raised when the image associated with the property is clicked.  </p>\n<p> The IPropertyValueUIService interface provides methods to add, remove, and retrieve <a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a> delegates to or from an internal list. When the properties of a component are displayed in a property browser, each <a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a> in the list is given an opportunity to provide a <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> for each property of the component.  </p>\n<p> When a property browser is set to display the properties of an object, it calls the <a class=\"xref\" href=\"system.drawing.design.ipropertyvalueuiservice#System_Drawing_Design_IPropertyValueUIService_GetPropertyUIValueItems_\" data-linktype=\"relative-path\">GetPropertyUIValueItems</a> method of this interface for each property of the component, passing a <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> that represents the property. The <a class=\"xref\" href=\"system.drawing.design.ipropertyvalueuiservice#System_Drawing_Design_IPropertyValueUIService_GetPropertyUIValueItems_\" data-linktype=\"relative-path\">GetPropertyUIValueItems</a> method calls each <a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a> that has been added to the service. Each <a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a> can add a <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> to the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> parameter passed in the <code>valueUIItemList</code> parameter to supply UI items for the property represented by the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> passed in the <code>propDesc</code> parameter.  </p>\n<p> A <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> can contain an image to display next to the property name, a ToolTip string, and an event handler to invoke when an image associated with the property is double-clicked.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_Design_IPropertyValueUIService_AddPropertyValueUIHandler_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_Design_IPropertyValueUIService_AddPropertyValueUIHandler_System_Drawing_Design_PropertyValueUIHandler_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddPropertyValueUIHandler(PropertyValueUIHandler)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the specified <a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a> to this service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>newHandler</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property value UI handler to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When <a class=\"xref\" href=\"system.drawing.design.ipropertyvalueuiservice#System_Drawing_Design_IPropertyValueUIService_GetPropertyUIValueItems_\" data-linktype=\"relative-path\">GetPropertyUIValueItems</a> is called, each handler added to this service is called and given the opportunity to add an icon for the property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_Design_IPropertyValueUIService_GetPropertyUIValueItems_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_Design_IPropertyValueUIService_GetPropertyUIValueItems_System_ComponentModel_ITypeDescriptorContext_System_ComponentModel_PropertyDescriptor_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetPropertyUIValueItems(ITypeDescriptorContext, PropertyDescriptor)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> objects that match the specified context and property descriptor characteristics.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that can be used to gain additional context information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propDesc</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> that indicates the property to match with the properties to return.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a>[]</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> objects that match the specified parameters.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_Design_IPropertyValueUIService_NotifyPropertyValueUIItemsChanged_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_Design_IPropertyValueUIService_NotifyPropertyValueUIItemsChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NotifyPropertyValueUIItemsChanged()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the <a class=\"xref\" href=\"system.drawing.design.ipropertyvalueuiservice\" data-linktype=\"relative-path\">IPropertyValueUIService</a> implementation that the global list of <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> objects has been modified.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void NotifyPropertyValueUIItemsChanged ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_Design_IPropertyValueUIService_RemovePropertyValueUIHandler_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_Design_IPropertyValueUIService_RemovePropertyValueUIHandler_System_Drawing_Design_PropertyValueUIHandler_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemovePropertyValueUIHandler(PropertyValueUIHandler)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the specified <a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a> from the property value UI service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>newHandler</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.design.propertyvalueuihandler\" data-linktype=\"relative-path\">PropertyValueUIHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The handler to remove.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_Design_IPropertyValueUIService_PropertyUIValueItemsChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PropertyUIValueItemsChanged</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the list of <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> objects is modified.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler PropertyUIValueItemsChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Components that serve <a class=\"xref\" href=\"system.drawing.design.propertyvalueuiitem\" data-linktype=\"relative-path\">PropertyValueUIItem</a> objects can call <a class=\"xref\" href=\"system.drawing.design.ipropertyvalueuiservice#System_Drawing_Design_IPropertyValueUIService_NotifyPropertyValueUIItemsChanged_\" data-linktype=\"relative-path\">NotifyPropertyValueUIItemsChanged</a> when they change their list of items.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.Design.IPropertyValueUIService.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService.add_PropertyUIValueItemsChanged\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService.remove_PropertyUIValueItemsChanged\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"34acb522-342a-9a26-7a2e-5622c2670259\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface to manage the images, ToolTips, and event handlers for the properties of a component displayed in a property browser.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.drawing.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Design.IPropertyValueUIService\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.Design.IPropertyValueUIService.yml","open_to_public_contributors":false,"api_name":["System.Drawing.Design.IPropertyValueUIService","System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler","System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems","System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged","System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged","System.Drawing.Design.IPropertyValueUIService.add_PropertyUIValueItemsChanged","System.Drawing.Design.IPropertyValueUIService.remove_PropertyUIValueItemsChanged","System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Design.IPropertyValueUIService","System::Drawing::Design::IPropertyValueUIService","System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler","System::Drawing::Design::IPropertyValueUIService::AddPropertyValueUIHandler","System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems","System::Drawing::Design::IPropertyValueUIService::GetPropertyUIValueItems","System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged","System::Drawing::Design::IPropertyValueUIService::NotifyPropertyValueUIItemsChanged","System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged","System::Drawing::Design::IPropertyValueUIService::PropertyUIValueItemsChanged","System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler","System::Drawing::Design::IPropertyValueUIService::RemovePropertyValueUIHandler"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"34acb522-342a-9a26-7a2e-5622c2670259","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Drawing.Design/IPropertyValueUIService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IPropertyValueUIService interface | Microsoft Docs","_op_ogTitle":"IPropertyValueUIService interface","description":"Provides an interface to manage the images, ToolTips, and event handlers for the properties of a component displayed in a property browser.\n","toc_asset_id":"api/_splitted/System.Drawing.Design/toc.json","toc_rel":"_splitted/System.Drawing.Design/toc.json","source_url":"","ms.assetid":"System.Drawing.Design.IPropertyValueUIService","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.design.ipropertyvalueuiservice","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.design.ipropertyvalueuiservice","fileRelativePath":"api/System.Drawing.Design.IPropertyValueUIService.html"},"themesRelativePathToOutputRoot":"_themes/"}