{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">VerticalAlignment</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Describes how a child element is vertically positioned or stretched within a parent&#39;s layout slot.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\npublic enum VerticalAlignment</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div><span class=\"lang-csharp\">VerticalAlignment</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to use the VerticalAlignment enumeration in code and Extensible Application Markup Language (XAML).  </p>\n<pre><code class=\"lang-cs\" name=\"mpalayoutverticalalignment#2\">TextBlock myTextBlock = new TextBlock();\nmyTextBlock.FontSize = 18;\nmyTextBlock.HorizontalAlignment = HorizontalAlignment.Center;\nmyTextBlock.Text = &quot;VerticalAlignment Sample&quot;;\nGrid.SetRow(myTextBlock, 0);\nButton myButton1 = new Button();\nmyButton1.VerticalAlignment = VerticalAlignment.Top;\nmyButton1.Content = &quot;Button 1 (Top)&quot;;\nGrid.SetRow(myButton1, 1);\nButton myButton2 = new Button();\nmyButton2.VerticalAlignment = VerticalAlignment.Bottom;\nmyButton2.Content = &quot;Button 2 (Bottom)&quot;;\nGrid.SetRow(myButton2, 2);\nButton myButton3 = new Button();\nmyButton3.VerticalAlignment = VerticalAlignment.Center;\nmyButton3.Content = &quot;Button 3 (Center)&quot;;\nGrid.SetRow(myButton3, 3);\nButton myButton4 = new Button();\nmyButton4.VerticalAlignment = VerticalAlignment.Stretch;\nmyButton4.Content = &quot;Button 4 (Stretch)&quot;;\nGrid.SetRow(myButton4, 4);\n</code></pre><pre><code class=\"lang-xml\" name=\"mpalayoutverticalalignment#2\">&lt;Page xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; \n      xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n      WindowTitle=&quot;VerticalAlignment Sample&quot;&gt;\n  &lt;Border Background=&quot;LightBlue&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;2&quot; Padding=&quot;15&quot;&gt;\n    &lt;Grid Background=&quot;White&quot; ShowGridLines=&quot;True&quot;&gt;\n      &lt;Grid.RowDefinitions&gt;\n        &lt;RowDefinition Height=&quot;25&quot;/&gt;\n        &lt;RowDefinition Height=&quot;50&quot;/&gt;\n        &lt;RowDefinition Height=&quot;50&quot;/&gt;\n        &lt;RowDefinition Height=&quot;50&quot;/&gt;\n        &lt;RowDefinition Height=&quot;50&quot;/&gt;\n      &lt;/Grid.RowDefinitions&gt;\n            &lt;TextBlock Grid.Row=&quot;0&quot; Grid.Column=&quot;0&quot; FontSize=&quot;18&quot; HorizontalAlignment=&quot;Center&quot;&gt;VerticalAlignment Sample&lt;/TextBlock&gt;\n            &lt;Button Grid.Row=&quot;1&quot; Grid.Column=&quot;0&quot; VerticalAlignment=&quot;Top&quot;&gt;Button 1 (Top)&lt;/Button&gt;\n            &lt;Button Grid.Row=&quot;2&quot; Grid.Column=&quot;0&quot; VerticalAlignment=&quot;Bottom&quot;&gt;Button 2 (Bottom)&lt;/Button&gt;    \n            &lt;Button Grid.Row=&quot;3&quot; Grid.Column=&quot;0&quot; VerticalAlignment=&quot;Center&quot;&gt;Button 3 (Center)&lt;/Button&gt;\n            &lt;Button Grid.Row=&quot;4&quot; Grid.Column=&quot;0&quot; VerticalAlignment=&quot;Stretch&quot;&gt;Button 4 (Stretch)&lt;/Button&gt;          \n    &lt;/Grid&gt;\n  &lt;/Border&gt;    \n&lt;/Page&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"mpalayoutverticalalignment#2\">Dim myTextBlock As New TextBlock()\nmyTextBlock.FontSize = 18\nmyTextBlock.HorizontalAlignment = Windows.HorizontalAlignment.Center\nmyTextBlock.Text = &quot;VerticalAlignment Sample&quot;\nGrid.SetRow(myTextBlock, 0)\nDim myButton1 As New Button()\nmyButton1.VerticalAlignment = Windows.VerticalAlignment.Top\nmyButton1.Content = &quot;Button 1 (Top)&quot;\nGrid.SetRow(myButton1, 1)\nDim myButton2 As New Button()\nmyButton2.VerticalAlignment = Windows.VerticalAlignment.Bottom\nmyButton2.Content = &quot;Button 2 (Bottom)&quot;\nGrid.SetRow(myButton2, 2)\nDim myButton3 As New Button()\nmyButton3.VerticalAlignment = Windows.VerticalAlignment.Center\nmyButton3.Content = &quot;Button 3 (Center)&quot;\nGrid.SetRow(myButton3, 3)\nDim myButton4 As New Button()\nmyButton4.VerticalAlignment = Windows.VerticalAlignment.Stretch\nmyButton4.Content = &quot;Button 4 (Stretch)&quot;\nGrid.SetRow(myButton4, 4)\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a> properties that are explicitly set on an element take precedence over the <a class=\"xref\" href=\"system.windows.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> property value.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Windows_VerticalAlignment_Bottom\">\r\n      \t\t\t<span class=\"lang-csharp\">Bottom</span>\r\n      \t</td>\r\n      \t<td><p>The child element is aligned to the bottom of the parent&#39;s layout slot.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_VerticalAlignment_Center\">\r\n      \t\t\t<span class=\"lang-csharp\">Center</span>\r\n      \t</td>\r\n      \t<td><p>The child element is aligned to the center of the parent&#39;s layout slot.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_VerticalAlignment_Stretch\">\r\n      \t\t\t<span class=\"lang-csharp\">Stretch</span>\r\n      \t</td>\r\n      \t<td><p>The child element stretches to fill the parent&#39;s layout slot.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_VerticalAlignment_Top\">\r\n      \t\t\t<span class=\"lang-csharp\">Top</span>\r\n      \t</td>\r\n      \t<td><p>The child element is aligned to the top of the parent&#39;s layout slot.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.VerticalAlignment.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.VerticalAlignment\">\r\n<meta name=\"APIName\" content=\"System.Windows.VerticalAlignment.Bottom\">\r\n<meta name=\"APIName\" content=\"System.Windows.VerticalAlignment.Center\">\r\n<meta name=\"APIName\" content=\"System.Windows.VerticalAlignment.Stretch\">\r\n<meta name=\"APIName\" content=\"System.Windows.VerticalAlignment.Top\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"97074a8e-9043-706d-edd0-349b80994581\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Describes how a child element is vertically positioned or stretched within a parent&amp;#39;s layout slot.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.VerticalAlignment\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.VerticalAlignment.yml","open_to_public_contributors":false,"api_name":["System.Windows.VerticalAlignment","System.Windows.VerticalAlignment.Bottom","System.Windows.VerticalAlignment.Center","System.Windows.VerticalAlignment.Stretch","System.Windows.VerticalAlignment.Top"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.VerticalAlignment","System::Windows::VerticalAlignment","System.Windows.VerticalAlignment.Bottom","System::Windows::VerticalAlignment::Bottom","System.Windows.VerticalAlignment.Center","System::Windows::VerticalAlignment::Center","System.Windows.VerticalAlignment.Stretch","System::Windows::VerticalAlignment::Stretch","System.Windows.VerticalAlignment.Top","System::Windows::VerticalAlignment::Top"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"97074a8e-9043-706d-edd0-349b80994581","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows/VerticalAlignment.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"VerticalAlignment enum | Microsoft Docs","_op_ogTitle":"VerticalAlignment enum","description":"Describes how a child element is vertically positioned or stretched within a parent&#39;s layout slot.\n","toc_asset_id":"api/_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.VerticalAlignment","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.verticalalignment","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.verticalalignment","fileRelativePath":"api/System.Windows.VerticalAlignment.html"},"themesRelativePathToOutputRoot":"_themes/"}