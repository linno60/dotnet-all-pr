{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GridViewRowEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a> events of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void GridViewRowEventHandler(object sender, GridViewRowEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">GridViewRowEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to programmatically add a GridViewRowEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowEventHandler#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void Page_Load(Object sender, EventArgs e)\n  {\n        \n    // Create a new GridView control.\n    GridView customersGridView = new GridView();\n         \n    // Set the GridView control&#39;s properties.\n    customersGridView.ID = &quot;CustomersGridView&quot;;\n    customersGridView.DataSourceID = &quot;CustomersSqlDataSource&quot;;\n    customersGridView.AutoGenerateColumns = true;\n    customersGridView.AllowPaging = true;\n\n    // Programmatically register the event-handling method.\n    customersGridView.RowDataBound += new GridViewRowEventHandler(this.CustomersGridView_RowDataBound);\n       \n    // Add the GridView control to the Controls collection\n    // of the PlaceHolder control.\n    GridViewPlaceHolder.Controls.Add(customersGridView);\n\n  }\n\n  void CustomersGridView_RowDataBound(Object sender, GridViewRowEventArgs e)\n  {\n        \n    if(e.Row.RowType == DataControlRowType.DataRow)\n    {\n      // Display the company name in italics.\n      e.Row.Cells[1].Text = &quot;&lt;i&gt;&quot; + e.Row.Cells[1].Text + &quot;&lt;/i&gt;&quot;;\n        \n    }\n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewRowEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridViewRowEventHandler Example&lt;/h3&gt;\n\n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowEventHandler#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Create a new GridView control.\n    Dim customersGridView As New GridView()\n         \n    &#39; Set the GridView control&#39;s properties.\n    customersGridView.ID = &quot;CustomersGridView&quot;\n    customersGridView.DataSourceID = &quot;CustomersSqlDataSource&quot;\n    customersGridView.AutoGenerateColumns = True\n    customersGridView.AllowPaging = True\n\n    &#39; Programmatically register the event-handling method.\n    AddHandler customersGridView.RowDataBound, AddressOf CustomersGridView_RowDataBound\n       \n    &#39; Add the GridView control to the Controls collection\n    &#39; of the PlaceHolder control.\n    GridViewPlaceHolder.Controls.Add(customersGridView)\n\n  End Sub\n\n  Sub CustomersGridView_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n        \n    If e.Row.RowType = DataControlRowType.DataRow Then\n    \n      &#39; Display the company name in italics.\n      e.Row.Cells(1).Text = &quot;&lt;i&gt;&quot; &amp; e.Row.Cells(1).Text &amp; &quot;&lt;/i&gt;&quot;\n        \n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewRowEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridViewRowEventHandler Example&lt;/h3&gt;\n\n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to declaratively add a GridViewRowEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowDataBound#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowDataBound(Object sender, GridViewRowEventArgs e)\n  {\n        \n    if(e.Row.RowType == DataControlRowType.DataRow)\n    {\n      // Display the company name in italics.\n      e.Row.Cells[1].Text = &quot;&lt;i&gt;&quot; + e.Row.Cells[1].Text + &quot;&lt;/i&gt;&quot;;\n        \n    }\n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowDataBound Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        onrowdatabound=&quot;CustomersGridView_RowDataBound&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowDataBound#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n\n    If e.Row.RowType = DataControlRowType.DataRow Then\n    \n      &#39; Display the company name in italics.\n      e.Row.Cells(1).Text = &quot;&lt;i&gt;&quot; &amp; e.Row.Cells(1).Text &amp; &quot;&lt;/i&gt;&quot;\n        \n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowDataBound Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        onrowdatabound=&quot;CustomersGridView_RowDataBound&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can be rendered, a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object must be created for each row in the control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event is raised each time a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is created. This allows you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.  </p>\n<p> Similarly, each row in the control must be bound to a record in the data source before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can be rendered. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a> event is raised when a data row (represented by a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object) is bound to data in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This allows you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.  </p>\n<p> When you create a GridViewRowEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewRowEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewRowEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewRowEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewRowEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewRowEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewRowEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"01b2b8a9-cd37-4f96-1d72-6ec42a504bee\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  and  events of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.GridViewRowEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewRowEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.GridViewRowEventHandler","System.Web.UI.WebControls.GridViewRowEventHandler..ctor","System.Web.UI.WebControls.GridViewRowEventHandler.Invoke","System.Web.UI.WebControls.GridViewRowEventHandler.BeginInvoke","System.Web.UI.WebControls.GridViewRowEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.GridViewRowEventHandler","System::Web::UI::WebControls::GridViewRowEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"01b2b8a9-cd37-4f96-1d72-6ec42a504bee","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/GridViewRowEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridViewRowEventHandler delegate | Microsoft Docs","_op_ogTitle":"GridViewRowEventHandler delegate","description":"Represents the method that handles the  and  events of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.GridViewRowEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewroweventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewroweventhandler","fileRelativePath":"api/System.Web.UI.WebControls.GridViewRowEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}