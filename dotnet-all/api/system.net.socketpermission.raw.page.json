{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SocketPermission</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Controls rights to make or accept connections on a transport address.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class SocketPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission\" data-linktype=\"relative-path\">CodeAccessPermission</a></span></div><span class=\"lang-csharp\">SocketPermission</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Assert\" data-linktype=\"relative-path\">Assert()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Demand\" data-linktype=\"relative-path\">Demand()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny\" data-linktype=\"relative-path\">Deny()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_PermitOnly\" data-linktype=\"relative-path\">PermitOnly()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAll\" data-linktype=\"relative-path\">RevertAll()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAssert\" data-linktype=\"relative-path\">RevertAssert()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertDeny\" data-linktype=\"relative-path\">RevertDeny()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertPermitOnly\" data-linktype=\"relative-path\">RevertPermitOnly()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to use the SocketPermission class to set, change, and enforce various socket access restrictions.  </p>\n<pre><code class=\"lang-cs\" name=\"SocketPermissionExample#1\">\n     // Creates a SocketPermission restricting access to and from all URIs.\n     SocketPermission mySocketPermission1 = new SocketPermission(PermissionState.None);\n\n     // The socket to which this permission will apply will allow connections from www.contoso.com.\n     mySocketPermission1.AddPermission(NetworkAccess.Accept, TransportType.Tcp, &quot;www.contoso.com&quot;, 11000);\n\n     // Creates a SocketPermission which will allow the target Socket to connect with www.southridgevideo.com.\n     SocketPermission mySocketPermission2 =\n                                new SocketPermission(NetworkAccess.Connect, TransportType.Tcp, &quot;www.southridgevideo.com&quot;, 11002);\n\n     // Creates a SocketPermission from the union of two SocketPermissions.\n     SocketPermission mySocketPermissionUnion = \n                                (SocketPermission)mySocketPermission1.Union(mySocketPermission2);\n\n     // Checks to see if the union was successfully created by using the IsSubsetOf method.\n     if (mySocketPermission1.IsSubsetOf(mySocketPermissionUnion) &amp;&amp; \n     \t   mySocketPermission2.IsSubsetOf(mySocketPermissionUnion)){\n          Console.WriteLine(&quot;This union contains permissions from both mySocketPermission1 and mySocketPermission2&quot;); \n\n          // Prints the allowable accept URIs to the console.\n          Console.WriteLine(&quot;This union accepts connections on :&quot;);\n\n          IEnumerator myEnumerator = mySocketPermissionUnion.AcceptList;\n\t   while (myEnumerator.MoveNext()) {\n               Console.WriteLine(((EndpointPermission)myEnumerator.Current).ToString());\n\t        }      \n\n             // Prints the allowable connect URIs to the console.\n          Console.WriteLine(&quot;This union permits connections to :&quot;);\n\n          myEnumerator = mySocketPermissionUnion.ConnectList;\n\t   while (myEnumerator.MoveNext()) {\n               Console.WriteLine(((EndpointPermission)myEnumerator.Current).ToString());\n\t        }      \n\n           }\n\n\n     // Creates a SocketPermission from the intersect of two SocketPermissions.\n     SocketPermission mySocketPermissionIntersect = \n                               (SocketPermission)mySocketPermission1.Intersect(mySocketPermissionUnion);\n\n     // mySocketPermissionIntersect should now contain the permissions of mySocketPermission1.\n     if (mySocketPermission1.IsSubsetOf(mySocketPermissionIntersect)){\n          Console.WriteLine(&quot;This is expected&quot;);\n     }\n    // mySocketPermissionIntersect should not contain the permissios of mySocketPermission2.\n     if (mySocketPermission2.IsSubsetOf(mySocketPermissionIntersect)){\n          Console.WriteLine(&quot;This should not print&quot;);\n     }\n\n\n\n// Creates a copy of the intersect SocketPermission.\n     SocketPermission mySocketPermissionIntersectCopy = \n                               (SocketPermission)mySocketPermissionIntersect.Copy();\n\n     if (mySocketPermissionIntersectCopy.Equals(mySocketPermissionIntersect)){\n     Console.WriteLine(&quot;Copy successfull&quot;);\n     }\n\n\n     // Converts a SocketPermission to XML format and then immediately converts it back to a SocketPermission.\n     mySocketPermission1.FromXml(mySocketPermission1.ToXml());\n     \n\n     // Checks to see if permission for this socket resource is unrestricted.  If it is, then there is no need to\n     // demand that permissions be enforced.\n     if (mySocketPermissionUnion.IsUnrestricted()){\n     \t\n          //Do nothing.  There are no restrictions.\n\n     }\n     else{\n         // Enforces the permissions found in mySocketPermissionUnion on any Socket Resources used below this statement. \n         mySocketPermissionUnion.Demand();\n     }\n\n\tIPHostEntry myIpHostEntry = Dns.Resolve(&quot;www.contoso.com&quot;);\n\tIPEndPoint myLocalEndPoint = new IPEndPoint(myIpHostEntry.AddressList[0], 11000);\n\n       Socket s = new Socket(myLocalEndPoint.Address.AddressFamily,\n       \t                           SocketType.Stream,\n                                         ProtocolType.Tcp);\n       try{\n            s.Connect(myLocalEndPoint);\n       }\n       catch (Exception e){\n            Console.WriteLine(&quot;Exception Thrown: &quot; + e.ToString());\n       } \n\n      // Perform all socket operations in here.\n      \n      s.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"SocketPermissionExample#1\">   &#39; Creates a SocketPermission restricting access to and from all URIs.\n   Dim mySocketPermission1 As New SocketPermission(PermissionState.None)\n   \n   &#39; The socket to which this permission will apply will allow connections from www.contoso.com.\n   mySocketPermission1.AddPermission(NetworkAccess.Accept, TransportType.Tcp, &quot;www.contoso.com&quot;, 11000)\n   \n   &#39; Creates a SocketPermission which will allow the target Socket to connect with www.southridgevideo.com.\n   Dim mySocketPermission2 As New SocketPermission(NetworkAccess.Connect, TransportType.Tcp, &quot;www.southridgevideo.com&quot;, 11002)\n   \n   &#39; Creates a SocketPermission from the union of two SocketPermissions.\n   Dim mySocketPermissionUnion As SocketPermission = CType(mySocketPermission1.Union(mySocketPermission2), SocketPermission)\n   \n   &#39; Checks to see if the union was successfully created by using the IsSubsetOf method.\n   If mySocketPermission1.IsSubsetOf(mySocketPermissionUnion) And mySocketPermission2.IsSubsetOf(mySocketPermissionUnion) Then\n      Console.WriteLine(&quot;This union contains permissions from both mySocketPermission1 and mySocketPermission2&quot;)\n      \n      &#39; Prints the allowable accept URIs to the console.\n      Console.WriteLine(&quot;This union accepts connections on :&quot;)\n      \n      Dim myEnumerator As IEnumerator = mySocketPermissionUnion.AcceptList\n      While myEnumerator.MoveNext()\n         Console.WriteLine(CType(myEnumerator.Current, EndpointPermission).ToString())\n      End While\n      \n      Console.WriteLine(&quot;This union establishes connections on : &quot;)\n      \n      &#39; Prints the allowable connect URIs to the console.\n      Console.WriteLine(&quot;This union permits connections to :&quot;)\n      \n      myEnumerator = mySocketPermissionUnion.ConnectList\n      While myEnumerator.MoveNext()\n         Console.WriteLine(CType(myEnumerator.Current, EndpointPermission).ToString())\n      End While\n   End If \n   &#39; Creates a SocketPermission from the intersect of two SocketPermissions.\n   Dim mySocketPermissionIntersect As SocketPermission = CType(mySocketPermission1.Intersect(mySocketPermissionUnion), SocketPermission)\n   \n   &#39; mySocketPermissionIntersect should now contain the permissions of mySocketPermission1.\n   If mySocketPermission1.IsSubsetOf(mySocketPermissionIntersect) Then\n      Console.WriteLine(&quot;This is expected&quot;)\n   End If\n   &#39; mySocketPermissionIntersect should not contain the permissios of mySocketPermission2.\n   If mySocketPermission2.IsSubsetOf(mySocketPermissionIntersect) Then\n      Console.WriteLine(&quot;This should not print&quot;)\n   End If\n   \n   &#39; Creates a copy of the intersect SocketPermission.\n   Dim mySocketPermissionIntersectCopy As SocketPermission = CType(mySocketPermissionIntersect.Copy(), SocketPermission)\n   \n   If mySocketPermissionIntersectCopy.Equals(mySocketPermissionIntersect) Then\n      Console.WriteLine(&quot;Copy successfull&quot;)\n   End If\n   &#39; Converts a SocketPermission to XML format and then immediately converts it back to a SocketPermission.\n   mySocketPermission1.FromXml(mySocketPermission1.ToXml())\n   \n   \n   &#39; Checks to see if permission for this socket resource is unrestricted.  If it is, then there is no need to\n   &#39; demand that permissions be enforced.\n   If mySocketPermissionUnion.IsUnrestricted() Then\n   \n   &#39;Do nothing.  There are no restrictions.\n   Else\n      &#39; Enforces the permissions found in mySocketPermissionUnion on any Socket Resources used below this statement. \n      mySocketPermissionUnion.Demand()\n   End If\n   \n   Dim myIpHostEntry As IPHostEntry = Dns.Resolve(&quot;www.contoso.com&quot;)\n   Dim myLocalEndPoint As New IPEndPoint(myIpHostEntry.AddressList(0), 11000)\n   \n   Dim s As New Socket(myLocalEndPoint.Address.AddressFamily, SocketType.Stream, ProtocolType.Tcp)\n   Try\n      s.Connect(myLocalEndPoint)\n   Catch e As Exception\n      Console.WriteLine((&quot;Exception Thrown: &quot; + e.ToString()))\n   End Try\n   \n   &#39; Perform all socket operations in here.\n   s.Close()\nEnd Sub &#39;MySocketPermission\n</code></pre><pre><code class=\"lang-cpp\" name=\"SocketPermissionExample#1\">// Creates a SocketPermission restricting access to and from all URIs.\nSocketPermission^ mySocketPermission1 = gcnew SocketPermission( PermissionState::None );\n\n// The socket to which this permission will apply will allow connections from www.contoso.com.\nmySocketPermission1-&gt;AddPermission( NetworkAccess::Accept, TransportType::Tcp,  &quot;www.contoso.com&quot;, 11000 );\n\n// Creates a SocketPermission which will allow the target Socket to connect with www.southridgevideo.com.\nSocketPermission^ mySocketPermission2 = gcnew SocketPermission( NetworkAccess::Connect,TransportType::Tcp, &quot;www.southridgevideo.com&quot;,11002 );\n\n// Creates a SocketPermission from the union of two SocketPermissions.\nSocketPermission^ mySocketPermissionUnion =\n   (SocketPermission^)( mySocketPermission1-&gt;Union( mySocketPermission2 ) );\n\n// Checks to see if the union was successfully created by using the IsSubsetOf method.\nif ( mySocketPermission1-&gt;IsSubsetOf( mySocketPermissionUnion ) &amp;&amp;\n   mySocketPermission2-&gt;IsSubsetOf( mySocketPermissionUnion ) )\n{\n   Console::WriteLine(  &quot;This union contains permissions from both mySocketPermission1 and mySocketPermission2&quot; );\n   \n   // Prints the allowable accept URIs to the console.\n   Console::WriteLine(  &quot;This union accepts connections on :&quot; );\n\n   IEnumerator^ myEnumerator = mySocketPermissionUnion-&gt;AcceptList;\n   while ( myEnumerator-&gt;MoveNext() )\n   {\n      Console::WriteLine( safe_cast&lt;EndpointPermission^&gt;( myEnumerator-&gt;Current )-&gt;ToString() );\n   }\n   \n   // Prints the allowable connect URIs to the console.\n   Console::WriteLine(  &quot;This union permits connections to :&quot; );\n\n   myEnumerator = mySocketPermissionUnion-&gt;ConnectList;\n   while ( myEnumerator-&gt;MoveNext() )\n   {\n      Console::WriteLine( safe_cast&lt;EndpointPermission^&gt;( myEnumerator-&gt;Current )-&gt;ToString() );\n   }\n}\n\n// Creates a SocketPermission from the intersect of two SocketPermissions.\nSocketPermission^ mySocketPermissionIntersect =\n   (SocketPermission^)( mySocketPermission1-&gt;Intersect( mySocketPermissionUnion ) );\n\n// mySocketPermissionIntersect should now contain the permissions of mySocketPermission1.\nif ( mySocketPermission1-&gt;IsSubsetOf( mySocketPermissionIntersect ) )\n{\n   Console::WriteLine(  &quot;This is expected&quot; );\n}\n\n// mySocketPermissionIntersect should not contain the permissios of mySocketPermission2.\nif ( mySocketPermission2-&gt;IsSubsetOf( mySocketPermissionIntersect ) )\n{\n   Console::WriteLine(  &quot;This should not print&quot; );\n}\n\n// Creates a copy of the intersect SocketPermission.\nSocketPermission^ mySocketPermissionIntersectCopy =\n   (SocketPermission^)( mySocketPermissionIntersect-&gt;Copy() );\nif ( mySocketPermissionIntersectCopy-&gt;Equals( mySocketPermissionIntersect ) )\n{\n   Console::WriteLine(  &quot;Copy successfull&quot; );\n}\n\n// Converts a SocketPermission to XML format and then immediately converts it back to a SocketPermission.\nmySocketPermission1-&gt;FromXml( mySocketPermission1-&gt;ToXml() );\n\n// Checks to see if permission for this socket resource is unrestricted.  If it is, then there is no need to\n// demand that permissions be enforced.\nif ( mySocketPermissionUnion-&gt;IsUnrestricted() )\n{\n   //Do nothing.  There are no restrictions.\n}\nelse\n{\n   // Enforces the permissions found in mySocketPermissionUnion on any Socket Resources used below this statement. \n   mySocketPermissionUnion-&gt;Demand();\n}\n\nIPHostEntry^ myIpHostEntry = Dns::Resolve(  &quot;www.contoso.com&quot; );\nIPEndPoint^ myLocalEndPoint = gcnew IPEndPoint( myIpHostEntry-&gt;AddressList[ 0 ], 11000 );\n\nSocket^ s = gcnew Socket( myLocalEndPoint-&gt;Address-&gt;AddressFamily,\n   SocketType::Stream,\n   ProtocolType::Tcp );\ntry\n{\n   s-&gt;Connect( myLocalEndPoint );\n}\ncatch ( Exception^ e ) \n{\n   Console::Write(  &quot;Exception Thrown: &quot; );\n   Console::WriteLine( e-&gt;ToString() );\n}\n\n// Perform all socket operations in here.\ns-&gt;Close();\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>SocketPermission instances control permission to accept connections or initiate <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> connections. A <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> permission can be established for a host name or IP address, a port number, and a transport protocol.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission__ctor_System_Security_Permissions_PermissionState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SocketPermission(PermissionState)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> class that allows unrestricted access to the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> or disallows access to the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SocketPermission (System.Security.Permissions.PermissionState state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance is created with the <code>Unrestricted</code> value from <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> then the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance passes all demands. Any other value for <code>state</code> results in a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance that fails all demands unless a transport address permission is added with <a class=\"xref\" href=\"system.net.socketpermission#System_Net_SocketPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission__ctor_System_Net_NetworkAccess_System_Net_TransportType_System_String_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SocketPermission(NetworkAccess, TransportType, String, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> class for the given transport address with the specified permission.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SocketPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>transport</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.transporttype\" data-linktype=\"relative-path\">TransportType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.net.transporttype\" data-linktype=\"relative-path\">TransportType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hostName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The host name for the transport address.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>portNumber</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The port number for the transport address.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>hostName</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor creates a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> that controls access to the specified <code>hostName</code> and <code>portNumber</code> using the specified <code>transport</code>.  </p>\n<p> The <code>hostName</code> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.  </p>\n<p> The <code>portNumber</code> can be any valid port number defined by the transport, or <a class=\"xref\" href=\"system.net.socketpermission#System_Net_SocketPermission_AllPorts\" data-linktype=\"relative-path\">System.Net.SocketPermission.AllPorts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_AllPorts\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllPorts</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Defines a constant that represents all ports.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const int AllPorts = -1;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This field is read-only. The value of this field is -1.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_AcceptList\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AcceptList</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a list of <a class=\"xref\" href=\"system.net.endpointpermission\" data-linktype=\"relative-path\">EndpointPermission</a> instances that identifies the endpoints that can be accepted under this permission instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.IEnumerator AcceptList { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance that implements the <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface that contains <a class=\"xref\" href=\"system.net.endpointpermission\" data-linktype=\"relative-path\">EndpointPermission</a> instances.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_ConnectList\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConnectList</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a list of <a class=\"xref\" href=\"system.net.endpointpermission\" data-linktype=\"relative-path\">EndpointPermission</a> instances that identifies the endpoints that can be connected to under this permission instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.IEnumerator ConnectList { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance that implements the <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface that contains <a class=\"xref\" href=\"system.net.endpointpermission\" data-linktype=\"relative-path\">EndpointPermission</a> instances.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_AddPermission_System_Net_NetworkAccess_System_Net_TransportType_System_String_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddPermission(NetworkAccess, TransportType, String, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds a permission to the set of permissions for a transport address.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>transport</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.transporttype\" data-linktype=\"relative-path\">TransportType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.net.transporttype\" data-linktype=\"relative-path\">TransportType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hostName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The host name for the transport address.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>portNumber</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The port number for the transport address.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>hostName</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>hostName</code> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_Copy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Copy()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a copy of a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.IPermission Copy ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A new instance of the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> class that is a copy of the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The object returned by this method represents the same level of access as the current instance. This method overrides <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Copy_\" data-linktype=\"relative-path\">Copy</a> and is implemented to support the <a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_FromXml_System_Security_SecurityElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromXml(SecurityElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reconstructs a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance for an XML encoding.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void FromXml (System.Security.SecurityElement securityElement);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>securityElement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The XML encoding used to reconstruct the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>securityElement</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>securityElement</code> is not a permission element for this type.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The FromXml method reconstructs a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance from an XML encoding defined by the <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> class.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.socketpermission#System_Net_SocketPermission_ToXml_\" data-linktype=\"relative-path\">ToXml</a> method to encode the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance, including state information, in XML.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_Intersect_System_Security_IPermission_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Intersect(IPermission)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the logical intersection between two <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instances.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.IPermission Intersect (System.Security.IPermission target);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>target</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance to intersect with the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance that represents the intersection of two <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instances. If the intersection is empty, the method returns <code>null</code>. If the <code>target</code> parameter is a null reference, the method returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>target</code> parameter is not a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.net.dnspermission\" data-linktype=\"relative-path\">DnsPermission</a> is not granted to the method caller.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions. Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection. This method overrides <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Intersect_\" data-linktype=\"relative-path\">Intersect</a> and is implemented to support the <a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_IsSubsetOf_System_Security_IPermission_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsSubsetOf(IPermission)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines if the current permission is a subset of the specified permission.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool IsSubsetOf (System.Security.IPermission target);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>target</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> that is to be tested for the subset relationship.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>If <code>target</code> is <code>null</code>, this method returns <code>true</code> if the current instance defines no permissions; otherwise, <code>false</code>. If <code>target</code> is not <code>null</code>, this method returns <code>true</code> if the current instance defines a subset of <code>target</code> permissions; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>target</code> is not a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.net.dnspermission\" data-linktype=\"relative-path\">DnsPermission</a> is not granted to the method caller.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.  </p>\n<p> For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any. If this method returns <code>true</code>, the current permission represents no more access to the protected resource than does the specified permission.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_IsUnrestricted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsUnrestricted()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Checks the overall permission state of the object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsUnrestricted ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance is created with the <code>Unrestricted</code> value from <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_ToXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an XML encoding of a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance and its current state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.SecurityElement ToXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> instance that contains an XML-encoded representation of the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance, including state information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ToXml method creates a <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> instance to encode a representation of the <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance, including state information, in XML.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.socketpermission#System_Net_SocketPermission_FromXml_\" data-linktype=\"relative-path\">FromXml</a> method to restore the state information from a <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_SocketPermission_Union_System_Security_IPermission_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Union(IPermission)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the logical union between two <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instances.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.IPermission Union (System.Security.IPermission target);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>target</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance to combine with the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instance that represents the union of two <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a> instances. If <code>target</code> parameter is <code>null</code>, it returns a copy of the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>target</code> is not a <a class=\"xref\" href=\"system.net.socketpermission\" data-linktype=\"relative-path\">SocketPermission</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The result of a call to Union is a permission that represents all of the access to <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> connections represented by the current instance as well as the access represented by <code>target</code>. Any demand that passes either the current instance or <code>target</code> passes their union. This method overrides <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Union_\" data-linktype=\"relative-path\">Union</a> and is implemented to support the <a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.SocketPermission.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.AcceptList\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.AddPermission\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.AllPorts\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.ConnectList\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.Copy\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.FromXml\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.Intersect\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.IsSubsetOf\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.IsUnrestricted\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.ToXml\">\r\n<meta name=\"APIName\" content=\"System.Net.SocketPermission.Union\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"25c6ef95-9413-df21-7227-68cd6184df44\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls rights to make or accept connections on a transport address.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.SocketPermission\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.SocketPermission.yml","open_to_public_contributors":false,"api_name":["System.Net.SocketPermission","System.Net.SocketPermission..ctor","System.Net.SocketPermission.AcceptList","System.Net.SocketPermission.AddPermission","System.Net.SocketPermission.AllPorts","System.Net.SocketPermission.ConnectList","System.Net.SocketPermission.Copy","System.Net.SocketPermission.FromXml","System.Net.SocketPermission.Intersect","System.Net.SocketPermission.IsSubsetOf","System.Net.SocketPermission.IsUnrestricted","System.Net.SocketPermission.ToXml","System.Net.SocketPermission.Union"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.SocketPermission","System::Net::SocketPermission","System.Net.SocketPermission.#ctor","System::Net::SocketPermission::#ctor","System.Net.SocketPermission.AcceptList","System::Net::SocketPermission::AcceptList","System.Net.SocketPermission.AddPermission","System::Net::SocketPermission::AddPermission","System.Net.SocketPermission.AllPorts","System::Net::SocketPermission::AllPorts","System.Net.SocketPermission.ConnectList","System::Net::SocketPermission::ConnectList","System.Net.SocketPermission.Copy","System::Net::SocketPermission::Copy","System.Net.SocketPermission.FromXml","System::Net::SocketPermission::FromXml","System.Net.SocketPermission.Intersect","System::Net::SocketPermission::Intersect","System.Net.SocketPermission.IsSubsetOf","System::Net::SocketPermission::IsSubsetOf","System.Net.SocketPermission.IsUnrestricted","System::Net::SocketPermission::IsUnrestricted","System.Net.SocketPermission.ToXml","System::Net::SocketPermission::ToXml","System.Net.SocketPermission.Union","System::Net::SocketPermission::Union"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"25c6ef95-9413-df21-7227-68cd6184df44","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketPermission.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SocketPermission class | Microsoft Docs","_op_ogTitle":"SocketPermission class","description":"Controls rights to make or accept connections on a transport address.\n","toc_asset_id":"api/_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.SocketPermission","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.socketpermission","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.socketpermission","fileRelativePath":"api/System.Net.SocketPermission.html"},"themesRelativePathToOutputRoot":"_themes/"}