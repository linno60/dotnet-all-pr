{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">LayoutEngine</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the base class for implementing layout engines.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class LayoutEngine</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">LayoutEngine</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the use of the LayoutEngine class to implement custom layout behavior.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Layout.LayoutEngine#1\">#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Drawing;\nusing namespace System::Text;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Layout;\n\n// This class demonstrates a simple custom layout engine.\npublic ref class DemoFlowLayout : public LayoutEngine\n{\npublic:\n    virtual bool Layout(Object^ container,\n\t\tLayoutEventArgs^ layoutEventArgs) override\n    {\n        Control^ parent = nullptr;\n        try\n        {\n            parent = (Control ^) container;\n        }\n        catch (InvalidCastException^ ex)\n        {\n            throw gcnew ArgumentException(\n                &quot;The parameter &#39;container&#39; must be a control&quot;, &quot;container&quot;, ex);\n        }\n        // Use DisplayRectangle so that parent.Padding is honored.\n        Rectangle parentDisplayRectangle = parent-&gt;DisplayRectangle;\n        Point nextControlLocation = parentDisplayRectangle.Location;\n\n        for each (Control^ currentControl in parent-&gt;Controls)\n        {\n            // Only apply layout to visible controls.\n            if (!currentControl-&gt;Visible)\n            {\n                continue;\n            }\n\n            // Respect the margin of the control:\n            // shift over the left and the top.\n            nextControlLocation.Offset(currentControl-&gt;Margin.Left,\n                currentControl-&gt;Margin.Top);\n\n            // Set the location of the control.\n            currentControl-&gt;Location = nextControlLocation;\n\n            // Set the autosized controls to their\n            // autosized heights.\n            if (currentControl-&gt;AutoSize)\n            {\n                currentControl-&gt;Size = currentControl-&gt;GetPreferredSize(\n                    parentDisplayRectangle.Size);\n            }\n\n            // Move X back to the display rectangle origin.\n            nextControlLocation.X = parentDisplayRectangle.X;\n\n            // Increment Y by the height of the control\n            // and the bottom margin.\n            nextControlLocation.Y += currentControl-&gt;Height +\n                currentControl-&gt;Margin.Bottom;\n        }\n\n        // Optional: Return whether or not the container&#39;s\n        // parent should perform layout as a result of this\n        // layout. Some layout engines return the value of\n        // the container&#39;s AutoSize property.\n\n        return false;\n    }\n};\n\n// This class demonstrates a simple custom layout panel.\n// It overrides the LayoutEngine property of the Panel\n// control to provide a custom layout engine.\npublic ref class DemoFlowPanel : public Panel\n{\nprivate:\n    DemoFlowLayout^ layoutEngine;\n\npublic:\n    DemoFlowPanel()\n    {\n        layoutEngine = gcnew DemoFlowLayout();\n    }\n\npublic:\n    virtual property System::Windows::Forms::Layout::LayoutEngine^ LayoutEngine\n    {\n        System::Windows::Forms::Layout::LayoutEngine^ get() override\n        {\n            if (layoutEngine == nullptr)\n            {\n                layoutEngine = gcnew DemoFlowLayout();\n            }\n\n            return layoutEngine;\n        }\n    }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Layout.LayoutEngine#1\">using System;\nusing System.Collections.Generic;\nusing System.Drawing;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Layout;\n\n// This class demonstrates a simple custom layout panel.\n// It overrides the LayoutEngine property of the Panel\n// control to provide a custom layout engine. \npublic class DemoFlowPanel : Panel\n{\n    private DemoFlowLayout layoutEngine;\n\n    public DemoFlowPanel()\n    {\n    }\n\n    public override LayoutEngine LayoutEngine\n    {\n        get\n        {\n            if (layoutEngine == null)\n            {\n                layoutEngine = new DemoFlowLayout();\n            }\n\n            return layoutEngine;\n        }\n    }\n}\n\n// This class demonstrates a simple custom layout engine.\npublic class DemoFlowLayout : LayoutEngine\n{\n    public override bool Layout(\n        object container,\n        LayoutEventArgs layoutEventArgs)\n    {\n        Control parent = container as Control;\n\n        // Use DisplayRectangle so that parent.Padding is honored.\n        Rectangle parentDisplayRectangle = parent.DisplayRectangle;\n        Point nextControlLocation = parentDisplayRectangle.Location;\n\n        foreach (Control c in parent.Controls)\n        {\n            // Only apply layout to visible controls.\n            if (!c.Visible)\n            {\n                continue;\n            }\n\n            // Respect the margin of the control:\n            // shift over the left and the top.\n            nextControlLocation.Offset(c.Margin.Left, c.Margin.Top);\n\n            // Set the location of the control.\n            c.Location = nextControlLocation;\n\n            // Set the autosized controls to their \n            // autosized heights.\n            if (c.AutoSize)\n            {\n                c.Size = c.GetPreferredSize(parentDisplayRectangle.Size);\n            }\n\n            // Move X back to the display rectangle origin.\n            nextControlLocation.X = parentDisplayRectangle.X;\n\n            // Increment Y by the height of the control \n            // and the bottom margin.\n            nextControlLocation.Y += c.Height + c.Margin.Bottom;\n        }\n\n        // Optional: Return whether or not the container&#39;s \n        // parent should perform layout as a result of this \n        // layout. Some layout engines return the value of \n        // the container&#39;s AutoSize property.\n\n        return false;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Layout.LayoutEngine#1\">Imports System\nImports System.Collections.Generic\nImports System.Drawing\nImports System.Text\nImports System.Windows.Forms\nImports System.Windows.Forms.Layout\n\n&#39; This class demonstrates a simple custom layout panel.\n&#39; It overrides the LayoutEngine property of the Panel\n&#39; control to provide a custom layout engine. \nPublic Class DemoFlowPanel\n    Inherits Panel\n\n    Private layoutEng As DemoFlowLayout\n\n    Public Sub New()\n    End Sub\n\n    Public Overrides ReadOnly Property LayoutEngine() As LayoutEngine\n        Get\n            If layoutEng Is Nothing Then\n                layoutEng = New DemoFlowLayout()\n            End If\n\n            Return layoutEng\n        End Get\n    End Property\nEnd Class\n\n&#39; This class demonstrates a simple custom layout engine.\nPublic Class DemoFlowLayout\n   Inherits LayoutEngine\n\n    Public Overrides Function Layout( _\n    ByVal container As Object, _\n    ByVal layoutEventArgs As LayoutEventArgs) As Boolean\n\n        Dim parent As Control = container\n\n        &#39; Use DisplayRectangle so that parent.Padding is honored.\n        Dim parentDisplayRectangle As Rectangle = parent.DisplayRectangle\n        Dim nextControlLocation As Point = parentDisplayRectangle.Location\n\n        Dim c As Control\n        For Each c In parent.Controls\n\n            &#39; Only apply layout to visible controls.\n            If c.Visible &lt;&gt; True Then\n                Continue For\n            End If\n\n            &#39; Respect the margin of the control:\n            &#39; shift over the left and the top.\n            nextControlLocation.Offset(c.Margin.Left, c.Margin.Top)\n\n            &#39; Set the location of the control.\n            c.Location = nextControlLocation\n\n            &#39; Set the autosized controls to their \n            &#39; autosized heights.\n            If c.AutoSize Then\n                c.Size = c.GetPreferredSize(parentDisplayRectangle.Size)\n            End If\n\n            &#39; Move X back to the display rectangle origin.\n            nextControlLocation.X = parentDisplayRectangle.X\n\n            &#39; Increment Y by the height of the control \n            &#39; and the bottom margin.\n            nextControlLocation.Y += c.Height + c.Margin.Bottom\n        Next c\n\n        &#39; Optional: Return whether or not the container&#39;s \n        &#39; parent should perform layout as a result of this \n        &#39; layout. Some layout engines return the value of \n        &#39; the container&#39;s AutoSize property.\n        Return False\n\n    End Function\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the LayoutEngine class when you want to create custom layout behavior at run time. Derive your own class from the LayoutEngine class and override the <a class=\"xref\" href=\"system.windows.forms.layout.layoutengine#System_Windows_Forms_Layout_LayoutEngine_Layout_\" data-linktype=\"relative-path\">Layout</a> method to define your custom layout behavior.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_Layout_LayoutEngine__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Layout_LayoutEngine__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LayoutEngine()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.layout.layoutengine\" data-linktype=\"relative-path\">LayoutEngine</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected LayoutEngine ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_Layout_LayoutEngine_InitLayout_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Layout_LayoutEngine_InitLayout_System_Object_System_Windows_Forms_BoundsSpecified_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InitLayout(Object, BoundsSpecified)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes the layout engine.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void InitLayout (object child, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>child</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The container on which the layout engine will operate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>specified</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The bounds defining the container&#39;s size and position.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>child</code> is not a type on which <a class=\"xref\" href=\"system.windows.forms.layout.layoutengine\" data-linktype=\"relative-path\">LayoutEngine</a> can perform layout.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Optionally provide initialization logic in the InitLayout method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_Layout_LayoutEngine_Layout_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Layout_LayoutEngine_Layout_System_Object_System_Windows_Forms_LayoutEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Layout(Object, LayoutEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Requests that the layout engine perform a layout operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool Layout (object container, System.Windows.Forms.LayoutEventArgs layoutEventArgs);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>container</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The container on which the layout engine will operate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>layoutEventArgs</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An event argument from a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if layout should be performed again by the parent of <code>container</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>container</code> is not a type on which <a class=\"xref\" href=\"system.windows.forms.layout.layoutengine\" data-linktype=\"relative-path\">LayoutEngine</a> can perform layout.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called when the layout engine is to perform a layout operation on the <code>container</code> parameter. You can check the value of the <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedProperty_\" data-linktype=\"relative-path\">AffectedProperty</a>, <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedComponent_\" data-linktype=\"relative-path\">AffectedComponent</a>, and <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedControl_\" data-linktype=\"relative-path\">AffectedControl</a> properties on <code>layoutEventArgs</code> to decide if a layout operation is necessary.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.Layout.LayoutEngine.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Layout.LayoutEngine\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Layout.LayoutEngine..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Layout.LayoutEngine.InitLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Layout.LayoutEngine.Layout\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"66d46c16-5f98-df55-99f3-bb73c64b8718\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the base class for implementing layout engines.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms.layout/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.Layout.LayoutEngine\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.Layout.LayoutEngine.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.Layout.LayoutEngine","System.Windows.Forms.Layout.LayoutEngine..ctor","System.Windows.Forms.Layout.LayoutEngine.InitLayout","System.Windows.Forms.Layout.LayoutEngine.Layout"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.Layout.LayoutEngine","System::Windows::Forms::Layout::LayoutEngine","System.Windows.Forms.Layout.LayoutEngine.#ctor","System::Windows::Forms::Layout::LayoutEngine::#ctor","System.Windows.Forms.Layout.LayoutEngine.InitLayout","System::Windows::Forms::Layout::LayoutEngine::InitLayout","System.Windows.Forms.Layout.LayoutEngine.Layout","System::Windows::Forms::Layout::LayoutEngine::Layout"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"66d46c16-5f98-df55-99f3-bb73c64b8718","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms.Layout/LayoutEngine.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LayoutEngine class | Microsoft Docs","_op_ogTitle":"LayoutEngine class","description":"Provides the base class for implementing layout engines.\n","toc_asset_id":"api/_splitted/System.Windows.Forms.Layout/toc.json","toc_rel":"_splitted/System.Windows.Forms.Layout/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.Layout.LayoutEngine","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.layout.layoutengine","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.layout.layoutengine","fileRelativePath":"api/System.Windows.Forms.Layout.LayoutEngine.html"},"themesRelativePathToOutputRoot":"_themes/"}