{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataObject</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the object element of an XML signature that holds data to be signed.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class DataObject</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">DataObject</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to generate an enveloping XML signature.  </p>\n<pre><code class=\"lang-cs\" name=\"XMLDSIG Signing#1\">using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\nusing System.Xml;\n\n\npublic class XMLdsigsample1 {\n\nstatic void Main(String[] args)\n{\n     // Create example data to sign.\n     XmlDocument document = new XmlDocument();\n     XmlNode  node = document.CreateNode(XmlNodeType.Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot;);\n     node.InnerText = &quot;This is some text&quot;;\n     document.AppendChild(node);\n     Console.Error.WriteLine(&quot;Data to sign:\\n&quot; + document.OuterXml + &quot;\\n&quot;);\n \n     // Create the SignedXml message.\n     SignedXml signedXml = new SignedXml();\n     RSA key = RSA.Create();\n     signedXml.SigningKey = key;\n \n     // Create a data object to hold the data to sign.\n     DataObject dataObject = new DataObject();\n     dataObject.Data = document.ChildNodes;\n     dataObject.Id = &quot;MyObjectId&quot;;\n\n     // Add the data object to the signature.\n     signedXml.AddObject(dataObject);\n \n     // Create a reference to be able to package everything into the\n     // message.\n     Reference reference = new Reference();\n     reference.Uri = &quot;#MyObjectId&quot;;\n \n     // Add it to the message.\n     signedXml.AddReference(reference);\n\n     // Add a KeyInfo.\n     KeyInfo keyInfo = new KeyInfo();\n     keyInfo.AddClause(new RSAKeyValue(key));\n     signedXml.KeyInfo = keyInfo;\n\n     // Compute the signature.\n     signedXml.ComputeSignature();\n\n     // Get the XML representation of the signature.\n     XmlElement xmlSignature = signedXml.GetXml();\n     Console.WriteLine(xmlSignature.OuterXml);\n}\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XMLDSIG Signing#1\">Imports System\nImports System.IO\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\nImports System.Xml\n\n _\n\n\nPublic Class XMLdsigsample1\n\n   Shared Sub Main(args() As [String])\n      &#39; Create example data to sign.\n      Dim document As New XmlDocument()\n      Dim node As XmlNode = document.CreateNode(XmlNodeType.Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot;)\n      node.InnerText = &quot;This is some text&quot;\n      document.AppendChild(node)\n      Console.Error.WriteLine(&quot;Data to sign:&quot;)\n      Console.Error.WriteLine()\n      Console.Error.WriteLine(document.OuterXml)\n      Console.Error.WriteLine()\n      \n      &#39; Create the SignedXml message.\n      Dim signedXml As New SignedXml()\n      Dim key As RSA = RSA.Create()\n      signedXml.SigningKey = key\n      \n      &#39; Create a data object to hold the data to sign.\n      Dim dataObject As New DataObject()\n      dataObject.Data = document.ChildNodes\n      dataObject.Id = &quot;MyObjectId&quot;\n      \n      &#39; Add the data object to the signature.\n      signedXml.AddObject(dataObject)\n      \n      &#39; Create a reference to be able to package everything into the\n      &#39; message.\n      Dim reference As New Reference()\n      reference.Uri = &quot;#MyObjectId&quot;\n      \n      &#39; Add it to the message.\n      signedXml.AddReference(reference)\n      \n      &#39; Add a KeyInfo.\n      Dim keyInfo As New KeyInfo()\n      keyInfo.AddClause(New RSAKeyValue(key))\n      signedXml.KeyInfo = keyInfo\n      \n      &#39; Compute the signature.\n      signedXml.ComputeSignature()\n      \n      &#39; Get the XML representation of the signature.\n      Dim xmlSignature As XmlElement = signedXml.GetXml()\n      Console.WriteLine(xmlSignature.OuterXml)\n   End Sub &#39;Main\nEnd Class &#39;XMLdsigsample1 \n</code></pre><pre><code class=\"lang-cpp\" name=\"XMLDSIG Signing#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::Xml;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create example data to sign.\n   XmlDocument^ document = gcnew XmlDocument;\n   XmlNode^ node = document-&gt;CreateNode( XmlNodeType::Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot; );\n   node-&gt;InnerText = &quot;This is some text&quot;;\n   document-&gt;AppendChild( node );\n   Console::Error-&gt;WriteLine( &quot;Data to sign:\\n{0}\\n&quot;, document-&gt;OuterXml );\n   \n   // Create the SignedXml message.\n   SignedXml^ signedXml = gcnew SignedXml;\n   RSA^ key = RSA::Create();\n   signedXml-&gt;SigningKey = key;\n   \n   // Create a data object to hold the data to sign.\n   DataObject^ dataObject = gcnew DataObject;\n   dataObject-&gt;Data = document-&gt;ChildNodes;\n   dataObject-&gt;Id = &quot;MyObjectId&quot;;\n   \n   // Add the data object to the signature.\n   signedXml-&gt;AddObject( dataObject );\n   \n   // Create a reference to be able to package everything into the\n   // message.\n   Reference^ reference = gcnew Reference;\n   reference-&gt;Uri = &quot;#MyObjectId&quot;;\n   \n   // Add it to the message.\n   signedXml-&gt;AddReference( reference );\n   \n   // Add a KeyInfo.\n   KeyInfo^ keyInfo = gcnew KeyInfo;\n   keyInfo-&gt;AddClause( gcnew RSAKeyValue( key ) );\n   signedXml-&gt;KeyInfo = keyInfo;\n   \n   // Compute the signature.\n   signedXml-&gt;ComputeSignature();\n   \n   // Get the XML representation of the signature.\n   XmlElement^ xmlSignature = signedXml-&gt;GetXml();\n   Console::WriteLine( xmlSignature-&gt;OuterXml );\n}\n</code></pre><p> The following code example demonstrates how to check an XML signature.  </p>\n<pre><code class=\"lang-cs\" name=\"XMLDSIG Verification#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\nusing System.IO;\nusing System.Xml;\n\npublic class Verify {\n\n    public static void Main(String[] args) \n    {\n\n        Console.WriteLine(&quot;Verifying &quot; + args[0] + &quot;...&quot;);\n\n    \t// Create a SignedXml.\n        SignedXml signedXml = new SignedXml();\n\n        // Load the XML.\n        XmlDocument xmlDocument = new XmlDocument();\n        xmlDocument.PreserveWhitespace = true;\n        xmlDocument.Load(new XmlTextReader(args[0]));\n\n        XmlNodeList nodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;);\n        signedXml.LoadXml((XmlElement)nodeList[0]);\n\n        if (signedXml.CheckSignature()) {\n            Console.WriteLine(&quot;Signature check OK&quot;);\n        } else {\n            Console.WriteLine(&quot;Signature check FAILED&quot;);\n        }\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XMLDSIG Verification#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\nImports System.IO\nImports System.Xml\n\n _\n\nPublic Class Verify\n   \n   Public Shared Sub Main(args() As [String])\n      \n      Console.WriteLine((&quot;Verifying &quot; + args(0) + &quot;...&quot;))\n      \n      &#39; Create a SignedXml.\n      Dim signedXml As New SignedXml()\n      \n      &#39; Load the XML.\n      Dim xmlDocument As New XmlDocument()\n      xmlDocument.PreserveWhitespace = True\n      xmlDocument.Load(New XmlTextReader(args(0)))\n      \n      Dim nodeList As XmlNodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;)\n      signedXml.LoadXml(CType(nodeList(0), XmlElement))\n      \n      If signedXml.CheckSignature() Then\n         Console.WriteLine(&quot;Signature check OK&quot;)\n      Else\n         Console.WriteLine(&quot;Signature check FAILED&quot;)\n      End If\n   End Sub &#39;Main \nEnd Class &#39;Verify\n</code></pre><pre><code class=\"lang-cpp\" name=\"XMLDSIG Verification#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::Xml;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   array&lt;String^&gt;^args = System::Environment::GetCommandLineArgs();\n   Console::WriteLine( &quot;Verifying {0}...&quot;, args[ 1 ] );\n\n   // Create a SignedXml.\n   SignedXml^ signedXml = gcnew SignedXml;\n\n   // Load the XML.\n   XmlDocument^ xmlDocument = gcnew XmlDocument;\n   xmlDocument-&gt;PreserveWhitespace = true;\n   xmlDocument-&gt;Load( gcnew XmlTextReader( args[ 1 ] ) );\n   XmlNodeList^ nodeList = xmlDocument-&gt;GetElementsByTagName( &quot;Signature&quot; );\n   signedXml-&gt;LoadXml( safe_cast&lt;XmlElement^&gt;(nodeList[ 0 ]) );\n   if ( signedXml-&gt;CheckSignature() )\n   {\n      Console::WriteLine( &quot;Signature check OK&quot; );\n   }\n   else\n   {\n      Console::WriteLine( &quot;Signature check FAILED&quot; );\n   }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the DataObject class to store information or metadata directly in an XML signature.  For example, you can store the signature generation date or the signer&#39;s identity.  The DataObject class may or may not be covered by the XML signature.  </p>\n<p> The class corresponds to the <code>&lt;Object&gt;</code> element in the World Wide Web Consortium (W3C) specification for XML Signatures. For more information about the W3C specification, see <a href=\"http://www.w3.org/TR/xmldsig-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmldsig-core/</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataObject()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataObject ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> class is used with XML signatures. After you have initialized the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a>, you can assign the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject#System_Security_Cryptography_Xml_DataObject_Data_\" data-linktype=\"relative-path\">Data</a> and <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject#System_Security_Cryptography_Xml_DataObject_Id_\" data-linktype=\"relative-path\">Id</a> properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject__ctor_System_String_System_String_System_String_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataObject(String, String, String, XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> class with the specified identification, MIME type, encoding, and data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataObject (string id, string mimeType, string encoding, System.Xml.XmlElement data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>id</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The identification to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mimeType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The MIME type of the data used to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>encoding</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The encoding of the data used to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> class is used with XML signatures. The <code>id</code> parameter refers to the name of the element that contains the data to be used. The <code>data</code> parameter refers to the XML node list that contains the <code>id</code> parameter element.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject_Data_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject_Data\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Data</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the data value of the current <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlNodeList Data { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data of the current <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value used to set the property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is the XML node list that contains the element described in the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject#System_Security_Cryptography_Xml_DataObject_Id_\" data-linktype=\"relative-path\">Id</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject_Encoding_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject_Encoding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Encoding</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the encoding of the current <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Encoding { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of encoding of the current <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default value of this property is <code>null</code>, which indicates that no encoding is present.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject_Id_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject_Id\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Id</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the identification of the current <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Id { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the element that contains data to be used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The identification is used to reference the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> from another location. The default value of this property is <code>null</code>, which implies that no identification is present. This property is commonly referenced by the <a class=\"xref\" href=\"system.security.cryptography.xml.signature#System_Security_Cryptography_Xml_Signature_SignedInfo_\" data-linktype=\"relative-path\">SignedInfo</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject_MimeType_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject_MimeType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MimeType</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the MIME type of the current <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string MimeType { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The MIME type of the current <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The MIME type describes the data within the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject_GetXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject_GetXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the XML representation of the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlElement GetXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The XML representation of the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to output XML for a <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_DataObject_LoadXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_DataObject_LoadXml_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadXml(XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads a <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> state from an XML element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void LoadXml (System.Xml.XmlElement value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The XML element to load the <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> state from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value from the XML element is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be used to add additional XML elements to a <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.DataObject.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject.Data\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject.Encoding\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject.GetXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject.Id\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject.LoadXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataObject.MimeType\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"c84f8d9f-c20b-86b7-cb8e-c04a195e0a89\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the object element of an XML signature that holds data to be signed.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.DataObject\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.DataObject.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Xml.DataObject","System.Security.Cryptography.Xml.DataObject..ctor","System.Security.Cryptography.Xml.DataObject.Data","System.Security.Cryptography.Xml.DataObject.Encoding","System.Security.Cryptography.Xml.DataObject.GetXml","System.Security.Cryptography.Xml.DataObject.Id","System.Security.Cryptography.Xml.DataObject.LoadXml","System.Security.Cryptography.Xml.DataObject.MimeType"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.DataObject","System::Security::Cryptography::Xml::DataObject","System.Security.Cryptography.Xml.DataObject.#ctor","System::Security::Cryptography::Xml::DataObject::#ctor","System.Security.Cryptography.Xml.DataObject.Data","System::Security::Cryptography::Xml::DataObject::Data","System.Security.Cryptography.Xml.DataObject.Encoding","System::Security::Cryptography::Xml::DataObject::Encoding","System.Security.Cryptography.Xml.DataObject.GetXml","System::Security::Cryptography::Xml::DataObject::GetXml","System.Security.Cryptography.Xml.DataObject.Id","System::Security::Cryptography::Xml::DataObject::Id","System.Security.Cryptography.Xml.DataObject.LoadXml","System::Security::Cryptography::Xml::DataObject::LoadXml","System.Security.Cryptography.Xml.DataObject.MimeType","System::Security::Cryptography::Xml::DataObject::MimeType"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"c84f8d9f-c20b-86b7-cb8e-c04a195e0a89","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography.Xml/DataObject.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataObject class | Microsoft Docs","_op_ogTitle":"DataObject class","description":"Represents the object element of an XML signature that holds data to be signed.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.DataObject","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.dataobject","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.dataobject","fileRelativePath":"api/System.Security.Cryptography.Xml.DataObject.html"},"themesRelativePathToOutputRoot":"_themes/"}