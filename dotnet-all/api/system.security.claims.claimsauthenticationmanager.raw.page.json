{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ClaimsAuthenticationManager</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the base implementation for a claims authentication manager. The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, validation, extension) to the claims collection in the incoming principal before execution reaches your application code.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">ClaimsAuthenticationManager</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code shows a simple claims authentication manager that adds a role claim to the incoming principal without performing any check on the incoming claims..  </p>\n<pre><code class=\"lang-cs\" name=\"WifWebApplication1#1\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nusing System.Security.Claims;\n\nnamespace MyClaimsAuthenticationManager\n{\n    class SimpleClaimsAuthenticatonManager : ClaimsAuthenticationManager\n    {\n        public override ClaimsPrincipal Authenticate(string resourceName, ClaimsPrincipal incomingPrincipal)\n        {\n            if (incomingPrincipal != null &amp;&amp; incomingPrincipal.Identity.IsAuthenticated == true)\n            {\n                ((ClaimsIdentity)incomingPrincipal.Identity).AddClaim(new Claim(ClaimTypes.Role, &quot;User&quot;));\n            }\n            return incomingPrincipal; \n        }\n    }\n}\n</code></pre><p> The following XML shows the <code>&lt;claimsAuthenticationManager&gt;</code> element.  </p>\n<pre><code class=\"lang-xml\">&lt;system.identityModel&gt;  \n  &lt;identityConfiguration&gt;  \n    &lt;claimsAuthenticationManager type=&quot;MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager&quot; /&gt;  \n\n    ...  \n\n  &lt;/identityConfiguration&gt;  \n&lt;/system.identityModel&gt;  \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The claims authentication manager provides an extensibility point in the applicationâ€™s claims processing pipeline that you can use to validate, filter, modify, incoming claims or inject new claims into the set of claims presented by a <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a> before the RP application code is executed. You can even return a custom implementation of <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a> if your RP application requires it. The default implementation provided by the ClaimsAuthenticationManager class returns the claims in the <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a> unmodified; however, you can derive from this class and override the <a class=\"xref\" href=\"system.security.claims.claimsauthenticationmanager#System_Security_Claims_ClaimsAuthenticationManager_Authenticate_\" data-linktype=\"relative-path\">Authenticate</a> method to modify the claims in the <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a> (or to return a custom <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a>).  </p>\n<p> A typical reason for creating a custom claims authentication manager is to add, remove, or transform claims based on information that is only known by or is, perhaps, better maintained by the RP application. For example, a history of customer purchases in a shopping cart application might be kept in a data base maintained by the RP application and then added to the claims principal returned by the claims authentication manager based on the value of a name claim found in the incoming principal.  </p>\n<p> You can configure your application to use a <code>ClaimsAuthenticationManager</code> either programmatically by using the <a class=\"xref\" href=\"system.identitymodel.configuration.identityconfiguration\" data-linktype=\"relative-path\">IdentityConfiguration</a> class or in configuration through the <a href=\"../Topic/%3CclaimsAuthenticationManager%3E.md\" data-linktype=\"relative-path\">&amp;lt;claimsAuthenticationManager&amp;gt;</a> element (which is a child element of the <a href=\"../Topic/%3CidentityConfiguration%3E.md\" data-linktype=\"relative-path\">&amp;lt;identityConfiguration&amp;gt;</a> element). You can override the <a class=\"xref\" href=\"system.security.claims.claimsauthenticationmanager#System_Security_Claims_ClaimsAuthenticationManager_LoadCustomConfiguration_\" data-linktype=\"relative-path\">LoadCustomConfiguration</a> method to provide processing for custom child elements of the <code>&lt;claimsAuthenticationManager&gt;</code> element through which your custom manager can be configured. The base implementation of ClaimsAuthenticationManager does not handle any child elements.  </p>\n<p> Configuring your application to use a claims authentication manager ensures that it will be invoked by Windows Identity Foundation (WIF) from the request pipeline.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Claims_ClaimsAuthenticationManager__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClaimsAuthenticationManager()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.claims.claimsauthenticationmanager\" data-linktype=\"relative-path\">ClaimsAuthenticationManager</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ClaimsAuthenticationManager ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Claims_ClaimsAuthenticationManager_Authenticate_System_String_System_Security_Claims_ClaimsPrincipal_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Authenticate(String, ClaimsPrincipal)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, returns a <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a> object consistent with the requirements of the RP application. The default implementation does not modify the incoming <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resourceName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The address of the resource that is being requested.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>incomingPrincipal</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The claims principal that represents the authenticated user that is attempting to access the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A claims principal that contains any modifications necessary for the RP application. The default implementation returns the incoming claims principal unmodified.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Authenticate method is called from the request processing pipeline You can override this method in a derived class to filter, modify, or inject claims into the claims principal according to the policy of your RP application. Depending on the requirements of the RP application, you can even return a custom implementation of <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">ClaimsPrincipal</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Claims_ClaimsAuthenticationManager_LoadCustomConfiguration_System_Xml_XmlNodeList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadCustomConfiguration(XmlNodeList)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, loads custom configuration from XML.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nodelist</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The custom configuration elements. Each node in the list is of type <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LoadCustomConfiguration method is called by the configuration infrastructure. When this method is called, the <code>nodelist</code> will contain the top-level child elements of the <a href=\"../Topic/%3CclaimsAuthenticationManager%3E.md\" data-linktype=\"relative-path\">&amp;lt;claimsAuthenticationManager&amp;gt;</a> element from the configuration file. Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class. If no child elements appear under the <code>&lt;claimsAuthenticationManager&gt;</code> element in the configuration file, this method is not called.  </p>\n<p> The default implementation throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>. Override this method in your derived class to enable initialization of your claims authentication manager from a configuration file. For example, the configuration elements might describe a policy to be followed when authenticating a claims principal; or they might be used to point to an attribute store from which additional claims are to be added to the principal.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Claims.ClaimsAuthenticationManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthenticationManager\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthenticationManager..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthenticationManager.Authenticate\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration\">\r\n<meta name=\"APILocation\" content=\"System.IdentityModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"4ddb8ba7-eca3-ed8b-03ac-2a7dd5bd0881\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the base implementation for a claims authentication manager. The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, valâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.claims/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Claims.ClaimsAuthenticationManager\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Claims.ClaimsAuthenticationManager.yml","open_to_public_contributors":false,"api_name":["System.Security.Claims.ClaimsAuthenticationManager","System.Security.Claims.ClaimsAuthenticationManager..ctor","System.Security.Claims.ClaimsAuthenticationManager.Authenticate","System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration"],"api_location":["System.IdentityModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Claims.ClaimsAuthenticationManager","System::Security::Claims::ClaimsAuthenticationManager","System.Security.Claims.ClaimsAuthenticationManager.#ctor","System::Security::Claims::ClaimsAuthenticationManager::#ctor","System.Security.Claims.ClaimsAuthenticationManager.Authenticate","System::Security::Claims::ClaimsAuthenticationManager::Authenticate","System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration","System::Security::Claims::ClaimsAuthenticationManager::LoadCustomConfiguration"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"4ddb8ba7-eca3-ed8b-03ac-2a7dd5bd0881","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.Claims/ClaimsAuthenticationManager.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ClaimsAuthenticationManager class | Microsoft Docs","_op_ogTitle":"ClaimsAuthenticationManager class","description":"Defines the base implementation for a claims authentication manager. The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, valâ€¦","toc_asset_id":"api/_splitted/System.Security.Claims/toc.json","toc_rel":"_splitted/System.Security.Claims/toc.json","source_url":"","ms.assetid":"System.Security.Claims.ClaimsAuthenticationManager","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.claims.claimsauthenticationmanager","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.claims.claimsauthenticationmanager","fileRelativePath":"api/System.Security.Claims.ClaimsAuthenticationManager.html"},"themesRelativePathToOutputRoot":"_themes/"}