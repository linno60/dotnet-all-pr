{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ConfigurationCollectionAttribute</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]\npublic sealed class ConfigurationCollectionAttribute : Attribute</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></span></div><span class=\"lang-csharp\">ConfigurationCollectionAttribute</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how to use the ConfigurationCollectionAttribute.  </p>\n<p> This example consists of three classes: <code>UrlsSection</code>, <code>UrlsCollection</code> and <code>UrlConfigElement</code>.The <code>UrlsSection</code> class uses the ConfigurationCollectionAttribute to define a custom configuration section. This section contains a URL collection (defined by the <code>UrlsCollection</code> class) of URL elements (defined by the <code>UrlConfigElement</code> class). When you run the example, an instance of the <code>UrlsSection</code> class is created and the following configuration elements are generated in the application configuration file:  </p>\n<pre><code>&lt;configuration&gt;  \n    &lt;configSections&gt;  \n        &lt;section name=&quot;MyUrls&quot; type=&quot;UrlsSection,   \n          ConfigurationCollectionAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; /&gt;  \n    &lt;/configSections&gt;  \n    &lt;MyUrls&gt;  \n        &lt;urls&gt;  \n            &lt;remove name=&quot;Contoso&quot; /&gt;  \n            &lt;add name=&quot;Contoso&quot; url=&quot;http://www.contoso.com&quot; port=&quot;0&quot; /&gt;  \n        &lt;/urls&gt;  \n    &lt;/MyUrls&gt;  \n&lt;/configuration  \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationCollectionAttribute#1\">\nusing System;\nusing System.Configuration;\n\n\n// Define a custom section that contains a custom\n// UrlsCollection collection of custom UrlConfigElement elements.\n// This class shows how to use the ConfigurationCollectionAttribute.\npublic class UrlsSection : ConfigurationSection\n{\n    // Declare the Urls collection property using the\n    // ConfigurationCollectionAttribute.\n    // This allows to build a nested section that contains\n    // a collection of elements.\n    [ConfigurationProperty(&quot;urls&quot;, IsDefaultCollection = false)]\n    [ConfigurationCollection(typeof(UrlsCollection),\n        AddItemName = &quot;add&quot;,\n        ClearItemsName = &quot;clear&quot;,\n        RemoveItemName = &quot;remove&quot;)]\n    public UrlsCollection Urls\n    {\n        get\n        {\n            UrlsCollection urlsCollection =\n                (UrlsCollection)base[&quot;urls&quot;];\n            return urlsCollection;\n        }\n    }\n\n}\n\n// Define the custom UrlsCollection that contains the \n// custom UrlsConfigElement elements.\npublic class UrlsCollection : ConfigurationElementCollection\n{\n    public UrlsCollection()\n    {\n        UrlConfigElement url = (UrlConfigElement)CreateNewElement();\n        Add(url);\n    }\n\n    public override ConfigurationElementCollectionType CollectionType\n    {\n        get\n        {\n            return ConfigurationElementCollectionType.AddRemoveClearMap;\n        }\n    }\n\n    protected override ConfigurationElement CreateNewElement()\n    {\n        return new UrlConfigElement();\n    }\n\n    protected override Object GetElementKey(ConfigurationElement element)\n    {\n        return ((UrlConfigElement)element).Name;\n    }\n\n    public UrlConfigElement this[int index]\n    {\n        get\n        {\n            return (UrlConfigElement)BaseGet(index);\n        }\n        set\n        {\n            if (BaseGet(index) != null)\n            {\n                BaseRemoveAt(index);\n            }\n            BaseAdd(index, value);\n        }\n    }\n\n    new public UrlConfigElement this[string Name]\n    {\n        get\n        {\n            return (UrlConfigElement)BaseGet(Name);\n        }\n    }\n\n    public int IndexOf(UrlConfigElement url)\n    {\n        return BaseIndexOf(url);\n    }\n\n    public void Add(UrlConfigElement url)\n    {\n        BaseAdd(url);\n    }\n    protected override void BaseAdd(ConfigurationElement element)\n    {\n        BaseAdd(element, false);\n    }\n\n    public void Remove(UrlConfigElement url)\n    {\n        if (BaseIndexOf(url) &gt;= 0)\n            BaseRemove(url.Name);\n    }\n\n    public void RemoveAt(int index)\n    {\n        BaseRemoveAt(index);\n    }\n\n    public void Remove(string name)\n    {\n        BaseRemove(name);\n    }\n\n    public void Clear()\n    {\n        BaseClear();\n    }\n}\n\n// Define the custom UrlsConfigElement elements that are contained \n// by the custom UrlsCollection.\n// Notice that you can change the default values to create new default elements.\npublic class UrlConfigElement : ConfigurationElement\n{\n    public UrlConfigElement(String name, String url)\n    {\n        this.Name = name;\n        this.Url = url;\n    }\n\n    public UrlConfigElement()\n    {\n\n        this.Name = &quot;Contoso&quot;;\n        this.Url = &quot;http://www.contoso.com&quot;;\n        this.Port = 0;\n    }\n\n    [ConfigurationProperty(&quot;name&quot;, DefaultValue = &quot;Contoso&quot;,\n        IsRequired = true, IsKey = true)]\n    public string Name\n    {\n        get\n        {\n            return (string)this[&quot;name&quot;];\n        }\n        set\n        {\n            this[&quot;name&quot;] = value;\n        }\n    }\n\n    [ConfigurationProperty(&quot;url&quot;, DefaultValue = &quot;http://www.contoso.com&quot;,\n        IsRequired = true)]\n    [RegexStringValidator(@&quot;\\w+:\\/\\/[\\w.]+\\S*&quot;)]\n    public string Url\n    {\n        get\n        {\n            return (string)this[&quot;url&quot;];\n        }\n        set\n        {\n            this[&quot;url&quot;] = value;\n        }\n    }\n\n    [ConfigurationProperty(&quot;port&quot;, DefaultValue = (int)0, IsRequired = false)]\n    [IntegerValidator(MinValue = 0, MaxValue = 8080, ExcludeRange = false)]\n    public int Port\n    {\n        get\n        {\n            return (int)this[&quot;port&quot;];\n        }\n        set\n        {\n            this[&quot;port&quot;] = value;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationCollectionAttribute#1\">\nImports System\nImports System.Configuration\n\n\n\n\n&#39; Define a custom section that contains a custom\n&#39; UrlsCollection collection of custom UrlConfigElement elements.\n&#39; This class shows how to use the ConfigurationCollectionAttribute.\nPublic Class UrlsSection\n\tInherits ConfigurationSection\n    &#39; Declare the Urls collection property using the\n    &#39; ConfigurationCollectionAttribute.\n    &#39; This allows to build a nested section that contains\n    &#39; a collection of elements.\n    &lt;ConfigurationProperty(&quot;urls&quot;, IsDefaultCollection:=False),\n        System.Configuration.ConfigurationCollection(GetType(UrlsCollection),\n        AddItemName:=&quot;add&quot;, ClearItemsName:=&quot;clear&quot;, RemoveItemName:=&quot;remove&quot;)&gt; _\n    Public ReadOnly Property Urls() As UrlsCollection\n        Get\n            Dim urlsCollection As UrlsCollection = CType(MyBase.Item(&quot;urls&quot;), UrlsCollection)\n            Return urlsCollection\n        End Get\n    End Property\n\nEnd Class\n\n&#39; Define the custom UrlsCollection that contains the \n&#39; custom UrlsConfigElement elements.\nPublic Class UrlsCollection\n    Inherits ConfigurationElementCollection\n    Public Sub New()\n        Dim url As UrlConfigElement = CType(CreateNewElement(), UrlConfigElement)\n        Add(url)\n    End Sub\n\n    Public Overrides ReadOnly Property CollectionType() As ConfigurationElementCollectionType\n        Get\n            Return ConfigurationElementCollectionType.AddRemoveClearMap\n        End Get\n    End Property\n\n    Protected Overloads Overrides Function CreateNewElement() As ConfigurationElement\n        Return New UrlConfigElement()\n    End Function\n\n    Protected Overrides Function GetElementKey(ByVal element As ConfigurationElement) As Object\n        Return (CType(element, UrlConfigElement)).Name\n    End Function\n\n    Default Shadows Property Item(ByVal index As Integer) As UrlConfigElement\n        Get\n            Return CType(BaseGet(index), UrlConfigElement)\n        End Get\n        Set(ByVal value As UrlConfigElement)\n            If BaseGet(index) IsNot Nothing Then\n                BaseRemoveAt(index)\n            End If\n            BaseAdd(index, value)\n        End Set\n    End Property\n\n    Default Public Shadows ReadOnly Property Item(ByVal Name As String) As UrlConfigElement\n        Get\n            Return CType(BaseGet(Name), UrlConfigElement)\n        End Get\n    End Property\n\n    Public Function IndexOf(ByVal url As UrlConfigElement) As Integer\n        Return BaseIndexOf(url)\n    End Function\n\n    Public Sub Add(ByVal url As UrlConfigElement)\n        BaseAdd(url)\n    End Sub\n    Protected Overloads Overrides Sub BaseAdd(ByVal element As ConfigurationElement)\n        BaseAdd(element, False)\n    End Sub\n\n    Public Sub Remove(ByVal url As UrlConfigElement)\n        If BaseIndexOf(url) &gt;= 0 Then\n            BaseRemove(url.Name)\n        End If\n    End Sub\n\n    Public Sub RemoveAt(ByVal index As Integer)\n        BaseRemoveAt(index)\n    End Sub\n\n    Public Sub Remove(ByVal name As String)\n        BaseRemove(name)\n    End Sub\n\n    Public Sub Clear()\n        BaseClear()\n    End Sub\nEnd Class\n\n&#39; Define the custom UrlsConfigElement elements that are contained \n&#39; by the custom UrlsCollection.\nPublic Class UrlConfigElement\n    Inherits ConfigurationElement\n    Public Sub New(ByVal name As String, ByVal url As String)\n        Me.Name = name\n        Me.Url = url\n    End Sub\n\n    Public Sub New()\n        Me.Name = &quot;Contoso&quot;\n        Me.Url = &quot;http://www.contoso.com&quot;\n        Me.Port = 0\n    End Sub\n\n    &lt;ConfigurationProperty(&quot;name&quot;, DefaultValue:=&quot;Contoso&quot;, IsRequired:=True, IsKey:=True)&gt; _\n    Public Property Name() As String\n        Get\n            Return CStr(Me(&quot;name&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;name&quot;) = value\n        End Set\n    End Property\n\n    &lt;ConfigurationProperty(&quot;url&quot;, DefaultValue:=&quot;http://www.contoso.com&quot;, IsRequired:=True),\n        RegexStringValidator(&quot;\\w+:\\/\\/[\\w.]+\\S*&quot;)&gt; _\n    Public Property Url() As String\n        Get\n            Return CStr(Me(&quot;url&quot;))\n        End Get\n        Set(ByVal value As String)\n            Me(&quot;url&quot;) = value\n        End Set\n    End Property\n\n    &lt;ConfigurationProperty(&quot;port&quot;, DefaultValue:=0, IsRequired:=False),\n        IntegerValidator(MinValue:=0, MaxValue:=8080, ExcludeRange:=False)&gt; _\n    Public Property Port() As Integer\n        Get\n            Return CInt(Fix(Me(&quot;port&quot;)))\n        End Get\n        Set(ByVal value As Integer)\n            Me(&quot;port&quot;) = value\n        End Set\n    End Property\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationCollectionAttribute#31\">using System;\nusing System.Configuration;\n\n\nclass UsingConfigurationCollectionAttribute\n{\n\n    // Create a custom section and save it in the \n    // application configuration file.\n    static void CreateCustomSection()\n    {\n        try\n        {\n\n            // Create a custom configuration section.\n            UrlsSection myUrlsSection = new UrlsSection();\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Add the custom section to the application\n            // configuration file.\n            if (config.Sections[&quot;MyUrls&quot;] == null)\n            {\n                config.Sections.Add(&quot;MyUrls&quot;, myUrlsSection);\n            }\n\n           \n            // Save the application configuration file.\n            myUrlsSection.SectionInformation.ForceSave = true;\n            config.Save(ConfigurationSaveMode.Modified);\n\n            Console.WriteLine(&quot;Created custom section in the application configuration file: {0}&quot;,\n                config.FilePath);\n            Console.WriteLine();\n\n        }\n        catch (ConfigurationErrorsException err)\n        {\n            Console.WriteLine(&quot;CreateCustomSection: {0}&quot;, err.ToString());\n        }\n\n    }\n\n    static void ReadCustomSection()\n    {\n        try\n        {\n            // Get the application configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None) as Configuration;\n\n            // Read and display the custom section.\n            UrlsSection myUrlsSection =\n               ConfigurationManager.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n            if (myUrlsSection == null)\n                Console.WriteLine(&quot;Failed to load UrlsSection.&quot;);\n            else\n            {\n                Console.WriteLine(&quot;URLs defined in the configuration file:&quot;);\n                for (int i = 0; i &lt; myUrlsSection.Urls.Count; i++)\n                {\n                    Console.WriteLine(&quot;  Name={0} URL={1} Port={2}&quot;,\n                        myUrlsSection.Urls[i].Name,\n                        myUrlsSection.Urls[i].Url,\n                        myUrlsSection.Urls[i].Port);\n                }\n            }\n          \n        }\n        catch (ConfigurationErrorsException err)\n        {\n            Console.WriteLine(&quot;ReadCustomSection(string): {0}&quot;, err.ToString());\n        }\n\n    }\n    \n    static void Main(string[] args)\n    {\n       \n        // Get the name of the application.\n        string appName =\n            Environment.GetCommandLineArgs()[0];\n\n        // Create a custom section and save it in the \n        // application configuration file.\n        CreateCustomSection();\n\n        // Read the custom section saved in the\n        // application configuration file.\n        ReadCustomSection();\n\n        Console.WriteLine();\n        Console.WriteLine(&quot;Enter any key to exit.&quot;);\n\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationCollectionAttribute#31\">Imports System.Configuration\n\n\nFriend Class UsingConfigurationCollectionAttribute\n\n\t&#39; Create a custom section and save it in the \n\t&#39; application configuration file.\n\tPrivate Shared Sub CreateCustomSection()\n\t\tTry\n\n\t\t\t&#39; Create a custom configuration section.\n\t\t\tDim myUrlsSection As New UrlsSection()\n\n\t\t\t&#39; Get the current configuration file.\n            Dim config As System.Configuration.Configuration =\n                ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)\n\n\t\t\t&#39; Add the custom section to the application\n\t\t\t&#39; configuration file.\n\t\t\tIf config.Sections(&quot;MyUrls&quot;) Is Nothing Then\n\t\t\t\tconfig.Sections.Add(&quot;MyUrls&quot;, myUrlsSection)\n\t\t\tEnd If\n\n\n\t\t\t&#39; Save the application configuration file.\n\t\t\tmyUrlsSection.SectionInformation.ForceSave = True\n\t\t\tconfig.Save(ConfigurationSaveMode.Modified)\n\n\t\t\tConsole.WriteLine(&quot;Created custom section in the application configuration file: {0}&quot;, config.FilePath)\n\t\t\tConsole.WriteLine()\n\n\t\tCatch err As ConfigurationErrorsException\n\t\t\tConsole.WriteLine(&quot;CreateCustomSection: {0}&quot;, err.ToString())\n\t\tEnd Try\n\n\tEnd Sub\n\n\tPrivate Shared Sub ReadCustomSection()\n\t\tTry\n\t\t\t&#39; Get the application configuration file.\n\t\t\tDim config As System.Configuration.Configuration = TryCast(ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None), Configuration)\n\n\t\t\t&#39; Read and display the custom section.\n\t\t\tDim myUrlsSection As UrlsSection = TryCast(ConfigurationManager.GetSection(&quot;MyUrls&quot;), UrlsSection)\n\n\t\t\tIf myUrlsSection Is Nothing Then\n\t\t\t\tConsole.WriteLine(&quot;Failed to load UrlsSection.&quot;)\n\t\t\tElse\n\t\t\t\tConsole.WriteLine(&quot;URLs defined in app.config:&quot;)\n\t\t\t\tFor i As Integer = 0 To myUrlsSection.Urls.Count - 1\n\t\t\t\t\tConsole.WriteLine(&quot;  Name={0} URL={1} Port={2}&quot;, myUrlsSection.Urls(i).Name, myUrlsSection.Urls(i).Url, myUrlsSection.Urls(i).Port)\n\t\t\t\tNext i\n\t\t\tEnd If\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;ReadCustomSection(string): {0}&quot;, err.ToString())\n\t\tEnd Try\n\n\tEnd Sub\n\n\tShared Sub Main(ByVal args() As String)\n\n\t\t&#39; Get the name of the application.\n\t\tDim appName As String = Environment.GetCommandLineArgs()(0)\n\n\t\t&#39; Create a custom section and save it in the \n\t\t&#39; application configuration file.\n\t\tCreateCustomSection()\n\n\t\t&#39; Read the custom section saved in the\n\t\t&#39; application configuration file.\n\t\tReadCustomSection()\n\n        Console.WriteLine()\n        Console.WriteLine(&quot;Enter any key to exit.&quot;)\n\n\t\tConsole.ReadLine()\n\tEnd Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>You use the ConfigurationCollectionAttribute attribute to decorate a <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a> element. This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> values.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the elements and decorate them with the ConfigurationCollectionAttribute attribute. For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a> instance. You can also use the programmatic model. In this case it is your responsibility to declare the custom public collection but also to override the <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a> member and return the properties collection.  </p>\n</div>\n<p> The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attributes:  </p>\n<ul>\n<li><p>The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties. These types include:  </p>\n<ul>\n<li><p>ConfigurationCollectionAttribute  </p>\n</li>\n<li><a class=\"xref\" href=\"system.configuration.configurationpropertyattribute\" data-linktype=\"relative-path\">ConfigurationPropertyAttribute</a>  \n</li>\n</ul>\n</li>\n<li><p>The attributes that instruct the .NET Framework how to validate the custom configuration element properties. These types include:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.configuration.integervalidatorattribute\" data-linktype=\"relative-path\">IntegerValidatorAttribute</a>  \n</li>\n<li><a class=\"xref\" href=\"system.configuration.longvalidatorattribute\" data-linktype=\"relative-path\">LongValidatorAttribute</a>  \n</li>\n<li><a class=\"xref\" href=\"system.configuration.regexstringvalidatorattribute\" data-linktype=\"relative-path\">RegexStringValidatorAttribute</a>  \n</li>\n<li><a class=\"xref\" href=\"system.configuration.stringvalidatorattribute\" data-linktype=\"relative-path\">StringValidatorAttribute</a>  \n</li>\n<li><a class=\"xref\" href=\"system.configuration.timespanvalidatorattribute\" data-linktype=\"relative-path\">TimeSpanValidatorAttribute</a></li>\n</ul>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationCollectionAttribute__ctor_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConfigurationCollectionAttribute(Type)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.configurationcollectionattribute\" data-linktype=\"relative-path\">ConfigurationCollectionAttribute</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ConfigurationCollectionAttribute (Type itemType);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>itemType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the property collection to create.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>itemType</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You use this constructor to tell the .NET Framework the custom type of the property collection to be created.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationCollectionAttribute_AddItemName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddItemName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the <code>&lt;add&gt;</code> configuration element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string AddItemName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name that substitutes the standard name &quot;add&quot; for the configuration item.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The AddItemName property allows you to assign a different name to the configuration element. For example, you could use <code>addUrl</code> instead of &quot;add&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationCollectionAttribute_ClearItemsName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClearItemsName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name for the <code>&lt;clear&gt;</code> configuration element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ClearItemsName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name that replaces the standard name &quot;clear&quot; for the configuration item.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ClearItemsName property allows you to assign a different name to the <code>&lt;clear&gt;</code> configuration element. For example, you could use <code>clearUrls</code> instead of &quot;clear&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationCollectionAttribute_CollectionType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CollectionType</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the type of the <a class=\"xref\" href=\"system.configuration.configurationcollectionattribute\" data-linktype=\"relative-path\">ConfigurationCollectionAttribute</a> attribute.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.ConfigurationElementCollectionType CollectionType { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelementcollectiontype\" data-linktype=\"relative-path\">ConfigurationElementCollectionType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the <a class=\"xref\" href=\"system.configuration.configurationcollectionattribute\" data-linktype=\"relative-path\">ConfigurationCollectionAttribute</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationCollectionAttribute_ItemType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ItemType</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the type of the collection element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Type ItemType { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the collection element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ItemType property is used by reflection to get the configuration element type.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_ConfigurationCollectionAttribute_RemoveItemName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoveItemName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name for the <code>&lt;remove&gt;</code> configuration element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string RemoveItemName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name that replaces the standard name &quot;remove&quot; for the configuration element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The RemoveItemName property allows you to assign a different name to the <code>&lt;remove&gt;</code> configuration element. For example, you could use <code>removeUrl</code> instead of &quot;remove&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.ConfigurationCollectionAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationCollectionAttribute\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationCollectionAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationCollectionAttribute.AddItemName\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationCollectionAttribute.ClearItemsName\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationCollectionAttribute.CollectionType\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationCollectionAttribute.ItemType\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationCollectionAttribute.RemoveItemName\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"67d7de7d-d7fc-43be-1d6b-0d965b4a0620\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.configuration/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.ConfigurationCollectionAttribute\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.ConfigurationCollectionAttribute.yml","open_to_public_contributors":false,"api_name":["System.Configuration.ConfigurationCollectionAttribute","System.Configuration.ConfigurationCollectionAttribute..ctor","System.Configuration.ConfigurationCollectionAttribute.AddItemName","System.Configuration.ConfigurationCollectionAttribute.ClearItemsName","System.Configuration.ConfigurationCollectionAttribute.CollectionType","System.Configuration.ConfigurationCollectionAttribute.ItemType","System.Configuration.ConfigurationCollectionAttribute.RemoveItemName"],"api_location":["System.Configuration.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.ConfigurationCollectionAttribute","System::Configuration::ConfigurationCollectionAttribute","System.Configuration.ConfigurationCollectionAttribute.#ctor","System::Configuration::ConfigurationCollectionAttribute::#ctor","System.Configuration.ConfigurationCollectionAttribute.AddItemName","System::Configuration::ConfigurationCollectionAttribute::AddItemName","System.Configuration.ConfigurationCollectionAttribute.ClearItemsName","System::Configuration::ConfigurationCollectionAttribute::ClearItemsName","System.Configuration.ConfigurationCollectionAttribute.CollectionType","System::Configuration::ConfigurationCollectionAttribute::CollectionType","System.Configuration.ConfigurationCollectionAttribute.ItemType","System::Configuration::ConfigurationCollectionAttribute::ItemType","System.Configuration.ConfigurationCollectionAttribute.RemoveItemName","System::Configuration::ConfigurationCollectionAttribute::RemoveItemName"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"67d7de7d-d7fc-43be-1d6b-0d965b4a0620","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConfigurationCollectionAttribute class | Microsoft Docs","_op_ogTitle":"ConfigurationCollectionAttribute class","description":"Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Configuration/toc.json","toc_rel":"_splitted/System.Configuration/toc.json","source_url":"","ms.assetid":"System.Configuration.ConfigurationCollectionAttribute","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationcollectionattribute","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationcollectionattribute","fileRelativePath":"api/System.Configuration.ConfigurationCollectionAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}