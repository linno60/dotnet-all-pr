{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridViewCellErrorTextNeededEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class DataGridViewCellErrorTextNeededEventArgs : System.Windows.Forms.DataGridViewCellEventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></span></div><span class=\"lang-csharp\">DataGridViewCellErrorTextNeededEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_ColumnIndex\" data-linktype=\"relative-path\">ColumnIndex</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex\" data-linktype=\"relative-path\">RowIndex</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>In the following code example demonstrates how to create error messages for cells without unsharing rows or causing the cell error to be duplicated over all the shared cells.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">private ToolStripMenuItem wholeTable = new ToolStripMenuItem();\nprivate ToolStripMenuItem lookUp = new ToolStripMenuItem();\nprivate ContextMenuStrip strip;\nprivate string cellErrorText;\n\nprivate void dataGridView1_CellContextMenuStripNeeded(object sender,\n    DataGridViewCellContextMenuStripNeededEventArgs e)\n{\n    cellErrorText = String.Empty;\n\n    if (strip == null)\n    {\n        strip = new ContextMenuStrip();\n        lookUp.Text = &quot;Look Up&quot;;\n        wholeTable.Text = &quot;See Whole Table&quot;;\n        strip.Items.Add(lookUp);\n        strip.Items.Add(wholeTable);\n    }\n    e.ContextMenuStrip = strip;\n}\n\nprivate void wholeTable_Click(object sender, EventArgs e)\n{\n    dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, true);\n}\n\nprivate DataGridViewCellEventArgs theCellImHoveringOver;\n\nprivate void dataGridView1_CellMouseEnter(object sender, DataGridViewCellEventArgs e)\n{\n    theCellImHoveringOver = e;\n}\n\nprivate DataGridViewCellEventArgs cellErrorLocation;\n\nprivate void lookUp_Click(object sender, EventArgs e)\n{\n    try\n    {\n        dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; +\n            dataGridView1.Columns[theCellImHoveringOver.ColumnIndex].Name + &quot; = &#39;&quot; +\n            dataGridView1.Rows[theCellImHoveringOver.RowIndex].\n            Cells[theCellImHoveringOver.ColumnIndex].Value + &quot;&#39;&quot;,\n            true);\n    }\n    catch (SqlException)\n    {\n        cellErrorText = &quot;Can&#39;t look this cell up&quot;;\n        cellErrorLocation = theCellImHoveringOver;\n    }\n}\n\nprivate void dataGridView1_CellErrorTextNeeded(object sender,\n    DataGridViewCellErrorTextNeededEventArgs e)\n{\n    if (cellErrorLocation != null)\n    {\n        if (e.ColumnIndex == cellErrorLocation.ColumnIndex &amp;&amp;\n            e.RowIndex == cellErrorLocation.RowIndex)\n        {\n            e.ErrorText = cellErrorText;\n        }\n    }\n}\n\nprivate DataTable Populate(string query, bool resetUnsharedCounter)\n{\n    if (resetUnsharedCounter)\n    {\n        ResetCounter();\n    }\n\n    // Alter the data source as necessary\n    SqlDataAdapter adapter = new SqlDataAdapter(query,\n        new SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; +\n        &quot;Initial Catalog=Northwind;Data Source=localhost&quot;));\n\n    DataTable table = new DataTable();\n    table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n    adapter.Fill(table);\n    return table;\n}\n\nprivate Label count = new Label();\nprivate int unsharedRowCounter;\n\nprivate void ResetCounter()\n{\n    unsharedRowCounter = 0;\n    count.Text = unsharedRowCounter.ToString();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">ToolStripMenuItem^ wholeTable;\nToolStripMenuItem^ lookUp;\nSystem::Windows::Forms::ContextMenuStrip^ strip;\nString^ cellErrorText;\n\nvoid dataGridView1_CellContextMenuStripNeeded( Object^ /*sender*/,\n    DataGridViewCellContextMenuStripNeededEventArgs^ e )\n{\n    cellErrorText = String::Empty;\n    if ( strip == nullptr )\n    {\n        strip = gcnew System::Windows::Forms::ContextMenuStrip;\n        lookUp-&gt;Text = L&quot;Look Up&quot;;\n        wholeTable-&gt;Text = L&quot;See Whole Table&quot;;\n        strip-&gt;Items-&gt;Add( lookUp );\n        strip-&gt;Items-&gt;Add( wholeTable );\n    }\n\n    e-&gt;ContextMenuStrip = strip;\n}\n\nvoid wholeTable_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n{\n    dataGridView1-&gt;DataSource = Populate( L&quot;Select * from employees&quot;, true );\n}\n\nDataGridViewCellEventArgs^ theCellImHoveringOver;\nvoid dataGridView1_CellMouseEnter( Object^ /*sender*/, DataGridViewCellEventArgs^ e )\n{\n    theCellImHoveringOver = e;\n}\n\nDataGridViewCellEventArgs^ cellErrorLocation;\nvoid lookUp_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n{\n    try\n    {\n        dataGridView1-&gt;DataSource = Populate( String::Format( L&quot;Select * from employees where {0} = &#39;{1}&#39;&quot;, dataGridView1-&gt;Columns[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Name, dataGridView1-&gt;Rows[ theCellImHoveringOver-&gt;RowIndex ]-&gt;Cells[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Value ), true );\n    }\n    catch ( ... ) \n    {\n        cellErrorText = L&quot;Can&#39;t look this cell up&quot;;\n        cellErrorLocation = theCellImHoveringOver;\n    }\n\n}\n\nvoid dataGridView1_CellErrorTextNeeded( Object^ /*sender*/, DataGridViewCellErrorTextNeededEventArgs^ e )\n{\n    if ( cellErrorLocation != nullptr )\n    {\n        if ( e-&gt;ColumnIndex == cellErrorLocation-&gt;ColumnIndex &amp;&amp; e-&gt;RowIndex == cellErrorLocation-&gt;RowIndex )\n        {\n            e-&gt;ErrorText = cellErrorText;\n        }\n    }\n}\n\nDataTable^ Populate( String^ query, bool resetUnsharedCounter )\n{\n    if ( resetUnsharedCounter )\n    {\n        ResetCounter();\n    }\n\n\n    // Alter the data source as necessary\n    SqlDataAdapter^ adapter = gcnew SqlDataAdapter( query,\n        gcnew SqlConnection( L&quot;Integrated Security=SSPI;Persist Security Info=False;&quot;\n        L&quot;Initial Catalog=Northwind;Data Source= localhost&quot; ) );\n    DataTable^ table = gcnew DataTable;\n    adapter-&gt;Fill( table );\n    return table;\n}\n\nLabel^ count;\nint unsharedRowCounter;\nvoid ResetCounter()\n{\n    unsharedRowCounter = 0;\n    count-&gt;Text = unsharedRowCounter.ToString();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">Private WithEvents wholeTable As New ToolStripMenuItem()\nPrivate WithEvents lookUp As New ToolStripMenuItem()\nPrivate strip As ContextMenuStrip\nPrivate cellErrorText As String\n\nPrivate Sub dataGridView1_CellContextMenuStripNeeded(ByVal sender As Object, _\n    ByVal e As DataGridViewCellContextMenuStripNeededEventArgs) _\n    Handles dataGridView1.CellContextMenuStripNeeded\n\n    cellErrorText = String.Empty\n\n    If strip Is Nothing Then\n        strip = New ContextMenuStrip()\n        lookUp.Text = &quot;Look Up&quot;\n        wholeTable.Text = &quot;See Whole Table&quot;\n        strip.Items.Add(lookUp)\n        strip.Items.Add(wholeTable)\n    End If\n    e.ContextMenuStrip = strip\nEnd Sub\n\nPrivate Sub wholeTable_Click(ByVal sender As Object, ByVal e As EventArgs) Handles wholeTable.Click\n    dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, True)\nEnd Sub\n\nPrivate theCellImHoveringOver As DataGridViewCellEventArgs\n\nPrivate Sub dataGridView1_CellMouseEnter(ByVal sender As Object, _\n    ByVal e As DataGridViewCellEventArgs) _\n    Handles dataGridView1.CellMouseEnter\n\n    theCellImHoveringOver = e\nEnd Sub\n\nPrivate cellErrorLocation As DataGridViewCellEventArgs\n\nPrivate Sub lookUp_Click(ByVal sender As Object, ByVal e As EventArgs) Handles lookUp.Click\n    Try\n        dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; &amp; _\n            dataGridView1.Columns(theCellImHoveringOver.ColumnIndex).Name &amp; &quot; = &#39;&quot; &amp; _\n            dataGridView1.Rows(theCellImHoveringOver.RowIndex).Cells(theCellImHoveringOver.ColumnIndex).Value.ToString() &amp; _\n            &quot;&#39;&quot;, True)\n    Catch ex As SqlException\n        cellErrorText = &quot;Can&#39;t look this cell up&quot;\n        cellErrorLocation = theCellImHoveringOver\n    End Try\nEnd Sub\n\nPrivate Sub dataGridView1_CellErrorTextNeeded(ByVal sender As Object, _\n            ByVal e As DataGridViewCellErrorTextNeededEventArgs) _\n            Handles dataGridView1.CellErrorTextNeeded\n    If (Not cellErrorLocation Is Nothing) Then\n        If e.ColumnIndex = cellErrorLocation.ColumnIndex AndAlso _\n            e.RowIndex = cellErrorLocation.RowIndex Then\n            e.ErrorText = cellErrorText\n        End If\n    End If\nEnd Sub\n\nPrivate Function Populate(ByVal query As String, ByVal resetUnsharedCounter As Boolean) As DataTable\n\n    If resetUnsharedCounter Then\n        ResetCounter()\n    End If\n\n    &#39; Alter the data source as necessary\n    Dim adapter As New SqlDataAdapter(query, _\n        New SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; &amp; _\n        &quot;Initial Catalog=Northwind;Data Source=localhost&quot;))\n\n    Dim table As New DataTable()\n    table.Locale = System.Globalization.CultureInfo.InvariantCulture\n    adapter.Fill(table)\n    Return table\nEnd Function\n\nPrivate count As New Label()\nPrivate unsharedRowCounter As Integer\n\nPrivate Sub ResetCounter()\n    unsharedRowCounter = 0\n    count.Text = unsharedRowCounter.ToString()\nEnd Sub\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>. Handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event is useful when you want to determine the error for a cell depending on its value or state.  </p>\n<p> When you handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event and specify error text in the handler, an error glyph appears in the cell unless the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ShowCellErrors_\" data-linktype=\"relative-path\">ShowCellErrors</a> property is set to <code>false</code> or the cell is in edit mode. When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event also occurs whenever the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property is retrieved.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> property to determine the state or value of a cell, and use this information to change or modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellerrortextneededeventargs#System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property. This property is initialized with the value of the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property, which the event value overrides.  </p>\n<p> Handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event when working with large amounts of data to avoid the performance penalties of setting the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> value for multiple cells. For more information, see <a href=\"../topic/best%20practices%20for%20scaling%20the%20windows%20forms%20datagridview%20control\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ErrorText</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the message that is displayed when the cell is selected.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ErrorText { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The error message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property initially contains the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property if it has been set for a row.  </p>\n<p> The ErrorText property value displays as a ToolTip for the error glyph in the cell.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"ce0d676b-fc24-a66c-3d31-e16ae3f6e060\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs","System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs","System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs","System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText","System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs::ErrorText"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"ce0d676b-fc24-a66c-3d31-e16ae3f6e060","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/DataGridViewCellErrorTextNeededEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewCellErrorTextNeededEventArgs class | Microsoft Docs","_op_ogTitle":"DataGridViewCellErrorTextNeededEventArgs class","description":"Provides data for the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewcellerrortextneededeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewcellerrortextneededeventargs","fileRelativePath":"api/System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}