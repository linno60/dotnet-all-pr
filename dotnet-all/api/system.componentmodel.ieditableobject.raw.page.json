{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IEditableObject</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides functionality to commit or rollback changes to an object that is used as a data source.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IEditableObject</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following sample provides a simple implementation of the IEditableObject interface. The <code>Customer</code> class stores customer information and can be used as a collection for a customer database. This sample assumes that you have used the <code>CustomerList</code> class that can be found in sample in the <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"Binding_Editable#1\">public class Customer : IEditableObject \n{\n      \n\tstruct CustomerData \n\t{\n\t\tinternal string id ;\n\t\tinternal string firstName ;\n\t\tinternal string lastName ;\n\t}\n       \n\tprivate CustomersList parent;\n\tprivate CustomerData custData; \n\tprivate CustomerData backupData; \n\tprivate bool inTxn = false;\n\n\t// Implements IEditableObject\n\tvoid IEditableObject.BeginEdit() \n\t{\n\t\tConsole.WriteLine(&quot;Start BeginEdit&quot;);\n\t\tif (!inTxn) \n\t\t{\n\t\t\tthis.backupData = custData;\n\t\t\tinTxn = true;\n\t\t\tConsole.WriteLine(&quot;BeginEdit - &quot; + this.backupData.lastName);\n\t\t}\n\t\tConsole.WriteLine(&quot;End BeginEdit&quot;);\n\t}\n\n\tvoid IEditableObject.CancelEdit() \n\t{\n\t\tConsole.WriteLine(&quot;Start CancelEdit&quot;);\n\t\tif (inTxn) \n\t\t{\n\t\t\tthis.custData = backupData;\n\t\t\tinTxn = false;\n\t\t\tConsole.WriteLine(&quot;CancelEdit - &quot; + this.custData.lastName);\n\t\t}\n\t\tConsole.WriteLine(&quot;End CancelEdit&quot;);\n\t}\n\n\tvoid IEditableObject.EndEdit() \n\t{\n\t\tConsole.WriteLine(&quot;Start EndEdit&quot; + this.custData.id + this.custData.lastName);\n\t\tif (inTxn) \n\t\t{\n\t\t\tbackupData = new CustomerData();\n\t\t\tinTxn = false;\n\t\t\tConsole.WriteLine(&quot;Done EndEdit - &quot; + this.custData.id + this.custData.lastName);\n\t\t}\n\t\tConsole.WriteLine(&quot;End EndEdit&quot;);\n\t}\n\n\tpublic Customer(string ID) : base() \n\t{\n\t\tthis.custData = new CustomerData();\n\t\tthis.custData.id = ID;\n\t\tthis.custData.firstName = &quot;&quot;;\n\t\tthis.custData.lastName = &quot;&quot;;\n\t}\n\n\tpublic string ID \n\t{\n\t\tget \n\t\t{\n\t\t\treturn this.custData.id;\n\t\t}\n\t}\n       \n\tpublic string FirstName \n\t{\n\t\tget \n\t\t{\n\t\t\treturn this.custData.firstName;\n\t\t}\n\t\tset \n\t\t{\n\t\t\tthis.custData.firstName = value;\n               this.OnCustomerChanged();\n\t\t}\n\t}\n            \n\tpublic string LastName \n\t{\n\t\tget \n\t\t{\n\t\t\treturn this.custData.lastName;\n\t\t}\n\t\tset \n\t\t{\n\t\t\tthis.custData.lastName = value;\n               this.OnCustomerChanged();\n\t\t}\n\t}\n      \n\tinternal CustomersList Parent \n\t{\n\t\tget \n\t\t{\n\t\t\treturn parent;\n\t\t}\n\t\tset \n\t\t{\n\t\t\tparent = value ;\n\t\t}\n\t}\n\n\tprivate void OnCustomerChanged() \n\t{\n\t\tif (!inTxn &amp;&amp; Parent != null) \n\t\t{\n\t\t\tParent.CustomerChanged(this);\n\t\t}\n\t}\n\t\n\tpublic override string ToString() \n\t{\n\t\tStringWriter sb = new StringWriter();\n\t\tsb.Write(this.FirstName);\n\t\tsb.Write(&quot; &quot;);\n\t\tsb.Write(this.LastName);\n\t\treturn sb.ToString();\n\t}   \n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Binding_Editable#1\">public ref class Customer: public IEditableObject\n{\nprivate:\n   ref struct CustomerData\n   {\n   internal:\n      String^ id;\n      String^ firstName;\n      String^ lastName;\n   };\n\ninternal:\n   CustomersList^ parent;\n   CustomerData^ custData;\n   CustomerData^ backupData;\n   bool inTxn;\n\n   // Implements IEditableObject\npublic:\n   virtual void BeginEdit()\n   {\n      Console::WriteLine( &quot;Start BeginEdit&quot; );\n      if (  !inTxn )\n      {\n         this-&gt;backupData = custData;\n         inTxn = true;\n         Console::WriteLine( &quot;BeginEdit - {0}&quot;, this-&gt;backupData-&gt;lastName );\n      }\n\n      Console::WriteLine( &quot;End BeginEdit&quot; );\n   }\n\n   virtual void CancelEdit()\n   {\n      Console::WriteLine( &quot;Start CancelEdit&quot; );\n      if ( inTxn )\n      {\n         this-&gt;custData = backupData;\n         inTxn = false;\n         Console::WriteLine( &quot;CancelEdit - {0}&quot;, this-&gt;custData-&gt;lastName );\n      }\n\n      Console::WriteLine( &quot;End CancelEdit&quot; );\n   }\n\n   virtual void EndEdit()\n   {\n      Console::WriteLine( &quot;Start EndEdit{0}{1}&quot;, this-&gt;custData-&gt;id, this-&gt;custData-&gt;lastName );\n      if ( inTxn )\n      {\n         backupData = gcnew CustomerData;\n         inTxn = false;\n         Console::WriteLine( &quot;Done EndEdit - {0}{1}&quot;, this-&gt;custData-&gt;id, this-&gt;custData-&gt;lastName );\n      }\n\n      Console::WriteLine( &quot;End EndEdit&quot; );\n   }\n\n\npublic:\n\n   Customer( String^ ID )\n   {\n      this-&gt;custData = gcnew CustomerData;\n      this-&gt;custData-&gt;id = ID;\n      this-&gt;custData-&gt;firstName = &quot;&quot;;\n      this-&gt;custData-&gt;lastName = &quot;&quot;;\n      inTxn = false;\n   }\n\n   property String^ ID \n   {\n      String^ get()\n      {\n         return this-&gt;custData-&gt;id;\n      }\n\n   }\n\n   property String^ FirstName \n   {\n      String^ get()\n      {\n         return this-&gt;custData-&gt;firstName;\n      }\n\n      void set( String^ value )\n      {\n         this-&gt;custData-&gt;firstName = value;\nthis-&gt;OnCustomerChanged();\n      }\n\n   }\n\n   property String^ LastName \n   {\n      String^ get()\n      {\n         return this-&gt;custData-&gt;lastName;\n      }\n\n      void set( String^ value )\n      {\n         this-&gt;custData-&gt;lastName = value;\nthis-&gt;OnCustomerChanged();\n      }\n\n   }\n\ninternal:\n\n   property CustomersList^ Parent \n   {\n      CustomersList^ get()\n      {\n         return parent;\n      }\n\n      void set( CustomersList^ value )\n      {\n         parent = value;\n      }\n\n   }\n\nvoid OnCustomerChanged()\n{\n      if (!inTxn &amp;&amp; Parent != nullptr)\n      {\n Parent-&gt;CustomerChanged(this);\n}\n}\n\npublic:\n   virtual String^ ToString() override\n   {\n      StringWriter^ sb = gcnew StringWriter;\n      sb-&gt;Write( this-&gt;FirstName );\n      sb-&gt;Write( &quot; &quot; );\n      sb-&gt;Write( this-&gt;LastName );\n      return sb-&gt;ToString();\n   }\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"Binding_Editable#1\">Public Class Customer\n    Implements IEditableObject\n\n    Structure CustomerData\n        Friend id As String\n        Friend firstName As String\n        Friend lastName As String\n    End Structure \n\n    Public parent As CustomersList\n    Private custData As CustomerData\n    Private backupData As CustomerData\n    Private inTxn As Boolean = False\n\n\n    &#39; Implements IEditableObject\n    Sub BeginEdit() Implements IEditableObject.BeginEdit\n        Console.WriteLine(&quot;Start BeginEdit&quot;)\n        If Not inTxn Then\n            Me.backupData = custData\n            inTxn = True\n            Console.WriteLine((&quot;BeginEdit - &quot; + Me.backupData.lastName))\n        End If\n        Console.WriteLine(&quot;End BeginEdit&quot;)\n    End Sub \n\n\n    Sub CancelEdit() Implements IEditableObject.CancelEdit\n        Console.WriteLine(&quot;Start CancelEdit&quot;)\n        If inTxn Then\n            Me.custData = backupData\n            inTxn = False\n            Console.WriteLine((&quot;CancelEdit - &quot; + Me.custData.lastName))\n        End If\n        Console.WriteLine(&quot;End CancelEdit&quot;)\n    End Sub \n\n\n    Sub EndEdit() Implements IEditableObject.EndEdit\n        Console.WriteLine((&quot;Start EndEdit&quot; + Me.custData.id + Me.custData.lastName))\n        If inTxn Then\n            backupData = New CustomerData()\n            inTxn = False\n            Console.WriteLine((&quot;Done EndEdit - &quot; + Me.custData.id + Me.custData.lastName))\n        End If\n        Console.WriteLine(&quot;End EndEdit&quot;)\n    End Sub \n\n\n    Public Sub New(ByVal ID As String)\n        Me.custData = New CustomerData()\n        Me.custData.id = ID\n        Me.custData.firstName = &quot;&quot;\n        Me.custData.lastName = &quot;&quot;\n    End Sub \n\n\n    Public ReadOnly Property ID() As String\n        Get\n            Return Me.custData.id\n        End Get\n    End Property\n\n\n    Public Property FirstName() As String\n        Get\n            Return Me.custData.firstName\n        End Get\n        Set(ByVal Value As String)\n            Me.custData.firstName = Value\n            Me.OnCustomerChanged()\n        End Set\n    End Property\n\n\n    Public Property LastName() As String\n        Get\n            Return Me.custData.lastName\n        End Get\n        Set(ByVal Value As String)\n            Me.custData.lastName = Value\n            Me.OnCustomerChanged()\n        End Set\n    End Property\n\n\n    Friend Property Parents() As CustomersList\n        Get\n            Return Parent\n        End Get\n        Set(ByVal Value As CustomersList)\n            parent = Value\n        End Set\n    End Property\n\n\n    Private Sub OnCustomerChanged()\n        If Not inTxn And (Parent IsNot Nothing) Then\n            Parent.CustomerChanged(Me)\n        End If\n    End Sub \n\n    \n    Public Overrides Function ToString() As String\n        Dim sb As New StringWriter()\n        sb.Write(Me.FirstName)\n        sb.Write(&quot; &quot;)\n        sb.Write(Me.LastName)\n        Return sb.ToString()\n    End Function \nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This interface is typically used to capture the <a class=\"xref\" href=\"system.componentmodel.ieditableobject#System_ComponentModel_IEditableObject_BeginEdit_\" data-linktype=\"relative-path\">BeginEdit</a>, <a class=\"xref\" href=\"system.componentmodel.ieditableobject#System_ComponentModel_IEditableObject_EndEdit_\" data-linktype=\"relative-path\">EndEdit</a>, and <a class=\"xref\" href=\"system.componentmodel.ieditableobject#System_ComponentModel_IEditableObject_CancelEdit_\" data-linktype=\"relative-path\">CancelEdit</a> semantics of a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IEditableObject_BeginEdit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginEdit()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins an edit on an object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BeginEdit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is typically used to capture the BeginEdit semantics of a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a>.  </p>\n<p> If BeginEdit is called on an object that is already being edited, the second and subsequent calls are ignored.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IEditableObject_CancelEdit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CancelEdit()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Discards changes since the last <span class=\"xref\">stem.ComponentModel.IEditableObject.BeginEdit*</span> call.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CancelEdit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is typically used to capture the CancelEdit semantics of a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a>.  </p>\n<p> This method will be ignored if called on an object that is not being edited.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the owning list implements <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a>, calling CancelEdit on an object created using <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AddNew_\" data-linktype=\"relative-path\">AddNew</a> discards the object.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_IEditableObject_EndEdit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndEdit()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Pushes changes since the last <span class=\"xref\">stem.ComponentModel.IEditableObject.BeginEdit*</span> or <span class=\"xref\">stem.ComponentModel.IBindingList.AddNew*</span> call into the underlying object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void EndEdit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is typically used to capture the EndEdit semantics of a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a>.  </p>\n<p> This method will be ignored if called on an object that is not being edited.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.IEditableObject.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IEditableObject\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IEditableObject.BeginEdit\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IEditableObject.CancelEdit\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.IEditableObject.EndEdit\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"74c990be-77ff-8259-ba50-bb1266eff1b6\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides functionality to commit or rollback changes to an object that is used as a data source.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.IEditableObject\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.IEditableObject.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.IEditableObject","System.ComponentModel.IEditableObject.BeginEdit","System.ComponentModel.IEditableObject.CancelEdit","System.ComponentModel.IEditableObject.EndEdit"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.IEditableObject","System::ComponentModel::IEditableObject","System.ComponentModel.IEditableObject.BeginEdit","System::ComponentModel::IEditableObject::BeginEdit","System.ComponentModel.IEditableObject.CancelEdit","System::ComponentModel::IEditableObject::CancelEdit","System.ComponentModel.IEditableObject.EndEdit","System::ComponentModel::IEditableObject::EndEdit"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"74c990be-77ff-8259-ba50-bb1266eff1b6","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IEditableObject.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IEditableObject interface | Microsoft Docs","_op_ogTitle":"IEditableObject interface","description":"Provides functionality to commit or rollback changes to an object that is used as a data source.\n","toc_asset_id":"api/_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.IEditableObject","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.ieditableobject","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.ieditableobject","fileRelativePath":"api/System.ComponentModel.IEditableObject.html"},"themesRelativePathToOutputRoot":"_themes/"}