{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">VirtualFile</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a file object in a virtual file or resource space.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class VirtualFile : System.Web.Hosting.VirtualFileBase</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.hosting.virtualfilebase\" data-linktype=\"relative-path\">VirtualFileBase</a></span></div><span class=\"lang-csharp\">VirtualFile</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.hosting.virtualfilebase#System_Web_Hosting_VirtualFileBase_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.hosting.virtualfilebase#System_Web_Hosting_VirtualFileBase_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.hosting.virtualfilebase#System_Web_Hosting_VirtualFileBase_VirtualPath\" data-linktype=\"relative-path\">VirtualPath</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example is a VirtualFile class implementation that combines information stored in a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object with a template file to return HTML data. This code example works with the code examples for the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> and <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> classes to provide virtual resources from a data store that is loaded into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object. For the complete instructions for compiling and running the example, see the Example section of the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> class overview.  </p>\n<p> This example has three parts: the VirtualFile class implementation, an XML data file used to populate the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object, and the page template file.  </p>\n<p> The first code example is an implementation of the VirtualFile class. Its constructor uses a method on a custom <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object to return a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object. It then searches the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object to retrieve the information associated with the virtual file path provided. In the <a class=\"xref\" href=\"system.web.hosting.virtualfile#System_Web_Hosting_VirtualFile_Open_\" data-linktype=\"relative-path\">Open</a> method, it combines the information from the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object with a template file and returns the combination as a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Hosting.VirtualPathProvider#40\">using System;\nusing System.Data;\nusing System.IO;\nusing System.Security.Permissions;\nusing System.Web;\nusing System.Web.Caching;\nusing System.Web.Hosting;\n\nnamespace Samples.AspNet.CS\n{\n  [AspNetHostingPermission(SecurityAction.Demand, Level = AspNetHostingPermissionLevel.Minimal)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand, Level = AspNetHostingPermissionLevel.Minimal)]\n  public class SampleVirtualFile : VirtualFile\n  {\n    private string content;\n    private SamplePathProvider spp;\n\n    public bool Exists\n    {\n      get { return (content != null); }\n    }\n\n    public SampleVirtualFile(string virtualPath, SamplePathProvider provider)\n      : base(virtualPath)\n    {\n      this.spp = provider;\n      GetData();\n    }\n\n    protected void GetData()\n    {\n      // Get the data from the SamplePathProvider\n      DataSet ds = spp.GetVirtualData();\n\n      // Get the virtual file from the resource table.\n      DataTable files = ds.Tables[&quot;resource&quot;];\n      DataRow[] rows = files.Select(\n        String.Format(&quot;(name = &#39;{0}&#39;) AND (type=&#39;file&#39;)&quot;, this.Name));\n\n      // If the select returned a row, store the file contents.\n      if (rows.Length &gt; 0)\n      {\n        DataRow row = rows[0];\n\n        content = row[&quot;content&quot;].ToString();\n      }\n    }\n\n    private string FormatTimeStamp(DateTime time)\n    {\n      return String.Format(&quot;{0} at {1}&quot;,\n        time.ToLongDateString(), time.ToLongTimeString());\n    }\n\n    public override Stream Open()\n    {\n      string templateFile = HostingEnvironment.ApplicationPhysicalPath + &quot;App_Data\\\\template.txt&quot;;\n      string pageTemplate;\n      DateTime now = DateTime.Now;\n\n      // Try to get the page template out of the cache.\n      pageTemplate = (string)HostingEnvironment.Cache.Get(&quot;pageTemplate&quot;);\n\n      if (pageTemplate == null)\n      {\n        // Get the page template.\n        using (StreamReader reader = new StreamReader(templateFile))\n        {\n          pageTemplate = reader.ReadToEnd();\n        }\n\n        // Set template timestamp\n        pageTemplate = pageTemplate.Replace(&quot;%templateTimestamp%&quot;, \n          FormatTimeStamp(now));\n\n        // Make pageTemplate dependent on the template file.\n        CacheDependency cd = new CacheDependency(templateFile);\n\n        // Put pageTemplate into cache for maximum of 20 minutes.\n        HostingEnvironment.Cache.Add(&quot;pageTemplate&quot;, pageTemplate, cd,\n          Cache.NoAbsoluteExpiration,\n          new TimeSpan(0, 20, 0),\n          CacheItemPriority.Default, null);\n      }\n\n      // Put the page data into the template.\n      pageTemplate = pageTemplate.Replace(&quot;%file%&quot;, this.Name);\n      pageTemplate = pageTemplate.Replace(&quot;%content%&quot;, content);\n\n      // Get the data time stamp from the cache.\n      DateTime dataTimeStamp = (DateTime)HostingEnvironment.Cache.Get(&quot;dataTimeStamp&quot;);\n      pageTemplate = pageTemplate.Replace(&quot;%dataTimestamp%&quot;, \n        FormatTimeStamp(dataTimeStamp));\n      pageTemplate = pageTemplate.Replace(&quot;%pageTimestamp%&quot;, \n        FormatTimeStamp(now));\n\n      // Put the page content on the stream.\n      Stream stream = new MemoryStream();\n      StreamWriter writer = new StreamWriter(stream);\n\n      writer.Write(pageTemplate);\n      writer.Flush();\n      stream.Seek(0, SeekOrigin.Begin);\n\n      return stream;\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Hosting.VirtualPathProvider#40\">Imports Microsoft.VisualBasic\n\nImports System\nImports System.Data\nImports System.IO\nImports System.Security.Permissions\nImports System.Web\nImports System.Web.Caching\nImports System.Web.Hosting\n\nNamespace Samples.AspNet.VB\n  &lt;AspNetHostingPermission(SecurityAction.Demand, Level:=AspNetHostingPermissionLevel.Minimal), _\n   AspNetHostingPermission(SecurityAction.InheritanceDemand, level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public Class SampleVirtualFile\n    Inherits VirtualFile\n\n    Private content As String\n    Private spp As SamplePathProvider\n\n    Public ReadOnly Property Exists() As Boolean\n      Get\n        Return (content &lt;&gt; String.Empty)\n      End Get\n    End Property\n\n    Public Sub New(ByVal virtualPath As String, ByVal provider As SamplePathProvider)\n      MyBase.New(virtualPath)\n      spp = provider\n      GetData()\n    End Sub\n\n    Protected Sub GetData()\n      &#39; Get the data from the SamplePathProvider.\n      Dim spp As SamplePathProvider\n      spp = CType(HostingEnvironment.VirtualPathProvider, SamplePathProvider)\n\n      Dim ds As DataSet\n      ds = spp.GetVirtualData\n\n      &#39; Get the virtual file data from the resource table.\n      Dim files As DataTable\n      files = ds.Tables(&quot;resource&quot;)\n\n      Dim rows As DataRow()\n      rows = files.Select( _\n        String.Format(&quot;(name=&#39;{0}&#39;) AND (type=&#39;file&#39;)&quot;, Me.Name))\n\n      &#39; If the select returned a row, store the file contents.\n      If (rows.Length &gt; 0) Then\n        Dim row As DataRow\n        row = rows(0)\n\n        content = row(&quot;content&quot;).ToString()\n      End If\n    End Sub\n\n\n    Private Function FormatTimeStamp(ByVal time As DateTime) As String\n      Return String.Format(&quot;{0} at {1}&quot;, _\n        time.ToLongDateString(), time.ToLongTimeString)\n    End Function\n\n    Public Overrides Function Open() As System.IO.Stream\n      Dim templateFile As String\n      templateFile = HostingEnvironment.ApplicationPhysicalPath &amp; &quot;App_Data\\template.txt&quot;\n\n      Dim pageTemplate As String\n      Dim now As DateTime\n      now = DateTime.Now\n\n      &#39; Try to get the page template out of the cache.\n      pageTemplate = CType(HostingEnvironment.Cache.Get(&quot;pageTemplate&quot;), String)\n\n      If pageTemplate Is Nothing Then\n        &#39; Get the page template.\n        Try\n          pageTemplate = My.Computer.FileSystem.ReadAllText(templateFile)\n        Catch fileException As Exception\n          Throw fileException\n        End Try\n\n        &#39; Set template timestamp.\n        pageTemplate = pageTemplate.Replace(&quot;%templateTimestamp%&quot;, _\n          FormatTimeStamp(Now))\n\n        &#39; Make pageTemplate dependent on the template file.\n        Dim cd As CacheDependency\n        cd = New CacheDependency(templateFile)\n\n        &#39; Put pageTemplate into cache for maximum of 20 minutes.\n        HostingEnvironment.Cache.Add(&quot;pageTemplate&quot;, pageTemplate, cd, _\n          Cache.NoAbsoluteExpiration, _\n          New TimeSpan(0, 20, 0), _\n          CacheItemPriority.Default, Nothing)\n      End If\n\n      &#39; Put the page data into the template.\n      pageTemplate = pageTemplate.Replace(&quot;%file%&quot;, Me.Name)\n      pageTemplate = pageTemplate.Replace(&quot;%content%&quot;, content)\n\n      &#39; Get the data timestamp from the cache.\n      Dim dataTimeStamp As DateTime\n      dataTimeStamp = CType(HostingEnvironment.Cache.Get(&quot;dataTimeStamp&quot;), DateTime)\n      pageTemplate = pageTemplate.Replace(&quot;%dataTimestamp%&quot;, _\n        FormatTimeStamp(dataTimeStamp))\n\n      &#39; Set a timestamp for the page.\n      Dim pageTimeStamp As String\n      pageTimeStamp = FormatTimeStamp(now)\n      pageTemplate = pageTemplate.Replace(&quot;%pageTimestamp%&quot;, pageTimeStamp)\n\n      &#39; Put the page content on the stream.\n      Dim stream As MemoryStream\n      stream = New MemoryStream()\n\n      Dim writer As StreamWriter\n      writer = New StreamWriter(stream)\n\n      writer.Write(pageTemplate)\n      writer.Flush()\n      stream.Seek(0, SeekOrigin.Begin)\n\n      Return stream\n    End Function\n  End Class\nEnd Namespace\n</code></pre><p> The second example is the XML data file used to populate the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object returned by the custom <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object. This XML data is used to demonstrate using the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a>, VirtualFile, and <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> classes to retrieve data from external data, and is not intended to represent a production-quality data store.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;  \n&lt;resource type=&quot;dir&quot;   \n          path=&quot;/vrDir&quot;   \n          parentPath=&quot;&quot;   \n          content=&quot;&quot;&gt;  \n  &lt;resource type=&quot;file&quot;   \n            path=&quot;/vrDir/Level1FileA.vrf&quot;  \n            parentPath=&quot;/vrDir&quot;   \n            content=&quot;This is the content of file Level1FileA.&quot;&gt;  \n  &lt;/resource&gt;  \n  &lt;resource type=&quot;file&quot;   \n            path=&quot;/vrDir/Level1FileB.vrf&quot;  \n            parentPath=&quot;/vrDir&quot;   \n            content=&quot;This is the content of file Level1FileB.&quot;&gt;  \n  &lt;/resource&gt;  \n  &lt;resource type=&quot;dir&quot;   \n            path=&quot;/vrDir/Level2DirA&quot;   \n            parentPath=&quot;/vrDir&quot;   \n            content=&quot;&quot;&gt;  \n    &lt;resource type=&quot;file&quot;   \n              path=&quot;/vrDir/Level2DirA/Level2FileA.vrf&quot;   \n              parentPath=&quot;/vrDir/Level2DirA&quot;   \n              content=&quot;This is the content of file Level2FileA.&quot;&gt;  \n    &lt;/resource&gt;  \n    &lt;resource type=&quot;file&quot;   \n              path=&quot;/vrDir/Level2DirA/Level2FileB.vrf&quot;  \n              parentPath=&quot;/vrDir/Level2DirA&quot;   \n              content=&quot;This is the content of file Level2FileB.&quot;&gt;  \n    &lt;/resource&gt;  \n  &lt;/resource&gt;  \n  &lt;resource type=&quot;dir&quot;   \n            path=&quot;/vrDir/Level2DirB&quot;   \n            parentPath=&quot;/vrDir&quot;   \n            content=&quot;&quot;&gt;  \n    &lt;resource type=&quot;file&quot;   \n              path=&quot;/vrDir/Level2DirB/Level2FileA.vrf&quot;   \n              parentPath=&quot;/vrDir/Level2DirB&quot;   \n              content=&quot;This is the content of file Level2FileA.&quot;&gt;  \n    &lt;/resource&gt;  \n    &lt;resource type=&quot;file&quot;   \n              path=&quot;/vrDir/Level2DirB/Level2FileB.vrf&quot;  \n              parentPath=&quot;/vrDir/Level2DirB&quot;   \n              content=&quot;This is the content of file Level2FileB.&quot;&gt;  \n    &lt;/resource&gt;  \n  &lt;/resource&gt;  \n&lt;/resource&gt;  \n</code></pre><p> The third example is the text file used as a template for the virtual file. Placeholders in the file are represented by text between percent (%) marks, such as <code>%file%</code> and <code>%content%</code>. Timestamps are used to monitor changes to cached virtual file data.  </p>\n<pre><code>&lt;html&gt;  \n  &lt;head&gt;  \n    &lt;title&gt;File name: %file%&lt;/title&gt;  \n  &lt;/head&gt;  \n\n  &lt;body&gt;  \n    &lt;h1&gt;%file%&lt;/h1&gt;  \n    &lt;p&gt;%content%&lt;/p&gt;  \n    &lt;p&gt;Page timestamp: %pageTimestamp%&lt;br&gt;  \n       Data timestamp: %dataTimestamp%&lt;br&gt;  \n       Template timestamp: %templateTimestamp%&lt;/p&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The VirtualFile class is the base class for objects that represent files in a virtual file system. Typically, you would implement a descendent of the VirtualFile class for each <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object descendent in your Web application.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_Hosting_VirtualFile__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualFile__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">VirtualFile(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected VirtualFile (string virtualPath);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The virtual path to the resource represented by this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_Hosting_VirtualFile_IsDirectory_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualFile_IsDirectory\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsDirectory</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates that this is a virtual resource that should be treated as a file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool IsDirectory { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Always <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_Hosting_VirtualFile_Open_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualFile_Open\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Open()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, returns a read-only stream to the virtual resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.IO.Stream Open ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A read-only stream to the virtual file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Open method returns a stream containing the data treated as a file by the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> class. The stream is read-only and is seekable (the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> property is true).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Hosting.VirtualFile.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile.IsDirectory\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile.Open\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"1692abd3-31af-bece-f3df-f3a3957a2396\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a file object in a virtual file or resource space.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.hosting/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Hosting.VirtualFile\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Hosting.VirtualFile.yml","open_to_public_contributors":false,"api_name":["System.Web.Hosting.VirtualFile","System.Web.Hosting.VirtualFile..ctor","System.Web.Hosting.VirtualFile.IsDirectory","System.Web.Hosting.VirtualFile.Open"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Hosting.VirtualFile","System::Web::Hosting::VirtualFile","System.Web.Hosting.VirtualFile.#ctor","System::Web::Hosting::VirtualFile::#ctor","System.Web.Hosting.VirtualFile.IsDirectory","System::Web::Hosting::VirtualFile::IsDirectory","System.Web.Hosting.VirtualFile.Open","System::Web::Hosting::VirtualFile::Open"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"1692abd3-31af-bece-f3df-f3a3957a2396","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.Hosting/VirtualFile.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"VirtualFile class | Microsoft Docs","_op_ogTitle":"VirtualFile class","description":"Represents a file object in a virtual file or resource space.\n","toc_asset_id":"api/_splitted/System.Web.Hosting/toc.json","toc_rel":"_splitted/System.Web.Hosting/toc.json","source_url":"","ms.assetid":"System.Web.Hosting.VirtualFile","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.hosting.virtualfile","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.hosting.virtualfile","fileRelativePath":"api/System.Web.Hosting.VirtualFile.html"},"themesRelativePathToOutputRoot":"_themes/"}