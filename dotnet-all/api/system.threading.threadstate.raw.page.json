{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ThreadState</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the execution states of a <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic enum ThreadState</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">ThreadState</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.flagsattribute\" title=\"System.FlagsAttribute\" data-linktype=\"relative-path\">FlagsAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ThreadState enumeration is of interest only in a few debugging scenarios. Your code should never use the thread state to synchronize the activities of threads.  </p>\n<p> ThreadState defines a set of all possible execution states for threads. Once a thread is created, it is in at least one of the states until it terminates. Threads created within the common language runtime are initially in the <code>Unstarted</code> state, while external threads that come into the runtime are already in the <code>Running</code> state. An <code>Unstarted</code> thread is transitioned into the <code>Running</code> state by calling <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Start_\" data-linktype=\"relative-path\">Start</a>. Not all combinations of <code>ThreadState</code> values are valid; for example, a thread cannot be in both the <code>Aborted</code> and <code>Unstarted</code> states.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> There are two thread state enumerations,ThreadState and <a class=\"xref\" href=\"system.diagnostics.threadstate\" data-linktype=\"relative-path\">System.Diagnostics.ThreadState</a>.  </p>\n</div>\n<p> The following table shows the actions that cause a change of state.  </p>\n<table>\n<thead>\n<tr>\n<th>Action</th>\n<th>ThreadState</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A thread is created within the common language runtime.</td>\n<td>Unstarted</td>\n</tr>\n<tr>\n<td>Another thread calls the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Start_\" data-linktype=\"relative-path\">Start</a> method on the new thread, and the call returns.<br><br> The <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Start_\" data-linktype=\"relative-path\">Start</a> method does not return until the new thread has started running. There is no way to know at what point the new thread will start running, during the call to <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Start_\" data-linktype=\"relative-path\">Start</a>.</td>\n<td>Running</td>\n</tr>\n<tr>\n<td>The thread calls <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Sleep_\" data-linktype=\"relative-path\">Sleep</a></td>\n<td>WaitSleepJoin</td>\n</tr>\n<tr>\n<td>The thread calls <a class=\"xref\" href=\"system.threading.monitor#System_Threading_Monitor_Wait_\" data-linktype=\"relative-path\">Wait</a> on another object.</td>\n<td>WaitSleepJoin</td>\n</tr>\n<tr>\n<td>The thread calls <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Join_\" data-linktype=\"relative-path\">Join</a> on another thread.</td>\n<td>WaitSleepJoin</td>\n</tr>\n<tr>\n<td>Another thread calls <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Interrupt_\" data-linktype=\"relative-path\">Interrupt</a></td>\n<td>Running</td>\n</tr>\n<tr>\n<td>Another thread calls <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Suspend_\" data-linktype=\"relative-path\">Suspend</a></td>\n<td>SuspendRequested</td>\n</tr>\n<tr>\n<td>The thread responds to a <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Suspend_\" data-linktype=\"relative-path\">Suspend</a> request.</td>\n<td>Suspended</td>\n</tr>\n<tr>\n<td>Another thread calls <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Resume_\" data-linktype=\"relative-path\">Resume</a></td>\n<td>Running</td>\n</tr>\n<tr>\n<td>Another thread calls <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a></td>\n<td>AbortRequested</td>\n</tr>\n<tr>\n<td>The thread responds to a <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> request.</td>\n<td>Stopped</td>\n</tr>\n<tr>\n<td>A thread is terminated.</td>\n<td>Stopped</td>\n</tr>\n</tbody>\n</table>\n<p> In addition to the states noted above, there is also the <code>Background</code> state, which indicates whether the thread is running in the background or foreground.  </p>\n<p> A thread can be in more than one state at a given time. For example, if a thread is blocked on a call to <a class=\"xref\" href=\"system.threading.monitor#System_Threading_Monitor_Wait_\" data-linktype=\"relative-path\">Wait</a>, and another thread calls <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> on the blocked thread, the blocked thread will be in both the <code>WaitSleepJoin</code> and the <code>AbortRequested</code> states at the same time. In this case, as soon as the thread returns from the call to <a class=\"xref\" href=\"system.threading.monitor#System_Threading_Monitor_Wait_\" data-linktype=\"relative-path\">Wait</a> or is interrupted, it will receive the <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a> to begin aborting.  </p>\n<p> The <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_ThreadState_\" data-linktype=\"relative-path\">ThreadState</a> property of a thread provides the current state of a thread. Applications must use a bitmask to determine whether a thread is running. Since the value for <code>Running</code> is zero (0), test whether a thread is running by using C# code such as <code>(myThread.ThreadState &amp; (ThreadState.Stopped | ThreadState.Unstarted)) == 0</code> or Visual Basic code such as <code>(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0</code>.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Threading_ThreadState_Aborted\">\r\n      \t\t\t<span class=\"lang-csharp\">Aborted</span>\r\n      \t</td>\r\n      \t<td><p>The thread state includes AbortRequested and the thread is now dead, but its state has not yet changed to Stopped.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_AbortRequested\">\r\n      \t\t\t<span class=\"lang-csharp\">AbortRequested</span>\r\n      \t</td>\r\n      \t<td><p>The <span class=\"xref\">stem.Threading.Thread.Abort*</span> method has been invoked on the thread, but the thread has not yet received the pending <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a> that will attempt to terminate it.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_Background\">\r\n      \t\t\t<span class=\"lang-csharp\">Background</span>\r\n      \t</td>\r\n      \t<td><p>The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the <span class=\"xref\">stem.Threading.Thread.IsBackground*</span> property.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_Running\">\r\n      \t\t\t<span class=\"lang-csharp\">Running</span>\r\n      \t</td>\r\n      \t<td><p>The thread has been started, it is not blocked, and there is no pending <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a>.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_Stopped\">\r\n      \t\t\t<span class=\"lang-csharp\">Stopped</span>\r\n      \t</td>\r\n      \t<td><p>The thread has stopped.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_StopRequested\">\r\n      \t\t\t<span class=\"lang-csharp\">StopRequested</span>\r\n      \t</td>\r\n      \t<td><p>The thread is being requested to stop. This is for internal use only.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_Suspended\">\r\n      \t\t\t<span class=\"lang-csharp\">Suspended</span>\r\n      \t</td>\r\n      \t<td><p>The thread has been suspended.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_SuspendRequested\">\r\n      \t\t\t<span class=\"lang-csharp\">SuspendRequested</span>\r\n      \t</td>\r\n      \t<td><p>The thread is being requested to suspend.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_Unstarted\">\r\n      \t\t\t<span class=\"lang-csharp\">Unstarted</span>\r\n      \t</td>\r\n      \t<td><p>The <span class=\"xref\">stem.Threading.Thread.Start*</span> method has not been invoked on the thread.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadState_WaitSleepJoin\">\r\n      \t\t\t<span class=\"lang-csharp\">WaitSleepJoin</span>\r\n      \t</td>\r\n      \t<td><p>The thread is blocked. This could be the result of calling <span class=\"xref\">stem.Threading.Thread.Sleep*</span> or <span class=\"xref\">stem.Threading.Thread.Join*</span>, of requesting a lock — for example, by calling <span class=\"xref\">stem.Threading.Monitor.Enter*</span> or <span class=\"xref\">stem.Threading.Monitor.Wait*</span> — or of waiting on a thread synchronization object such as <a class=\"xref\" href=\"system.threading.manualresetevent\" data-linktype=\"relative-path\">ManualResetEvent</a>.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.ThreadState.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.Aborted\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.AbortRequested\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.Background\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.Running\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.Stopped\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.StopRequested\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.Suspended\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.SuspendRequested\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.Unstarted\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadState.WaitSleepJoin\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"cdc6a9c2-f539-a6e4-8d94-118f9d36e0c1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the execution states of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.threading/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.ThreadState\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.ThreadState.yml","open_to_public_contributors":false,"api_name":["System.Threading.ThreadState","System.Threading.ThreadState.Aborted","System.Threading.ThreadState.AbortRequested","System.Threading.ThreadState.Background","System.Threading.ThreadState.Running","System.Threading.ThreadState.Stopped","System.Threading.ThreadState.StopRequested","System.Threading.ThreadState.Suspended","System.Threading.ThreadState.SuspendRequested","System.Threading.ThreadState.Unstarted","System.Threading.ThreadState.WaitSleepJoin"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.ThreadState","System::Threading::ThreadState","System.Threading.ThreadState.Aborted","System::Threading::ThreadState::Aborted","System.Threading.ThreadState.AbortRequested","System::Threading::ThreadState::AbortRequested","System.Threading.ThreadState.Background","System::Threading::ThreadState::Background","System.Threading.ThreadState.Running","System::Threading::ThreadState::Running","System.Threading.ThreadState.Stopped","System::Threading::ThreadState::Stopped","System.Threading.ThreadState.StopRequested","System::Threading::ThreadState::StopRequested","System.Threading.ThreadState.Suspended","System::Threading::ThreadState::Suspended","System.Threading.ThreadState.SuspendRequested","System::Threading::ThreadState::SuspendRequested","System.Threading.ThreadState.Unstarted","System::Threading::ThreadState::Unstarted","System.Threading.ThreadState.WaitSleepJoin","System::Threading::ThreadState::WaitSleepJoin"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"cdc6a9c2-f539-a6e4-8d94-118f9d36e0c1","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Threading/ThreadState.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ThreadState enum | Microsoft Docs","_op_ogTitle":"ThreadState enum","description":"Specifies the execution states of a .\n","toc_asset_id":"api/_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.ThreadState","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.threading.threadstate","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.threading.threadstate","fileRelativePath":"api/System.Threading.ThreadState.html"},"themesRelativePathToOutputRoot":"_themes/"}