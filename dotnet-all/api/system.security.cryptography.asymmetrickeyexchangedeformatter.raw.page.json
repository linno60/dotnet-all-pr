{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">AsymmetricKeyExchangeDeformatter</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the base class from which all asymmetric key exchange deformatters derive.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class AsymmetricKeyExchangeDeformatter</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">AsymmetricKeyExchangeDeformatter</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to extend the AsymmetricKeyExchangeDeformatter class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#1\">using System;\nusing System.Security.Cryptography;\n\nnamespace Contoso\n{\n    public class ContosoDeformatter : AsymmetricKeyExchangeDeformatter\n    {\n        private RSA rsaKey;\n\n        // Default constructor.\n        public ContosoDeformatter(){}\n\n        // Constructor with the public key to use for encryption.\n        public ContosoDeformatter(AsymmetricAlgorithm key)\n        {\n            SetKey(key);\n        }\n\n        // Set the public key for encyption operations.\n        public override void SetKey(AsymmetricAlgorithm key) {\n            if (key != null)\n            {\n                rsaKey = (RSA)key;\n            }\n            else\n            {\n                throw new ArgumentNullException(&quot;key&quot;);\n            }\n        }\n\n        // Disallow access to the parameters of the formatter.\n        public override String Parameters \n        {\n            get { return null; }\n            set { ; }\n        }\n\n        // Create the encrypted key exchange data from the specified input\n        // data. This method uses the RSACryptoServiceProvider only. To\n        // support additional providers or provide custom decryption logic,\n        // add logic to this member.\n        public override byte[] DecryptKeyExchange(byte[] rgbData) {\n            byte[] decryptedBytes = null;\n\n            if (rsaKey != null)\n            {\n                if (rsaKey is RSACryptoServiceProvider)\n                {\n                    RSACryptoServiceProvider serviceProvder =\n                        (RSACryptoServiceProvider)rsaKey;\n\n                    decryptedBytes = serviceProvder.Decrypt(rgbData, true);\n                }\n                // Add custom decryption logic here.\n            }\n            else\n            {\n                throw new CryptographicUnexpectedOperationException(\n                    &quot;Cryptography_MissingKey&quot;);\n            }\n\n            return decryptedBytes;\n        }\n    }\n}\n//\n// This code example produces the following output:\n//\n// Data to encrypt : Sample Contoso encryption application.\n// Encrypted data: Khasdf-3248&amp;$%23\n// Data decrypted : Sample Contoso encryption application.\n// \n// This sample completed successfully; press Enter to exit.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#1\">Imports System\nImports System.Security.Cryptography\n\nNamespace Contoso\n    Public Class ContosoDeformatter\n        Inherits AsymmetricKeyExchangeDeformatter\n\n        Private rsaKey As RSA\n\n        &#39; Default constructor.\n        Public Sub New()\n\n        End Sub\n\n        &#39; Constructor with the public key to use for encryption.\n        Public Sub New(ByVal key As AsymmetricAlgorithm)\n            SetKey(key)\n        End Sub\n\n        &#39; Set the public key for encyption operations.\n        Public Overrides Sub SetKey(ByVal key As AsymmetricAlgorithm)\n            If (Not key Is Nothing) Then\n                rsaKey = CType(key, RSA)\n            Else\n                Throw New ArgumentNullException(&quot;key&quot;)\n            End If\n        End Sub\n\n        &#39; Disallow access to the parameters of the formatter.\n        Public Overrides ReadOnly Property Parameters() As String\n            Get\n                Return Nothing\n            End Get\n            Set(ByVal Value As String)\n\n            End Set\n        End Property\n\n        &#39; Create the encrypted key exchange data from the specified input\n        &#39; data. This method uses the RSACryptoServiceProvider only. To\n        &#39; support additional providers or provide custom decryption logic,\n        &#39; add logic to this member.\n        Public Overrides Function DecryptKeyExchange(\n            ByVal rgbData() As Byte) As Byte()\n\n            Dim decryptedBytes() As Byte\n\n            If (Not rsaKey Is Nothing) Then\n                If (TypeOf (rsaKey) Is RSACryptoServiceProvider) Then\n                    Dim rsaProvider As RSACryptoServiceProvider\n                    rsaProvider = CType(rsaKey, RSACryptoServiceProvider)\n\n                    decryptedBytes = rsaProvider.Decrypt(rgbData, True)\n                End If\n\n                &#39; Add custom decryption logic here.\n\n            Else\n                Throw New CryptographicUnexpectedOperationException(\n                    &quot;Cryptography_MissingKey&quot;)\n            End If\n\n            Return decryptedBytes\n        End Function\n\n    End Class\nEnd Namespace\n&#39;\n&#39; This code example produces the following output:\n&#39;\n&#39; Data to encrypt : Sample Contoso encryption application.\n&#39; Encrypted data: Kh34dfg-(*&amp;834d+3\n&#39; Data decrypted : Sample Contoso encryption application.\n&#39; \n&#39; This sample completed successfully; press Exit to continue.\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Asymmetric key exchange deformatters decrypt key exchange data.  </p>\n<p> Key exchange allows a sender to create secret information, such as random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricKeyExchangeDeformatter__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AsymmetricKeyExchangeDeformatter()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of <a class=\"xref\" href=\"system.security.cryptography.asymmetrickeyexchangedeformatter\" data-linktype=\"relative-path\">AsymmetricKeyExchangeDeformatter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected AsymmetricKeyExchangeDeformatter ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.  </p>\n<p> Use an implementation of <a class=\"xref\" href=\"system.security.cryptography.asymmetrickeyexchangedeformatter#System_Security_Cryptography_AsymmetricKeyExchangeDeformatter_SetKey_\" data-linktype=\"relative-path\">SetKey</a> to establish the key before calling an implementation of <a class=\"xref\" href=\"system.security.cryptography.asymmetrickeyexchangedeformatter#System_Security_Cryptography_AsymmetricKeyExchangeDeformatter_DecryptKeyExchange_\" data-linktype=\"relative-path\">DecryptKeyExchange</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricKeyExchangeDeformatter_Parameters\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parameters</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, gets or sets the parameters for the asymmetric key exchange.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract string Parameters { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string in XML format containing the parameters of the asymmetric key exchange operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricKeyExchangeDeformatter_DecryptKeyExchange_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DecryptKeyExchange(Byte[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, extracts secret information from the encrypted key exchange data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract byte[] DecryptKeyExchange (byte[] rgb);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgb</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key exchange data within which the secret information is hidden.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The secret information derived from the key exchange data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You must specify a key before calling an implementation of this method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricKeyExchangeDeformatter_SetKey_System_Security_Cryptography_AsymmetricAlgorithm_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetKey(AsymmetricAlgorithm)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, sets the private key to use for decrypting the secret information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The instance of the implementation of <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> that holds the private key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You must set a key before calling a <a class=\"xref\" href=\"system.security.cryptography.asymmetrickeyexchangedeformatter#System_Security_Cryptography_AsymmetricKeyExchangeDeformatter_DecryptKeyExchange_\" data-linktype=\"relative-path\">DecryptKeyExchange</a> implementation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"eeb05f94-1876-b24e-bfe7-d2023705d787\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the base class from which all asymmetric key exchange deformatters derive.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.AsymmetricKeyExchangeDeformatter","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter..ctor","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.AsymmetricKeyExchangeDeformatter","System::Security::Cryptography::AsymmetricKeyExchangeDeformatter","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.#ctor","System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::#ctor","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange","System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::DecryptKeyExchange","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters","System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::Parameters","System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey","System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::SetKey"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"eeb05f94-1876-b24e-bfe7-d2023705d787","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AsymmetricKeyExchangeDeformatter.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AsymmetricKeyExchangeDeformatter class | Microsoft Docs","_op_ogTitle":"AsymmetricKeyExchangeDeformatter class","description":"Represents the base class from which all asymmetric key exchange deformatters derive.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.AsymmetricKeyExchangeDeformatter","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.asymmetrickeyexchangedeformatter","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.asymmetrickeyexchangedeformatter","fileRelativePath":"api/System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.html"},"themesRelativePathToOutputRoot":"_themes/"}