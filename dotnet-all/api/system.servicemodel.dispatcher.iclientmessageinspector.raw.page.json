{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IClientMessageInspector</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a message inspector object that can be added to the <span class=\"xref\">stem.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors*</span> collection to view or modify messages.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IClientMessageInspector</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows an implementation that writes strings to the console when the implementation is called.  </p>\n<pre><code class=\"lang-vb\" name=\"Interceptors#1\">#Region &quot;IClientMessageInspector Members&quot;\n       Public Sub AfterReceiveReply(ByRef reply As System.ServiceModel.Channels.Message, _\n                          ByVal correlationState As Object) Implements IClientMessageInspector.AfterReceiveReply\n           Console.WriteLine(&quot;IClientMessageInspector.AfterReceiveReply called.&quot;)\n           Console.WriteLine(&quot;Message: {0}&quot;, reply.ToString())\n       End Sub\n\n       Public Function BeforeSendRequest(ByRef request As System.ServiceModel.Channels.Message, _\n               ByVal channel As IClientChannel) As Object Implements IClientMessageInspector.BeforeSendRequest\n           Console.WriteLine(&quot;IClientMessageInspector.BeforeSendRequest called.&quot;)\n           Return Nothing\n       End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"Interceptors#1\">#region IClientMessageInspector Members\npublic void AfterReceiveReply(ref System.ServiceModel.Channels.Message reply, object correlationState)\n{\n  Console.WriteLine(&quot;IClientMessageInspector.AfterReceiveReply called.&quot;);\n  Console.WriteLine(&quot;Message: {0}&quot;, reply.ToString());\n}\n\npublic object BeforeSendRequest(ref System.ServiceModel.Channels.Message request, IClientChannel channel)\n{\n  Console.WriteLine(&quot;IClientMessageInspector.BeforeSendRequest called.&quot;);\n  return null;\n}\n</code></pre><p> The following code example shows how to use an <a class=\"xref\" href=\"system.servicemodel.description.iendpointbehavior\" data-linktype=\"relative-path\">System.ServiceModel.Description.IEndpointBehavior</a> to insert the client message inspector in the client endpoint.  </p>\n<pre><code class=\"lang-vb\" name=\"Interceptors#2\">#Region &quot;IEndpointBehavior Members&quot;\n       Public Sub AddBindingParameters(ByVal endpoint As ServiceEndpoint, ByVal bindingParameters _\n                                       As BindingParameterCollection) Implements IEndpointBehavior.AddBindingParameters\n           Return\n       End Sub\n\n       Public Sub ApplyClientBehavior(ByVal endpoint As ServiceEndpoint, ByVal clientRuntime As ClientRuntime) _\n       Implements IEndpointBehavior.ApplyClientBehavior\n           clientRuntime.MessageInspectors.Add(New Inspector())\n           For Each op As ClientOperation In clientRuntime.Operations\n               op.ParameterInspectors.Add(New Inspector())\n           Next op\n       End Sub\n\n       Public Sub ApplyDispatchBehavior(ByVal endpoint As ServiceEndpoint, ByVal endpointDispatcher As  _\n                                        EndpointDispatcher) Implements IEndpointBehavior.ApplyDispatchBehavior\n           endpointDispatcher.DispatchRuntime.MessageInspectors.Add(New Inspector())\n           For Each op As DispatchOperation In endpointDispatcher.DispatchRuntime.Operations\n               op.ParameterInspectors.Add(New Inspector())\n           Next op\n       End Sub\n\nPublic Sub Validate(ByVal endpoint As ServiceEndpoint) Implements IEndpointBehavior.Validate\n\tReturn\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Interceptors#2\">#region IEndpointBehavior Members\npublic void AddBindingParameters(\n  ServiceEndpoint endpoint, BindingParameterCollection bindingParameters\n) { return; }\n\npublic void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n{\n  clientRuntime.MessageInspectors.Add(new Inspector());\n  foreach (ClientOperation op in clientRuntime.Operations)\n    op.ParameterInspectors.Add(new Inspector());\n}\n\npublic void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)\n{\n  endpointDispatcher.DispatchRuntime.MessageInspectors.Add(new Inspector());\n  foreach (DispatchOperation op in endpointDispatcher.DispatchRuntime.Operations)\n    op.ParameterInspectors.Add(new Inspector());\n}\n\npublic void Validate(ServiceEndpoint endpoint){ return; }\n</code></pre><p> Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.</p>\n\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Implement the IClientMessageInspector interface and add it to the <a class=\"xref\" href=\"system.servicemodel.dispatcher.clientruntime#System_ServiceModel_Dispatcher_ClientRuntime_MessageInspectors_\" data-linktype=\"relative-path\">MessageInspectors</a> collection to inspect or modify messages as they pass through a WCF client object. For details, see <a class=\"xref\" href=\"system.servicemodel.dispatcher.clientruntime\" data-linktype=\"relative-path\">ClientRuntime</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_IClientMessageInspector_AfterReceiveReply_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_IClientMessageInspector_AfterReceiveReply_System_ServiceModel_Channels_Message__System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AfterReceiveReply(Message, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AfterReceiveReply (ref System.ServiceModel.Channels.Message reply, object correlationState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reply</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to be transformed into types and handed back to the client application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>correlationState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Correlation state data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Implement AfterReceiveReply to inspect or modify a reply message after it has been received by the WCF client object but before it is deserialized into objects that are returned to the client application.  </p>\n<p> The <code>correlationState</code> is the object returned by the user when <a class=\"xref\" href=\"system.servicemodel.dispatcher.iclientmessageinspector#System_ServiceModel_Dispatcher_IClientMessageInspector_BeforeSendRequest_\" data-linktype=\"relative-path\">BeforeSendRequest</a> is called for this message. The best practice is to make this a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">System.Guid</a> to ensure that no two <code>correlationState</code> objects are the same.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_Dispatcher_IClientMessageInspector_BeforeSendRequest_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Dispatcher_IClientMessageInspector_BeforeSendRequest_System_ServiceModel_Channels_Message__System_ServiceModel_IClientChannel_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeforeSendRequest(Message, IClientChannel)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Enables inspection or modification of a message before a request message is sent to a service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object BeforeSendRequest (ref System.ServiceModel.Channels.Message request, System.ServiceModel.IClientChannel channel);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>request</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to be sent to the service.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>channel</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.iclientchannel\" data-linktype=\"relative-path\">IClientChannel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The WCF client object channel.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The object that is returned as the <code>correlationState </code>argument of the <span class=\"xref\">stem.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply*</span> method. This is <code>null</code> if no correlation state is used.  </p>\n<p> The best practice is to make this a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> to ensure that no two <code>correlationState</code> objects are the same.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Implement the BeforeSendRequest to inspect or modify a request message before it is sent.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Dispatcher.IClientMessageInspector.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.IClientMessageInspector\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"a4ab322d-dd54-e466-40f7-03b55c6b9683\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a message inspector object that can be added to the  collection to view or modify messages.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.servicemodel.dispatcher/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Dispatcher.IClientMessageInspector\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Dispatcher.IClientMessageInspector.yml","open_to_public_contributors":false,"api_name":["System.ServiceModel.Dispatcher.IClientMessageInspector","System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply","System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Dispatcher.IClientMessageInspector","System::ServiceModel::Dispatcher::IClientMessageInspector","System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply","System::ServiceModel::Dispatcher::IClientMessageInspector::AfterReceiveReply","System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest","System::ServiceModel::Dispatcher::IClientMessageInspector::BeforeSendRequest"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"a4ab322d-dd54-e466-40f7-03b55c6b9683","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IClientMessageInspector interface | Microsoft Docs","_op_ogTitle":"IClientMessageInspector interface","description":"Defines a message inspector object that can be added to the  collection to view or modify messages.\n","toc_asset_id":"api/_splitted/System.ServiceModel.Dispatcher/toc.json","toc_rel":"_splitted/System.ServiceModel.Dispatcher/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Dispatcher.IClientMessageInspector","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.dispatcher.iclientmessageinspector","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.dispatcher.iclientmessageinspector","fileRelativePath":"api/System.ServiceModel.Dispatcher.IClientMessageInspector.html"},"themesRelativePathToOutputRoot":"_themes/"}