{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Cer</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies a method&#39;s behavior when called within a constrained execution region.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum Cer</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">Cer</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the use of the Cer enumeration when specifying a constrained execution region for a method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.constrainedexecution.reliabilitycontractattribute#System_Runtime_ConstrainedExecution_ReliabilityContractAttribute__ctor_\" data-linktype=\"relative-path\">ReliabilityContractAttribute</a> constructor.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.ConstrainedExecution#3\">&lt;ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)&gt;\n&lt;MethodImpl(MethodImplOptions.NoInlining)&gt;\nSub StackDepth2()\n   Try\n      consistentLevel2 = False\n      If depth = 2 Then Thread.Sleep(-1)\n      StackDepth3()\n   Finally\n      consistentLevel2 = True\n   End Try\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.ConstrainedExecution#3\">[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]\n[MethodImpl(MethodImplOptions.NoInlining)]\nvoid StackDepth2()\n{\n    try\n    {\n        consistentLevel2 = false;\n        if (depth == 2)\n            Thread.Sleep(-1);\n        StackDepth3();\n    }\n    finally\n    {\n        consistentLevel2 = true;\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The Cer enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER). Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.  </p>\n<p> A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Runtime_ConstrainedExecution_Cer_MayFail\">\r\n      \t\t\t<span class=\"lang-csharp\">MayFail</span>\r\n      \t</td>\r\n      \t<td><p>In the face of exceptional conditions, the method might fail. In this case, the method will report back to the calling method whether it succeeded or failed. The method must have a CER around the method body to ensure that it can report the return value.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_ConstrainedExecution_Cer_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>The method, type, or assembly has no concept of a CER. It does not take advantage of CER guarantees. This implies the following:</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_ConstrainedExecution_Cer_Success\">\r\n      \t\t\t<span class=\"lang-csharp\">Success</span>\r\n      \t</td>\r\n      \t<td><p>In the face of exceptional conditions, the method is guaranteed to succeed. You should always construct a CER around the method that is called, even when it is called from within a non-CER region. A method is successful if it accomplishes what is intended. For example, marking <span class=\"xref\">stem.Collections.ArrayList.Count*</span> with <code>ReliabilityContractAttribute(Cer.Success)</code> implies that when it is run under a CER, it always returns a count of the number of elements in the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and it can never leave the internal fields in an undetermined state.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.ConstrainedExecution.Cer.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.ConstrainedExecution.Cer\">\r\n<meta name=\"APIName\" content=\"System.Runtime.ConstrainedExecution.Cer.MayFail\">\r\n<meta name=\"APIName\" content=\"System.Runtime.ConstrainedExecution.Cer.None\">\r\n<meta name=\"APIName\" content=\"System.Runtime.ConstrainedExecution.Cer.Success\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"2b3a8480-5658-2292-00eb-cfa5465ed465\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies a method&amp;#39;s behavior when called within a constrained execution region.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.constrainedexecution/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.ConstrainedExecution.Cer\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.ConstrainedExecution.Cer.yml","open_to_public_contributors":false,"api_name":["System.Runtime.ConstrainedExecution.Cer","System.Runtime.ConstrainedExecution.Cer.MayFail","System.Runtime.ConstrainedExecution.Cer.None","System.Runtime.ConstrainedExecution.Cer.Success"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.ConstrainedExecution.Cer","System::Runtime::ConstrainedExecution::Cer","System.Runtime.ConstrainedExecution.Cer.MayFail","System::Runtime::ConstrainedExecution::Cer::MayFail","System.Runtime.ConstrainedExecution.Cer.None","System::Runtime::ConstrainedExecution::Cer::None","System.Runtime.ConstrainedExecution.Cer.Success","System::Runtime::ConstrainedExecution::Cer::Success"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"2b3a8480-5658-2292-00eb-cfa5465ed465","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.ConstrainedExecution/Cer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Cer enum | Microsoft Docs","_op_ogTitle":"Cer enum","description":"Specifies a method&#39;s behavior when called within a constrained execution region.\n","toc_asset_id":"api/_splitted/System.Runtime.ConstrainedExecution/toc.json","toc_rel":"_splitted/System.Runtime.ConstrainedExecution/toc.json","source_url":"","ms.assetid":"System.Runtime.ConstrainedExecution.Cer","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.constrainedexecution.cer","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.constrainedexecution.cer","fileRelativePath":"api/System.Runtime.ConstrainedExecution.Cer.html"},"themesRelativePathToOutputRoot":"_themes/"}