{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DictionaryEntry</span>\r\n      Struct\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a dictionary key/value pair that can be set or retrieved.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic struct DictionaryEntry</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><span class=\"lang-csharp\">DictionaryEntry</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates the use of DictionaryEntry to iterate through a <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a> object.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.DictionaryEntry#00\">// A simple example for the DictionaryEntry structure.\nusing namespace System;\nusing namespace System::Collections;\n\npublic ref class Example\n{\npublic:\n    static void Main()\n    {\n        // Create a new hash table.\n        //\n        Hashtable^ openWith = gcnew Hashtable();\n\n        // Add some elements to the hash table. There are no\n        // duplicate keys, but some of the values are duplicates.\n        openWith-&gt;Add(&quot;txt&quot;, &quot;notepad.exe&quot;);\n        openWith-&gt;Add(&quot;bmp&quot;, &quot;paint.exe&quot;);\n        openWith-&gt;Add(&quot;dib&quot;, &quot;paint.exe&quot;);\n        openWith-&gt;Add(&quot;rtf&quot;, &quot;wordpad.exe&quot;);\n\n        // When you use foreach to enumerate hash table elements,\n        // the elements are retrieved as DictionaryEntry objects.\n        Console::WriteLine();\n        for each (DictionaryEntry de in openWith)\n        {\n            Console::WriteLine(&quot;Key = {0}, Value = {1}&quot;, de.Key, de.Value);\n        }\n    }\n};\n\nint main()\n{\n    Example::Main();\n}\n\n/* This code example produces output similar to the following:\n\nKey = rtf, Value = wordpad.exe\nKey = txt, Value = notepad.exe\nKey = dib, Value = paint.exe\nKey = bmp, Value = paint.exe\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.DictionaryEntry#00\">&#39;A simple example for the DictionaryEntry structure.\nImports System\nImports System.Collections\nImports Microsoft.VisualBasic\n\nModule Example\n\n    Sub Main()\n\n        &#39; Create a new hash table.\n        &#39;\n        Dim openWith As New Hashtable()\n\n        &#39; Add some elements to the hash table. There are no\n        &#39; duplicate keys, but some of the values are duplicates.\n        openWith.Add(&quot;txt&quot;, &quot;notepad.exe&quot;)\n        openWith.Add(&quot;bmp&quot;, &quot;paint.exe&quot;)\n        openWith.Add(&quot;dib&quot;, &quot;paint.exe&quot;)\n        openWith.Add(&quot;rtf&quot;, &quot;wordpad.exe&quot;)\n\n        &#39; When you use For Each to enumerate hash table elements,\n        &#39; the elements are retrieved as DictionaryEntry objects.\n        Console.WriteLine()\n        For Each de As DictionaryEntry In openWith\n            Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, _\n                de.Key, de.Value)\n        Next de\n\n    End Sub\n\nEnd Module\n\n&#39; This code example produces output similar to the following:\n&#39;\n&#39;Key = rtf, Value = wordpad.exe\n&#39;Key = txt, Value = notepad.exe\n&#39;Key = dib, Value = paint.exe\n&#39;Key = bmp, Value = paint.exe\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.DictionaryEntry#00\">// A simple example for the DictionaryEntry structure.\nusing System;\nusing System.Collections;\n\nclass Example\n{\n    public static void Main()\n    {\n        // Create a new hash table.\n        //\n        Hashtable openWith = new Hashtable();\n\n        // Add some elements to the hash table. There are no \n        // duplicate keys, but some of the values are duplicates.\n        openWith.Add(&quot;txt&quot;, &quot;notepad.exe&quot;);\n        openWith.Add(&quot;bmp&quot;, &quot;paint.exe&quot;);\n        openWith.Add(&quot;dib&quot;, &quot;paint.exe&quot;);\n        openWith.Add(&quot;rtf&quot;, &quot;wordpad.exe&quot;);\n\n        // When you use foreach to enumerate hash table elements,\n        // the elements are retrieved as DictionaryEntry objects.\n        Console.WriteLine();\n        foreach (DictionaryEntry de in openWith)\n        {\n            Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, de.Key, de.Value);\n        }\n    }\n}\n\n/* This code example produces output similar to the following:\n\nKey = rtf, Value = wordpad.exe\nKey = txt, Value = notepad.exe\nKey = dib, Value = paint.exe\nKey = bmp, Value = paint.exe\n */\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.collections.idictionaryenumerator#System_Collections_IDictionaryEnumerator_Entry_\" data-linktype=\"relative-path\">Entry</a> method returns an instance of this type.  </p>\n<p> The <code>foreach</code> statement of the C# language (<code>for each</code> in Visual C++, <code>For Each</code> in Visual Basic) requires the type of each element in the collection. Since each element of the <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is DictionaryEntry. For example:  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.DictionaryEntry#01\">for each (DictionaryEntry de in openWith)\n{\n    Console::WriteLine(&quot;Key = {0}, Value = {1}&quot;, de.Key, de.Value);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.DictionaryEntry#01\">For Each de As DictionaryEntry In openWith\n    Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, _\n        de.Key, de.Value)\nNext de\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.DictionaryEntry#01\">foreach (DictionaryEntry de in openWith)\n{\n    Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, de.Key, de.Value);\n}\n</code></pre><p> The <code>foreach</code> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_DictionaryEntry__ctor_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DictionaryEntry(Object, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes an instance of the <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> type with the specified key and value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DictionaryEntry (object key, object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object defined in each key/value pair.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The definition associated with <code>key</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>key</code> is <code>null</code> and the .NET Framework version is 1.0 or 1.1.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In the .NET Framework 2.0 <code>key</code> can be <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_DictionaryEntry_Key\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Key</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the key in the key/value pair.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Key { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key in the key/value pair.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_DictionaryEntry_Value\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Value</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the value in the key/value pair.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Value { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value in the key/value pair.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.DictionaryEntry.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry.Key\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry.Value\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"6b842827-1982-fb23-4e70-5e0ceaef92d9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a dictionary key/value pair that can be set or retrieved.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.collections/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.DictionaryEntry\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.DictionaryEntry.yml","open_to_public_contributors":false,"api_name":["System.Collections.DictionaryEntry","System.Collections.DictionaryEntry..ctor","System.Collections.DictionaryEntry.Key","System.Collections.DictionaryEntry.Value"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.DictionaryEntry","System::Collections::DictionaryEntry","System.Collections.DictionaryEntry.#ctor","System::Collections::DictionaryEntry::#ctor","System.Collections.DictionaryEntry.Key","System::Collections::DictionaryEntry::Key","System.Collections.DictionaryEntry.Value","System::Collections::DictionaryEntry::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"6b842827-1982-fb23-4e70-5e0ceaef92d9","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Collections/DictionaryEntry.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DictionaryEntry struct | Microsoft Docs","_op_ogTitle":"DictionaryEntry struct","description":"Defines a dictionary key/value pair that can be set or retrieved.\n","toc_asset_id":"api/_splitted/System.Collections/toc.json","toc_rel":"_splitted/System.Collections/toc.json","source_url":"","ms.assetid":"System.Collections.DictionaryEntry","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.dictionaryentry","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.dictionaryentry","fileRelativePath":"api/System.Collections.DictionaryEntry.html"},"themesRelativePathToOutputRoot":"_themes/"}