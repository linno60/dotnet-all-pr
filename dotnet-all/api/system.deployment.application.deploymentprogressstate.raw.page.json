{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DeploymentProgressState</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the current stage of a ClickOnce download operation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum DeploymentProgressState</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">DeploymentProgressState</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example installs the latest ClickOnce application update asynchronously.  </p>\n<pre><code class=\"lang-cs\" name=\"ClickOnceAPI#1\">long sizeOfUpdate = 0;\n\nprivate void UpdateApplication()\n{\n    if (ApplicationDeployment.IsNetworkDeployed)\n    {\n        ApplicationDeployment ad = ApplicationDeployment.CurrentDeployment;\n        ad.CheckForUpdateCompleted += new CheckForUpdateCompletedEventHandler(ad_CheckForUpdateCompleted);\n        ad.CheckForUpdateProgressChanged += new DeploymentProgressChangedEventHandler(ad_CheckForUpdateProgressChanged);\n\n        ad.CheckForUpdateAsync();\n    }\n}\n\nvoid  ad_CheckForUpdateProgressChanged(object sender, DeploymentProgressChangedEventArgs e)\n{\n    downloadStatus.Text = String.Format(&quot;Downloading: {0}. {1:D}K of {2:D}K downloaded.&quot;, GetProgressString(e.State), e.BytesCompleted/1024, e.BytesTotal/1024);   \n}\n\nstring GetProgressString(DeploymentProgressState state)\n{\n    if (state == DeploymentProgressState.DownloadingApplicationFiles)\n    {\n        return &quot;application files&quot;;\n    } \n    else if (state == DeploymentProgressState.DownloadingApplicationInformation) \n    {\n        return &quot;application manifest&quot;;\n    } \n    else \n    {\n        return &quot;deployment manifest&quot;;\n    }\n}\n\nvoid ad_CheckForUpdateCompleted(object sender, CheckForUpdateCompletedEventArgs e)\n{\n    if (e.Error != null)\n    {\n        MessageBox.Show(&quot;ERROR: Could not retrieve new version of the application. Reason: \\n&quot; + e.Error.Message + &quot;\\nPlease report this error to the system administrator.&quot;);\n        return;\n    }\n    else if (e.Cancelled == true)\n    {\n        MessageBox.Show(&quot;The update was cancelled.&quot;);\n    }\n\n    // Ask the user if they would like to update the application now.\n    if (e.UpdateAvailable)\n    {\n        sizeOfUpdate = e.UpdateSizeBytes;\n\n        if (!e.IsUpdateRequired)\n        {\n            DialogResult dr = MessageBox.Show(&quot;An update is available. Would you like to update the application now?\\n\\nEstimated Download Time: &quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel);\n            if (DialogResult.OK == dr)\n            {\n                BeginUpdate();\n            }\n        }\n        else\n        {\n            MessageBox.Show(&quot;A mandatory update is available for your application. We will install the update now, after which we will save all of your in-progress data and restart your application.&quot;);\n            BeginUpdate();\n        }\n    }\n}\n\nprivate void BeginUpdate()\n{\n    ApplicationDeployment ad = ApplicationDeployment.CurrentDeployment;\n    ad.UpdateCompleted += new AsyncCompletedEventHandler(ad_UpdateCompleted);\n\n    // Indicate progress in the application&#39;s status bar.\n    ad.UpdateProgressChanged += new DeploymentProgressChangedEventHandler(ad_UpdateProgressChanged);\n    ad.UpdateAsync();\n}\n\nvoid ad_UpdateProgressChanged(object sender, DeploymentProgressChangedEventArgs e)\n{\n    String progressText = String.Format(&quot;{0:D}K out of {1:D}K downloaded - {2:D}% complete&quot;, e.BytesCompleted / 1024, e.BytesTotal / 1024, e.ProgressPercentage);\n    downloadStatus.Text = progressText;\n}\n\nvoid ad_UpdateCompleted(object sender, AsyncCompletedEventArgs e)\n{\n    if (e.Cancelled)\n    {\n        MessageBox.Show(&quot;The update of the application&#39;s latest version was cancelled.&quot;);\n        return;\n    }\n    else if (e.Error != null)\n    {\n        MessageBox.Show(&quot;ERROR: Could not install the latest version of the application. Reason: \\n&quot; + e.Error.Message + &quot;\\nPlease report this error to the system administrator.&quot;);\n        return;\n    }\n\n    DialogResult dr = MessageBox.Show(&quot;The application has been updated. Restart? (If you do not restart now, the new version will not take effect until after you quit and launch the application again.)&quot;, &quot;Restart Application&quot;, MessageBoxButtons.OKCancel);\n    if (DialogResult.OK == dr)\n    {\n        Application.Restart();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"ClickOnceAPI#1\">private:\n    long sizeOfUpdate;\n\n\nprivate:\n    void Form1_Load(Object^ sender, System::EventArgs^ e)\n    {\n        DoUpdate();\n    }\n\npublic:\n    void DoUpdate()\n    {\n        if (ApplicationDeployment::IsNetworkDeployed)\n        {\n            ApplicationDeployment^ currentAppDeployment =\n                ApplicationDeployment::CurrentDeployment;\n            currentAppDeployment-&gt;CheckForUpdateCompleted +=\n                gcnew CheckForUpdateCompletedEventHandler(\n                this, &amp;Form1::currentDeploy_CheckForUpdateCompleted);\n            currentAppDeployment-&gt;CheckForUpdateAsync();\n        }\n    }\n\n    // If update is available, fetch it.\n    void currentDeploy_CheckForUpdateCompleted(Object^ sender,\n        CheckForUpdateCompletedEventArgs^ e)\n    {\n        if (nullptr != e-&gt;Error)\n        {\n            // Log error.\n            return;\n        }\n\n        if (e-&gt;UpdateAvailable)\n        {\n            sizeOfUpdate = (long) e-&gt;UpdateSizeBytes;\n            if (!e-&gt;IsUpdateRequired)\n            {\n                System::Windows::Forms::DialogResult \n                    updateDialogueResult = MessageBox::Show(\n                    &quot;An update is available.Would you like to update the&quot; +\n                    &quot; application now?&quot;, &quot;Update Available&quot;,\n                    MessageBoxButtons::OKCancel);\n                if (System::Windows::Forms::DialogResult::OK == \n                    updateDialogueResult)\n                {\n                    BeginUpdate();\n                }\n            }\n            else\n            {\n                BeginUpdate();\n            }\n        }\n    }\n\n    void BeginUpdate()\n    {\n        ApplicationDeployment^ ad = ApplicationDeployment::CurrentDeployment;\n        ad-&gt;UpdateCompleted +=\n            gcnew AsyncCompletedEventHandler(\n            this, &amp;Form1::CurrentDeployment_UpdateCompleted);\n\n        // Indicate progress in the application&#39;s status bar.\n        ad-&gt;UpdateProgressChanged +=\n            gcnew DeploymentProgressChangedEventHandler(this, \n            &amp;Form1::ad_ProgressChanged);\n\n        ad-&gt;UpdateAsync();\n    }\n\n    void CurrentDeployment_UpdateCompleted(Object^ sender,\n        AsyncCompletedEventArgs^ e)\n    {\n        if (!e-&gt;Cancelled)\n        {\n            if (nullptr != e-&gt;Error)\n            {\n                System::Windows::Forms::DialogResult \n                    restartDialogueResult = MessageBox::Show(\n                    &quot;The application has been updated. Restart?&quot;,\n                    &quot;Restart Application&quot;,\n                    MessageBoxButtons::OKCancel);\n                if (System::Windows::Forms::DialogResult::OK == \n                    restartDialogueResult)\n                {\n                    Application::Restart();\n                }\n            }\n            else\n            {\n                // Replace with your own error reporting or logging.\n                MessageBox::Show(\n                    &quot;The application encountered an error in downloading&quot; +\n                    &quot; the latest update. Error: {0}&quot;,\n                    e-&gt;Error-&gt;Message);\n            }\n        }\n        else\n        {\n            // Replace with your own error reporting or logging.\n            MessageBox::Show(&quot;The update of the application&#39;s latest&quot; +\n                &quot; version was cancelled.&quot;);\n        }\n    }\n\n    void ad_ProgressChanged(Object^ sender,\n        DeploymentProgressChangedEventArgs^ e)\n    {\n        String^ progressText =\n            String::Format(\n            &quot;{0:D}K out of {1:D}K downloaded - {2:D}% complete&quot;,\n            e-&gt;BytesCompleted / 1024, e-&gt;BytesTotal / 1024,\n            e-&gt;ProgressPercentage);\n        statusStrip1-&gt;Text = progressText;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ClickOnceAPI#1\">Private sizeOfUpdate As Long = 0\n\nDim WithEvents ADUpdateAsync As ApplicationDeployment\n\nPrivate Sub UpdateApplication()\n    If (ApplicationDeployment.IsNetworkDeployed) Then\n        ADUpdateAsync = ApplicationDeployment.CurrentDeployment\n\n        ADUpdateAsync.CheckForUpdateAsync()\n    End If\nEnd Sub\n\nPrivate Sub ADUpdateAsync_CheckForUpdateProgressChanged(ByVal sender As Object, ByVal e As DeploymentProgressChangedEventArgs) Handles ADUpdateAsync.CheckForUpdateProgressChanged\n    DownloadStatus.Text = [String].Format(&quot;{0:D}K of {1:D}K downloaded.&quot;, e.BytesCompleted / 1024, e.BytesTotal / 1024)\nEnd Sub\n\n\nPrivate Sub ADUpdateAsync_CheckForUpdateCompleted(ByVal sender As Object, ByVal e As CheckForUpdateCompletedEventArgs) Handles ADUpdateAsync.CheckForUpdateCompleted\n    If (e.Error IsNot Nothing) Then\n        MessageBox.Show((&quot;ERROR: Could not retrieve new version of the application. Reason: &quot; + ControlChars.Lf + e.Error.Message + ControlChars.Lf + &quot;Please report this error to the system administrator.&quot;))\n        Return\n    Else\n        If (e.Cancelled = True) Then\n            MessageBox.Show(&quot;The update was cancelled.&quot;)\n        End If\n    End If\n\n    &#39; Ask the user if they would like to update the application now.\n    If (e.UpdateAvailable) Then\n        sizeOfUpdate = e.UpdateSizeBytes\n\n        If (Not e.IsUpdateRequired) Then\n            Dim dr As DialogResult = MessageBox.Show(&quot;An update is available. Would you like to update the application now?&quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel)\n            If (System.Windows.Forms.DialogResult.OK = dr) Then\n                BeginUpdate()\n            End If\n        Else\n            MessageBox.Show(&quot;A mandatory update is available for your application. We will install the update now, after which we will save all of your in-progress data and restart your application.&quot;)\n            BeginUpdate()\n        End If\n    End If\nEnd Sub\n\nPrivate Sub BeginUpdate()\n    ADUpdateAsync = ApplicationDeployment.CurrentDeployment\n    ADUpdateAsync.UpdateAsync()\nEnd Sub\n\n\nPrivate Sub ADUpdateAsync_UpdateProgressChanged(ByVal sender As Object, ByVal e As DeploymentProgressChangedEventArgs) Handles ADUpdateAsync.UpdateProgressChanged\n    Dim progressText As String = String.Format(&quot;{0:D}K out of {1:D}K downloaded - {2:D}% complete&quot;, e.BytesCompleted / 1024, e.BytesTotal / 1024, e.ProgressPercentage)\n    DownloadStatus.Text = progressText\nEnd Sub\n\n\nPrivate Sub ADUpdateAsync_UpdateCompleted(ByVal sender As Object, ByVal e As AsyncCompletedEventArgs) Handles ADUpdateAsync.UpdateCompleted\n    If (e.Cancelled) Then\n        MessageBox.Show(&quot;The update of the application&#39;s latest version was cancelled.&quot;)\n        Exit Sub\n    Else\n        If (e.Error IsNot Nothing) Then\n            MessageBox.Show(&quot;ERROR: Could not install the latest version of the application. Reason: &quot; + ControlChars.Lf + e.Error.Message + ControlChars.Lf + &quot;Please report this error to the system administrator.&quot;)\n            Exit Sub\n        End If\n    End If\n\n    Dim dr As DialogResult = MessageBox.Show(&quot;The application has been updated. Restart? (If you do not restart now, the new version will not take effect until after you quit and launch the application again.)&quot;, &quot;Restart Application&quot;, MessageBoxButtons.OKCancel)\n    If (dr = System.Windows.Forms.DialogResult.OK) Then\n        Application.Restart()\n    End If\nEnd Sub\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>DeploymentProgressState is passed by way of the <a class=\"xref\" href=\"system.deployment.application.downloadprogresschangedeventargs#System_Deployment_Application_DownloadProgressChangedEventArgs_State_\" data-linktype=\"relative-path\">State</a> member of <a class=\"xref\" href=\"system.deployment.application.deploymentprogresschangedeventargs\" data-linktype=\"relative-path\">DeploymentProgressChangedEventArgs</a>, which is used by the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateProgressChanged\" data-linktype=\"relative-path\">CheckForUpdateProgressChanged</a>, <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateProgressChanged\" data-linktype=\"relative-path\">UpdateProgressChanged</a>, and <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupProgressChanged\" data-linktype=\"relative-path\">DownloadFileGroupProgressChanged</a> events. Use the members of this enumeration to determine what portion of the ClickOnce deployment has already been downloaded to the local machine.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Deployment_Application_DeploymentProgressState_DownloadingApplicationFiles\">\r\n      \t\t\t<span class=\"lang-csharp\">DownloadingApplicationFiles</span>\r\n      \t</td>\r\n      \t<td><p>ClickOnce is downloading the DLLs and data files that comprised the application.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Deployment_Application_DeploymentProgressState_DownloadingApplicationInformation\">\r\n      \t\t\t<span class=\"lang-csharp\">DownloadingApplicationInformation</span>\r\n      \t</td>\r\n      \t<td><p>ClickOnce is downloading the application manifest.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Deployment_Application_DeploymentProgressState_DownloadingDeploymentInformation\">\r\n      \t\t\t<span class=\"lang-csharp\">DownloadingDeploymentInformation</span>\r\n      \t</td>\r\n      \t<td><p>ClickOnce is downloading the deployment manifest.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Deployment.Application.DeploymentProgressState.yml\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DeploymentProgressState\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DeploymentProgressState.DownloadingApplicationFiles\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DeploymentProgressState.DownloadingApplicationInformation\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.DeploymentProgressState.DownloadingDeploymentInformation\">\r\n<meta name=\"APILocation\" content=\"System.Deployment.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"0f072759-0335-c1c1-b386-302d8d051287\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the current stage of a ClickOnce download operation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.deployment.application/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Deployment.Application.DeploymentProgressState\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Deployment.Application.DeploymentProgressState.yml","open_to_public_contributors":false,"api_name":["System.Deployment.Application.DeploymentProgressState","System.Deployment.Application.DeploymentProgressState.DownloadingApplicationFiles","System.Deployment.Application.DeploymentProgressState.DownloadingApplicationInformation","System.Deployment.Application.DeploymentProgressState.DownloadingDeploymentInformation"],"api_location":["System.Deployment.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Deployment.Application.DeploymentProgressState","System::Deployment::Application::DeploymentProgressState","System.Deployment.Application.DeploymentProgressState.DownloadingApplicationFiles","System::Deployment::Application::DeploymentProgressState::DownloadingApplicationFiles","System.Deployment.Application.DeploymentProgressState.DownloadingApplicationInformation","System::Deployment::Application::DeploymentProgressState::DownloadingApplicationInformation","System.Deployment.Application.DeploymentProgressState.DownloadingDeploymentInformation","System::Deployment::Application::DeploymentProgressState::DownloadingDeploymentInformation"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"0f072759-0335-c1c1-b386-302d8d051287","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Deployment.Application/DeploymentProgressState.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DeploymentProgressState enum | Microsoft Docs","_op_ogTitle":"DeploymentProgressState enum","description":"Specifies the current stage of a ClickOnce download operation.\n","toc_asset_id":"api/_splitted/System.Deployment.Application/toc.json","toc_rel":"_splitted/System.Deployment.Application/toc.json","source_url":"","ms.assetid":"System.Deployment.Application.DeploymentProgressState","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.deployment.application.deploymentprogressstate","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.deployment.application.deploymentprogressstate","fileRelativePath":"api/System.Deployment.Application.DeploymentProgressState.html"},"themesRelativePathToOutputRoot":"_themes/"}