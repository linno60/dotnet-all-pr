{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CommandEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <code>Command</code> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void CommandEventHandler(object sender, CommandEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">CommandEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to specify and code a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_Command\" data-linktype=\"relative-path\">Command</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control. This example specifies the event handler declaratively, using the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_OnClick_\" data-linktype=\"relative-path\">OnClick</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"ButtonCommandNameArgument#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Button CommandName Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n      Sub CommandBtn_Click(sender As Object, e As CommandEventArgs) \n\n         Select e.CommandName\n\n            Case &quot;Sort&quot;\n\n               &#39; Call the method to sort the list.\n               Sort_List(CType(e.CommandArgument, String))\n\n            Case &quot;Submit&quot;\n\n               &#39; Display a message for the Submit button being clicked.\n               Message.Text = &quot;You clicked the Submit button&quot;\n\n               &#39; Test whether the command argument is an empty string (&quot;&quot;).\n               If CType(e.CommandArgument , String) = &quot;&quot; Then\n              \n                  &#39; End the message.\n                  Message.Text &amp;= &quot;.&quot;\n               \n               Else\n               \n                  &#39; Display an error message for the command argument. \n                  Message.Text &amp;= &quot;, however the command argument is not recogized.&quot;\n               \n               End If                \n\n            Case Else\n\n               &#39; The command name is not recognized. Display an error message.\n               Message.Text = &quot;Command name not recogized.&quot;\n\n         End Select\n\n      End Sub\n\n      Sub Sort_List(commandArgument As String)\n\n         Select commandArgument\n\n            Case &quot;Ascending&quot;\n \n               &#39; Insert code to sort the list in ascending order here.\n               Message.Text = &quot;You clicked the Sort Ascending button.&quot;\n\n            Case &quot;Descending&quot;\n              \n               &#39; Insert code to sort the list in descending order here.\n               Message.Text = &quot;You clicked the Sort Descending button.&quot;\n\n            Case Else\n        \n               &#39; The command argument is not recognized. Display an error message.\n               Message.Text = &quot;Command argument not recogized.&quot;\n\n         End Select\n\n      End Sub\n\n   &lt;/script&gt;\n\n&lt;/head&gt;\n \n&lt;body&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;Button CommandName Example&lt;/h3&gt;\n\n      Click on one of the command buttons.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Sort Ascending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Ascending&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button2&quot;\n           Text=&quot;Sort Descending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Descending&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button3&quot;\n           Text=&quot;Submit&quot;\n           CommandName=&quot;Submit&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button4&quot;\n           Text=&quot;Unknown Command Name&quot;\n           CommandName=&quot;UnknownName&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button5&quot;\n           Text=&quot;Submit Unknown Command Argument&quot;\n           CommandName=&quot;Submit&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n       \n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"ButtonCommandNameArgument#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Button CommandName Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n      void CommandBtn_Click(Object sender, CommandEventArgs e) \n      {\n\n         switch(e.CommandName)\n         {\n\n            case &quot;Sort&quot;:\n\n               // Call the method to sort the list.\n               Sort_List((String)e.CommandArgument);\n               break;\n\n            case &quot;Submit&quot;:\n\n               // Display a message for the Submit button being clicked.\n               Message.Text = &quot;You clicked the Submit button&quot;;\n\n               // Test whether the command argument is an empty string (&quot;&quot;).\n               if((String)e.CommandArgument == &quot;&quot;)\n               {\n                  // End the message.\n                  Message.Text += &quot;.&quot;;\n               }\n               else\n               {\n                  // Display an error message for the command argument. \n                  Message.Text += &quot;, however the command argument is not recogized.&quot;;\n               }                \n               break;\n\n            default:\n\n               // The command name is not recognized. Display an error message.\n               Message.Text = &quot;Command name not recogized.&quot;;\n               break; \n\n         }\n\n      }\n\n      void Sort_List(string commandArgument)\n      {\n\n         switch(commandArgument)\n         {\n\n            case &quot;Ascending&quot;:\n \n               // Insert code to sort the list in ascending order here.\n               Message.Text = &quot;You clicked the Sort Ascending button.&quot;;\n               break;\n\n            case &quot;Descending&quot;:\n              \n               // Insert code to sort the list in descending order here.\n               Message.Text = &quot;You clicked the Sort Descending button.&quot;;\n               break;\n\n            default:\n        \n               // The command argument is not recognized. Display an error message.\n               Message.Text = &quot;Command argument not recogized.&quot;;\n               break;\n\n         }\n\n      }\n\n   &lt;/script&gt;\n\n&lt;/head&gt;\n \n&lt;body&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;Button CommandName Example&lt;/h3&gt;\n\n      Click on one of the command buttons.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Sort Ascending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Ascending&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button2&quot;\n           Text=&quot;Sort Descending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Descending&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button3&quot;\n           Text=&quot;Submit&quot;\n           CommandName=&quot;Submit&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button4&quot;\n           Text=&quot;Unknown Command Name&quot;\n           CommandName=&quot;UnknownName&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button5&quot;\n           Text=&quot;Submit Unknown Command Argument&quot;\n           CommandName=&quot;Submit&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           OnCommand=&quot;CommandBtn_Click&quot; \n           runat=&quot;server&quot;/&gt;\n       \n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to specify the event handler and programmatically add it to the event in the <code>Page_Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"ButtonCommand#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Button CommandName Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n      void CommandBtn_Click(Object sender, CommandEventArgs e) \n      {\n\n         switch(e.CommandName)\n         {\n\n            case &quot;Sort&quot;:\n\n               // Call the method to sort the list.\n               Sort_List((String)e.CommandArgument);\n               break;\n\n            case &quot;Submit&quot;:\n\n               // Display a message for the Submit button being clicked.\n               Message.Text = &quot;You clicked the &lt;b&gt;Submit&lt;/b&gt; button&quot;;\n\n               // Test whether the Command Argument is an empty string (&quot;&quot;).\n               if((String)e.CommandArgument == &quot;&quot;)\n               {\n                  // End the message.\n                  Message.Text += &quot;.&quot;;\n               }\n               else\n               {\n                  // Display an error message for the command argument. \n                  Message.Text += &quot;, but the command argument is not recogized.&quot;;\n               }                \n               break;\n\n            default:\n\n               // The command name is not recognized. Display an error message.\n               Message.Text = &quot;Command name not recogized.&quot;;\n               break; \n\n         }\n\n      }\n\n      void Sort_List(string commandArgument)\n      {\n\n         switch(commandArgument)\n         {\n\n            case &quot;Ascending&quot;:\n \n               // Insert code to sort the list in ascending order here.\n               Message.Text = &quot;You clicked the &lt;b&gt;Sort Ascending&lt;/b&gt; button.&quot;;\n               break;\n\n            case &quot;Descending&quot;:\n              \n               // Insert code to sort the list in descending order here.\n               Message.Text = &quot;You clicked the &lt;b&gt;Sort Descending&lt;/b&gt; button.&quot;;\n               break;\n\n            default:\n        \n               // The command argument is not recognized. Display an error message.\n               Message.Text = &quot;Command argument not recogized.&quot;;\n               break;\n\n         }\n\n      }\n\n      void Page_Load(Object sender, EventArgs e)\n      {\n\n         // Manually register the event-handling method for the Command  \n         // event of the Button controls.\n         Button1.Command += new CommandEventHandler(this.CommandBtn_Click);\n         Button2.Command += new CommandEventHandler(this.CommandBtn_Click);\n         Button3.Command += new CommandEventHandler(this.CommandBtn_Click);\n         Button4.Command += new CommandEventHandler(this.CommandBtn_Click);\n         Button5.Command += new CommandEventHandler(this.CommandBtn_Click);\n\n      }\n\n   &lt;/script&gt;\n\n&lt;/head&gt;\n \n&lt;body&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;Button CommandName Example&lt;/h3&gt;\n\n      Click one of the command buttons.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Sort Ascending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Ascending&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button2&quot;\n           Text=&quot;Sort Descending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Descending&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button3&quot;\n           Text=&quot;Submit&quot;\n           CommandName=&quot;Submit&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button4&quot;\n           Text=&quot;Unknown Command Name&quot;\n           CommandName=&quot;UnknownName&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button5&quot;\n           Text=&quot;Submit Unknown Command Argument&quot;\n           CommandName=&quot;Submit&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           runat=&quot;server&quot;/&gt;\n       \n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"ButtonCommand#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Button CommandName Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n      Sub CommandBtn_Click(sender As Object, e As CommandEventArgs) \n\n         Select e.CommandName\n\n            Case &quot;Sort&quot;\n\n               &#39; Call the method to sort the list.\n               Sort_List(CType(e.CommandArgument, String))\n\n            Case &quot;Submit&quot;\n\n               &#39; Display a message for the Submit button being clicked.\n               Message.Text = &quot;You clicked the &lt;b&gt;Submit&lt;/b&gt; button&quot;\n\n               &#39; Test whether the Command Argument is an empty string (&quot;&quot;).\n               If CType(e.CommandArgument , String) = &quot;&quot; Then\n              \n                  &#39; End the message.\n                  Message.Text &amp;= &quot;.&quot;\n               \n               Else\n               \n                  &#39; Display an error message for the command argument. \n                  Message.Text &amp;= &quot;, but the command argument is not recogized.&quot;\n               \n               End If                \n\n            Case Else\n\n               &#39; The command name is not recognized. Display an error message.\n               Message.Text = &quot;Command name not recogized.&quot;\n\n         End Select\n\n      End Sub\n\n      Sub Sort_List(commandArgument As String)\n\n         Select commandArgument\n\n            Case &quot;Ascending&quot;\n \n               &#39; Insert code to sort the list in ascending order here.\n               Message.Text = &quot;You clicked the &lt;b&gt;Sort Ascending&lt;/b&gt; button.&quot;\n\n            Case &quot;Descending&quot;\n              \n               &#39; Insert code to sort the list in descending order here.\n               Message.Text = &quot;You clicked the &lt;b&gt;Sort Descending&lt;/b&gt; button.&quot;\n\n            Case Else\n        \n               &#39; The command argument is not recognized. Display an error message.\n               Message.Text = &quot;Command argument not recogized.&quot;\n\n         End Select\n\n      End Sub\n\n      Sub Page_Load(sender As Object, e As EventArgs)\n\n         &#39; Manually register the event-handling method for the Command  \n         &#39; event of the Button controls.\n         AddHandler Button1.Command, AddressOf CommandBtn_Click\n         AddHandler Button2.Command, AddressOf CommandBtn_Click\n         AddHandler Button3.Command, AddressOf CommandBtn_Click\n         AddHandler Button4.Command, AddressOf CommandBtn_Click\n         AddHandler Button5.Command, AddressOf CommandBtn_Click\n\n      End Sub\n\n   &lt;/script&gt;\n\n&lt;/head&gt;\n \n&lt;body&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;Button CommandName Example&lt;/h3&gt;\n\n      Click one of the command buttons.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Sort Ascending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Ascending&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button2&quot;\n           Text=&quot;Sort Descending&quot;\n           CommandName=&quot;Sort&quot;\n           CommandArgument=&quot;Descending&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button3&quot;\n           Text=&quot;Submit&quot;\n           CommandName=&quot;Submit&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button4&quot;\n           Text=&quot;Unknown Command Name&quot;\n           CommandName=&quot;UnknownName&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &amp;nbsp;\n\n      &lt;asp:Button id=&quot;Button5&quot;\n           Text=&quot;Submit Unknown Command Argument&quot;\n           CommandName=&quot;Submit&quot;\n           CommandArgument=&quot;UnknownArgument&quot;\n           runat=&quot;server&quot;/&gt;\n       \n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <code>Command</code> event is raised when a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.imagebutton\" data-linktype=\"relative-path\">ImageButton</a>, or <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control is clicked.  </p>\n<p> When you create a CommandEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.CommandEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.CommandEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.CommandEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.CommandEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.CommandEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.CommandEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"478f96ea-ddcc-b4ce-d889-527c47efb913\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the Command event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.CommandEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.CommandEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.CommandEventHandler","System.Web.UI.WebControls.CommandEventHandler..ctor","System.Web.UI.WebControls.CommandEventHandler.Invoke","System.Web.UI.WebControls.CommandEventHandler.BeginInvoke","System.Web.UI.WebControls.CommandEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.CommandEventHandler","System::Web::UI::WebControls::CommandEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"478f96ea-ddcc-b4ce-d889-527c47efb913","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/CommandEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CommandEventHandler delegate | Microsoft Docs","_op_ogTitle":"CommandEventHandler delegate","description":"Represents the method that will handle the Command event.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.CommandEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.commandeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.commandeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.CommandEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}