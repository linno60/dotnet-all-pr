{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IReceiveMarkupExtension</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations; see Remarks.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Obsolete(&quot;IReceiveMarkupExtension has been deprecated. This interface is no longer in use.&quot;)]\npublic interface IReceiveMarkupExtension</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>In .NET Framework 3.0, IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing. In .NET Framework 4, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.  </p>\n<p> For .NET Framework 4 implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <a class=\"xref\" href=\"system.windows.markup.xamlsetmarkupextensionattribute\" data-linktype=\"relative-path\">XamlSetMarkupExtensionAttribute</a> attributes applied. The attribute specifies a callback, which is typically defined as a private member of the type.  </p>\n<p> In infrastructure implementations of WPF classes, most cases where <a class=\"xref\" href=\"system.windows.markup.xamlsetmarkupextensionattribute\" data-linktype=\"relative-path\">XamlSetMarkupExtensionAttribute</a> is applied reference a <code>ReceiveMarkupExtension</code> method that previously implemented this interface, but now instead use context through the callback.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Markup_IReceiveMarkupExtension_ReceiveMarkupExtension_System_String_System_Windows_Markup_MarkupExtension_System_IServiceProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReceiveMarkupExtension(String,MarkupExtension,IServiceProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see Remarks in <a class=\"xref\" href=\"system.windows.markup.ireceivemarkupextension\" data-linktype=\"relative-path\">IReceiveMarkupExtension</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>property</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the target property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>markupExtension</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.markup.markupextension\" data-linktype=\"relative-path\">MarkupExtension</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The markup extension instance of the incoming data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>serviceProvider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iserviceprovider\" data-linktype=\"relative-path\">IServiceProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Can provide additional services that should be performed when processing the markup extension data for a property value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Markup.IReceiveMarkupExtension.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Markup.IReceiveMarkupExtension\">\r\n<meta name=\"APIName\" content=\"System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"29fa119b-8928-66cc-072a-1f9269de2a9a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.markup/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Markup.IReceiveMarkupExtension\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Markup.IReceiveMarkupExtension.yml","open_to_public_contributors":false,"api_name":["System.Windows.Markup.IReceiveMarkupExtension","System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Markup.IReceiveMarkupExtension","System::Windows::Markup::IReceiveMarkupExtension","System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension","System::Windows::Markup::IReceiveMarkupExtension::ReceiveMarkupExtension"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"29fa119b-8928-66cc-072a-1f9269de2a9a","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/IReceiveMarkupExtension.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IReceiveMarkupExtension interface | Microsoft Docs","_op_ogTitle":"IReceiveMarkupExtension interface","description":"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.…","toc_asset_id":"api/_splitted/System.Windows.Markup/toc.json","toc_rel":"_splitted/System.Windows.Markup/toc.json","source_url":"","ms.assetid":"System.Windows.Markup.IReceiveMarkupExtension","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.markup.ireceivemarkupextension","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.markup.ireceivemarkupextension","fileRelativePath":"api/System.Windows.Markup.IReceiveMarkupExtension.html"},"themesRelativePathToOutputRoot":"_themes/"}