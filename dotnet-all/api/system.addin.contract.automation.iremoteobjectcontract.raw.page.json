{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IRemoteObjectContract</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a contract that components can use to access an object across application domain and process boundaries.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IRemoteObjectContract : System.AddIn.Contract.IContract</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you implement IRemoteObjectContract on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <a class=\"xref\" href=\"system.addin.contract.automation.iremoteobjectcontract#System_AddIn_Contract_Automation_IRemoteObjectContract_GetRemoteType_\" data-linktype=\"relative-path\">GetRemoteType</a> method to obtain an <a class=\"xref\" href=\"system.addin.contract.automation.iremotetypecontract\" data-linktype=\"relative-path\">IRemoteTypeContract</a>. The <a class=\"xref\" href=\"system.addin.contract.automation.iremotetypecontract\" data-linktype=\"relative-path\">IRemoteTypeContract</a> interface defines a contract that components can use to access specific type and member information, and to invoke members.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_AddIn_Contract_Automation_IRemoteObjectContract_GetRemoteType_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_AddIn_Contract_Automation_IRemoteObjectContract_GetRemoteType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetRemoteType()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an <a class=\"xref\" href=\"system.addin.contract.automation.iremotetypecontract\" data-linktype=\"relative-path\">IRemoteTypeContract</a> that specifies the type of the current <a class=\"xref\" href=\"system.addin.contract.automation.iremoteobjectcontract\" data-linktype=\"relative-path\">IRemoteObjectContract</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.contract.automation.iremotetypecontract\" data-linktype=\"relative-path\">IRemoteTypeContract</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.addin.contract.automation.iremotetypecontract\" data-linktype=\"relative-path\">IRemoteTypeContract</a> that specifies the type of the current <a class=\"xref\" href=\"system.addin.contract.automation.iremoteobjectcontract\" data-linktype=\"relative-path\">IRemoteObjectContract</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the GetRemoteType method to access the members of the remote object that the current <a class=\"xref\" href=\"system.addin.contract.automation.iremoteobjectcontract\" data-linktype=\"relative-path\">IRemoteObjectContract</a> identifies.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_AddIn_Contract_Automation_IRemoteObjectContract_RemoteCast_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_AddIn_Contract_Automation_IRemoteObjectContract_RemoteCast_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoteCast(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Casts the object identified by the current <a class=\"xref\" href=\"system.addin.contract.automation.iremoteobjectcontract\" data-linktype=\"relative-path\">IRemoteObjectContract</a> to a specified type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>canonicalName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The canonical name of the type to cast the object to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.contract.remoteargument\" data-linktype=\"relative-path\">RemoteArgument</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.addin.contract.remoteargument\" data-linktype=\"relative-path\">RemoteArgument</a> that represents the result of the cast operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A canonical name is a globally unique name, such as a GUID. Strings in the format &lt;<em>assembly name</em>&gt;, &lt;<em>fully qualified type name</em>&gt; are recommended. An example of the recommended format of a canonical name is &quot;ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application&quot;.  </p>\n<p> The canonical name for a type cannot change after a type is published in a component. Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.  </p>\n<p> It is recommended that RemoteCast implementations throw an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> if the cast operation fails.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.AddIn.Contract.Automation.IRemoteObjectContract.yml\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Contract.Automation.IRemoteObjectContract\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast\">\r\n<meta name=\"APILocation\" content=\"System.AddIn.Contract.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"2329d426-1d91-b06a-3c60-d7efa59c09f9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a contract that components can use to access an object across application domain and process boundaries.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.addin.contract.automation/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.AddIn.Contract.Automation.IRemoteObjectContract\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.AddIn.Contract.Automation.IRemoteObjectContract.yml","open_to_public_contributors":false,"api_name":["System.AddIn.Contract.Automation.IRemoteObjectContract","System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType","System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast"],"api_location":["System.AddIn.Contract.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.AddIn.Contract.Automation.IRemoteObjectContract","System::AddIn::Contract::Automation::IRemoteObjectContract","System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType","System::AddIn::Contract::Automation::IRemoteObjectContract::GetRemoteType","System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast","System::AddIn::Contract::Automation::IRemoteObjectContract::RemoteCast"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"2329d426-1d91-b06a-3c60-d7efa59c09f9","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.AddIn.Contract.Automation/IRemoteObjectContract.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IRemoteObjectContract interface | Microsoft Docs","_op_ogTitle":"IRemoteObjectContract interface","description":"Defines a contract that components can use to access an object across application domain and process boundaries.\n","toc_asset_id":"api/_splitted/System.AddIn.Contract.Automation/toc.json","toc_rel":"_splitted/System.AddIn.Contract.Automation/toc.json","source_url":"","ms.assetid":"System.AddIn.Contract.Automation.IRemoteObjectContract","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.addin.contract.automation.iremoteobjectcontract","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.addin.contract.automation.iremoteobjectcontract","fileRelativePath":"api/System.AddIn.Contract.Automation.IRemoteObjectContract.html"},"themesRelativePathToOutputRoot":"_themes/"}