{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDbTransaction</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDbTransaction : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example creates instances of the derived classes, <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> and <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction\" data-linktype=\"relative-path\">SqlTransaction</a>. It also demonstrates how to use the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction#System_Data_SqlClient_SqlTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a>, and <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction#System_Data_SqlClient_SqlTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData SqlConnection.BeginTransaction Example#1\">private static void ExecuteSqlTransaction(string connectionString)\n{\n    using (SqlConnection connection = new SqlConnection(connectionString))\n    {\n        connection.Open();\n\n        SqlCommand command = connection.CreateCommand();\n        SqlTransaction transaction;\n\n        // Start a local transaction.\n        transaction = connection.BeginTransaction(&quot;SampleTransaction&quot;);\n\n        // Must assign both transaction object and connection\n        // to Command object for a pending local transaction\n        command.Connection = connection;\n        command.Transaction = transaction;\n\n        try\n        {\n            command.CommandText =\n                &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;;\n            command.ExecuteNonQuery();\n            command.CommandText =\n                &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;;\n            command.ExecuteNonQuery();\n\n            // Attempt to commit the transaction.\n            transaction.Commit();\n            Console.WriteLine(&quot;Both records are written to database.&quot;);\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(&quot;Commit Exception Type: {0}&quot;, ex.GetType());\n            Console.WriteLine(&quot;  Message: {0}&quot;, ex.Message);\n\n            // Attempt to roll back the transaction.\n            try\n            {\n                transaction.Rollback();\n            }\n            catch (Exception ex2)\n            {\n                // This catch block will handle any errors that may have occurred\n                // on the server that would cause the rollback to fail, such as\n                // a closed connection.\n                Console.WriteLine(&quot;Rollback Exception Type: {0}&quot;, ex2.GetType());\n                Console.WriteLine(&quot;  Message: {0}&quot;, ex2.Message);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData SqlConnection.BeginTransaction Example#1\">Private Sub ExecuteSqlTransaction(ByVal connectionString As String)\n    Using connection As New SqlConnection(connectionString)\n        connection.Open()\n\n        Dim command As SqlCommand = connection.CreateCommand()\n        Dim transaction As SqlTransaction\n\n        &#39; Start a local transaction\n        transaction = connection.BeginTransaction(&quot;SampleTransaction&quot;)\n\n        &#39; Must assign both transaction object and connection\n        &#39; to Command object for a pending local transaction.\n        command.Connection = connection\n        command.Transaction = transaction\n\n        Try\n            command.CommandText = _\n              &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;\n            command.ExecuteNonQuery()\n            command.CommandText = _\n              &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;\n\n            command.ExecuteNonQuery()\n\n            &#39; Attempt to commit the transaction.\n            transaction.Commit()\n            Console.WriteLine(&quot;Both records are written to database.&quot;)\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Commit Exception Type: {0}&quot;, ex.GetType())\n            Console.WriteLine(&quot;  Message: {0}&quot;, ex.Message)\n\n            &#39; Attempt to roll back the transaction.\n            Try\n                transaction.Rollback()\n\n            Catch ex2 As Exception\n                &#39; This catch block will handle any errors that may have occurred\n                &#39; on the server that would cause the rollback to fail, such as\n                &#39; a closed connection.\n                Console.WriteLine(&quot;Rollback Exception Type: {0}&quot;, ex2.GetType())\n                Console.WriteLine(&quot;  Message: {0}&quot;, ex2.Message)\n            End Try\n        End Try\n    End Using\nEnd Sub\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The IDbTransaction interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source. For more information about Transaction classes, see <a href=\"../topic/transactions%20and%20concurrency\" data-linktype=\"relative-path\">Transactions and Concurrency</a>.  </p>\n<p> An application does not create an instance of the IDbTransaction interface directly, but creates an instance of a class that inherits IDbTransaction.  </p>\n<p> Classes that inherit IDbTransaction must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbTransaction interface defines the <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> method. In turn, the <a class=\"xref\" href=\"system.data.oledb.oledbtransaction\" data-linktype=\"relative-path\">OleDbTransaction</a> class inherits this property, and also defines the <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Begin_\" data-linktype=\"relative-path\">Begin</a> method.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_IDbTransaction_Connection_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbTransaction_Connection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Connection</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the Connection object to associate with the transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbConnection Connection { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbconnection\" data-linktype=\"relative-path\">IDbConnection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Connection object to associate with the transaction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A single application may have multiple database connections, each with zero or more transactions. This property enables you to determine the connection object associated with a particular transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_IDbTransaction_IsolationLevel_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbTransaction_IsolationLevel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolationLevel</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> for this transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IsolationLevel IsolationLevel { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> for this transaction. The default is <code>ReadCommitted</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Parallel transactions are not supported. Therefore, the <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> applies to the entire transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_IDbTransaction_Commit_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbTransaction_Commit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Commit()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Commits the database transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Commit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>An error occurred while trying to commit the transaction.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The transaction has already been committed or rolled back.  </p>\n<p> -or-  </p>\n<p> The connection is broken.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_IDbTransaction_Rollback_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbTransaction_Rollback\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Rollback()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Rolls back a transaction from a pending state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Rollback ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>An error occurred while trying to commit the transaction.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The transaction has already been committed or rolled back.  </p>\n<p> -or-  </p>\n<p> The connection is broken.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The transaction can only be rolled back from a pending state (after <a class=\"xref\" href=\"system.data.idbconnection#System_Data_IDbConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a> has been called, but before <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> is called).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.IDbTransaction.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.Commit\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.Connection\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.IsolationLevel\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.Rollback\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"0634c5fe-94dd-2298-229a-a5976927fd1d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.IDbTransaction\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.IDbTransaction.yml","open_to_public_contributors":false,"api_name":["System.Data.IDbTransaction","System.Data.IDbTransaction.Commit","System.Data.IDbTransaction.Connection","System.Data.IDbTransaction.IsolationLevel","System.Data.IDbTransaction.Rollback"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.IDbTransaction","System::Data::IDbTransaction","System.Data.IDbTransaction.Commit","System::Data::IDbTransaction::Commit","System.Data.IDbTransaction.Connection","System::Data::IDbTransaction::Connection","System.Data.IDbTransaction.IsolationLevel","System::Data::IDbTransaction::IsolationLevel","System.Data.IDbTransaction.Rollback","System::Data::IDbTransaction::Rollback"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"0634c5fe-94dd-2298-229a-a5976927fd1d","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data/IDbTransaction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDbTransaction interface | Microsoft Docs","_op_ogTitle":"IDbTransaction interface","description":"Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.\n","toc_asset_id":"api/_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.IDbTransaction","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.idbtransaction","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.idbtransaction","fileRelativePath":"api/System.Data.IDbTransaction.html"},"themesRelativePathToOutputRoot":"_themes/"}