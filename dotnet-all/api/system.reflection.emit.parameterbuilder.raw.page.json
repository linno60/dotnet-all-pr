{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ParameterBuilder</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Creates or associates parameter information.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\n[ECMA2Yaml.Models.ECMAAttribute]\n[ECMA2Yaml.Models.ECMAAttribute]\npublic class ParameterBuilder : System.Runtime.InteropServices._ParameterBuilder</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">ParameterBuilder</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to create a dynamic method with a parameter passed by reference using <code>ParameterBuilder</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Reflection.Emit.ParameterBuilder Example#1\">using namespace System;\nusing namespace System::Threading;\nusing namespace System::Reflection;\nusing namespace System::Reflection::Emit;\nType^ BuildCustomerDataType()\n{\n   AppDomain^ myDomain = Thread::GetDomain();\n   AssemblyName^ myAsmName = gcnew AssemblyName;\n   myAsmName-&gt;Name = &quot;MyDynamicAssembly&quot;;\n   AssemblyBuilder^ myAsmBuilder = myDomain-&gt;DefineDynamicAssembly( myAsmName, AssemblyBuilderAccess::Run );\n   ModuleBuilder^ myModBuilder = myAsmBuilder-&gt;DefineDynamicModule( &quot;MyMod&quot; );\n   TypeBuilder^ myTypeBuilder = myModBuilder-&gt;DefineType( &quot;CustomerData&quot;, TypeAttributes::Public );\n   FieldBuilder^ customerNameBldr = myTypeBuilder-&gt;DefineField( &quot;customerName&quot;, String::typeid, FieldAttributes::Private );\n   FieldBuilder^ acctIDBldr = myTypeBuilder-&gt;DefineField( &quot;acctID&quot;, String::typeid, FieldAttributes::Private );\n   FieldBuilder^ balanceAmtBldr = myTypeBuilder-&gt;DefineField( &quot;balanceAmt&quot;, double::typeid, FieldAttributes::Private );\n   array&lt;Type^&gt;^temp0 = {String::typeid,String::typeid,double::typeid};\n   ConstructorBuilder^ myCtorBuilder = myTypeBuilder-&gt;DefineConstructor( MethodAttributes::Public, CallingConventions::HasThis, temp0 );\n   ILGenerator^ ctorIL = myCtorBuilder-&gt;GetILGenerator();\n   Type^ objType = Type::GetType( &quot;System.Object&quot; );\n   ConstructorInfo^ objCtor = objType-&gt;GetConstructor( gcnew array&lt;Type^&gt;(0) );\n   ctorIL-&gt;Emit( OpCodes::Ldarg_0 );\n   ctorIL-&gt;Emit( OpCodes::Call, objCtor );\n   ctorIL-&gt;Emit( OpCodes::Ldarg_0 );\n   ctorIL-&gt;Emit( OpCodes::Ldarg_1 );\n   ctorIL-&gt;Emit( OpCodes::Stfld, customerNameBldr );\n   ctorIL-&gt;Emit( OpCodes::Ldarg_0 );\n   ctorIL-&gt;Emit( OpCodes::Ldarg_2 );\n   ctorIL-&gt;Emit( OpCodes::Stfld, acctIDBldr );\n   ctorIL-&gt;Emit( OpCodes::Ldarg_0 );\n   ctorIL-&gt;Emit( OpCodes::Ldarg_3 );\n   ctorIL-&gt;Emit( OpCodes::Stfld, balanceAmtBldr );\n   ctorIL-&gt;Emit( OpCodes::Ret );\n   \n   // This method will take an amount from a static pool and add it to the balance.\n   // Note that we are passing the first parameter, fundsPool, by reference. Therefore,\n   // we need to inform the MethodBuilder to expect a ref, by declaring the first\n   // parameter&#39;s type to be System::Double&amp; (a reference to a double).\n   array&lt;Type^&gt;^temp4 = {Type::GetType( &quot;System.Double&amp;&quot; ),double::typeid};\n   MethodBuilder^ myMthdBuilder = myTypeBuilder-&gt;DefineMethod( &quot;AddFundsFromPool&quot;, MethodAttributes::Public, double::typeid, temp4 );\n   ParameterBuilder^ poolRefBuilder = myMthdBuilder-&gt;DefineParameter( 1, ParameterAttributes::Out, &quot;fundsPool&quot; );\n   ParameterBuilder^ amountFromPoolBuilder = myMthdBuilder-&gt;DefineParameter( 2, ParameterAttributes::In, &quot;amountFromPool&quot; );\n   ILGenerator^ mthdIL = myMthdBuilder-&gt;GetILGenerator();\n   mthdIL-&gt;Emit( OpCodes::Ldarg_1 );\n   mthdIL-&gt;Emit( OpCodes::Ldarg_1 );\n   mthdIL-&gt;Emit( OpCodes::Ldind_R8 );\n   mthdIL-&gt;Emit( OpCodes::Ldarg_2 );\n   mthdIL-&gt;Emit( OpCodes::Sub );\n   mthdIL-&gt;Emit( OpCodes::Stind_R8 );\n   mthdIL-&gt;Emit( OpCodes::Ldarg_0 );\n   mthdIL-&gt;Emit( OpCodes::Ldarg_0 );\n   mthdIL-&gt;Emit( OpCodes::Ldfld, balanceAmtBldr );\n   mthdIL-&gt;Emit( OpCodes::Ldarg_2 );\n   mthdIL-&gt;Emit( OpCodes::Add );\n   mthdIL-&gt;Emit( OpCodes::Stfld, balanceAmtBldr );\n   mthdIL-&gt;Emit( OpCodes::Ldarg_0 );\n   mthdIL-&gt;Emit( OpCodes::Ldfld, balanceAmtBldr );\n   mthdIL-&gt;Emit( OpCodes::Ret );\n   return myTypeBuilder-&gt;CreateType();\n}\n\nint main()\n{\n   Type^ custType = nullptr;\n   Object^ custObj = nullptr;\n   array&lt;Type^&gt;^custArgTypes = {String::typeid,String::typeid,double::typeid};\n   \n   // Call the method to build our dynamic class.\n   custType = BuildCustomerDataType();\n   Console::WriteLine( &quot;---&quot; );\n   ConstructorInfo^ myCustCtor = custType-&gt;GetConstructor( custArgTypes );\n   double initialBalance = 100.00;\n   array&lt;Object^&gt;^temp5 = {&quot;Joe Consumer&quot;,&quot;5678-XYZ&quot;,initialBalance};\n   custObj = myCustCtor-&gt;Invoke( temp5 );\n   array&lt;MemberInfo^&gt;^myMemberInfo = custType-&gt;GetMember( &quot;AddFundsFromPool&quot; );\n   double thePool = 1000.00;\n   Console::WriteLine( &quot;The pool is currently ${0}&quot;, thePool );\n   Console::WriteLine( &quot;The original balance of the account instance is ${0}&quot;, initialBalance );\n   double amountFromPool = 50.00;\n   Console::WriteLine( &quot;The amount to be subtracted from the pool and added to the account is ${0}&quot;, amountFromPool );\n   Console::WriteLine( &quot;---&quot; );\n   Console::WriteLine( &quot;Calling {0} ...&quot;, myMemberInfo[ 0 ] );\n   Console::WriteLine( &quot;---&quot; );\n   array&lt;Object^&gt;^passMe = {thePool,amountFromPool};\n   Console::WriteLine( &quot;The new balance in the account instance is ${0}&quot;, custType-&gt;InvokeMember( &quot;AddFundsFromPool&quot;, BindingFlags::InvokeMethod, nullptr, custObj, passMe ) );\n   thePool = safe_cast&lt;double&gt;(passMe[ 0 ]);\n   Console::WriteLine( &quot;The new amount in the pool is ${0}&quot;, thePool );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Reflection.Emit.ParameterBuilder Example#1\">\nusing System;\nusing System.Threading;\nusing System.Reflection;\nusing System.Reflection.Emit;\n\nclass ParamBuilderDemo \n\n{\n\n   public static Type BuildCustomerDataType()\n   {\n\n\tAppDomain myDomain = Thread.GetDomain();\n\tAssemblyName myAsmName = new AssemblyName();\n\tmyAsmName.Name = &quot;MyDynamicAssembly&quot;;\n\n\tAssemblyBuilder myAsmBuilder = myDomain.DefineDynamicAssembly(myAsmName,\n\t\t\t\t\t\tAssemblyBuilderAccess.Run);\n\n\tModuleBuilder myModBuilder = myAsmBuilder.DefineDynamicModule(&quot;MyMod&quot;);\n\n\tTypeBuilder myTypeBuilder = myModBuilder.DefineType(&quot;CustomerData&quot;,\n\t\t\t\t\t\tTypeAttributes.Public);\n\n\tFieldBuilder customerNameBldr = myTypeBuilder.DefineField(&quot;customerName&quot;,\n\t\t\t\t\t\t\ttypeof(string),\n\t\t\t\t\t\t\tFieldAttributes.Private);\n\tFieldBuilder acctIDBldr = myTypeBuilder.DefineField(&quot;acctID&quot;,\n\t\t\t\t\t\t \ttypeof(string),\n\t\t\t\t\t\t\tFieldAttributes.Private);\n\tFieldBuilder balanceAmtBldr = myTypeBuilder.DefineField(&quot;balanceAmt&quot;,\n\t\t\t\t\t\t\ttypeof(double),\n\t\t\t\t\t\t\tFieldAttributes.Private);\n\t\t\t\t\t\t\t\t\n\tConstructorBuilder myCtorBuilder = myTypeBuilder.DefineConstructor(\n\t\t\t\t\t\t\tMethodAttributes.Public,\n\t\t\t\t\t\t\tCallingConventions.HasThis, \n\t\t\t\t\t\t\tnew Type[] { typeof(string),\n\t\t\t\t\t\t\t\t     typeof(string),\n\t\t\t\t\t\t\t\t     typeof(double) });\n\n\n\tILGenerator ctorIL = myCtorBuilder.GetILGenerator();\n\n\tType objType = Type.GetType(&quot;System.Object&quot;); \n        ConstructorInfo objCtor = objType.GetConstructor(new Type[] {});\n\n\tctorIL.Emit(OpCodes.Ldarg_0);\n\tctorIL.Emit(OpCodes.Call, objCtor);\n\n\tctorIL.Emit(OpCodes.Ldarg_0);\n\tctorIL.Emit(OpCodes.Ldarg_1);\n\tctorIL.Emit(OpCodes.Stfld, customerNameBldr);\n\n\tctorIL.Emit(OpCodes.Ldarg_0);\n\tctorIL.Emit(OpCodes.Ldarg_2);\n\tctorIL.Emit(OpCodes.Stfld, acctIDBldr);\n\n\tctorIL.Emit(OpCodes.Ldarg_0);\n\tctorIL.Emit(OpCodes.Ldarg_3);\n\tctorIL.Emit(OpCodes.Stfld, balanceAmtBldr);\n\n\tctorIL.Emit(OpCodes.Ret);\n\n\t// This method will take an amount from a static pool and add it to the balance.\n       \n\t// Note that we are passing the first parameter, fundsPool, by reference. Therefore,\n\t// we need to inform the MethodBuilder to expect a ref, by declaring the first\n\t// parameter&#39;s type to be System.Double&amp; (a reference to a double).\n \n\tMethodBuilder myMthdBuilder = myTypeBuilder.DefineMethod(&quot;AddFundsFromPool&quot;,\n\t\t\t\t\t\tMethodAttributes.Public,\n\t\t\t\t\t\ttypeof(double),\n\t\t\t\t\t\tnew Type[] { Type.GetType(&quot;System.Double&amp;&quot;),\n\t\t\t\t\t\t\t     typeof(double) });\n\n\tParameterBuilder poolRefBuilder = myMthdBuilder.DefineParameter(1,\n\t\t\t\t\t\tParameterAttributes.Out,\n\t\t\t\t\t\t&quot;fundsPool&quot;);\n\n\tParameterBuilder amountFromPoolBuilder = myMthdBuilder.DefineParameter(2,\n\t\t\t\t\t\tParameterAttributes.In,\n\t\t\t\t\t        &quot;amountFromPool&quot;);\n\n\tILGenerator mthdIL = myMthdBuilder.GetILGenerator();\n\n\tmthdIL.Emit(OpCodes.Ldarg_1); \n\tmthdIL.Emit(OpCodes.Ldarg_1); \n\tmthdIL.Emit(OpCodes.Ldind_R8);\n\tmthdIL.Emit(OpCodes.Ldarg_2);\n\tmthdIL.Emit(OpCodes.Sub);\n\n\tmthdIL.Emit(OpCodes.Stind_R8);\n\n\tmthdIL.Emit(OpCodes.Ldarg_0);\n\tmthdIL.Emit(OpCodes.Ldarg_0);\n\tmthdIL.Emit(OpCodes.Ldfld, balanceAmtBldr);\n\tmthdIL.Emit(OpCodes.Ldarg_2);\n\tmthdIL.Emit(OpCodes.Add);\n\n\tmthdIL.Emit(OpCodes.Stfld, balanceAmtBldr);\n\n\tmthdIL.Emit(OpCodes.Ldarg_0);\n\tmthdIL.Emit(OpCodes.Ldfld, balanceAmtBldr);\n\tmthdIL.Emit(OpCodes.Ret);\n\n\treturn myTypeBuilder.CreateType();\n\n   }\n\n   public static void Main()\n   {\n \tType custType = null;\n\tobject custObj = null;\n\n\tType[] custArgTypes = new Type[] {typeof(string), typeof(string), typeof(double)};\n\t\n\t// Call the method to build our dynamic class.\n\n\tcustType = BuildCustomerDataType();\n\n\tConsole.WriteLine(&quot;---&quot;);\n\n\tConstructorInfo myCustCtor = custType.GetConstructor(custArgTypes);\n\tdouble initialBalance = 100.00;\n\tcustObj = myCustCtor.Invoke(new object[] { &quot;Joe Consumer&quot;, \n\t\t\t\t\t\t   &quot;5678-XYZ&quot;, \n\t\t\t\t\t  \t   initialBalance });\n\n\tMemberInfo[] myMemberInfo = custType.GetMember(&quot;AddFundsFromPool&quot;);\n\n\n\tdouble thePool = 1000.00;\n\tConsole.WriteLine(&quot;The pool is currently ${0}&quot;, thePool);\n\tConsole.WriteLine(&quot;The original balance of the account instance is ${0}&quot;,\n\t\t\t\t\t\t\tinitialBalance);\n\n\tdouble amountFromPool = 50.00;\n\tConsole.WriteLine(&quot;The amount to be subtracted from the pool and added &quot; +\n\t\t\t  &quot;to the account is ${0}&quot;, amountFromPool);\n\t\n\tConsole.WriteLine(&quot;---&quot;);\n\tConsole.WriteLine(&quot;Calling {0} ...&quot;, myMemberInfo[0].ToString());\n\tConsole.WriteLine(&quot;---&quot;);\n\n\tobject[] passMe = new object[] { thePool, amountFromPool };\n\tConsole.WriteLine(&quot;The new balance in the account instance is ${0}&quot;,\n\t\t\t\t\tcustType.InvokeMember(&quot;AddFundsFromPool&quot;,\n\t\t\t\t\tBindingFlags.InvokeMethod,\n\t\t\t\t\tnull, custObj, passMe));\n\tthePool = (double)passMe[0];\n\tConsole.WriteLine(&quot;The new amount in the pool is ${0}&quot;, thePool);\n\n   }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Reflection.Emit.ParameterBuilder Example#1\">\nImports System\nImports System.Threading\nImports System.Reflection\nImports System.Reflection.Emit\n\n _\n\nClass ParamBuilderDemo\n   \n   Public Shared Function BuildCustomerDataType() As Type\n      \n      Dim myDomain As AppDomain = Thread.GetDomain()\n      Dim myAsmName As New AssemblyName()\n      myAsmName.Name = &quot;MyDynamicAssembly&quot;\n      \n      Dim myAsmBuilder As AssemblyBuilder = myDomain.DefineDynamicAssembly(myAsmName, _\n\t\t\t\t\t\tAssemblyBuilderAccess.Run)\n      \n      Dim myModBuilder As ModuleBuilder = myAsmBuilder.DefineDynamicModule(&quot;MyMod&quot;)\n      \n      Dim myTypeBuilder As TypeBuilder = myModBuilder.DefineType(&quot;CustomerData&quot;, TypeAttributes.Public)\n      \n      Dim customerNameBldr As FieldBuilder = myTypeBuilder.DefineField(&quot;customerName&quot;, _\n\t\t\t\t\t\t\t\tGetType(String), _\n\t\t\t\t\t\t\t\tFieldAttributes.Private)\n      Dim acctIDBldr As FieldBuilder = myTypeBuilder.DefineField(&quot;acctID&quot;, _\n\t\t\t\t\t\t\t\tGetType(String), _\n\t\t\t\t\t\t\t\tFieldAttributes.Private)\n      Dim balanceAmtBldr As FieldBuilder = myTypeBuilder.DefineField(&quot;balanceAmt&quot;, _\n\t\t\t\t\t\t\t\tGetType(Double), _\n\t\t\t\t\t\t\t\tFieldAttributes.Private)\n      \n      Dim myCtorBuilder As ConstructorBuilder = myTypeBuilder.DefineConstructor(MethodAttributes.Public, _\n\t\t\t\t\t\t\t\tCallingConventions.HasThis, _\n\t\t\t\t\t\t\t\tNew Type() {GetType(String), _\n\t\t\t\t\t\t\t\t\t    GetType(String), _\n\t\t\t\t\t\t\t\t\t    GetType(Double)})\n      \n      \n      Dim ctorIL As ILGenerator = myCtorBuilder.GetILGenerator()\n      \n      Dim objType As Type = Type.GetType(&quot;System.Object&quot;)\n      Dim objCtor As ConstructorInfo = objType.GetConstructor(New Type(){})\n      \n      ctorIL.Emit(OpCodes.Ldarg_0)\n      ctorIL.Emit(OpCodes.Call, objCtor)\n      \n      ctorIL.Emit(OpCodes.Ldarg_0)\n      ctorIL.Emit(OpCodes.Ldarg_1)\n      ctorIL.Emit(OpCodes.Stfld, customerNameBldr)\n      \n      ctorIL.Emit(OpCodes.Ldarg_0)\n      ctorIL.Emit(OpCodes.Ldarg_2)\n      ctorIL.Emit(OpCodes.Stfld, acctIDBldr)\n      \n      ctorIL.Emit(OpCodes.Ldarg_0)\n      ctorIL.Emit(OpCodes.Ldarg_3)\n      ctorIL.Emit(OpCodes.Stfld, balanceAmtBldr)\n      \n      ctorIL.Emit(OpCodes.Ret)\n      \n      &#39; This method will take an amount from a static pool and add it to the balance.\n      &#39; Note that we are passing the first parameter, fundsPool, by reference. Therefore,\n      &#39; we need to inform the MethodBuilder to expect a ref, by declaring the first\n      &#39; parameter&#39;s type to be System.Double&amp; (a reference to a double).\n\n      Dim myMthdBuilder As MethodBuilder = myTypeBuilder.DefineMethod(&quot;AddFundsFromPool&quot;, _\n\t\t\t\t\t\t\t\tMethodAttributes.Public, _\n\t\t\t\t\t\t\t\tGetType(Double), _\n\t\t\t\t\t\t\t\tNew Type() {Type.GetType(&quot;System.Double&amp;&quot;), _\n\t\t\t\t\t\t\t\t\t\t GetType(Double)})\n      \n      Dim poolRefBuilder As ParameterBuilder = myMthdBuilder.DefineParameter(1, _\n\t\t\t\t\t\t\tParameterAttributes.Out, &quot;fundsPool&quot;)\n      \n      Dim amountFromPoolBuilder As ParameterBuilder = myMthdBuilder.DefineParameter(2, _\n\t\t\t\t\t\t\tParameterAttributes.In, &quot;amountFromPool&quot;)\n      \n      Dim mthdIL As ILGenerator = myMthdBuilder.GetILGenerator()\n      \n      mthdIL.Emit(OpCodes.Ldarg_1)\n      mthdIL.Emit(OpCodes.Ldarg_1)\n      mthdIL.Emit(OpCodes.Ldind_R8)\n      mthdIL.Emit(OpCodes.Ldarg_2)\n      mthdIL.Emit(OpCodes.Sub)\n      \n      mthdIL.Emit(OpCodes.Stind_R8)\n      \n      mthdIL.Emit(OpCodes.Ldarg_0)\n      mthdIL.Emit(OpCodes.Ldarg_0)\n      mthdIL.Emit(OpCodes.Ldfld, balanceAmtBldr)\n      mthdIL.Emit(OpCodes.Ldarg_2)\n      mthdIL.Emit(OpCodes.Add)\n      \n      mthdIL.Emit(OpCodes.Stfld, balanceAmtBldr)\n      \n      mthdIL.Emit(OpCodes.Ldarg_0)\n      mthdIL.Emit(OpCodes.Ldfld, balanceAmtBldr)\n      mthdIL.Emit(OpCodes.Ret)\n      \n      Return myTypeBuilder.CreateType()\n\n   End Function &#39;BuildCustomerDataType\n    \n   \n   Public Shared Sub Main()\n\n      Dim custType As Type = Nothing\n      Dim custObj As Object = Nothing\n      \n      Dim custArgTypes() As Type = {GetType(String), GetType(String), GetType(Double)}\n      \n      &#39; Call the method to build our dynamic class.\n      custType = BuildCustomerDataType()\n      \n      Console.WriteLine(&quot;---&quot;)\n      \n      Dim myCustCtor As ConstructorInfo = custType.GetConstructor(custArgTypes)\n      Dim initialBalance As Double = 100.0\n      custObj = myCustCtor.Invoke(New Object() {&quot;Joe Consumer&quot;, &quot;5678-XYZ&quot;, initialBalance})\n      \n      Dim myMemberInfo As MemberInfo() = custType.GetMember(&quot;AddFundsFromPool&quot;)\n      \n      \n      Dim thePool As Double = 1000.0\n      Console.WriteLine(&quot;The pool is currently ${0}&quot;, thePool)\n      Console.WriteLine(&quot;The original balance of the account instance is ${0}&quot;, initialBalance)\n      \n      Dim amountFromPool As Double = 50.0\n      Console.WriteLine(&quot;The amount to be subtracted from the pool and added &quot; &amp; _\n\t\t\t&quot;to the account is ${0}&quot;, amountFromPool)\n      \n      Console.WriteLine(&quot;---&quot;)\n      Console.WriteLine(&quot;Calling {0} ...&quot;, myMemberInfo(0).ToString())\n      Console.WriteLine(&quot;---&quot;)\n      \n      Dim passMe() As Object = {thePool, amountFromPool}\n      Console.WriteLine(&quot;The new balance in the account instance is ${0}&quot;, _\n\t\t\t\tcustType.InvokeMember(&quot;AddFundsFromPool&quot;, _\n\t\t\t\tBindingFlags.InvokeMethod, Nothing, custObj, passMe))\n      thePool = CDbl(passMe(0))\n      Console.WriteLine(&quot;The new amount in the pool is ${0}&quot;, thePool)\n\n   End Sub &#39;Main \n\nEnd Class &#39;ParamBuilderDemo\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Parameter attributes need to consistent with the method signature. If you specify <code>Out</code> attributes for a parameter, you should ensure that the type of that method parameter is a <code>ByRef</code> type.  </p>\n<p> Some ParameterBuilder attributes require that you call <a class=\"xref\" href=\"system.reflection.emit.typebuilder#System_Reflection_Emit_TypeBuilder_DefineMethod_\" data-linktype=\"relative-path\">DefineMethod</a> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime. For example, if you define a ParameterBuilder with ParameterAttributes.Out for parameter 1 of a <code>MethodBuilder</code>, then parameter 1 of <a class=\"xref\" href=\"system.reflection.emit.methodbuilder\" data-linktype=\"relative-path\">MethodBuilder</a> must be a reference such as Type.GetType(&quot;System.String&amp;&quot;), rather than Type.GetType(&quot;System.String&quot;).</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_Attributes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_Attributes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Attributes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the attributes for this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual int Attributes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Read-only. Retrieves the attributes for this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The values of the attribute correspond to the values of the <a class=\"xref\" href=\"system.reflection.parameterattributes\" data-linktype=\"relative-path\">ParameterAttributes</a> enumeration.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_IsIn_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_IsIn\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsIn</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves whether this is an input parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsIn { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Read-only. Retrieves whether this is an input parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_IsOptional_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_IsOptional\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsOptional</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves whether this parameter is optional.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsOptional { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Read-only. Specifies whether this parameter is optional.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_IsOut_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_IsOut\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsOut</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves whether this parameter is an output parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsOut { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Read-only. Retrieves whether this parameter is an output parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_Name_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_Name\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Name</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the name of this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string Name { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Read-only. Retrieves the name of this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_Position_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_Position\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Position</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the signature position for this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual int Position { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Read-only. Retrieves the signature position for this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_GetToken_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_GetToken\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetToken()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the token for this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Reflection.Emit.ParameterToken GetToken ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.parametertoken\" data-linktype=\"relative-path\">ParameterToken</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>Returns the token for this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_SetConstant_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_SetConstant_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetConstant(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the default value of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void SetConstant (object defaultValue);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>defaultValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default value of this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The parameter is not one of the supported types.  </p>\n<p> -or-  </p>\n<p> The type of <code>defaultValue</code> does not match the type of the parameter.  </p>\n<p> -or-  </p>\n<p> The parameter is of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> or other reference type, <code>defaultValue</code> is not <code>null</code>, and the value cannot be assigned to the reference type.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><code>defaultValue</code> is restricted to the following types: <code>Boolean</code>, <code>SByte</code>, <code>Int16</code>, <code>Int32</code>, <code>Int64</code>, <code>Byte</code>, <code>UInt16</code>, <code>UInt32</code>, <code>UInt64</code>, <code>Single</code>, <code>Double</code>, <code>DateTime</code>, <code>Char</code>, <code>String</code>, and <code>Enum</code>. If the parameter type is a reference type, CLS compliance requires <code>defaultValue</code> to be <code>null</code>. However, starting with the .NET Framework 4, <code>defaultValue</code> can be non-null for a reference type as long as the value can be assigned to that reference type. For example, an <code>Int32</code> value can be assigned to a parameter of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. This is not CLS-compliant, but it can be useful in interop scenarios.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_SetCustomAttribute_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_SetCustomAttribute_System_Reflection_Emit_CustomAttributeBuilder_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetCustomAttribute(CustomAttributeBuilder)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Set a custom attribute using a custom attribute builder.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>customBuilder</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.customattributebuilder\" data-linktype=\"relative-path\">CustomAttributeBuilder</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance of a helper class to define the custom attribute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>con</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_SetCustomAttribute_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_SetCustomAttribute_System_Reflection_ConstructorInfo_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetCustomAttribute(ConstructorInfo, Byte[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Set a custom attribute using a specified custom attribute blob.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>con</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.constructorinfo\" data-linktype=\"relative-path\">ConstructorInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The constructor for the custom attribute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>binaryAttribute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A byte blob representing the attributes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>con</code> or <code>binaryAttribute</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>See the metadata specification in the ECMA Partition II documentation for details on how to format <code>binaryAttribute</code>. The documentation is available online; see <a href=\"http://go.microsoft.com/fwlink/?LinkID=99212\" data-linktype=\"external\">ECMA C# and Common Language Infrastructure Standards</a> on MSDN and <a href=\"http://go.microsoft.com/fwlink/?LinkID=65552\" data-linktype=\"external\">Standard ECMA-335 - Common Language Infrastructure (CLI)</a> on the Ecma International Web site.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_SetMarshal_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_SetMarshal_System_Reflection_Emit_UnmanagedMarshal_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetMarshal(UnmanagedMarshal)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the marshaling for this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void SetMarshal (System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>unmanagedMarshal</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.unmanagedmarshal\" data-linktype=\"relative-path\">UnmanagedMarshal</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The marshaling information for this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>unmanagedMarshal</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method should throw the following exception but currently does not:  </p>\n<p> <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> if the containing type has been created using TypeBuilder.CreateType().</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_GetIDsOfNames_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>riid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Reserved for future use. Must be IID_NULL.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgszNames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Passed-in array of names to be mapped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cNames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Count of the names to be mapped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lcid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The locale context in which to interpret the names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgDispId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Caller-allocated array which receives the IDs corresponding to the names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetIDsOfNames</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_GetTypeInfo_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>iTInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type information to return.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lcid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The locale identifier for the type information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ppTInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Receives a pointer to the requested type information object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfo</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_GetTypeInfoCount_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_GetTypeInfoCount_System_UInt32__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterBuilder.GetTypeInfoCount(UInt32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterBuilder.GetTypeInfoCount (out uint pcTInfo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pcTInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Points to a location that receives the number of type information interfaces provided by the object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfoCount</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_Invoke_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_Emit_ParameterBuilder_System_Runtime_InteropServices__ParameterBuilder_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides access to properties and methods exposed by an object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dispIdMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Identifies the member.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>riid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Reserved for future use. Must be IID_NULL.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lcid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The locale context in which to interpret arguments.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>wFlags</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Flags describing the context of the call.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pDispParams</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pVarResult</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Pointer to the location where the result is to be stored.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pExcepInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Pointer to a structure that contains exception information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>puArgErr</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the first argument that has an error.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comdefaultinterfaceattribute\" title=\"System.Runtime.InteropServices.ComDefaultInterfaceAttribute\" data-linktype=\"relative-path\">ComDefaultInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::Invoke</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.Emit.ParameterBuilder.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.Attributes\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.GetToken\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.IsIn\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.IsOptional\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.IsOut\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.Name\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.Position\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.SetConstant\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.SetCustomAttribute\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder.SetMarshal\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetIDsOfNames\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfo\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfoCount\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.ParameterBuilder._ParameterBuilder.Invoke\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"d7d40564-e0c0-6565-8d43-60f4796593f1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Creates or associates parameter information.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.reflection.emit/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.Emit.ParameterBuilder\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.Emit.ParameterBuilder.yml","open_to_public_contributors":false,"api_name":["System.Reflection.Emit.ParameterBuilder","System.Reflection.Emit.ParameterBuilder.Attributes","System.Reflection.Emit.ParameterBuilder.GetToken","System.Reflection.Emit.ParameterBuilder.IsIn","System.Reflection.Emit.ParameterBuilder.IsOptional","System.Reflection.Emit.ParameterBuilder.IsOut","System.Reflection.Emit.ParameterBuilder.Name","System.Reflection.Emit.ParameterBuilder.Position","System.Reflection.Emit.ParameterBuilder.SetConstant","System.Reflection.Emit.ParameterBuilder.SetCustomAttribute","System.Reflection.Emit.ParameterBuilder.SetMarshal","System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetIDsOfNames","System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfo","System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfoCount","System.Reflection.Emit.ParameterBuilder._ParameterBuilder.Invoke"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.Emit.ParameterBuilder","System::Reflection::Emit::ParameterBuilder","System.Reflection.Emit.ParameterBuilder.Attributes","System::Reflection::Emit::ParameterBuilder::Attributes","System.Reflection.Emit.ParameterBuilder.GetToken","System::Reflection::Emit::ParameterBuilder::GetToken","System.Reflection.Emit.ParameterBuilder.IsIn","System::Reflection::Emit::ParameterBuilder::IsIn","System.Reflection.Emit.ParameterBuilder.IsOptional","System::Reflection::Emit::ParameterBuilder::IsOptional","System.Reflection.Emit.ParameterBuilder.IsOut","System::Reflection::Emit::ParameterBuilder::IsOut","System.Reflection.Emit.ParameterBuilder.Name","System::Reflection::Emit::ParameterBuilder::Name","System.Reflection.Emit.ParameterBuilder.Position","System::Reflection::Emit::ParameterBuilder::Position","System.Reflection.Emit.ParameterBuilder.SetConstant","System::Reflection::Emit::ParameterBuilder::SetConstant","System.Reflection.Emit.ParameterBuilder.SetCustomAttribute","System::Reflection::Emit::ParameterBuilder::SetCustomAttribute","System.Reflection.Emit.ParameterBuilder.SetMarshal","System::Reflection::Emit::ParameterBuilder::SetMarshal","System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames","System::Reflection::Emit::ParameterBuilder::System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames","System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo","System::Reflection::Emit::ParameterBuilder::System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo","System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount","System::Reflection::Emit::ParameterBuilder::System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount","System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke","System::Reflection::Emit::ParameterBuilder::System#Runtime#InteropServices#_ParameterBuilder#Invoke"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"d7d40564-e0c0-6565-8d43-60f4796593f1","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ParameterBuilder class | Microsoft Docs","_op_ogTitle":"ParameterBuilder class","description":"Creates or associates parameter information.\n","toc_asset_id":"api/_splitted/System.Reflection.Emit/toc.json","toc_rel":"_splitted/System.Reflection.Emit/toc.json","source_url":"","ms.assetid":"System.Reflection.Emit.ParameterBuilder","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.parameterbuilder","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.parameterbuilder","fileRelativePath":"api/System.Reflection.Emit.ParameterBuilder.html"},"themesRelativePathToOutputRoot":"_themes/"}