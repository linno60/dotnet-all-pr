{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">RNGCryptoServiceProvider</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Implements a cryptographic Random Number Generator (RNG) using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class RNGCryptoServiceProvider : System.Security.Cryptography.RandomNumberGenerator</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a></span></div><span class=\"lang-csharp\">RNGCryptoServiceProvider</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator#System_Security_Cryptography_RandomNumberGenerator_Create\" data-linktype=\"relative-path\">Create()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator#System_Security_Cryptography_RandomNumberGenerator_Create_System_String_\" data-linktype=\"relative-path\">Create(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator#System_Security_Cryptography_RandomNumberGenerator_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator#System_Security_Cryptography_RandomNumberGenerator_GetBytes_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">GetBytes(Byte[], Int32, Int32)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to create a random number with the RNGCryptoServiceProvider class.  </p>\n<pre><code class=\"lang-vb\" name=\"RNGCSP#1\">&#39;The following sample uses the Cryptography class to simulate the roll of a dice.\nImports System\nImports System.IO\nImports System.Text\nImports System.Security.Cryptography\n\n\n\nClass RNGCSP\n    Private Shared rngCsp As New RNGCryptoServiceProvider()\n    &#39; Main method.\n    Public Shared Sub Main()\n        Const totalRolls As Integer = 25000\n        Dim results(5) As Integer\n\n        &#39; Roll the dice 25000 times and display\n        &#39; the results to the console.\n        Dim x As Integer\n        For x = 0 To totalRolls\n            Dim roll As Byte = RollDice(System.Convert.ToByte(results.Length))\n            results((roll - 1)) += 1\n        Next x\n        Dim i As Integer\n\n        While i &lt; results.Length\n            Console.WriteLine(&quot;{0}: {1} ({2:p1})&quot;, i + 1, results(i), System.Convert.ToDouble(results(i)) / System.Convert.ToDouble(totalRolls))\n            i += 1\n        End While\n        rngCsp.Dispose()\n        Console.ReadLine()\n    End Sub\n\n\n    &#39; This method simulates a roll of the dice. The input parameter is the\n    &#39; number of sides of the dice.\n    Public Shared Function RollDice(ByVal numberSides As Byte) As Byte\n        If numberSides &lt;= 0 Then\n            Throw New ArgumentOutOfRangeException(&quot;NumSides&quot;)\n        End If \n        &#39; Create a byte array to hold the random value.\n        Dim randomNumber(0) As Byte\n        Do\n            &#39; Fill the array with a random value.\n            rngCsp.GetBytes(randomNumber)\n        Loop While Not IsFairRoll(randomNumber(0), numberSides)\n        &#39; Return the random number mod the number\n        &#39; of sides.  The possible values are zero-\n        &#39; based, so we add one.\n        Return System.Convert.ToByte(randomNumber(0) Mod numberSides + 1)\n\n    End Function\n\n\n    Private Shared Function IsFairRoll(ByVal roll As Byte, ByVal numSides As Byte) As Boolean\n        &#39; There are MaxValue / numSides full sets of numbers that can come up\n        &#39; in a single byte.  For instance, if we have a 6 sided die, there are\n        &#39; 42 full sets of 1-6 that come up.  The 43rd set is incomplete.\n        Dim fullSetsOfValues As Integer = [Byte].MaxValue / numSides\n\n        &#39; If the roll is within this range of fair values, then we let it continue.\n        &#39; In the 6 sided die case, a roll between 0 and 251 is allowed.  (We use\n        &#39; &lt; rather than &lt;= since the = portion allows through an extra 0 value).\n        &#39; 252 through 255 would provide an extra 0, 1, 2, 3 so they are not fair\n        &#39; to use.\n        Return roll &lt; numSides * fullSetsOfValues\n\n    End Function &#39;IsFairRoll\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"RNGCSP#1\">//The following sample uses the Cryptography class to simulate the roll of a dice.\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Security::Cryptography;\n\nref class RNGCSP\n{\npublic:\n    // Main method.\n    static void Main()\n    {\n        const int totalRolls = 25000;\n        array&lt;int&gt;^ results = gcnew array&lt;int&gt;(6);\n\n        // Roll the dice 25000 times and display\n        // the results to the console.\n        for (int x = 0; x &lt; totalRolls; x++)\n        {\n            Byte roll = RollDice((Byte)results-&gt;Length);\n            results[roll - 1]++;\n        }\n        for (int i = 0; i &lt; results-&gt;Length; ++i)\n        {\n            Console::WriteLine(&quot;{0}: {1} ({2:p1})&quot;, i + 1, results[i], (double)results[i] / (double)totalRolls);\n        }\n    }\n\n    // This method simulates a roll of the dice. The input parameter is the\n    // number of sides of the dice.\n\n    static Byte RollDice(Byte numberSides)\n    {\n        if (numberSides &lt;= 0)\n            throw gcnew ArgumentOutOfRangeException(&quot;numberSides&quot;);\n        // Create a new instance of the RNGCryptoServiceProvider.\n        RNGCryptoServiceProvider^ rngCsp = gcnew RNGCryptoServiceProvider();\n        // Create a byte array to hold the random value.\n        array&lt;Byte&gt;^ randomNumber = gcnew array&lt;Byte&gt;(1);\n        do\n        {\n            // Fill the array with a random value.\n            rngCsp-&gt;GetBytes(randomNumber);\n        }\n        while (!IsFairRoll(randomNumber[0], numberSides));\n        // Return the random number mod the number\n        // of sides.  The possible values are zero-\n        // based, so we add one.\n        return (Byte)((randomNumber[0] % numberSides) + 1);\n    }\n\nprivate:\n    static bool IsFairRoll(Byte roll, Byte numSides)\n    {\n        // There are MaxValue / numSides full sets of numbers that can come up\n        // in a single byte.  For instance, if we have a 6 sided die, there are\n        // 42 full sets of 1-6 that come up.  The 43rd set is incomplete.\n        int fullSetsOfValues = Byte::MaxValue / numSides;\n\n        // If the roll is within this range of fair values, then we let it continue.\n        // In the 6 sided die case, a roll between 0 and 251 is allowed.  (We use\n        // &lt; rather than &lt;= since the = portion allows through an extra 0 value).\n        // 252 through 255 would provide an extra 0, 1, 2, 3 so they are not fair\n        // to use.\n        return roll &lt; numSides * fullSetsOfValues;\n    }\n};\n\nint main()\n{\n    RNGCSP::Main();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"RNGCSP#1\">//The following sample uses the Cryptography class to simulate the roll of a dice.\n\nusing System;\nusing System.IO;\nusing System.Text;\nusing System.Security.Cryptography;\n\nclass RNGCSP\n{\n    private static RNGCryptoServiceProvider rngCsp = new RNGCryptoServiceProvider();\n    // Main method.\n    public static void Main()\n    {\n        const int totalRolls = 25000;\n        int[] results = new int[6];\n\n        // Roll the dice 25000 times and display\n        // the results to the console.\n        for (int x = 0; x &lt; totalRolls; x++)\n        {\n            byte roll = RollDice((byte)results.Length);\n            results[roll - 1]++;\n        }\n        for (int i = 0; i &lt; results.Length; ++i)\n        {\n            Console.WriteLine(&quot;{0}: {1} ({2:p1})&quot;, i + 1, results[i], (double)results[i] / (double)totalRolls);\n        }\n        rngCsp.Dispose();\n        Console.ReadLine();\n    }\n\n    // This method simulates a roll of the dice. The input parameter is the\n    // number of sides of the dice.\n\n    public static byte RollDice(byte numberSides)\n    {\n        if (numberSides &lt;= 0)\n            throw new ArgumentOutOfRangeException(&quot;numberSides&quot;);\n\n        // Create a byte array to hold the random value.\n        byte[] randomNumber = new byte[1];\n        do\n        {\n            // Fill the array with a random value.\n            rngCsp.GetBytes(randomNumber);\n        }\n        while (!IsFairRoll(randomNumber[0], numberSides));\n        // Return the random number mod the number\n        // of sides.  The possible values are zero-\n        // based, so we add one.\n        return (byte)((randomNumber[0] % numberSides) + 1);\n    }\n\n    private static bool IsFairRoll(byte roll, byte numSides)\n    {\n        // There are MaxValue / numSides full sets of numbers that can come up\n        // in a single byte.  For instance, if we have a 6 sided die, there are\n        // 42 full sets of 1-6 that come up.  The 43rd set is incomplete.\n        int fullSetsOfValues = Byte.MaxValue / numSides;\n\n        // If the roll is within this range of fair values, then we let it continue.\n        // In the 6 sided die case, a roll between 0 and 251 is allowed.  (We use\n        // &lt; rather than &lt;= since the = portion allows through an extra 0 value).\n        // 252 through 255 would provide an extra 0, 1, 2, 3 so they are not fair\n        // to use.\n        return roll &lt; numSides * fullSetsOfValues;\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RNGCryptoServiceProvider()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public RNGCryptoServiceProvider ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RNGCryptoServiceProvider(Byte[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public RNGCryptoServiceProvider (byte[] rgb);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgb</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A byte array. This value is ignored.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not directly initialize the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> class.  Calling this method is equivalent to calling the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider#System_Security_Cryptography_RNGCryptoServiceProvider__ctor_\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> constructor and passing <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor_System_Security_Cryptography_CspParameters_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RNGCryptoServiceProvider(CspParameters)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> class with the specified parameters.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public RNGCryptoServiceProvider (System.Security.Cryptography.CspParameters cspParams);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cspParams</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cspparameters\" data-linktype=\"relative-path\">CspParameters</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The parameters to pass to the cryptographic service provider (CSP).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_RNGCryptoServiceProvider__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RNGCryptoServiceProvider(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public RNGCryptoServiceProvider (string str);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>str</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string input. This parameter is ignored.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not directly initialize the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> class.  Calling this method is equivalent to calling the <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider#System_Security_Cryptography_RNGCryptoServiceProvider__ctor_\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a> constructor and passing <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_RNGCryptoServiceProvider_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_RNGCryptoServiceProvider_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_RNGCryptoServiceProvider_GetBytes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_RNGCryptoServiceProvider_GetBytes_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetBytes(Byte[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills an array of bytes with a cryptographically strong sequence of random values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void GetBytes (byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The array to fill with a cryptographically strong sequence of random values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The cryptographic service provider (CSP) cannot be acquired.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>data</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The length of the byte array determines how many cryptographically strong random bytes are produced.  </p>\n<p> This method is thread safe.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_RNGCryptoServiceProvider_GetNonZeroBytes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_RNGCryptoServiceProvider_GetNonZeroBytes_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetNonZeroBytes(Byte[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills an array of bytes with a cryptographically strong sequence of random nonzero values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void GetNonZeroBytes (byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The array to fill with a cryptographically strong sequence of random nonzero values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The cryptographic service provider (CSP) cannot be acquired.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>data</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The length of the byte array determines how many cryptographically strong random nonzero bytes are produced.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \t<h2 class=\"accented\">Thread Safety</h2>\r\n  \tThis type is thread safe.\r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.RNGCryptoServiceProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RNGCryptoServiceProvider\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RNGCryptoServiceProvider..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RNGCryptoServiceProvider.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"bb34d89c-4ca3-b4ff-bb20-65e689cc62f8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Implements a cryptographic Random Number Generator (RNG) using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.RNGCryptoServiceProvider\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.RNGCryptoServiceProvider.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.RNGCryptoServiceProvider","System.Security.Cryptography.RNGCryptoServiceProvider..ctor","System.Security.Cryptography.RNGCryptoServiceProvider.Dispose","System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes","System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.RNGCryptoServiceProvider","System::Security::Cryptography::RNGCryptoServiceProvider","System.Security.Cryptography.RNGCryptoServiceProvider.#ctor","System::Security::Cryptography::RNGCryptoServiceProvider::#ctor","System.Security.Cryptography.RNGCryptoServiceProvider.Dispose","System::Security::Cryptography::RNGCryptoServiceProvider::Dispose","System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes","System::Security::Cryptography::RNGCryptoServiceProvider::GetBytes","System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes","System::Security::Cryptography::RNGCryptoServiceProvider::GetNonZeroBytes"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"bb34d89c-4ca3-b4ff-bb20-65e689cc62f8","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography/RNGCryptoServiceProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RNGCryptoServiceProvider class | Microsoft Docs","_op_ogTitle":"RNGCryptoServiceProvider class","description":"Implements a cryptographic Random Number Generator (RNG) using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.RNGCryptoServiceProvider","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.rngcryptoserviceprovider","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.rngcryptoserviceprovider","fileRelativePath":"api/System.Security.Cryptography.RNGCryptoServiceProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}