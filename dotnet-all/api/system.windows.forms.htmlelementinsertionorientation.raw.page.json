{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">HtmlElementInsertionOrientation</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines values that describe where to insert a new element when using <span class=\"xref\">stem.Windows.Forms.HtmlElement.InsertAdjacentElement*</span>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum HtmlElementInsertionOrientation</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">HtmlElementInsertionOrientation</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example inserts a <code>DIV</code> element into the top of every page that users view outside of the ADatum.com server. The example requires that your form contains a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control named <code>WebBrowser1</code>. Your example must also import the namespace <a class=\"xref\" href=\"system.text.regularexpressions\" data-linktype=\"relative-path\">System.Text.RegularExpressions</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlElement#9\">Private Sub AddDivMessage()\n    Dim CurrentUri As New Uri(WebBrowser1.Url.ToString())\n    Dim HostName As String\n\n    &#39; Ensure we have a host name, and not just an IP, against which to test.\n    If (Not CurrentUri.HostNameType = UriHostNameType.Dns) Then\n        Dim Permit As New DnsPermission(System.Security.Permissions.PermissionState.Unrestricted)\n        Permit.Assert()\n\n        Dim HostEntry As IPHostEntry = System.Net.Dns.GetHostEntry(CurrentUri.Host)\n        HostName = HostEntry.HostName\n    Else\n        HostName = CurrentUri.Host\n    End If\n\n    If (Not HostName.Contains(&quot;adatum.com&quot;)) Then\n        AddTopPageMessage(&quot;You are viewing a web site other than ADatum.com. &quot; &amp; _\n            &quot;Please exercise caution, and ensure your web surfing complies with all &quot; &amp; _\n            &quot;corporate regulations as laid out in the company handbook.&quot;)\n    End If\nEnd Sub\n\nPrivate Sub AddTopPageMessage(ByVal Message As String)\n    If (WebBrowser1.Document IsNot Nothing) Then\n        With WebBrowser1.Document\n            &#39; Do not insert the warning again if it already exists. \n            Dim ReturnedElems As HtmlElementCollection = .All.GetElementsByName(&quot;ADatumWarningDiv&quot;)\n            If (Not (ReturnedElems Is Nothing) And (ReturnedElems.Count &gt; 0)) Then\n                Exit Sub\n            End If\n\n            Dim DivElem As HtmlElement = .CreateElement(&quot;DIV&quot;)\n            DivElem.Name = &quot;ADatumWarningDiv&quot;\n            DivElem.Style = &quot;background-color:black;color:white;font-weight:bold;width:100%;&quot;\n            DivElem.InnerText = Message\n\n            DivElem = .Body.InsertAdjacentElement(HtmlElementInsertionOrientation.AfterBegin, DivElem)\n        End With\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlElement#9\">public void AddDivMessage()\n{\n\tUri currentUri = new Uri(webBrowser1.Url.ToString());\n\tString hostName = null;\n\n\t// Ensure we have a host name, and not just an IP, against which to test.\n\tif (!(currentUri.HostNameType == UriHostNameType.Dns))\n\t{\n\t\tDnsPermission permit = new DnsPermission(System.Security.Permissions.PermissionState.Unrestricted);\n\t\tpermit.Assert();\n\n\t\tIPHostEntry hostEntry = System.Net.Dns.GetHostEntry(currentUri.Host);\n\t\thostName = hostEntry.HostName;\n\t} else {\n\t\thostName = currentUri.Host;\n\t}\n\n\tif (!hostName.Contains(&quot;adatum.com&quot;))\n\t{\n\t\tAddTopPageMessage(&quot;You are viewing a web site other than ADatum.com. &quot; +\n\t\t\t&quot;Please exercise caution, and ensure your Web surfing complies with all &quot; +\n\t\t\t&quot;corporate regulations as laid out in the company handbook.&quot;);\n\t}\n}\n\nprivate void AddTopPageMessage(String message)\n{\n\tif (webBrowser1.Document != null) \n\t{\n\t\tHtmlDocument doc = webBrowser1.Document;\n\n              // Do not insert the warning again if it already exists. \n              HtmlElementCollection returnedElems = doc.All.GetElementsByName(&quot;ADatumWarningDiv&quot;);\n              if ((returnedElems != null) &amp;&amp; (returnedElems.Count &gt; 0)) \n\t\t{\n                  return;\n\t\t}\n\n              HtmlElement divElem = doc.CreateElement(&quot;DIV&quot;);\n              divElem.Name = &quot;ADatumWarningDiv&quot;;\n              divElem.Style = &quot;background-color:black;color:white;font-weight:bold;width:100%;&quot;;\n              divElem.InnerText = message;\n\n              divElem = doc.Body.InsertAdjacentElement(HtmlElementInsertionOrientation.AfterBegin, divElem);\n\t}\n}\n</code></pre>\r\n  \r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Windows_Forms_HtmlElementInsertionOrientation_AfterBegin\">\r\n      \t\t\t<span class=\"lang-csharp\">AfterBegin</span>\r\n      \t</td>\r\n      \t<td><p>Insert the element after the current element, but before all other content in the current element.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_HtmlElementInsertionOrientation_AfterEnd\">\r\n      \t\t\t<span class=\"lang-csharp\">AfterEnd</span>\r\n      \t</td>\r\n      \t<td><p>Insert the element after the current element, but after all other content in the current element.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_HtmlElementInsertionOrientation_BeforeBegin\">\r\n      \t\t\t<span class=\"lang-csharp\">BeforeBegin</span>\r\n      \t</td>\r\n      \t<td><p>Insert the element before the current element.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_HtmlElementInsertionOrientation_BeforeEnd\">\r\n      \t\t\t<span class=\"lang-csharp\">BeforeEnd</span>\r\n      \t</td>\r\n      \t<td><p>Insert the element after the current element.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.HtmlElementInsertionOrientation.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementInsertionOrientation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementInsertionOrientation.AfterEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementInsertionOrientation.BeforeBegin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementInsertionOrientation.BeforeEnd\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"d8bd0923-0369-0d66-ae47-0a502ea27efe\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines values that describe where to insert a new element when using .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.HtmlElementInsertionOrientation\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.HtmlElementInsertionOrientation.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.HtmlElementInsertionOrientation","System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin","System.Windows.Forms.HtmlElementInsertionOrientation.AfterEnd","System.Windows.Forms.HtmlElementInsertionOrientation.BeforeBegin","System.Windows.Forms.HtmlElementInsertionOrientation.BeforeEnd"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.HtmlElementInsertionOrientation","System::Windows::Forms::HtmlElementInsertionOrientation","System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin","System::Windows::Forms::HtmlElementInsertionOrientation::AfterBegin","System.Windows.Forms.HtmlElementInsertionOrientation.AfterEnd","System::Windows::Forms::HtmlElementInsertionOrientation::AfterEnd","System.Windows.Forms.HtmlElementInsertionOrientation.BeforeBegin","System::Windows::Forms::HtmlElementInsertionOrientation::BeforeBegin","System.Windows.Forms.HtmlElementInsertionOrientation.BeforeEnd","System::Windows::Forms::HtmlElementInsertionOrientation::BeforeEnd"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"d8bd0923-0369-0d66-ae47-0a502ea27efe","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/HtmlElementInsertionOrientation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HtmlElementInsertionOrientation enum | Microsoft Docs","_op_ogTitle":"HtmlElementInsertionOrientation enum","description":"Defines values that describe where to insert a new element when using .\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.HtmlElementInsertionOrientation","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.htmlelementinsertionorientation","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.htmlelementinsertionorientation","fileRelativePath":"api/System.Windows.Forms.HtmlElementInsertionOrientation.html"},"themesRelativePathToOutputRoot":"_themes/"}