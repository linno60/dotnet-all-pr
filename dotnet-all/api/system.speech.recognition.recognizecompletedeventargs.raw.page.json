{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">RecognizeCompletedEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <code>RecognizeCompleted</code> event raised by a <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine\" data-linktype=\"relative-path\">SpeechRecognitionEngine</a> or a <a class=\"xref\" href=\"system.speech.recognition.speechrecognizer\" data-linktype=\"relative-path\">SpeechRecognizer</a> object.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class RecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a></span></div><span class=\"lang-csharp\">RecognizeCompletedEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled\" data-linktype=\"relative-path\">Cancelled</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error\" data-linktype=\"relative-path\">Error</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_RaiseExceptionIfNecessary\" data-linktype=\"relative-path\">RaiseExceptionIfNecessary()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState\" data-linktype=\"relative-path\">UserState</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example performs asynchronous speech recognition on a speech recognition grammar, using the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizeAsync_\" data-linktype=\"relative-path\">RecognizeAsync</a> method with the in-process recognizer. The example uses <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> and <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> objects to create the speech recognition grammar before building it into a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> object. A handler for the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizeCompleted\" data-linktype=\"relative-path\">System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted</a> event outputs information about the recognition operation to the console.  </p>\n<pre><code>using System;  \nusing System.Speech.Recognition;  \n\nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    private static SpeechRecognitionEngine recognizer;  \n    public static void Main(string[] args)  \n    {  \n\n      // Initialize a SpeechRecognitionEngine object and set its input.  \n      recognizer = new SpeechRecognitionEngine(new System.Globalization.CultureInfo(&quot;en-US&quot;));  \n      recognizer.SetInputToDefaultAudioDevice();  \n\n      // Configure recognition parameters.  \n      recognizer.InitialSilenceTimeout = TimeSpan.FromSeconds(5.0);  \n      recognizer.BabbleTimeout = TimeSpan.FromSeconds(3.0);  \n      recognizer.EndSilenceTimeout = TimeSpan.FromSeconds(1.0);  \n      recognizer.EndSilenceTimeoutAmbiguous = TimeSpan.FromSeconds(1.0);  \n\n      // Add a handler for the LoadGrammarCompleted event.  \n      recognizer.LoadGrammarCompleted +=  \n        new EventHandler&lt;LoadGrammarCompletedEventArgs&gt;(recognizer_LoadGrammarCompleted);  \n\n      // Add a handler for the RecognizeCompleted event.  \n      recognizer.RecognizeCompleted +=   \n        new EventHandler&lt;RecognizeCompletedEventArgs&gt;(recognizer_RecognizeCompleted);  \n\n      // Create a speech recognition grammar and build it into a Grammar object.  \n      Choices bankingMenu = new Choices(new string[]   \n      { &quot;Access accounts&quot;, &quot;Transfer funds&quot;, &quot;Pay bills&quot;, &quot;Get loan balance&quot; });  \n      GrammarBuilder banking = new GrammarBuilder(bankingMenu);  \n      Grammar bankGrammar = new Grammar(banking);  \n      bankGrammar.Name = &quot;Banking Menu&quot;;  \n\n      // Load the Grammar objects to the recognizer.  \n      recognizer.LoadGrammarAsync(bankGrammar);  \n\n      // Start asynchronous, continuous recognition.  \n      recognizer.RecognizeAsync();  \n\n      // Keep the console window open.  \n      Console.ReadLine();  \n    }  \n\n    // Handle the RecognizeCompleted event.  \n    static void recognizer_RecognizeCompleted(object sender, RecognizeCompletedEventArgs e)  \n    {  \n      if (e.Error != null)  \n      {  \n        Console.WriteLine(  \n          &quot;RecognizeCompleted, error occurred during recognition: {0}&quot;, e.Error);  \n        return;  \n      }  \n\n      if (e.InitialSilenceTimeout || e.BabbleTimeout)  \n      {  \n        Console.WriteLine(  \n          &quot;RecognizeCompleted: BabbleTimeout({0}), InitialSilenceTimeout({1}).&quot;,  \n          e.BabbleTimeout, e.InitialSilenceTimeout);  \n        return;  \n      }  \n\n      if (e.InputStreamEnded)  \n      {  \n        Console.WriteLine(  \n          &quot;RecognizeCompleted: AudioPosition({0}), InputStreamEnded({1}).&quot;,  \n          e.AudioPosition, e.InputStreamEnded);  \n      }  \n\n      if (e.Result != null)  \n      {  \n        Console.WriteLine(  \n          &quot;RecognizeCompleted: Grammar ({0}), Text ({1}), Confidence ({2}), AudioPosition ({3}).&quot;,  \n          e.Result.Grammar.Name, e.Result.Text, e.Result.Confidence, e.AudioPosition);  \n      }  \n\n      else  \n      {  \n        Console.WriteLine(&quot;RecognizeCompleted: No result.&quot;);  \n      }   \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    // Handle the LoadGrammarCompleted event.   \n    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  \n    {  \n      string grammarName = e.Grammar.Name;  \n      bool grammarLoaded = e.Grammar.Loaded;  \n      bool grammarEnabled = e.Grammar.Enabled;  \n\n      if (e.Error != null)  \n      {  \n        Console.WriteLine(&quot;LoadGrammar for {0} failed with a {1}.&quot;,  \n        grammarName, e.Error.GetType().Name);  \n\n        // Add exception handling code here.  \n      }  \n\n      Console.WriteLine(&quot;Grammar {0} {1} loaded and {2} enabled.&quot;, grammarName,   \n        (grammarLoaded) ? &quot;is&quot; : &quot;is not&quot;, (grammarEnabled) ? &quot;is&quot; : &quot;is not&quot;);  \n    }  \n  }            \n}  \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>An instance of <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizeCompleted\" data-linktype=\"relative-path\">RecognizeCompleted</a> is created when the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine\" data-linktype=\"relative-path\">SpeechRecognitionEngine</a> or the <a class=\"xref\" href=\"system.speech.recognition.speechrecognizer\" data-linktype=\"relative-path\">SpeechRecognizer</a> object raises its <code>SpeechRecognized</code> event after completing a <code>RecognizeAsync</code> operation. For more information about speech recognition events, see <a href=\"http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482\" data-linktype=\"external\">Using Speech Recognition Events</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_AudioPosition_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_AudioPosition\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AudioPosition</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the location in the input device&#39;s audio stream associated with the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizeCompleted\" data-linktype=\"relative-path\">RecognizeCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TimeSpan AudioPosition { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The location in the input device&#39;s audio stream associated with the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizeCompleted\" data-linktype=\"relative-path\">RecognizeCompleted</a> event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property references the position at the beginning of the recognized phrase in the input device&#39;s generated audio stream. By contrast, the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizerAudioPosition_\" data-linktype=\"relative-path\">RecognizerAudioPosition</a> property references the recognizer&#39;s position within its audio input. These positions can be different. For more information, see <a href=\"http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482\" data-linktype=\"external\">Using Speech Recognition Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_BabbleTimeout_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_BabbleTimeout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BabbleTimeout</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether a babble timeout generated the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizeCompleted\" data-linktype=\"relative-path\">RecognizeCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool BabbleTimeout { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine\" data-linktype=\"relative-path\">SpeechRecognitionEngine</a> has detected only background noise for longer than was specified by its <span class=\"xref\">stem.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout*</span> property; otherwise <code>false.</code></p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_InitialSilenceTimeout_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_InitialSilenceTimeout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InitialSilenceTimeout</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether an initial silence timeout generated the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_RecognizeCompleted\" data-linktype=\"relative-path\">RecognizeCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool InitialSilenceTimeout { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine\" data-linktype=\"relative-path\">SpeechRecognitionEngine</a> has detected only silence for a longer time period than was specified by its <span class=\"xref\">stem.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout*</span> property; otherwise <code>false.</code></p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_InputStreamEnded_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_InputStreamEnded\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputStreamEnded</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the input stream ended.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool InputStreamEnded { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the recognizer no longer has audio input; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The recognizer sets this property to <code>true</code> when a file provides the input stream for the recognizer and the end of the file is reached. The end of the input stream can coincide with a successful recognition operation. For more information about using a file as the input stream, see the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_SetInputToAudioStream_\" data-linktype=\"relative-path\">SetInputToAudioStream</a> and <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_SetInputToWaveFile_\" data-linktype=\"relative-path\">SetInputToWaveFile</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_Result_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Speech_Recognition_RecognizeCompletedEventArgs_Result\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Result</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the recognition result.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Speech.Recognition.RecognitionResult Result { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.recognition.recognitionresult\" data-linktype=\"relative-path\">RecognitionResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The recognition result if the recognition operation succeeded; otherwise, <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.speech.recognition.recognitionresult\" data-linktype=\"relative-path\">RecognitionResult</a> object derives from <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a> and contains full information about a phrase returned by a recognition operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Speech.Recognition.RecognizeCompletedEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizeCompletedEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizeCompletedEventArgs.Result\">\r\n<meta name=\"APILocation\" content=\"System.Speech.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"2aeb5607-64f8-fe8a-8d69-fc21fb279f55\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the RecognizeCompleted event raised by a  or a  object.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.speech.recognition/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Speech.Recognition.RecognizeCompletedEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Speech.Recognition.RecognizeCompletedEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Speech.Recognition.RecognizeCompletedEventArgs","System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition","System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout","System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout","System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded","System.Speech.Recognition.RecognizeCompletedEventArgs.Result"],"api_location":["System.Speech.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Speech.Recognition.RecognizeCompletedEventArgs","System::Speech::Recognition::RecognizeCompletedEventArgs","System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition","System::Speech::Recognition::RecognizeCompletedEventArgs::AudioPosition","System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout","System::Speech::Recognition::RecognizeCompletedEventArgs::BabbleTimeout","System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout","System::Speech::Recognition::RecognizeCompletedEventArgs::InitialSilenceTimeout","System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded","System::Speech::Recognition::RecognizeCompletedEventArgs::InputStreamEnded","System.Speech.Recognition.RecognizeCompletedEventArgs.Result","System::Speech::Recognition::RecognizeCompletedEventArgs::Result"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"2aeb5607-64f8-fe8a-8d69-fc21fb279f55","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Speech.Recognition/RecognizeCompletedEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RecognizeCompletedEventArgs class | Microsoft Docs","_op_ogTitle":"RecognizeCompletedEventArgs class","description":"Provides data for the RecognizeCompleted event raised by a  or a  object.\n","toc_asset_id":"api/_splitted/System.Speech.Recognition/toc.json","toc_rel":"_splitted/System.Speech.Recognition/toc.json","source_url":"","ms.assetid":"System.Speech.Recognition.RecognizeCompletedEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.speech.recognition.recognizecompletedeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.speech.recognition.recognizecompletedeventargs","fileRelativePath":"api/System.Speech.Recognition.RecognizeCompletedEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}