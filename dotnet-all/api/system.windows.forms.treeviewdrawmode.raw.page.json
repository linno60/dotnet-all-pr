{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">TreeViewDrawMode</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines constants that represent the ways a <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> can be drawn.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum TreeViewDrawMode</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">TreeViewDrawMode</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to customize a <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> control using its owner-draw capability. The <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <a class=\"xref\" href=\"system.windows.forms.treenode#System_Windows_Forms_TreeNode_Tag_\" data-linktype=\"relative-path\">Tag</a> property. The <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> control also uses custom colors, including a custom highlight color.  </p>\n<p> You can customize most of the <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_DrawNode\" data-linktype=\"relative-path\">System.Windows.Forms.TreeView.DrawNode</a> reference topic.  </p>\n<pre><code class=\"lang-vb\" name=\"TreeViewOwnerDraw#2\">Public Sub New()\n\n    &#39; Create and initialize the TreeView control.\n    myTreeView = New TreeView()\n    myTreeView.Dock = DockStyle.Fill\n    myTreeView.BackColor = Color.Tan\n    myTreeView.CheckBoxes = True\n    \n    &#39; Add nodes to the TreeView control.\n    Dim node As TreeNode\n    Dim x As Integer\n    For x = 1 To 3\n\n        &#39; Add a root node to the TreeView control.\n        node = myTreeView.Nodes.Add(String.Format(&quot;Task {0}&quot;, x))\n        Dim y As Integer\n        For y = 1 To 3 \n\n            &#39; Add a child node to the root node.\n            node.Nodes.Add(String.Format(&quot;Subtask {0}&quot;, y))\n        Next y\n    Next x\n    myTreeView.ExpandAll()\n    \n    &#39; Add tags containing alert messages to a few nodes \n    &#39; and set the node background color to highlight them.\n    myTreeView.Nodes(1).Nodes(0).Tag = &quot;urgent!&quot;\n    myTreeView.Nodes(1).Nodes(0).BackColor = Color.Yellow\n    myTreeView.SelectedNode = myTreeView.Nodes(1).Nodes(0)\n    myTreeView.Nodes(2).Nodes(1).Tag = &quot;urgent!&quot;\n    myTreeView.Nodes(2).Nodes(1).BackColor = Color.Yellow\n    \n    &#39; Configure the TreeView control for owner-draw.\n    myTreeView.DrawMode = TreeViewDrawMode.OwnerDrawText\n\n    &#39; Add a handler for the MouseDown event so that a node can be \n    &#39; selected by clicking the tag text as well as the node text.\n    AddHandler myTreeView.MouseDown, AddressOf myTreeView_MouseDown\n    \n    &#39; Initialize the form and add the TreeView control to it.\n    Me.ClientSize = New Size(292, 273)\n    Me.Controls.Add(myTreeView)\nEnd Sub &#39;New\n</code></pre><pre><code class=\"lang-cpp\" name=\"TreeViewOwnerDraw#2\">TreeViewOwnerDraw()\n{\n   tagFont = gcnew System::Drawing::Font( &quot;Helvetica&quot;,8,FontStyle::Bold );\n\n   // Create and initialize the TreeView control.\n   myTreeView = gcnew TreeView;\n   myTreeView-&gt;Dock = DockStyle::Fill;\n   myTreeView-&gt;BackColor = Color::Tan;\n   myTreeView-&gt;CheckBoxes = true;\n   \n   // Add nodes to the TreeView control.\n   TreeNode^ node;\n   for ( int x = 1; x &lt; 4; ++x )\n   {\n      // Add a root node to the TreeView control.\n      node = myTreeView-&gt;Nodes-&gt;Add( String::Format( &quot;Task {0}&quot;, x ) );\n      for ( int y = 1; y &lt; 4; ++y )\n      {\n         // Add a child node to the root node.\n         node-&gt;Nodes-&gt;Add( String::Format( &quot;Subtask {0}&quot;, y ) );\n      }\n   }\n   myTreeView-&gt;ExpandAll();\n   \n   // Add tags containing alert messages to a few nodes \n   // and set the node background color to highlight them.\n   myTreeView-&gt;Nodes[ 1 ]-&gt;Nodes[ 0 ]-&gt;Tag = &quot;urgent!&quot;;\n   myTreeView-&gt;Nodes[ 1 ]-&gt;Nodes[ 0 ]-&gt;BackColor = Color::Yellow;\n   myTreeView-&gt;SelectedNode = myTreeView-&gt;Nodes[ 1 ]-&gt;Nodes[ 0 ];\n   myTreeView-&gt;Nodes[ 2 ]-&gt;Nodes[ 1 ]-&gt;Tag = &quot;urgent!&quot;;\n   myTreeView-&gt;Nodes[ 2 ]-&gt;Nodes[ 1 ]-&gt;BackColor = Color::Yellow;\n   \n   // Configure the TreeView control for owner-draw and add\n   // a handler for the DrawNode event.\n   myTreeView-&gt;DrawMode = TreeViewDrawMode::OwnerDrawText;\n   myTreeView-&gt;DrawNode += gcnew DrawTreeNodeEventHandler( this, &amp;TreeViewOwnerDraw::myTreeView_DrawNode );\n   \n   // Add a handler for the MouseDown event so that a node can be \n   // selected by clicking the tag text as well as the node text.\n   myTreeView-&gt;MouseDown += gcnew MouseEventHandler( this, &amp;TreeViewOwnerDraw::myTreeView_MouseDown );\n   \n   // Initialize the form and add the TreeView control to it.\n   this-&gt;ClientSize = System::Drawing::Size( 292, 273 );\n   this-&gt;Controls-&gt;Add( myTreeView );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"TreeViewOwnerDraw#2\">public TreeViewOwnerDraw()\n{\n    // Create and initialize the TreeView control.\n    myTreeView = new TreeView();\n    myTreeView.Dock = DockStyle.Fill;\n    myTreeView.BackColor = Color.Tan;\n    myTreeView.CheckBoxes = true;\n\n    // Add nodes to the TreeView control.\n    TreeNode node;\n    for (int x = 1; x &lt; 4; ++x)\n    {\n        // Add a root node to the TreeView control.\n        node = myTreeView.Nodes.Add(String.Format(&quot;Task {0}&quot;, x));\n        for (int y = 1; y &lt; 4; ++y)\n        {\n            // Add a child node to the root node.\n            node.Nodes.Add(String.Format(&quot;Subtask {0}&quot;, y));\n        }\n    }\n    myTreeView.ExpandAll();\n\n    // Add tags containing alert messages to a few nodes \n    // and set the node background color to highlight them.\n    myTreeView.Nodes[1].Nodes[0].Tag = &quot;urgent!&quot;;\n    myTreeView.Nodes[1].Nodes[0].BackColor = Color.Yellow;\n    myTreeView.SelectedNode = myTreeView.Nodes[1].Nodes[0];\n    myTreeView.Nodes[2].Nodes[1].Tag = &quot;urgent!&quot;;\n    myTreeView.Nodes[2].Nodes[1].BackColor = Color.Yellow;\n\n    // Configure the TreeView control for owner-draw and add\n    // a handler for the DrawNode event.\n    myTreeView.DrawMode = TreeViewDrawMode.OwnerDrawText;\n    myTreeView.DrawNode += \n        new DrawTreeNodeEventHandler(myTreeView_DrawNode);\n\n    // Add a handler for the MouseDown event so that a node can be \n    // selected by clicking the tag text as well as the node text.\n    myTreeView.MouseDown += new MouseEventHandler(myTreeView_MouseDown);\n\n    // Initialize the form and add the TreeView control to it.\n    this.ClientSize = new Size(292, 273);\n    this.Controls.Add(myTreeView);\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This enumeration is used by the <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_DrawMode_\" data-linktype=\"relative-path\">DrawMode</a> property to indicate whether the nodes or node-labels of a <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> are owner-drawn. For more information, see the <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_DrawNode\" data-linktype=\"relative-path\">System.Windows.Forms.TreeView.DrawNode</a> event.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Windows_Forms_TreeViewDrawMode_Normal\">\r\n      \t\t\t<span class=\"lang-csharp\">Normal</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> is drawn by the operating system.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_TreeViewDrawMode_OwnerDrawAll\">\r\n      \t\t\t<span class=\"lang-csharp\">OwnerDrawAll</span>\r\n      \t</td>\r\n      \t<td><p>All elements of a <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> node are drawn manually, including icons, checkboxes, plus and minus signs, and lines connecting the nodes.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_TreeViewDrawMode_OwnerDrawText\">\r\n      \t\t\t<span class=\"lang-csharp\">OwnerDrawText</span>\r\n      \t</td>\r\n      \t<td><p>The label portion of the <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> nodes are drawn manually. Other node elements are drawn by the operating system, including icons, checkboxes, plus and minus signs, and lines connecting the nodes.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.TreeViewDrawMode.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewDrawMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewDrawMode.Normal\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewDrawMode.OwnerDrawText\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"998a35e9-d040-4483-ec02-5a82253fc62d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines constants that represent the ways a  can be drawn.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.TreeViewDrawMode\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.TreeViewDrawMode.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.TreeViewDrawMode","System.Windows.Forms.TreeViewDrawMode.Normal","System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll","System.Windows.Forms.TreeViewDrawMode.OwnerDrawText"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.TreeViewDrawMode","System::Windows::Forms::TreeViewDrawMode","System.Windows.Forms.TreeViewDrawMode.Normal","System::Windows::Forms::TreeViewDrawMode::Normal","System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll","System::Windows::Forms::TreeViewDrawMode::OwnerDrawAll","System.Windows.Forms.TreeViewDrawMode.OwnerDrawText","System::Windows::Forms::TreeViewDrawMode::OwnerDrawText"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"998a35e9-d040-4483-ec02-5a82253fc62d","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/TreeViewDrawMode.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TreeViewDrawMode enum | Microsoft Docs","_op_ogTitle":"TreeViewDrawMode enum","description":"Defines constants that represent the ways a  can be drawn.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.TreeViewDrawMode","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.treeviewdrawmode","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.treeviewdrawmode","fileRelativePath":"api/System.Windows.Forms.TreeViewDrawMode.html"},"themesRelativePathToOutputRoot":"_themes/"}