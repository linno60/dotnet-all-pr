{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ApplicationActivator</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the base class for the activation of manifest-based assemblies.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class ApplicationActivator</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">ApplicationActivator</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to obtain an ApplicationActivator object from the current <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DomainManager_\" data-linktype=\"relative-path\">DomainManager</a> for a manifest-based application.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.Hosting.ApplicationActivator#1\">Imports System\nImports System.Collections\nImports System.Text\nImports System.Security.Policy\nImports System.Reflection\nImports System.Security\nImports System.Security.Permissions\nImports System.Runtime.Hosting\n\n\n\nPublic Class Program\n    Inherits MarshalByRefObject\n\n    &lt;SecurityPermission(SecurityAction.LinkDemand, ControlDomainPolicy:=True)&gt; _\n    Public Shared Sub Main(ByVal args() As String)\n        &#39; Get the AppDomainManager from the current domain.\n        Dim domainMgr As AppDomainManager = AppDomain.CurrentDomain.DomainManager\n        &#39; Get the ApplicationActivator from the AppDomainManager.\n        Dim appActivator As ApplicationActivator = domainMgr.ApplicationActivator\n        Console.WriteLine(&quot;Assembly qualified name from the application activator.&quot;)\n        Console.WriteLine(appActivator.GetType().AssemblyQualifiedName)\n        Dim ac As ActivationContext = AppDomain.CurrentDomain.ActivationContext\n        &#39; Get the ActivationArguments from the SetupInformation property of the domain.\n        Dim activationArgs As ActivationArguments = AppDomain.CurrentDomain.SetupInformation.ActivationArguments\n        &#39; Get the ActivationContext from the ActivationArguments.\n        Dim actContext As ActivationContext = activationArgs.ActivationContext\n        Console.WriteLine(&quot;The ActivationContext.Form property value is: &quot; + _\n         activationArgs.ActivationContext.Form.ToString())\n        Console.Read()\n\n    End Sub &#39;Main\n\n    &lt;SecurityPermission(SecurityAction.LinkDemand, ControlDomainPolicy:=True)&gt; _\n    Public Sub Run()\n        Main(New String() {})\n        Console.ReadLine()\n\n    End Sub &#39;Run\nEnd Class &#39;Program\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.Hosting.ApplicationActivator#1\">using System;\nusing System.Collections;\nusing System.Text;\nusing System.Security.Policy;\nusing System.Reflection;\nusing System.Security;\nusing System.Security.Permissions;\nusing System.Runtime.Hosting;\n\nnamespace ActivationContextSample\n{\n    public class Program : MarshalByRefObject\n    {\n        [SecurityPermission(SecurityAction.LinkDemand, ControlDomainPolicy=true)]\n        public static void Main(string[] args)\n        {\n            // Get the AppDomainManager from the current domain.\n            AppDomainManager domainMgr = AppDomain.CurrentDomain.DomainManager;\n            // Get the ApplicationActivator from the AppDomainManager.\n            ApplicationActivator appActivator = domainMgr.ApplicationActivator;\n            Console.WriteLine(&quot;Assembly qualified name from the application activator.&quot;);\n            Console.WriteLine(appActivator.GetType().AssemblyQualifiedName);\n            // Get the ActivationArguments from the SetupInformation property of the domain.\n            ActivationArguments activationArgs = AppDomain.CurrentDomain.SetupInformation.ActivationArguments;\n            // Get the ActivationContext from the ActivationArguments.\n            ActivationContext actContext = activationArgs.ActivationContext;\n            Console.WriteLine(&quot;The ActivationContext.Form property value is: &quot; +\n                activationArgs.ActivationContext.Form);\n            Console.Read();\n        }\n\t[SecurityPermission(SecurityAction.LinkDemand, ControlDomainPolicy=true)]\n        public void Run()\n        {\n            Main(new string[] { });\n            Console.ReadLine();\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>There is a single designated instance of the ApplicationActivator class in each <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> to which all activation calls are routed. The <a class=\"xref\" href=\"system.appdomainmanager\" data-linktype=\"relative-path\">AppDomainManager</a> for the current <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> can provide its own custom ApplicationActivator for this purpose. If a custom ApplicationActivator is not provided, an instance of the default ApplicationActivator is created.  </p>\n<p> The following steps describe the behavior of the default <a class=\"xref\" href=\"system.runtime.hosting.applicationactivator#System_Runtime_Hosting_ApplicationActivator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method implementation:  </p>\n<ol>\n<li><p>Checks if the <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> of the add-in to be activated matches the <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> of the current domain; if not, proceeds to step 2. Otherwise, executes the assembly and returns the result wrapped in an object handle.  </p>\n</li>\n<li><p>Activates the add-in in a new <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>. The following steps are taken to initialize a new <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> using the <a class=\"xref\" href=\"system.runtime.hosting.activationarguments\" data-linktype=\"relative-path\">ActivationArguments</a> for the add-in.  </p>\n<ol>\n<li><p>Creates a new <a class=\"xref\" href=\"system.appdomainsetup\" data-linktype=\"relative-path\">AppDomainSetup</a> object using an <a class=\"xref\" href=\"system.runtime.hosting.activationarguments\" data-linktype=\"relative-path\">ActivationArguments</a> object containing the activation context for the add-in.  </p>\n</li>\n<li><p>Calls the <a class=\"xref\" href=\"system.runtime.hosting.applicationactivator#System_Runtime_Hosting_ApplicationActivator_CreateInstanceHelper_\" data-linktype=\"relative-path\">CreateInstanceHelper</a> method to create a new domain using the <a class=\"xref\" href=\"system.appdomainsetup\" data-linktype=\"relative-path\">AppDomainSetup</a> object.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.runtime.hosting.applicationactivator#System_Runtime_Hosting_ApplicationActivator_CreateInstanceHelper_\" data-linktype=\"relative-path\">CreateInstanceHelper</a> method calls the <a class=\"xref\" href=\"system.security.hostsecuritymanager#System_Security_HostSecurityManager_DetermineApplicationTrust_\" data-linktype=\"relative-path\">DetermineApplicationTrust</a> method to acquire an <a class=\"xref\" href=\"system.security.policy.applicationtrust\" data-linktype=\"relative-path\">ApplicationTrust</a> object for the add-in. If the <a class=\"xref\" href=\"system.security.policy.applicationtrust#System_Security_Policy_ApplicationTrust_IsApplicationTrustedToRun_\" data-linktype=\"relative-path\">IsApplicationTrustedToRun</a> property returns <code>true</code>, the add-in is executed. If not, <a class=\"xref\" href=\"system.runtime.hosting.applicationactivator#System_Runtime_Hosting_ApplicationActivator_CreateInstanceHelper_\" data-linktype=\"relative-path\">CreateInstanceHelper</a> throws a <a class=\"xref\" href=\"system.security.policy.policyexception\" data-linktype=\"relative-path\">PolicyException</a> indicating that execution permission could not be acquired.  </p>\n</li>\n<li><p>If the add-in is trusted to run, then a new <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> is created and configured for the <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> of the add-in, and the add-in is loaded and executed.  </p>\n</li>\n<li><p>The result of the activation of the add-in is returned, wrapped in an object handle.  </p>\n</li>\n</ol>\n<p>A custom activator can tailor the activation of an add-in to a particular set of circumstances. For example, a custom activator could find an existing <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> to activate this add-in instead of creating a new domain every time.  </p>\n<p>The following steps describe the behavior of a custom ApplicationActivator that activates an add-in in an existing <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>:  </p>\n</li>\n<li><p>The custom activator finds a domain that has the same <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> as the add-in that is being activated.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> has never been seen before in the process, the custom activator creates a new <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> for this <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> by calling the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_CreateDomain_\" data-linktype=\"relative-path\">CreateDomain</a> method directly, or delegating this activity to the <a class=\"xref\" href=\"system.runtime.hosting.applicationactivator#System_Runtime_Hosting_ApplicationActivator_CreateInstanceHelper_\" data-linktype=\"relative-path\">CreateInstanceHelper</a> in the base class.  </p>\n</li>\n<li><p>If there is an existing domain with the same <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a>, then the activator can delegate the <a class=\"xref\" href=\"system.runtime.hosting.applicationactivator#System_Runtime_Hosting_ApplicationActivator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method call to the ApplicationActivator in the target domain. Note that this would be a cross-domain call to an ApplicationActivator that resides in the target <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>.</p>\n</li>\n</ol>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Hosting_ApplicationActivator__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplicationActivator()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.hosting.applicationactivator\" data-linktype=\"relative-path\">ApplicationActivator</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ApplicationActivator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Hosting_ApplicationActivator_CreateInstance_System_ActivationContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateInstance(ActivationContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an instance of the application to be activated, using the specified activation context.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>activationContext</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> that identifies the application to activate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>activationContext</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is intended for the manifest-based activation of applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Hosting_ApplicationActivator_CreateInstance_System_ActivationContext_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateInstance(ActivationContext,String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an instance of the application to be activated, using the specified activation context  and custom activation data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>activationContext</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a> that identifies the application to activate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>activationCustomData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Custom activation data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>activationContext</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Hosting_ApplicationActivator_CreateInstanceHelper_System_AppDomainSetup_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateInstanceHelper(AppDomainSetup)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an instance of an application using the specified <a class=\"xref\" href=\"system.appdomainsetup\" data-linktype=\"relative-path\">AppDomainSetup</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>adSetup</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.appdomainsetup\" data-linktype=\"relative-path\">AppDomainSetup</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.appdomainsetup\" data-linktype=\"relative-path\">AppDomainSetup</a> object whose <span class=\"xref\">stem.AppDomainSetup.ActivationArguments*</span> property identifies the application to activate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.AppDomainSetup.ActivationArguments*</span> property of <code>adSetup </code>is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policyexception\" data-linktype=\"relative-path\">PolicyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is intended for the manifest-based activation of applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Hosting.ApplicationActivator.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Hosting.ApplicationActivator\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Hosting.ApplicationActivator..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Hosting.ApplicationActivator.CreateInstance\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"31037ba0-be35-92cd-c204-b72874b9ffa9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the base class for the activation of manifest-based assemblies.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.hosting/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Hosting.ApplicationActivator\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Hosting.ApplicationActivator.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Hosting.ApplicationActivator","System.Runtime.Hosting.ApplicationActivator..ctor","System.Runtime.Hosting.ApplicationActivator.CreateInstance","System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Hosting.ApplicationActivator","System::Runtime::Hosting::ApplicationActivator","System.Runtime.Hosting.ApplicationActivator.#ctor","System::Runtime::Hosting::ApplicationActivator::#ctor","System.Runtime.Hosting.ApplicationActivator.CreateInstance","System::Runtime::Hosting::ApplicationActivator::CreateInstance","System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper","System::Runtime::Hosting::ApplicationActivator::CreateInstanceHelper"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"31037ba0-be35-92cd-c204-b72874b9ffa9","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ApplicationActivator class | Microsoft Docs","_op_ogTitle":"ApplicationActivator class","description":"Provides the base class for the activation of manifest-based assemblies.\n","toc_asset_id":"api/_splitted/System.Runtime.Hosting/toc.json","toc_rel":"_splitted/System.Runtime.Hosting/toc.json","source_url":"","ms.assetid":"System.Runtime.Hosting.ApplicationActivator","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.hosting.applicationactivator","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.hosting.applicationactivator","fileRelativePath":"api/System.Runtime.Hosting.ApplicationActivator.html"},"themesRelativePathToOutputRoot":"_themes/"}