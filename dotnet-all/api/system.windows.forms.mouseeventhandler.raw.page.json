{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">MouseEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <code>MouseDown</code>, <code>MouseUp</code>, or <code>MouseMove</code> event of a form, control, or other component.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void MouseEventHandler(object sender, MouseEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">System.Delegate</a></span></div><span class=\"lang-csharp\">MouseEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates using different mouse events to draw the path of the mouse on a <a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a>. A line segment is added to the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> for each <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> events that occur. To update the graphics, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method is called for the <a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a> on each <code>MouseDown</code> and <code>MouseUp</code> event. In addition, the graphic path is scrolled up or down when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a> event occurs. Additional mouse events, like <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <a class=\"xref\" href=\"system.windows.forms.systeminformation\" data-linktype=\"relative-path\">SystemInformation</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.MouseEvent#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\n\nnamespace MouseEvent\n{\n   public ref class Form1: public System::Windows::Forms::Form\n   {\n   private:\n      System::Windows::Forms::Panel^ panel1;\n      System::Windows::Forms::Label ^ label1;\n      System::Windows::Forms::Label ^ label2;\n      System::Windows::Forms::Label ^ label3;\n      System::Windows::Forms::Label ^ label4;\n      System::Windows::Forms::Label ^ label5;\n      System::Windows::Forms::Label ^ label6;\n      System::Windows::Forms::Label ^ label7;\n      System::Windows::Forms::Label ^ label8;\n      System::Windows::Forms::Label ^ label9;\n      System::Windows::Forms::Button^ clearButton;\n      System::Drawing::Drawing2D::GraphicsPath^ mousePath;\n      System::Windows::Forms::GroupBox^ groupBox1;\n      int fontSize;\n\n   public:\n      Form1()\n      {\n         fontSize = 20;\n         mousePath = gcnew System::Drawing::Drawing2D::GraphicsPath;\n         this-&gt;panel1 = gcnew System::Windows::Forms::Panel;\n         this-&gt;label1 = gcnew System::Windows::Forms::Label;\n         this-&gt;clearButton = gcnew System::Windows::Forms::Button;\n         this-&gt;label2 = gcnew System::Windows::Forms::Label;\n         this-&gt;label3 = gcnew System::Windows::Forms::Label;\n         this-&gt;label4 = gcnew System::Windows::Forms::Label;\n         this-&gt;label5 = gcnew System::Windows::Forms::Label;\n         this-&gt;label6 = gcnew System::Windows::Forms::Label;\n         this-&gt;label7 = gcnew System::Windows::Forms::Label;\n         this-&gt;label8 = gcnew System::Windows::Forms::Label;\n         this-&gt;label9 = gcnew System::Windows::Forms::Label;\n         this-&gt;groupBox1 = gcnew System::Windows::Forms::GroupBox;\n         \n         // Mouse Events Label\n         this-&gt;label1-&gt;Location = System::Drawing::Point( 24, 504 );\n         this-&gt;label1-&gt;Size = System::Drawing::Size( 392, 23 );\n         \n         // DoubleClickSize Label\n         this-&gt;label2-&gt;AutoSize = true;\n         this-&gt;label2-&gt;Location = System::Drawing::Point( 24, 48 );\n         this-&gt;label2-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // DoubleClickTime Label\n         this-&gt;label3-&gt;AutoSize = true;\n         this-&gt;label3-&gt;Location = System::Drawing::Point( 24, 72 );\n         this-&gt;label3-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // MousePresent Label\n         this-&gt;label4-&gt;AutoSize = true;\n         this-&gt;label4-&gt;Location = System::Drawing::Point( 24, 96 );\n         this-&gt;label4-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // MouseButtons Label\n         this-&gt;label5-&gt;AutoSize = true;\n         this-&gt;label5-&gt;Location = System::Drawing::Point( 24, 120 );\n         this-&gt;label5-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // MouseButtonsSwapped Label\n         this-&gt;label6-&gt;AutoSize = true;\n         this-&gt;label6-&gt;Location = System::Drawing::Point( 320, 48 );\n         this-&gt;label6-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // MouseWheelPresent Label\n         this-&gt;label7-&gt;AutoSize = true;\n         this-&gt;label7-&gt;Location = System::Drawing::Point( 320, 72 );\n         this-&gt;label7-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // MouseWheelScrollLines Label\n         this-&gt;label8-&gt;AutoSize = true;\n         this-&gt;label8-&gt;Location = System::Drawing::Point( 320, 96 );\n         this-&gt;label8-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // NativeMouseWheelSupport Label\n         this-&gt;label9-&gt;AutoSize = true;\n         this-&gt;label9-&gt;Location = System::Drawing::Point( 320, 120 );\n         this-&gt;label9-&gt;Size = System::Drawing::Size( 35, 13 );\n         \n         // Mouse Panel\n         this-&gt;panel1-&gt;Anchor = static_cast&lt;System::Windows::Forms::AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Left | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;panel1-&gt;BackColor = System::Drawing::SystemColors::ControlDark;\n         this-&gt;panel1-&gt;Location = System::Drawing::Point( 16, 160 );\n         this-&gt;panel1-&gt;Size = System::Drawing::Size( 664, 320 );\n         this-&gt;panel1-&gt;MouseUp += gcnew System::Windows::Forms::MouseEventHandler( this, &amp;Form1::panel1_MouseUp );\n         this-&gt;panel1-&gt;Paint += gcnew System::Windows::Forms::PaintEventHandler( this, &amp;Form1::panel1_Paint );\n         this-&gt;panel1-&gt;MouseEnter += gcnew System::EventHandler( this, &amp;Form1::panel1_MouseEnter );\n         this-&gt;panel1-&gt;MouseHover += gcnew System::EventHandler( this, &amp;Form1::panel1_MouseHover );\n         this-&gt;panel1-&gt;MouseMove += gcnew System::Windows::Forms::MouseEventHandler( this, &amp;Form1::panel1_MouseMove );\n         this-&gt;panel1-&gt;MouseLeave += gcnew System::EventHandler( this, &amp;Form1::panel1_MouseLeave );\n         this-&gt;panel1-&gt;MouseDown += gcnew System::Windows::Forms::MouseEventHandler( this, &amp;Form1::panel1_MouseDown );\n         this-&gt;panel1-&gt;MouseWheel += gcnew System::Windows::Forms::MouseEventHandler( this, &amp;Form1::panel1_MouseWheel );\n         \n         // Clear Button\n         this-&gt;clearButton-&gt;Anchor = static_cast&lt;System::Windows::Forms::AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;clearButton-&gt;Location = System::Drawing::Point( 592, 504 );\n         this-&gt;clearButton-&gt;TabIndex = 1;\n         this-&gt;clearButton-&gt;Text = &quot;Clear&quot;;\n         this-&gt;clearButton-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::clearButton_Click );\n         \n         // GroupBox\n         this-&gt;groupBox1-&gt;Anchor = static_cast&lt;System::Windows::Forms::AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Left | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;groupBox1-&gt;Location = System::Drawing::Point( 16, 24 );\n         this-&gt;groupBox1-&gt;Size = System::Drawing::Size( 664, 128 );\n         this-&gt;groupBox1-&gt;Text = &quot;System::Windows::Forms::SystemInformation&quot;;\n         \n         // Set up how the form should be displayed and add the controls to the form.\n         this-&gt;ClientSize = System::Drawing::Size( 696, 534 );\n         array&lt;System::Windows::Forms::Control^&gt;^temp0 = {this-&gt;label9,this-&gt;label8,this-&gt;label7,this-&gt;label6,this-&gt;label5,this-&gt;label4,this-&gt;label3,this-&gt;label2,this-&gt;clearButton,this-&gt;panel1,this-&gt;label1,this-&gt;groupBox1};\n         this-&gt;Controls-&gt;AddRange( temp0 );\n         this-&gt;Text = &quot;Mouse Event Example&quot;;\n         \n         // Displays information about the system mouse.\n         label2-&gt;Text = &quot;SystemInformation::DoubleClickSize: {0}&quot;,SystemInformation::DoubleClickSize;\n         label3-&gt;Text = &quot;SystemInformation::DoubleClickTime: {0}&quot;,SystemInformation::DoubleClickTime;\n         label4-&gt;Text = &quot;SystemInformation::MousePresent: {0}&quot;,SystemInformation::MousePresent;\n         label5-&gt;Text = &quot;SystemInformation::MouseButtons: {0}&quot;,SystemInformation::MouseButtons;\n         label6-&gt;Text = &quot;SystemInformation::MouseButtonsSwapped: {0}&quot;,SystemInformation::MouseButtonsSwapped;\n         label7-&gt;Text = &quot;SystemInformation::MouseWheelPresent: {0}&quot;,SystemInformation::MouseWheelPresent;\n         label8-&gt;Text = &quot;SystemInformation::MouseWheelScrollLines: {0}&quot;,SystemInformation::MouseWheelScrollLines;\n         label9-&gt;Text = &quot;SystemInformation::NativeMouseWheelSupport: {0}&quot;,SystemInformation::NativeMouseWheelSupport;\n      }\n\n   private:\n      void panel1_MouseDown( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n      {\n         // Update the mouse path with the mouse information\n         Point mouseDownLocation = Point(e-&gt;X,e-&gt;Y);\n         String^ eventString = nullptr;\n         switch ( e-&gt;Button )\n         {\n            case ::MouseButtons::Left:\n               eventString = &quot;L&quot;;\n               break;\n\n            case ::MouseButtons::Right:\n               eventString = &quot;R&quot;;\n               break;\n\n            case ::MouseButtons::Middle:\n               eventString = &quot;M&quot;;\n               break;\n\n            case ::MouseButtons::XButton1:\n               eventString = &quot;X1&quot;;\n               break;\n\n            case ::MouseButtons::XButton2:\n               eventString = &quot;X2&quot;;\n               break;\n\n            case ::MouseButtons::None:\n            default:\n               break;\n         }\n         if ( eventString != nullptr )\n         {\n            mousePath-&gt;AddString( eventString, FontFamily::GenericSerif, (int)FontStyle::Bold, (float)fontSize, mouseDownLocation, StringFormat::GenericDefault );\n         }\n         else\n         {\n            mousePath-&gt;AddLine( mouseDownLocation, mouseDownLocation );\n         }\n\n         panel1-&gt;Focus();\n         panel1-&gt;Invalidate();\n      }\n\n      void panel1_MouseEnter( Object^ sender, System::EventArgs^ /*e*/ )\n      {\n         \n         // Update the mouse event label to indicate the MouseEnter event occurred.\n         label1-&gt;Text = String::Concat( sender-&gt;GetType(), &quot;: MouseEnter&quot; );\n      }\n\n      void panel1_MouseHover( Object^ sender, System::EventArgs^ /*e*/ )\n      {\n         \n         // Update the mouse event label to indicate the MouseHover event occurred.\n         label1-&gt;Text = String::Concat( sender-&gt;GetType(), &quot;: MouseHover&quot; );\n      }\n\n      void panel1_MouseLeave( Object^ sender, System::EventArgs^ /*e*/ )\n      {\n         \n         // Update the mouse event label to indicate the MouseLeave event occurred.\n         label1-&gt;Text = String::Concat( sender-&gt;GetType(), &quot;: MouseLeave&quot; );\n      }\n\n      void panel1_MouseMove( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n      {\n         // Update the mouse path that is drawn onto the Panel.\n         int mouseX = e-&gt;X;\n         int mouseY = e-&gt;Y;\n         mousePath-&gt;AddLine( mouseX, mouseY, mouseX, mouseY );\n      }\n\n      void panel1_MouseWheel( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n      {\n         // Update the drawing based upon the mouse wheel scrolling.\n         int numberOfTextLinesToMove = e-&gt;Delta * SystemInformation::MouseWheelScrollLines / 120;\n         int numberOfPixelsToMove = numberOfTextLinesToMove * fontSize;\n         if ( numberOfPixelsToMove != 0 )\n         {\n            System::Drawing::Drawing2D::Matrix^ translateMatrix = gcnew System::Drawing::Drawing2D::Matrix;\n            translateMatrix-&gt;Translate( 0, (float)numberOfPixelsToMove );\n            mousePath-&gt;Transform(translateMatrix);\n         }\n\n         panel1-&gt;Invalidate();\n      }\n\n      void panel1_MouseUp( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n      {\n         Point mouseUpLocation = System::Drawing::Point( e-&gt;X, e-&gt;Y );\n         \n         // Show the number of clicks in the path graphic.\n         int numberOfClicks = e-&gt;Clicks;\n         mousePath-&gt;AddString( String::Format( &quot;   {0}&quot;, numberOfClicks ), FontFamily::GenericSerif, (int)FontStyle::Bold, (float)fontSize, mouseUpLocation, StringFormat::GenericDefault );\n         panel1-&gt;Invalidate();\n      }\n\n      void panel1_Paint( Object^ /*sender*/, System::Windows::Forms::PaintEventArgs^ e )\n      {\n         // Perform the painting of the Panel.\n         e-&gt;Graphics-&gt;DrawPath( System::Drawing::Pens::DarkRed, mousePath );\n      }\n\n      void clearButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         // Clear the Panel display.\n         delete mousePath;\n         mousePath = gcnew System::Drawing::Drawing2D::GraphicsPath;\n         panel1-&gt;Invalidate();\n      }\n   };\n}\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew MouseEvent::Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.MouseEvent#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\nnamespace MouseEvent\n{\n    public class Form1 : System.Windows.Forms.Form\n    {\n        private System.Windows.Forms.Panel panel1;\n        private System.Windows.Forms.Label label1;\n        private System.Windows.Forms.Label label2;\n        private System.Windows.Forms.Label label3;\n        private System.Windows.Forms.Label label4;\n        private System.Windows.Forms.Label label5;\n        private System.Windows.Forms.Label label6;\n        private System.Windows.Forms.Label label7;\n        private System.Windows.Forms.Label label8;\n        private System.Windows.Forms.Label label9;\n        private System.Windows.Forms.Button clearButton;\n        private System.Drawing.Drawing2D.GraphicsPath mousePath;\n        private System.Windows.Forms.GroupBox groupBox1;\n\n        private int fontSize = 20;        \n\n        [STAThread]\n        static void Main() \n        {\n            Application.Run(new Form1());\n        }\n\n        public Form1()\n        {            \n            mousePath = new System.Drawing.Drawing2D.GraphicsPath();\n\n            this.panel1 = new System.Windows.Forms.Panel();\n            this.label1 = new System.Windows.Forms.Label();\n            this.clearButton = new System.Windows.Forms.Button();\n            this.label2 = new System.Windows.Forms.Label();\n            this.label3 = new System.Windows.Forms.Label();\n            this.label4 = new System.Windows.Forms.Label();\n            this.label5 = new System.Windows.Forms.Label();\n            this.label6 = new System.Windows.Forms.Label();\n            this.label7 = new System.Windows.Forms.Label();\n            this.label8 = new System.Windows.Forms.Label();\n            this.label9 = new System.Windows.Forms.Label();\n            this.groupBox1 = new System.Windows.Forms.GroupBox();\n\n            // Mouse Events Label\n            this.label1.Location = new System.Drawing.Point(24, 504);\n            this.label1.Size = new System.Drawing.Size(392, 23);\n            // DoubleClickSize Label\n            this.label2.AutoSize = true;\n            this.label2.Location = new System.Drawing.Point(24, 48);\n            this.label2.Size = new System.Drawing.Size(35, 13);\n            // DoubleClickTime Label\n            this.label3.AutoSize = true;\n            this.label3.Location = new System.Drawing.Point(24, 72);\n            this.label3.Size = new System.Drawing.Size(35, 13);\n            // MousePresent Label\n            this.label4.AutoSize = true;\n            this.label4.Location = new System.Drawing.Point(24, 96);\n            this.label4.Size = new System.Drawing.Size(35, 13);\n            // MouseButtons Label\n            this.label5.AutoSize = true;\n            this.label5.Location = new System.Drawing.Point(24, 120);\n            this.label5.Size = new System.Drawing.Size(35, 13);\n            // MouseButtonsSwapped Label\n            this.label6.AutoSize = true;\n            this.label6.Location = new System.Drawing.Point(320, 48);\n            this.label6.Size = new System.Drawing.Size(35, 13);\n            // MouseWheelPresent Label\n            this.label7.AutoSize = true;\n            this.label7.Location = new System.Drawing.Point(320, 72);\n            this.label7.Size = new System.Drawing.Size(35, 13);\n            // MouseWheelScrollLines Label\n            this.label8.AutoSize = true;\n            this.label8.Location = new System.Drawing.Point(320, 96);\n            this.label8.Size = new System.Drawing.Size(35, 13);\n            // NativeMouseWheelSupport Label\n            this.label9.AutoSize = true;\n            this.label9.Location = new System.Drawing.Point(320, 120);\n            this.label9.Size = new System.Drawing.Size(35, 13);\n\n            // Mouse Panel\n            this.panel1.Anchor = ((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) \n                | System.Windows.Forms.AnchorStyles.Right);\n            this.panel1.BackColor = System.Drawing.SystemColors.ControlDark;\n            this.panel1.Location = new System.Drawing.Point(16, 160);\n            this.panel1.Size = new System.Drawing.Size(664, 320);\n            this.panel1.MouseUp += new System.Windows.Forms.MouseEventHandler(this.panel1_MouseUp);\n            this.panel1.Paint += new System.Windows.Forms.PaintEventHandler(this.panel1_Paint);\n            this.panel1.MouseEnter += new System.EventHandler(this.panel1_MouseEnter);\n            this.panel1.MouseHover += new System.EventHandler(this.panel1_MouseHover);\n            this.panel1.MouseMove += new System.Windows.Forms.MouseEventHandler(this.panel1_MouseMove);\n            this.panel1.MouseLeave += new System.EventHandler(this.panel1_MouseLeave);\n            this.panel1.MouseDown += new System.Windows.Forms.MouseEventHandler(this.panel1_MouseDown);\n            this.panel1.MouseWheel += new System.Windows.Forms.MouseEventHandler(this.panel1_MouseWheel);\n\n            // Clear Button\n            this.clearButton.Anchor = (System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right);\n            this.clearButton.Location = new System.Drawing.Point(592, 504);\n            this.clearButton.TabIndex = 1;\n            this.clearButton.Text = &quot;Clear&quot;;\n            this.clearButton.Click += new System.EventHandler(this.clearButton_Click);\n            \n            // GroupBox\n            this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) \n                | System.Windows.Forms.AnchorStyles.Right);\n            this.groupBox1.Location = new System.Drawing.Point(16, 24);\n            this.groupBox1.Size = new System.Drawing.Size(664, 128);\n            this.groupBox1.Text = &quot;System.Windows.Forms.SystemInformation&quot;;\n\n            // Set up how the form should be displayed and add the controls to the form.\n            this.ClientSize = new System.Drawing.Size(696, 534);\n            this.Controls.AddRange(new System.Windows.Forms.Control[] {\n                                        this.label9,this.label8,this.label7,this.label6,\n                                        this.label5,this.label4,this.label3,this.label2,\n                                        this.clearButton,this.panel1,this.label1,this.groupBox1});\n            this.Text = &quot;Mouse Event Example&quot;;\n\n            // Displays information about the system mouse.\n            label2.Text = &quot;SystemInformation.DoubleClickSize: &quot; + SystemInformation.DoubleClickSize.ToString();\n            label3.Text = &quot;SystemInformation.DoubleClickTime: &quot; + SystemInformation.DoubleClickTime.ToString();\n            label4.Text = &quot;SystemInformation.MousePresent: &quot; + SystemInformation.MousePresent.ToString();\n            label5.Text = &quot;SystemInformation.MouseButtons: &quot; + SystemInformation.MouseButtons.ToString();\n            label6.Text = &quot;SystemInformation.MouseButtonsSwapped: &quot; + SystemInformation.MouseButtonsSwapped.ToString();\n            label7.Text = &quot;SystemInformation.MouseWheelPresent: &quot; + SystemInformation.MouseWheelPresent.ToString();\n            label8.Text = &quot;SystemInformation.MouseWheelScrollLines: &quot; + SystemInformation.MouseWheelScrollLines.ToString();\n            label9.Text = &quot;SystemInformation.NativeMouseWheelSupport: &quot; + SystemInformation.NativeMouseWheelSupport.ToString();\n\n        }\n\n        private void panel1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e) \n        {\n            // Update the mouse path with the mouse information\n            Point mouseDownLocation = new Point(e.X, e.Y);\n\n            string eventString = null;\n            switch (e.Button) {\n                case MouseButtons.Left:\n                    eventString = &quot;L&quot;;\n                    break;\n                case MouseButtons.Right:\n                    eventString = &quot;R&quot;;\n                    break;\n                case MouseButtons.Middle:\n                    eventString = &quot;M&quot;;\n                    break;\n                case MouseButtons.XButton1:\n                    eventString = &quot;X1&quot;;\n                    break;\n                case MouseButtons.XButton2:\n                    eventString = &quot;X2&quot;;\n                    break;\n                case MouseButtons.None:\n                default:\n                    break;\n            }\n\n            if (eventString != null) \n            {\n                mousePath.AddString(eventString, FontFamily.GenericSerif, (int)FontStyle.Bold, fontSize, mouseDownLocation, StringFormat.GenericDefault);\n            }\n            else \n            {\n                mousePath.AddLine(mouseDownLocation,mouseDownLocation);\n            }\n            panel1.Focus();\n            panel1.Invalidate();\n        }\n\n        private void panel1_MouseEnter(object sender, System.EventArgs e) \n        {\n            // Update the mouse event label to indicate the MouseEnter event occurred.\n            label1.Text = sender.GetType().ToString() + &quot;: MouseEnter&quot;;\n        }\n\n        private void panel1_MouseHover(object sender, System.EventArgs e) \n        {\n            // Update the mouse event label to indicate the MouseHover event occurred.\n            label1.Text = sender.GetType().ToString() + &quot;: MouseHover&quot;;\n        }\n\n        private void panel1_MouseLeave(object sender, System.EventArgs e) \n        {\n            // Update the mouse event label to indicate the MouseLeave event occurred.\n            label1.Text = sender.GetType().ToString() + &quot;: MouseLeave&quot;;\n        }\n\n        private void panel1_MouseMove(object sender, System.Windows.Forms.MouseEventArgs e)\n        {\n            // Update the mouse path that is drawn onto the Panel.\n            int mouseX = e.X;\n            int mouseY = e.Y;\n            \n            mousePath.AddLine(mouseX,mouseY,mouseX,mouseY);\n        }\n\n        private void panel1_MouseWheel(object sender, System.Windows.Forms.MouseEventArgs e)\n        {\n            // Update the drawing based upon the mouse wheel scrolling.\n      \n            int numberOfTextLinesToMove = e.Delta * SystemInformation.MouseWheelScrollLines / 120;\n            int numberOfPixelsToMove = numberOfTextLinesToMove * fontSize;\n\n            if (numberOfPixelsToMove != 0) {\n                System.Drawing.Drawing2D.Matrix translateMatrix = new  System.Drawing.Drawing2D.Matrix();\n                translateMatrix.Translate(0, numberOfPixelsToMove);\n                mousePath.Transform(translateMatrix);\n            }\n            panel1.Invalidate();\n        }\n        private void panel1_MouseUp(object sender, System.Windows.Forms.MouseEventArgs e) \n        {\n            Point mouseUpLocation = new System.Drawing.Point(e.X, e.Y);\n        \n            // Show the number of clicks in the path graphic.\n            int numberOfClicks = e.Clicks;\n            mousePath.AddString(&quot;    &quot; + numberOfClicks.ToString(), \n                        FontFamily.GenericSerif, (int)FontStyle.Bold, \n                        fontSize, mouseUpLocation, StringFormat.GenericDefault);\n\n            panel1.Invalidate();\n        }\n\n        private void panel1_Paint(object sender, System.Windows.Forms.PaintEventArgs e) \n        {    \n            // Perform the painting of the Panel.\n            e.Graphics.DrawPath(System.Drawing.Pens.DarkRed, mousePath);\n        }\n\n        private void clearButton_Click(object sender, System.EventArgs e)\n        {\n            // Clear the Panel display.\n            mousePath.Dispose();\n            mousePath = new System.Drawing.Drawing2D.GraphicsPath();\n            panel1.Invalidate();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.MouseEvent#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nNamespace MouseEvent\n    &#39; Summary description for Form1.\n    Public NotInheritable Class Form1\n        Inherits System.Windows.Forms.Form\n\n        Friend WithEvents panel1 As System.Windows.Forms.Panel\n        Private label1 As System.Windows.Forms.Label\n        Private label2 As System.Windows.Forms.Label\n        Private label3 As System.Windows.Forms.Label\n        Private label4 As System.Windows.Forms.Label\n        Private label5 As System.Windows.Forms.Label\n        Private label6 As System.Windows.Forms.Label\n        Private label7 As System.Windows.Forms.Label\n        Private label8 As System.Windows.Forms.Label\n        Private label9 As System.Windows.Forms.Label\n        Friend WithEvents clearButton As System.Windows.Forms.Button\n        Private mousePath As System.Drawing.Drawing2D.GraphicsPath\n        Private groupBox1 As System.Windows.Forms.GroupBox\n\n        Private fontSize As Integer = 20\n        \n        &lt;System.STAThread()&gt;  _\n        Public Shared Sub Main()\n            System.Windows.Forms.Application.Run(New Form1())\n        End Sub &#39;Main\n\n        Public Sub New()\n\n            mousePath = New System.Drawing.Drawing2D.GraphicsPath()\n\n            Me.panel1 = New System.Windows.Forms.Panel()\n            Me.label1 = New System.Windows.Forms.Label()\n            Me.clearButton = New System.Windows.Forms.Button()\n            Me.label2 = New System.Windows.Forms.Label()\n            Me.label3 = New System.Windows.Forms.Label()\n            Me.label4 = New System.Windows.Forms.Label()\n            Me.label5 = New System.Windows.Forms.Label()\n            Me.label6 = New System.Windows.Forms.Label()\n            Me.label7 = New System.Windows.Forms.Label()\n            Me.label8 = New System.Windows.Forms.Label()\n            Me.label9 = New System.Windows.Forms.Label()\n            Me.groupBox1 = New System.Windows.Forms.GroupBox()\n\n            &#39; Mouse Events Label\n            Me.label1.Location = New System.Drawing.Point(24, 504) \n            Me.label1.Size = New System.Drawing.Size(392, 23) \n            &#39; DoubleClickSize Label\n            Me.label2.AutoSize = True \n            Me.label2.Location = New System.Drawing.Point(24, 48) \n            Me.label2.Size = New System.Drawing.Size(35, 13) \n            &#39; DoubleClickTime Label\n            Me.label3.AutoSize = True \n            Me.label3.Location = New System.Drawing.Point(24, 72) \n            Me.label3.Size = New System.Drawing.Size(35, 13) \n            &#39; MousePresent Label\n            Me.label4.AutoSize = True \n            Me.label4.Location = New System.Drawing.Point(24, 96) \n            Me.label4.Size = New System.Drawing.Size(35, 13) \n            &#39; MouseButtons Label\n            Me.label5.AutoSize = True \n            Me.label5.Location = New System.Drawing.Point(24, 120) \n            Me.label5.Size = New System.Drawing.Size(35, 13) \n            &#39; MouseButtonsSwapped Label\n            Me.label6.AutoSize = True \n            Me.label6.Location = New System.Drawing.Point(320, 48) \n            Me.label6.Size = New System.Drawing.Size(35, 13) \n            &#39; MouseWheelPresent Label\n            Me.label7.AutoSize = True \n            Me.label7.Location = New System.Drawing.Point(320, 72) \n            Me.label7.Size = New System.Drawing.Size(35, 13) \n            &#39; MouseWheelScrollLines Label\n            Me.label8.AutoSize = True \n            Me.label8.Location = New System.Drawing.Point(320, 96) \n            Me.label8.Size = New System.Drawing.Size(35, 13) \n            &#39; NativeMouseWheelSupport Label\n            Me.label9.AutoSize = True \n            Me.label9.Location = New System.Drawing.Point(320, 120) \n            Me.label9.Size = New System.Drawing.Size(35, 13) \n\n            &#39; Mouse Panel\n            Me.panel1.Anchor = System.Windows.Forms.AnchorStyles.Top Or _\n                                    System.Windows.Forms.AnchorStyles.Left Or _\n                                    System.Windows.Forms.AnchorStyles.Right\n            Me.panel1.BackColor = System.Drawing.SystemColors.ControlDark\n            Me.panel1.Location = New System.Drawing.Point(16, 160)\n            Me.panel1.Size = New System.Drawing.Size(664, 320)\n\n            &#39; Clear Button\n            Me.clearButton.Anchor = System.Windows.Forms.AnchorStyles.Top Or _\n                                    System.Windows.Forms.AnchorStyles.Right\n            Me.clearButton.Location = New System.Drawing.Point(592, 504)\n            Me.clearButton.TabIndex = 1\n            Me.clearButton.Text = &quot;Clear&quot;\n\n            &#39; GroupBox\n            Me.groupBox1.Anchor = System.Windows.Forms.AnchorStyles.Top Or _\n                                  System.Windows.Forms.AnchorStyles.Left Or _\n                                  System.Windows.Forms.AnchorStyles.Right\n            Me.groupBox1.Location = New System.Drawing.Point(16, 24)\n            Me.groupBox1.Size = New System.Drawing.Size(664, 128)\n            Me.groupBox1.Text = &quot;System.Windows.Forms.SystemInformation&quot;\n\n            &#39; Set up how the form should be displayed and add the controls to the form.\n            Me.ClientSize = New System.Drawing.Size(696, 534)\n            Me.Controls.AddRange(New System.Windows.Forms.Control() {Me.label9, _\n                            Me.label8, Me.label7, Me.label6, Me.label5, Me.label4, _\n                            Me.label3, Me.label2, Me.clearButton, Me.panel1, Me.label1, Me.groupBox1})\n\n            Me.Text = &quot;Mouse Event Example&quot;\n\n            &#39; Display information about the system mouse.\n            label2.Text = &quot;SystemInformation.DoubleClickSize: &quot; + SystemInformation.DoubleClickSize.ToString()\n            label3.Text = &quot;SystemInformation.DoubleClickTime: &quot; + SystemInformation.DoubleClickTime.ToString()\n            label4.Text = &quot;SystemInformation.MousePresent: &quot; + SystemInformation.MousePresent.ToString()\n            label5.Text = &quot;SystemInformation.MouseButtons: &quot; + SystemInformation.MouseButtons.ToString()\n            label6.Text = &quot;SystemInformation.MouseButtonsSwapped: &quot; + SystemInformation.MouseButtonsSwapped.ToString()\n            label7.Text = &quot;SystemInformation.MouseWheelPresent: &quot; + SystemInformation.MouseWheelPresent.ToString()\n            label8.Text = &quot;SystemInformation.MouseWheelScrollLines: &quot; + SystemInformation.MouseWheelScrollLines.ToString()\n            label9.Text = &quot;SystemInformation.NativeMouseWheelSupport: &quot; + SystemInformation.NativeMouseWheelSupport.ToString()\n        End Sub &#39;New\n\n        Private Sub panel1_MouseDown(sender As Object, e As System.Windows.Forms.MouseEventArgs) Handles panel1.MouseDown\n            &#39; Update the mouse path with the mouse information\n            Dim mouseDownLocation As New Point(e.X, e.Y)\n            \n            Dim eventString As String = Nothing\n            Select Case e.Button\n                Case MouseButtons.Left\n                    eventString = &quot;L&quot;\n                Case MouseButtons.Right\n                    eventString = &quot;R&quot;\n                Case MouseButtons.Middle\n                    eventString = &quot;M&quot;\n                Case MouseButtons.XButton1\n                    eventString = &quot;X1&quot;\n                Case MouseButtons.XButton2\n                    eventString = &quot;X2&quot;\n                Case MouseButtons.None:\n                     eventString = Nothing              \n            End Select\n            \n            If (eventString IsNot Nothing) Then\n                mousePath.AddString(eventString, FontFamily.GenericSerif, CInt(FontStyle.Bold), fontSize, mouseDownLocation, StringFormat.GenericDefault)\n            Else\n                mousePath.AddLine(mouseDownLocation, mouseDownLocation)\n            End If\n\n            panel1.Focus()\n            panel1.Invalidate()\n        End Sub \n        \n        Private Sub panel1_MouseEnter(sender As Object, e As System.EventArgs) Handles panel1.MouseEnter\n            &#39; Update the mouse event label to indicate the MouseEnter event occurred.\n            label1.Text = sender.GetType().ToString() + &quot;: MouseEnter&quot;\n        End Sub\n        \n        Private Sub panel1_MouseHover(sender As Object, e As System.EventArgs) Handles panel1.MouseHover\n            &#39; Update the mouse event label to indicate the MouseHover event occurred.\n            label1.Text = sender.GetType().ToString() + &quot;: MouseHover&quot;\n        End Sub\n        \n        Private Sub panel1_MouseLeave(sender As Object, e As System.EventArgs) Handles panel1.MouseLeave\n            &#39; Update the mouse event label to indicate the MouseLeave event occurred.\n            label1.Text = sender.GetType().ToString() + &quot;: MouseLeave&quot;\n        End Sub\n        \n        Private Sub panel1_MouseMove(sender As Object, e As System.Windows.Forms.MouseEventArgs) Handles panel1.MouseMove\n            &#39; Update the mouse path that is drawn onto the Panel.\n            Dim mouseX As Integer = e.X\n            Dim mouseY As Integer = e.Y\n            \n            mousePath.AddLine(mouseX, mouseY, mouseX, mouseY)\n        End Sub\n        Private Sub panel1_MouseWheel(sender As Object, e As System.Windows.Forms.MouseEventArgs) Handles panel1.MouseWheel\n            &#39; Update the drawing based upon the mouse wheel scrolling.\n            Dim numberOfTextLinesToMove As Integer = CInt(e.Delta * SystemInformation.MouseWheelScrollLines / 120) \n            Dim numberOfPixelsToMove As Integer = numberOfTextLinesToMove * fontSize\n            \n            If numberOfPixelsToMove &lt;&gt; 0 Then\n                Dim translateMatrix As New System.Drawing.Drawing2D.Matrix()\n                translateMatrix.Translate(0, numberOfPixelsToMove)\n                mousePath.Transform(translateMatrix)\n            End If\n\n            panel1.Invalidate()\n        End Sub\n        Private Sub panel1_MouseUp(sender As Object, e As System.Windows.Forms.MouseEventArgs) Handles panel1.MouseUp\n            Dim mouseUpLocation As New System.Drawing.Point(e.X, e.Y)\n            \n            &#39; Show the number of clicks in the path graphic.\n            Dim numberOfClicks As Integer = e.Clicks\n            mousePath.AddString(&quot;     &quot; + numberOfClicks.ToString(), _\n                                FontFamily.GenericSerif, CInt(FontStyle.Bold), _\n                                fontSize, mouseUpLocation, StringFormat.GenericDefault)\n\n            panel1.Invalidate()\n        End Sub\n        \n        Private Sub panel1_Paint(sender As Object, e As System.Windows.Forms.PaintEventArgs) Handles panel1.Paint\n            &#39; Perform the painting of the Panel.\n            e.Graphics.DrawPath(System.Drawing.Pens.DarkRed, mousePath)\n        End Sub\n        \n        Private Sub clearButton_Click(sender As Object, e As System.EventArgs) Handles clearButton.Click\n            &#39; Clear the Panel display.\n            mousePath.Dispose()\n            mousePath = New System.Drawing.Drawing2D.GraphicsPath()\n            panel1.Invalidate()\n        End Sub\n        \n    End Class &#39;Form1\nEnd Namespace\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a MouseEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.MouseEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MouseEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MouseEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MouseEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MouseEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MouseEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"1f33669e-5244-861f-fb8e-95a93440de1c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the MouseDown, MouseUp, or MouseMove event of a form, control, or other component.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.MouseEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.MouseEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.MouseEventHandler","System.Windows.Forms.MouseEventHandler..ctor","System.Windows.Forms.MouseEventHandler.Invoke","System.Windows.Forms.MouseEventHandler.BeginInvoke","System.Windows.Forms.MouseEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.MouseEventHandler","System::Windows::Forms::MouseEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"1f33669e-5244-861f-fb8e-95a93440de1c","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MouseEventHandler delegate | Microsoft Docs","_op_ogTitle":"MouseEventHandler delegate","description":"Represents the method that will handle the MouseDown, MouseUp, or MouseMove event of a form, control, or other component.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.MouseEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.mouseeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.mouseeventhandler","fileRelativePath":"api/System.Windows.Forms.MouseEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}