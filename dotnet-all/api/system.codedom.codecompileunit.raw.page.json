{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CodeCompileUnit</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a container for a CodeDOM program graph.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\n[ECMA2Yaml.Models.ECMAAttribute]\npublic class CodeCompileUnit : System.CodeDom.CodeObject</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeobject\" data-linktype=\"relative-path\">CodeObject</a></span></div><span class=\"lang-csharp\">CodeCompileUnit</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codesnippetcompileunit\" data-linktype=\"relative-path\">CodeSnippetCompileUnit</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeobject#System_CodeDom_CodeObject_UserData\" data-linktype=\"relative-path\">UserData</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example constructs a CodeCompileUnit that models the program structure of a simple &quot;Hello World&quot; program. This code example is part of a larger example that also produces code from this model, and is provided for the <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"CodeDomExample#2\">// Build a Hello World program graph using \n// System::CodeDom types.\nstatic CodeCompileUnit^ BuildHelloWorldGraph()\n{\n    // Create a new CodeCompileUnit to contain \n    // the program graph.\n    CodeCompileUnit^ compileUnit = gcnew CodeCompileUnit;\n\n    // Declare a new namespace called Samples.\n    CodeNamespace^ samples = gcnew CodeNamespace( &quot;Samples&quot; );\n\n    // Add the new namespace to the compile unit.\n    compileUnit-&gt;Namespaces-&gt;Add( samples );\n\n    // Add the new namespace import for the System namespace.\n    samples-&gt;Imports-&gt;Add( gcnew CodeNamespaceImport( &quot;System&quot; ) );\n\n    // Declare a new type called Class1.\n    CodeTypeDeclaration^ class1 = gcnew CodeTypeDeclaration( &quot;Class1&quot; );\n\n    // Add the new type to the namespace&#39;s type collection.\n    samples-&gt;Types-&gt;Add( class1 );\n\n    // Declare a new code entry point method.\n    CodeEntryPointMethod^ start = gcnew CodeEntryPointMethod;\n\n    // Create a type reference for the System::Console class.\n    CodeTypeReferenceExpression^ csSystemConsoleType = gcnew CodeTypeReferenceExpression( &quot;System.Console&quot; );\n\n    // Build a Console::WriteLine statement.\n    CodeMethodInvokeExpression^ cs1 = gcnew CodeMethodInvokeExpression( csSystemConsoleType,&quot;WriteLine&quot;, gcnew CodePrimitiveExpression(&quot;Hello World!&quot;) );\n\n    // Add the WriteLine call to the statement collection.\n    start-&gt;Statements-&gt;Add( cs1 );\n\n    // Build another Console::WriteLine statement.\n    CodeMethodInvokeExpression^ cs2 = gcnew CodeMethodInvokeExpression( csSystemConsoleType,&quot;WriteLine&quot;, gcnew CodePrimitiveExpression( &quot;Press the Enter key to continue.&quot; ) );\n\n    // Add the WriteLine call to the statement collection.\n    start-&gt;Statements-&gt;Add( cs2 );\n\n    // Build a call to System::Console::ReadLine.\n    CodeMethodReferenceExpression^ csReadLine = gcnew CodeMethodReferenceExpression( csSystemConsoleType, &quot;ReadLine&quot; );\n    CodeMethodInvokeExpression^ cs3 = gcnew CodeMethodInvokeExpression( csReadLine, gcnew array&lt;CodeExpression^&gt;(0) );\n\n    // Add the ReadLine statement.\n    start-&gt;Statements-&gt;Add( cs3 );\n\n    // Add the code entry point method to\n    // the Members collection of the type.\n    class1-&gt;Members-&gt;Add( start );\n    return compileUnit;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"CodeDomExample#2\">// Build a Hello World program graph using \n// System.CodeDom types.\npublic static CodeCompileUnit BuildHelloWorldGraph()\n{\n    // Create a new CodeCompileUnit to contain \n    // the program graph.\n    CodeCompileUnit compileUnit = new CodeCompileUnit();\n\n    // Declare a new namespace called Samples.\n    CodeNamespace samples = new CodeNamespace(&quot;Samples&quot;);\n    // Add the new namespace to the compile unit.\n    compileUnit.Namespaces.Add(samples);\n\n    // Add the new namespace import for the System namespace.\n    samples.Imports.Add(new CodeNamespaceImport(&quot;System&quot;));\n\n    // Declare a new type called Class1.\n    CodeTypeDeclaration class1 = new CodeTypeDeclaration(&quot;Class1&quot;);\n    // Add the new type to the namespace type collection.\n    samples.Types.Add(class1);\n\n    // Declare a new code entry point method.\n    CodeEntryPointMethod start = new CodeEntryPointMethod();\n\n    // Create a type reference for the System.Console class.\n    CodeTypeReferenceExpression csSystemConsoleType = new CodeTypeReferenceExpression(&quot;System.Console&quot;);\n\n    // Build a Console.WriteLine statement.\n    CodeMethodInvokeExpression cs1 = new CodeMethodInvokeExpression(\n        csSystemConsoleType, &quot;WriteLine&quot;,\n        new CodePrimitiveExpression(&quot;Hello World!&quot;));\n\n    // Add the WriteLine call to the statement collection.\n    start.Statements.Add(cs1);\n\n    // Build another Console.WriteLine statement.\n    CodeMethodInvokeExpression cs2 = new CodeMethodInvokeExpression(\n        csSystemConsoleType, &quot;WriteLine&quot;,\n        new CodePrimitiveExpression(&quot;Press the Enter key to continue.&quot;));\n\n    // Add the WriteLine call to the statement collection.\n    start.Statements.Add(cs2);\n\n    // Build a call to System.Console.ReadLine.\n    CodeMethodInvokeExpression csReadLine = new CodeMethodInvokeExpression(\n        csSystemConsoleType, &quot;ReadLine&quot;);\n\n    // Add the ReadLine statement.\n    start.Statements.Add(csReadLine);\n\n    // Add the code entry point method to\n    // the Members collection of the type.\n    class1.Members.Add(start);\n\n    return compileUnit;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CodeDomExample#2\">&#39; Build a Hello World program graph using \n&#39; System.CodeDom types.\nPublic Shared Function BuildHelloWorldGraph() As CodeCompileUnit\n\n    &#39; Create a new CodeCompileUnit to contain \n    &#39; the program graph.\n    Dim compileUnit As New CodeCompileUnit()\n\n    &#39; Declare a new namespace called Samples.\n    Dim samples As New CodeNamespace(&quot;Samples&quot;)\n\n    &#39; Add the new namespace to the compile unit.\n    compileUnit.Namespaces.Add(samples)\n\n    &#39; Add the new namespace import for the System namespace.\n    samples.Imports.Add(New CodeNamespaceImport(&quot;System&quot;))\n\n    &#39; Declare a new type called Class1.\n    Dim class1 As New CodeTypeDeclaration(&quot;Class1&quot;)\n\n    &#39; Add the new type to the namespace type collection.\n    samples.Types.Add(class1)\n\n    &#39; Declare a new code entry point method.\n    Dim start As New CodeEntryPointMethod()\n\n    &#39; Create a type reference for the System.Console class.\n    Dim csSystemConsoleType As New CodeTypeReferenceExpression( _\n        &quot;System.Console&quot;)\n\n    &#39; Build a Console.WriteLine statement.\n    Dim cs1 As New CodeMethodInvokeExpression( _\n        csSystemConsoleType, &quot;WriteLine&quot;, _\n        New CodePrimitiveExpression(&quot;Hello World!&quot;))\n\n    &#39; Add the WriteLine call to the statement collection.\n    start.Statements.Add(cs1)\n\n    &#39; Build another Console.WriteLine statement.\n    Dim cs2 As New CodeMethodInvokeExpression( _\n        csSystemConsoleType, &quot;WriteLine&quot;, _\n        New CodePrimitiveExpression(&quot;Press the Enter key to continue.&quot;))\n\n    &#39; Add the WriteLine call to the statement collection.\n    start.Statements.Add(cs2)\n\n    &#39; Build a call to System.Console.ReadLine.\n    Dim csReadLine As New CodeMethodInvokeExpression( _\n        csSystemConsoleType, &quot;ReadLine&quot;)\n\n    &#39; Add the ReadLine statement.\n    start.Statements.Add(csReadLine)\n\n    &#39; Add the code entry point method to\n    &#39; the Members collection of the type.\n    class1.Members.Add(start)\n\n    Return compileUnit\nEnd Function\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>CodeCompileUnit provides a container for a CodeDOM program graph.  </p>\n<p> CodeCompileUnit contains a collection that can store <a class=\"xref\" href=\"system.codedom.codenamespace\" data-linktype=\"relative-path\">CodeNamespace</a> objects containing CodeDOM source code graphs, along with a collection of assemblies referenced by the project, and a collection of attributes for the project assembly.  </p>\n<p> A CodeCompileUnit can be passed to the <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator#System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromCompileUnit_\" data-linktype=\"relative-path\">GenerateCodeFromCompileUnit</a> method of an <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator\" data-linktype=\"relative-path\">ICodeGenerator</a> implementation along with other parameters to generate code based on the program graph contained by the compile unit.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some languages support only a single namespace that contains a single class in a compile unit.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeCompileUnit__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCompileUnit__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeCompileUnit()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeCompileUnit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeCompileUnit_AssemblyCustomAttributes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCompileUnit_AssemblyCustomAttributes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AssemblyCustomAttributes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of custom attributes for the generated assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.CodeDom.CodeAttributeDeclarationCollection AssemblyCustomAttributes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeattributedeclarationcollection\" data-linktype=\"relative-path\">CodeAttributeDeclarationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codeattributedeclarationcollection\" data-linktype=\"relative-path\">CodeAttributeDeclarationCollection</a> that indicates the custom attributes for the generated assembly.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can add and remove <a class=\"xref\" href=\"system.codedom.codeattributedeclaration\" data-linktype=\"relative-path\">CodeAttributeDeclaration</a> objects representing attributes for the generated assembly from this collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeCompileUnit_EndDirectives_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCompileUnit_EndDirectives\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndDirectives</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing end directives.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.CodeDom.CodeDirectiveCollection EndDirectives { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing end directives.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeCompileUnit_Namespaces_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCompileUnit_Namespaces\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Namespaces</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of namespaces.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.CodeDom.CodeNamespaceCollection Namespaces { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codenamespacecollection\" data-linktype=\"relative-path\">CodeNamespaceCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codenamespacecollection\" data-linktype=\"relative-path\">CodeNamespaceCollection</a> that indicates the namespaces that the compile unit uses.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can add and remove <a class=\"xref\" href=\"system.codedom.codenamespace\" data-linktype=\"relative-path\">CodeNamespace</a> objects from this collection. Each object represents a namespace.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some languages support only a single namespace that contains a single class in a compile unit.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeCompileUnit_ReferencedAssemblies_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCompileUnit_ReferencedAssemblies\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReferencedAssemblies</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the referenced assemblies.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.stringcollection\" data-linktype=\"relative-path\">StringCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.specialized.stringcollection\" data-linktype=\"relative-path\">StringCollection</a> that contains the file names of the referenced assemblies.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can add and remove file names from this collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodeCompileUnit_StartDirectives_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCompileUnit_StartDirectives\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StartDirectives</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing start directives.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.CodeDom.CodeDirectiveCollection StartDirectives { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing start directives.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodeCompileUnit.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.EndDirectives\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.Namespaces\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.ReferencedAssemblies\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.StartDirectives\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"faa812e0-35f0-c1a7-0172-3fe4eb74953b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a container for a CodeDOM program graph.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.codedom/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodeCompileUnit\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodeCompileUnit.yml","open_to_public_contributors":false,"api_name":["System.CodeDom.CodeCompileUnit","System.CodeDom.CodeCompileUnit..ctor","System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes","System.CodeDom.CodeCompileUnit.EndDirectives","System.CodeDom.CodeCompileUnit.Namespaces","System.CodeDom.CodeCompileUnit.ReferencedAssemblies","System.CodeDom.CodeCompileUnit.StartDirectives"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodeCompileUnit","System::CodeDom::CodeCompileUnit","System.CodeDom.CodeCompileUnit.#ctor","System::CodeDom::CodeCompileUnit::#ctor","System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes","System::CodeDom::CodeCompileUnit::AssemblyCustomAttributes","System.CodeDom.CodeCompileUnit.EndDirectives","System::CodeDom::CodeCompileUnit::EndDirectives","System.CodeDom.CodeCompileUnit.Namespaces","System::CodeDom::CodeCompileUnit::Namespaces","System.CodeDom.CodeCompileUnit.ReferencedAssemblies","System::CodeDom::CodeCompileUnit::ReferencedAssemblies","System.CodeDom.CodeCompileUnit.StartDirectives","System::CodeDom::CodeCompileUnit::StartDirectives"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"faa812e0-35f0-c1a7-0172-3fe4eb74953b","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.CodeDom/CodeCompileUnit.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeCompileUnit class | Microsoft Docs","_op_ogTitle":"CodeCompileUnit class","description":"Provides a container for a CodeDOM program graph.\n","toc_asset_id":"api/_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodeCompileUnit","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codecompileunit","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codecompileunit","fileRelativePath":"api/System.CodeDom.CodeCompileUnit.html"},"themesRelativePathToOutputRoot":"_themes/"}