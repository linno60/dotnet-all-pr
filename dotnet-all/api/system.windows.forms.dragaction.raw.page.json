{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DragAction</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies how and if a drag-and-drop operation should continue.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic enum DragAction</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">DragAction</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates a drag-and-drop operation between two <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a> controls. The example calls the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method when the drag action starts. The drag action starts if the mouse has moved more than <a class=\"xref\" href=\"system.windows.forms.systeminformation#System_Windows_Forms_SystemInformation_DragSize_\" data-linktype=\"relative-path\">DragSize</a> from the mouse location during the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event. The <a class=\"xref\" href=\"system.windows.forms.listbox#System_Windows_Forms_ListBox_IndexFromPoint_\" data-linktype=\"relative-path\">IndexFromPoint</a> method is used to determine the index of the item to drag during the <code>MouseDown</code> event.  </p>\n<p> The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, <code>3dwarro.cur</code> and <code>3dwno.cur</code>, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the <code>UseCustomCursorsCheck</code><a class=\"xref\" href=\"system.windows.forms.checkbox\" data-linktype=\"relative-path\">CheckBox</a> is checked. The custom cursors are set in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event handler.  </p>\n<p> The keyboard state is evaluated in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event handler for the right <code>ListBox</code>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the <code>ListBox</code> where the drop would occur is also determined during the <code>DragOver</code> event. If the data to drop is not a <code>String</code>, then the <a class=\"xref\" href=\"system.windows.forms.drageventargs#System_Windows_Forms_DragEventArgs_Effect_\" data-linktype=\"relative-path\">Effect</a> is set to <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">System.Windows.Forms.DragDropEffects</a>. Finally, the status of the drop is displayed in the <code>DropLocationLabel</code><a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>.  </p>\n<p> The data to drop for the right <code>ListBox</code> is determined in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a> event handler and the <code>String</code> value is added at the appropriate place in the <code>ListBox</code>. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a> event handler.  </p>\n<p> This code excerpt demonstrates using the DragAction enumeration. See the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method for the complete code example.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Control.DoDragDrop#6\">void ListDragSource_QueryContinueDrag( Object^ sender, System::Windows::Forms::QueryContinueDragEventArgs^ e )\n{\n   // Cancel the drag if the mouse moves off the form.\n   ListBox^ lb = dynamic_cast&lt;ListBox^&gt;(sender);\n   if ( lb != nullptr )\n   {\n      Form^ f = lb-&gt;FindForm();\n\n      // Cancel the drag if the mouse moves off the form. The screenOffset\n      // takes into account any desktop bands that may be at the top or left\n      // side of the screen.\n      if ( ((Control::MousePosition.X - screenOffset.X) &lt; f-&gt;DesktopBounds.Left) || ((Control::MousePosition.X - screenOffset.X) &gt; f-&gt;DesktopBounds.Right) || ((Control::MousePosition.Y - screenOffset.Y) &lt; f-&gt;DesktopBounds.Top) || ((Control::MousePosition.Y - screenOffset.Y) &gt; f-&gt;DesktopBounds.Bottom) )\n      {\n         e-&gt;Action = DragAction::Cancel;\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Control.DoDragDrop#6\">Private Sub ListDragSource_QueryContinueDrag(ByVal sender As Object, ByVal e As QueryContinueDragEventArgs) Handles ListDragSource.QueryContinueDrag\n    &#39; Cancel the drag if the mouse moves off the form.\n    Dim lb as ListBox = CType(sender, System.Windows.Forms.ListBox)\n\n    If (lb isNot nothing) Then\n\n        Dim f as Form = lb.FindForm()\n\n        &#39; Cancel the drag if the mouse moves off the form. The screenOffset\n        &#39; takes into account any desktop bands that may be at the top or left\n        &#39; side of the screen.\n        If (((Control.MousePosition.X - screenOffset.X) &lt; f.DesktopBounds.Left) Or _\n            ((Control.MousePosition.X - screenOffset.X) &gt; f.DesktopBounds.Right) Or _\n            ((Control.MousePosition.Y - screenOffset.Y) &lt; f.DesktopBounds.Top) Or _\n            ((Control.MousePosition.Y - screenOffset.Y) &gt; f.DesktopBounds.Bottom)) Then\n\n            e.Action = DragAction.Cancel\n        End If\n    End if\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Control.DoDragDrop#6\">private void ListDragSource_QueryContinueDrag(object sender, System.Windows.Forms.QueryContinueDragEventArgs e) {\n    // Cancel the drag if the mouse moves off the form.\n    ListBox lb = sender as ListBox;\n\n    if (lb != null) {\n\n        Form f = lb.FindForm();\n\n        // Cancel the drag if the mouse moves off the form. The screenOffset\n        // takes into account any desktop bands that may be at the top or left\n        // side of the screen.\n        if (((Control.MousePosition.X - screenOffset.X) &lt; f.DesktopBounds.Left) ||\n            ((Control.MousePosition.X - screenOffset.X) &gt; f.DesktopBounds.Right) ||\n            ((Control.MousePosition.Y - screenOffset.Y) &lt; f.DesktopBounds.Top) ||\n            ((Control.MousePosition.Y - screenOffset.Y) &gt; f.DesktopBounds.Bottom)) {\n\n            e.Action = DragAction.Cancel;\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This enumeration is used by <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a>.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Windows_Forms_DragAction_Cancel\">\r\n      \t\t\t<span class=\"lang-csharp\">Cancel</span>\r\n      \t</td>\r\n      \t<td><p>The operation is canceled with no drop message.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_DragAction_Continue\">\r\n      \t\t\t<span class=\"lang-csharp\">Continue</span>\r\n      \t</td>\r\n      \t<td><p>The operation will continue.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Windows_Forms_DragAction_Drop\">\r\n      \t\t\t<span class=\"lang-csharp\">Drop</span>\r\n      \t</td>\r\n      \t<td><p>The operation will stop with a drop.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DragAction.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DragAction\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DragAction.Cancel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DragAction.Continue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DragAction.Drop\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"b8861aab-d9dd-c392-d063-3e61d2bce8af\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies how and if a drag-and-drop operation should continue.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DragAction\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DragAction.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DragAction","System.Windows.Forms.DragAction.Cancel","System.Windows.Forms.DragAction.Continue","System.Windows.Forms.DragAction.Drop"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DragAction","System::Windows::Forms::DragAction","System.Windows.Forms.DragAction.Cancel","System::Windows::Forms::DragAction::Cancel","System.Windows.Forms.DragAction.Continue","System::Windows::Forms::DragAction::Continue","System.Windows.Forms.DragAction.Drop","System::Windows::Forms::DragAction::Drop"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"b8861aab-d9dd-c392-d063-3e61d2bce8af","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/DragAction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DragAction enum | Microsoft Docs","_op_ogTitle":"DragAction enum","description":"Specifies how and if a drag-and-drop operation should continue.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DragAction","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.dragaction","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.dragaction","fileRelativePath":"api/System.Windows.Forms.DragAction.html"},"themesRelativePathToOutputRoot":"_themes/"}