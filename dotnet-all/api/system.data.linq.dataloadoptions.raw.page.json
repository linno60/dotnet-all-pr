{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataLoadOptions</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides for immediate loading and filtering of related data.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class DataLoadOptions</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">DataLoadOptions</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>When you retrieve <code>Customers</code> from the Northwind sample database, you can use DataLoadOptions to specify that <code>Orders</code> is also to be retrieved. You can even specify which subset of <code>Orders</code> to retrieve.</p>\n\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<h3 class=\"accented\" id=\"general\">General</h3>\n<p> When you query for an object, you actually retrieve only the object you requested. The <em>related</em> objects are not automatically fetched at the same time. (For more information, see <a href=\"../topic/querying%20across%20relationships\" data-linktype=\"relative-path\">Querying Across Relationships</a>.)  </p>\n<p> The DataLoadOptions class provides two methods to achieve immediate loading of specified related data. The <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> method allows for immediate loading of data related to the main target. The <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_AssociateWith_\" data-linktype=\"relative-path\">AssociateWith</a> method allows for filtering related objects.  </p>\n<h3 class=\"accented\" id=\"rules\">Rules</h3>\n<p> Note the following rules regarding DataLoadOptions usage:  </p>\n<ul>\n<li><p>Assigning a DataLoadOptions to a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> after the first query has been executed generates an exception.  </p>\n</li>\n<li><p>Modifying a DataLoadOptions after it has been assigned to a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> generates an exception  </p>\n</li>\n</ul>\n<h3 class=\"accented\" id=\"cycle-handling\">Cycle Handling</h3>\n<p> <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> and <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_AssociateWith_\" data-linktype=\"relative-path\">AssociateWith</a> directives must not create cycles. The following represent examples of such graphs:  </p>\n<ul>\n<li><p>Example 1: Self recursive  </p>\n<ul>\n<li><code>dlo.LoadWith&lt;Employee&gt;(e =&gt; e.Reports);</code>  </li>\n</ul>\n</li>\n<li><p>Example 2: Back-pointers  </p>\n<ul>\n<li><p><code>dlo.LoadWith &lt;Customer&gt;(c =&gt; C.Orders);</code>  </p>\n</li>\n<li><p><code>dlo.LoadWith &lt;Order&gt;(o =&gt; o.Customer);</code>  </p>\n</li>\n</ul>\n</li>\n<li><p>Example 3: Longer cycles  </p>\n<p> Although this should not occur in a well-normalized model, it is possible.  </p>\n<ul>\n<li><p><code>dlo.LoadWith &lt;A&gt;(a =&gt; a.Bs);</code>  </p>\n</li>\n<li><p><code>dlo.LoadWith &lt;B&gt;(b =&gt; b.Cs);</code>  </p>\n</li>\n<li><p><code>dlo.LoadWith &lt;C&gt;(c =&gt; c.As);</code>  </p>\n</li>\n</ul>\n</li>\n<li><p>Example 4: Self recursive subQueries  </p>\n<ul>\n<li><code>dlo.AssociateWith&lt;A&gt;(a=&gt;a.As.Where(a=&gt;a.Id=33));</code>  </li>\n</ul>\n</li>\n<li><p>Example 5: Longer recursive subqueries  </p>\n<ul>\n<li><p><code>dlo.AssociateWith&lt;A&gt;(a=&gt;a.Bs.Where(b=&gt;b.Id==3));</code>  </p>\n</li>\n<li><p><code>dlo.AssociateWith&lt;B&gt;(b=&gt;b.As.Where(a=&gt;a.Id==3));</code>  </p>\n</li>\n</ul>\n</li>\n</ul>\n<p> The following are some general rules that help you understand what occurs in these scenarios.  </p>\n<p> <strong>LoadWith</strong> Each call to <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> checks whether cycles have been introduced into the graph. If there are, as in Examples 1, 2, and 3, an exception is thrown.  </p>\n<p> <strong>AssociateWith</strong> The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.  </p>\n<ul>\n<li><p>In Example 4, the <code>Where</code> clause is executed against all <code>A</code>, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)  </p>\n</li>\n<li><p>In Example 5, the first <code>Where</code> clause is applied to all the <code>B</code>s, even though there are subqueries on <code>B</code>. The second <code>Where</code> clause is applied to all the <code>A</code>s even though there are subqueries on <code>A</code>.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Linq_DataLoadOptions__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Linq_DataLoadOptions__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataLoadOptions()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataLoadOptions ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Linq_DataLoadOptions_AssociateWith_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Linq_DataLoadOptions_AssociateWith_System_Linq_Expressions_LambdaExpression_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AssociateWith(LambdaExpression)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Filters the objects retrieved for a particular relationship.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.lambdaexpression\" data-linktype=\"relative-path\">LambdaExpression</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Identifies the query to be used on a particular one-to-many field or property. Note the following:  </p>\n<p> If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  </p>\n<p> If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  </p>\n<p> Where  </p>\n<p> OrderBy  </p>\n<p> ThenBy  </p>\n<p> OrderByDescending  </p>\n<p> ThenByDescending  </p>\n<p> Take</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In the following example, the inner loop iterates only over those <code>Orders</code> that have not been shipped today.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Linq_DataLoadOptions_AssociateWith__1_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Linq_DataLoadOptions_AssociateWith__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AssociateWith&lt;T&gt;(Expression&lt;Func&lt;T,Object&gt;&gt;)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Filters objects retrieved for a particular relationship.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression-1\" data-linktype=\"relative-path\">Expression</a>&lt;<a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">T</span>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Identifies the query to be used on a particular one-to-many field or property. Note the following:  </p>\n<p> If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  </p>\n<p> If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  </p>\n<p> Where  </p>\n<p> OrderBy  </p>\n<p> ThenBy  </p>\n<p> OrderByDescending  </p>\n<p> ThenByDescending  </p>\n<p> Take</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For information about how to avoid cycles, see <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Linq_DataLoadOptions_LoadWith_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Linq_DataLoadOptions_LoadWith_System_Linq_Expressions_LambdaExpression_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadWith(LambdaExpression)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves specified data related to the main target by using a lambda expression.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void LoadWith (System.Linq.Expressions.LambdaExpression expression);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.lambdaexpression\" data-linktype=\"relative-path\">LambdaExpression</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A lambda expression that identifies the related material.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In the following example, all the <code>Orders</code> for all the <code>Customers</code> who are located in London are retrieved when the query is executed. As a result, successive access to the <code>Orders</code> property on a <code>Customer</code> object does not trigger a new database query.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Linq_DataLoadOptions_LoadWith__1_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Linq_DataLoadOptions_LoadWith__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadWith&lt;T&gt;(Expression&lt;Func&lt;T,Object&gt;&gt;)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression-1\" data-linktype=\"relative-path\">Expression</a>&lt;<a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">T</span>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Identifies the field or property to be retrieved.  </p>\n<p> If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You cannot specify the loading of two levels of relationships (for example, <code>Orders.OrderDetails</code>). In these scenarios you must specify two separate <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> methods.  </p>\n<p> To avoid cycling, see Remarks section in <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Linq.DataLoadOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.AssociateWith\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.AssociateWith&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.LoadWith\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.LoadWith&lt;T&gt;\">\r\n<meta name=\"APILocation\" content=\"System.Data.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"1289065d-5d0e-ba79-6953-9eb97e516919\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides for immediate loading and filtering of related data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data.linq/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Linq.DataLoadOptions\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Linq.DataLoadOptions.yml","open_to_public_contributors":false,"api_name":["System.Data.Linq.DataLoadOptions","System.Data.Linq.DataLoadOptions..ctor","System.Data.Linq.DataLoadOptions.AssociateWith","System.Data.Linq.DataLoadOptions.AssociateWith<T>","System.Data.Linq.DataLoadOptions.LoadWith","System.Data.Linq.DataLoadOptions.LoadWith<T>"],"api_location":["System.Data.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Linq.DataLoadOptions","System::Data::Linq::DataLoadOptions","System.Data.Linq.DataLoadOptions.#ctor","System::Data::Linq::DataLoadOptions::#ctor","System.Data.Linq.DataLoadOptions.AssociateWith","System::Data::Linq::DataLoadOptions::AssociateWith","System.Data.Linq.DataLoadOptions.AssociateWith``1","System::Data::Linq::DataLoadOptions::AssociateWith``1","System.Data.Linq.DataLoadOptions.LoadWith","System::Data::Linq::DataLoadOptions::LoadWith","System.Data.Linq.DataLoadOptions.LoadWith``1","System::Data::Linq::DataLoadOptions::LoadWith``1"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"1289065d-5d0e-ba79-6953-9eb97e516919","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data.Linq/DataLoadOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataLoadOptions class | Microsoft Docs","_op_ogTitle":"DataLoadOptions class","description":"Provides for immediate loading and filtering of related data.\n","toc_asset_id":"api/_splitted/System.Data.Linq/toc.json","toc_rel":"_splitted/System.Data.Linq/toc.json","source_url":"","ms.assetid":"System.Data.Linq.DataLoadOptions","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.linq.dataloadoptions","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.linq.dataloadoptions","fileRelativePath":"api/System.Data.Linq.DataLoadOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}