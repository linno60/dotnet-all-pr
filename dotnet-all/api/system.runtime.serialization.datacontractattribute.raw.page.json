{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataContractAttribute</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>. To make their type serializable, type authors must define a data contract for their type.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)]\npublic sealed class DataContractAttribute : Attribute</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></span></div><span class=\"lang-csharp\">DataContractAttribute</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example serializes and deserializes a class named <code>Person</code> to which the DataContractAttribute has been applied. Note that the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute#System_Runtime_Serialization_DataContractAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> and <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute#System_Runtime_Serialization_DataContractAttribute_Name_\" data-linktype=\"relative-path\">Name</a> properties have been set to values that override the default settings.  </p>\n<pre><code class=\"lang-vb\" name=\"DataContractAttribute#1\">Namespace DataContractAttributeExample\n    &#39; Set the Name and Namespace properties to new values.\n    &lt;DataContract(Name := &quot;Customer&quot;, [Namespace] := &quot;http://www.contoso.com&quot;)&gt;  _\n    Class Person\n        Implements IExtensibleDataObject\n        &#39; To implement the IExtensibleDataObject interface, you must also\n        &#39; implement the ExtensionData property.\n        Private extensionDataObjectValue As ExtensionDataObject \n        \n        Public Property ExtensionData() As ExtensionDataObject _\n          Implements IExtensibleDataObject.ExtensionData\n            Get\n                Return extensionDataObjectValue\n            End Get\n            Set\n                extensionDataObjectValue = value\n            End Set\n        End Property\n        \n        &lt;DataMember(Name := &quot;CustName&quot;)&gt;  _\n        Friend Name As String\n        \n        &lt;DataMember(Name := &quot;CustID&quot;)&gt;  _\n        Friend ID As Integer\n        \n        \n        Public Sub New(ByVal newName As String, ByVal newID As Integer) \n            Name = newName\n            ID = newID\n        \n        End Sub \n    End Class \n    \n    \n    Class Test\n        \n        Public Shared Sub Main() \n            Try\n                WriteObject(&quot;DataContractExample.xml&quot;)\n                ReadObject(&quot;DataContractExample.xml&quot;)\n                Console.WriteLine(&quot;Press Enter to end&quot;)\n                Console.ReadLine()\n            Catch se As SerializationException\n                Console.WriteLine(&quot;The serialization operation failed. Reason: {0}&quot;, _\n                   se.Message)\n                Console.WriteLine(se.Data)\n                Console.ReadLine()\n            End Try\n        \n        End Sub \n        \n        \n        Public Shared Sub WriteObject(ByVal path As String) \n            &#39; Create a new instance of the Person class and \n            &#39; serialize it to an XML file.\n            Dim p1 As New Person(&quot;Mary&quot;, 1)\n            &#39; Create a new instance of a StreamWriter\n            &#39; to read and write the data.\n            Dim fs As New FileStream(path, FileMode.Create)\n            Dim writer As XmlDictionaryWriter = XmlDictionaryWriter.CreateTextWriter(fs)\n            Dim ser As New DataContractSerializer(GetType(Person))\n            ser.WriteObject(writer, p1)\n            Console.WriteLine(&quot;Finished writing object.&quot;)\n            writer.Close()\n            fs.Close()\n        \n        End Sub \n        \n        Public Shared Sub ReadObject(ByVal path As String) \n            &#39; Deserialize an instance of the Person class \n            &#39; from an XML file. First create an instance of the \n            &#39; XmlDictionaryReader.\n            Dim fs As New FileStream(path, FileMode.OpenOrCreate)\n            Dim reader As XmlDictionaryReader = XmlDictionaryReader. _\n              CreateTextReader(fs, New XmlDictionaryReaderQuotas())\n            \n            &#39; Create the DataContractSerializer instance.\n            Dim ser As New DataContractSerializer(GetType(Person))\n            \n            &#39; Deserialize the data and read it from the instance.\n            Dim newPerson As Person = CType(ser.ReadObject(reader), Person)\n            Console.WriteLine(&quot;Reading this object:&quot;)\n            Console.WriteLine(String.Format(&quot;{0}, ID: {1}&quot;, newPerson.Name, newPerson.ID))\n            fs.Close()\n        \n        End Sub \n    End Class \nEnd Namespace \n</code></pre><pre><code class=\"lang-cs\" name=\"DataContractAttribute#1\">namespace DataContractAttributeExample\n{\n    // Set the Name and Namespace properties to new values.\n    [DataContract(Name = &quot;Customer&quot;, Namespace = &quot;http://www.contoso.com&quot;)]\n    class Person : IExtensibleDataObject\n    {\n        // To implement the IExtensibleDataObject interface, you must also\n        // implement the ExtensionData property.\n        private ExtensionDataObject extensionDataObjectValue;\n        public ExtensionDataObject ExtensionData\n        {\n            get\n            {\n                return extensionDataObjectValue;\n            }\n            set\n            {\n                extensionDataObjectValue = value;\n            }\n        }\n\n        [DataMember(Name = &quot;CustName&quot;)]\n        internal string Name;\n\n        [DataMember(Name = &quot;CustID&quot;)]\n        internal int ID;\n\n        public Person(string newName, int newID)\n        {\n            Name = newName;\n            ID = newID;\n        }\n\n    }\n\n    class Test\n    {\n        public static void Main()\n        {\n            try\n            {\n                WriteObject(&quot;DataContractExample.xml&quot;);\n                ReadObject(&quot;DataContractExample.xml&quot;);\n                Console.WriteLine(&quot;Press Enter to end&quot;);\n                Console.ReadLine();\n            }\n            catch (SerializationException se)\n            {\n                Console.WriteLine\n                (&quot;The serialization operation failed. Reason: {0}&quot;,\n                  se.Message);\n                Console.WriteLine(se.Data);\n                Console.ReadLine();\n            }\n        }\n\n        public static void WriteObject(string path)\n        {\n            // Create a new instance of the Person class and \n            // serialize it to an XML file.\n            Person p1 = new Person(&quot;Mary&quot;, 1);\n            // Create a new instance of a StreamWriter\n            // to read and write the data.\n            FileStream fs = new FileStream(path,\n            FileMode.Create);\n            XmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(fs);\n            DataContractSerializer ser =\n                new DataContractSerializer(typeof(Person));\n            ser.WriteObject(writer, p1);\n            Console.WriteLine(&quot;Finished writing object.&quot;);\n            writer.Close();\n            fs.Close();\n        }\n        public static void ReadObject(string path)\n        {\n            // Deserialize an instance of the Person class \n            // from an XML file. First create an instance of the \n            // XmlDictionaryReader.\n            FileStream fs = new FileStream(path, FileMode.OpenOrCreate);\n            XmlDictionaryReader reader =\n                XmlDictionaryReader.CreateTextReader(fs, new XmlDictionaryReaderQuotas());\n\n            // Create the DataContractSerializer instance.\n            DataContractSerializer ser =\n                new DataContractSerializer(typeof(Person));\n\n            // Deserialize the data and read it from the instance.\n            Person newPerson = (Person)ser.ReadObject(reader);\n            Console.WriteLine(&quot;Reading this object:&quot;);\n            Console.WriteLine(String.Format(&quot;{0}, ID: {1}&quot;,\n            newPerson.Name, newPerson.ID));\n            fs.Close();\n        }\n\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Apply the DataContractAttribute attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>. If you send or receive messages by using the Windows Communication Foundation (WCF) infrastructure, you should also apply the DataContractAttribute to any classes that hold and manipulate data sent in messages. For more information about data contracts, see <a href=\"../topic/using%20data%20contracts\" data-linktype=\"relative-path\">Using Data Contracts</a>.  </p>\n<p> You must also apply the <a class=\"xref\" href=\"system.runtime.serialization.datamemberattribute\" data-linktype=\"relative-path\">DataMemberAttribute</a> to any field, property, or event that holds values you want to serialize. By applying the DataContractAttribute, you explicitly enable the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a> to serialize and deserialize the data.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> You can apply the <a class=\"xref\" href=\"system.runtime.serialization.datamemberattribute\" data-linktype=\"relative-path\">DataMemberAttribute</a> to private fields. Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.  </p>\n</div>\n<p> For more information about data contracts, see the topics listed in <a href=\"../topic/using%20data%20contracts\" data-linktype=\"relative-path\">Using Data Contracts</a>.  </p>\n<h3 class=\"accented\" id=\"data-contracts\">Data Contracts</h3>\n<p> A <em>data contract</em> is an abstract description of a set of fields with a name and data type for each field. The data contract exists outside of any single implementation to allow services on different platforms to interoperate. As long as the data passed between the services conforms to the same contract, all the services can process the data. This processing is also known as a <em>loosely coupled system</em>. A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application. For example, the data contract may call for a data type named &quot;Person&quot; that has two text fields, named &quot;FirstName&quot; and &quot;LastName&quot;. To create a data contract, apply the DataContractAttribute to the class and apply the <a class=\"xref\" href=\"system.runtime.serialization.datamemberattribute\" data-linktype=\"relative-path\">DataMemberAttribute</a> to any fields or properties that must be serialized. When serialized, the data conforms to the data contract that is implicitly built into the type.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> A data contract differs significantly from an actual interface in its inheritance behavior. Interfaces are inherited by any derived types. When you apply the DataContractAttribute to a base class, the derived types do not inherit the attribute or the behavior. However, if a derived type has a data contract, the data members of the base class are serialized. However, you must apply the <a class=\"xref\" href=\"system.runtime.serialization.datamemberattribute\" data-linktype=\"relative-path\">DataMemberAttribute</a> to new members in a derived class to make them serializable.  </p>\n</div>\n<h3 class=\"accented\" id=\"xml-schema-documents-and-the-svcutil-tool\">XML Schema Documents and the SvcUtil Tool</h3>\n<p> If you are exchanging data with other services, you must describe the data contract. For the current version of the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>, an XML schema can be used to define data contracts. (Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the <a href=\"../topic/servicemodel%20metadata%20utility%20tool%20(svcutil.exe)\" data-linktype=\"relative-path\">ServiceModel Metadata Utility Tool (Svcutil.exe)</a> with the <strong>/dconly</strong> command line option. When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly. Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts. In this case, the <strong>/dconly</strong> command line option is not required.  </p>\n<p> If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes. If you examine those classes, you find that the DataContractAttribute has been applied. You can use those classes to create a new application to process data that must be exchanged with other services.  </p>\n<p> You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an Windows Communication Foundation (WCF) client. The generated code includes types that are marked with the DataContractAttribute.  </p>\n<h3 class=\"accented\" id=\"reusing-existing-types\">Reusing Existing Types</h3>\n<p> A data contract has two basic requirements: a stable name and a list of members. The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract. By default, when you apply the DataContractAttribute to a class, it uses the class name as the local name and the class&#39;s namespace (prefixed with &quot;<a href=\"http://schemas.datacontract.org/2004/07/\" data-linktype=\"external\">http://schemas.datacontract.org/2004/07/</a>&quot;) as the namespace URI. You can override the defaults by setting the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute#System_Runtime_Serialization_DataContractAttribute_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute#System_Runtime_Serialization_DataContractAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> properties. You can also change the namespace by applying the <a class=\"xref\" href=\"system.runtime.serialization.contractnamespaceattribute\" data-linktype=\"relative-path\">ContractNamespaceAttribute</a> to the namespace. Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract. By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In any code, you can use the word <code>DataContract</code> instead of the longer DataContractAttribute.  </p>\n</div>\n<h3 class=\"accented\" id=\"versioning\">Versioning</h3>\n<p> A data contract can also accommodate later versions of itself. That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched. To do this, implement the <a class=\"xref\" href=\"system.runtime.serialization.iextensibledataobject\" data-linktype=\"relative-path\">IExtensibleDataObject</a> interface.  </p>\n<p> For more information about versioning, see <a href=\"../topic/data%20contract%20versioning\" data-linktype=\"relative-path\">Data Contract Versioning</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_DataContractAttribute__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataContractAttribute()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute\" data-linktype=\"relative-path\">DataContractAttribute</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataContractAttribute ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_DataContractAttribute_IsNameSetExplicitly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsNameSetExplicitly</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether <span class=\"xref\">stem.Runtime.Serialization.DataContractAttribute.Name*</span> has been explicitly set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsNameSetExplicitly { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <code>true</code> if the name has been explicitly set; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_DataContractAttribute_IsNamespaceSetExplicitly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsNamespaceSetExplicitly</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether <span class=\"xref\">stem.Runtime.Serialization.DataContractAttribute.Namespace*</span> has been explicitly set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsNamespaceSetExplicitly { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <code>true</code> if the namespace has been explicitly set; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_DataContractAttribute_IsReference\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsReference</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether to preserve object reference data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsReference { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to keep object reference data using standard XML; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <code>IsReference</code> property to instruct the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a> to insert XML constructs that preserve object reference information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_DataContractAttribute_IsReferenceSetExplicitly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsReferenceSetExplicitly</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether <span class=\"xref\">stem.Runtime.Serialization.DataContractAttribute.IsReference*</span> has been explicitly set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsReferenceSetExplicitly { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the reference has been explicitly set; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_DataContractAttribute_Name\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Name</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the data contract for the type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Name { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The local name of a data contract. The default is the name of the class that the attribute is applied to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Name property is used to give a name to a data contract, which is the name of the type in XML schema. For more information, see<a href=\"../topic/data%20contract%20names\" data-linktype=\"relative-path\">Data Contract Names</a>.  </p>\n<p> By default, the name of a data contract is the name of the type that the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute\" data-linktype=\"relative-path\">DataContractAttribute</a> is applied to. However, there may be reasons to change this default name. One reason is to allow an existing type to process data that must conform to an existing data contract. For example, there exists a type named <code>Person</code> but the data contract, embodied in an XML schema, requires that the name be <code>Customer</code>. The contract can be satisfied by setting the property value to <code>Customer</code>.  </p>\n<p> A second reason is to allow the generation of names that are invalid as type names. For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name. For instance, the string &quot;$value&quot; is disallowed as a type name but is allowed as a Name property value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_DataContractAttribute_Namespace\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Namespace</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the namespace for the data contract for the type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Namespace { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The namespace of the contract.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.  </p>\n<div class=\"TIP\"><h5>Tip</h5><p> For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server. Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the “root namespace,” named after the project). Adding this prefix causes the client and server namespaces to be different for the same type. The solution is to set the Namespace property to “”, or to explicitly set the data contract namespace in this property.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Serialization.DataContractAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute.IsReference\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute.Name\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractAttribute.Namespace\">\r\n<meta name=\"APILocation\" content=\"System.Runtime.Serialization.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"b2c782bc-1851-6f98-e356-e8b2318a257c\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the . To make their type serializable, type authors must define a data contract for their ty…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.serialization/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.DataContractAttribute\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Serialization.DataContractAttribute.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Serialization.DataContractAttribute","System.Runtime.Serialization.DataContractAttribute..ctor","System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly","System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly","System.Runtime.Serialization.DataContractAttribute.IsReference","System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly","System.Runtime.Serialization.DataContractAttribute.Name","System.Runtime.Serialization.DataContractAttribute.Namespace"],"api_location":["System.Runtime.Serialization.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.DataContractAttribute","System::Runtime::Serialization::DataContractAttribute","System.Runtime.Serialization.DataContractAttribute.#ctor","System::Runtime::Serialization::DataContractAttribute::#ctor","System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly","System::Runtime::Serialization::DataContractAttribute::IsNameSetExplicitly","System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly","System::Runtime::Serialization::DataContractAttribute::IsNamespaceSetExplicitly","System.Runtime.Serialization.DataContractAttribute.IsReference","System::Runtime::Serialization::DataContractAttribute::IsReference","System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly","System::Runtime::Serialization::DataContractAttribute::IsReferenceSetExplicitly","System.Runtime.Serialization.DataContractAttribute.Name","System::Runtime::Serialization::DataContractAttribute::Name","System.Runtime.Serialization.DataContractAttribute.Namespace","System::Runtime::Serialization::DataContractAttribute::Namespace"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"b2c782bc-1851-6f98-e356-e8b2318a257c","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractAttribute.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataContractAttribute class | Microsoft Docs","_op_ogTitle":"DataContractAttribute class","description":"Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the . To make their type serializable, type authors must define a data contract for their ty…","toc_asset_id":"api/_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.DataContractAttribute","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.datacontractattribute","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.datacontractattribute","fileRelativePath":"api/System.Runtime.Serialization.DataContractAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}