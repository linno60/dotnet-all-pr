{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">TreeViewCancelEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeCheck\" data-linktype=\"relative-path\">BeforeCheck</a>, <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeCollapse\" data-linktype=\"relative-path\">BeforeCollapse</a>, <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeExpand\" data-linktype=\"relative-path\">BeforeExpand</a>, or <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeSelect\" data-linktype=\"relative-path\">BeforeSelect</a> event of a <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void TreeViewCancelEventHandler(object sender, TreeViewCancelEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">System.Delegate</a></span></div><span class=\"lang-csharp\">TreeViewCancelEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to change the collapse state of a <a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a> so that all the checked nodes are visible. First, all the nodes are collapsed, and a handler is added to the <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeExpand\" data-linktype=\"relative-path\">System.Windows.Forms.TreeView.BeforeExpand</a> event. Next, all the nodes are expanded. The <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeExpand\" data-linktype=\"relative-path\">System.Windows.Forms.TreeView.BeforeExpand</a> event handler determines whether a given node has child nodes that are checked. If a node does not have checked children, the expansion is canceled for that node. In order to allow normal node expansion when the plus sign next to a node is clicked, the <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeExpand\" data-linktype=\"relative-path\">System.Windows.Forms.TreeView.BeforeExpand</a> event handler is then removed.  </p>\n<p> This behavior can also be implemented by handling the <a class=\"xref\" href=\"system.windows.forms.treeview#System_Windows_Forms_TreeView_BeforeCollapse\" data-linktype=\"relative-path\">System.Windows.Forms.TreeView.BeforeCollapse</a> event, as illustrated in the example for that topic.  </p>\n<pre><code class=\"lang-vb\" name=\"TreeViewShowCheckedNodes1#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic Class Form1\n    Inherits Form\n    Private treeView1 As TreeView\n    Private showCheckedNodesButton As Button\n\n    Public Sub New()\n        treeView1 = New TreeView\n        showCheckedNodesButton = New Button\n\n        Me.SuspendLayout()\n\n        &#39; Initialize treeView1.\n        treeView1.Location = New Point(0, 25)\n        treeView1.Size = New Size(292, 248)\n        treeView1.Anchor = AnchorStyles.Top Or AnchorStyles.Left Or AnchorStyles.Bottom Or AnchorStyles.Right\n        treeView1.CheckBoxes = True\n\n        &#39; Add nodes to treeView1.\n        Dim node As TreeNode\n        Dim x As Integer\n        For x = 0 To 3\n            &#39; Add a root node.\n            node = treeView1.Nodes.Add(String.Format(&quot;Node{0}&quot;, x * 4))\n            Dim y As Integer\n            For y = 1 To 4\n                &#39; Add a node as a child of the previously added node.\n                node = node.Nodes.Add(String.Format(&quot;Node{0}&quot;, x * 4 + y))\n            Next y\n        Next x\n\n        &#39; Set the checked state of one of the nodes to\n        &#39; demonstrate the showCheckedNodesButton button behavior.\n        treeView1.Nodes(1).Nodes(0).Nodes(0).Checked = True\n\n        &#39; Initialize showCheckedNodesButton.\n        showCheckedNodesButton.Size = New Size(144, 24)\n        showCheckedNodesButton.Text = &quot;Show Checked Nodes&quot;\n        AddHandler showCheckedNodesButton.Click, AddressOf showCheckedNodesButton_Click\n\n        &#39; Initialize the form.\n        Me.ClientSize = New Size(292, 273)\n        Me.Controls.AddRange(New Control() {showCheckedNodesButton, treeView1})\n\n        Me.ResumeLayout(False)\n    End Sub &#39;New\n\n    &lt;STAThreadAttribute()&gt; _\n    Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub &#39;Main\n\n    Private Sub showCheckedNodesButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Disable redrawing of treeView1 to prevent flickering \n        &#39; while changes are made.\n        treeView1.BeginUpdate()\n\n        &#39; Collapse all nodes of treeView1.\n        treeView1.CollapseAll()\n\n        &#39; Add the CheckForCheckedChildren event handler to the BeforeExpand event.\n        AddHandler treeView1.BeforeExpand, AddressOf CheckForCheckedChildren\n\n        &#39; Expand all nodes of treeView1. Nodes without checked children are \n        &#39; prevented from expanding by the checkForCheckedChildren event handler.\n        treeView1.ExpandAll()\n\n        &#39; Remove the checkForCheckedChildren event handler from the BeforeExpand \n        &#39; event so manual node expansion will work correctly.\n        RemoveHandler treeView1.BeforeExpand, AddressOf CheckForCheckedChildren\n\n        &#39; Enable redrawing of treeView1.\n        treeView1.EndUpdate()\n    End Sub &#39;showCheckedNodesButton_Click\n\n    &#39; Prevent expansion of a node that does not have any checked child nodes.\n    Private Sub CheckForCheckedChildren(ByVal sender As Object, ByVal e As TreeViewCancelEventArgs)\n        If Not HasCheckedChildNodes(e.Node) Then\n            e.Cancel = True\n        End If\n    End Sub &#39;CheckForCheckedChildren\n\n    &#39; Returns a value indicating whether the specified \n    &#39; TreeNode has checked child nodes.\n    Private Function HasCheckedChildNodes(ByVal node As TreeNode) As Boolean\n        If node.Nodes.Count = 0 Then\n            Return False\n        End If\n        Dim childNode As TreeNode\n        For Each childNode In node.Nodes\n            If childNode.Checked Then\n                Return True\n            End If\n            &#39; Recursively check the children of the current child node.\n            If HasCheckedChildNodes(childNode) Then\n                Return True\n            End If\n        Next childNode\n        Return False\n    End Function &#39;HasCheckedChildNodes\n\nEnd Class &#39;Form1 \n</code></pre><pre><code class=\"lang-cpp\" name=\"TreeViewShowCheckedNodes1#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class Form1: public Form\n{\nprivate:\n   TreeView^ treeView1;\n   Button^ showCheckedNodesButton;\n   TreeViewCancelEventHandler^ checkForCheckedChildren;\n\npublic:\n   Form1()\n   {\n      treeView1 = gcnew TreeView;\n      showCheckedNodesButton = gcnew Button;\n      checkForCheckedChildren = gcnew TreeViewCancelEventHandler( this, &amp;Form1::CheckForCheckedChildrenHandler );\n      this-&gt;SuspendLayout();\n      \n      // Initialize treeView1.\n      treeView1-&gt;Location = Point(0,25);\n      treeView1-&gt;Size = System::Drawing::Size( 292, 248 );\n      treeView1-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(AnchorStyles::Top | AnchorStyles::Left | AnchorStyles::Bottom | AnchorStyles::Right);\n      treeView1-&gt;CheckBoxes = true;\n      \n      // Add nodes to treeView1.\n      TreeNode^ node;\n      for ( int x = 0; x &lt; 3; ++x )\n      {\n         \n         // Add a root node.\n         node = treeView1-&gt;Nodes-&gt;Add( String::Format( &quot;Node{0}&quot;, x * 4 ) );\n         for ( int y = 1; y &lt; 4; ++y )\n         {\n            \n            // Add a node as a child of the previously added node.\n            node = node-&gt;Nodes-&gt;Add( String::Format( &quot;Node{0}&quot;, x * 4 + y ) );\n\n         }\n      }\n      \n      // Set the checked state of one of the nodes to\n      // demonstrate the showCheckedNodesButton button behavior.\n      treeView1-&gt;Nodes[ 1 ]-&gt;Nodes[ 0 ]-&gt;Nodes[ 0 ]-&gt;Checked = true;\n      \n      // Initialize showCheckedNodesButton.\n      showCheckedNodesButton-&gt;Size = System::Drawing::Size( 144, 24 );\n      showCheckedNodesButton-&gt;Text = &quot;Show Checked Nodes&quot;;\n      showCheckedNodesButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::showCheckedNodesButton_Click );\n      \n      // Initialize the form.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 273 );\n      array&lt;Control^&gt;^temp0 = {showCheckedNodesButton,treeView1};\n      this-&gt;Controls-&gt;AddRange( temp0 );\n      this-&gt;ResumeLayout( false );\n   }\n\nprivate:\n   void showCheckedNodesButton_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Disable redrawing of treeView1 to prevent flickering \n      // while changes are made.\n      treeView1-&gt;BeginUpdate();\n      \n      // Collapse all nodes of treeView1.\n      treeView1-&gt;CollapseAll();\n      \n      // Add the checkForCheckedChildren event handler to the BeforeExpand event.\n      treeView1-&gt;BeforeExpand += checkForCheckedChildren;\n      \n      // Expand all nodes of treeView1. Nodes without checked children are \n      // prevented from expanding by the checkForCheckedChildren event handler.\n      treeView1-&gt;ExpandAll();\n      \n      // Remove the checkForCheckedChildren event handler from the BeforeExpand \n      // event so manual node expansion will work correctly.\n      treeView1-&gt;BeforeExpand -= checkForCheckedChildren;\n      \n      // Enable redrawing of treeView1.\n      treeView1-&gt;EndUpdate();\n   }\n\n   // Prevent expansion of a node that does not have any checked child nodes.\n   void CheckForCheckedChildrenHandler( Object^ /*sender*/, TreeViewCancelEventArgs^ e )\n   {\n      if (  !HasCheckedChildNodes( e-&gt;Node ) )\n            e-&gt;Cancel = true;\n   }\n\n\n   // Returns a value indicating whether the specified \n   // TreeNode has checked child nodes.\n   bool HasCheckedChildNodes( TreeNode^ node )\n   {\n      if ( node-&gt;Nodes-&gt;Count == 0 )\n            return false;\n\n      System::Collections::IEnumerator^ myEnum = node-&gt;Nodes-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         TreeNode^ childNode = safe_cast&lt;TreeNode^&gt;(myEnum-&gt;Current);\n         if ( childNode-&gt;Checked )\n                  return true;\n\n         // Recursively check the children of the current child node.\n         if ( HasCheckedChildNodes( childNode ) )\n                  return true;\n      }\n\n      return false;\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"TreeViewShowCheckedNodes1#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : Form\n{\n    private TreeView treeView1;\n    private Button showCheckedNodesButton;\n    private TreeViewCancelEventHandler checkForCheckedChildren;\n\n    public Form1()\n    {\n        treeView1 = new TreeView();\n        showCheckedNodesButton = new Button();\n        checkForCheckedChildren = \n            new TreeViewCancelEventHandler(CheckForCheckedChildrenHandler);\n\n        this.SuspendLayout();\n\n        // Initialize treeView1.\n        treeView1.Location = new Point(0, 25);\n        treeView1.Size = new Size(292, 248);\n        treeView1.Anchor = AnchorStyles.Top | AnchorStyles.Left | \n            AnchorStyles.Bottom | AnchorStyles.Right;\n        treeView1.CheckBoxes = true;\n\n        // Add nodes to treeView1.\n        TreeNode node;\n        for (int x = 0; x &lt; 3; ++x)\n        {\n            // Add a root node.\n            node = treeView1.Nodes.Add(String.Format(&quot;Node{0}&quot;, x*4));\n            for (int y = 1; y &lt; 4; ++y)\n            {\n                // Add a node as a child of the previously added node.\n                node = node.Nodes.Add(String.Format(&quot;Node{0}&quot;, x*4 + y));\n            }\n        }\n\n        // Set the checked state of one of the nodes to\n        // demonstrate the showCheckedNodesButton button behavior.\n        treeView1.Nodes[1].Nodes[0].Nodes[0].Checked = true;\n\n        // Initialize showCheckedNodesButton.\n        showCheckedNodesButton.Size = new Size(144, 24);\n        showCheckedNodesButton.Text = &quot;Show Checked Nodes&quot;;\n        showCheckedNodesButton.Click += \n            new EventHandler(showCheckedNodesButton_Click);\n\n        // Initialize the form.\n        this.ClientSize = new Size(292, 273);\n        this.Controls.AddRange(new Control[] \n            { showCheckedNodesButton, treeView1 } );\n\n        this.ResumeLayout(false);\n    }\n\n    [STAThreadAttribute()]\n    static void Main() \n    {\n        Application.Run(new Form1());\n    }\n\n    private void showCheckedNodesButton_Click(object sender, EventArgs e)\n    {\n        // Disable redrawing of treeView1 to prevent flickering \n        // while changes are made.\n        treeView1.BeginUpdate();\n\n        // Collapse all nodes of treeView1.\n        treeView1.CollapseAll();\n\n        // Add the checkForCheckedChildren event handler to the BeforeExpand event.\n        treeView1.BeforeExpand += checkForCheckedChildren;\n\n        // Expand all nodes of treeView1. Nodes without checked children are \n        // prevented from expanding by the checkForCheckedChildren event handler.\n        treeView1.ExpandAll();\n\n        // Remove the checkForCheckedChildren event handler from the BeforeExpand \n        // event so manual node expansion will work correctly.\n        treeView1.BeforeExpand -= checkForCheckedChildren;\n\n        // Enable redrawing of treeView1.\n        treeView1.EndUpdate();\n    }\n\n    // Prevent expansion of a node that does not have any checked child nodes.\n    private void CheckForCheckedChildrenHandler(object sender, \n        TreeViewCancelEventArgs e)\n    {\n        if (!HasCheckedChildNodes(e.Node)) e.Cancel = true;\n    }\n\n    // Returns a value indicating whether the specified \n    // TreeNode has checked child nodes.\n    private bool HasCheckedChildNodes(TreeNode node)\n    {\n        if (node.Nodes.Count == 0) return false;\n        foreach (TreeNode childNode in node.Nodes)\n        {\n            if (childNode.Checked) return true;\n            // Recursively check the children of the current child node.\n            if (HasCheckedChildNodes(childNode)) return true;\n        }\n        return false;\n    }\n\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a <a class=\"xref\" href=\"system.windows.forms.treeviewcanceleventargs\" data-linktype=\"relative-path\">TreeViewCancelEventArgs</a> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.TreeViewCancelEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewCancelEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewCancelEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewCancelEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewCancelEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TreeViewCancelEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"b65a3535-2aac-bc4c-e7b5-6f6a5ed60462\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the , , , or  event of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.TreeViewCancelEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.TreeViewCancelEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.TreeViewCancelEventHandler","System.Windows.Forms.TreeViewCancelEventHandler..ctor","System.Windows.Forms.TreeViewCancelEventHandler.Invoke","System.Windows.Forms.TreeViewCancelEventHandler.BeginInvoke","System.Windows.Forms.TreeViewCancelEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.TreeViewCancelEventHandler","System::Windows::Forms::TreeViewCancelEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"b65a3535-2aac-bc4c-e7b5-6f6a5ed60462","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TreeViewCancelEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TreeViewCancelEventHandler delegate | Microsoft Docs","_op_ogTitle":"TreeViewCancelEventHandler delegate","description":"Represents the method that will handle the , , , or  event of a .\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.TreeViewCancelEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.treeviewcanceleventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.treeviewcanceleventhandler","fileRelativePath":"api/System.Windows.Forms.TreeViewCancelEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}