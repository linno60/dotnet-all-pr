{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">InvokeMethodOptions</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies options for invoking a management method.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class InvokeMethodOptions : System.Management.ManagementOptions</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementoptions\" data-linktype=\"relative-path\">ManagementOptions</a></span></div><span class=\"lang-csharp\">InvokeMethodOptions</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_Timeout\" data-linktype=\"relative-path\">Timeout</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example invokes the <strong>Win32_Process::Create</strong> method to start a new process of Calc.exe. The InvokeMethodOptions class is used to invoke the method.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_InvokeMethodOptions#1\">Imports System\nImports System.Management\n\n&#39; This sample demonstrates invoking\n&#39; a WMI method using parameter objects\nClass InvokeMethod\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the object on which the\n        &#39; method will be invoked\n        Dim processClass As _\n            New ManagementClass(&quot;root\\CIMV2&quot;, _\n            &quot;Win32_Process&quot;, _\n            Nothing)\n\n        &#39; Get an input parameters object for this method\n        Dim inParams As ManagementBaseObject = _\n            processClass.GetMethodParameters(&quot;Create&quot;)\n\n        &#39; Fill in input parameter values\n        inParams(&quot;CommandLine&quot;) = &quot;calc.exe&quot;\n\n        &#39; Method Options\n        Dim methodOptions As New InvokeMethodOptions( _\n            Nothing, System.TimeSpan.MaxValue)\n\n        &#39; Execute the method\n        Dim outParams As ManagementBaseObject = _\n            processClass.InvokeMethod( _\n            &quot;Create&quot;, inParams, methodOptions)\n\n        &#39; Display results\n        &#39; Note: The return code of the method \n        &#39; is provided in the &quot;returnValue&quot; property\n        &#39; of the outParams object\n        Console.WriteLine( _\n            &quot;Creation of calculator process returned: {0}&quot;, _\n            outParams(&quot;returnValue&quot;))\n        Console.WriteLine(&quot;Process ID: {0}&quot;, _\n            outParams(&quot;processId&quot;))\n\n        Return 0\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_InvokeMethodOptions#1\">using System;\nusing System.Management;\n\n// This sample demonstrates invoking \n// a WMI method using parameter objects\npublic class InvokeMethod \n{    \n    public static void Main() \n    {\n\n        // Get the object on which the method will be invoked\n        ManagementClass processClass = \n            new ManagementClass(&quot;Win32_Process&quot;);\n\n        // Get an input parameters object for this method\n        ManagementBaseObject inParams =\n            processClass.GetMethodParameters(&quot;Create&quot;);\n\n        // Fill in input parameter values\n        inParams[&quot;CommandLine&quot;] = &quot;calc.exe&quot;;\n\n        // Method Options\n        InvokeMethodOptions methodOptions = new \n            InvokeMethodOptions(null, \n            System.TimeSpan.MaxValue);\n\n        // Execute the method\n        ManagementBaseObject outParams =\n            processClass.InvokeMethod(&quot;Create&quot;,\n            inParams, methodOptions);\n\n        // Display results\n        // Note: The return code of the method is\n        // provided in the &quot;returnValue&quot; property\n        // of the outParams object\n        Console.WriteLine(\n            &quot;Creation of calculator process returned: &quot;\n            + outParams[&quot;returnValue&quot;]);\n        Console.WriteLine(&quot;Process ID: &quot; \n            + outParams[&quot;processId&quot;]);\n    }\n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Management_InvokeMethodOptions__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Management_InvokeMethodOptions__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokeMethodOptions()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.invokemethodoptions\" data-linktype=\"relative-path\">InvokeMethodOptions</a> class for the [InvokeMethod(String,â€‚Object&lt;xref href=&quot;stem.Management.ManagementObject.InvokeMethod%28System.String%2CSystem.Object%5B%5D%29&quot;&gt; operation, using default values. This is the default constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InvokeMethodOptions ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h3 class=\"accented\" id=\"net-framework-security\">.NET Framework Security</h3>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../topic/using%20libraries%20from%20partially%20trusted%20code\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Management_InvokeMethodOptions__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Management_InvokeMethodOptions__ctor_System_Management_ManagementNamedValueCollection_System_TimeSpan_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokeMethodOptions(ManagementNamedValueCollection, TimeSpan)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.invokemethodoptions\" data-linktype=\"relative-path\">InvokeMethodOptions</a> class for an invoke operation using the specified values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InvokeMethodOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementnamedvaluecollection\" data-linktype=\"relative-path\">ManagementNamedValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A provider-specific, named-value pairs object to be passed through to the provider.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>timeout</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The length of time to let the operation perform before it times out. The default value is <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>. Setting this parameter will invoke the operation semisynchronously.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h3 class=\"accented\" id=\"net-framework-security\">.NET Framework Security</h3>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../topic/using%20libraries%20from%20partially%20trusted%20code\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Management_InvokeMethodOptions_Clone_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Management_InvokeMethodOptions_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a copy of the object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The cloned object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h3 class=\"accented\" id=\"net-framework-security\">.NET Framework Security</h3>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../topic/using%20libraries%20from%20partially%20trusted%20code\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.InvokeMethodOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.InvokeMethodOptions\">\r\n<meta name=\"APIName\" content=\"System.Management.InvokeMethodOptions..ctor\">\r\n<meta name=\"APIName\" content=\"System.Management.InvokeMethodOptions.Clone\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"6db8e372-32f5-54e7-f0f3-9f224988d2d1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies options for invoking a management method.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.management/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.InvokeMethodOptions\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.InvokeMethodOptions.yml","open_to_public_contributors":false,"api_name":["System.Management.InvokeMethodOptions","System.Management.InvokeMethodOptions..ctor","System.Management.InvokeMethodOptions.Clone"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.InvokeMethodOptions","System::Management::InvokeMethodOptions","System.Management.InvokeMethodOptions.#ctor","System::Management::InvokeMethodOptions::#ctor","System.Management.InvokeMethodOptions.Clone","System::Management::InvokeMethodOptions::Clone"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"6db8e372-32f5-54e7-f0f3-9f224988d2d1","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Management/InvokeMethodOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InvokeMethodOptions class | Microsoft Docs","_op_ogTitle":"InvokeMethodOptions class","description":"Specifies options for invoking a management method.\n","toc_asset_id":"api/_splitted/System.Management/toc.json","toc_rel":"_splitted/System.Management/toc.json","source_url":"","ms.assetid":"System.Management.InvokeMethodOptions","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.management.invokemethodoptions","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.management.invokemethodoptions","fileRelativePath":"api/System.Management.InvokeMethodOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}