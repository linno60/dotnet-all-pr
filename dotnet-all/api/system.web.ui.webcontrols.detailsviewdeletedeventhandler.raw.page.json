{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DetailsViewDeletedEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DetailsViewDeletedEventHandler(object sender, DetailsViewDeletedEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DetailsViewDeletedEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to programmatically add a DetailsViewDeletedEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewDeletedEventHandlerInline#1\">\n&lt;%@ page language=&quot;VB&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  \n  &lt;script runat=&quot;server&quot;&gt;\n  \n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n      \n      &#39; Create a new DetailsView object.\n      Dim customerDetailsView As New DetailsView()\n      \n      &#39; Set the DetailsView object&#39;s properties.\n      customerDetailsView.ID = &quot;CustomerDetailsView&quot;\n      customerDetailsView.DataSourceID = &quot;DetailsViewSource&quot;\n      customerDetailsView.AutoGenerateRows = True\n      customerDetailsView.AutoGenerateDeleteButton = True\n      customerDetailsView.AllowPaging = True\n      customerDetailsView.PagerSettings.Mode = _\n        PagerButtons.NextPrevious\n      \n      Dim keyArray() As String = {&quot;CustomerID&quot;}\n      customerDetailsView.DataKeyNames = keyArray\n\n      &#39; Programmatically register the event-handling method\n      &#39; for the ItemDeleted event of a DetailsView control.\n      AddHandler customerDetailsView.ItemDeleted, _\n        AddressOf CustomerDetailView_ItemDeleted\n\n      &#39; Add the DetailsView object to the Controls collection\n      &#39; of the PlaceHolder control.\n      DetailsViewPlaceHolder.Controls.Add(customerDetailsView)\n\n    End Sub\n\n    Sub CustomerDetailView_ItemDeleted(ByVal sender As Object, _\n      ByVal e As DetailsViewDeletedEventArgs)\n  \n      &#39; Use the Exception property to determine whether an exception\n      &#39; occurred during the delete operation.\n      If e.Exception Is Nothing Then\n    \n        &#39; Use the AffectedRows property to determine the numbers of\n        &#39; rows affected by the delete operation.\n        If e.AffectedRows = 1 Then\n      \n          MessageLabel.Text = e.AffectedRows.ToString() _\n            &amp; &quot; record deleted successfully.&quot;\n      \n        Else\n              \n          MessageLabel.Text = e.AffectedRows.ToString() _\n            &amp; &quot; records deleted successfully.&quot;\n      \n        End If\n    \n      Else\n    \n        &#39; Insert the code to handle the exception.\n        MessageLabel.Text = e.Exception.Message\n      \n        &#39; Use the ExceptionHandled property to indicate that the \n        &#39; exception is already handled.\n        e.ExceptionHandled = True\n    \n      End If\n    \n    End Sub\n  \n  &lt;/script&gt;\n    \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeletedEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeletedEventHandler Example&lt;/h3&gt;\n        \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:PlaceHolder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewDeletedEventHandlerInline#1\">\n&lt;%@ page language=&quot;C#&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  \n  &lt;script runat=&quot;server&quot;&gt;\n  \n    void Page_Load(Object sender, EventArgs e)\n    {\n      \n      // Create a new DetailsView object.\n      DetailsView customerDetailsView = new DetailsView();\n      \n      // Set the DetailsView object&#39;s properties.\n      customerDetailsView.ID = &quot;CustomerDetailsView&quot;;\n      customerDetailsView.DataSourceID = &quot;DetailsViewSource&quot;;\n      customerDetailsView.AutoGenerateRows = true;\n      customerDetailsView.AutoGenerateDeleteButton = true;\n      customerDetailsView.AllowPaging = true;\n      customerDetailsView.PagerSettings.Mode = \n        PagerButtons.NextPrevious;\n      customerDetailsView.DataKeyNames = new String[1] { &quot;CustomerID&quot; };\n\n      // Programmatically register the event-handling method\n      // for the ItemDeleted event of a DetailsView control.\n      customerDetailsView.ItemDeleted += \n        new DetailsViewDeletedEventHandler(\n        this.CustomerDetailView_ItemDeleted);\n\n      // Add the DetailsView object to the Controls collection\n      // of the PlaceHolder control.\n      DetailsViewPlaceHolder.Controls.Add(customerDetailsView);\n\n    }\n\n    void CustomerDetailView_ItemDeleted(Object sender, \n      DetailsViewDeletedEventArgs e)\n    {\n      // Use the Exception property to determine whether an exception\n      // occurred during the delete operation.\n      if (e.Exception == null)\n      {\n        // Use the AffectedRows property to determine the numbers of\n        // rows affected by the delete operation.\n        if (e.AffectedRows == 1)\n        {\n          MessageLabel.Text = e.AffectedRows.ToString() \n            + &quot; record deleted successfully.&quot;;\n        }\n        else\n        {\n          MessageLabel.Text = e.AffectedRows.ToString() \n            + &quot; records deleted successfully.&quot;;\n        }\n      }\n      else\n      {\n        // Insert the code to handle the exception.\n        MessageLabel.Text = e.Exception.Message;\n\n        // Use the ExceptionHandled property to indicate that the \n        // exception is already handled.\n        e.ExceptionHandled = true;\n      }\n    }\n  \n  &lt;/script&gt;\n    \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeletedEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeletedEventHandler Example&lt;/h3&gt;\n        \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:PlaceHolder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to declaratively add a DetailsViewDeletedEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewDeletedEventHandler#1\">\n&lt;%@ page language=&quot;VB&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  \n  &lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ItemDeleted(ByVal sender As Object, _\n      ByVal e As DetailsViewDeletedEventArgs)\n  \n      &#39; Use the Exception property to determine whether an exception\n      &#39; occurred during the delete operation.\n      If e.Exception Is Nothing Then\n    \n        &#39; Use the AffectedRows property to determine the numbers of\n        &#39; rows affected by the delete operation.\n        If e.AffectedRows = 1 Then\n      \n          MessageLabel.Text = e.AffectedRows.ToString() _\n            &amp; &quot; record deleted successfully.&quot;\n      \n        Else\n              \n          MessageLabel.Text = e.AffectedRows.ToString() _\n            &amp; &quot; records deleted successfully.&quot;\n      \n        End If\n    \n      Else\n    \n        &#39; Insert the code to handle the exception.\n        MessageLabel.Text = e.Exception.Message\n      \n        &#39; Use the ExceptionHandled property to indicate that the \n        &#39; exception is already handled.\n        e.ExceptionHandled = True\n    \n      End If\n    \n    End Sub\n  \n  &lt;/script&gt;\n    \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeletedEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeletedEventHandler Example&lt;/h3&gt;\n        \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          runat=&quot;server&quot;&gt;\n        \n          &lt;pagersettings mode=&quot;NextPrevious&quot;/&gt;\n        \n        &lt;/asp:detailsview&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewDeletedEventHandler#1\">\n&lt;%@ page language=&quot;C#&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  \n  &lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemDeleted(Object sender, \n      DetailsViewDeletedEventArgs e)\n    {\n      // Use the Exception property to determine whether an exception\n      // occurred during the delete operation.\n      if (e.Exception == null)\n      {\n        // Use the AffectedRows property to determine the numbers of\n        // rows affected by the delete operation.\n        if (e.AffectedRows == 1)\n        {\n          MessageLabel.Text = e.AffectedRows.ToString() \n            + &quot; record deleted successfully.&quot;;\n        }\n        else\n        {\n          MessageLabel.Text = e.AffectedRows.ToString() \n            + &quot; records deleted successfully.&quot;;\n        }\n      }\n      else\n      {\n        // Insert the code to handle the exception.\n        MessageLabel.Text = e.Exception.Message;\n\n        // Use the ExceptionHandled property to indicate that the \n        // exception is already handled.\n        e.ExceptionHandled = true;\n      }\n    }\n  \n  &lt;/script&gt;\n    \n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewDeletedEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewDeletedEventHandler Example&lt;/h3&gt;\n        \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          runat=&quot;server&quot;&gt;\n        \n          &lt;pagersettings mode=&quot;NextPrevious&quot;/&gt;\n        \n        &lt;/asp:detailsview&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          deletecommand=&quot;Delete [Customers] \n            Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a> event when a Delete button (a button with its <code>CommandName</code> property set to &quot;Delete&quot;) within the control is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control deletes the record. This allows you to provide an event handler that performs a custom routine, such as checking the results of a delete operation, whenever this event occurs.  </p>\n<p> When you create a DetailsViewDeletedEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DetailsViewDeletedEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeletedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeletedEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeletedEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeletedEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewDeletedEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"e6e581ec-4ddf-a877-76d5-93f1fe28d6bb\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DetailsViewDeletedEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DetailsViewDeletedEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.DetailsViewDeletedEventHandler","System.Web.UI.WebControls.DetailsViewDeletedEventHandler..ctor","System.Web.UI.WebControls.DetailsViewDeletedEventHandler.Invoke","System.Web.UI.WebControls.DetailsViewDeletedEventHandler.BeginInvoke","System.Web.UI.WebControls.DetailsViewDeletedEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DetailsViewDeletedEventHandler","System::Web::UI::WebControls::DetailsViewDeletedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"e6e581ec-4ddf-a877-76d5-93f1fe28d6bb","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/DetailsViewDeletedEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DetailsViewDeletedEventHandler delegate | Microsoft Docs","_op_ogTitle":"DetailsViewDeletedEventHandler delegate","description":"Represents the method that handles the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DetailsViewDeletedEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.detailsviewdeletedeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.detailsviewdeletedeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.DetailsViewDeletedEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}