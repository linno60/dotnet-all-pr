{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ComponentEditor</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the base class for a custom component editor.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class ComponentEditor</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">ComponentEditor</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.design.windowsformscomponenteditor\" data-linktype=\"relative-path\">WindowsFormsComponentEditor</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates an example ComponentEditor implementation.  </p>\n<pre><code class=\"lang-cs\" name=\"ComponentEditorExample#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Collections;\nusing System.Drawing;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\n// This example demonstrates how to implement a component editor that hosts \n// component pages and associate it with a component. This example also \n// demonstrates how to implement a component page that provides a panel-based \n// control system and Help keyword support.\nnamespace ComponentEditorExample\n{\n    // The ExampleComponentEditor displays two ExampleComponentEditorPage pages.\n    public class ExampleComponentEditor : System.Windows.Forms.Design.WindowsFormsComponentEditor\n    {\n        // This method override returns an type array containing the type of \n        // each component editor page to display.\n        protected override Type[] GetComponentEditorPages()\n        { \n            return new Type[] { typeof(ExampleComponentEditorPage), \n                                typeof(ExampleComponentEditorPage) }; \n        }\n    \n        // This method override returns the index of the page to display when the \n        // component editor is first displayed.\n        protected override int GetInitialComponentEditorPageIndex()\n        { \n            return 1; \n        }\n    }\n    \n    // This example component editor page type provides an example \n    // ComponentEditorPage implementation.\n    internal class ExampleComponentEditorPage : System.Windows.Forms.Design.ComponentEditorPage\n    {\n        Label l1; \n        Button b1; \n        PropertyGrid pg1;\n\n        // Base64-encoded serialized image data for the required component editor page icon.\n        string icon = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuNTAwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5JY29uAgAAAAhJY29uRGF0YQhJY29uU2l6ZQcEAhNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAIAAAAJAwAAAAX8////E1N5c3RlbS5EcmF3aW5nLlNpemUCAAAABXdpZHRoBmhlaWdodAAACAgCAAAAAAAAAAAAAAAPAwAAAD4BAAACAAABAAEAEBAQAAAAAAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgADExAAAgICAAMDAwAA+iPcAY77gACh9kwD/AAAAndPoADpw6wD///8AAAAAAAAAAAAHd3d3d3d3d8IiIiIiIiLHKIiIiIiIiCco///////4Jyj5mfIvIvgnKPnp////+Cco+en7u7v4Jyj56f////gnKPmZ8i8i+Cco///////4JyiIiIiIiIgnJmZmZmZmZifCIiIiIiIiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACw==&quot;;\n\n        public ExampleComponentEditorPage()\n        {\n            // Initialize the page, which inherits from Panel, and its controls.\n            this.Size = new Size( 400, 250 );            \n            this.Icon = DeserializeIconFromBase64Text(icon);\n            this.Text = &quot;Example Page&quot;;\n            \n            b1 = new Button();\n            b1.Size = new Size(200, 20);\n            b1.Location = new Point(200, 0);\n            b1.Text = &quot;Set a random background color&quot;;\n            b1.Click += new EventHandler(this.randomBackColor);\n            this.Controls.Add( b1 );\n\n            l1 = new Label();\n            l1.Size = new Size(190, 20);\n            l1.Location = new Point(4, 2);\n            l1.Text = &quot;Example Component Editor Page&quot;;\n            this.Controls.Add( l1 );\n\n            pg1 = new PropertyGrid();\n            pg1.Size = new Size(400, 280);\n            pg1.Location = new Point(0,30);\n            this.Controls.Add( pg1 );\n        }\n        \n        // This method indicates that the Help button should be enabled for this \n        // component editor page.\n        public override bool SupportsHelp()\n        { \n            return true; \n        }\n\n        // This method is called when the Help button for this component editor page is pressed.\n        // This implementation uses the IHelpService to show the Help topic for a sample keyword.\n        public override void ShowHelp()\n        {\n            // The GetSelectedComponent method of a ComponentEditorPage retrieves the\n            // IComponent associated with the WindowsFormsComponentEditor.\n            IComponent selectedComponent = this.GetSelectedComponent();\n\n            // Retrieve the Site of the component, and return if null.\n            ISite componentSite = selectedComponent.Site;\n            if(componentSite == null)\n                return;\n \n            // Acquire the IHelpService to display a help topic using a indexed keyword lookup.\n            IHelpService helpService = (IHelpService)componentSite.GetService(typeof(IHelpService));\n            if (helpService != null)\n                helpService.ShowHelpFromKeyword(&quot;System.Windows.Forms.ComboBox&quot;);\n        }\n\n        // The LoadComponent method is raised when the ComponentEditorPage is displayed.\n        protected override void LoadComponent()\n        { \n            this.pg1.SelectedObject = this.Component; \n        }\n    \n        // The SaveComponent method is raised when the WindowsFormsComponentEditor is closing \n        // or the current ComponentEditorPage is closing.\n        protected override void SaveComponent()\n        {\n        }\n\n        // If the associated component is a Control, this method sets the BackColor to a random color.\n        // This method is invoked by the button on this ComponentEditorPage.\n        private void randomBackColor(object sender, EventArgs e)\n        {\n            if( typeof(System.Windows.Forms.Control).IsAssignableFrom( this.Component.GetType() ) )\n            {\n                // Sets the background color of the Control associated with the\n                // WindowsFormsComponentEditor to a random color.\n                Random rnd = new Random();\n                ((System.Windows.Forms.Control)this.Component).BackColor = \n                    Color.FromArgb(rnd.Next(255), rnd.Next(255), rnd.Next(255));\n                pg1.Refresh();\n            }\n        }\n\n        // This method can be used to retrieve an Icon from a block \n        // of Base64-encoded text.\n        private Icon DeserializeIconFromBase64Text(string text)\n        {\n            Icon img = null;\n            byte[] memBytes = Convert.FromBase64String(text);\n            IFormatter formatter = new BinaryFormatter();\n            MemoryStream stream = new MemoryStream(memBytes);\n            img = (Icon)formatter.Deserialize(stream);\n            stream.Close();\n            return img;\n        }\n    }\n    \n    // This example control is associated with the ExampleComponentEditor \n    // through the following EditorAttribute.\n    [EditorAttribute(typeof(ExampleComponentEditor), typeof(ComponentEditor))]\n    public class ExampleUserControl : System.Windows.Forms.UserControl\n    {\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ComponentEditorExample#1\">Imports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Collections\nImports System.Drawing\nImports System.IO\nImports System.Runtime.Serialization\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n&#39; This example demonstrates how to implement a component editor that hosts \n&#39; component pages and associate it with a component. This example also \n&#39; demonstrates how to implement a component page that provides a panel-based \n&#39; control system and Help keyword support.\n&#39; The ExampleComponentEditor displays two ExampleComponentEditorPage pages.\nPublic Class ExampleComponentEditor\n    Inherits System.Windows.Forms.Design.WindowsFormsComponentEditor\n\n    &#39; This method override returns an type array containing the type of \n    &#39; each component editor page to display.\n    Protected Overrides Function GetComponentEditorPages() As Type()\n        Return New Type() {GetType(ExampleComponentEditorPage), GetType(ExampleComponentEditorPage)}\n    End Function\n\n    &#39; This method override returns the index of the page to display when the \n    &#39; component editor is first displayed.\n    Protected Overrides Function GetInitialComponentEditorPageIndex() As Integer\n        Return 1\n    End Function\n\n    Public Overloads Overrides Function EditComponent(ByVal context As System.ComponentModel.ITypeDescriptorContext, ByVal component As Object) As Boolean\n\n    End Function\nEnd Class\n\n&#39; This example component editor page type provides an example \n&#39; ComponentEditorPage implementation.\nFriend Class ExampleComponentEditorPage\n    Inherits System.Windows.Forms.Design.ComponentEditorPage\n    Private l1 As Label\n    Private b1 As Button\n    Private pg1 As PropertyGrid\n\n    &#39; Base64-encoded serialized image data for the required component editor page icon.\n    Private icondata As String = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuNTAwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5JY29uAgAAAAhJY29uRGF0YQhJY29uU2l6ZQcEAhNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAIAAAAJAwAAAAX8////E1N5c3RlbS5EcmF3aW5nLlNpemUCAAAABXdpZHRoBmhlaWdodAAACAgCAAAAAAAAAAAAAAAPAwAAAD4BAAACAAABAAEAEBAQAAAAAAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgADExAAAgICAAMDAwAA+iPcAY77gACh9kwD/AAAAndPoADpw6wD///8AAAAAAAAAAAAHd3d3d3d3d8IiIiIiIiLHKIiIiIiIiCco///////4Jyj5mfIvIvgnKPnp////+Cco+en7u7v4Jyj56f////gnKPmZ8i8i+Cco///////4JyiIiIiIiIgnJmZmZmZmZifCIiIiIiIiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACw==&quot;\n\n    Public Sub New()\n        &#39; Initialize the page, which inherits from Panel, and its controls.\n        Me.Size = New Size(400, 250)\n        Me.Icon = DeserializeIconFromBase64Text(icondata)\n        Me.Text = &quot;Example Page&quot;\n\n        b1 = New Button\n        b1.Size = New Size(200, 20)\n        b1.Location = New Point(200, 0)\n        b1.Text = &quot;Set a random background color&quot;\n        AddHandler b1.Click, AddressOf Me.randomBackColor\n        Me.Controls.Add(b1)\n\n        l1 = New Label\n        l1.Size = New Size(190, 20)\n        l1.Location = New Point(4, 2)\n        l1.Text = &quot;Example Component Editor Page&quot;\n        Me.Controls.Add(l1)\n\n        pg1 = New PropertyGrid\n        pg1.Size = New Size(400, 280)\n        pg1.Location = New Point(0, 30)\n        Me.Controls.Add(pg1)\n    End Sub\n\n    &#39; This method indicates that the Help button should be enabled for this \n    &#39; component editor page.\n    Public Overrides Function SupportsHelp() As Boolean\n        Return True\n    End Function\n\n    &#39; This method is called when the Help button for this component editor page is pressed.\n    &#39; This implementation uses the IHelpService to show the Help topic for a sample keyword.\n    Public Overrides Sub ShowHelp()\n        &#39; The GetSelectedComponent method of a ComponentEditorPage retrieves the\n        &#39; IComponent associated with the WindowsFormsComponentEditor.\n        Dim selectedComponent As IComponent = Me.GetSelectedComponent()\n\n        &#39; Retrieve the Site of the component, and return if null.\n        Dim componentSite As ISite = selectedComponent.Site\n        If componentSite Is Nothing Then\n            Return\n        End If\n        &#39; Acquire the IHelpService to display a help topic using a indexed keyword lookup.\n        Dim helpService As IHelpService = CType(componentSite.GetService(GetType(IHelpService)), IHelpService)\n        If (helpService IsNot Nothing) Then\n            helpService.ShowHelpFromKeyword(&quot;System.Windows.Forms.ComboBox&quot;)\n        End If\n    End Sub\n\n    &#39; The LoadComponent method is raised when the ComponentEditorPage is displayed.\n    Protected Overrides Sub LoadComponent()\n        Me.pg1.SelectedObject = Me.Component\n    End Sub\n\n    &#39; The SaveComponent method is raised when the WindowsFormsComponentEditor is closing \n    &#39; or the current ComponentEditorPage is closing.\n    Protected Overrides Sub SaveComponent()\n    End Sub\n\n    &#39; If the associated component is a Control, this method sets the BackColor to a random color.\n    &#39; This method is invoked by the button on this ComponentEditorPage.\n    Private Sub randomBackColor(ByVal sender As Object, ByVal e As EventArgs)\n        If GetType(System.Windows.Forms.Control).IsAssignableFrom(CType(Me.Component, Object).GetType()) Then\n            &#39; Sets the background color of the Control associated with the\n            &#39; WindowsFormsComponentEditor to a random color.\n            Dim rnd As New Random\n            CType(Me.Component, System.Windows.Forms.Control).BackColor = Color.FromArgb(rnd.Next(255), rnd.Next(255), rnd.Next(255))\n            pg1.Refresh()\n        End If\n    End Sub\n\n    &#39; This method can be used to retrieve an Icon from a block \n    &#39; of Base64-encoded text.\n    Private Function DeserializeIconFromBase64Text(ByVal [text] As String) As icon\n        Dim img As Icon = Nothing\n        Dim memBytes As Byte() = Convert.FromBase64String([text])\n        Dim formatter As New BinaryFormatter\n        Dim stream As New MemoryStream(memBytes)\n        img = CType(formatter.Deserialize(stream), Icon)\n        stream.Close()\n        Return img\n    End Function\nEnd Class\n\n&#39; This example control is associated with the ExampleComponentEditor \n&#39; through the following EditorAttribute.\n&lt;EditorAttribute(GetType(ExampleComponentEditor), GetType(ComponentEditor))&gt; _\nPublic Class ExampleUserControl\n    Inherits System.Windows.Forms.UserControl\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"ComponentEditorExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Collections;\nusing namespace System::Drawing;\nusing namespace System::IO;\nusing namespace System::Runtime::Serialization;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\n\n// This example demonstrates how to implement a component editor that hosts \n// component pages and associate it with a component. This example also \n// demonstrates how to implement a component page that provides a panel-based \n// control system and Help keyword support.\n\n   ref class ExampleComponentEditorPage;\n\n   // The ExampleComponentEditor displays two ExampleComponentEditorPage pages.\n   public ref class ExampleComponentEditor: public System::Windows::Forms::Design::WindowsFormsComponentEditor\n   {\n\n   protected:\n      // This method override returns an type array containing the type of \n      // each component editor page to display.\n      virtual array&lt;Type^&gt;^ GetComponentEditorPages() override\n      {\n         array&lt;Type^&gt;^temp0 = {ExampleComponentEditorPage::typeid,ExampleComponentEditorPage::typeid};\n         return temp0;\n      }\n\n      // This method override returns the index of the page to display when the \n      // component editor is first displayed.\n   protected:\n      virtual int GetInitialComponentEditorPageIndex() override\n      {\n         return 1;\n      }\n   };\n\n   // This example component editor page type provides an example \n   // ComponentEditorPage implementation.\n   private ref class ExampleComponentEditorPage: public System::Windows::Forms::Design::ComponentEditorPage\n   {\n   private:\n      Label^ l1;\n      Button^ b1;\n      PropertyGrid^ pg1;\n\n      // Base64-encoded serialized image data for the required component editor page icon.\n      String^ icon;\n\n   public:\n      ExampleComponentEditorPage()\n      {\n         String^ temp = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuNTAwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5JY29uAgAAAAhJY29uRGF0Y&quot;\n         &quot;QhJY29uU2l6ZQcEAhNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAIAAAAJAwAAAAX8////E1N5c3RlbS5EcmF3aW5nLlNpemUCAAAABXdpZHRoBmhlaWdodAAACAgCAAAAAAAAAAAAAAAPAwAAAD4BAAACAAABAAEAEBAQAAAAAAAoAQAAFgAAACgAAAAQAAAAIA&quot;\n         &quot;AAAAEABAAAAAAAgAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgADExAAAgICAAMDAwAA+iPcAY77gACh9kwD/AAAAndPoADpw6wD///8AAAAAAAAAAAAHd3d3d3d3d8IiIiIiIiLHKIiIiIiIiCco///////4Jyj5mfIvIvgnKPn&quot;\n         &quot;p////+Cco+en7u7v4Jyj56f////gnKPmZ8i8i+Cco///////4JyiIiIiIiIgnJmZmZmZmZifCIiIiIiIiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACw==&quot;;\n         icon = temp;\n         \n         // Initialize the page, which inherits from Panel, and its controls.\n         this-&gt;Size = System::Drawing::Size( 400, 250 );\n         this-&gt;Icon = DeserializeIconFromBase64Text( icon );\n         this-&gt;Text = &quot;Example Page&quot;;\n         b1 = gcnew Button;\n         b1-&gt;Size = System::Drawing::Size( 200, 20 );\n         b1-&gt;Location = Point(200,0);\n         b1-&gt;Text = &quot;Set a random background color&quot;;\n         b1-&gt;Click += gcnew EventHandler( this, &amp;ExampleComponentEditorPage::randomBackColor );\n         this-&gt;Controls-&gt;Add( b1 );\n         l1 = gcnew Label;\n         l1-&gt;Size = System::Drawing::Size( 190, 20 );\n         l1-&gt;Location = Point(4,2);\n         l1-&gt;Text = &quot;Example Component Editor Page&quot;;\n         this-&gt;Controls-&gt;Add( l1 );\n         pg1 = gcnew PropertyGrid;\n         pg1-&gt;Size = System::Drawing::Size( 400, 280 );\n         pg1-&gt;Location = Point(0,30);\n         this-&gt;Controls-&gt;Add( pg1 );\n      }\n\n      // This method indicates that the Help button should be enabled for this \n      // component editor page.\n      virtual bool SupportsHelp() override\n      {\n         return true;\n      }\n\n      // This method is called when the Help button for this component editor page is pressed.\n      // This implementation uses the IHelpService to show the Help topic for a sample keyword.\n   public:\n      virtual void ShowHelp() override\n      {\n         // The GetSelectedComponent method of a ComponentEditorPage retrieves the\n         // IComponent associated with the WindowsFormsComponentEditor.\n         IComponent^ selectedComponent = this-&gt;GetSelectedComponent();\n\n         // Retrieve the Site of the component, and return if null.\n         ISite^ componentSite = selectedComponent-&gt;Site;\n         if ( componentSite == nullptr )\n                  return;\n\n         // Acquire the IHelpService to display a help topic using a indexed keyword lookup.\n         IHelpService^ helpService = dynamic_cast&lt;IHelpService^&gt;(componentSite-&gt;GetService( IHelpService::typeid ));\n         if ( helpService != nullptr )\n                  helpService-&gt;ShowHelpFromKeyword( &quot;System.Windows.Forms.ComboBox&quot; );\n      }\n\n   protected:\n\n      // The LoadComponent method is raised when the ComponentEditorPage is displayed.\n      virtual void LoadComponent() override\n      {\n         this-&gt;pg1-&gt;SelectedObject = this-&gt;Component;\n      }\n\n      // The SaveComponent method is raised when the WindowsFormsComponentEditor is closing \n      // or the current ComponentEditorPage is closing.\n      virtual void SaveComponent() override {}\n\n   private:\n\n      // If the associated component is a Control, this method sets the BackColor to a random color.\n      // This method is invoked by the button on this ComponentEditorPage.\n      void randomBackColor( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         if ( System::Windows::Forms::Control::typeid-&gt;IsAssignableFrom( this-&gt;::Component::GetType() ) )\n         {\n            // Sets the background color of the Control associated with the\n            // WindowsFormsComponentEditor to a random color.\n            Random^ rnd = gcnew Random;\n            (dynamic_cast&lt;System::Windows::Forms::Control^&gt;(this-&gt;Component))-&gt;BackColor = Color::FromArgb( rnd-&gt;Next( 255 ), rnd-&gt;Next( 255 ), rnd-&gt;Next( 255 ) );\n            pg1-&gt;Refresh();\n         }\n      }\n\n      // This method can be used to retrieve an Icon from a block \n      // of Base64-encoded text.\n      System::Drawing::Icon^ DeserializeIconFromBase64Text( String^ text )\n      {\n         System::Drawing::Icon^ img = nullptr;\n         array&lt;Byte&gt;^memBytes = Convert::FromBase64String( text );\n         IFormatter^ formatter = gcnew BinaryFormatter;\n         MemoryStream^ stream = gcnew MemoryStream( memBytes );\n         img = dynamic_cast&lt;System::Drawing::Icon^&gt;(formatter-&gt;Deserialize( stream ));\n         stream-&gt;Close();\n         return img;\n      }\n   };\n\n   // This example control is associated with the ExampleComponentEditor \n   // through the following EditorAttribute.\n\n   [EditorAttribute(ExampleComponentEditor::typeid,ComponentEditor::typeid)]\n   public ref class ExampleUserControl: public System::Windows::Forms::UserControl{};\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A component editor is used to edit a component as a whole and can be used to implement a user interface similar to that of the property pages. You associate a component editor with a component by using the <a class=\"xref\" href=\"system.componentmodel.editorattribute\" data-linktype=\"relative-path\">EditorAttribute</a> attribute.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_ComponentEditor__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_ComponentEditor__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ComponentEditor()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.componenteditor\" data-linktype=\"relative-path\">ComponentEditor</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ComponentEditor ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_ComponentEditor_EditComponent_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_ComponentEditor_EditComponent_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EditComponent(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Edits the component and returns a value indicating whether the component was modified.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool EditComponent (object component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The component to be edited.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the component was modified; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method opens an advanced user interface that you can use to edit the component. The default implementation opens a dialog box with a collection of component editor control objects and a user interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_ComponentEditor_EditComponent_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_ComponentEditor_EditComponent_System_ComponentModel_ITypeDescriptorContext_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EditComponent(ITypeDescriptorContext, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Edits the component and returns a value indicating whether the component was modified based upon a given context.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract bool EditComponent (System.ComponentModel.ITypeDescriptorContext context, object component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An optional context object that can be used to obtain further information about the edit.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The component to be edited.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the component was modified; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can override this method to provide a custom editing user interface for a component. From within this method you can display a dialog box or other type of user interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.ComponentEditor.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ComponentEditor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ComponentEditor..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ComponentEditor.EditComponent\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"107b5acb-ddab-d8a1-d597-2395a0574974\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the base class for a custom component editor.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.ComponentEditor\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.ComponentEditor.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.ComponentEditor","System.ComponentModel.ComponentEditor..ctor","System.ComponentModel.ComponentEditor.EditComponent"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.ComponentEditor","System::ComponentModel::ComponentEditor","System.ComponentModel.ComponentEditor.#ctor","System::ComponentModel::ComponentEditor::#ctor","System.ComponentModel.ComponentEditor.EditComponent","System::ComponentModel::ComponentEditor::EditComponent"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"107b5acb-ddab-d8a1-d597-2395a0574974","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel/ComponentEditor.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ComponentEditor class | Microsoft Docs","_op_ogTitle":"ComponentEditor class","description":"Provides the base class for a custom component editor.\n","toc_asset_id":"api/_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.ComponentEditor","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.componenteditor","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.componenteditor","fileRelativePath":"api/System.ComponentModel.ComponentEditor.html"},"themesRelativePathToOutputRoot":"_themes/"}