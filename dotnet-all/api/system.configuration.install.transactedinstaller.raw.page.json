{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">TransactedInstaller</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines an installer that either succeeds completely or fails and leaves the computer in its initial state.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class TransactedInstaller : System.Configuration.Install.Installer</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">System.Configuration.Install.Installer</a></span></div><span class=\"lang-csharp\">TransactedInstaller</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterInstall\" data-linktype=\"relative-path\">AfterInstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterRollback\" data-linktype=\"relative-path\">AfterRollback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterUninstall\" data-linktype=\"relative-path\">AfterUninstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeInstall\" data-linktype=\"relative-path\">BeforeInstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeRollback\" data-linktype=\"relative-path\">BeforeRollback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeUninstall\" data-linktype=\"relative-path\">BeforeUninstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_System_Collections_IDictionary_\" data-linktype=\"relative-path\">Commit(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Committed\" data-linktype=\"relative-path\">Committed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Committing\" data-linktype=\"relative-path\">Committing</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_HelpText\" data-linktype=\"relative-path\">HelpText</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers\" data-linktype=\"relative-path\">Installers</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterInstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterInstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterRollback_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterRollback(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterUninstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterUninstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeInstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeInstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeRollback_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeRollback(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeUninstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeUninstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnCommitted_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnCommitted(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnCommitting_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnCommitting(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent\" data-linktype=\"relative-path\">Parent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Rollback_System_Collections_IDictionary_\" data-linktype=\"relative-path\">Rollback(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates the <a class=\"xref\" href=\"system.configuration.install.transactedinstaller#System_Configuration_Install_TransactedInstaller__ctor_\" data-linktype=\"relative-path\">TransactedInstaller</a>, <a class=\"xref\" href=\"system.configuration.install.transactedinstaller#System_Configuration_Install_TransactedInstaller_Install_\" data-linktype=\"relative-path\">Install</a> and <a class=\"xref\" href=\"system.configuration.install.transactedinstaller#System_Configuration_Install_TransactedInstaller_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> methods of the TransactedInstaller class.  </p>\n<p> This example provides an implementation similar to that of <a href=\"../topic/installutil.exe%20(installer%20tool)\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a>. It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assembly&#39;s options are used if there is a previous assembly in the list. If either the &quot;/u&quot; or &quot;/uninstall&quot; option is specified, the assemblies are uninstalled. If the &quot;/?&quot; or &quot;/help&quot; option is provided, the help information is displayed to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"TransactedInstaller#1\">   array&lt;String^&gt;^ args = Environment::GetCommandLineArgs();\n   ArrayList^ myOptions = gcnew ArrayList;\n   String^ myOption;\n   bool toUnInstall = false;\n   bool toPrintHelp = false;\n   TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n   AssemblyInstaller^ myAssemblyInstaller;\n   InstallContext^ myInstallContext;\n\n   try\n   {\n      for ( int i = 1; i &lt; args-&gt;Length; i++ )\n      {\n         // Process the arguments.\n         if ( args[ i ]-&gt;StartsWith( &quot;/&quot; ) || args[ i ]-&gt;StartsWith( &quot;-&quot; ) )\n         {\n            myOption = args[ i ]-&gt;Substring( 1 );\n            // Determine whether the option is to &#39;uninstall&#39; an assembly.\n            if ( String::Compare( myOption, &quot;u&quot;, true ) == 0 ||\n               String::Compare( myOption, &quot;uninstall&quot;, true ) == 0 )\n            {\n               toUnInstall = true;\n               continue;\n            }\n            // Determine whether the option is for printing help information.\n            if ( String::Compare( myOption, &quot;?&quot;, true ) == 0 ||\n               String::Compare( myOption, &quot;help&quot;, true ) == 0 )\n            {\n               toPrintHelp = true;\n               continue;\n            }\n            // Add the option encountered to the list of all options\n            // encountered for the current assembly.\n            myOptions-&gt;Add( myOption );\n         }\n         else\n         {\n            // Determine whether the assembly file exists.\n            if (  !File::Exists( args[ i ] ) )\n            {\n               // If assembly file doesn&#39;t exist then print error.\n               Console::WriteLine( &quot;\\nError : {0} - Assembly file doesn&#39;t exist.&quot;,\n                  args[ i ] );\n               return 0;\n            }\n            \n            // Create a instance of &#39;AssemblyInstaller&#39; that installs the given assembly.\n            myAssemblyInstaller =\n               gcnew AssemblyInstaller( args[ i ],\n                  (array&lt;String^&gt;^)( myOptions-&gt;ToArray( String::typeid ) ) );\n            // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n            myTransactedInstaller-&gt;Installers-&gt;Add( myAssemblyInstaller );\n         }\n      }\n      \n      // If user requested help or didn&#39;t provide any assemblies to install\n      // then print help message.\n      if ( toPrintHelp || myTransactedInstaller-&gt;Installers-&gt;Count == 0 )\n      {\n         PrintHelpMessage();\n         return 0;\n      }\n      \n      // Create a instance of &#39;InstallContext&#39; with the options specified.\n      myInstallContext =\n         gcnew InstallContext( &quot;Install.log&quot;,\n            (array&lt;String^&gt;^)( myOptions-&gt;ToArray( String::typeid ) ) );\n      myTransactedInstaller-&gt;Context = myInstallContext;\n      \n      // Install or Uninstall an assembly depending on the option provided.\n      if (  !toUnInstall )\n      {\n         myTransactedInstaller-&gt;Install( gcnew Hashtable );\n      }\n      else\n      {\n         myTransactedInstaller-&gt;Uninstall( nullptr );\n      }\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;\\nException raised : {0}&quot;, e-&gt;Message );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"TransactedInstaller#1\">      Dim options As New ArrayList()\n      Dim myOption As String\n      Dim toUnInstall As Boolean = False\n      Dim toPrintHelp As Boolean = False\n      Dim myTransactedInstaller As New TransactedInstaller()\n      Dim myAssemblyInstaller As AssemblyInstaller\n      Dim myInstallContext As InstallContext\n\n      Try\n         Dim i As Integer\n         For i = 1 To args.Length - 1\n            &#39; Process the arguments.\n            If args(i).StartsWith(&quot;/&quot;) Or args(i).StartsWith(&quot;-&quot;) Then\n               myOption = args(i).Substring(1)\n               &#39; Determine whether the option is to &#39;uninstall&#39; an assembly.\n               If String.Compare(myOption, &quot;u&quot;, True) = 0 Or _\n                  String.Compare(myOption,&quot;uninstall&quot;, True) = 0 Then\n                  toUnInstall = True\n                  GoTo ContinueFor1\n               End If\n               &#39; Determine whether the option is for printing help information.\n               If String.Compare(myOption, &quot;?&quot;, True) = 0 Or _\n                  String.Compare(myOption, &quot;help&quot;, True) = 0 Then\n                  toPrintHelp = True\n                  GoTo ContinueFor1\n               End If\n               &#39; Add the option encountered to the list of all options\n               &#39; encountered for the current assembly.\n               options.Add(myOption)\n            Else\n               &#39; Determine whether the assembly file exists.\n               If Not File.Exists(args(i)) Then\n                  &#39; If assembly file doesn&#39;t exist then print error.\n                  Console.WriteLine(ControlChars.Newline + _\n                           &quot;Error : {0} - Assembly file doesn&#39;t exist.&quot;, args(i))\n                  Return\n               End If\n\n               &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs the given assembly.\n               myAssemblyInstaller = New AssemblyInstaller(args(i), _\n                              CType(options.ToArray(GetType(String)), String()))\n               &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n               myTransactedInstaller.Installers.Add(myAssemblyInstaller)\n            End If\n         ContinueFor1:\n         Next i\n         &#39; If user requested help or didn&#39;t provide any assemblies to install\n         &#39; then print help message.\n         If toPrintHelp Or myTransactedInstaller.Installers.Count = 0 Then\n            PrintHelpMessage()\n            Return\n         End If\n\n         &#39; Create a instance of &#39;InstallContext&#39; with the options specified.\n         myInstallContext = New InstallContext(&quot;Install.log&quot;, _\n                     CType(options.ToArray(GetType(String)), String()))\n         myTransactedInstaller.Context = myInstallContext\n\n         &#39; Install or Uninstall an assembly depending on the option provided.\n         If Not toUnInstall Then\n            myTransactedInstaller.Install(New Hashtable())\n         Else\n            myTransactedInstaller.Uninstall(Nothing)\n         End If\n      Catch e As Exception\n         Console.WriteLine(ControlChars.Newline + &quot;Exception raised : {0}&quot;, e.Message)\n      End Try\n</code></pre><pre><code class=\"lang-cs\" name=\"TransactedInstaller#1\">      ArrayList myOptions = new ArrayList();\n      String myOption;\n      bool toUnInstall = false;\n      bool toPrintHelp = false;\n      TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n      AssemblyInstaller myAssemblyInstaller;\n      InstallContext myInstallContext;\n\n      try\n      {\n         for(int i = 0; i &lt; args.Length; i++)\n         {\n            // Process the arguments.\n            if(args[i].StartsWith(&quot;/&quot;) || args[i].StartsWith(&quot;-&quot;))\n            {\n               myOption = args[i].Substring(1);\n               // Determine whether the option is to &#39;uninstall&#39; an assembly.\n               if(String.Compare(myOption, &quot;u&quot;, true) == 0 ||\n                  String.Compare(myOption, &quot;uninstall&quot;, true) == 0)\n               {\n                  toUnInstall = true;\n                  continue;\n               }\n               // Determine whether the option is for printing help information.\n               if(String.Compare(myOption, &quot;?&quot;, true) == 0 ||\n                  String.Compare(myOption, &quot;help&quot;, true) == 0)\n               {\n                  toPrintHelp = true;\n                  continue;\n               }\n               // Add the option encountered to the list of all options\n               // encountered for the current assembly.\n               myOptions.Add(myOption);\n            }\n            else\n            {\n               // Determine whether the assembly file exists.\n               if(!File.Exists(args[i]))\n               {\n                  // If assembly file doesn&#39;t exist then print error.\n                  Console.WriteLine(&quot;\\nError : {0} - Assembly file doesn&#39;t exist.&quot;,\n                     args[i]);\n                  return;\n               }\n            \n               // Create a instance of &#39;AssemblyInstaller&#39; that installs the given assembly.\n               myAssemblyInstaller = \n                  new AssemblyInstaller(args[i], \n                  (string[]) myOptions.ToArray(typeof(string)));\n               // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.  \n               myTransactedInstaller.Installers.Add(myAssemblyInstaller);\n            }\n         }\n         // If user requested help or didn&#39;t provide any assemblies to install\n         // then print help message.\n         if(toPrintHelp || myTransactedInstaller.Installers.Count == 0)\n         {\n            PrintHelpMessage();\n            return;\n         }\n\n         // Create a instance of &#39;InstallContext&#39; with the options specified.\n         myInstallContext = \n            new InstallContext(&quot;Install.log&quot;, \n            (string[]) myOptions.ToArray(typeof(string)));\n         myTransactedInstaller.Context = myInstallContext;\n\n         // Install or Uninstall an assembly depending on the option provided.\n         if(!toUnInstall)\n            myTransactedInstaller.Install(new Hashtable());\n         else\n            myTransactedInstaller.Uninstall(null);\n      }\n      catch(Exception e)\n      {\n         Console.WriteLine(&quot;\\nException raised : {0}&quot;, e.Message);\n      }  \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>To run installers in a transaction, add them to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> property of this TransactedInstaller instance.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_TransactedInstaller__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TransactedInstaller()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TransactedInstaller ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_TransactedInstaller_Install_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Install(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs the installation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Install (System.Collections.IDictionary savedState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>savedState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> in which this method saves information needed to perform a commit, rollback, or uninstall operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>savedState</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The installation failed, and is being rolled back.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method calls the Install method of each installer contained in the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> property of this instance. The <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> object referenced by the <code>savedState</code> parameter is updated to reflect the status of the installation after the contained installers have run. If all the Install methods succeed, the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_\" data-linktype=\"relative-path\">Commit</a> method is called. Otherwise, the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Rollback_\" data-linktype=\"relative-path\">Rollback</a> method is called for each installer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_TransactedInstaller_Uninstall_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Uninstall(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes an installation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Uninstall (System.Collections.IDictionary savedState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>savedState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that contains the state of the computer after the installation completed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Call this method to remove a previously completed installation. This Uninstall method calls the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> method of each installer in the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> property to uninstall any resources set during installation. Any exceptions during uninstallation are ignored.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Install_\" data-linktype=\"relative-path\">Install</a> and <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_\" data-linktype=\"relative-path\">Commit</a> methods save the state of the computer after the installations, the file containing the <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> from the <code>savedState</code> parameter might have been deleted at some point after the installation was complete. If the file is deleted, the <code>savedState</code> parameter is <code>null</code>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Install.TransactedInstaller.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.TransactedInstaller\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.TransactedInstaller..ctor\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.TransactedInstaller.Install\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.TransactedInstaller.Uninstall\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.Install.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"4cc99fe0-62cd-f94d-fd08-12aaed9a7c45\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines an installer that either succeeds completely or fails and leaves the computer in its initial state.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.configuration.install/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.Install.TransactedInstaller\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Install.TransactedInstaller.yml","open_to_public_contributors":false,"api_name":["System.Configuration.Install.TransactedInstaller","System.Configuration.Install.TransactedInstaller..ctor","System.Configuration.Install.TransactedInstaller.Install","System.Configuration.Install.TransactedInstaller.Uninstall"],"api_location":["System.Configuration.Install.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.Install.TransactedInstaller","System::Configuration::Install::TransactedInstaller","System.Configuration.Install.TransactedInstaller.#ctor","System::Configuration::Install::TransactedInstaller::#ctor","System.Configuration.Install.TransactedInstaller.Install","System::Configuration::Install::TransactedInstaller::Install","System.Configuration.Install.TransactedInstaller.Uninstall","System::Configuration::Install::TransactedInstaller::Uninstall"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"4cc99fe0-62cd-f94d-fd08-12aaed9a7c45","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/TransactedInstaller.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TransactedInstaller class | Microsoft Docs","_op_ogTitle":"TransactedInstaller class","description":"Defines an installer that either succeeds completely or fails and leaves the computer in its initial state.\n","toc_asset_id":"api/_splitted/System.Configuration.Install/toc.json","toc_rel":"_splitted/System.Configuration.Install/toc.json","source_url":"","ms.assetid":"System.Configuration.Install.TransactedInstaller","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.install.transactedinstaller","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.install.transactedinstaller","fileRelativePath":"api/System.Configuration.Install.TransactedInstaller.html"},"themesRelativePathToOutputRoot":"_themes/"}