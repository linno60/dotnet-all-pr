{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDeserializationCallback</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Indicates that a class is to be notified when deserialization of the entire object graph has been completed. Note that this interface is not called when deserializing with the XmlSerializer (System.Xml.Serialization.XmlSerializer).</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic interface IDeserializationCallback</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<pre><code class=\"lang-vb\" name=\"IDeserializationCallback Interface Example#1\">Imports System\nImports System.IO\nImports System.Collections\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\n\n&#39; This class is serializable and will have its OnDeserialization method\n&#39; called after each instance of this class is deserialized.\n&lt;Serializable()&gt; Class Circle\n   Implements IDeserializationCallback\n   Private m_radius As Double\n\n   &#39; To reduce the size of the serialization stream, the field below is \n   &#39; not serialized. This field is calculated when an object is constructed\n   &#39; or after an instance of this class is deserialized.\n   &lt;NonSerialized()&gt; Public m_area As Double\n\n   Public Sub New(ByVal radius As Double)\n      m_radius = radius\n      m_area = Math.PI * radius * radius\n   End Sub\n\n   Private Sub OnDeserialization(ByVal sender As Object) _\n      Implements IDeserializationCallback.OnDeserialization\n      &#39; After being deserialized, initialize the m_area field \n      &#39; using the deserialized m_radius value.\n      m_area = Math.PI * m_radius * m_radius\n   End Sub\n\n   Public Overrides Function ToString() As String\n      Return String.Format(&quot;radius={0}, area={1}&quot;, m_radius, m_area)\n   End Function\nEnd Class\n\n\nClass Class1\n   &lt;STAThread()&gt; Shared Sub Main()\n      Serialize()\n      Deserialize()\n   End Sub\n\n   Shared Sub Serialize()\n      Dim c As New Circle(10)\n      Console.WriteLine(&quot;Object being serialized: &quot; + c.ToString())\n\n      &#39; To serialize the Circle, you must first open a stream for \n      &#39; writing. Use a file stream here.\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n      &#39; Construct a BinaryFormatter and use it \n      &#39; to serialize the data to the stream.\n      Dim formatter As New BinaryFormatter\n      Try\n         formatter.Serialize(fs, c)\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n   End Sub\n\n\n   Shared Sub Deserialize()\n      &#39; Declare the Circle reference\n      Dim c As Circle = Nothing\n\n      &#39; Open the file containing the data that you want to deserialize.\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Open)\n      Try\n         Dim formatter As New BinaryFormatter\n\n         &#39; Deserialize the Circle from the file and \n         &#39; assign the reference to the local variable.\n         c = CType(formatter.Deserialize(fs), Circle)\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n\n      &#39; To prove that the Circle deserialized correctly, display its area.\n      Console.WriteLine(&quot;Object being deserialized: &quot; + c.ToString())\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"IDeserializationCallback Interface Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\n\n// This class is serializable and will have its OnDeserialization method\n// called after each instance of this class is deserialized.\n\n[Serializable]\nref class Circle: public IDeserializationCallback\n{\nprivate:\n   Double m_radius;\n\npublic:\n\n   // To reduce the size of the serialization stream, the field below is \n   // not serialized. This field is calculated when an object is constructed\n   // or after an instance of this class is deserialized.\n\n   [NonSerialized]\n   Double m_area;\n   Circle( Double radius )\n   {\n      m_radius = radius;\n      m_area = Math::PI * radius * radius;\n   }\n\n   virtual void OnDeserialization( Object^ /*sender*/ )\n   {\n      // After being deserialized, initialize the m_area field \n      // using the deserialized m_radius value.\n      m_area = Math::PI * m_radius * m_radius;\n   }\n\n   virtual String^ ToString() override\n   {\n      return String::Format( &quot;radius= {0}, area= {1}&quot;, m_radius, m_area );\n   }\n};\n\nvoid Serialize()\n{\n   Circle^ c = gcnew Circle( 10 );\n   Console::WriteLine( &quot;Object being serialized: {0}&quot;, c );\n\n   // To serialize the Circle, you must first open a stream for \n   // writing. We will use a file stream here.\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n\n   // Construct a BinaryFormatter and use it to serialize the data to the stream.\n   BinaryFormatter^ formatter = gcnew BinaryFormatter;\n   try\n   {\n      formatter-&gt;Serialize( fs, c );\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n}\n\nvoid Deserialize()\n{\n   // Declare the Circle reference.\n   Circle^ c = nullptr;\n\n   // Open the file containing the data that we want to deserialize.\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Open );\n   try\n   {\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n      // Deserialize the Circle from the file and \n      // assign the reference to our local variable.\n      c = dynamic_cast&lt;Circle^&gt;(formatter-&gt;Deserialize( fs ));\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to deserialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n\n   // To prove that the Circle deserialized correctly, display its area.\n   Console::WriteLine( &quot;Object being deserialized: {0}&quot;, c );\n}\n\n[STAThread]\nint main()\n{\n   Serialize();\n   Deserialize();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"IDeserializationCallback Interface Example#1\">using System;\nusing System.IO;\nusing System.Collections;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\n\n// This class is serializable and will have its OnDeserialization method\n// called after each instance of this class is deserialized.\n[Serializable]\nclass Circle : IDeserializationCallback \n{\n    Double m_radius;\n\n    // To reduce the size of the serialization stream, the field below is \n    // not serialized. This field is calculated when an object is constructed\n    // or after an instance of this class is deserialized.\n    [NonSerialized] public Double m_area;\n\n    public Circle(Double radius) \n    {\n        m_radius = radius;\n        m_area = Math.PI * radius * radius;\n    }\n\n    void IDeserializationCallback.OnDeserialization(Object sender) \n    {\n        // After being deserialized, initialize the m_area field \n        // using the deserialized m_radius value.\n        m_area = Math.PI * m_radius * m_radius;\n    }\n\n    public override String ToString() \n    {\n        return String.Format(&quot;radius={0}, area={1}&quot;, m_radius, m_area);\n    }\n}\n\n\nclass Class1 \n{\n    [STAThread]\n    static void Main(string[] args) \n    {\n        Serialize();\n        Deserialize();\n    }\n\n    static void Serialize() \n    {\n        Circle c = new Circle(10);\n        Console.WriteLine(&quot;Object being serialized: &quot; + c.ToString());\n\n        // To serialize the Circle, you must first open a stream for \n        // writing. Use a file stream here.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        // Construct a BinaryFormatter and use it \n        // to serialize the data to the stream.\n        BinaryFormatter formatter = new BinaryFormatter();\n        try \n        {\n            formatter.Serialize(fs, c);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n\n   \n    static void Deserialize() \n    {\n        // Declare the Circle reference.\n        Circle c = null;\n\n        // Open the file containing the data that you want to deserialize.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Open);\n        try \n        {\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Deserialize the Circle from the file and \n            // assign the reference to the local variable.\n            c = (Circle) formatter.Deserialize(fs);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n\n        // To prove that the Circle deserialized correctly, display its area.\n        Console.WriteLine(&quot;Object being deserialized: &quot; + c.ToString());\n    }\n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDeserialization(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Runs when the entire object graph has been deserialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void OnDeserialization (object sender);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sender</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object that initiated the callback. The functionality for this parameter is not currently implemented.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Serialization.IDeserializationCallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDeserializationCallback\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"32194718-40ec-3fae-ebdf-0207fd85f2a1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that a class is to be notified when deserialization of the entire object graph has been completed. Note that this interface is not called when deserializing with the XmlSerializer (System.X…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.serialization/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.IDeserializationCallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Serialization.IDeserializationCallback.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Serialization.IDeserializationCallback","System.Runtime.Serialization.IDeserializationCallback.OnDeserialization"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.IDeserializationCallback","System::Runtime::Serialization::IDeserializationCallback","System.Runtime.Serialization.IDeserializationCallback.OnDeserialization","System::Runtime::Serialization::IDeserializationCallback::OnDeserialization"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"32194718-40ec-3fae-ebdf-0207fd85f2a1","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.Serialization/IDeserializationCallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDeserializationCallback interface | Microsoft Docs","_op_ogTitle":"IDeserializationCallback interface","description":"Indicates that a class is to be notified when deserialization of the entire object graph has been completed. Note that this interface is not called when deserializing with the XmlSerializer (System.X…","toc_asset_id":"api/_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.IDeserializationCallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.ideserializationcallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.ideserializationcallback","fileRelativePath":"api/System.Runtime.Serialization.IDeserializationCallback.html"},"themesRelativePathToOutputRoot":"_themes/"}