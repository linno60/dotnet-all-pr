{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Switch</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an abstract base class to create new debugging and tracing switches.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class Switch</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">Switch</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how to define a new Switch class with four levels of tracing that can be used to trace a call stack. You can use the switch to instrument your application to log each time the method is entered or exited.  </p>\n<p> The first example creates the enumeration used to set the level of the switch.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Switch Example#1\">// The following are possible values for the new switch.\npublic enum class MethodTracingSwitchLevel\n{\n    Off = 0,\n    EnteringMethod = 1,\n    ExitingMethod = 2,\n    Both = 3\n};\n\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Switch Example#1\">// The following are possible values for the new switch.\npublic enum MethodTracingSwitchLevel\n{\n    Off = 0,\n    EnteringMethod = 1,\n    ExitingMethod = 2,\n    Both = 3,\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Switch Example#1\">&#39; The following are possible values for the new switch.\nPublic Enum MethodTracingSwitchLevel\n    Off = 0\n    EnteringMethod = 1\n    ExitingMethod = 2\n    Both = 3\nEnd Enum &#39;MethodTracingSwitchLevel\n</code></pre><p> The following example creates the new switch. The code implements a <code>Level</code> property to set the value of the new switch. <code>Level</code> calls the protected property <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_SwitchSetting_\" data-linktype=\"relative-path\">SwitchSetting</a> that assigns the value to the new switch. This example also implements two assessor properties to get the assigned value of the switch.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Switch Example#2\">public ref class MyMethodTracingSwitch: public Switch\n{\nprotected:\n    bool outExit;\n    bool outEnter;\n    MethodTracingSwitchLevel level;\n\npublic:\n    MyMethodTracingSwitch( String^ displayName, String^ description )\n       : Switch( displayName, description )\n    {}\n\n    property MethodTracingSwitchLevel Level\n    {\n        MethodTracingSwitchLevel get()\n        {\n            return level;\n        }\n\n       void set( MethodTracingSwitchLevel value )\n       {\n           SetSwitchSetting( (int)value );\n       }\n    }\n\nprotected:\n    void SetSwitchSetting( int value )\n    {\n        if ( value &lt; 0 )\n        {\n            value = 0;\n        }\n\n        if ( value &gt; 3 )\n        {\n            value = 3;\n        }\n\n        level = (MethodTracingSwitchLevel)value;\n        outEnter = false;\n        if ((value == (int)MethodTracingSwitchLevel::EnteringMethod) ||\n            (value == (int)MethodTracingSwitchLevel::Both))\n        {\n            outEnter = true;\n        }\n\n        outExit = false;\n        if ((value == (int)MethodTracingSwitchLevel::ExitingMethod) ||\n            (value == (int)MethodTracingSwitchLevel::Both))\n        {\n            outExit = true;\n        }\n    }\n\npublic:\n    property bool OutputExit\n    {\n        bool get()\n        {\n            return outExit;\n        }\n    }\n\n    property bool OutputEnter\n    {\n        bool get()\n        {\n            return outEnter;\n        }\n    }\n};\n\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Switch Example#2\">public class MyMethodTracingSwitch : Switch\n{\n     protected bool outExit;\n     protected bool outEnter;\n     protected MethodTracingSwitchLevel level;\n\n     public MyMethodTracingSwitch(string displayName, string description) :\n         base(displayName, description)\n     {\n     }\n\n     public MethodTracingSwitchLevel Level\n     {\n         get\n         {\n             return level;\n         }\n         set\n         {\n             SetSwitchSetting((int)value);\n         }\n     }\n\n     protected void SetSwitchSetting(int value)\n     {\n         if (value &lt; 0)\n         {\n             value = 0;\n         }\n         if (value &gt; 3)\n         {\n             value = 3;\n         }\n\n         level = (MethodTracingSwitchLevel)value;\n\n         outEnter = false;\n         if ((value == (int)MethodTracingSwitchLevel.EnteringMethod) ||\n             (value == (int)MethodTracingSwitchLevel.Both))\n         {\n             outEnter = true;\n         }\n\n         outExit = false;\n         if ((value == (int)MethodTracingSwitchLevel.ExitingMethod) ||\n             (value == (int)MethodTracingSwitchLevel.Both))\n         {\n             outExit = true;\n         }\n     }\n\n     public bool OutputExit\n     {\n         get\n         {\n             return outExit;\n         }\n     }\n\n     public bool OutputEnter\n     {\n         get\n         {\n             return outEnter;\n         }\n     }\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Switch Example#2\">Public Class MyMethodTracingSwitch\n    Inherits Switch\n    Protected outExit As Boolean\n    Protected outEnter As Boolean\n    Protected myLevel As MethodTracingSwitchLevel\n    \n    Public Sub New(displayName As String, description As String)\n        MyBase.New(displayName, description)\n    End Sub &#39;New\n\n\n    Public Property Level() As MethodTracingSwitchLevel\n        Get\n            Return myLevel\n        End Get\n        Set\n            SetSwitchSetting(CInt(value))\n        End Set\n    End Property\n\n\n    Protected Sub SetSwitchSetting(value As Integer)\n        If value &lt; 0 Then\n            value = 0\n        End If\n        If value &gt; 3 Then\n            value = 3\n        End If\n\n        myLevel = CType(value, MethodTracingSwitchLevel)\n\n        outEnter = False\n        If value = CInt(MethodTracingSwitchLevel.EnteringMethod) Or _\n            value = CInt(MethodTracingSwitchLevel.Both) Then\n\n            outEnter = True\n        End If\n\n        outExit = False\n        If value = CInt(MethodTracingSwitchLevel.ExitingMethod) Or _\n            value = CInt(MethodTracingSwitchLevel.Both) Then\n\n            outExit = True\n        End If\n    End Sub &#39;SetSwitchSetting\n\n\n    Public ReadOnly Property OutputExit() As Boolean\n        Get\n            Return outExit\n        End Get\n    End Property\n\n\n    Public ReadOnly Property OutputEnter() As Boolean\n        Get\n            Return outEnter\n        End Get\n    End Property\nEnd Class &#39;MyMethodTracingSwitch\n</code></pre><p> The following example creates a new switch in <code>Main</code>. It creates a new switch and assigns it a value. Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Switch Example#3\">public ref class Class1\n{\nprivate:\n\n    /* Create an instance of MyMethodTracingSwitch.*/\n    static MyMethodTracingSwitch^ mySwitch =\n        gcnew MyMethodTracingSwitch( &quot;Methods&quot;,&quot;Trace entering and exiting method&quot; );\n\npublic:\n    static void main()\n    {\n        // Add the console listener to see trace messages as console output\n        Trace::Listeners-&gt;Add(gcnew ConsoleTraceListener(true));\n        Debug::AutoFlush = true;\n\n        // Set the switch level to both enter and exit\n        mySwitch-&gt;Level = MethodTracingSwitchLevel::Both;\n\n        // Write a diagnostic message if the switch is set to entering.\n        Debug::WriteLineIf(mySwitch-&gt;OutputEnter, &quot;Entering Main&quot;);\n\n        // Insert code to handle processing here...\n\n        // Write another diagnostic message if the switch is set to exiting.\n        Debug::WriteLineIf(mySwitch-&gt;OutputExit, &quot;Exiting Main&quot;);\n    }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Switch Example#3\">public class Class1\n{\n    /* Create an instance of MyMethodTracingSwitch.*/\n    static MyMethodTracingSwitch mySwitch =\n        new MyMethodTracingSwitch(&quot;Methods&quot;, &quot;Trace entering and exiting method&quot;);\n\n    public static void Main()\n    {\n        // Add the console listener to see trace messages as console output\n        Trace.Listeners.Add(new ConsoleTraceListener(true));\n        Debug.AutoFlush = true;\n\n        // Set the switch level to both enter and exit\n        mySwitch.Level = MethodTracingSwitchLevel.Both;\n\n        // Write a diagnostic message if the switch is set to entering.\n        Debug.WriteLineIf(mySwitch.OutputEnter, &quot;Entering Main&quot;);\n\n        // Insert code to handle processing here...\n\n        // Write another diagnostic message if the switch is set to exiting.\n        Debug.WriteLineIf(mySwitch.OutputExit, &quot;Exiting Main&quot;);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Switch Example#3\">Public Class Class1\n    &#39; Create an instance of MyMethodTracingSwitch.\n    Private Shared mySwitch As New _\n        MyMethodTracingSwitch(&quot;Methods&quot;, &quot;Trace entering and exiting method&quot;)\n\n    Public Shared Sub Main()\n        &#39; Add the console listener to see trace messages as console output\n        Trace.Listeners.Add(New ConsoleTraceListener(True))\n        Debug.AutoFlush = True\n\n        &#39; Set the switch level to both enter and exit\n        mySwitch.Level = MethodTracingSwitchLevel.Both\n\n        &#39; Write a diagnostic message if the switch is set to entering.\n        Debug.WriteLineIf(mySwitch.OutputEnter, &quot;Entering Main&quot;)\n\n        &#39; Insert code to handle processing here...\n\n        &#39; Write another diagnostic message if the switch is set to exiting.\n        Debug.WriteLineIf(mySwitch.OutputExit, &quot;Exiting Main&quot;)\n    End Sub\nEnd Class &#39;MyClass\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A switch provides an efficient mechanism for controlling tracing and debugging output at run time using external settings. The Switch class implements default behavior for switches, allowing you to change the switch level at run time.  </p>\n<p> This class is the base class for the <a class=\"xref\" href=\"system.diagnostics.booleanswitch\" data-linktype=\"relative-path\">BooleanSwitch</a>, <a class=\"xref\" href=\"system.diagnostics.sourceswitch\" data-linktype=\"relative-path\">SourceSwitch</a> and the <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> classes. These switches meet most debugging and tracing needs. For more information about trace switches, see <a href=\"../topic/trace%20switches\" data-linktype=\"relative-path\">Trace Switches</a>.  </p>\n<p> You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  </p>\n<ul>\n<li><p>To enable debugging in C#, add the <code>/d:DEBUG</code> flag to the compiler command line when you compile your code, or you can add <code>#define DEBUG</code> to the top of your file. In Visual Basic, add the <code>/d:DEBUG=True</code> flag to the compiler command line.  </p>\n</li>\n<li><p>To enable tracing using in C#, add the <code>/d:TRACE</code> flag to the compiler command line when you compile your code, or add <code>#define TRACE</code> to the top of your file. In Visual Basic, add the <code>/d:TRACE=True</code> flag to the compiler command line.  </p>\n</li>\n</ul>\n<p> To set the level of your switch, edit the configuration file that corresponds to the name of your application. Within this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. The configuration file should be formatted like the following example:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;switches&gt;  \n      &lt;add name=&quot;mySwitch&quot; value=&quot;true&quot; /&gt;  \n    &lt;/switches&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre><p> This example configuration section defines a <a class=\"xref\" href=\"system.diagnostics.booleanswitch\" data-linktype=\"relative-path\">BooleanSwitch</a> with the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> property set to <code>mySwitch</code> and the <a class=\"xref\" href=\"system.diagnostics.booleanswitch#System_Diagnostics_BooleanSwitch_Enabled_\" data-linktype=\"relative-path\">Enabled</a> value set to <code>true</code>. Within your application, you can use the configured switch value by creating a <a class=\"xref\" href=\"system.diagnostics.booleanswitch\" data-linktype=\"relative-path\">BooleanSwitch</a> with the same name, as shown in the following code example.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Switch Example#4\">private:\n    static BooleanSwitch^ boolSwitch = gcnew BooleanSwitch(&quot;mySwitch&quot;,\n        &quot;Switch in config file&quot;);\n\npublic:\n    static void Main( )\n    {\n        //...\n        Console::WriteLine(&quot;Boolean switch {0} configured as {1}&quot;,\n            boolSwitch-&gt;DisplayName, ((Boolean^)boolSwitch-&gt;Enabled)-&gt;ToString());\n        if (boolSwitch-&gt;Enabled)\n        {\n            //...\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Switch Example#4\">private static BooleanSwitch boolSwitch = new BooleanSwitch(&quot;mySwitch&quot;,\n    &quot;Switch in config file&quot;);\n\npublic static void Main( )\n{\n    //...\n    Console.WriteLine(&quot;Boolean switch {0} configured as {1}&quot;,\n        boolSwitch.DisplayName, boolSwitch.Enabled.ToString());\n    if (boolSwitch.Enabled)\n    {\n        //...\n    }\n}\n</code></pre>\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch__ctor_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Switch(String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.switch\" data-linktype=\"relative-path\">Switch</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected Switch (string displayName, string description);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>displayName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the switch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>description</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The description for the switch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you create a new <a class=\"xref\" href=\"system.diagnostics.switch\" data-linktype=\"relative-path\">Switch</a> object, the value of the <code>displayName</code> parameter is used to find initial switch settings. The default value is an empty string (&quot;&quot;).  </p>\n<p> Within the XML configuration file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. Dynamic changes to the configuration file are not detected while the application is executing. You must stop and restart an application before changes to the configuration file take effect. The configuration file should be formatted like the following example:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;switches&gt;  \n      &lt;add name=&quot;mySwitch&quot; value=&quot;10&quot; /&gt;  \n      &lt;add name=&quot;myNewSwitch&quot; value=&quot;20&quot; /&gt;  \n      &lt;remove name=&quot;mySwitch&quot; /&gt;  \n      &lt;clear/&gt;  \n    &lt;/switches&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch__ctor_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Switch(String, String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.switch\" data-linktype=\"relative-path\">Switch</a> class, specifying the display name, description, and default value for the switch.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected Switch (string displayName, string description, string defaultSwitchValue);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>displayName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the switch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>description</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The description of the switch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>defaultSwitchValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default value for the switch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>displayName</code> parameter is used to set the value of the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> property, and the <code>description</code> parameter is use to set the value of the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_Description_\" data-linktype=\"relative-path\">Description</a> property. The <code>defaultSwitchValue</code> parameter is the value for the switch if the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_Value_\" data-linktype=\"relative-path\">Value</a> property is not set by code or by the configuration file attribute. See the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch__ctor_System_String_System_String_\" data-linktype=\"relative-path\">Switch(String, String)</a> overload for additional information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_Attributes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Attributes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the custom switch attributes defined in the application configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Specialized.StringDictionary Attributes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a> containing the case-insensitive custom attributes for the trace switch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Attributes property identifies the custom attributes referenced in the application&#39;s configuration file. Unreferenced custom attributes are not enumerated. Classes that inherit from the <a class=\"xref\" href=\"system.diagnostics.switch\" data-linktype=\"relative-path\">Switch</a> class can add custom attributes by overriding the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_GetSupportedAttributes_\" data-linktype=\"relative-path\">GetSupportedAttributes</a> method and returning a string array of custom attribute names.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_Description\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Description</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a description of the switch.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Description { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The description of the switch. The default value is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property should indicate the function of the switch; for example, &quot;Enables tracing for a directory watcher component.&quot; The value is set by the <code>descriptor</code> parameter in the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch__ctor_\" data-linktype=\"relative-path\">Switch</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_DisplayName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a name used to identify the switch.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DisplayName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name used to identify the switch. The default value is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you create a new <a class=\"xref\" href=\"system.diagnostics.switch\" data-linktype=\"relative-path\">Switch</a> object, the DisplayName finds initial switch settings. For more information, see the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch__ctor_\" data-linktype=\"relative-path\">Switch</a> constructor and <a href=\"../Topic/How%20to:%20Create,%20Initialize%20and%20Configure%20Trace%20Switches.md\" data-linktype=\"relative-path\">How to: Create, Initialize and Configure Trace Switches</a> in the Visual Studio documentation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_SwitchSetting\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SwitchSetting</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the current setting for this switch.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected int SwitchSetting { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current setting for this switch. The default is zero.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_Value\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Value</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the value of the switch.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected string Value { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string representing the value of the switch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The value does not consist solely of an optional negative sign followed by a sequence of digits ranging from 0 to 9.  </p>\n<p> -or-  </p>\n<p> The value represents a number less than <a class=\"xref\" href=\"system.int32#System_Int32_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_OnValueChanged_\" data-linktype=\"relative-path\">OnValueChanged</a> method is called when the value of the Value property is changed. The <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_OnValueChanged_\" data-linktype=\"relative-path\">OnValueChanged</a> method parses the value of this property and converts it to an integer value, which is then used to set the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_SwitchSetting_\" data-linktype=\"relative-path\">SwitchSetting</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_GetSupportedAttributes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSupportedAttributes()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the custom attributes supported by the switch.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual string[] GetSupportedAttributes ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A string array that contains the names of the custom attributes supported by the switch, or <code>null</code> if there no custom attributes are supported.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation for the GetSupportedAttributes method returns <code>null</code>. If a switch is added in a configuration file and custom attributes are specified that are not included in the string array returned by GetSupportedAttributes, a <a class=\"xref\" href=\"system.configuration.configurationexception\" data-linktype=\"relative-path\">ConfigurationException</a> is thrown when the switch is loaded.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_OnSwitchSettingChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnSwitchSettingChanged()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked when the <span class=\"xref\">stem.Diagnostics.Switch.SwitchSetting*</span> property is changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnSwitchSettingChanged ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>OnSwitchSettingChanged is invoked the first time a switch reads the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_SwitchSetting_\" data-linktype=\"relative-path\">SwitchSetting</a> value from the configuration file and is invoked again each time the switch&#39;s value is changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_Switch_OnValueChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnValueChanged()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked when the <span class=\"xref\">stem.Diagnostics.Switch.Value*</span> property is changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnValueChanged ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation parses the new value of the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_Value_\" data-linktype=\"relative-path\">Value</a> property to an integer value which it uses to set the <a class=\"xref\" href=\"system.diagnostics.switch#System_Diagnostics_Switch_SwitchSetting_\" data-linktype=\"relative-path\">SwitchSetting</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.Switch.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.Attributes\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.Description\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.DisplayName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.GetSupportedAttributes\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.OnSwitchSettingChanged\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.OnValueChanged\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.SwitchSetting\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Switch.Value\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"5c59c58d-655d-298a-f182-c57fad72b964\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an abstract base class to create new debugging and tracing switches.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.diagnostics/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.Switch\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.Switch.yml","open_to_public_contributors":false,"api_name":["System.Diagnostics.Switch","System.Diagnostics.Switch..ctor","System.Diagnostics.Switch.Attributes","System.Diagnostics.Switch.Description","System.Diagnostics.Switch.DisplayName","System.Diagnostics.Switch.GetSupportedAttributes","System.Diagnostics.Switch.OnSwitchSettingChanged","System.Diagnostics.Switch.OnValueChanged","System.Diagnostics.Switch.SwitchSetting","System.Diagnostics.Switch.Value"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.Switch","System::Diagnostics::Switch","System.Diagnostics.Switch.#ctor","System::Diagnostics::Switch::#ctor","System.Diagnostics.Switch.Attributes","System::Diagnostics::Switch::Attributes","System.Diagnostics.Switch.Description","System::Diagnostics::Switch::Description","System.Diagnostics.Switch.DisplayName","System::Diagnostics::Switch::DisplayName","System.Diagnostics.Switch.GetSupportedAttributes","System::Diagnostics::Switch::GetSupportedAttributes","System.Diagnostics.Switch.OnSwitchSettingChanged","System::Diagnostics::Switch::OnSwitchSettingChanged","System.Diagnostics.Switch.OnValueChanged","System::Diagnostics::Switch::OnValueChanged","System.Diagnostics.Switch.SwitchSetting","System::Diagnostics::Switch::SwitchSetting","System.Diagnostics.Switch.Value","System::Diagnostics::Switch::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"5c59c58d-655d-298a-f182-c57fad72b964","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Switch.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Switch class | Microsoft Docs","_op_ogTitle":"Switch class","description":"Provides an abstract base class to create new debugging and tracing switches.\n","toc_asset_id":"api/_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.Switch","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.switch","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.switch","fileRelativePath":"api/System.Diagnostics.Switch.html"},"themesRelativePathToOutputRoot":"_themes/"}