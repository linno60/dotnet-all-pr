{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">KeyPressEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class KeyPressEventArgs : EventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a></span></div><span class=\"lang-csharp\">KeyPressEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> placed on it.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic KeyPressEventArgs Example#1\">public ref class myKeyPressClass\n{\nprivate:\n   static long keyPressCount = 0;\n   static long backspacePressed = 0;\n   static long returnPressed = 0;\n   static long escPressed = 0;\n   TextBox^ textBox1;\n   void myKeyCounter( Object^ sender, KeyPressEventArgs^ ex )\n   {\n      switch ( ex-&gt;KeyChar )\n      {\n            // Counts the backspaces.\n         case &#39;\\b&#39;:\n         backspacePressed = backspacePressed + 1;\n         break;\n\n            // Counts the ENTER keys.\n         case &#39;\\r&#39;:\n         returnPressed = returnPressed + 1;\n         break;\n\n            // Counts the ESC keys.  \n         case (char)27:\n         escPressed = escPressed + 1;\n         break;\n            \n            // Counts all other keys.\n         default:\n         keyPressCount = keyPressCount + 1;\n         break;\n      }\n      textBox1-&gt;Text = String::Concat( \n         backspacePressed, &quot; backspaces pressed\\r\\n&quot;,\n         escPressed, &quot; escapes pressed\\r\\n&quot;,\n         returnPressed, &quot; returns pressed\\r\\n&quot;,\n         keyPressCount, &quot; other keys pressed\\r\\n&quot; );\n      ex-&gt;Handled = true;\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic KeyPressEventArgs Example#1\">    public class myKeyPressClass \n     {\n         static long keyPressCount = 0 ;\n         static long backspacePressed =  0;\n         static long returnPressed = 0 ;\n         static long escPressed = 0 ;\n         private TextBox textBox1 = new TextBox();\n         private void myKeyCounter(object sender, KeyPressEventArgs ex)\n         {\n         switch(ex.KeyChar)\n         {\n                 // Counts the backspaces.\n             case &#39;\\b&#39;:\n             backspacePressed = backspacePressed + 1;\n             break ;\n                 // Counts the ENTER keys.\n             case &#39;\\r&#39;:\n             returnPressed = returnPressed + 1 ;\n             break ;\n                 // Counts the ESC keys.  \n             case (char)27:\n             escPressed = escPressed + 1 ;\n             break ;\n                 // Counts all other keys.\n             default:\n             keyPressCount = keyPressCount + 1 ;\n             break;\n         }\n         \n         textBox1.Text = \n             backspacePressed + &quot; backspaces pressed\\r\\n&quot; + \n             escPressed + &quot; escapes pressed\\r\\n&quot; +\n             returnPressed + &quot; returns pressed\\r\\n&quot; +\n             keyPressCount + &quot; other keys pressed\\r\\n&quot; ;\n         ex.Handled = true ;\n         }\n     }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic KeyPressEventArgs Example#1\">Public Class myKeyPressClass\n    Private Shared keyPressCount As Long = 0\n    Private Shared backspacePressed As Long = 0\n    Private Shared returnPressed As Long = 0\n    Private Shared escPressed As Long = 0\n    Private textBox1 As TextBox\n    \n    Private Sub myKeyCounter(sender As Object, ex As KeyPressEventArgs)\n        Select Case ex.KeyChar\n            &#39; Counts the backspaces.\n            Case ControlChars.Back\n                backspacePressed = backspacePressed + 1\n            &#39; Counts the ENTER keys.\n            Case ControlChars.Lf\n                returnPressed = returnPressed + 1\n            &#39; Counts the ESC keys.  \n            Case Convert.ToChar(27)\n                escPressed = escPressed + 1\n            &#39; Counts all other keys.\n            Case Else\n                keyPressCount = keyPressCount + 1\n        End Select\n        \n        textBox1.Text = backspacePressed &amp; &quot; backspaces pressed&quot; &amp; _\n            ControlChars.Lf &amp; ControlChars.Cr &amp; escPressed &amp; _\n            &quot; escapes pressed&quot; &amp; ControlChars.CrLf &amp; returnPressed &amp; _\n            &quot; returns pressed&quot; &amp; ControlChars.CrLf &amp; keyPressCount &amp; _\n            &quot; other keys pressed&quot; &amp; ControlChars.CrLf\n        ex.Handled = True\n    End Sub &#39;myKeyCounter\nEnd Class &#39;myKeyPressClass\n</code></pre><p> You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic KeyPressEventArgs Example#2\">public:\n   myKeyPressClass^ myKeyPressHandler;\n\n   Form1()\n   {\n      myKeyPressHandler = gcnew myKeyPressClass;\n\n      InitializeComponent();\n\n      textBox1-&gt;KeyPress += gcnew KeyPressEventHandler(\n         myKeyPressHandler, &amp;myKeyPressClass::myKeyCounter );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic KeyPressEventArgs Example#2\">    myKeyPressClass myKeyPressHandler = new myKeyPressClass();\n    public Form1()\n    {\n         InitializeComponent();\n     \n         textBox1.KeyPress += new KeyPressEventHandler(myKeyPressHandler.myKeyCounter);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic KeyPressEventArgs Example#2\">    Private myKeyPressHandler As New myKeyPressClass()\n    \n    Public Sub New()\n        InitializeComponent()\n        \n        AddHandler textBox1.KeyPress, AddressOf myKeyPressHandler.myKeyCounter\n    End Sub &#39;New\n    \n</code></pre><p> When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event.</p>\n\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A KeyPressEventArgs specifies the character that is composed when the user presses a key. For example, when the user presses SHIFT + K, the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_KeyChar_\" data-linktype=\"relative-path\">KeyChar</a> property returns an uppercase K.  </p>\n<p> A <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event occurs when the user presses a key. Two events that are closely related to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event are <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event precedes each <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event when the user presses a key, and a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event occurs when the user releases a key. When the user holds down a key, duplicate <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> events occur each time the character repeats. One <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event is generated upon release.  </p>\n<p> With each <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event, a KeyPressEventArgs is passed. A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> is passed with each <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event. A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> specifies whether any modifier keys (CTRL, SHIFT, or ALT) were pressed along with another key. (This modifier information can also be obtained through the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys_\" data-linktype=\"relative-path\">ModifierKeys</a> property of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class.)  </p>\n<p> Set <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> to <code>true</code> to cancel the <code>KeyPress</code> event. This keeps the control from processing the key press.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some controls will process certain key strokes on <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>. For example, <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> processes the Enter key before <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> is called. In such cases, you cannot cancel the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event, and must cancel the key stroke from <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> instead.  </p>\n</div>\n<p> For information about the event model, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_KeyPressEventArgs__ctor_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyPressEventArgs(Char)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public KeyPressEventArgs (char keyChar);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyChar</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The ASCII character corresponding to the key the user pressed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys_\" data-linktype=\"relative-path\">ModifierKeys</a> property to get the current state of the modifier keys.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_KeyPressEventArgs_Handled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Handled</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event was handled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Handled { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the event is handled; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the event is not handled, it will be sent to the operating system for default processing. Set Handled to <code>true</code> to cancel the <code>KeyPress</code> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_KeyPressEventArgs_KeyChar\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyChar</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the character corresponding to the key pressed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public char KeyChar { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The ASCII character that is composed. For example, if the user presses SHIFT + K, this property returns an uppercase K.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the KeyChar property to sample keystrokes at run time and to modify keystrokes under special run-time circumstances. For example, you can use KeyChar to disable non-numeric keypresses when the user enters a ZIP code, change all alphabetical keypresses to uppercase in a data entry field, or monitor the keyboard or other key input device for specific key combinations.  </p>\n<p> You can get or set the following keys:  </p>\n<ul>\n<li><p>a-z, A-Z.  </p>\n</li>\n<li><p>CTRL.  </p>\n</li>\n<li><p>Punctuation marks.  </p>\n</li>\n<li><p>Number keys, both across the top of the keyboard and on the numeric keypad.  </p>\n</li>\n<li><p>ENTER.  </p>\n<p>You cannot get or set the following keys:  </p>\n</li>\n<li><p>The TAB key.  </p>\n</li>\n<li><p>INSERT and DELETE.  </p>\n</li>\n<li><p>HOME.  </p>\n</li>\n<li><p>END.  </p>\n</li>\n<li><p>PAGE UP and PAGE DOWN.  </p>\n</li>\n<li><p>F1-F2.  </p>\n</li>\n<li><p>ALT.  </p>\n</li>\n<li><p>Arrow keys.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> For information about how to detect any of the non-character keys mentioned above, see the <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> class.  </p>\n</div>\n<p>-</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.KeyPressEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs.Handled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs.KeyChar\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"e4040ca3-3fe9-f324-9dd2-e04cff6fcd60\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.KeyPressEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.KeyPressEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.KeyPressEventArgs","System.Windows.Forms.KeyPressEventArgs..ctor","System.Windows.Forms.KeyPressEventArgs.Handled","System.Windows.Forms.KeyPressEventArgs.KeyChar"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.KeyPressEventArgs","System::Windows::Forms::KeyPressEventArgs","System.Windows.Forms.KeyPressEventArgs.#ctor","System::Windows::Forms::KeyPressEventArgs::#ctor","System.Windows.Forms.KeyPressEventArgs.Handled","System::Windows::Forms::KeyPressEventArgs::Handled","System.Windows.Forms.KeyPressEventArgs.KeyChar","System::Windows::Forms::KeyPressEventArgs::KeyChar"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"e4040ca3-3fe9-f324-9dd2-e04cff6fcd60","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/KeyPressEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"KeyPressEventArgs class | Microsoft Docs","_op_ogTitle":"KeyPressEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.KeyPressEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.keypresseventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.keypresseventargs","fileRelativePath":"api/System.Windows.Forms.KeyPressEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}