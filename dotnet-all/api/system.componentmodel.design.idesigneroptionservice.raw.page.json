{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDesignerOptionService</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides access to the designer options located on the <strong>Tools</strong> menu under the <strong>Options</strong> command in the Visual Studio development environment.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDesignerOptionService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates accessing the IDesignerOptionService to display the current values of the standard options.  </p>\n<pre><code class=\"lang-cs\" name=\"IDesignerOptionServiceExample#1\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Data;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\nnamespace IDesignerOptionServiceExample\n{\n    // This control demonstrates retrieving the standard \n    // designer option service values in design mode.\n    public class IDesignerOptionServiceControl : System.Windows.Forms.UserControl\n    {\t\t\n        private IDesignerOptionService designerOptionService;\n\n        public IDesignerOptionServiceControl()\n        {\n            this.BackColor = Color.Beige;\n                    this.Size = new Size(404, 135);\n        }\n        \n        public override System.ComponentModel.ISite Site\n        {\n            get\n            {\n                return base.Site;\n            }\n            set\n            {\n                base.Site = value;\n\n                // If siting component, attempt to obtain an IDesignerOptionService.\n                if( base.Site != null )                            \n                    designerOptionService = (IDesignerOptionService)this.GetService(typeof(IDesignerOptionService));                                   \n            }\n        }\n\n        // Displays control information and current IDesignerOptionService \n        // values, if available.\n        protected override void OnPaint(System.Windows.Forms.PaintEventArgs e)\n        {\n            e.Graphics.DrawString(&quot;IDesignerOptionServiceControl&quot;, new Font(&quot;Arial&quot;, 9), new SolidBrush(Color.Blue), 4, 4);\n            if( this.DesignMode )\n                e.Graphics.DrawString(&quot;Currently in design mode&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 4, 18);\n            else\n                e.Graphics.DrawString(&quot;Not in design mode. Cannot access IDesignerOptionService.&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Red), 4, 18);\n            \n            if( base.Site != null &amp;&amp; designerOptionService != null )\n            {\n                e.Graphics.DrawString(&quot;IDesignerOptionService provides access to the table of option values listed when&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 4, 38);\n                e.Graphics.DrawString(&quot;the Windows Forms Designer\\\\General tab of the Tools\\\\Options menu is selected.&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 4, 50);                \n                \n                e.Graphics.DrawString(&quot;Table of standard value names and current values&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Red), 4, 76);\n                \n                // Displays a table of the standard value names and current values.\n                int ypos = 90;\n\n                // Obtains and shows the size of the standard design-mode grid square.\n                Size size = (Size)designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\\\General&quot;, &quot;GridSize&quot;);\n                e.Graphics.DrawString(&quot;GridSize&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(size.ToString(), new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 100, ypos);\n                ypos+=12;\n                \n                // Obtains and shows whether the design mode surface grid is enabled.\n                bool showGrid = (bool)designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\\\General&quot;, &quot;ShowGrid&quot;);\n                e.Graphics.DrawString(&quot;ShowGrid&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(showGrid.ToString(), new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 100, ypos);\n                ypos+=12;\n                \n                // Obtains and shows whether components should be aligned with the surface grid.\n                bool snapToGrid = (bool)designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\\\General&quot;, &quot;SnapToGrid&quot;);\n                e.Graphics.DrawString(&quot;SnapToGrid&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(snapToGrid.ToString(), new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 100, ypos);                \n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IDesignerOptionServiceExample#1\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Data\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n&#39; This control demonstrates retrieving the standard \n&#39; designer option service values in design mode.\nPublic Class IDesignerOptionServiceControl\n    Inherits System.Windows.Forms.UserControl\n    Private designerOptionService As IDesignerOptionService\n\n    Public Sub New()\n        Me.BackColor = Color.Beige\n        Me.Size = New Size(404, 135)\n    End Sub\n\n    Public Overrides Property Site() As System.ComponentModel.ISite\n        Get\n            Return MyBase.Site\n        End Get\n        Set(ByVal Value As System.ComponentModel.ISite)\n            MyBase.Site = Value\n\n            &#39; If siting component, attempt to obtain an IDesignerOptionService.\n            If (MyBase.Site IsNot Nothing) Then\n                designerOptionService = CType(Me.GetService(GetType(IDesignerOptionService)), IDesignerOptionService)\n            End If\n        End Set\n    End Property\n\n    &#39; Displays control information and current IDesignerOptionService \n    &#39; values, if available.\n    Protected Overrides Sub OnPaint(ByVal e As System.Windows.Forms.PaintEventArgs)\n        e.Graphics.DrawString(&quot;IDesignerOptionServiceControl&quot;, New Font(&quot;Arial&quot;, 9), New SolidBrush(Color.Blue), 4, 4)\n        If Me.DesignMode Then\n            e.Graphics.DrawString(&quot;Currently in design mode&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 4, 18)\n        Else\n            e.Graphics.DrawString(&quot;Not in design mode. Cannot access IDesignerOptionService.&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Red), 4, 18)\n        End If\n        If (MyBase.Site IsNot Nothing) AndAlso (designerOptionService IsNot Nothing) Then\n            e.Graphics.DrawString(&quot;IDesignerOptionService provides access to the table of option values listed when&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 4, 38)\n            e.Graphics.DrawString(&quot;the Windows Forms Designer\\General tab of the Tools\\Options menu is selected.&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 4, 50)\n\n            e.Graphics.DrawString(&quot;Table of standard value names and current values&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Red), 4, 76)\n\n            &#39; Displays a table of the standard value names and current values.\n            Dim ypos As Integer = 90\n\n            &#39; Obtains and shows the size of the standard design-mode grid square.\n            Dim size As Size = CType(designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\General&quot;, &quot;GridSize&quot;), Size)\n            e.Graphics.DrawString(&quot;GridSize&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 4, ypos)\n            e.Graphics.DrawString(size.ToString(), New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 100, ypos)\n            ypos += 12\n\n            &#39; Obtaisn and shows whether the design mode surface grid is enabled.\n            Dim showGrid As Boolean = CBool(designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\General&quot;, &quot;ShowGrid&quot;))\n            e.Graphics.DrawString(&quot;ShowGrid&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 4, ypos)\n            e.Graphics.DrawString(showGrid.ToString(), New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 100, ypos)\n            ypos += 12\n\n            &#39; Obtains and shows whether components should be aligned with the surface grid.\n            Dim snapToGrid As Boolean = CBool(designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\General&quot;, &quot;SnapToGrid&quot;))\n            e.Graphics.DrawString(&quot;SnapToGrid&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 4, ypos)\n            e.Graphics.DrawString(snapToGrid.ToString(), New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 100, ypos)\n        End If\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"IDesignerOptionServiceExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Data.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Data;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\n\nnamespace IDesignerOptionServiceExample\n{\n   // This control demonstrates retrieving the standard \n   // designer option service values in design mode.\n   public ref class IDesignerOptionServiceControl: public System::Windows::Forms::UserControl\n   {\n   private:\n      IDesignerOptionService^ designerOptionService;\n\n   public:\n      IDesignerOptionServiceControl()\n      {\n         this-&gt;BackColor = Color::Beige;\n         this-&gt;Size = System::Drawing::Size( 404, 135 );\n      }\n\n      property System::ComponentModel::ISite^ Site \n      {\n         virtual System::ComponentModel::ISite^ get() override\n         {\n            return __super::Site;\n         }\n\n         virtual void set( System::ComponentModel::ISite^ value ) override\n         {\n            __super::Site = value;\n            \n            // If siting component, attempt to obtain an IDesignerOptionService.\n            if ( __super::Site != nullptr )\n                        designerOptionService = dynamic_cast&lt;IDesignerOptionService^&gt;(this-&gt;GetService( IDesignerOptionService::typeid ));\n         }\n      }\n\n   protected:\n\n      // Displays control information and current IDesignerOptionService \n      // values, if available.\n\n      virtual void OnPaint( System::Windows::Forms::PaintEventArgs^ e ) override\n      {\n         e-&gt;Graphics-&gt;DrawString( &quot;IDesignerOptionServiceControl&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,9 ), gcnew SolidBrush( Color::Blue ), 4, 4 );\n         if ( this-&gt;DesignMode )\n                  e-&gt;Graphics-&gt;DrawString( &quot;Currently in design mode&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 4, 18 );\n         else\n                  e-&gt;Graphics-&gt;DrawString( &quot;Not in design mode. Cannot access IDesignerOptionService.&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Red ), 4, 18 );\n\n         if ( __super::Site != nullptr &amp;&amp; designerOptionService != nullptr )\n         {\n            e-&gt;Graphics-&gt;DrawString( &quot;IDesignerOptionService provides access to the table of option values listed when&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 4, 38 );\n            e-&gt;Graphics-&gt;DrawString( &quot;the Windows Forms Designer\\\\General tab of the Tools\\\\Options menu is selected.&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 4, 50 );\n            e-&gt;Graphics-&gt;DrawString( &quot;Table of standard value names and current values&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Red ), 4, 76 );\n            \n            // Displays a table of the standard value names and current values.\n            int ypos = 90;\n            \n            // Obtains and shows the size of the standard design-mode grid square.\n            System::Drawing::Size size =  *dynamic_cast&lt;System::Drawing::Size^&gt;(designerOptionService-&gt;GetOptionValue( &quot;WindowsFormsDesigner\\\\General&quot;, &quot;GridSize&quot; ));\n            e-&gt;Graphics-&gt;DrawString( &quot;GridSize&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 4, (float)ypos );\n            e-&gt;Graphics-&gt;DrawString( size.ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 100, (float)ypos );\n            ypos += 12;\n\n            // Obtains and shows whether the design mode surface grid is enabled.\n            bool showGrid =  *dynamic_cast&lt;bool^&gt;(designerOptionService-&gt;GetOptionValue( &quot;WindowsFormsDesigner\\\\General&quot;, &quot;ShowGrid&quot; ));\n            e-&gt;Graphics-&gt;DrawString( &quot;ShowGrid&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 4, (float)ypos );\n            e-&gt;Graphics-&gt;DrawString( showGrid.ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 100, (float)ypos );\n            ypos += 12;\n\n            // Obtains and shows whether components should be aligned with the surface grid.\n            bool snapToGrid =  *dynamic_cast&lt;bool^&gt;(designerOptionService-&gt;GetOptionValue( &quot;WindowsFormsDesigner\\\\General&quot;, &quot;SnapToGrid&quot; ));\n            e-&gt;Graphics-&gt;DrawString( &quot;SnapToGrid&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 4, (float)ypos );\n            e-&gt;Graphics-&gt;DrawString( snapToGrid.ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 100, (float)ypos );\n         }\n      }\n   };\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>IDesignerOptionService provides an interface that can be used to retrieve and update the values of the Windows Forms Designer options, which are listed within the dialog displayed by the <strong>Options</strong> command of the <strong>Tools</strong> menu of the Visual Studio development environment. The <a class=\"xref\" href=\"system.componentmodel.design.idesigneroptionservice#System_ComponentModel_Design_IDesignerOptionService_GetOptionValue_\" data-linktype=\"relative-path\">GetOptionValue</a> method retrieves the value of a specified option. The <a class=\"xref\" href=\"system.componentmodel.design.idesigneroptionservice#System_ComponentModel_Design_IDesignerOptionService_SetOptionValue_\" data-linktype=\"relative-path\">SetOptionValue</a> method sets a specified value for a specified option.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerOptionService_GetOptionValue_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOptionValue(String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value of the specified Windows Forms Designer option.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetOptionValue (string pageName, string valueName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pageName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the page that defines the option.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>valueName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the option property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The value of the specified option.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>pageName</code> parameter should consist of &quot;WindowsFormsDesigner\\<em>CategoryName</em>&quot;, where <em>CategoryName</em> is an options category name without any white space characters. The category name is typically &quot;General&quot;. Therefore, you can access the &quot;General&quot; designer options category with the English page name &quot;WindowsFormsDesigner\\General&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The page and value names are always expected in English. Therefore, the following table is provided to help you access the options you want.  </p>\n</div>\n<p> The following table indicates the English value names, their data format, and a description of each:  </p>\n<table>\n<thead>\n<tr>\n<th>Value Name</th>\n<th>Value Format</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GridSize</td>\n<td><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></td>\n<td>The size of each grid square.</td>\n</tr>\n<tr>\n<td>GridSize.Width</td>\n<td><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></td>\n<td>The width of each grid square. This nested property is read-only when accessed through the designer option service.</td>\n</tr>\n<tr>\n<td>GridSize.Height</td>\n<td><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></td>\n<td>The height of each grid square. This nested property is read-only when accessed through the designer option service.</td>\n</tr>\n<tr>\n<td>ShowGrid</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> if the grid should be shown; <code>false</code> if the grid should not be shown.</td>\n</tr>\n<tr>\n<td>SnapToGrid</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> if the positions of the components should be aligned to the grid; <code>false</code> if the positions should not necessarily be aligned.</td>\n</tr>\n<tr>\n<td>LayoutMode</td>\n<td><code>Microsoft.VisualStudio.Windows.Forms.LayoutMode</code></td>\n<td><code>SnapLines</code> to use snaplines, or <code>SnapToGrid</code> to align controls to the grid,</td>\n</tr>\n<tr>\n<td>ObjectBoundSmartTagAutoShow</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> to allow a component&#39;s smart tag panel to open automatically upon creation; otherwise, <code>false</code>.</td>\n</tr>\n<tr>\n<td>AutoToolboxPopulate</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> to automatically add a solution&#39;s custom controls and components to the <strong>Toolbox</strong>; otherwise, <code>false</code>.</td>\n</tr>\n<tr>\n<td>UseOptimizedCodeGeneration</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> if the component cache is enabled; otherwise, <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerOptionService_SetOptionValue_System_String_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetOptionValue(String, String, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the value of the specified Windows Forms Designer option.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetOptionValue (string pageName, string valueName, object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pageName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the page that defines the option.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>valueName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the option property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>pageName</code> parameter should consist of &quot;WindowsFormsDesigner\\C<em>ategoryName</em>&quot;, where <em>CategoryName</em> is an options category name without any white space characters. The category name is typically &quot;General&quot;. Therefore, you can access the &quot;General&quot; designer options category with the English page name &quot;WindowsFormsDesigner\\General&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The page and value names are always expected in English. Therefore, the following table is provided to help you access the options you want.  </p>\n</div>\n<p> The following table indicates the English value names, their data format, and a description of each:  </p>\n<table>\n<thead>\n<tr>\n<th>Value Name</th>\n<th>Value Format</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GridSize</td>\n<td><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></td>\n<td>The size of each grid square.</td>\n</tr>\n<tr>\n<td>GridSize.Width</td>\n<td><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></td>\n<td>The width of each grid square. This nested property is read-only when accessed through the designer option service.</td>\n</tr>\n<tr>\n<td>GridSize.Height</td>\n<td><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></td>\n<td>The height of each grid square. This nested property is read-only when accessed through the designer option service.</td>\n</tr>\n<tr>\n<td>ShowGrid</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> if the grid should be shown; <code>false</code> if the grid should not be shown.</td>\n</tr>\n<tr>\n<td>SnapToGrid</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> if the positions of the components should be aligned to the grid; <code>false</code> if the positions should not necessarily be aligned.</td>\n</tr>\n<tr>\n<td>LayoutMode</td>\n<td><code>Microsoft.VisualStudio.Windows.Forms.LayoutMode</code></td>\n<td><code>SnapLines</code> to use snaplines, or <code>SnapToGrid</code> to align controls to the grid,</td>\n</tr>\n<tr>\n<td>ObjectBoundSmartTagAutoShow</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> to allow a component&#39;s smart tag panel to open automatically upon creation; otherwise, <code>false</code>.</td>\n</tr>\n<tr>\n<td>AutoToolboxPopulate</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> to automatically add a solution&#39;s custom controls and components to the <strong>Toolbox</strong>; otherwise, <code>false</code>.</td>\n</tr>\n<tr>\n<td>UseOptimizedCodeGeneration</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n<td><code>true</code> if the component cache is enabled; otherwise, <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesignerOptionService.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerOptionService\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerOptionService.GetOptionValue\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerOptionService.SetOptionValue\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"9327db79-1f10-f72b-cfa2-3347100230e5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to the designer options located on the Tools menu under the Options command in the Visual Studio development environment.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.IDesignerOptionService\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesignerOptionService.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.IDesignerOptionService","System.ComponentModel.Design.IDesignerOptionService.GetOptionValue","System.ComponentModel.Design.IDesignerOptionService.SetOptionValue"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.IDesignerOptionService","System::ComponentModel::Design::IDesignerOptionService","System.ComponentModel.Design.IDesignerOptionService.GetOptionValue","System::ComponentModel::Design::IDesignerOptionService::GetOptionValue","System.ComponentModel.Design.IDesignerOptionService.SetOptionValue","System::ComponentModel::Design::IDesignerOptionService::SetOptionValue"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"9327db79-1f10-f72b-cfa2-3347100230e5","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/IDesignerOptionService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDesignerOptionService interface | Microsoft Docs","_op_ogTitle":"IDesignerOptionService interface","description":"Provides access to the designer options located on the Tools menu under the Options command in the Visual Studio development environment.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.IDesignerOptionService","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesigneroptionservice","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesigneroptionservice","fileRelativePath":"api/System.ComponentModel.Design.IDesignerOptionService.html"},"themesRelativePathToOutputRoot":"_themes/"}