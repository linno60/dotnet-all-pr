{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">XmlDsigC14NTransform</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class XmlDsigC14NTransform : System.Security.Cryptography.Xml.Transform</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform\" data-linktype=\"relative-path\">Transform</a></span></div><span class=\"lang-csharp\">XmlDsigC14NTransform</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14nwithcommentstransform\" data-linktype=\"relative-path\">XmlDsigC14NWithCommentsTransform</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Algorithm\" data-linktype=\"relative-path\">Algorithm</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_GetXml\" data-linktype=\"relative-path\">GetXml()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_PropagatedNamespaces\" data-linktype=\"relative-path\">PropagatedNamespaces</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Resolver\" data-linktype=\"relative-path\">Resolver</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This section contains two code examples. The first example demonstrates how to sign non-XML data using a detached signature.  Example #1 creates a signature of www.microsoft.com in an XML file and then verifies the file.  The second example demonstrates how to call members of the XmlDsigC14NTransform class.  </p>\n<p> <strong>Example #1</strong>  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.XML-XMLDsigDetached#1\">//\n// This example signs a file specified by a URI \n// using a detached signature. It then verifies  \n// the signed XML.\n//\n\nusing System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\nusing System.Text;\nusing System.Xml;\n\n\n\nclass XMLDSIGDetached\n{\n\t\n    [STAThread]\n    static void Main(string[] args)\n    {\n    // The URI to sign.\n        string resourceToSign = &quot;http://www.microsoft.com&quot;;\n\t\t\n        // The name of the file to which to save the XML signature.\n        string XmlFileName = &quot;xmldsig.xml&quot;;\n\n        try\n        {\n\n            // Generate a signing key.\n            RSACryptoServiceProvider Key = new RSACryptoServiceProvider();\n\n            Console.WriteLine(&quot;Signing: {0}&quot;, resourceToSign);\n\n            // Sign the detached resourceand save the signature in an XML file.\n            SignDetachedResource(resourceToSign, XmlFileName, Key);\n\n            Console.WriteLine(&quot;XML signature was succesfully computed and saved to {0}.&quot;, XmlFileName);\n\n            // Verify the signature of the signed XML.\n            Console.WriteLine(&quot;Verifying signature...&quot;);\n\n            //Verify the XML signature in the XML file.\n            bool result = VerifyDetachedSignature(XmlFileName);\n\n            // Display the results of the signature verification to \n            // the console.\n            if(result)\n            {\n                Console.WriteLine(&quot;The XML signature is valid.&quot;);\n            }\n            else\n            {\n                Console.WriteLine(&quot;The XML signature is not valid.&quot;);\n            }\n        }\n        catch(CryptographicException e)\n        {\n            Console.WriteLine(e.Message);\n\n        }\n\t\t\n    }\n\n    // Sign an XML file and save the signature in a new file.\n    public static void SignDetachedResource(string URIString, string XmlSigFileName, RSA Key)\n    {\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml();\n\n        // Assign the key to the SignedXml object.\n        signedXml.SigningKey = Key;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n\n        // Add the passed URI to the reference object.\n        reference.Uri = URIString;\n\t\t\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n        // Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n        KeyInfo keyInfo = new KeyInfo();\n        keyInfo.AddClause(new RSAKeyValue((RSA)Key));\t\n        signedXml.KeyInfo = keyInfo;\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save\n        // it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Save the signed XML document to a file specified\n        // using the passed string.\n        XmlTextWriter xmltw = new XmlTextWriter(XmlSigFileName, new UTF8Encoding(false));\n        xmlDigitalSignature.WriteTo(xmltw);\n        xmltw.Close();\n    }\n    // Verify the signature of an XML file and return the result.\n    public static Boolean VerifyDetachedSignature(string XmlSigFileName)\n    {\t\n        // Create a new XML document.\n        XmlDocument xmlDocument = new XmlDocument();\n\n        // Load the passed XML file into the document.\n        xmlDocument.Load(XmlSigFileName);\n\t\n        // Create a new SignedXMl object.\n        SignedXml signedXml = new SignedXml();\n\n        // Find the &quot;Signature&quot; node and create a new\n        // XmlNodeList object.\n        XmlNodeList nodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;);\n\n        // Load the signature node.\n        signedXml.LoadXml((XmlElement)nodeList[0]);\n\n        // Check the signature and return the result.\n        return signedXml.CheckSignature();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.XML-XMLDsigDetached#1\">&#39;\n&#39; This example signs a file specified by a URI \n&#39; using a detached signature. It then verifies  \n&#39; the signed XML.\n&#39;\nImports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\nImports System.Text\nImports System.Xml\n\n\nClass XMLDSIGDetached\n\n   \n   &lt;STAThread()&gt;  _\n   Overloads Shared Sub Main(args() As String)\n      &#39; The URI to sign.\n      Dim resourceToSign As String = &quot;http://www.microsoft.com&quot;\n      \n      &#39; The name of the file to which to save the XML signature.\n      Dim XmlFileName As String = &quot;xmldsig.xml&quot;\n      \n      Try\n         \n         &#39; Generate a signing key.\n         Dim Key As New RSACryptoServiceProvider()\n         \n         Console.WriteLine(&quot;Signing: {0}&quot;, resourceToSign)\n         \n         &#39; Sign the detached resourceand save the signature in an XML file.\n         SignDetachedResource(resourceToSign, XmlFileName, Key)\n         \n         Console.WriteLine(&quot;XML signature was succesfully computed and saved to {0}.&quot;, XmlFileName)\n         \n         &#39; Verify the signature of the signed XML.\n         Console.WriteLine(&quot;Verifying signature...&quot;)\n         \n         &#39;Verify the XML signature in the XML file.\n         Dim result As Boolean = VerifyDetachedSignature(XmlFileName)\n         \n         &#39; Display the results of the signature verification to \n         &#39; the console.\n         If result Then\n            Console.WriteLine(&quot;The XML signature is valid.&quot;)\n         Else\n            Console.WriteLine(&quot;The XML signature is not valid.&quot;)\n         End If\n      Catch e As CryptographicException\n         Console.WriteLine(e.Message)\n      End Try \n   End Sub \n   \n   \n   &#39; Sign an XML file and save the signature in a new file.\n   Public Shared Sub SignDetachedResource(URIString As String, XmlSigFileName As String, Key As RSA)\n      &#39; Create a SignedXml object.\n      Dim signedXml As New SignedXml()\n      \n      &#39; Assign the key to the SignedXml object.\n      signedXml.SigningKey = Key\n      \n      &#39; Create a reference to be signed.\n      Dim reference As New Reference()\n      \n      &#39; Add the passed URI to the reference object.\n      reference.Uri = URIString\n      \n      &#39; Add the reference to the SignedXml object.\n      signedXml.AddReference(reference)\n      \n      &#39; Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n      Dim keyInfo As New KeyInfo()\n      keyInfo.AddClause(New RSAKeyValue(CType(Key, RSA)))\n      signedXml.KeyInfo = keyInfo\n      \n      &#39; Compute the signature.\n      signedXml.ComputeSignature()\n      \n      &#39; Get the XML representation of the signature and save\n      &#39; it to an XmlElement object.\n      Dim xmlDigitalSignature As XmlElement = signedXml.GetXml()\n      \n      &#39; Save the signed XML document to a file specified\n      &#39; using the passed string.\n      Dim xmltw As New XmlTextWriter(XmlSigFileName, New UTF8Encoding(False))\n      xmlDigitalSignature.WriteTo(xmltw)\n      xmltw.Close()\n   End Sub \n \n   &#39; Verify the signature of an XML file and return the result.\n   Public Shared Function VerifyDetachedSignature(XmlSigFileName As String) As [Boolean]\n      &#39; Create a new XML document.\n      Dim xmlDocument As New XmlDocument()\n      \n      &#39; Load the passed XML file into the document.\n      xmlDocument.Load(XmlSigFileName)\n      \n      &#39; Create a new SignedXMl object.\n      Dim signedXml As New SignedXml()\n      \n      &#39; Find the &quot;Signature&quot; node and create a new\n      &#39; XmlNodeList object.\n      Dim nodeList As XmlNodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;)\n      \n      &#39; Load the signature node.\n      signedXml.LoadXml(CType(nodeList(0), XmlElement))\n      \n      &#39; Check the signature and return the result.\n      Return signedXml.CheckSignature()\n   End Function\nEnd Class \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.XML-XMLDsigDetached#1\">//\n// This example signs a file specified by a URI \n// using a detached signature. It then verifies  \n// the signed XML.\n//\n#using &lt;System.Security.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::Xml;\nusing namespace System::Text;\nusing namespace System::Xml;\n\n// Sign an XML file and save the signature in a new file.\nvoid SignDetachedResource( String^ URIString, String^ XmlSigFileName, RSA^ Key )\n{\n   \n   // Create a SignedXml object.\n   SignedXml^ signedXml = gcnew SignedXml;\n   \n   // Assign the key to the SignedXml object.\n   signedXml-&gt;SigningKey = Key;\n   \n   // Create a reference to be signed.\n   Reference^ reference = gcnew Reference;\n   \n   // Add the passed URI to the reference object.\n   reference-&gt;Uri = URIString;\n\n   // Add the reference to the SignedXml object.\n   signedXml-&gt;AddReference( reference );\n   \n   // Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n   KeyInfo^ keyInfo = gcnew KeyInfo;\n   keyInfo-&gt;AddClause( gcnew RSAKeyValue( safe_cast&lt;RSA^&gt;(Key) ) );\n   signedXml-&gt;KeyInfo = keyInfo;\n   \n   // Compute the signature.\n   signedXml-&gt;ComputeSignature();\n   \n   // Get the XML representation of the signature and save\n   // it to an XmlElement object.\n   XmlElement^ xmlDigitalSignature = signedXml-&gt;GetXml();\n   \n   // Save the signed XML document to a file specified\n   // using the passed string.\n   XmlTextWriter^ xmltw = gcnew XmlTextWriter( XmlSigFileName,gcnew UTF8Encoding( false ) );\n   xmlDigitalSignature-&gt;WriteTo( xmltw );\n   xmltw-&gt;Close();\n}\n\n\n// Verify the signature of an XML file and return the result.\nBoolean VerifyDetachedSignature( String^ XmlSigFileName )\n{\n   \n   // Create a new XML document.\n   XmlDocument^ xmlDocument = gcnew XmlDocument;\n   \n   // Load the passed XML file into the document.\n   xmlDocument-&gt;Load( XmlSigFileName );\n   \n   // Create a new SignedXMl object.\n   SignedXml^ signedXml = gcnew SignedXml;\n   \n   // Find the &quot;Signature&quot; node and create a new\n   // XmlNodeList object.\n   XmlNodeList^ nodeList = xmlDocument-&gt;GetElementsByTagName( &quot;Signature&quot; );\n   \n   // Load the signature node.\n   signedXml-&gt;LoadXml( safe_cast&lt;XmlElement^&gt;(nodeList-&gt;Item( 0 )) );\n   \n   // Check the signature and return the result.\n   return signedXml-&gt;CheckSignature();\n}\n\n\n\n[STAThread]\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   \n   // The URI to sign.\n   String^ resourceToSign = &quot;http://www.microsoft.com&quot;;\n   \n   // The name of the file to which to save the XML signature.\n   String^ XmlFileName = &quot;xmldsig.xml&quot;;\n   try\n   {\n      \n      // Generate a signing key.\n      RSACryptoServiceProvider^ Key = gcnew RSACryptoServiceProvider;\n      Console::WriteLine( &quot;Signing: {0}&quot;, resourceToSign );\n      \n      // Sign the detached resourceand save the signature in an XML file.\n      SignDetachedResource( resourceToSign, XmlFileName, Key );\n      Console::WriteLine( &quot;XML signature was succesfully computed and saved to {0}.&quot;, XmlFileName );\n      \n      // Verify the signature of the signed XML.\n      Console::WriteLine( &quot;Verifying signature...&quot; );\n      \n      //Verify the XML signature in the XML file.\n      bool result = VerifyDetachedSignature( XmlFileName );\n      \n      // Display the results of the signature verification to \n      // the console.\n      if ( result )\n      {\n         Console::WriteLine( &quot;The XML signature is valid.&quot; );\n      }\n      else\n      {\n         Console::WriteLine( &quot;The XML signature is not valid.&quot; );\n      }\n   }\n   catch ( CryptographicException^ e ) \n   {\n      Console::WriteLine( e-&gt;Message );\n   }\n\n}\n</code></pre><p> <strong>Example #2</strong>  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.XML.XMLDsigC14NTransform#2\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Security.dll&gt;\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::Xml;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nref class Class1\n{\nprivate:\n   static String^ Certificate = L&quot;..\\\\..\\\\my509.cer&quot;;\n\npublic:\n   [STAThread]\n   static void Main()\n   {\n      // Encrypt an XML message\n      XmlDocument^ productsXml = LoadProducts();\n      ShowTransformProperties( productsXml );\n      SignDocument( productsXml );\n      ShowTransformProperties( productsXml );\n      \n      // Use XmlDsigC14NTransform to resolve a Uri.\n      Uri^ baseUri = gcnew Uri( L&quot;http://www.contoso.com&quot; );\n      String^ relativeUri = L&quot;xml&quot;;\n      Uri^ absoluteUri = ResolveUris( baseUri, relativeUri );\n      Console::WriteLine( L&quot;This sample completed successfully; &quot;\n         L&quot;press Enter to exit.&quot; );\n      Console::ReadLine();\n   }\n\n\nprivate:\n   // Encrypt the text in the specified XmlDocument.\n   static void ShowTransformProperties( XmlDocument^ xmlDoc )\n   {\n      XmlDsigC14NTransform^ xmlTransform =\n         gcnew XmlDsigC14NTransform( true );\n\n      // Ensure the transform is using the appropriate algorithm.\n      xmlTransform-&gt;Algorithm =\n         SignedXml::XmlDsigExcC14NTransformUrl;\n\n      // Retrieve the XML representation of the current transform.\n      XmlElement^ xmlInTransform = xmlTransform-&gt;GetXml();\n\n      Console::WriteLine( L&quot;\\nXml representation of the current transform: &quot; );\n      Console::WriteLine( xmlInTransform-&gt;OuterXml );\n      \n      // Retrieve the valid input types for the current transform.\n      array&lt;Type^&gt;^validInTypes = xmlTransform-&gt;InputTypes;\n\n      // Verify the xmlTransform can accept the XMLDocument as an\n      // input type.\n      for ( int i = 0; i &lt; validInTypes-&gt;Length; i++ )\n      {\n         if ( validInTypes[ i ] == xmlDoc-&gt;GetType() )\n         {\n            // Load the document into the transfrom.\n            xmlTransform-&gt;LoadInput( xmlDoc );\n\n            XmlDsigC14NTransform^ secondTransform = gcnew XmlDsigC14NTransform;\n\n            String^ classDescription = secondTransform-&gt;ToString();\n\n            // This call does not perform as expected.\n            // This transform does not contain inner XML elements\n            secondTransform-&gt;LoadInnerXml( xmlDoc-&gt;SelectNodes( L&quot;//.&quot; ) );\n\n            break;\n         }\n      }\n      \n      array&lt;Type^&gt;^validOutTypes = xmlTransform-&gt;OutputTypes;\n\n      for ( int i = 0; i &lt; validOutTypes-&gt;Length; i++ )\n      {\n         if ( validOutTypes[ i ] == System::IO::Stream::typeid )\n         {\n            try\n            {\n               \n               Type^ streamType = System::IO::Stream::typeid;\n               MemoryStream^ outputStream = static_cast&lt;MemoryStream^&gt;(\n                  xmlTransform-&gt;GetOutput( streamType ));\n\n               // Read the CryptoStream into a stream reader.\n               StreamReader^ streamReader =\n                  gcnew StreamReader( outputStream );\n               \n               // Read the stream into a string.\n               String^ outputMessage = streamReader-&gt;ReadToEnd();\n               \n               // Close the streams.\n               outputStream-&gt;Close();\n               streamReader-&gt;Close();\n               \n               // Display to the console the Xml before and after\n               // encryption.\n               Console::WriteLine( L&quot;Encoding the following xml: {0}&quot;,\n                  xmlDoc-&gt;OuterXml );\n               Console::WriteLine( L&quot;Message encoded: {0}&quot;, outputMessage );\n            }\n            catch ( Exception^ ex ) \n            {\n               Console::WriteLine( L&quot;Unexpected exception caught: {0}&quot;, ex );\n            }\n\n            break;\n         }\n         else\n         {\n            Object^ outputObject = xmlTransform-&gt;GetOutput();\n         }\n      }\n   }\n\n   // Create an XML document describing various products.\n   static XmlDocument^ LoadProducts()\n   {\n      XmlDocument^ xmlDoc = gcnew XmlDocument;\n      String^ contosoProducts = L&quot;&lt;PRODUCTS&gt;&quot;;\n      contosoProducts = String::Concat( contosoProducts,\n         L&quot;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&quot;);\n      contosoProducts = String::Concat( contosoProducts,\n         L&quot;&lt;DESCRIPTION&gt;Router&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&quot;);\n      contosoProducts = String::Concat( contosoProducts,\n         L&quot;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&quot;);\n       contosoProducts = String::Concat( contosoProducts,\n        L&quot;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&quot;);\n      \n      // Include a comment to test the comments feature of the transform.\n      contosoProducts = String::Concat( contosoProducts,\n         L&quot;&lt;!--Comments are included in the transform--&gt;&quot; );\n      \n      // Include the CDATA tag to test the transform results.\n      contosoProducts = String::Concat( contosoProducts,\n         L&quot;&lt;PARTNER_URL&gt;&lt;![CDATA[&#39;http:\\\\\\\\www.contoso.com&quot; );\n      contosoProducts = String::Concat( contosoProducts,\n         L&quot;\\\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;&quot; );\n      contosoProducts = String::Concat( contosoProducts,\n         L&quot;&lt;/PRODUCTS&gt;&quot; );\n\n      xmlDoc-&gt;LoadXml( contosoProducts );\n      return xmlDoc;\n   }\n\n   // Create a signature and add it to the specified document.\n   static void SignDocument( XmlDocument^ xmlDoc )\n   {\n      // Generate a signing key.\n      RSACryptoServiceProvider^ Key = gcnew RSACryptoServiceProvider;\n      \n      // Create a SignedXml object.\n      SignedXml^ signedXml = gcnew SignedXml( xmlDoc );\n      \n      // Add the key to the SignedXml document.\n      signedXml-&gt;SigningKey = Key;\n      \n      // Create a reference to be signed.\n      Reference^ reference = gcnew Reference;\n      reference-&gt;Uri = L&quot;&quot;;\n      \n      // Add an enveloped transformation to the reference.\n      reference-&gt;AddTransform( gcnew XmlDsigC14NTransform );\n      \n      // Add the reference to the SignedXml object.\n      signedXml-&gt;AddReference( reference );\n      try\n      {\n         // Create a new KeyInfo object.\n         KeyInfo^ keyInfo = gcnew KeyInfo;\n         \n         // Load the X509 certificate.\n         X509Certificate^ MSCert =\n            X509Certificate::CreateFromCertFile( Certificate );\n         \n         // Load the certificate into a KeyInfoX509Data object\n         // and add it to the KeyInfo object.\n         keyInfo-&gt;AddClause( gcnew KeyInfoX509Data( MSCert ) );\n         \n         // Add the KeyInfo object to the SignedXml object.\n         signedXml-&gt;KeyInfo = keyInfo;\n      }\n      catch ( FileNotFoundException^ ) \n      {\n         Console::WriteLine( L&quot;Unable to locate the following file: {0}&quot;,\n            Certificate );\n      }\n      catch ( CryptographicException^ ex ) \n      {\n         Console::WriteLine( L&quot;Unexpected exception caught while creating &quot;\n         L&quot;the certificate:{0}&quot;, ex );\n      }\n      \n      // Compute the signature.\n      signedXml-&gt;ComputeSignature();\n      \n      // Add the signature branch to the original tree so it is enveloped.\n      xmlDoc-&gt;DocumentElement-&gt;AppendChild( signedXml-&gt;GetXml() );\n   }\n\n   // Resolve the specified base and relative Uri&#39;s .\n   static Uri^ ResolveUris( Uri^ baseUri, String^ relativeUri )\n   {\n      XmlUrlResolver^ xmlResolver = gcnew XmlUrlResolver;\n      xmlResolver-&gt;Credentials =\n         System::Net::CredentialCache::DefaultCredentials;\n      XmlDsigC14NTransform^ xmlTransform = gcnew XmlDsigC14NTransform;\n      xmlTransform-&gt;Resolver = xmlResolver;\n\n      Uri^ absoluteUri = xmlResolver-&gt;ResolveUri( baseUri, relativeUri );\n      if ( absoluteUri != nullptr )\n      {\n         Console::WriteLine(\n            L&quot;\\nResolved the base Uri and relative Uri to the following:&quot; );\n         Console::WriteLine( absoluteUri );\n      }\n      else\n      {\n         Console::WriteLine( L&quot;Unable to resolve the base Uri and relative Uri&quot; );\n      }\n\n      return absoluteUri;\n   }\n};\n\nint main()\n{\n   Class1::Main();\n}\n\n//\n// This sample produces the following output:\n//\n// Xml representation of the current transform:\n// &lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; xmln\n// s=&quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n// Encoding the following xml: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rou\n// ter&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESC\n// RIPTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL\n// &gt;&lt;![CDATA[&#39;http:\\\\www.contoso.com\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;\n// &lt;/PRODUCTS&gt;Message encoded: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rou\n// ter&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESC\n// RIPTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL\n// &gt;&#39;http:\\\\www.contoso.com\\partner.asp?h1=en&amp;amp;h2=cr&#39;&lt;/PARTNER_URL&gt;&lt;/PRODUC\n// TS&gt;\n// Xml representation of the current transform:\n// &lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; xmln\n// s=&quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n// Encoding the following xml: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rou\n// ter&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESC\n// RIPTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL\n// &gt;&lt;![CDATA[&#39;http:\\\\www.contoso.com\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;\n// &lt;Signature xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;&lt;SignedInfo&gt;&lt;Canonica\n// lizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;\n// /&gt;&lt;SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot; /\n// &gt;&lt;Reference URI=&quot;&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2\n// 001/REC-xml-c14n-20010315&quot; /&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://w\n// ww.w3.org/2000/09/xmldsig#sha1&quot; /&gt;&lt;DigestValue&gt;BFN2s0/NA2NGgb/R0mvfnNM0Ito=\n// &lt;/DigestValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;vSfZUG5xHuNxzOSEbQjN\n// dtEt1D+O7I1LTJ13RrwLaJSfQPrdT/s8IeaA+idw2f2WGuGrdqMJUddpE4GxfK61HmPQ6S7lBG+\n// +ND+YaUYf2AtTRs3SnToXQQrARa/pHVjsKxYHR/9tjy6maHBwxjgjFQABvYZu0gZHYRuXvvfxv0\n// 8=&lt;/SignatureValue&gt;&lt;KeyInfo&gt;&lt;X509Data xmlns=&quot;http://www.w3.org/2000/09/xmld\n// sig#&quot;&gt;&lt;X509Certificate&gt;MIICCzCCAXSgAwIBAgIQ5eVQY8pRZ5xBF2WLkYPjijANBgkqhkiG\n// 9w0BAQQFADAbMRkwFwYDVQQDExBHcmVnc0NlcnRpZmljYXRlMB4XDTAzMDkxNzIzMzU0N1oXDTM\n// 5MTIzMTIzNTk1OVowGzEZMBcGA1UEAxMQR3JlZ3NDZXJ0aWZpY2F0ZTCBnzANBgkqhkiG9w0BAQ\n// EFAAOBjQAwgYkCgYEAmFJ4v7rS3BYTXgVW9PgBFfTYAcB/m9mOFCmUrrChcBpoEtu/tSESlNfEH\n// pECIdqg9vUrCNSkY08HRn3ueNeBSnSpssWd8/XoOboWLh1nd+79Y5uZd1WOJI4s0XM0MegZgCoJ\n// cEEhpxCd/HOPIQvEsbpN/DuFiovZLo+Ek3hHoxMCAwEAAaNQME4wTAYDVR0BBEUwQ4AQaCb19dl\n// yf/zSxPVYQZY9AKEdMBsxGTAXBgNVBAMTEEdyZWdzQ2VydGlmaWNhdGWCEOXlUGPKUWecQRdli5\n// GD44owDQYJKoZIhvcNAQEEBQADgYEAZuZaFDGDJogh7FuT0hfaMAVlRONv6wWVBJVV++eUo38Xu\n// RfJ5nNJ0UnhiV2sEtLobYBPEIrNhuk8skdU0AHgx4ILiA4rR96ifWwxtrFQF+h+DL2ZB7xhwcOJ\n// +Pa7IC4wIaEp/oBmmX+JHSzfQt6/If4ohwikfxfljKMyIcMlwl4=&lt;/X509Certificate&gt;&lt;/X50\n// 9Data&gt;&lt;/KeyInfo&gt;&lt;/Signature&gt;&lt;/PRODUCTS&gt;\n//\n// Message encoded: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Router&lt;/DESCRI\n// PTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRIPTION&gt;&lt;/P\n// RODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL&gt;&#39;http:\\\\ww\n// w.contoso.com\\partner.asp?h1=en&amp;amp;h2=cr&#39;&lt;/PARTNER_URL&gt;&lt;Signature&gt;&lt;SignedI\n// nfo&gt;&lt;CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c1\n// 4n-20010315&quot;&gt;&lt;/CanonicalizationMethod&gt;&lt;SignatureMethod Algorithm=&quot;http://ww\n// w.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;&lt;/SignatureMethod&gt;&lt;Reference URI=&quot;&quot;&gt;&lt;Tra\n// nsforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-200103\n// 15&quot;&gt;&lt;/Transform&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://www.w3.org/200\n// 0/09/xmldsig#sha1&quot;&gt;&lt;/DigestMethod&gt;&lt;DigestValue&gt;BFN2s0/NA2NGgb/R0mvfnNM0Ito=\n// &lt;/DigestValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;vSfZUG5xHuNxzOSEbQjN\n// dtEt1D+O7I1LTJ13RrwLaJSfQPrdT/s8IeaA+idw2f2WGuGrdqMJUddpE4GxfK61HmPQ6S7lBG+\n// +ND+YaUYf2AtTRs3SnToXQQrARa/pHVjsKxYHR/9tjy6maHBwxjgjFQABvYZu0gZHYRuXvvfxv0\n// 8=&lt;/SignatureValue&gt;&lt;KeyInfo&gt;&lt;X509Data xmlns=&quot;http://www.w3.org/2000/09/xmld\n// sig#&quot;&gt;&lt;X509Certificate&gt;MIICCzCCAXSgAwIBAgIQ5eVQY8pRZ5xBF2WLkYPjijANBgkqhkiG\n// 9w0BAQQFADAbMRkwFwYDVQQDExBHcmVnc0NlcnRpZmljYXRlMB4XDTAzMDkxNzIzMzU0N1oXDTM\n// 5MTIzMTIzNTk1OVowGzEZMBcGA1UEAxMQR3JlZ3NDZXJ0aWZpY2F0ZTCBnzANBgkqhkiG9w0BAQ\n// EFAAOBjQAwgYkCgYEAmFJ4v7rS3BYTXgVW9PgBFfTYAcB/m9mOFCmUrrChcBpoEtu/tSESlNfEH\n// pECIdqg9vUrCNSkY08HRn3ueNeBSnSpssWd8/XoOboWLh1nd+79Y5uZd1WOJI4s0XM0MegZgCoJ\n// cEEhpxCd/HOPIQvEsbpN/DuFiovZLo+Ek3hHoxMCAwEAAaNQME4wTAYDVR0BBEUwQ4AQaCb19dl\n// yf/zSxPVYQZY9AKEdMBsxGTAXBgNVBAMTEEdyZWdzQ2VydGlmaWNhdGWCEOXlUGPKUWecQRdli5\n// GD44owDQYJKoZIhvcNAQEEBQADgYEAZuZaFDGDJogh7FuT0hfaMAVlRONv6wWVBJVV++eUo38Xu\n// RfJ5nNJ0UnhiV2sEtLobYBPEIrNhuk8skdU0AHgx4ILiA4rR96ifWwxtrFQF+h+DL2ZB7xhwcOJ\n// +Pa7IC4wIaEp/oBmmX+JHSzfQt6/If4ohwikfxfljKMyIcMlwl4=&lt;/X509Certificate&gt;&lt;/X50\n// 9Data&gt;&lt;/KeyInfo&gt;&lt;/Signature&gt;&lt;/PRODUCTS&gt;\n//\n// Resolved the base Uri and relative Uri to the following:\n// http://www.contoso.com/xml\n// This sample completed successfully; press Enter to exit.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.XML.XMLDsigC14NTransform#2\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\nusing System.Security.Cryptography.X509Certificates;\n\nclass Class1\n{\n    private static string Certificate =  &quot;..\\\\..\\\\my509.cer&quot;;\n\n    [STAThread]\n    static void Main(string[] args)\n    {\n        // Encrypt an XML message\n        XmlDocument productsXml = LoadProducts();\n        ShowTransformProperties(productsXml);\n\n        SignDocument(ref productsXml);\n        ShowTransformProperties(productsXml);\n\n        // Use XmlDsigC14NTransform to resolve a Uri.\n        Uri baseUri = new Uri(&quot;http://www.contoso.com&quot;);\n        string relativeUri = &quot;xml&quot;;\n        Uri absoluteUri = ResolveUris(baseUri, relativeUri);\n\n        Console.WriteLine(&quot;This sample completed successfully; &quot; +\n            &quot;press Enter to exit.&quot;);\n        Console.ReadLine();\n    }\n\n    // Encrypt the text in the specified XmlDocument.\n    private static void ShowTransformProperties(XmlDocument xmlDoc)\n    {\n        XmlDsigC14NTransform xmlTransform = \n            new XmlDsigC14NTransform(true);\n\n        // Ensure the transform is using the appropriate algorithm.\n        xmlTransform.Algorithm =\n            SignedXml.XmlDsigExcC14NTransformUrl;\n\n        // Retrieve the XML representation of the current transform.\n        XmlElement xmlInTransform = xmlTransform.GetXml();\n\n        Console.WriteLine(&quot;\\nXml representation of the current transform: &quot;);\n        Console.WriteLine(xmlInTransform.OuterXml);\n\n        // Retrieve the valid input types for the current transform.\n        Type[] validInTypes = xmlTransform.InputTypes;\n\n        // Verify the xmlTransform can accept the XMLDocument as an\n        // input type.\n        for (int i=0; i&lt;validInTypes.Length; i++)\n        {\n            if (validInTypes[i] == xmlDoc.GetType())\n            {\n                // Load the document into the transfrom.\n                xmlTransform.LoadInput(xmlDoc);\n\n                XmlDsigC14NTransform secondTransform = \n                    new XmlDsigC14NTransform();\n\n                string classDescription = secondTransform.ToString();\n\n                // This call does not perform as expected.\n                // This transform does not contain inner XML elements\n                secondTransform.LoadInnerXml(xmlDoc.SelectNodes(&quot;//.&quot;));\n\n                break;\n            }\n        }\n\n        Type[] validOutTypes = xmlTransform.OutputTypes;\n\n        for (int i=0; i&lt;validOutTypes.Length;i++)\n        {\n            if (validOutTypes[i] == typeof(System.IO.Stream))\n            {\n                try \n                {\n                    Type streamType = typeof(System.IO.Stream);\n                    MemoryStream outputStream = (MemoryStream) \n                        xmlTransform.GetOutput(streamType);\n\n                    // Read the CryptoStream into a stream reader.\n                    StreamReader streamReader =\n                        new StreamReader(outputStream);\n\n                    // Read the stream into a string.\n                    string outputMessage = streamReader.ReadToEnd();\n\n                    // Close the streams.\n                    outputStream.Close();\n                    streamReader.Close();\n\n                    // Display to the console the Xml before and after\n                    // encryption.\n                    Console.WriteLine(&quot;Encoding the following xml: &quot; +\n                        xmlDoc.OuterXml);\n                    Console.WriteLine(&quot;Message encoded: &quot; + outputMessage);\n                }\n                catch (Exception ex)\n                {\n                    Console.WriteLine(&quot;Unexpected exception caught: &quot; +\n                        ex.ToString());\n                }\n\n                break;\n            }\n            else\n            {\n                object outputObject = xmlTransform.GetOutput();\n            }\n        }\n    }\n\n    // Create an XML document describing various products.\n    private static XmlDocument LoadProducts()\n    {\n        XmlDocument xmlDoc = new XmlDocument();\n\n        string contosoProducts = &quot;&lt;PRODUCTS&gt;&quot;;\n        contosoProducts += &quot;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&quot;;\n        contosoProducts += &quot;&lt;DESCRIPTION&gt;Router&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&quot;;\n        contosoProducts += &quot;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&quot;;\n        contosoProducts += &quot;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&quot;;\n\n        // Include a comment to test the comments feature of the transform.\n        contosoProducts += &quot;&lt;!--Comments are included in the transform--&gt;&quot;;\n\n        // Include the CDATA tag to test the transform results.\n        contosoProducts += &quot;&lt;PARTNER_URL&gt;&lt;![CDATA[&#39;http:\\\\\\\\www.contoso.com&quot;;\n        contosoProducts += &quot;\\\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;&quot;;\n        contosoProducts += &quot;&lt;/PRODUCTS&gt;&quot;;\n\n        xmlDoc.LoadXml(contosoProducts);\n        return xmlDoc;\n    }\n\n    // Create a signature and add it to the specified document.\n    private static void SignDocument(ref XmlDocument xmlDoc)\n    {\n        // Generate a signing key.\n        RSACryptoServiceProvider Key = new RSACryptoServiceProvider();\n\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml(xmlDoc);\n\n        // Add the key to the SignedXml document. \n        signedXml.SigningKey = Key;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n        reference.Uri = &quot;&quot;;\n\n        // Add an enveloped transformation to the reference.\n        reference.AddTransform(new XmlDsigC14NTransform());\n\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n        try \n        {\n            // Create a new KeyInfo object.\n            KeyInfo keyInfo = new KeyInfo();\n\n            // Load the X509 certificate.\n            X509Certificate MSCert =\n                X509Certificate.CreateFromCertFile(Certificate);\n\n            // Load the certificate into a KeyInfoX509Data object\n            // and add it to the KeyInfo object.\n            keyInfo.AddClause(new KeyInfoX509Data(MSCert));\n\n            // Add the KeyInfo object to the SignedXml object.\n            signedXml.KeyInfo = keyInfo;\n        }\n        catch (FileNotFoundException)\n        {\n            Console.WriteLine(&quot;Unable to locate the following file: &quot; + \n                Certificate);\n        }\n        catch (CryptographicException ex)\n        {\n            Console.WriteLine(&quot;Unexpected exception caught whild creating &quot; +\n                &quot;the certificate:&quot; + ex.ToString());\n        }\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Add the signature branch to the original tree so it is enveloped.\n        xmlDoc.DocumentElement.AppendChild(signedXml.GetXml());\n    }\n\n    // Resolve the specified base and relative Uri&#39;s .\n    private static Uri ResolveUris(Uri baseUri, string relativeUri)\n    {\n        XmlUrlResolver xmlResolver = new XmlUrlResolver();\n        xmlResolver.Credentials = \n            System.Net.CredentialCache.DefaultCredentials;\n\n        XmlDsigC14NTransform xmlTransform =\n            new XmlDsigC14NTransform();\n        xmlTransform.Resolver = xmlResolver;\n\n        Uri absoluteUri = xmlResolver.ResolveUri(baseUri, relativeUri);\n\n        if (absoluteUri != null)\n        {\n            Console.WriteLine(\n                &quot;\\nResolved the base Uri and relative Uri to the following:&quot;);\n            Console.WriteLine(absoluteUri.ToString());\n        }\n        else\n        {\n            Console.WriteLine(\n                &quot;Unable to resolve the base Uri and relative Uri&quot;);\n        }\n        return absoluteUri;\n    }\n}\n//\n// This sample produces the following output:\n//\n// Xml representation of the current transform:\n// &lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; xmln\n// s=&quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n// Encoding the following xml: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rou\n// ter&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESC\n// RIPTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL\n// &gt;&lt;![CDATA[&#39;http:\\\\www.contoso.com\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;\n// &lt;/PRODUCTS&gt;Message encoded: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rou\n// ter&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESC\n// RIPTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL\n// &gt;&#39;http:\\\\www.contoso.com\\partner.asp?h1=en&amp;amp;h2=cr&#39;&lt;/PARTNER_URL&gt;&lt;/PRODUC\n// TS&gt;\n\n// Xml representation of the current transform:\n// &lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; xmln\n// s=&quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n// Encoding the following xml: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rou\n// ter&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESC\n// RIPTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL\n// &gt;&lt;![CDATA[&#39;http:\\\\www.contoso.com\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;\n// &lt;Signature xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;&lt;SignedInfo&gt;&lt;Canonica\n// lizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; \n// /&gt;&lt;SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot; /\n// &gt;&lt;Reference URI=&quot;&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2\n// 001/REC-xml-c14n-20010315&quot; /&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://w\n// ww.w3.org/2000/09/xmldsig#sha1&quot; /&gt;&lt;DigestValue&gt;BFN2s0/NA2NGgb/R0mvfnNM0Ito=\n// &lt;/DigestValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;vSfZUG5xHuNxzOSEbQjN\n// dtEt1D+O7I1LTJ13RrwLaJSfQPrdT/s8IeaA+idw2f2WGuGrdqMJUddpE4GxfK61HmPQ6S7lBG+\n// +ND+YaUYf2AtTRs3SnToXQQrARa/pHVjsKxYHR/9tjy6maHBwxjgjFQABvYZu0gZHYRuXvvfxv0\n// 8=&lt;/SignatureValue&gt;&lt;KeyInfo&gt;&lt;X509Data xmlns=&quot;http://www.w3.org/2000/09/xmld\n// sig#&quot;&gt;&lt;X509Certificate&gt;MIICCzCCAXSgAwIBAgIQ5eVQY8pRZ5xBF2WLkYPjijANBgkqhkiG\n// 9w0BAQQFADAbMRkwFwYDVQQDExBHcmVnc0NlcnRpZmljYXRlMB4XDTAzMDkxNzIzMzU0N1oXDTM\n// 5MTIzMTIzNTk1OVowGzEZMBcGA1UEAxMQR3JlZ3NDZXJ0aWZpY2F0ZTCBnzANBgkqhkiG9w0BAQ\n// EFAAOBjQAwgYkCgYEAmFJ4v7rS3BYTXgVW9PgBFfTYAcB/m9mOFCmUrrChcBpoEtu/tSESlNfEH\n// pECIdqg9vUrCNSkY08HRn3ueNeBSnSpssWd8/XoOboWLh1nd+79Y5uZd1WOJI4s0XM0MegZgCoJ\n// cEEhpxCd/HOPIQvEsbpN/DuFiovZLo+Ek3hHoxMCAwEAAaNQME4wTAYDVR0BBEUwQ4AQaCb19dl\n// yf/zSxPVYQZY9AKEdMBsxGTAXBgNVBAMTEEdyZWdzQ2VydGlmaWNhdGWCEOXlUGPKUWecQRdli5\n// GD44owDQYJKoZIhvcNAQEEBQADgYEAZuZaFDGDJogh7FuT0hfaMAVlRONv6wWVBJVV++eUo38Xu\n// RfJ5nNJ0UnhiV2sEtLobYBPEIrNhuk8skdU0AHgx4ILiA4rR96ifWwxtrFQF+h+DL2ZB7xhwcOJ\n// +Pa7IC4wIaEp/oBmmX+JHSzfQt6/If4ohwikfxfljKMyIcMlwl4=&lt;/X509Certificate&gt;&lt;/X50\n// 9Data&gt;&lt;/KeyInfo&gt;&lt;/Signature&gt;&lt;/PRODUCTS&gt;\n//\n// Message encoded: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Router&lt;/DESCRI\n// PTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRIPTION&gt;&lt;/P\n// RODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL&gt;&#39;http:\\\\ww\n// w.contoso.com\\partner.asp?h1=en&amp;amp;h2=cr&#39;&lt;/PARTNER_URL&gt;&lt;Signature&gt;&lt;SignedI\n// nfo&gt;&lt;CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c1\n// 4n-20010315&quot;&gt;&lt;/CanonicalizationMethod&gt;&lt;SignatureMethod Algorithm=&quot;http://ww\n// w.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;&lt;/SignatureMethod&gt;&lt;Reference URI=&quot;&quot;&gt;&lt;Tra\n// nsforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-200103\n// 15&quot;&gt;&lt;/Transform&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://www.w3.org/200\n// 0/09/xmldsig#sha1&quot;&gt;&lt;/DigestMethod&gt;&lt;DigestValue&gt;BFN2s0/NA2NGgb/R0mvfnNM0Ito=\n// &lt;/DigestValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;vSfZUG5xHuNxzOSEbQjN\n// dtEt1D+O7I1LTJ13RrwLaJSfQPrdT/s8IeaA+idw2f2WGuGrdqMJUddpE4GxfK61HmPQ6S7lBG+\n// +ND+YaUYf2AtTRs3SnToXQQrARa/pHVjsKxYHR/9tjy6maHBwxjgjFQABvYZu0gZHYRuXvvfxv0\n// 8=&lt;/SignatureValue&gt;&lt;KeyInfo&gt;&lt;X509Data xmlns=&quot;http://www.w3.org/2000/09/xmld\n// sig#&quot;&gt;&lt;X509Certificate&gt;MIICCzCCAXSgAwIBAgIQ5eVQY8pRZ5xBF2WLkYPjijANBgkqhkiG\n// 9w0BAQQFADAbMRkwFwYDVQQDExBHcmVnc0NlcnRpZmljYXRlMB4XDTAzMDkxNzIzMzU0N1oXDTM\n// 5MTIzMTIzNTk1OVowGzEZMBcGA1UEAxMQR3JlZ3NDZXJ0aWZpY2F0ZTCBnzANBgkqhkiG9w0BAQ\n// EFAAOBjQAwgYkCgYEAmFJ4v7rS3BYTXgVW9PgBFfTYAcB/m9mOFCmUrrChcBpoEtu/tSESlNfEH\n// pECIdqg9vUrCNSkY08HRn3ueNeBSnSpssWd8/XoOboWLh1nd+79Y5uZd1WOJI4s0XM0MegZgCoJ\n// cEEhpxCd/HOPIQvEsbpN/DuFiovZLo+Ek3hHoxMCAwEAAaNQME4wTAYDVR0BBEUwQ4AQaCb19dl\n// yf/zSxPVYQZY9AKEdMBsxGTAXBgNVBAMTEEdyZWdzQ2VydGlmaWNhdGWCEOXlUGPKUWecQRdli5\n// GD44owDQYJKoZIhvcNAQEEBQADgYEAZuZaFDGDJogh7FuT0hfaMAVlRONv6wWVBJVV++eUo38Xu\n// RfJ5nNJ0UnhiV2sEtLobYBPEIrNhuk8skdU0AHgx4ILiA4rR96ifWwxtrFQF+h+DL2ZB7xhwcOJ\n// +Pa7IC4wIaEp/oBmmX+JHSzfQt6/If4ohwikfxfljKMyIcMlwl4=&lt;/X509Certificate&gt;&lt;/X50\n// 9Data&gt;&lt;/KeyInfo&gt;&lt;/Signature&gt;&lt;/PRODUCTS&gt;\n//\n// Resolved the base Uri and relative Uri to the following:\n// http://www.contoso.com/xml\n// This sample completed successfully; press Enter to exit.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.XML.XMLDsigC14NTransform#2\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\nImports System.Security.Cryptography.X509Certificates\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private certificateFilePath As String = &quot;..\\\\my509.cer&quot;\n\n    &#39; Event handler for Run button.\n    Private Sub Button1_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        tbxOutput.Cursor = Cursors.WaitCursor\n        tbxOutput.Text = &quot;&quot;\n\n        &#39; Encrypt an XML message\n        Dim productsXml As XmlDocument = LoadProducts()\n        ShowTransformProperties(productsXml)\n\n        SignDocument(productsXml)\n        ShowTransformProperties(productsXml)\n\n        &#39; Use XmlDsigC14NTransform to resolve a Uri.\n        Dim baseUri As New Uri(&quot;http://www.contoso.com&quot;)\n        Dim relativeUri As String = &quot;xml&quot;\n        Dim absoluteUri As Uri = ResolveUris(baseUri, relativeUri)\n\n        &#39; Align interface and conclude application.\n        WriteLine(vbCrLf + &quot;This sample completed successfully;&quot; + _\n            &quot; press Exit to continue.&quot;)\n\n        &#39; Reset the cursor.\n        tbxOutput.Cursor = Cursors.Default\n    End Sub\n\n    &#39; Encrypt the text in the specified XmlDocument.\n    Private Sub ShowTransformProperties(ByVal xmlDoc As XmlDocument)\n        Dim xmlTransform As New XmlDsigC14NTransform(True)\n\n        &#39; Ensure the transform is using the appropriate algorithm.\n        xmlTransform.Algorithm = _\n            SignedXml.XmlDsigExcC14NTransformUrl\n\n        &#39; Retrieve the XML representation of the current transform.\n        Dim xmlInTransform As XmlElement = xmlTransform.GetXml()\n\n        WriteLine(vbCrLf + &quot;Xml representation of the current transform: &quot;)\n        WriteLine(xmlInTransform.OuterXml)\n\n        &#39; Retrieve the valid input types for the current transform.\n        Dim validInTypes() As Type = xmlTransform.InputTypes\n\n        &#39; Verify the xmlTransform can accept the XMLDocument as an\n        &#39; input type.\n        For i As Int16 = 0 To validInTypes.Length Step 1\n            If (validInTypes(i).Equals(xmlDoc.GetType())) Then\n                &#39; Load the document into the transfrom.\n                xmlTransform.LoadInput(xmlDoc)\n\n                Dim secondTransform As New XmlDsigC14NTransform\n\n                Dim classDescription As String = secondTransform.ToString()\n\n                &#39; This call does not perform as expected.\n                &#39; This transform does not contain inner XML elements\n                secondTransform.LoadInnerXml(xmlDoc.SelectNodes(&quot;//.&quot;))\n                Exit For\n            End If\n        Next\n\n        Dim validOutTypes() As Type = xmlTransform.OutputTypes\n        For i As Int16 = 0 To validOutTypes.Length - 1 Step 1\n            If (validOutTypes(i).Equals(GetType(System.IO.Stream))) Then\n                Try\n                    Dim streamType As Type = GetType(System.IO.Stream)\n                    Dim outputStream As MemoryStream\n                    outputStream = CType( _\n                        xmlTransform.GetOutput(streamType), _\n                        MemoryStream)\n\n                    &#39; Read the CryptoStream into a stream reader.\n                    Dim streamReader As New StreamReader(outputStream)\n\n                    &#39; Read the stream into a string.\n                    Dim outputMessage As String = streamReader.ReadToEnd()\n\n                    &#39; Close the streams.\n                    outputStream.Close()\n                    streamReader.Close()\n\n                    &#39; Display to the console the Xml before and after\n                    &#39; encryption.\n                    WriteLine(&quot;Encoding the following xml: &quot; + _\n                        xmlDoc.OuterXml)\n                    WriteLine(&quot;Message encoded: &quot; + outputMessage)\n\n                Catch ex As Exception\n                    WriteLine(&quot;Unexpected exception caught: &quot; + ex.ToString())\n\n                End Try\n            Else\n                Dim outputObject As Object = xmlTransform.GetOutput()\n\n            End If\n        Next\n    End Sub\n\n    &#39; Create an XML document describing various products.\n    Private Function LoadProducts() As XmlDocument\n        Dim xmlDoc As New XmlDocument\n\n        Dim contosoProducts As String = &quot;&lt;PRODUCTS&gt;&quot;\n        contosoProducts += &quot;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&quot;\n        contosoProducts += &quot;&lt;DESCRIPTION&gt;Router&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&quot;\n        contosoProducts += &quot;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&quot;\n        contosoProducts += &quot;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&quot;\n\n        &#39; Include a comment to test the comments feature of the transform.\n        contosoProducts += &quot;&lt;!--Comments are included in the transform--&gt;&quot;\n\n        &#39; Include the CDATA tag to test the transform results.\n        contosoProducts += &quot;&lt;PARTNER_URL&gt;&lt;![CDATA[&#39;http:\\\\\\\\www.contoso.com&quot;\n        contosoProducts += &quot;\\\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;&quot;\n        contosoProducts += &quot;&lt;/PRODUCTS&gt;&quot;\n\n        xmlDoc.LoadXml(contosoProducts)\n        Return xmlDoc\n    End Function\n\n    &#39; Create a signature and add it to the specified document.\n    Private Sub SignDocument(ByRef xmlDoc As XmlDocument)\n        &#39; Generate a signing key.\n        Dim Key As New RSACryptoServiceProvider\n\n        &#39; Create a SignedXml object.\n        Dim signedXml As New SignedXml(xmlDoc)\n\n        &#39; Add the key to the SignedXml document. \n        signedXml.SigningKey = Key\n\n        &#39; Create a reference to be signed.\n        Dim reference As New Reference\n        reference.Uri = &quot;&quot;\n\n        &#39; Add an enveloped transformation to the reference.\n        reference.AddTransform(New XmlDsigC14NTransform)\n\n        &#39; Add the reference to the SignedXml object.\n        signedXml.AddReference(reference)\n\n        Try\n            &#39; Create a new KeyInfo object.\n            Dim keyInfo As New KeyInfo\n\n            &#39; Load the X509 certificate.\n            Dim certificate As X509Certificate\n            certificate = X509Certificate.CreateFromCertFile( _\n                certificateFilePath)\n\n            &#39; Load the certificate into a KeyInfoX509Data object\n            &#39; and add it to the KeyInfo object.\n            keyInfo.AddClause(New KeyInfoX509Data(certificate))\n\n            &#39; Add the KeyInfo object to the SignedXml object.\n            signedXml.KeyInfo = keyInfo\n        Catch ex As FileNotFoundException\n            WriteLine(&quot;Unable to locate the following file: &quot; + _\n                certificateFilePath)\n        Catch ex As CryptographicException\n            WriteLine(&quot;Unexpected exception caught whild creating &quot; + _\n                &quot;the certificate:&quot; + ex.ToString())\n        End Try\n\n        &#39; Compute the signature.\n        signedXml.ComputeSignature()\n\n        &#39; Add the signature branch to the original tree so it is enveloped.\n        xmlDoc.DocumentElement.AppendChild(signedXml.GetXml())\n    End Sub\n\n    &#39; Resolve the specified base and relative Uri&#39;s .\n    Private Function ResolveUris( _\n        ByVal baseUri As Uri, _\n        ByVal relativeUri As String) As Uri\n\n        Dim xmlResolver As New XmlUrlResolver\n        xmlResolver.Credentials = _\n            System.Net.CredentialCache.DefaultCredentials\n\n        Dim xmlTransform As New XmlDsigC14NTransform\n        xmlTransform.Resolver = xmlResolver\n\n        Dim absoluteUri As Uri = xmlResolver.ResolveUri(baseUri, relativeUri)\n\n        If Not absoluteUri Is Nothing Then\n            WriteLine(vbCrLf + _\n                &quot;Resolved the base Uri and relative Uri to the following:&quot;)\n            WriteLine(absoluteUri.ToString())\n        Else\n            WriteLine(&quot;Unable to resolve the base Uri and relative Uri&quot;)\n        End If\n\n        Return absoluteUri\n    End Function\n\n    &#39; Write specified message and carriage return to the output textbox.\n    Private Sub WriteLine(ByVal message As String)\n        tbxOutput.AppendText(message + vbCrLf)\n\n    End Sub\n\n    &#39; Event handler for Exit button.\n    Private Sub Button2_Click( _\n        ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button2.Click\n\n        Application.Exit()\n    End Sub\n#Region &quot; Windows Form Designer generated code &quot;\n\n    Public Sub New()\n        MyBase.New()\n\n        &#39;This call is required by the Windows Form Designer.\n        InitializeComponent()\n\n        &#39;Add any initialization after the InitializeComponent() call\n\n    End Sub\n\n    &#39;Form overrides dispose to clean up the component list.\n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            If Not (components Is Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    &#39;Required by the Windows Form Designer\n    Private components As System.ComponentModel.IContainer\n\n    &#39;NOTE: The following procedure is required by the Windows Form Designer\n    &#39;It can be modified using the Windows Form Designer.  \n    &#39;Do not modify it using the code editor.\n    Friend WithEvents Panel2 As System.Windows.Forms.Panel\n    Friend WithEvents Panel1 As System.Windows.Forms.Panel\n    Friend WithEvents Button1 As System.Windows.Forms.Button\n    Friend WithEvents Button2 As System.Windows.Forms.Button\n    Friend WithEvents tbxOutput As System.Windows.Forms.RichTextBox\n    &lt;System.Diagnostics.DebuggerStepThrough()&gt; _\n    Private Sub InitializeComponent()\n        Me.Panel2 = New System.Windows.Forms.Panel\n        Me.Button1 = New System.Windows.Forms.Button\n        Me.Button2 = New System.Windows.Forms.Button\n        Me.Panel1 = New System.Windows.Forms.Panel\n        Me.tbxOutput = New System.Windows.Forms.RichTextBox\n        Me.Panel2.SuspendLayout()\n        Me.Panel1.SuspendLayout()\n        Me.SuspendLayout()\n        &#39;\n        &#39;Panel2\n        &#39;\n        Me.Panel2.Controls.Add(Me.Button1)\n        Me.Panel2.Controls.Add(Me.Button2)\n        Me.Panel2.Dock = System.Windows.Forms.DockStyle.Bottom\n        Me.Panel2.DockPadding.All = 20\n        Me.Panel2.Location = New System.Drawing.Point(0, 320)\n        Me.Panel2.Name = &quot;Panel2&quot;\n        Me.Panel2.Size = New System.Drawing.Size(616, 64)\n        Me.Panel2.TabIndex = 1\n        &#39;\n        &#39;Button1\n        &#39;\n        Me.Button1.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button1.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button1.Location = New System.Drawing.Point(446, 20)\n        Me.Button1.Name = &quot;Button1&quot;\n        Me.Button1.Size = New System.Drawing.Size(75, 24)\n        Me.Button1.TabIndex = 2\n        Me.Button1.Text = &quot;&amp;Run&quot;\n        &#39;\n        &#39;Button2\n        &#39;\n        Me.Button2.Dock = System.Windows.Forms.DockStyle.Right\n        Me.Button2.Font = New System.Drawing.Font( _\n            &quot;Microsoft Sans Serif&quot;, _\n            9.0!, _\n            System.Drawing.FontStyle.Regular, _\n            System.Drawing.GraphicsUnit.Point, _\n            CType(0, Byte))\n        Me.Button2.Location = New System.Drawing.Point(521, 20)\n        Me.Button2.Name = &quot;Button2&quot;\n        Me.Button2.Size = New System.Drawing.Size(75, 24)\n        Me.Button2.TabIndex = 3\n        Me.Button2.Text = &quot;E&amp;xit&quot;\n        &#39;\n        &#39;Panel1\n        &#39;\n        Me.Panel1.Controls.Add(Me.tbxOutput)\n        Me.Panel1.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.Panel1.DockPadding.All = 20\n        Me.Panel1.Location = New System.Drawing.Point(0, 0)\n        Me.Panel1.Name = &quot;Panel1&quot;\n        Me.Panel1.Size = New System.Drawing.Size(616, 320)\n        Me.Panel1.TabIndex = 2\n        &#39;\n        &#39;tbxOutput\n        &#39;\n        Me.tbxOutput.AccessibleDescription = _\n            &quot;Displays output from application.&quot;\n        Me.tbxOutput.AccessibleName = &quot;Output textbox.&quot;\n        Me.tbxOutput.Dock = System.Windows.Forms.DockStyle.Fill\n        Me.tbxOutput.Location = New System.Drawing.Point(20, 20)\n        Me.tbxOutput.Name = &quot;tbxOutput&quot;\n        Me.tbxOutput.Size = New System.Drawing.Size(576, 280)\n        Me.tbxOutput.TabIndex = 1\n        Me.tbxOutput.Text = &quot;Click the Run button to run the application.&quot;\n        &#39;\n        &#39;Form1\n        &#39;\n        Me.AutoScaleBaseSize = New System.Drawing.Size(6, 15)\n        Me.ClientSize = New System.Drawing.Size(616, 384)\n        Me.Controls.Add(Me.Panel1)\n        Me.Controls.Add(Me.Panel2)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;XmlDsigC14NTransform&quot;\n        Me.Panel2.ResumeLayout(False)\n        Me.Panel1.ResumeLayout(False)\n        Me.ResumeLayout(False)\n\n    End Sub\n\n#End Region\nEnd Class\n&#39;\n&#39; This sample produces the following output:\n&#39;\n&#39; Xml representation of the current transform: \n&#39; &lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; xmlns\n&#39; =&quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n&#39; Encoding the following xml: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rout\n&#39; er&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRI\n&#39; PTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL&gt;&lt;!\n&#39; [CDATA[&#39;http:\\\\\\\\www.contoso.com\\\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;&lt;\n&#39; /PRODUCTS&gt;\n&#39; Message encoded: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Router&lt;/DESCRIP\n&#39; TION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRIPTION&gt;&lt;/PRO\n&#39; DUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL&gt;&#39;http:\\\\\\\\www\n&#39; .contoso.com\\\\partner.asp?h1=en&amp;amp;h2=cr&#39;&lt;/PARTNER_URL&gt;&lt;/PRODUCTS&gt;\n&#39; Unable to locate the following file: ..\\\\my509.cer\n&#39; \n&#39; Xml representation of the current transform: \n&#39; &lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; xmlns\n&#39; =&quot;http://www.w3.org/2000/09/xmldsig#&quot; /&gt;\n&#39; Encoding the following xml: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Rout\n&#39; er&lt;/DESCRIPTION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRI\n&#39; PTION&gt;&lt;/PRODUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL&gt;&lt;!\n&#39; [CDATA[&#39;http:\\\\\\\\www.contoso.com\\\\partner.asp?h1=en&amp;h2=cr&#39;]]&gt;&lt;/PARTNER_URL&gt;&lt;\n&#39; Signature xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;&lt;SignedInfo&gt;&lt;Canonicali\n&#39; zationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; /&gt;&lt;\n&#39; SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot; /&gt;&lt;Re\n&#39; ference URI=&quot;&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/R\n&#39; EC-xml-c14n-20010315&quot; /&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://www.w3.\n&#39; org/2000/09/xmldsig#sha1&quot; /&gt;&lt;DigestValue&gt;reODk69AR9ytcttnNovo4tHNr7s=&lt;/Diges\n&#39; tValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;shFIRZqXidkxzQtZwGa7xqWoS0yF\n&#39; GDot63A8v17KZzmfDWTaluGk25fvKJ4Bv4Z1ENxevyQY/wCGzsto9FJUvTXsJ9/jTOwIvRQt1204\n&#39; gJ8SgTex8epH/2xnfvdEqZR8HWJq3X/NixGhMUCpmEFwZMn3V/8qryg8mhYp72jPTFI=&lt;/Signat\n&#39; ureValue&gt;&lt;/Signature&gt;&lt;/PRODUCTS&gt;\n&#39; Message encoded: &lt;PRODUCTS&gt;&lt;PRODUCT&gt;&lt;ID&gt;123&lt;/ID&gt;&lt;DESCRIPTION&gt;Router&lt;/DESCRIP\n&#39; TION&gt;&lt;/PRODUCT&gt;&lt;PRODUCT&gt;&lt;ID&gt;456&lt;/ID&gt;&lt;DESCRIPTION&gt;Keyboard&lt;/DESCRIPTION&gt;&lt;/PRO\n&#39; DUCT&gt;&lt;!--Comments are included in the transform--&gt;&lt;PARTNER_URL&gt;&#39;http:\\\\\\\\www\n&#39; .contoso.com\\\\partner.asp?h1=en&amp;amp;h2=cr&#39;&lt;/PARTNER_URL&gt;&lt;Signature&gt;&lt;SignedIn\n&#39; fo&gt;&lt;CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n\n&#39; -20010315&quot;&gt;&lt;/CanonicalizationMethod&gt;&lt;SignatureMethod Algorithm=&quot;http://www.w\n&#39; 3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;&lt;/SignatureMethod&gt;&lt;Reference URI=&quot;&quot;&gt;&lt;Transfo\n&#39; rms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;&lt;\n&#39; /Transform&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/x\n&#39; mldsig#sha1&quot;&gt;&lt;/DigestMethod&gt;&lt;DigestValue&gt;reODk69AR9ytcttnNovo4tHNr7s=&lt;/Diges\n&#39; tValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;shFIRZqXidkxzQtZwGa7xqWoS0yF\n&#39; GDot63A8v17KZzmfDWTaluGk25fvKJ4Bv4Z1ENxevyQY/wCGzsto9FJUvTXsJ9/jTOwIvRQt1204\n&#39; gJ8SgTex8epH/2xnfvdEqZR8HWJq3X/NixGhMUCpmEFwZMn3V/8qryg8mhYp72jPTFI=&lt;/Signat\n&#39; ureValue&gt;&lt;/Signature&gt;&lt;/PRODUCTS&gt;\n&#39; \n&#39; Resolved the base Uri and relative Uri to the following:\n&#39; http://www.contoso.com/xml\n&#39; \n&#39; This sample completed successfully; press Exit to continue.\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The XmlDsigC14NTransform class represents the C14N XML canonicalization transform that describes the canonical form of an XML document.  This transform allows a signer to create a digest (used to create a digital signature) using the canonical form of an XML document.  A recipient can then verify the XML digital signature using the same canonical form of the XML document with the same transform.  </p>\n<p> Use the XmlDsigC14NTransform class when you need to sign an XML document that does not contain comments.  </p>\n<p> In most cases, a new instance of a canonicalization transform class is not required. To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo#System_Security_Cryptography_Xml_SignedInfo_CanonicalizationMethod_\" data-linktype=\"relative-path\">CanonicalizationMethod</a> property, which is accessible from the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SignedInfo_\" data-linktype=\"relative-path\">SignedInfo</a> property.  To acquire a reference to the canonicalization transform, use the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo#System_Security_Cryptography_Xml_SignedInfo_CanonicalizationMethodObject_\" data-linktype=\"relative-path\">CanonicalizationMethodObject</a> property, which is accessible from the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SignedInfo_\" data-linktype=\"relative-path\">SignedInfo</a> property.  </p>\n<p> The URI that describes the XmlDsigC14NTransform class is defined by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigC14NTransformUrl\" data-linktype=\"relative-path\">XmlDsigC14NTransformUrl</a> field and the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigCanonicalizationUrl\" data-linktype=\"relative-path\">XmlDsigCanonicalizationUrl</a> field.  </p>\n<p> You would only need to create a new instance of a canonicalization transform class for manually hashing an XML document or for using your own canonicalization algorithm.  </p>\n<p> For more information about the C14N transform, see Sections 6.5 and 6.6.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/. The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/TR/xml-c14n.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigC14NTransform()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XmlDsigC14NTransform ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform__ctor_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigC14NTransform(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> class with comments, if specified.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XmlDsigC14NTransform (bool includeComments);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>includeComments</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to include comments; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_InputTypes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_InputTypes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputTypes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of types that are valid inputs to the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput*</span> method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override Type[] InputTypes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of valid input types for the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object; you can pass only objects of one of these types to the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput*</span> method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The valid input types to <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> are <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>, and <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_OutputTypes_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_OutputTypes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OutputTypes</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of types that are possible outputs from the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput*</span> methods of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override Type[] OutputTypes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of valid output types for the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object; the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput*</span> methods of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object return only objects of one of these types.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> is the only valid output type for <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetDigestedOutput_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetDigestedOutput_System_Security_Cryptography_HashAlgorithm_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDigestedOutput(HashAlgorithm)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the digest associated with an <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hash</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.hashalgorithm\" data-linktype=\"relative-path\">HashAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm\" data-linktype=\"relative-path\">HashAlgorithm</a> object used to create a digest.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The digest associated with an <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetInnerXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetInnerXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetInnerXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an XML representation of the parameters of an <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object that are suitable to be included as subelements of an XMLDSIG <code>&lt;Transform&gt;</code> element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Xml.XmlNodeList GetInnerXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A list of the XML nodes that represent the transform-specific content needed to describe the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object in an XMLDSIG <code>&lt;Transform&gt;</code> element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetOutput_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetOutput\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOutput()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object GetOutput ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the returned object must be <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetOutput_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_GetOutput_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOutput(Type)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object of type <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object GetOutput (Type type);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the output to return. <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> is the only valid type for this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object of type <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>type</code> parameter is not a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the returned object must be <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_LoadInnerXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_LoadInnerXml_System_Xml_XmlNodeList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadInnerXml(XmlNodeList)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Parses the specified <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> object as transform-specific content of a <code>&lt;Transform&gt;</code> element; this method is not supported because this element has no inner XML elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nodeList</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> object to load into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not supported because the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object has no inner XML elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_LoadInput_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_XmlDsigC14NTransform_LoadInput_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadInput(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the specified input into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void LoadInput (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The input to load into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>obj</code> parameter is a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object and it is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the input object must be one of the types in the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform#System_Security_Cryptography_Xml_XmlDsigC14NTransform_InputTypes_\" data-linktype=\"relative-path\">InputTypes</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.XmlDsigC14NTransform.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetDigestedOutput\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetInnerXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInnerXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"3c350e39-d352-749c-6615-1d753a292930\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.XmlDsigC14NTransform\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.XmlDsigC14NTransform.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Xml.XmlDsigC14NTransform","System.Security.Cryptography.Xml.XmlDsigC14NTransform..ctor","System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetDigestedOutput","System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetInnerXml","System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput","System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes","System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInnerXml","System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput","System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.XmlDsigC14NTransform","System::Security::Cryptography::Xml::XmlDsigC14NTransform","System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor","System::Security::Cryptography::Xml::XmlDsigC14NTransform::#ctor","System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetDigestedOutput","System::Security::Cryptography::Xml::XmlDsigC14NTransform::GetDigestedOutput","System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetInnerXml","System::Security::Cryptography::Xml::XmlDsigC14NTransform::GetInnerXml","System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput","System::Security::Cryptography::Xml::XmlDsigC14NTransform::GetOutput","System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes","System::Security::Cryptography::Xml::XmlDsigC14NTransform::InputTypes","System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInnerXml","System::Security::Cryptography::Xml::XmlDsigC14NTransform::LoadInnerXml","System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput","System::Security::Cryptography::Xml::XmlDsigC14NTransform::LoadInput","System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes","System::Security::Cryptography::Xml::XmlDsigC14NTransform::OutputTypes"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"3c350e39-d352-749c-6615-1d753a292930","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography.Xml/XmlDsigC14NTransform.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlDsigC14NTransform class | Microsoft Docs","_op_ogTitle":"XmlDsigC14NTransform class","description":"Represents the C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.XmlDsigC14NTransform","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.xmldsigc14ntransform","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.xmldsigc14ntransform","fileRelativePath":"api/System.Security.Cryptography.Xml.XmlDsigC14NTransform.html"},"themesRelativePathToOutputRoot":"_themes/"}