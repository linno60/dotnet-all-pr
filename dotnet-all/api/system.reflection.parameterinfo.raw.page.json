{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ParameterInfo</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Discovers the attributes of a parameter and provides access to parameter metadata.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n[System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ParameterInfo))]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class ParameterInfo : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._ParameterInfo, System.Runtime.Serialization.IObjectReference</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">ParameterInfo</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This example shows how to use various reflection classes to analyze the metadata contained in an assembly.  </p>\n<pre><code class=\"lang-vb\" name=\"Reflection#1\">Imports System.Reflection\n\nModule Module1\n    Sub Main()\n        &#39; This variable holds the amount of indenting that \n        &#39; should be used when displaying each line of information.\n        Dim indent As Int32 = 0\n        &#39; Display information about the EXE assembly.\n        Dim a As Assembly = GetType(Module1).Assembly\n        Display(indent, &quot;Assembly identity={0}&quot;, a.FullName)\n        Display(indent + 1, &quot;Codebase={0}&quot;, a.CodeBase)\n\n        &#39; Display the set of assemblies our assemblies reference.\n        Dim an As AssemblyName\n        Display(indent, &quot;Referenced assemblies:&quot;)\n        For Each an In a.GetReferencedAssemblies()\n            Display(indent + 1, &quot;Name={0}, Version={1}, Culture={2}, PublicKey token={3}&quot;, _\n                an.Name, an.Version, an.CultureInfo.Name, BitConverter.ToString(an.GetPublicKeyToken))\n        Next\n        Display(indent, &quot;&quot;)\n\n        &#39; Display information about each assembly loading into this AppDomain.\n        For Each a In AppDomain.CurrentDomain.GetAssemblies()\n            Display(indent, &quot;Assembly: {0}&quot;, a)\n\n            &#39; Display information about each module of this assembly.\n            Dim m As [Module]\n            For Each m In a.GetModules(True)\n                Display(indent + 1, &quot;Module: {0}&quot;, m.Name)\n            Next\n\n            &#39; Display information about each type exported from this assembly.\n            Dim t As Type\n            indent += 1\n            For Each t In a.GetExportedTypes()\n                Display(0, &quot;&quot;)\n                Display(indent, &quot;Type: {0}&quot;, t)\n\n                &#39; For each type, show its members &amp; their custom attributes.\n                Dim mi As MemberInfo\n                indent += 1\n                For Each mi In t.GetMembers()\n                    Display(indent, &quot;Member: {0}&quot;, mi.Name)\n                    DisplayAttributes(indent, mi)\n\n                    &#39; If the member is a method, display information about its parameters.\n                    Dim pi As ParameterInfo\n                    If mi.MemberType = MemberTypes.Method Then\n                        For Each pi In CType(mi, MethodInfo).GetParameters()\n                            Display(indent + 1, &quot;Parameter: Type={0}, Name={1}&quot;, pi.ParameterType, pi.Name)\n                        Next\n                    End If\n\n                    &#39; If the member is a property, display information about the property&#39;s accessor methods.\n                    If mi.MemberType = MemberTypes.Property Then\n                        Dim am As MethodInfo\n                        For Each am In CType(mi, PropertyInfo).GetAccessors()\n                            Display(indent + 1, &quot;Accessor method: {0}&quot;, am)\n                        Next\n                    End If\n                Next\n                indent -= 1\n            Next\n            indent -= 1\n        Next\n    End Sub\n\n    &#39; Displays the custom attributes applied to the specified member.\n    Sub DisplayAttributes(ByVal indent As Int32, ByVal mi As MemberInfo)\n        &#39; Get the set of custom attributes; if none exist, just return.\n        Dim attrs() As Object = mi.GetCustomAttributes(False)\n        If attrs.Length = 0 Then Return\n\n        &#39; Display the custom attributes applied to this member.\n        Display(indent + 1, &quot;Attributes:&quot;)\n        Dim o As Object\n        For Each o In attrs\n            Display(indent + 2, &quot;{0}&quot;, o.ToString())\n        Next\n    End Sub\n\n    &#39; Display a formatted string indented by the specified amount.\n    Sub Display(ByVal indent As Int32, ByVal format As String, ByVal ParamArray params() As Object)\n        Console.Write(New String(&quot; &quot;c, indent * 2))\n        Console.WriteLine(format, params)\n    End Sub\nEnd Module\n\n&#39;The output shown below is abbreviated.\n&#39;\n&#39;Assembly identity=Reflection, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\n&#39;  Codebase=file:///C:/Reflection.exe\n&#39;Referenced assemblies:\n&#39;  Name=mscorlib, Version=1.0.5000.0, Culture=, PublicKey token=B7-7A-5C-56-19-34-E0-89\n&#39;  Name=Microsoft.VisualBasic, Version=7.0.5000.0, Culture=, PublicKey token=B0-3F-5F-7F-11-D5-0A-3A\n&#39;\n&#39;Assembly: mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\n&#39;  Module: mscorlib.dll\n&#39;  Module: prc.nlp\n&#39;  Module: prcp.nlp\n&#39;  Module: ksc.nlp\n&#39;  Module: ctype.nlp\n&#39;  Module: xjis.nlp\n&#39;  Module: bopomofo.nlp\n&#39;  Module: culture.nlp\n&#39;  Module: region.nlp\n&#39;  Module: sortkey.nlp\n&#39;  Module: charinfo.nlp\n&#39;  Module: big5.nlp\n&#39;  Module: sorttbls.nlp\n&#39;  Module: l_intl.nlp\n&#39;  Module: l_except.nlp\n&#39;\n&#39;  Type: System.Object\n&#39;    Member: GetHashCode\n&#39;    Member: Equals\n&#39;      Parameter: Type=System.Object, Name=obj\n&#39;    Member: ToString\n&#39;    Member: Equals\n&#39;      Parameter: Type=System.Object, Name=objA\n&#39;      Parameter: Type=System.Object, Name=objB\n&#39;    Member: ReferenceEquals\n&#39;      Parameter: Type=System.Object, Name=objA\n&#39;      Parameter: Type=System.Object, Name=objB\n&#39;    Member: GetType\n&#39;    Member: .ctor\n&#39;\n&#39;  Type: System.ICloneable\n&#39;    Member: Clone\n&#39;\n&#39;  Type: System.Collections.IEnumerable\n&#39;    Member: GetEnumerator\n&#39;      Attributes:\n&#39;        System.Runtime.InteropServices.DispIdAttribute\n&#39;\n&#39;  Type: System.Collections.ICollection\n&#39;    Member: get_IsSynchronized\n&#39;    Member: get_SyncRoot\n&#39;    Member: get_Count\n&#39;    Member: CopyTo\n&#39;      Parameter: Type=System.Array, Name=array\n&#39;      Parameter: Type=System.Int32, Name=index\n&#39;    Member: Count\n&#39;      Accessor method: Int32 get_Count()\n&#39;    Member: SyncRoot\n&#39;      Accessor method: System.Object get_SyncRoot()\n&#39;    Member: IsSynchronized\n&#39;      Accessor method: Boolean get_IsSynchronized()\n&#39;\n</code></pre><pre><code class=\"lang-cpp\" name=\"Reflection#1\">using namespace System;\nusing namespace System::Reflection;\n\nstatic void Display(Int32 indent, String^ format, ... array&lt;Object^&gt;^param) \n{\n    Console::Write(&quot;{0}&quot;, gcnew String (&#39; &#39;, indent));\n    Console::WriteLine(format, param);\n}\n\t\n// Displays the custom attributes applied to the specified member.\nstatic void DisplayAttributes(Int32 indent, MemberInfo^ mi)\n{\n    // Get the set of custom attributes; if none exist, just return.\n    array&lt;Object^&gt;^attrs = mi-&gt;GetCustomAttributes(false);\n\t\t\n    if (attrs-&gt;Length==0)\n    {\n        return;          \n    }\n\t\t\n    // Display the custom attributes applied to this member.\n    Display(indent+1, &quot;Attributes:&quot;);\n    for each ( Object^ o in attrs )\n    {\n        Display(indent*2, &quot;{0}&quot;, o);\n    }\t\t\t\t\n}\n\nvoid main()\n{\n    try\n    {\n        // This variable holds the amount of indenting that \n        // should be used when displaying each line of information.\n        Int32 indent = 0; \n        // Display information about the EXE assembly.\n        Assembly^ a = System::Reflection::Assembly::GetExecutingAssembly();\n\t\t\n        Display(indent, &quot;Assembly identity={0}&quot;, gcnew array&lt;Object^&gt; {a-&gt;FullName});\n        Display(indent+1, &quot;Codebase={0}&quot;, gcnew array&lt;Object^&gt; {a-&gt;CodeBase});\n\n        // Display the set of assemblies our assemblies reference.\n  \n        Display(indent, &quot;Referenced assemblies:&quot;); \n\n        for each ( AssemblyName^ an in a-&gt;GetReferencedAssemblies() )\n        {\n            Display(indent + 1, &quot;Name={0}, Version={1}, Culture={2}, PublicKey token={3}&quot;, gcnew array&lt;Object^&gt; {an-&gt;Name, an-&gt;Version, an-&gt;CultureInfo, (BitConverter::ToString(an-&gt;GetPublicKeyToken()))});\n        }\n        Display(indent, &quot;&quot;);  \n        // Display information about each assembly loading into this AppDomain. \n        for each ( Assembly^ b in AppDomain::CurrentDomain-&gt;GetAssemblies()) \n        {\n            Display(indent, &quot;Assembly: {0}&quot;, gcnew array&lt;Object^&gt; {b});\n            // Display information about each module of this assembly.\n \n            for each ( Module^ m in b-&gt;GetModules(true) ) \n            {\n                Display(indent+1, &quot;Module: {0}&quot;, gcnew array&lt;Object^&gt; {m-&gt;Name});\n            }\n            // Display information about each type exported from this assembly.\n           \n            indent += 1; \n            for each ( Type^ t in b-&gt;GetExportedTypes() ) \n            {\n                Display(0, &quot;&quot;);  \n                Display(indent, &quot;Type: {0}&quot;, gcnew array&lt;Object^&gt; {t}); \n\n                // For each type, show its members &amp; their custom attributes.\n           \n                indent += 1; \n                for each (MemberInfo^ mi in t-&gt;GetMembers() )\n                {\n                    Display(indent, &quot;Member: {0}&quot;, gcnew array&lt;Object^&gt; {mi-&gt;Name}); \n                    DisplayAttributes(indent, mi);\n\n                    // If the member is a method, display information about its parameters.         \n                    if (mi-&gt;MemberType==MemberTypes::Method) \n                    {\n\t\t\t\t\t\n                        for each ( ParameterInfo^ pi in (((MethodInfo^) mi)-&gt;GetParameters()))\n                        {\n                            Display(indent+1, &quot;Parameter: Type={0}, Name={1}&quot;, gcnew array&lt;Object^&gt; {pi-&gt;ParameterType, pi-&gt;Name}); \n                        }\n                    }\n\n                    // If the member is a property, display information about the property&#39;s accessor methods.\n                    if (mi-&gt;MemberType==MemberTypes::Property) \n                    {\n                        for each ( MethodInfo^ am in (((PropertyInfo^) mi)-&gt;GetAccessors()) )\n                        {\n                            Display(indent+1, &quot;Accessor method: {0}&quot;, gcnew array&lt;Object^&gt; {am});\n                        }\n                    }\n                }\n                // Display a formatted string indented by the specified amount.               \n                indent -= 1;\n            }\n            indent -= 1;\n        }\n    }\n    catch (Exception^ e)\n    {\n        Console::WriteLine(e-&gt;Message);\n    }\n}\n\n// The output shown below is abbreviated.\n//\n//Assembly identity=Reflection, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\n//  Codebase=file:///C:/Reflection.exe\n//Referenced assemblies:\n//  Name=mscorlib, Version=1.0.5000.0, Culture=, PublicKey token=B7-7A-5C-56-19-34-E0-89\n//  Name=Microsoft.VisualBasic, Version=7.0.5000.0, Culture=, PublicKey token=B0-3F-5F-7F-11-D5-0A-3A\n//\n//Assembly: mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\n//  Module: mscorlib.dll\n//  Module: prc.nlp\n//  Module: prcp.nlp\n//  Module: ksc.nlp\n//  Module: ctype.nlp\n//  Module: xjis.nlp\n//  Module: bopomofo.nlp\n//  Module: culture.nlp\n//  Module: region.nlp\n//  Module: sortkey.nlp\n//  Module: charinfo.nlp\n//  Module: big5.nlp\n//  Module: sorttbls.nlp\n//  Module: l_intl.nlp\n//  Module: l_except.nlp\n//\n//  Type: System.Object\n//    Member: GetHashCode\n//    Member: Equals\n//      Parameter: Type=System.Object, Name=obj\n//    Member: ToString\n//    Member: Equals\n//      Parameter: Type=System.Object, Name=objA\n//      Parameter: Type=System.Object, Name=objB\n//    Member: ReferenceEquals\n//      Parameter: Type=System.Object, Name=objA\n//      Parameter: Type=System.Object, Name=objB\n//    Member: GetType\n//    Member: .ctor\n//\n//  Type: System.ICloneable\n//    Member: Clone\n//\n//  Type: System.Collections.IEnumerable\n//    Member: GetEnumerator\n//      Attributes:\n//        System.Runtime.InteropServices.DispIdAttribute\n//\n//  Type: System.Collections.ICollection\n//    Member: get_IsSynchronized\n//    Member: get_SyncRoot\n//    Member: get_Count\n//    Member: CopyTo\n//      Parameter: Type=System.Array, Name=array\n//      Parameter: Type=System.Int32, Name=index\n//    Member: Count\n//      Accessor method: Int32 get_Count()\n//    Member: SyncRoot\n//      Accessor method: System.Object get_SyncRoot()\n//    Member: IsSynchronized\n//      Accessor method: Boolean get_IsSynchronized()\n//\n</code></pre><pre><code class=\"lang-cs\" name=\"Reflection#1\">using System;\nusing System.Reflection;\n\nclass Module1\n{\n    public static void Main()\n    {\n        // This variable holds the amount of indenting that \n        // should be used when displaying each line of information.\n        Int32 indent = 0;\n        // Display information about the EXE assembly.\n        Assembly a = typeof(Module1).Assembly;\n        Display(indent, &quot;Assembly identity={0}&quot;, a.FullName);\n        Display(indent+1, &quot;Codebase={0}&quot;, a.CodeBase);\n\n        // Display the set of assemblies our assemblies reference.\n      \n        Display(indent, &quot;Referenced assemblies:&quot;);\n        foreach (AssemblyName an in a.GetReferencedAssemblies() )\n        {\n             Display(indent + 1, &quot;Name={0}, Version={1}, Culture={2}, PublicKey token={3}&quot;, an.Name, an.Version, an.CultureInfo.Name, (BitConverter.ToString (an.GetPublicKeyToken())));\n        }\n        Display(indent, &quot;&quot;);\n        \n        // Display information about each assembly loading into this AppDomain.\n        foreach (Assembly b in AppDomain.CurrentDomain.GetAssemblies())\n        {\n            Display(indent, &quot;Assembly: {0}&quot;, b);\n\n            // Display information about each module of this assembly.\n            foreach ( Module m in b.GetModules(true) )\n            {\n                Display(indent+1, &quot;Module: {0}&quot;, m.Name);\n            }\n\n            // Display information about each type exported from this assembly.\n           \n            indent += 1;\n            foreach ( Type t in b.GetExportedTypes() )\n            {\n                Display(0, &quot;&quot;);\n                Display(indent, &quot;Type: {0}&quot;, t);\n\n                // For each type, show its members &amp; their custom attributes.\n           \n                indent += 1;\n                foreach (MemberInfo mi in t.GetMembers() )\n                {\n                    Display(indent, &quot;Member: {0}&quot;, mi.Name);\n                    DisplayAttributes(indent, mi);\n\n                    // If the member is a method, display information about its parameters.\n                    \n                    if (mi.MemberType==MemberTypes.Method)\n                    {\n                        foreach ( ParameterInfo pi in ((MethodInfo) mi).GetParameters() )\n                        {\n                            Display(indent+1, &quot;Parameter: Type={0}, Name={1}&quot;, pi.ParameterType, pi.Name);\n                        }\n                    }\n\n                    // If the member is a property, display information about the property&#39;s accessor methods.\n                    if (mi.MemberType==MemberTypes.Property)\n                    {\n                        foreach ( MethodInfo am in ((PropertyInfo) mi).GetAccessors() )\n                        {\n                            Display(indent+1, &quot;Accessor method: {0}&quot;, am);\n                        }\n                    }\n                }\n                indent -= 1;\n            }\n            indent -= 1;\n        }\n    }\n\n    // Displays the custom attributes applied to the specified member.\n    public static void DisplayAttributes(Int32 indent, MemberInfo mi)\n    {\n        // Get the set of custom attributes; if none exist, just return.\n        object[] attrs = mi.GetCustomAttributes(false);\n        if (attrs.Length==0) {return;}\n\n        // Display the custom attributes applied to this member.\n        Display(indent+1, &quot;Attributes:&quot;);\n        foreach ( object o in attrs )\n        {\n            Display(indent+2, &quot;{0}&quot;, o.ToString());\n        }\n    }\n\n    // Display a formatted string indented by the specified amount.\n    public static void Display(Int32 indent, string format, params object[] param) \n\n    {\n        Console.Write(new string(&#39; &#39;, indent*2));\n        Console.WriteLine(format, param);\n    }\n}\n\n//The output shown below is abbreviated.\n//\n//Assembly identity=ReflectionCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\n//  Codebase=file:///C:/Documents and Settings/test/My Documents/Visual Studio 2005/Projects/Reflection/Reflection/obj/Debug/Reflection.exe\n//Referenced assemblies:\n//  Name=mscorlib, Version=2.0.0.0, Culture=, PublicKey token=B7-7A-5C-56-19-34-E0-89\n//\n//Assembly: mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//  Module: mscorlib.dll\n//\n//  Type: System.Object\n//    Member: GetType\n//    Member: ToString\n//    Member: Equals\n//      Parameter: Type=System.Object, Name=obj\n//    Member: Equals\n//      Parameter: Type=System.Object, Name=objA\n//      Parameter: Type=System.Object, Name=objB\n//    Member: ReferenceEquals\n//      Attributes:\n//        System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n//      Parameter: Type=System.Object, Name=objA\n//      Parameter: Type=System.Object, Name=objB\n//    Member: GetHashCode\n//    Member: .ctor\n//      Attributes:\n//        System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n//\n//  Type: System.ICloneable\n//    Member: Clone\n//\n//  Type: System.Collections.IEnumerable\n//    Member: GetEnumerator\n//      Attributes:\n//        System.Runtime.InteropServices.DispIdAttribute\n//\n//  Type: System.Collections.ICollection\n//    Member: CopyTo\n//      Parameter: Type=System.Array, Name=array\n//      Parameter: Type=System.Int32, Name=index\n//    Member: get_Count\n//    Member: get_SyncRoot\n//    Member: get_IsSynchronized\n//    Member: Count\n//      Accessor method: Int32 get_Count()\n//    Member: SyncRoot\n//      Accessor method: System.Object get_SyncRoot()\n//    Member: IsSynchronized\n//      Accessor method: Boolean get_IsSynchronized()\n//\n//  Type: System.Collections.IList\n//    Member: get_Item\n//      Parameter: Type=System.Int32, Name=index\n//    Member: set_Item\n//      Parameter: Type=System.Int32, Name=index\n//      Parameter: Type=System.Object, Name=value\n//    Member: Add\n//      Parameter: Type=System.Object, Name=value\n//    Member: Contains\n//      Parameter: Type=System.Object, Name=value\n//    Member: Clear\n//    Member: get_IsReadOnly\n//    Member: get_IsFixedSize\n//    Member: IndexOf\n//      Parameter: Type=System.Object, Name=value\n//    Member: Insert\n//      Parameter: Type=System.Int32, Name=index\n//      Parameter: Type=System.Object, Name=value\n//    Member: Remove\n//      Parameter: Type=System.Object, Name=value\n//    Member: RemoveAt\n//      Parameter: Type=System.Int32, Name=index\n//    Member: Item\n//      Accessor method: System.Object get_Item(Int32)\n//      Accessor method: Void set_Item(Int32, System.Object)\n//    Member: IsReadOnly\n//      Accessor method: Boolean get_IsReadOnly()\n//    Member: IsFixedSize\n//      Accessor method: Boolean get_IsFixedSize()\n//\n//  Type: System.Array\n//    Member: IndexOf\n//      Parameter: Type=T[], Name=array\n//      Parameter: Type=T, Name=value\n//    Member: AsReadOnly\n//      Parameter: Type=T[], Name=array\n//    Member: Resize\n//      Attributes:\n//        System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n//      Parameter: Type=T[]&amp;, Name=array\n//      Parameter: Type=System.Int32, Name=newSize\n//    Member: BinarySearch\n//      Attributes:\n//        System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n//      Parameter: Type=T[], Name=array\n//      Parameter: Type=T, Name=value\n//    Member: BinarySearch\n//      Attributes:\n//        System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n//      Parameter: Type=T[], Name=array\n//      Parameter: Type=T, Name=value\n//      Parameter: Type=System.Collections.Generic.IComparer`1[T], Name=comparer\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use an instance of <code>ParameterInfo</code> to obtain information about the parameter&#39;s data type, default value, and so on.  </p>\n<p> <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a> returns an array of <code>ParameterInfo</code> objects representing the parameters of a method, in order.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParameterInfo()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <code>ParameterInfo</code> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ParameterInfo ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_AttrsImpl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AttrsImpl</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The attributes of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Reflection.ParameterAttributes AttrsImpl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This field is intended only for users who are deriving classes from <code>ParameterInfo</code>.  </p>\n<p> Typical access to parameter attributes is through <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_Attributes_\" data-linktype=\"relative-path\">Attributes</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_ClassImpl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClassImpl</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The <code>Type</code> of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected Type ClassImpl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This field is intended only for users who are deriving classes from <code>ParameterInfo</code>.  </p>\n<p> Typical access to parameter types is through <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_ParameterType_\" data-linktype=\"relative-path\">ParameterType</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_DefaultValueImpl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultValueImpl</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The default value of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected object DefaultValueImpl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This field is intended only for users who are deriving classes from <code>ParameterInfo</code>.  </p>\n<p> Typical access to the default value of the parameter is through <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_DefaultValue_\" data-linktype=\"relative-path\">DefaultValue</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_MemberImpl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MemberImpl</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The member in which the field is implemented.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Reflection.MemberInfo MemberImpl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This field is intended only for users who are deriving classes from <code>ParameterInfo</code>.  </p>\n<p> Typical access to the parameter name is through the <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_Member_\" data-linktype=\"relative-path\">Member</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_NameImpl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NameImpl</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The name of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected string NameImpl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This field is intended only for users who are deriving classes from <code>ParameterInfo</code>.  </p>\n<p> Typical access to the parameter name is through the <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_Name_\" data-linktype=\"relative-path\">Name</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_PositionImpl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PositionImpl</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The zero-based position of the parameter in the parameter list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected int PositionImpl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This field is intended only for users who are deriving classes from <code>ParameterInfo</code>.  </p>\n<p> Typical access to the name of the parameter is through <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_Position_\" data-linktype=\"relative-path\">Position</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_Attributes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Attributes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the attributes for this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Reflection.ParameterAttributes Attributes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parameterattributes\" data-linktype=\"relative-path\">ParameterAttributes</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <code>ParameterAttributes</code> object representing the attributes for this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method utilizes the <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_AttrsImpl\" data-linktype=\"relative-path\">AttrsImpl</a> method.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_CustomAttributes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CustomAttributes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection that contains this parameter&#39;s custom attributes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.reflection.customattributedata\" data-linktype=\"relative-path\">CustomAttributeData</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection that contains this parameter&#39;s custom attributes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_DefaultValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultValue</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating the default value if the parameter has a default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object DefaultValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default value of the parameter, or <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a> if the parameter has no default value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is used only in the execution context. In the reflection-only context, use the <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_RawDefaultValue_\" data-linktype=\"relative-path\">RawDefaultValue</a> property instead.  </p>\n<p> The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is <code>null</code>. This is distinct from the case where a default value is not defined.  </p>\n<p> This method utilizes the <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_DefaultValueImpl\" data-linktype=\"relative-path\">DefaultValueImpl</a> method.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_HasDefaultValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasDefaultValue</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether this parameter has a default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool HasDefaultValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if this parameter has a default value; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_IsIn\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsIn</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this is an input parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsIn { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the parameter is an input parameter; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  </p>\n<p> This method utilizes the <code>In</code> flag of the <code>ParameterAttributes</code> enumerator.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_IsLcid\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsLcid</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this parameter is a locale identifier (lcid).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsLcid { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the parameter is a locale identifier; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  </p>\n<p> This method utilizes the <code>Lcid</code> flag of the <code>ParameterAttributes</code> enumerator.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_IsOptional\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsOptional</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this parameter is optional.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsOptional { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the parameter is optional; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  </p>\n<p> This method utilizes the <code>Optional</code> flag of the <code>ParameterAttributes</code> enumerator.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_IsOut\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsOut</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this is an output parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsOut { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the parameter is an output parameter; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  </p>\n<p> This method utilizes the <code>Out</code> flag of the <code>ParameterAttributes</code> enumerator.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_IsRetval\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsRetval</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this is a <code>Retval</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsRetval { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the parameter is a <code>Retval</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  </p>\n<p> This method utilizes the <code>Retval</code> flag of the <code>ParameterAttributes</code> enumerator.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_Member\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Member</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating the member in which the parameter is implemented.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Reflection.MemberInfo Member { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The member which implanted the parameter represented by this <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_MetadataToken\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MetadataToken</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that identifies this parameter in metadata.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual int MetadataToken { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value which, in combination with the module, uniquely identifies this parameter in metadata.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To get the module, use the <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_Module_\" data-linktype=\"relative-path\">Module</a> property of the member that defines this parameter.  </p>\n<p> The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, please see <a href=\"http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8\" data-linktype=\"external\">Unmanaged Reflection API</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_Name\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Name</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the name of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string Name { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The simple name of this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property utilizes the protected <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_NameImpl\" data-linktype=\"relative-path\">NameImpl</a> field, and depends on an optional metadata flag that might not be available in all compilers.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call the <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a> method.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> If this <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> represents a return value (that is, if it was obtained by using the <a class=\"xref\" href=\"system.reflection.methodinfo#System_Reflection_MethodInfo_ReturnParameter_\" data-linktype=\"relative-path\">ReturnParameter</a> property), this property will be <code>null</code>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_ParameterType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParameterType</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <code>Type</code> of this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual Type ParameterType { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>Type</code> object that represents the <code>Type</code> of this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method depends on an optional metadata and might not be available in all compilers.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_Position\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Position</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the zero-based position of the parameter in the formal parameter list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual int Position { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An integer representing the position this parameter occupies in the parameter list.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position. For instance methods, the hidden parameter that represents <code>this</code> (<code>Me</code> in Visual Basic) is not counted.  </p>\n<p> This method utilizes the <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_PositionImpl\" data-linktype=\"relative-path\">PositionImpl</a> method.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_RawDefaultValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RawDefaultValue</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating the default value if the parameter has a default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object RawDefaultValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default value of the parameter, or <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a> if the parameter has no default value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property can be used in both the execution context and the reflection-only context.  </p>\n<p> The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is <code>null</code>. This is distinct from the case where a default value is not defined.  </p>\n<p> To get the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a> array, first get the method or the constructor and then call the <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetParameters_\" data-linktype=\"relative-path\">GetParameters</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_GetCustomAttributes_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCustomAttributes(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets all the custom attributes defined on this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object[] GetCustomAttributes (bool inherit);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>inherit</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>This argument is ignored for objects of this type. See Remarks.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array that contains all the custom attributes applied to this parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.typeloadexception\" data-linktype=\"relative-path\">TypeLoadException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>A custom attribute type could not be loaded.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method ignores the <code>inherit</code> parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_\" data-linktype=\"relative-path\">GetCustomAttributes</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_GetCustomAttributes_System_Type_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCustomAttributes(Type,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the custom attributes of the specified type or its derived types that are applied to this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attributeType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The custom attributes identified by type.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>inherit</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>This argument is ignored for objects of this type. See Remarks.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array that contains the custom attributes of the specified type or its derived types.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The type must be a type provided by the underlying runtime system.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>attributeType</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.typeloadexception\" data-linktype=\"relative-path\">TypeLoadException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>A custom attribute type could not be loaded.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method ignores the <code>inherit</code> parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_\" data-linktype=\"relative-path\">GetCustomAttributes</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_GetCustomAttributesData\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCustomAttributesData()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a list of <a class=\"xref\" href=\"system.reflection.customattributedata\" data-linktype=\"relative-path\">CustomAttributeData</a> objects for the current parameter, which can be used in the reflection-only context.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.reflection.customattributedata\" data-linktype=\"relative-path\">CustomAttributeData</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A generic list of <a class=\"xref\" href=\"system.reflection.customattributedata\" data-linktype=\"relative-path\">CustomAttributeData</a> objects representing data about the attributes that have been applied to the current parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_\" data-linktype=\"relative-path\">GetCustomAttributes</a> and <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_GetCustomAttributes_\" data-linktype=\"relative-path\">GetCustomAttributes</a> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and example code, see the <a class=\"xref\" href=\"system.reflection.customattributedata\" data-linktype=\"relative-path\">CustomAttributeData</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_GetOptionalCustomModifiers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOptionalCustomModifiers()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the optional custom modifiers of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual Type[] GetOptionalCustomModifiers ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects that identify the optional custom modifiers of the current parameter, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isimplicitlydereferenced\" data-linktype=\"relative-path\">IsImplicitlyDereferenced</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetOptionalCustomModifiers and <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_GetRequiredCustomModifiers_\" data-linktype=\"relative-path\">GetRequiredCustomModifiers</a> methods are provided for designers of managed compilers. For more information on custom modifiers, see <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a> and related classes in the <a class=\"xref\" href=\"system.runtime.compilerservices\" data-linktype=\"relative-path\">System.Runtime.CompilerServices</a> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see <a href=\"http://go.microsoft.com/fwlink/?LinkID=99212\" data-linktype=\"external\">ECMA C# and Common Language Infrastructure Standards</a> on MSDN and <a href=\"http://go.microsoft.com/fwlink/?LinkID=65552\" data-linktype=\"external\">Standard ECMA-335 - Common Language Infrastructure (CLI)</a> on the Ecma International Web site.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_GetRealObject_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetRealObject(StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the real object that should be deserialized instead of the object that the serialized stream specifies.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetRealObject (System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The serialized stream from which the current object is deserialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The actual object that is put into the graph.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The parameter&#39;s position in the parameter list of its associated member is not valid for that member&#39;s type.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method implements the <a class=\"xref\" href=\"system.runtime.serialization.iobjectreference#System_Runtime_Serialization_IObjectReference_GetRealObject_\" data-linktype=\"relative-path\">GetRealObject</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_GetRequiredCustomModifiers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetRequiredCustomModifiers()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the required custom modifiers of the parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual Type[] GetRequiredCustomModifiers ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects that identify the required custom modifiers of the current parameter, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isimplicitlydereferenced\" data-linktype=\"relative-path\">IsImplicitlyDereferenced</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.reflection.parameterinfo#System_Reflection_ParameterInfo_GetOptionalCustomModifiers_\" data-linktype=\"relative-path\">GetOptionalCustomModifiers</a> and GetRequiredCustomModifiers methods are provided for designers of managed compilers. For more information on custom modifiers, see <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a> and related classes in the <a class=\"xref\" href=\"system.runtime.compilerservices\" data-linktype=\"relative-path\">System.Runtime.CompilerServices</a> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see <a href=\"http://go.microsoft.com/fwlink/?LinkID=99212\" data-linktype=\"external\">ECMA C# and Common Language Infrastructure Standards</a> on MSDN and <a href=\"http://go.microsoft.com/fwlink/?LinkID=65552\" data-linktype=\"external\">Standard ECMA-335 - Common Language Infrastructure (CLI)</a> on the Ecma International Web site.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_IsDefined_System_Type_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsDefined(Type,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool IsDefined (Type attributeType, bool inherit);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attributeType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>Type</code> object to search for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>inherit</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>This argument is ignored for objects of this type. See Remarks.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if one or more instances of <code>attributeType</code> or its derived types are applied to this parameter; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>attributeType</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>attributeType</code> is not a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object supplied by the common language runtime.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method ignores the <code>inherit</code> parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_\" data-linktype=\"relative-path\">IsDefined</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the parameter type and name represented as a string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string containing the type and the name of the parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_System_Runtime_InteropServices__ParameterInfo_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>riid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Reserved for future use. Must be IID_NULL.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgszNames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Passed-in array of names to be mapped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cNames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Count of the names to be mapped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lcid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The locale context in which to interpret the names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rgDispId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Caller-allocated array which receives the IDs corresponding to the names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetIDsOfNames</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_System_Runtime_InteropServices__ParameterInfo_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterInfo.GetTypeInfo(UInt32,UInt32,IntPtr)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>iTInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type information to return.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lcid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The locale identifier for the type information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ppTInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Receives a pointer to the requested type information object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfo</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_System_Runtime_InteropServices__ParameterInfo_GetTypeInfoCount_System_UInt32__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterInfo.GetTypeInfoCount(UInt32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterInfo.GetTypeInfoCount (out uint pcTInfo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pcTInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Points to a location that receives the number of type information interfaces provided by the object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfoCount</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ParameterInfo_System_Runtime_InteropServices__ParameterInfo_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">_ParameterInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides access to properties and methods exposed by an object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void _ParameterInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dispIdMember</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Identifies the member.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>riid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Reserved for future use. Must be IID_NULL.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lcid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The locale context in which to interpret arguments.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>wFlags</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Flags describing the context of the call.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pDispParams</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pVarResult</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Pointer to the location where the result is to be stored.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pExcepInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Pointer to a structure that contains exception information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>puArgErr</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the first argument that has an error.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::Invoke</code>, see the MSDN Library.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.ParameterInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo..ctor\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.Attributes\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.AttrsImpl\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.ClassImpl\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.CustomAttributes\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.DefaultValue\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.DefaultValueImpl\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.GetCustomAttributes\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.GetCustomAttributesData\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.GetOptionalCustomModifiers\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.GetRealObject\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.GetRequiredCustomModifiers\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.HasDefaultValue\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.IsDefined\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.IsIn\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.IsLcid\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.IsOptional\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.IsOut\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.IsRetval\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.Member\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.MemberImpl\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.MetadataToken\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.Name\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.NameImpl\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.ParameterType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.Position\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.PositionImpl\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.RawDefaultValue\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo._ParameterInfo.GetIDsOfNames\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo._ParameterInfo.GetTypeInfo\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo._ParameterInfo.GetTypeInfoCount\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo._ParameterInfo.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ParameterInfo.ToString\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"9cbda0fa-7d07-6963-70f2-43ae6a6fb22c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Discovers the attributes of a parameter and provides access to parameter metadata.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.reflection/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.ParameterInfo\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.ParameterInfo.yml","open_to_public_contributors":false,"api_name":["System.Reflection.ParameterInfo","System.Reflection.ParameterInfo..ctor","System.Reflection.ParameterInfo.Attributes","System.Reflection.ParameterInfo.AttrsImpl","System.Reflection.ParameterInfo.ClassImpl","System.Reflection.ParameterInfo.CustomAttributes","System.Reflection.ParameterInfo.DefaultValue","System.Reflection.ParameterInfo.DefaultValueImpl","System.Reflection.ParameterInfo.GetCustomAttributes","System.Reflection.ParameterInfo.GetCustomAttributesData","System.Reflection.ParameterInfo.GetOptionalCustomModifiers","System.Reflection.ParameterInfo.GetRealObject","System.Reflection.ParameterInfo.GetRequiredCustomModifiers","System.Reflection.ParameterInfo.HasDefaultValue","System.Reflection.ParameterInfo.IsDefined","System.Reflection.ParameterInfo.IsIn","System.Reflection.ParameterInfo.IsLcid","System.Reflection.ParameterInfo.IsOptional","System.Reflection.ParameterInfo.IsOut","System.Reflection.ParameterInfo.IsRetval","System.Reflection.ParameterInfo.Member","System.Reflection.ParameterInfo.MemberImpl","System.Reflection.ParameterInfo.MetadataToken","System.Reflection.ParameterInfo.Name","System.Reflection.ParameterInfo.NameImpl","System.Reflection.ParameterInfo.ParameterType","System.Reflection.ParameterInfo.Position","System.Reflection.ParameterInfo.PositionImpl","System.Reflection.ParameterInfo.RawDefaultValue","System.Reflection.ParameterInfo._ParameterInfo.GetIDsOfNames","System.Reflection.ParameterInfo._ParameterInfo.GetTypeInfo","System.Reflection.ParameterInfo._ParameterInfo.GetTypeInfoCount","System.Reflection.ParameterInfo._ParameterInfo.Invoke","System.Reflection.ParameterInfo.ToString"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.ParameterInfo","System::Reflection::ParameterInfo","System.Reflection.ParameterInfo.#ctor","System::Reflection::ParameterInfo::#ctor","System.Reflection.ParameterInfo.Attributes","System::Reflection::ParameterInfo::Attributes","System.Reflection.ParameterInfo.AttrsImpl","System::Reflection::ParameterInfo::AttrsImpl","System.Reflection.ParameterInfo.ClassImpl","System::Reflection::ParameterInfo::ClassImpl","System.Reflection.ParameterInfo.CustomAttributes","System::Reflection::ParameterInfo::CustomAttributes","System.Reflection.ParameterInfo.DefaultValue","System::Reflection::ParameterInfo::DefaultValue","System.Reflection.ParameterInfo.DefaultValueImpl","System::Reflection::ParameterInfo::DefaultValueImpl","System.Reflection.ParameterInfo.GetCustomAttributes","System::Reflection::ParameterInfo::GetCustomAttributes","System.Reflection.ParameterInfo.GetCustomAttributesData","System::Reflection::ParameterInfo::GetCustomAttributesData","System.Reflection.ParameterInfo.GetOptionalCustomModifiers","System::Reflection::ParameterInfo::GetOptionalCustomModifiers","System.Reflection.ParameterInfo.GetRealObject","System::Reflection::ParameterInfo::GetRealObject","System.Reflection.ParameterInfo.GetRequiredCustomModifiers","System::Reflection::ParameterInfo::GetRequiredCustomModifiers","System.Reflection.ParameterInfo.HasDefaultValue","System::Reflection::ParameterInfo::HasDefaultValue","System.Reflection.ParameterInfo.IsDefined","System::Reflection::ParameterInfo::IsDefined","System.Reflection.ParameterInfo.IsIn","System::Reflection::ParameterInfo::IsIn","System.Reflection.ParameterInfo.IsLcid","System::Reflection::ParameterInfo::IsLcid","System.Reflection.ParameterInfo.IsOptional","System::Reflection::ParameterInfo::IsOptional","System.Reflection.ParameterInfo.IsOut","System::Reflection::ParameterInfo::IsOut","System.Reflection.ParameterInfo.IsRetval","System::Reflection::ParameterInfo::IsRetval","System.Reflection.ParameterInfo.Member","System::Reflection::ParameterInfo::Member","System.Reflection.ParameterInfo.MemberImpl","System::Reflection::ParameterInfo::MemberImpl","System.Reflection.ParameterInfo.MetadataToken","System::Reflection::ParameterInfo::MetadataToken","System.Reflection.ParameterInfo.Name","System::Reflection::ParameterInfo::Name","System.Reflection.ParameterInfo.NameImpl","System::Reflection::ParameterInfo::NameImpl","System.Reflection.ParameterInfo.ParameterType","System::Reflection::ParameterInfo::ParameterType","System.Reflection.ParameterInfo.Position","System::Reflection::ParameterInfo::Position","System.Reflection.ParameterInfo.PositionImpl","System::Reflection::ParameterInfo::PositionImpl","System.Reflection.ParameterInfo.RawDefaultValue","System::Reflection::ParameterInfo::RawDefaultValue","System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames","System::Reflection::ParameterInfo::System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames","System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo","System::Reflection::ParameterInfo::System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo","System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount","System::Reflection::ParameterInfo::System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount","System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke","System::Reflection::ParameterInfo::System#Runtime#InteropServices#_ParameterInfo#Invoke","System.Reflection.ParameterInfo.ToString","System::Reflection::ParameterInfo::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"9cbda0fa-7d07-6963-70f2-43ae6a6fb22c","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ParameterInfo class | Microsoft Docs","_op_ogTitle":"ParameterInfo class","description":"Discovers the attributes of a parameter and provides access to parameter metadata.\n","toc_asset_id":"api/_splitted/System.Reflection/toc.json","toc_rel":"_splitted/System.Reflection/toc.json","source_url":"","ms.assetid":"System.Reflection.ParameterInfo","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.parameterinfo","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.parameterinfo","fileRelativePath":"api/System.Reflection.ParameterInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}