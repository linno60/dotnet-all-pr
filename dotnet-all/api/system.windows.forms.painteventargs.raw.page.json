{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">PaintEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class PaintEventArgs : EventArgs, IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><span class=\"lang-csharp\">PaintEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.tablelayoutcellpainteventargs\" data-linktype=\"relative-path\">TableLayoutCellPaintEventArgs</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates handling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and using the PaintEventArgs class to draw rectangles on the form. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> events are handled to determine the size of the rectangle. The example also demonstrates the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method to invalidate the area of the rectangle, causing it to be redrawn.  </p>\n<pre><code class=\"lang-cpp\" name=\"Demontrates Form Paint Event#1\">private:\n   Rectangle RcDraw;\n   void Form1_MouseDown( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n   {\n      // Determine the initial rectangle coordinates...\n      RcDraw.X = e-&gt;X;\n      RcDraw.Y = e-&gt;Y;\n   }\n\n   void Form1_MouseUp( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n   {\n      // Determine the width and height of the rectangle...\n      if ( e-&gt;X &lt; RcDraw.X )\n      {\n         RcDraw.Width = RcDraw.X - e-&gt;X;\n         RcDraw.X = e-&gt;X;\n      }\n      else\n      {\n         RcDraw.Width = e-&gt;X - RcDraw.X;\n      }\n\n      if ( e-&gt;Y &lt; RcDraw.Y )\n      {\n         RcDraw.Height = RcDraw.Y - e-&gt;Y;\n         RcDraw.Y = e-&gt;Y;\n      }\n      else\n      {\n         RcDraw.Height = e-&gt;Y - RcDraw.Y;\n      }\n\n      // Force a repaint of the region occupied by the rectangle...\n      this-&gt;Invalidate( RcDraw );\n   }\n\n   void Form1_Paint( Object^ /*sender*/, System::Windows::Forms::PaintEventArgs^ e )\n   {\n      // Draw the rectangle...\n      float PenWidth = 5;\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Blue,PenWidth ), RcDraw );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Demontrates Form Paint Event#1\">\nprivate Rectangle RcDraw;\nprivate float PenWidth = 5;\n\nprivate void Form1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)\n{\n\n\t// Determine the initial rectangle coordinates...\n\n\tRcDraw.X = e.X;\n\tRcDraw.Y = e.Y;\n\n}\n\nprivate void Form1_MouseUp(object sender, System.Windows.Forms.MouseEventArgs e)\n{\n\n\t// Determine the width and height of the rectangle...\n\n\tif(e.X &lt; RcDraw.X)\n\t{\n\t\tRcDraw.Width = RcDraw.X - e.X;\n\t\tRcDraw.X = e.X;\n\t}\n\telse\n\t{\n\t\tRcDraw.Width = e.X - RcDraw.X;\n\t}\n\n\tif(e.Y &lt; RcDraw.Y)\n\t{\n\t\tRcDraw.Height = RcDraw.Y - e.Y;\n\t\tRcDraw.Y = e.Y;\n\t}\n\telse\n\t{\n\t\tRcDraw.Height = e.Y - RcDraw.Y;\n\t}\n\n\t// Force a repaint of the region occupied by the rectangle...\n\n\tthis.Invalidate(RcDraw);\n\n}\n\nprivate void Form1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)\n{\n\n\t// Draw the rectangle...\n\n\te.Graphics.DrawRectangle(new Pen(Color.Blue, PenWidth), RcDraw);\n\t\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Demontrates Form Paint Event#1\">Dim RcDraw As Rectangle\nDim PenWidth As Integer = 5\n\n\nPrivate Sub Form1_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles MyBase.MouseDown\n\n    &#39; Determine the initial rectangle coordinates...\n\n    RcDraw.X = e.X\n    RcDraw.Y = e.Y\n\nEnd Sub\n\nPrivate Sub Form1_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles MyBase.MouseUp\n\n    &#39; Determine the width and height of the rectangle...\n\n    If e.X &lt; RcDraw.X Then\n        RcDraw.Width = RcDraw.X - e.X\n        RcDraw.X = e.X\n    Else\n        RcDraw.Width = e.X - RcDraw.X\n    End If\n\n    If e.Y &lt; RcDraw.Y Then\n        RcDraw.Height = RcDraw.Y - e.Y\n        RcDraw.Y = e.Y\n    Else\n        RcDraw.Height = e.Y - RcDraw.Y\n    End If\n\n    &#39; Force a repaint of the region occupied by the rectangle...\n\n    Me.Invalidate(RcDraw)\n\nEnd Sub\n\nPrivate Sub Form1_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles MyBase.Paint\n\n    &#39; Draw the rectangle...\n\n    e.Graphics.DrawRectangle(New Pen(Color.Blue, PenWidth), RcDraw)\n\nEnd Sub\n\n</code></pre><pre><code class=\"lang-cs\" name=\"Control.Paint#1\">// This example creates a PictureBox control on the form and draws to it.\n// This example assumes that the Form_Load event handler method is\n// connected to the Load event of the form.\n\nprivate PictureBox pictureBox1 = new PictureBox();\nprivate void Form1_Load(object sender, System.EventArgs e)\n{\n    // Dock the PictureBox to the form and set its background to white.\n    pictureBox1.Dock = DockStyle.Fill;\n    pictureBox1.BackColor = Color.White;\n    // Connect the Paint event of the PictureBox to the event handler method.\n    pictureBox1.Paint += new System.Windows.Forms.PaintEventHandler(this.pictureBox1_Paint);\n\n    // Add the PictureBox control to the Form.\n    this.Controls.Add(pictureBox1);\n}\n\nprivate void pictureBox1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)\n{\n    // Create a local version of the graphics object for the PictureBox.\n    Graphics g = e.Graphics;\n\n    // Draw a string on the PictureBox.\n    g.DrawString(&quot;This is a diagonal line drawn on the control&quot;,\n        new Font(&quot;Arial&quot;,10), System.Drawing.Brushes.Blue, new Point(30,30));\n    // Draw a line in the PictureBox.\n    g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, pictureBox1.Top,\n        pictureBox1.Right, pictureBox1.Bottom);\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Control.Paint#1\">   // This example creates a PictureBox control on the form and draws to it.\n   // This example assumes that the Form_Load event handler method is\n   // connected to the Load event of the form.\nprivate:\n   PictureBox^ pictureBox1;\n   void Form1_Load( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      pictureBox1 = gcnew PictureBox;\n\n      // Dock the PictureBox to the form and set its background to white.\n      pictureBox1-&gt;Dock = DockStyle::Fill;\n      pictureBox1-&gt;BackColor = Color::White;\n\n      // Connect the Paint event of the PictureBox to the event handler method.\n      pictureBox1-&gt;Paint += gcnew System::Windows::Forms::PaintEventHandler( this, &amp;Form1::pictureBox1_Paint );\n\n      // Add the PictureBox control to the Form.\n      this-&gt;Controls-&gt;Add( pictureBox1 );\n   }\n\n   void pictureBox1_Paint( Object^ /*sender*/, System::Windows::Forms::PaintEventArgs^ e )\n   {\n      // Create a local version of the graphics object for the PictureBox.\n      Graphics^ g = e-&gt;Graphics;\n\n      // Draw a string on the PictureBox.\n      g-&gt;DrawString( &quot;This is a diagonal line drawn on the control&quot;,\n         gcnew System::Drawing::Font( &quot;Arial&quot;,10 ), System::Drawing::Brushes::Blue, Point(30,30) );\n\n      // Draw a line in the PictureBox.\n      g-&gt;DrawLine( System::Drawing::Pens::Red, pictureBox1-&gt;Left, pictureBox1-&gt;Top,\n         pictureBox1-&gt;Right, pictureBox1-&gt;Bottom );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control.Paint#1\">&#39; This example creates a PictureBox control on the form and draws to it. \n&#39; This example assumes that the Form_Load event handler method is connected \n&#39; to the Load event of the form.\nPrivate pictureBox1 As New PictureBox()\n\nPrivate Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load\n    &#39; Dock the PictureBox to the form and set its background to white.\n    pictureBox1.Dock = DockStyle.Fill\n    pictureBox1.BackColor = Color.White\n    &#39; Connect the Paint event of the PictureBox to the event handler method.\n    AddHandler pictureBox1.Paint, AddressOf Me.pictureBox1_Paint\n\n    &#39; Add the PictureBox control to the Form.\n    Me.Controls.Add(pictureBox1)\nEnd Sub &#39;Form1_Load\n\n\nPrivate Sub pictureBox1_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs)\n    &#39; Create a local version of the graphics object for the PictureBox.\n    Dim g As Graphics = e.Graphics\n\n    &#39; Draw a string on the PictureBox.\n    g.DrawString(&quot;This is a diagonal line drawn on the control&quot;, _\n        New Font(&quot;Arial&quot;, 10), Brushes.Red, New PointF(30.0F, 30.0F))\n    &#39; Draw a line in the PictureBox.\n    g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, _ \n        pictureBox1.Top, pictureBox1.Right, pictureBox1.Bottom)\nEnd Sub &#39;pictureBox1_Paint\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event occurs when a control is redrawn. A PaintEventArgs specifies the <a class=\"xref\" href=\"system.windows.forms.painteventargs#System_Windows_Forms_PaintEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> to use to paint the control and the <a class=\"xref\" href=\"system.windows.forms.painteventargs#System_Windows_Forms_PaintEventArgs_ClipRectangle_\" data-linktype=\"relative-path\">ClipRectangle</a> in which to paint.  </p>\n<p> For information about the event model, see <a href=\"../topic/handling%20and%20raising%20events\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_PaintEventArgs__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_PaintEventArgs__ctor_System_Drawing_Graphics_System_Drawing_Rectangle_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PaintEventArgs(Graphics, Rectangle)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> class with the specified graphics and clipping rectangle.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public PaintEventArgs (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipRect);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>graphics</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the item.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>clipRect</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the rectangle in which to paint.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> identified by the <code>graphics</code> parameter is disposed when the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> is disposed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_PaintEventArgs_ClipRectangle_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_PaintEventArgs_ClipRectangle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClipRectangle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the rectangle in which to paint.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Rectangle ClipRectangle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> in which to paint.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_PaintEventArgs_Graphics_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_PaintEventArgs_Graphics\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Graphics</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the graphics used to paint.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Graphics Graphics { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object used to paint. The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object provides methods for drawing objects on the display device.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_PaintEventArgs_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_PaintEventArgs_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases all resources used by the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> was occupying. For more information, see <a href=\"../topic/cleaning%20up%20unmanaged%20resources\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../topic/implementing%20a%20dispose%20method\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_PaintEventArgs_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_PaintEventArgs_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected Dispose method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_PaintEventArgs_Finalize_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_PaintEventArgs_Finalize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Finalize()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">~PaintEventArgs ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.PaintEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.ClipRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.Graphics\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"03ba7c9c-0881-f7e8-be92-49a9a18a06c0\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.PaintEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.PaintEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.PaintEventArgs","System.Windows.Forms.PaintEventArgs..ctor","System.Windows.Forms.PaintEventArgs.ClipRectangle","System.Windows.Forms.PaintEventArgs.Dispose","System.Windows.Forms.PaintEventArgs.Finalize","System.Windows.Forms.PaintEventArgs.Graphics"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.PaintEventArgs","System::Windows::Forms::PaintEventArgs","System.Windows.Forms.PaintEventArgs.#ctor","System::Windows::Forms::PaintEventArgs::#ctor","System.Windows.Forms.PaintEventArgs.ClipRectangle","System::Windows::Forms::PaintEventArgs::ClipRectangle","System.Windows.Forms.PaintEventArgs.Dispose","System::Windows::Forms::PaintEventArgs::Dispose","System.Windows.Forms.PaintEventArgs.Finalize","System::Windows::Forms::PaintEventArgs::Finalize","System.Windows.Forms.PaintEventArgs.Graphics","System::Windows::Forms::PaintEventArgs::Graphics"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"03ba7c9c-0881-f7e8-be92-49a9a18a06c0","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/PaintEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PaintEventArgs class | Microsoft Docs","_op_ogTitle":"PaintEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.PaintEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.painteventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.painteventargs","fileRelativePath":"api/System.Windows.Forms.PaintEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}