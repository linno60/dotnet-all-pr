{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">OpenReadCompletedEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event of a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void OpenReadCompletedEventHandler(object sender, OpenReadCompletedEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">OpenReadCompletedEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates downloading a resource for reading.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#30\">void OpenResourceForReading2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n\n   client-&gt;OpenReadCompleted += gcnew OpenReadCompletedEventHandler( OpenReadCallback2 );\n   client-&gt;OpenReadAsync( uri );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#30\">public static void OpenResourceForReading2 (string address)\n{\n    WebClient client = new WebClient ();\n    Uri uri = new Uri(address);\n\n    client.OpenReadCompleted += new OpenReadCompletedEventHandler(OpenReadCallback2);\n    client.OpenReadAsync (uri);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#30\">Public Shared Sub OpenResourceForReading2(ByVal address As String)\n\n\tDim client As WebClient = New WebClient()\n\tAddHandler client.OpenReadCompleted, AddressOf OpenReadCallback2\n                      Dim uri as Uri = New Uri(address)\n\tclient.OpenReadAsync(uri)                        \nEnd Sub\n</code></pre><p> The following method is called when the download completes.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#31\">void OpenReadCallback2( Object^ /*sender*/, OpenReadCompletedEventArgs^ e )\n{\n   Stream^ reply = nullptr;\n   StreamReader^ s = nullptr;\n   try\n   {\n      reply = dynamic_cast&lt;Stream^&gt;(e-&gt;Result);\n      s = gcnew StreamReader( reply );\n      Console::WriteLine( s-&gt;ReadToEnd() );\n   }\n   finally\n   {\n      if ( s != nullptr )\n      {\n         s-&gt;Close();\n      }\n      if ( reply != nullptr )\n      {\n         reply-&gt;Close();\n      }\n   }\n\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#31\">private static void OpenReadCallback2 (Object sender, OpenReadCompletedEventArgs e)\n{\n    Stream reply = null;\n    StreamReader s = null;\n\n    try\n    {\n        reply = (Stream)e.Result;\n        s = new StreamReader (reply);\n        Console.WriteLine (s.ReadToEnd ());\n    }\n    finally\n    {\n        if (s != null)\n        {\n            s.Close ();\n        }\n\n        if (reply != null)\n        {\n            reply.Close ();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#31\">Private Shared Sub OpenReadCallback2(ByVal sender As Object, ByVal e As OpenReadCompletedEventArgs)\n\n    Dim reply As Stream = Nothing\n    Dim s As StreamReader = Nothing\n\n    Try\n\n        reply = CType(e.Result, Stream)\n        s = New StreamReader(reply)\n        Console.WriteLine(s.ReadToEnd())\n    Finally\n\n        If Not s Is Nothing Then\n\n            s.Close()\n        End If\n\n        If Not reply Is Nothing Then\n\n            reply.Close()\n        End If\n    End Try\nEnd Sub\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a OpenReadCompletedEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.OpenReadCompletedEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.OpenReadCompletedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Net.OpenReadCompletedEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.OpenReadCompletedEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Net.OpenReadCompletedEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Net.OpenReadCompletedEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"1896e798-e640-d72b-7a1d-ece3bfb4023e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  event of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.OpenReadCompletedEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.OpenReadCompletedEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Net.OpenReadCompletedEventHandler","System.Net.OpenReadCompletedEventHandler..ctor","System.Net.OpenReadCompletedEventHandler.Invoke","System.Net.OpenReadCompletedEventHandler.BeginInvoke","System.Net.OpenReadCompletedEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.OpenReadCompletedEventHandler","System::Net::OpenReadCompletedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"1896e798-e640-d72b-7a1d-ece3bfb4023e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Net/OpenReadCompletedEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OpenReadCompletedEventHandler delegate | Microsoft Docs","_op_ogTitle":"OpenReadCompletedEventHandler delegate","description":"Represents the method that will handle the  event of a .\n","toc_asset_id":"api/_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.OpenReadCompletedEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.openreadcompletedeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.openreadcompletedeventhandler","fileRelativePath":"api/System.Net.OpenReadCompletedEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}