{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IsSignUnspecifiedByte</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Indicates that a modifier is neither signed nor unsigned. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public static class IsSignUnspecifiedByte</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">IsSignUnspecifiedByte</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example creates an assembly using classes in the <a class=\"xref\" href=\"system.reflection.emit\" data-linktype=\"relative-path\">System.Reflection.Emit</a> namespace and emits the IsSignUnspecifiedByte modifier into that assembly.  </p>\n<pre><code class=\"lang-cpp\" name=\"Runtime.CompilerServices.IsSignUnspecifiedByte#1\">\n\n#using &lt;mscorlib.dll&gt;\n\nusing namespace System;\nusing namespace System::Reflection;\nusing namespace System::Reflection::Emit;\nusing namespace System::Runtime::CompilerServices;\nusing namespace System::Threading;\n\n\nref class CodeEmitter\n{\nprivate:\n    AssemblyBuilder^ asmBuilder;\n    String^ asmName;\n    ModuleBuilder^ modBuilder;\n\n\n    void prepareAssembly(String^ name){\n        \n        // Check the input.\n        if(!name){\n        \n            throw gcnew ArgumentNullException(&quot;AssemblyName&quot;);\n        }\n\n        asmName = name;\n\n        // Create an AssemblyName object and set the name.\n        AssemblyName^ asmName = gcnew AssemblyName();\n\n        asmName-&gt;Name = name;\n\n        // Use the AppDomain class to create an AssemblyBuilder instance.\n\n        AppDomain^ currentDomain = Thread::GetDomain();\n\n        asmBuilder = currentDomain-&gt;DefineDynamicAssembly(asmName,AssemblyBuilderAccess::RunAndSave);\n\n        // Create a dynamic module.\n        modBuilder = asmBuilder-&gt;DefineDynamicModule(name);\n    }\n\n\npublic:\n\n    // Constructor.\n    CodeEmitter(String ^ AssemblyName){\n\n        prepareAssembly(AssemblyName);\n    }\n\n    // Create a new type.\n    TypeBuilder^ CreateType(String^ name){\n       \n        // Check the input.\n        if(!name){\n        \n            throw gcnew ArgumentNullException(&quot;AssemblyName&quot;);\n        }\n\n        return modBuilder-&gt;DefineType( name );\n    }\n\n    // Write the assembly.\n    void WriteAssembly(MethodBuilder^ entryPoint){\n    \n        // Check the input.\n        if(!entryPoint){\n        \n            throw gcnew ArgumentNullException(&quot;entryPoint&quot;);\n        }\n\n        asmBuilder-&gt;SetEntryPoint( entryPoint );\n        asmBuilder-&gt;Save( asmName );\n    }\n\n};\n\nvoid main()\n{\n\n    // Create a CodeEmitter to handle assembly creation.\n    CodeEmitter ^ e = gcnew CodeEmitter(&quot;program.exe&quot;);\n\n    // Create a new type.\n    TypeBuilder^ mainClass = e-&gt;CreateType(&quot;MainClass&quot;);\n    \n    // Create a new method.\n    MethodBuilder^ mBuilder = mainClass-&gt;DefineMethod(&quot;mainMethod&quot;, MethodAttributes::Static);\n\n    // Create an ILGenerator and emit IL for \n    // a simple &quot;Hello World.&quot; program.\n    ILGenerator^ ilGen = mBuilder-&gt;GetILGenerator();\n\n    ilGen-&gt;Emit(OpCodes::Ldstr, &quot;Hello World&quot;);\n\n    array&lt;Type^&gt;^mType = {String::typeid};\n\n    MethodInfo^ writeMI = Console::typeid-&gt;GetMethod( &quot;WriteLine&quot;, mType );\n\n    ilGen-&gt;EmitCall(OpCodes::Call, writeMI, nullptr );\n\n    ilGen-&gt;Emit( OpCodes::Ret );\n\n    /////////////////////////////////////////////////\n    /////////////////////////////////////////////////\n    // Apply a required custom modifier\n    // to a field.\n    /////////////////////////////////////////////////\n    /////////////////////////////////////////////////\n\n    array&lt;Type^&gt;^fType = {IsSignUnspecifiedByte::typeid};\n\n    mainClass-&gt;DefineField(&quot;modifiedInteger&quot;, Type::GetType(&quot;System.Byte&quot;), fType, nullptr, FieldAttributes::Private);\n\n    // Create the type.\n    mainClass-&gt;CreateType();\n\n    // Write the assembly using a reference to \n    // the entry point.\n    e-&gt;WriteAssembly(mBuilder);\n\n    Console::WriteLine(L&quot;Assembly created.&quot;);\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Some programming languages, such as C++, recognize three distinct <code>char</code> values: <code>signed char</code>, <code>unsigned char</code>, and <code>char</code>.  To distinguish the unmodified <code>char</code> type from the others, the Microsoft C++ compiler adds the IsSignUnspecifiedByte modifier to each <code>char</code> type emitted to an assembly.  </p>\n<p> Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.  When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.  Compilers can apply custom modifiers to methods, parameters, and return values.  The JIT compiler must respond to required modifiers but can ignore optional modifiers.  </p>\n<p> You can emit custom modifiers into metadata using one of the following techniques:  </p>\n<ul>\n<li><p>Using methods in the <a class=\"xref\" href=\"system.reflection.emit.typebuilder\" data-linktype=\"relative-path\">TypeBuilder</a> class such as <a class=\"xref\" href=\"system.reflection.emit.typebuilder#System_Reflection_Emit_TypeBuilder_DefineMethod_\" data-linktype=\"relative-path\">DefineMethod</a>, <a class=\"xref\" href=\"system.reflection.emit.typebuilder#System_Reflection_Emit_TypeBuilder_DefineField_\" data-linktype=\"relative-path\">DefineField</a>, <a class=\"xref\" href=\"system.reflection.emit.typebuilder#System_Reflection_Emit_TypeBuilder_DefineConstructor_\" data-linktype=\"relative-path\">DefineConstructor</a>, and <a class=\"xref\" href=\"system.reflection.emit.typebuilder#System_Reflection_Emit_TypeBuilder_DefineProperty_\" data-linktype=\"relative-path\">DefineProperty</a>.  </p>\n</li>\n<li><p>Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <code>modopt</code> and <code>modreq</code>, and assembling the file with the <a href=\"../topic/ilasm.exe%20(il%20assembler)\" data-linktype=\"relative-path\">Ilasm.exe (IL Assembler)</a>.  </p>\n</li>\n<li><p>Using the unmanaged reflection API.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.CompilerServices.IsSignUnspecifiedByte.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.IsSignUnspecifiedByte\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"0a0308af-e54b-e510-4a26-82a386bb8e8a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that a modifier is neither signed nor unsigned. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.compilerservices/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.CompilerServices.IsSignUnspecifiedByte\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.CompilerServices.IsSignUnspecifiedByte.yml","open_to_public_contributors":false,"api_name":["System.Runtime.CompilerServices.IsSignUnspecifiedByte"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.CompilerServices.IsSignUnspecifiedByte","System::Runtime::CompilerServices::IsSignUnspecifiedByte"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"0a0308af-e54b-e510-4a26-82a386bb8e8a","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.CompilerServices/IsSignUnspecifiedByte.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IsSignUnspecifiedByte class | Microsoft Docs","_op_ogTitle":"IsSignUnspecifiedByte class","description":"Indicates that a modifier is neither signed nor unsigned. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Runtime.CompilerServices/toc.json","toc_rel":"_splitted/System.Runtime.CompilerServices/toc.json","source_url":"","ms.assetid":"System.Runtime.CompilerServices.IsSignUnspecifiedByte","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.issignunspecifiedbyte","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.issignunspecifiedbyte","fileRelativePath":"api/System.Runtime.CompilerServices.IsSignUnspecifiedByte.html"},"themesRelativePathToOutputRoot":"_themes/"}