{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ServiceControllerStatus</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Indicates the current state of the service.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum ServiceControllerStatus</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">ServiceControllerStatus</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to check the current status of the TelNet service. If the service is stopped, the example starts the service. If the service is running, the example stops the service.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#2\">\n// Toggle the Telnet service - \n// If it is started (running, paused, etc), stop the service.\n// If it is stopped, start the service.\nServiceController sc = new ServiceController(&quot;Telnet&quot;);\nConsole.WriteLine(&quot;The Telnet service status is currently set to {0}&quot;, \n                  sc.Status.ToString());\n\nif  ((sc.Status.Equals(ServiceControllerStatus.Stopped)) ||\n     (sc.Status.Equals(ServiceControllerStatus.StopPending)))\n{\n   // Start the service if the current status is stopped.\n\n   Console.WriteLine(&quot;Starting the Telnet service...&quot;);\n   sc.Start();\n}  \nelse\n{\n   // Stop the service if its status is not set to &quot;Stopped&quot;.\n\n   Console.WriteLine(&quot;Stopping the Telnet service...&quot;);\n   sc.Stop();\n}  \n\n// Refresh and display the current service status.\nsc.Refresh();\nConsole.WriteLine(&quot;The Telnet service status is now set to {0}.&quot;, \n                   sc.Status.ToString());\n\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#2\">// Toggle the Telnet service - \n// If it is started (running, paused, etc), stop the service.\n// If it is stopped, start the service.\nServiceController^ sc = gcnew ServiceController(  &quot;Telnet&quot; );\nif ( sc )\n{\n   Console::WriteLine(  &quot;The Telnet service status is currently set to {0}&quot;, sc-&gt;Status );\n   if ( (sc-&gt;Status == (ServiceControllerStatus::Stopped) ) || (sc-&gt;Status == (ServiceControllerStatus::StopPending) ) )\n   {\n      // Start the service if the current status is stopped.\n      Console::WriteLine(  &quot;Starting the Telnet service...&quot; );\n      sc-&gt;Start();\n   }\n   else\n   {\n      // Stop the service if its status is not set to &quot;Stopped&quot;.\n      Console::WriteLine(  &quot;Stopping the Telnet service...&quot; );\n      sc-&gt;Stop();\n   }\n\n   // Refresh and display the current service status.\n   sc-&gt;Refresh();\n   Console::WriteLine(  &quot;The Telnet service status is now set to {0}.&quot;, sc-&gt;Status );\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#2\">\n&#39; Toggle the Telnet service - \n&#39; If it is started (running, paused, etc), stop the service.\n&#39; If it is stopped, start the service.\nDim sc As New ServiceController(&quot;Telnet&quot;)\nConsole.WriteLine(&quot;The Telnet service status is currently set to {0}&quot;, sc.Status)\n\nIf sc.Status.Equals(ServiceControllerStatus.Stopped) Or sc.Status.Equals(ServiceControllerStatus.StopPending) Then\n   &#39; Start the service if the current status is stopped.\n   Console.WriteLine(&quot;Starting the Telnet service...&quot;)\n   sc.Start()\nElse\n   &#39; Stop the service if its status is not set to &quot;Stopped&quot;.\n   Console.WriteLine(&quot;Stopping the Telnet service...&quot;)\n   sc.Stop()\nEnd If\n\n&#39; Refresh and display the current service status.\nsc.Refresh()\nConsole.WriteLine(&quot;The Telnet service status is now set to {0}.&quot;, sc.Status)\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ServiceControllerStatus enumeration is used by an instance of the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to indicate whether an existing service is running, stopped, paused, or whether a Start, Stop, Pause, or Continue command is pending.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_ServiceProcess_ServiceControllerStatus_ContinuePending\">\r\n      \t\t\t<span class=\"lang-csharp\">ContinuePending</span>\r\n      \t</td>\r\n      \t<td><p>The service continue is pending. This corresponds to the Win32 <code>SERVICE_CONTINUE_PENDING</code> constant, which is defined as 0x00000005.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceProcess_ServiceControllerStatus_Paused\">\r\n      \t\t\t<span class=\"lang-csharp\">Paused</span>\r\n      \t</td>\r\n      \t<td><p>The service is paused. This corresponds to the Win32 <code>SERVICE_PAUSED</code> constant, which is defined as 0x00000007.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceProcess_ServiceControllerStatus_PausePending\">\r\n      \t\t\t<span class=\"lang-csharp\">PausePending</span>\r\n      \t</td>\r\n      \t<td><p>The service pause is pending. This corresponds to the Win32 <code>SERVICE_PAUSE_PENDING</code> constant, which is defined as 0x00000006.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceProcess_ServiceControllerStatus_Running\">\r\n      \t\t\t<span class=\"lang-csharp\">Running</span>\r\n      \t</td>\r\n      \t<td><p>The service is running. This corresponds to the Win32 <code>SERVICE_RUNNING</code> constant, which is defined as 0x00000004.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceProcess_ServiceControllerStatus_StartPending\">\r\n      \t\t\t<span class=\"lang-csharp\">StartPending</span>\r\n      \t</td>\r\n      \t<td><p>The service is starting. This corresponds to the Win32 <code>SERVICE_START_PENDING</code> constant, which is defined as 0x00000002.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceProcess_ServiceControllerStatus_Stopped\">\r\n      \t\t\t<span class=\"lang-csharp\">Stopped</span>\r\n      \t</td>\r\n      \t<td><p>The service is not running. This corresponds to the Win32 <code>SERVICE_STOPPED</code> constant, which is defined as 0x00000001.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceProcess_ServiceControllerStatus_StopPending\">\r\n      \t\t\t<span class=\"lang-csharp\">StopPending</span>\r\n      \t</td>\r\n      \t<td><p>The service is stopping. This corresponds to the Win32 <code>SERVICE_STOP_PENDING</code> constant, which is defined as 0x00000003.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceProcess.ServiceControllerStatus.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus.ContinuePending\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus.Paused\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus.PausePending\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus.Running\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus.StartPending\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus.Stopped\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceControllerStatus.StopPending\">\r\n<meta name=\"APILocation\" content=\"System.ServiceProcess.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"4e4f62e3-bb5a-81a9-68b1-90317d5e35df\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates the current state of the service.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.serviceprocess/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceProcess.ServiceControllerStatus\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceProcess.ServiceControllerStatus.yml","open_to_public_contributors":false,"api_name":["System.ServiceProcess.ServiceControllerStatus","System.ServiceProcess.ServiceControllerStatus.ContinuePending","System.ServiceProcess.ServiceControllerStatus.Paused","System.ServiceProcess.ServiceControllerStatus.PausePending","System.ServiceProcess.ServiceControllerStatus.Running","System.ServiceProcess.ServiceControllerStatus.StartPending","System.ServiceProcess.ServiceControllerStatus.Stopped","System.ServiceProcess.ServiceControllerStatus.StopPending"],"api_location":["System.ServiceProcess.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceProcess.ServiceControllerStatus","System::ServiceProcess::ServiceControllerStatus","System.ServiceProcess.ServiceControllerStatus.ContinuePending","System::ServiceProcess::ServiceControllerStatus::ContinuePending","System.ServiceProcess.ServiceControllerStatus.Paused","System::ServiceProcess::ServiceControllerStatus::Paused","System.ServiceProcess.ServiceControllerStatus.PausePending","System::ServiceProcess::ServiceControllerStatus::PausePending","System.ServiceProcess.ServiceControllerStatus.Running","System::ServiceProcess::ServiceControllerStatus::Running","System.ServiceProcess.ServiceControllerStatus.StartPending","System::ServiceProcess::ServiceControllerStatus::StartPending","System.ServiceProcess.ServiceControllerStatus.Stopped","System::ServiceProcess::ServiceControllerStatus::Stopped","System.ServiceProcess.ServiceControllerStatus.StopPending","System::ServiceProcess::ServiceControllerStatus::StopPending"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"4e4f62e3-bb5a-81a9-68b1-90317d5e35df","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ServiceProcess/ServiceControllerStatus.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ServiceControllerStatus enum | Microsoft Docs","_op_ogTitle":"ServiceControllerStatus enum","description":"Indicates the current state of the service.\n","toc_asset_id":"api/_splitted/System.ServiceProcess/toc.json","toc_rel":"_splitted/System.ServiceProcess/toc.json","source_url":"","ms.assetid":"System.ServiceProcess.ServiceControllerStatus","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.serviceprocess.servicecontrollerstatus","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.serviceprocess.servicecontrollerstatus","fileRelativePath":"api/System.ServiceProcess.ServiceControllerStatus.html"},"themesRelativePathToOutputRoot":"_themes/"}