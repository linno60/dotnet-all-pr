{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GacMembershipCondition</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Determines whether an assembly belongs to a code group by testing its global assembly cache membership. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic sealed class GacMembershipCondition</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">GacMembershipCondition</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates the use of the GacMembershipCondition class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Security.Policy.GacMembershipCondition#1\">using namespace System;\nusing namespace System::Security;\nusing namespace System::Security::Policy;\nusing namespace System::Collections;\npublic ref class GacMembershipConditionDemo\n{\nprivate:\n\n    // Demonstrate the Copy method, which creates an identical \n    // copy of the current permission.\n    bool CopyDemo()\n    {\n        Console::WriteLine(\n            &quot;************************************************************&quot;);\n        GacMembershipCondition ^ Gac1 = gcnew GacMembershipCondition;\n        Console::WriteLine(&quot;Original membership condition = &quot;);\n        Console::WriteLine(Gac1-&gt;ToXml());\n        try\n        {\n            IMembershipCondition^ membershipCondition = Gac1-&gt;Copy();\n            Console::WriteLine(&quot;Result of Copy = &quot;);\n            Console::WriteLine(\n                (dynamic_cast&lt;GacMembershipCondition^&gt;(membershipCondition))\n                -&gt;ToXml());\n        }\n        catch (Exception^ e) \n        {\n             Console::WriteLine(&quot;Copy failed : {0}{1}&quot;, Gac1, e);\n             return false;\n        }\n\n        return true;\n    }\n\n    // Demonstrate the Check method, which determines whether the specified \n    // evidence satisfies the membership condition.\n    bool CheckDemo()\n    {\n        Console::WriteLine(\n            &quot;************************************************************&quot;);\n        GacMembershipCondition ^ Gac1 = gcnew GacMembershipCondition;\n        GacInstalled ^ myGac = gcnew GacInstalled;\n        try\n        {\n             array&lt;Object^&gt;^hostEvidence = {myGac};\n             array&lt;Object^&gt;^assemblyEvidence = {};\n             Evidence^ myEvidence = \n                 gcnew Evidence(hostEvidence,assemblyEvidence);\n             bool retCode = Gac1-&gt;Check(myEvidence);\n             Console::WriteLine(&quot;Result of Check = {0}\\n&quot;, retCode);\n        }\n        catch (Exception^ e) \n        {\n             Console::WriteLine(&quot;Check failed : {0}{1}&quot;, Gac1, e);\n             return false;\n        }\n\n        return true;\n    }\n\n    // Demonstrate the GetHashCode method, which returns a hash code \n    // for the specified membership condition.\n    bool GetHashCodeDemo()\n    {\n        Console::WriteLine(\n            &quot;************************************************************&quot;);\n        GacMembershipCondition ^ Gac1 = gcnew GacMembershipCondition;\n        try\n        {\n            Console::WriteLine(\n                &quot;Result of GetHashCode for a GacMembershipCondition = {0}\\n&quot;,\n                Gac1-&gt;GetHashCode());\n        }\n        catch (Exception^ e) \n        {\n             Console::WriteLine(&quot;GetHashCode failed : {0}{1}&quot;, Gac1, e);\n             return false;\n        }\n\n        return true;\n    }\n\n    // Demonstrate the ToXml and FromXml methods, including the overloads. \n    // ToXml creates an XML encoding of the membership condition and its \n    // current state; FromXml reconstructs a membership condition with the \n    // specified state from the XML encoding.\n    bool ToFromXmlDemo()\n    {\n        Console::WriteLine(\n            &quot;************************************************************&quot;);\n        try\n        {\n            GacMembershipCondition ^ Gac1 = gcnew GacMembershipCondition;\n            GacMembershipCondition ^ Gac2 = gcnew GacMembershipCondition;\n\n            // Roundtrip a GacMembershipCondition to and from an XML encoding.\n            Gac2-&gt;FromXml(Gac1-&gt;ToXml());\n            bool result = Gac2-&gt;Equals(Gac1);\n            if (result)\n            {\n                Console::WriteLine(&quot;Result of ToXml() = {0}&quot;, Gac2-&gt;ToXml());\n                Console::WriteLine(\n                    &quot;Result of ToFromXml roundtrip = {0}&quot;, Gac2);\n            }\n            else\n            {\n                Console::WriteLine(Gac2-&gt;ToString());\n                Console::WriteLine(Gac1-&gt;ToString());\n                return false;\n            }\n\n            GacMembershipCondition ^ Gac3 = gcnew GacMembershipCondition;\n            GacMembershipCondition ^ Gac4 = gcnew GacMembershipCondition;\n            IEnumerator^ policyEnumerator = SecurityManager::PolicyHierarchy();\n            while (policyEnumerator-&gt;MoveNext())\n            {\n                PolicyLevel^ currentLevel = \n                    dynamic_cast&lt;PolicyLevel^&gt;(policyEnumerator-&gt;Current);\n                if (currentLevel-&gt;Label-&gt;Equals(&quot;Machine&quot;))\n                {\n                    Console::WriteLine(&quot;Result of ToXml(level) = {0}&quot;, \n                        Gac3-&gt;ToXml(currentLevel));\n                    Gac4-&gt;FromXml(Gac3-&gt;ToXml(), currentLevel);\n                    Console::WriteLine(\n                        &quot;Result of FromXml(element, level) = {0}&quot;, Gac4);\n                }\n            }\n        }\n        catch (Exception^ e) \n        {\n            Console::WriteLine(&quot;ToFromXml failed. {0}&quot;, e);\n            return false;\n        }\n\n        return true;\n    }\n\npublic:\n\n    // Invoke all demos.\n    bool RunDemo()\n    {\n        bool returnCode = true;\n        bool tempReturnCode;\n\n        // Call the Copy demo.\n        if (tempReturnCode = CopyDemo())\n            Console::WriteLine(&quot;Copy demo completed successfully.&quot;);\n        else\n            Console::WriteLine(&quot;Copy demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n\n        // Call the Check demo.\n        if (tempReturnCode = CheckDemo())\n            Console::WriteLine(&quot;Check demo completed successfully.&quot;);\n        else\n            Console::WriteLine(&quot;Check demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n\n        // Call the GetHashCode demo.\n        if (tempReturnCode = GetHashCodeDemo())\n            Console::WriteLine(&quot;GetHashCode demo completed successfully.&quot;);\n        else\n            Console::WriteLine(&quot;GetHashCode demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n\n        // Call the ToFromXml demo. \n        if (tempReturnCode = ToFromXmlDemo())\n            Console::WriteLine(&quot;ToFromXml demo completed successfully.&quot;);\n        else\n            Console::WriteLine(&quot;ToFromXml demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n        return (returnCode);\n    }\n};\n\n// Test harness.\nint main()\n{\n    try\n    {\n        GacMembershipConditionDemo^ testcase = \n            gcnew GacMembershipConditionDemo;\n        bool returnCode = testcase-&gt;RunDemo();\n        if (returnCode)\n        {\n            Console::WriteLine(\n                &quot;The GacMembershipCondition demo completed successfully.&quot;);\n            Console::WriteLine(&quot;Press the Enter key to exit.&quot;);\n            Console::ReadLine();\n            System::Environment::ExitCode = 100;\n        }\n        else\n        {\n            Console::WriteLine(&quot;The GacMembershipCondition demo failed.&quot;);\n            Console::WriteLine(&quot;Press the ENTER key to exit.&quot;);\n            Console::ReadLine();\n            System::Environment::ExitCode = 101;\n        }\n    }\n    catch (Exception^ e) \n    {\n        Console::WriteLine(&quot;The GacIdentityPermission demo failed.&quot;);\n        Console::WriteLine(e);\n        Console::WriteLine(&quot;Press the Enter key to exit.&quot;);\n        Console::ReadLine();\n        System::Environment::ExitCode = 101;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Policy.GacMembershipCondition#1\">Imports System\nImports System.Security\nImports System.Security.Policy\nImports System.Collections\n\nPublic Class GacMembershipConditionDemo\n\n    &#39; Demonstrate the Copy method, which creates an identical \n    &#39; copy of the current permission.\n    Private Function CopyDemo() As Boolean\n        Console.WriteLine( _\n            &quot;*************************************************************&quot;)\n        Dim Gac1 As New GacMembershipCondition\n        Console.WriteLine(&quot;Original membership condition = &quot;)\n        Console.WriteLine(Gac1.ToXml().ToString())\n        Try\n            Dim membershipCondition As IMembershipCondition = Gac1.Copy()\n            Console.WriteLine(&quot;Result of Copy = &quot;)\n            Console.WriteLine(CType(membershipCondition, _\n                GacMembershipCondition).ToXml().ToString())\n        Catch e As Exception\n            Console.WriteLine((&quot;Copy failed : &quot; &amp; Gac1.ToString() &amp; _\n                e.ToString()))\n            Return False\n        End Try\n\n        Return True\n    End Function &#39;CopyDemo\n\n    &#39; Demonstrate the Check method, which determines whether the specified \n    &#39; evidence satisfies the membership condition.\n    Private Function CheckDemo() As Boolean\n        Console.WriteLine( _\n            &quot;*************************************************************&quot;)\n        Dim Gac1 As New GacMembershipCondition\n        Dim myGac As New GacInstalled\n        Try\n            Dim hostEvidence() As Object = {myGac}\n            Dim assemblyEvidence() As Object\n\n            Dim myEvidence As New Evidence(hostEvidence, assemblyEvidence)\n            Dim retCode As Boolean = Gac1.Check(myEvidence)\n            Console.WriteLine((&quot;Result of Check = &quot; &amp; retCode.ToString() _\n                &amp; ControlChars.Lf))\n        Catch e As Exception\n            Console.WriteLine((&quot;Check failed : &quot; &amp; Gac1.ToString() &amp; _ \n                e.ToString()))\n            Return False\n        End Try\n        Return True\n    End Function &#39;CheckDemo\n\n    &#39; Demonstrate the GetHashCode method, which returns a hash code\n    &#39; for the specified membership condition.\n    Private Function GetHashCodeDemo() As Boolean\n        Console.WriteLine( _\n            &quot;*************************************************************&quot;)\n        Dim Gac1 As New GacMembershipCondition\n        Try\n            Console.WriteLine( _\n                (&quot;Result of GetHashCode for a GacMembershipCondition = &quot; _\n                &amp; Gac1.GetHashCode().ToString() &amp; ControlChars.Lf))\n        Catch e As Exception\n            Console.WriteLine((&quot;GetHashCode failed : &quot; &amp; _\n                Gac1.ToString() &amp; e.ToString()))\n            Return False\n        End Try\n\n        Return True\n    End Function &#39;GetHashCodeDemo\n\n    &#39;Demonstrate the ToXml and FromXml methods, including the overloads. \n    &#39; ToXml creates an XML encoding of the membership condition and its \n    &#39; current state; FromXml reconstructs a membership condition with the \n    &#39; specified state from the XML encoding.\n    Private Function ToFromXmlDemo() As Boolean\n        Console.WriteLine( _\n            &quot;*************************************************************&quot;)\n        Try\n            Dim Gac1 As New GacMembershipCondition\n            Dim Gac2 As New GacMembershipCondition\n\n            &#39; Roundtrip a GacMembershipCondition to and from an XML encoding.\n            Gac2.FromXml(Gac1.ToXml())\n            Dim result As Boolean = Gac2.Equals(Gac1)\n            If result Then\n                Console.WriteLine((&quot;Result of ToXml() = &quot; &amp; _ \n                    Gac2.ToXml().ToString()))\n                Console.WriteLine((&quot;Result of ToFromXml roundtrip = &quot; &amp; _ \n                    Gac2.ToString()))\n            Else\n                Console.WriteLine(Gac2.ToString())\n                Console.WriteLine(Gac1.ToString())\n                Return False\n            End If\n\n            Dim Gac3 As New GacMembershipCondition\n            Dim Gac4 As New GacMembershipCondition\n            Dim policyEnumerator As IEnumerator = _\n                SecurityManager.PolicyHierarchy()\n            While policyEnumerator.MoveNext()\n                Dim currentLevel As PolicyLevel = _\n                    CType(policyEnumerator.Current, PolicyLevel)\n                If currentLevel.Label = &quot;Machine&quot; Then\n                    Console.WriteLine((&quot;Result of ToXml(level) = &quot; &amp; _\n                        Gac3.ToXml(currentLevel).ToString()))\n                    Gac4.FromXml(Gac3.ToXml(), currentLevel)\n                    Console.WriteLine((&quot;Result of FromXml(element, level) = &quot; _\n                        &amp; Gac4.ToString()))\n                End If\n            End While\n        Catch e As Exception\n            Console.WriteLine((&quot;ToFromXml failed. &quot; &amp; e.ToString()))\n            Return False\n        End Try\n\n        Return True\n    End Function &#39;ToFromXmlDemo\n\n    &#39; Invoke all demos.\n    Public Function RunDemo() As Boolean\n\n        Dim returnCode As Boolean = True\n        Dim tempReturnCode As Boolean\n\n        &#39; Call the Copy demo.\n        tempReturnCode = CopyDemo()\n        If tempReturnCode = True Then\n            Console.Out.WriteLine(&quot;Copy demo completed successfully.&quot;)\n        Else\n            Console.Out.WriteLine(&quot;Copy demo failed.&quot;)\n        End If\n\n        returnCode = tempReturnCode AndAlso returnCode\n\n        &#39; Call the Check demo.\n        tempReturnCode = CheckDemo()\n        If tempReturnCode = True Then\n            Console.Out.WriteLine(&quot;Check demo completed successfully.&quot;)\n        Else\n            Console.Out.WriteLine(&quot;Check demo failed.&quot;)\n        End If\n\n        returnCode = tempReturnCode AndAlso returnCode\n\n        &#39; Call the GetHashCode demo.\n        tempReturnCode = GetHashCodeDemo()\n        If tempReturnCode = True Then\n            Console.Out.WriteLine(&quot;GetHashCode demo completed successfully.&quot;)\n        Else\n            Console.Out.WriteLine(&quot;GetHashCode demo failed.&quot;)\n        End If\n\n        returnCode = tempReturnCode AndAlso returnCode\n\n        &#39; Call the ToFromXml demo.\n        tempReturnCode = ToFromXmlDemo()\n        If tempReturnCode = True Then\n            Console.Out.WriteLine(&quot;ToFromXml demo completed successfully.&quot;)\n        Else\n            Console.Out.WriteLine(&quot;ToFromXml demo failed.&quot;)\n        End If\n\n        returnCode = tempReturnCode AndAlso returnCode\n        Return returnCode\n    End Function &#39;RunDemo\n\n    &#39; Test harness.\n    Public Overloads Shared Sub Main(ByVal args() As [String])\n        Try\n            Dim testcase As New GacMembershipConditionDemo\n            Dim returnCode As Boolean = testcase.RunDemo()\n            If returnCode Then\n                Console.Out.WriteLine( _\n                    &quot;The GacMembershipCondition demo completed successfully.&quot;)\n                Console.Out.WriteLine(&quot;Press the Enter key to exit.&quot;)\n                Dim consoleInput As String = Console.ReadLine()\n                System.Environment.ExitCode = 100\n            Else\n                Console.Out.WriteLine(&quot;The GacMembershipCondition demo failed.&quot;)\n                Console.Out.WriteLine(&quot;Press the ENTER key to exit.&quot;)\n                Dim consoleInput As String = Console.ReadLine()\n                System.Environment.ExitCode = 101\n            End If\n        Catch e As Exception\n            Console.Out.WriteLine(&quot;The GacIdentityPermission demo failed.&quot;)\n            Console.WriteLine(e.ToString())\n            Console.Out.WriteLine(&quot;Press the Enter key to exit.&quot;)\n            Dim consoleInput As String = Console.ReadLine()\n            System.Environment.ExitCode = 101\n        End Try\n    End Sub &#39;Main\nEnd Class &#39;GacMembershipConditionDemo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.GacMembershipCondition#1\">using System;\nusing System.Security; \nusing System.Security.Policy; \nusing System.Collections;\n\npublic class GacMembershipConditionDemo\n{\n    // Demonstrate the Copy method, which creates an identical\n    // copy of the current permission.\n    private bool CopyDemo()\n    {\n        Console.WriteLine(\n            &quot;************************************************************&quot;);\n        GacMembershipCondition Gac1 = new GacMembershipCondition();\n        Console.WriteLine(&quot;Original membership condition = &quot;);\n        Console.WriteLine(Gac1.ToXml().ToString());\n        try\n        {\n            IMembershipCondition membershipCondition = Gac1.Copy();\n            Console.WriteLine(&quot;Result of Copy = &quot;);\n            Console.WriteLine(\n                ((GacMembershipCondition)membershipCondition).ToXml().ToString()\n                );\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;Copy failed : &quot; + Gac1.ToString() + e);\n            return false;\n        }\n\n        return true;\n\n    }\n    // Demonstrate the Check method, which determines whether the specified \n    // evidence satisfies the membership condition.\n    private bool CheckDemo()\n    {\n        Console.WriteLine(\n            &quot;************************************************************&quot;);\n        GacMembershipCondition Gac1 = new GacMembershipCondition();\n        GacInstalled myGac = new GacInstalled();\n        try\n        {\n            Object [] hostEvidence = {myGac};\n            Object [] assemblyEvidence = {};\n\n            Evidence myEvidence = new Evidence(hostEvidence,assemblyEvidence);\n            bool retCode = Gac1.Check(myEvidence);\n            Console.WriteLine(&quot;Result of Check = &quot; + retCode.ToString() + &quot;\\n&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;Check failed : &quot; + Gac1.ToString() + e);\n            return false;\n        }\n\n        return true;\n    }\n\n    // Demonstrate the GetHashCode method, which returns a hash code\n    // for the specified membership condition.\n    private bool GetHashCodeDemo()\n    {\n        Console.WriteLine(\n            &quot;************************************************************&quot;);\n        GacMembershipCondition Gac1 = new GacMembershipCondition();\n        try\n        {\n            Console.WriteLine(\n                &quot;Result of GetHashCode for a GacMembershipCondition = &quot; + \n                Gac1.GetHashCode().ToString() + &quot;\\n&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;GetHashCode failed : &quot; + Gac1.ToString() + e);\n            return false;\n        }\n\n        return true;\n    }\n\n    // Demonstrate the ToXml and FromXml methods, including the overloads.\n    // ToXml creates an XML encoding of the membership condition and its \n    // current state; FromXml reconstructs a membership condition with the \n    // specified state from the XML encoding.\n    private bool ToFromXmlDemo()\n    {\n        Console.WriteLine(\n            &quot;************************************************************&quot;);\n        try\n        {\n            GacMembershipCondition Gac1 = new GacMembershipCondition();\n            GacMembershipCondition Gac2 = new GacMembershipCondition();\n\n            // Roundtrip a GacMembershipCondition to and from an XML encoding.\n            Gac2.FromXml(Gac1.ToXml());\n            bool result = Gac2.Equals(Gac1);\n            if (result)\n            {\n                Console.WriteLine(\n                    &quot;Result of ToXml() = &quot; + Gac2.ToXml().ToString());\n                Console.WriteLine(\n                    &quot;Result of ToFromXml roundtrip = &quot; + Gac2.ToString());\n            }\n            else\n            {\n                Console.WriteLine(Gac2.ToString());\n                Console.WriteLine(Gac1.ToString());\n                return false;\n            }\n\n            GacMembershipCondition Gac3 = new GacMembershipCondition();\n            GacMembershipCondition Gac4 = new GacMembershipCondition();\n            IEnumerator policyEnumerator = SecurityManager.PolicyHierarchy();\n            while (policyEnumerator.MoveNext())\n            {\n                PolicyLevel currentLevel = \n                    (PolicyLevel)policyEnumerator.Current;\n                if (currentLevel.Label == &quot;Machine&quot;)\n                {\n                    Console.WriteLine(&quot;Result of ToXml(level) = &quot; + \n                        Gac3.ToXml(currentLevel));\n                    Gac4.FromXml(Gac3.ToXml(), currentLevel);\n                    Console.WriteLine(&quot;Result of FromXml(element, level) = &quot; + \n                        Gac4.ToString());\n                }\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;ToFromXml failed. &quot; + e);\n            return false;\n        }\n\n        return true;\n\n    }\n\n    // Invoke all demos.\n    public bool RunDemo()\n    {\n\n        bool returnCode =true;\n        bool tempReturnCode;\n\n        // Call the Copy demo.\n        if (tempReturnCode = CopyDemo())\n            Console.Out.WriteLine(&quot;Copy demo completed successfully.&quot;);\n        else \n            Console.Out.WriteLine(&quot;Copy demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n\n        // Call the Check demo.\n        if (tempReturnCode = CheckDemo())\n            Console.Out.WriteLine(&quot;Check demo completed successfully.&quot;);\n        else \n            Console.Out.WriteLine(&quot;Check demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n\n        // Call the GetHashCode demo.\n        if (tempReturnCode = GetHashCodeDemo())\n            Console.Out.WriteLine(&quot;GetHashCode demo completed successfully.&quot;);\n        else \n            Console.Out.WriteLine(&quot;GetHashCode demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n\n        // Call the ToFromXml demo.\t\n        if (tempReturnCode = ToFromXmlDemo())\n            Console.Out.WriteLine(&quot;ToFromXml demo completed successfully.&quot;);\n        else \n            Console.Out.WriteLine(&quot;ToFromXml demo failed.&quot;);\n\n        returnCode = tempReturnCode &amp;&amp; returnCode;\n        return (returnCode);\t\n    }\n\n    // Test harness.\n    public static void Main(String[] args)\n    {\n        try\n        {\n            GacMembershipConditionDemo testcase = \n                new GacMembershipConditionDemo();\n            bool returnCode = testcase.RunDemo();\n            if (returnCode)\n            {\n                Console.Out.WriteLine(\n                    &quot;The GacMembershipCondition demo completed successfully.&quot;);\n                Console.Out.WriteLine(&quot;Press the Enter key to exit.&quot;);\n                string consoleInput = Console.ReadLine();\n                System.Environment.ExitCode = 100;\n            }\n            else\n            {\n                Console.Out.WriteLine(&quot;The GacMembershipCondition demo failed.&quot;);\n                Console.Out.WriteLine(&quot;Press the ENTER key to exit.&quot;);\n                string consoleInput = Console.ReadLine();\n                System.Environment.ExitCode = 101;\n            }\n        }\n        catch (Exception e)\n        {\n            Console.Out.WriteLine(&quot;The GacIdentityPermission demo failed.&quot;);\n            Console.WriteLine(e.ToString());\n            Console.Out.WriteLine(&quot;Press the Enter key to exit.&quot;);\n            string consoleInput = Console.ReadLine();\n            System.Environment.ExitCode = 101;\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>All assemblies installed in the global assembly cache are granted the <code>FullTrust</code> permission set.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GacMembershipCondition()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public GacMembershipCondition ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Code satisfies this membership condition if it is installed in the global assembly cache.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_Check_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_Check_System_Security_Policy_Evidence_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Check(Evidence)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether the specified evidence satisfies the membership condition.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Check (System.Security.Policy.Evidence evidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> against which to make the test.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified evidence satisfies the membership condition; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This membership condition tests <a class=\"xref\" href=\"system.security.policy.gacinstalled\" data-linktype=\"relative-path\">GacInstalled</a> evidence.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_Copy_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_Copy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Copy()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an equivalent copy of the membership condition.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Policy.IMembershipCondition Copy ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.imembershipcondition\" data-linktype=\"relative-path\">IMembershipCondition</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A copy of a membership condition is identical to the original membership condition.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether the current object is equivalent to the specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object o);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>o</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare with the current object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>o</code> is a <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>There are no degrees of global assembly cache membership. An assembly is either in the cache or it is not. If the object identified by <code>o</code> is a <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a>, then the objects being compared are equal. This method returns <code>false</code> only if <code>o</code> is <code>null</code> or if <code>o</code> is not a <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_FromXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_FromXml_System_Security_SecurityElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromXml(SecurityElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uses the specified XML encoding to reconstruct a security object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void FromXml (System.Security.SecurityElement e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> that contains the XML encoding to use to reconstruct the security object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>e</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>e</code> is not a valid membership condition element.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The FromXml method reconstructs a <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a> from an XML encoding defined by the <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> class. Use the <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition#System_Security_Policy_GacMembershipCondition_ToXml_\" data-linktype=\"relative-path\">ToXml</a> method to XML-encode the <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a> including state information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_FromXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_FromXml_System_Security_SecurityElement_System_Security_Policy_PolicyLevel_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromXml(SecurityElement, PolicyLevel)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uses the specified XML encoding to reconstruct a security object, using the specified policy level context.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void FromXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> that contains the XML encoding to use to reconstruct the security object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>level</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policylevel\" data-linktype=\"relative-path\">PolicyLevel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.policy.policylevel\" data-linktype=\"relative-path\">PolicyLevel</a> context for resolving <a class=\"xref\" href=\"system.security.namedpermissionset\" data-linktype=\"relative-path\">NamedPermissionSet</a> references.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>e</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>e</code> is not a valid membership condition element.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The policy level context is provided for resolution of named permission set references. For example, code groups use policy level to find named permission sets.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_GetHashCode_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a hash code for the current membership condition.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>0 (zero).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetHashCode method returns 0 (zero) because <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a> objects have no properties to distinguish one from another.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_ToString_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a string representation of the membership condition.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A string representation of the membership condition.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string representation for <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition\" data-linktype=\"relative-path\">GacMembershipCondition</a> is &quot;GAC&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_ToXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_ToXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an XML encoding of the security object and its current state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.SecurityElement ToXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> that contains the XML encoding of the security object, including any state information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.security.policy.gacmembershipcondition#System_Security_Policy_GacMembershipCondition_FromXml_\" data-linktype=\"relative-path\">FromXml</a> method to restore the state information from a <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_GacMembershipCondition_ToXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_GacMembershipCondition_ToXml_System_Security_Policy_PolicyLevel_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToXml(PolicyLevel)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an XML encoding of the security object and its current state, using the specified policy level context.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>level</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policylevel\" data-linktype=\"relative-path\">PolicyLevel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.policy.policylevel\" data-linktype=\"relative-path\">PolicyLevel</a> context for resolving <a class=\"xref\" href=\"system.security.namedpermissionset\" data-linktype=\"relative-path\">NamedPermissionSet</a> references.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> that contains the XML encoding of the security object, including any state information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The policy level context is provided for resolution of named permission set references. For example, code groups use policy level to find named permission sets.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Policy.GacMembershipCondition.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition.Check\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition.Copy\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition.Equals\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition.FromXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition.ToString\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.GacMembershipCondition.ToXml\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"fe72869a-162d-6009-af3c-ca41152a8c48\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Determines whether an assembly belongs to a code group by testing its global assembly cache membership. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.policy/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Policy.GacMembershipCondition\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Policy.GacMembershipCondition.yml","open_to_public_contributors":false,"api_name":["System.Security.Policy.GacMembershipCondition","System.Security.Policy.GacMembershipCondition..ctor","System.Security.Policy.GacMembershipCondition.Check","System.Security.Policy.GacMembershipCondition.Copy","System.Security.Policy.GacMembershipCondition.Equals","System.Security.Policy.GacMembershipCondition.FromXml","System.Security.Policy.GacMembershipCondition.GetHashCode","System.Security.Policy.GacMembershipCondition.ToString","System.Security.Policy.GacMembershipCondition.ToXml"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Policy.GacMembershipCondition","System::Security::Policy::GacMembershipCondition","System.Security.Policy.GacMembershipCondition.#ctor","System::Security::Policy::GacMembershipCondition::#ctor","System.Security.Policy.GacMembershipCondition.Check","System::Security::Policy::GacMembershipCondition::Check","System.Security.Policy.GacMembershipCondition.Copy","System::Security::Policy::GacMembershipCondition::Copy","System.Security.Policy.GacMembershipCondition.Equals","System::Security::Policy::GacMembershipCondition::Equals","System.Security.Policy.GacMembershipCondition.FromXml","System::Security::Policy::GacMembershipCondition::FromXml","System.Security.Policy.GacMembershipCondition.GetHashCode","System::Security::Policy::GacMembershipCondition::GetHashCode","System.Security.Policy.GacMembershipCondition.ToString","System::Security::Policy::GacMembershipCondition::ToString","System.Security.Policy.GacMembershipCondition.ToXml","System::Security::Policy::GacMembershipCondition::ToXml"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"fe72869a-162d-6009-af3c-ca41152a8c48","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Policy/GacMembershipCondition.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GacMembershipCondition class | Microsoft Docs","_op_ogTitle":"GacMembershipCondition class","description":"Determines whether an assembly belongs to a code group by testing its global assembly cache membership. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security.Policy/toc.json","toc_rel":"_splitted/System.Security.Policy/toc.json","source_url":"","ms.assetid":"System.Security.Policy.GacMembershipCondition","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.policy.gacmembershipcondition","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.policy.gacmembershipcondition","fileRelativePath":"api/System.Security.Policy.GacMembershipCondition.html"},"themesRelativePathToOutputRoot":"_themes/"}