{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">RunWorkerCompletedEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event of a <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> class.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void RunWorkerCompletedEventHandler(object sender, RunWorkerCompletedEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">RunWorkerCompletedEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows a method that can be used as a handler for RunWorkerCompletedEventHandler. This example is part of a larger sample for the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.ComponentModel.BackgroundWorker#6\">&#39; This event handler deals with the results of the\n&#39; background operation.\nPrivate Sub backgroundWorker1_RunWorkerCompleted( _\nByVal sender As Object, ByVal e As RunWorkerCompletedEventArgs) _\nHandles backgroundWorker1.RunWorkerCompleted\n\n    &#39; First, handle the case where an exception was thrown.\n    If (e.Error IsNot Nothing) Then\n        MessageBox.Show(e.Error.Message)\n    ElseIf e.Cancelled Then\n        &#39; Next, handle the case where the user canceled the \n        &#39; operation.\n        &#39; Note that due to a race condition in \n        &#39; the DoWork event handler, the Cancelled\n        &#39; flag may not have been set, even though\n        &#39; CancelAsync was called.\n        resultLabel.Text = &quot;Canceled&quot;\n    Else\n        &#39; Finally, handle the case where the operation succeeded.\n        resultLabel.Text = e.Result.ToString()\n    End If\n\n    &#39; Enable the UpDown control.\n    Me.numericUpDown1.Enabled = True\n\n    &#39; Enable the Start button.\n    startAsyncButton.Enabled = True\n\n    &#39; Disable the Cancel button.\n    cancelAsyncButton.Enabled = False\nEnd Sub &#39;backgroundWorker1_RunWorkerCompleted\n</code></pre><pre><code class=\"lang-cs\" name=\"System.ComponentModel.BackgroundWorker#6\">// This event handler deals with the results of the\n// background operation.\nprivate void backgroundWorker1_RunWorkerCompleted(\n    object sender, RunWorkerCompletedEventArgs e)\n{\n    // First, handle the case where an exception was thrown.\n    if (e.Error != null)\n    {\n        MessageBox.Show(e.Error.Message);\n    }\n    else if (e.Cancelled)\n    {\n        // Next, handle the case where the user canceled \n        // the operation.\n        // Note that due to a race condition in \n        // the DoWork event handler, the Cancelled\n        // flag may not have been set, even though\n        // CancelAsync was called.\n        resultLabel.Text = &quot;Canceled&quot;;\n    }\n    else\n    {\n        // Finally, handle the case where the operation \n        // succeeded.\n        resultLabel.Text = e.Result.ToString();\n    }\n\n    // Enable the UpDown control.\n    this.numericUpDown1.Enabled = true;\n\n    // Enable the Start button.\n    startAsyncButton.Enabled = true;\n\n    // Disable the Cancel button.\n    cancelAsyncButton.Enabled = false;\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.ComponentModel.BackgroundWorker#6\">// This event handler deals with the results of the\n// background operation.\nvoid backgroundWorker1_RunWorkerCompleted( Object^ /*sender*/, RunWorkerCompletedEventArgs^ e )\n{\n   // First, handle the case where an exception was thrown.\n   if ( e-&gt;Error != nullptr )\n   {\n      MessageBox::Show( e-&gt;Error-&gt;Message );\n   }\n   else\n   if ( e-&gt;Cancelled )\n   {\n      // Next, handle the case where the user cancelled \n      // the operation.\n      // Note that due to a race condition in \n      // the DoWork event handler, the Cancelled\n      // flag may not have been set, even though\n      // CancelAsync was called.\n      resultLabel-&gt;Text = &quot;Cancelled&quot;;\n   }\n   else\n   {\n      // Finally, handle the case where the operation \n      // succeeded.\n      resultLabel-&gt;Text = e-&gt;Result-&gt;ToString();\n   }\n\n   // Enable the UpDown control.\n   this-&gt;numericUpDown1-&gt;Enabled = true;\n\n   // Enable the Start button.\n   startAsyncButton-&gt;Enabled = true;\n\n   // Disable the Cancel button.\n   cancelAsyncButton-&gt;Enabled = false;\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a RunWorkerCompletedEventHandler delegate, you identify a method to handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.RunWorkerCompletedEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.RunWorkerCompletedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.RunWorkerCompletedEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.RunWorkerCompletedEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.RunWorkerCompletedEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.RunWorkerCompletedEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"d3520b74-dc5a-9730-9865-b9d6f6122b27\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  event of a  class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.RunWorkerCompletedEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.RunWorkerCompletedEventHandler.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.RunWorkerCompletedEventHandler","System.ComponentModel.RunWorkerCompletedEventHandler..ctor","System.ComponentModel.RunWorkerCompletedEventHandler.Invoke","System.ComponentModel.RunWorkerCompletedEventHandler.BeginInvoke","System.ComponentModel.RunWorkerCompletedEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.RunWorkerCompletedEventHandler","System::ComponentModel::RunWorkerCompletedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"d3520b74-dc5a-9730-9865-b9d6f6122b27","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel/RunWorkerCompletedEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RunWorkerCompletedEventHandler delegate | Microsoft Docs","_op_ogTitle":"RunWorkerCompletedEventHandler delegate","description":"Represents the method that will handle the  event of a  class.\n","toc_asset_id":"api/_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.RunWorkerCompletedEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.runworkercompletedeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.runworkercompletedeventhandler","fileRelativePath":"api/System.ComponentModel.RunWorkerCompletedEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}