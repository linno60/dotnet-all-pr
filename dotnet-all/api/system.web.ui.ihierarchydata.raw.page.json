{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IHierarchyData</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node. Objects that implement the IHierarchyData interface can be contained in <a class=\"xref\" href=\"system.web.ui.ihierarchicalenumerable\" data-linktype=\"relative-path\">IHierarchicalEnumerable</a> collections, and are used by ASP.NET site navigation and data source controls.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IHierarchyData</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to implement the IHierarchyData interface with a class that wraps a <a class=\"xref\" href=\"system.io.filesysteminfo\" data-linktype=\"relative-path\">FileSystemInfo</a> object. The <a class=\"xref\" href=\"system.io.filesysteminfo\" data-linktype=\"relative-path\">FileSystemInfo</a> class is a good example of a hierarchical data node, which the IHierarchyData interface represents for ASP.NET hierarchical data source controls. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.ui.hierarchicaldatasourcecontrol\" data-linktype=\"relative-path\">HierarchicalDataSourceControl</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"Urtue.Samples.Alexkr.FileSystemDataSource_1#5\">public class FileSystemHierarchyData : IHierarchyData\n{\n    private FileSystemInfo fileSystemObject = null;\n\n    public FileSystemHierarchyData(FileSystemInfo obj)\n    {\n        fileSystemObject = obj;\n    }\n\n    public override string ToString()\n    {\n        return fileSystemObject.Name;\n    }\n    // IHierarchyData implementation.\n    public bool HasChildren\n    {\n        get\n        {\n            if (typeof(DirectoryInfo) == fileSystemObject.GetType())\n            {\n                DirectoryInfo temp = (DirectoryInfo)fileSystemObject;\n                return (temp.GetFileSystemInfos().Length &gt; 0);\n            }\n            else return false;\n        }\n    }\n    // DirectoryInfo returns the OriginalPath, while FileInfo returns\n    // a fully qualified path.\n    public string Path\n    {\n        get\n        {\n            return fileSystemObject.ToString();\n        }\n    }\n    public object Item\n    {\n        get\n        {\n            return fileSystemObject;\n        }\n    }\n    public string Type\n    {\n        get\n        {\n            return &quot;FileSystemData&quot;;\n        }\n    }\n    public IHierarchicalEnumerable GetChildren()\n    {\n        FileSystemHierarchicalEnumerable children =\n            new FileSystemHierarchicalEnumerable();\n\n        if (typeof(DirectoryInfo) == fileSystemObject.GetType())\n        {\n            DirectoryInfo temp = (DirectoryInfo)fileSystemObject;\n            foreach (FileSystemInfo fsi in temp.GetFileSystemInfos())\n            {\n                children.Add(new FileSystemHierarchyData(fsi));\n            }\n        }\n        return children;\n    }\n\n    public IHierarchyData GetParent()\n    {\n        FileSystemHierarchicalEnumerable parentContainer =\n            new FileSystemHierarchicalEnumerable();\n\n        if (typeof(DirectoryInfo) == fileSystemObject.GetType())\n        {\n            DirectoryInfo temp = (DirectoryInfo)fileSystemObject;\n            return new FileSystemHierarchyData(temp.Parent);\n        }\n        else if (typeof(FileInfo) == fileSystemObject.GetType())\n        {\n            FileInfo temp = (FileInfo)fileSystemObject;\n            return new FileSystemHierarchyData(temp.Directory);\n        }\n        // If FileSystemObj is any other kind of FileSystemInfo, ignore it.\n        return null;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Urtue.Samples.Alexkr.FileSystemDataSource_1#5\">\nPublic Class FileSystemHierarchyData\n    Implements IHierarchyData\n\n    Public Sub New(ByVal obj As FileSystemInfo)\n        fileSystemObject = obj\n    End Sub\n\n    Private fileSystemObject As FileSystemInfo = Nothing\n\n    Public Overrides Function ToString() As String\n        Return fileSystemObject.Name\n    End Function\n\n    &#39; IHierarchyData implementation.\n    Public Overridable ReadOnly Property HasChildren() As Boolean _\n     Implements IHierarchyData.HasChildren\n        Get\n            If GetType(DirectoryInfo) Is fileSystemObject.GetType() Then\n                Dim temp As DirectoryInfo = _\n                    CType(fileSystemObject, DirectoryInfo)\n                Return temp.GetFileSystemInfos().Length &gt; 0\n            Else\n                Return False\n            End If\n        End Get\n    End Property\n    &#39; DirectoryInfo returns the OriginalPath, while FileInfo returns\n    &#39; a fully qualified path.\n\n    Public Overridable ReadOnly Property Path() As String _\n     Implements IHierarchyData.Path\n        Get\n            Return fileSystemObject.ToString()\n        End Get\n    End Property\n\n    Public Overridable ReadOnly Property Item() As Object _\n     Implements IHierarchyData.Item\n        Get\n            Return fileSystemObject\n        End Get\n    End Property\n\n    Public Overridable ReadOnly Property Type() As String _\n     Implements IHierarchyData.Type\n        Get\n            Return &quot;FileSystemData&quot;\n        End Get\n    End Property\n\n    Public Overridable Function GetChildren() _\n        As IHierarchicalEnumerable _\n        Implements IHierarchyData.GetChildren\n\n        Dim children As New FileSystemHierarchicalEnumerable()\n\n        If GetType(DirectoryInfo) Is fileSystemObject.GetType() Then\n            Dim temp As DirectoryInfo = _\n                CType(fileSystemObject, DirectoryInfo)\n            Dim fsi As FileSystemInfo\n            For Each fsi In temp.GetFileSystemInfos()\n                children.Add(New FileSystemHierarchyData(fsi))\n            Next fsi\n        End If\n        Return children\n    End Function &#39;GetChildren\n\n\n    Public Overridable Function GetParent() As IHierarchyData _\n     Implements IHierarchyData.GetParent\n        Dim parentContainer As New FileSystemHierarchicalEnumerable()\n\n        If GetType(DirectoryInfo) Is fileSystemObject.GetType() Then\n            Dim temp As DirectoryInfo = _\n                CType(fileSystemObject, DirectoryInfo)\n            Return New FileSystemHierarchyData(temp.Parent)\n        ElseIf GetType(FileInfo) Is fileSystemObject.GetType() Then\n            Dim temp As FileInfo = CType(fileSystemObject, FileInfo)\n            Return New FileSystemHierarchyData(temp.Directory)\n        End If\n        &#39; If FileSystemObj is any other kind of FileSystemInfo, ignore it.\n        Return Nothing\n    End Function &#39;GetParent\nEnd Class &#39;FileSystemHierarchyData\n</code></pre><p> The following code example demonstrates how to recursively iterate through an <a class=\"xref\" href=\"system.web.ui.ihierarchicalenumerable\" data-linktype=\"relative-path\">IHierarchicalEnumerable</a> collection, extract the IHierarchyData item from the enumerator using the <a class=\"xref\" href=\"system.web.ui.ihierarchicalenumerable#System_Web_UI_IHierarchicalEnumerable_GetHierarchyData_\" data-linktype=\"relative-path\">GetHierarchyData</a> method, and perform basic work with the data item.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.IHierarchyData_1#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeFile=&quot;ihd_1.aspx.cs&quot; Inherits=&quot;ihd_1_aspx&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.IHierarchyData_1#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;true&quot; CodeFile=&quot;ihd_1.aspx.vb&quot; Inherits=&quot;ihd_1_aspx&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The IHierarchyData interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes. Classes that implement the IHierarchyData interface can be contained in collections that implement the <a class=\"xref\" href=\"system.web.ui.ihierarchicalenumerable\" data-linktype=\"relative-path\">IHierarchicalEnumerable</a> interface.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IHierarchyData_HasChildren\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasChildren</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether the hierarchical data node that the <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> object represents has any child nodes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasChildren { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the current node has child nodes; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The HasChildren property is a convenience property that enables callers to avoid checking the return value of the <a class=\"xref\" href=\"system.web.ui.ihierarchydata#System_Web_UI_IHierarchyData_GetChildren_\" data-linktype=\"relative-path\">GetChildren</a> method for <code>null</code>. If the HasChildren property returns <code>true</code>, call the <a class=\"xref\" href=\"system.web.ui.ihierarchydata#System_Web_UI_IHierarchyData_GetChildren_\" data-linktype=\"relative-path\">GetChildren</a> method to retrieve an <a class=\"xref\" href=\"system.web.ui.ihierarchicalenumerable\" data-linktype=\"relative-path\">IHierarchicalEnumerable</a> collection of child nodes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IHierarchyData_Item\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the hierarchical data node that the <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> object represents.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Item { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> hierarchical data node object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>While many classes that represent hierarchical data nodes, such as the <a class=\"xref\" href=\"system.web.sitemapnode\" data-linktype=\"relative-path\">SiteMapNode</a> class, implement the <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> interface directly, other classes only act as a wrapper for a class that does not implement the interface. The Item property is provided for these design situations, when business objects are functionally equivalent to an <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> object but cannot be redesigned easily.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IHierarchyData_Path\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Path</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the hierarchical path of the node.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Path { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the hierarchical path relative to the current node.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Path property can be passed to the <a class=\"xref\" href=\"system.web.ui.hierarchicaldatasourcecontrol#System_Web_UI_HierarchicalDataSourceControl_GetHierarchicalView_\" data-linktype=\"relative-path\">GetHierarchicalView</a> method to retrieve the <a class=\"xref\" href=\"system.web.ui.hierarchicaldatasourceview\" data-linktype=\"relative-path\">HierarchicalDataSourceView</a> object that corresponds to the node identified by Path.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The Path property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IHierarchyData_Type\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Type</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the name of the type of <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> contained in the <span class=\"xref\">stem.Web.UI.IHierarchyData.Item*</span> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Type { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the type of object that the <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> object represents.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Type property does not return the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">System.Type</a> of the object represented in an <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> object. It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IHierarchyData_GetChildren\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChildren()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an enumeration object that represents all the child nodes of the current hierarchical node.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Web.UI.IHierarchicalEnumerable GetChildren ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.ihierarchicalenumerable\" data-linktype=\"relative-path\">IHierarchicalEnumerable</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.web.ui.ihierarchicalenumerable\" data-linktype=\"relative-path\">IHierarchicalEnumerable</a> collection of child nodes of the current hierarchical node.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use the <a class=\"xref\" href=\"system.web.ui.ihierarchydata#System_Web_UI_IHierarchyData_HasChildren_\" data-linktype=\"relative-path\">HasChildren</a> property to determine whether the <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> node has child nodes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_IHierarchyData_GetParent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetParent()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> object that represents the parent node of the current hierarchical node.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Web.UI.IHierarchyData GetParent ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> object that represents the parent node of the current hierarchical node.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> interface does not define a HasParent convenience property, so callers must check the return value of the GetParent method for <code>null</code> to determine whether the current <a class=\"xref\" href=\"system.web.ui.ihierarchydata\" data-linktype=\"relative-path\">IHierarchyData</a> node is the root node of the hierarchical data structure to which the node belongs.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.IHierarchyData.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IHierarchyData\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IHierarchyData.GetChildren\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IHierarchyData.GetParent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IHierarchyData.HasChildren\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IHierarchyData.Item\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IHierarchyData.Path\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.IHierarchyData.Type\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"fe4b4558-e707-c4f8-c26c-3a47370dc854\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node. Objects that implement the IHierarchyData interface can be co…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.IHierarchyData\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.IHierarchyData.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.IHierarchyData","System.Web.UI.IHierarchyData.GetChildren","System.Web.UI.IHierarchyData.GetParent","System.Web.UI.IHierarchyData.HasChildren","System.Web.UI.IHierarchyData.Item","System.Web.UI.IHierarchyData.Path","System.Web.UI.IHierarchyData.Type"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.IHierarchyData","System::Web::UI::IHierarchyData","System.Web.UI.IHierarchyData.GetChildren","System::Web::UI::IHierarchyData::GetChildren","System.Web.UI.IHierarchyData.GetParent","System::Web::UI::IHierarchyData::GetParent","System.Web.UI.IHierarchyData.HasChildren","System::Web::UI::IHierarchyData::HasChildren","System.Web.UI.IHierarchyData.Item","System::Web::UI::IHierarchyData::Item","System.Web.UI.IHierarchyData.Path","System::Web::UI::IHierarchyData::Path","System.Web.UI.IHierarchyData.Type","System::Web::UI::IHierarchyData::Type"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"fe4b4558-e707-c4f8-c26c-3a47370dc854","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/IHierarchyData.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IHierarchyData interface | Microsoft Docs","_op_ogTitle":"IHierarchyData interface","description":"Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node. Objects that implement the IHierarchyData interface can be co…","toc_asset_id":"api/_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.IHierarchyData","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.ihierarchydata","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.ihierarchydata","fileRelativePath":"api/System.Web.UI.IHierarchyData.html"},"themesRelativePathToOutputRoot":"_themes/"}