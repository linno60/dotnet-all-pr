{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">FieldDirection</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines identifiers used to indicate the direction of parameter and argument declarations.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic enum FieldDirection</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">FieldDirection</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates use of FieldDirection to indicate the field direction types of the parameters of a method in a method declaration.  </p>\n<pre><code class=\"lang-cs\" name=\"CodeParameterDeclarationExample#3\">// Declares a method.\nCodeMemberMethod method1 = new CodeMemberMethod();\nmethod1.Name = &quot;TestMethod&quot;;\n\n// Declares a string parameter passed by reference.\nCodeParameterDeclarationExpression param1 = new CodeParameterDeclarationExpression(&quot;System.String&quot;, &quot;stringParam&quot;);\nparam1.Direction = FieldDirection.Ref;\nmethod1.Parameters.Add(param1);\n\n// Declares a Int32 parameter passed by incoming field.\nCodeParameterDeclarationExpression param2 = new CodeParameterDeclarationExpression(&quot;System.Int32&quot;, &quot;intParam&quot;);\nparam2.Direction = FieldDirection.Out;\nmethod1.Parameters.Add(param2);\n\n// A C# code generator produces the following source code for the preceeding example code:\n\n//        private void TestMethod(ref string stringParam, out int intParam) {\n//        }\n</code></pre><pre><code class=\"lang-vb\" name=\"CodeParameterDeclarationExample#3\">&#39; Declares a method.\nDim method1 As New CodeMemberMethod()\nmethod1.Name = &quot;TestMethod&quot;\n\n&#39; Declares a string parameter passed by reference.\nDim param1 As New CodeParameterDeclarationExpression(&quot;System.String&quot;, &quot;stringParam&quot;)\nparam1.Direction = FieldDirection.Ref\nmethod1.Parameters.Add(param1)\n\n&#39; Declares a Int32 parameter passed by incoming field.\nDim param2 As New CodeParameterDeclarationExpression(&quot;System.Int32&quot;, &quot;intParam&quot;)\nparam2.Direction = FieldDirection.Out\nmethod1.Parameters.Add(param2)\n\n&#39; A Visual Basic code generator produces the following source code for the preceeding example code:\n\n&#39;\t Private Sub TestMethod(ByRef stringParam As String, ByRef intParam As Integer)\n&#39;    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"CodeParameterDeclarationExample#3\">// Declares a method.\nCodeMemberMethod^ method1 = gcnew CodeMemberMethod;\nmethod1-&gt;Name = &quot;TestMethod&quot;;\n\n// Declares a string parameter passed by reference.\nCodeParameterDeclarationExpression^ param1 = gcnew CodeParameterDeclarationExpression( &quot;System.String&quot;,&quot;stringParam&quot; );\nparam1-&gt;Direction = FieldDirection::Ref;\nmethod1-&gt;Parameters-&gt;Add( param1 );\n\n// Declares a Int32 parameter passed by incoming field.\nCodeParameterDeclarationExpression^ param2 = gcnew CodeParameterDeclarationExpression( &quot;System.Int32&quot;,&quot;intParam&quot; );\nparam2-&gt;Direction = FieldDirection::Out;\nmethod1-&gt;Parameters-&gt;Add( param2 );\n\n// A C# code generator produces the following source code for the preceeding example code:\n//        private void TestMethod(ref string stringParam, out int intParam) {\n//        }\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>FieldDirection allows for passing arguments to functions by reference, or using incoming or outgoing parameters.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_CodeDom_FieldDirection_In\">\r\n      \t\t\t<span class=\"lang-csharp\">In</span>\r\n      \t</td>\r\n      \t<td><p>An incoming field.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_FieldDirection_Out\">\r\n      \t\t\t<span class=\"lang-csharp\">Out</span>\r\n      \t</td>\r\n      \t<td><p>An outgoing field.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_CodeDom_FieldDirection_Ref\">\r\n      \t\t\t<span class=\"lang-csharp\">Ref</span>\r\n      \t</td>\r\n      \t<td><p>A field by reference.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.FieldDirection.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.FieldDirection\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.FieldDirection.In\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.FieldDirection.Out\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.FieldDirection.Ref\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"8a5c0981-9ac3-4c62-7600-2e4419f9f2df\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines identifiers used to indicate the direction of parameter and argument declarations.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.codedom/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.FieldDirection\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.FieldDirection.yml","open_to_public_contributors":false,"api_name":["System.CodeDom.FieldDirection","System.CodeDom.FieldDirection.In","System.CodeDom.FieldDirection.Out","System.CodeDom.FieldDirection.Ref"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.FieldDirection","System::CodeDom::FieldDirection","System.CodeDom.FieldDirection.In","System::CodeDom::FieldDirection::In","System.CodeDom.FieldDirection.Out","System::CodeDom::FieldDirection::Out","System.CodeDom.FieldDirection.Ref","System::CodeDom::FieldDirection::Ref"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"8a5c0981-9ac3-4c62-7600-2e4419f9f2df","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.CodeDom/FieldDirection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FieldDirection enum | Microsoft Docs","_op_ogTitle":"FieldDirection enum","description":"Defines identifiers used to indicate the direction of parameter and argument declarations.\n","toc_asset_id":"api/_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.FieldDirection","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.fielddirection","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.fielddirection","fileRelativePath":"api/System.CodeDom.FieldDirection.html"},"themesRelativePathToOutputRoot":"_themes/"}