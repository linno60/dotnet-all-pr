{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">NormalizationForm</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the type of normalization to perform.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic enum NormalizationForm</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">NormalizationForm</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Some Unicode sequences are considered equivalent because they represent the same character. For example, the following are considered equivalent because any of these can be used to represent &quot;áº¯&quot;:  </p>\n<ul>\n<li><p>&quot;\\u1EAF&quot;  </p>\n</li>\n<li><p>&quot;\\u0103\\u0301&quot;  </p>\n</li>\n<li><p>&quot;\\u0061\\u0306\\u0301&quot;  </p>\n<p>However, ordinal, that is, binary, comparisons consider these sequences different because they contain different Unicode code values. Before performing ordinal comparisons, applications must normalize these strings to decompose them into their basic components.  </p>\n<p>Each composite Unicode character is mapped to a more basic sequence of one or more characters. The process of decomposition replaces composite characters in a string with their more basic mappings. A full decomposition recursively performs this replacement until none of the characters in the string can be decomposed further.  </p>\n<p>Unicode defines two types of decompositions: compatibility decomposition and canonical decomposition. In compatibility decomposition, formatting information might be lost. In canonical decomposition, which is a subset of compatibility decomposition, formatting information is preserved.  </p>\n<p>Two sets of characters are considered to have canonical equivalence if their full canonical decompositions are identical. Likewise, two sets of characters are considered to have compatibility equivalence if their full compatibility decompositions are identical.  </p>\n<p>For more information about normalization, decompositions and equivalence, see <a href=\"http://unicode.org/reports/tr15/\" data-linktype=\"external\">Unicode Standard Annex #15: Unicode Normalization Forms</a> at unicode.org.</p>\n</li>\n</ul>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Text_NormalizationForm_FormC\">\r\n      \t\t\t<span class=\"lang-csharp\">FormC</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that a Unicode string is normalized using full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Text_NormalizationForm_FormD\">\r\n      \t\t\t<span class=\"lang-csharp\">FormD</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that a Unicode string is normalized using full canonical decomposition.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Text_NormalizationForm_FormKC\">\r\n      \t\t\t<span class=\"lang-csharp\">FormKC</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that a Unicode string is normalized using full compatibility decomposition, followed by the replacement of sequences with their primary composites, if possible.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Text_NormalizationForm_FormKD\">\r\n      \t\t\t<span class=\"lang-csharp\">FormKD</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that a Unicode string is normalized using full compatibility decomposition.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Text.NormalizationForm.yml\">\r\n<meta name=\"APIName\" content=\"System.Text.NormalizationForm\">\r\n<meta name=\"APIName\" content=\"System.Text.NormalizationForm.FormC\">\r\n<meta name=\"APIName\" content=\"System.Text.NormalizationForm.FormD\">\r\n<meta name=\"APIName\" content=\"System.Text.NormalizationForm.FormKC\">\r\n<meta name=\"APIName\" content=\"System.Text.NormalizationForm.FormKD\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"4a5e87b4-8e1b-b086-583a-f184d311700a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the type of normalization to perform.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.text/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Text.NormalizationForm\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Text.NormalizationForm.yml","open_to_public_contributors":false,"api_name":["System.Text.NormalizationForm","System.Text.NormalizationForm.FormC","System.Text.NormalizationForm.FormD","System.Text.NormalizationForm.FormKC","System.Text.NormalizationForm.FormKD"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Text.NormalizationForm","System::Text::NormalizationForm","System.Text.NormalizationForm.FormC","System::Text::NormalizationForm::FormC","System.Text.NormalizationForm.FormD","System::Text::NormalizationForm::FormD","System.Text.NormalizationForm.FormKC","System::Text::NormalizationForm::FormKC","System.Text.NormalizationForm.FormKD","System::Text::NormalizationForm::FormKD"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"4a5e87b4-8e1b-b086-583a-f184d311700a","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Text/NormalizationForm.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"NormalizationForm enum | Microsoft Docs","_op_ogTitle":"NormalizationForm enum","description":"Defines the type of normalization to perform.\n","toc_asset_id":"api/_splitted/System.Text/toc.json","toc_rel":"_splitted/System.Text/toc.json","source_url":"","ms.assetid":"System.Text.NormalizationForm","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.text.normalizationform","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.text.normalizationform","fileRelativePath":"api/System.Text.NormalizationForm.html"},"themesRelativePathToOutputRoot":"_themes/"}