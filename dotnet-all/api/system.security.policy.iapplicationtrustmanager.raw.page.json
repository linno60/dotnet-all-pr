{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IApplicationTrustManager</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Determines whether an application should be executed and which set of permissions should be granted to it.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic interface IApplicationTrustManager : System.Security.ISecurityEncodable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows a simple implementation of IApplicationTrustManager.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Policy.IApplicationTrustManager#1\">// To use the custom trust manager MyTrustManager, compile it into CustomTrustManager.dll, \n// place that assembly in the GAC, and  put the following elements in\n// an ApplicationTrust.config file in the config folder in the Microsoft .NET framework\n// installation folder.\n\n//&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n//&lt;configuration&gt;\n//    &lt;mscorlib&gt;\n//        &lt;security&gt;\n//            &lt;policy&gt;\n//                &lt;ApplicationSecurityManager&gt;\n//                    &lt;ApplicationEntries /&gt;\n//                    &lt;IApplicationTrustManager class=&quot;MyNamespace.MyTrustManager, CustomTrustManager, Version=1.0.0.3, Culture=neutral, PublicKeyToken=5659fc598c2a503e&quot;/&gt;\n//                &lt;/ApplicationSecurityManager&gt;\n//            &lt;/policy&gt;\n//        &lt;/security&gt;\n//    &lt;/mscorlib&gt;\n//&lt;/configuration&gt;\n\nusing System;\nusing System.Security;\nusing System.Security.Policy;\nusing System.Windows.Forms;\nnamespace MyNamespace\n{\n\tpublic class MyTrustManager : IApplicationTrustManager\n\t{\n\t\tpublic ApplicationTrust DetermineApplicationTrust(ActivationContext appContext, TrustManagerContext context)\n\t\t{\n\t\t\tApplicationTrust trust = new ApplicationTrust(appContext.Identity);\n\t\t\ttrust.IsApplicationTrustedToRun = false;\n\n\t\t\tApplicationSecurityInfo asi = new ApplicationSecurityInfo(appContext);\n\t\t\ttrust.DefaultGrantSet = new PolicyStatement(asi.DefaultRequestSet, PolicyStatementAttribute.Nothing);\n\t\t\tif (context.UIContext == TrustManagerUIContext.Run)\n\t\t\t{\n\t\t\t\tstring message = &quot;Do you want to run &quot; + asi.ApplicationId.Name + &quot; ?&quot;;\n\t\t\t\tstring caption = &quot;MyTrustManager&quot;;\n\t\t\t\tMessageBoxButtons buttons = MessageBoxButtons.YesNo;\n\t\t\t\tDialogResult result;\n\n\t\t\t\t// Displays the MessageBox.\n\n\t\t\t\tresult = MessageBox.Show(message, caption, buttons);\n\n\t\t\t\tif (result == DialogResult.Yes)\n\t\t\t\t{\n\t\t\t\t\ttrust.IsApplicationTrustedToRun = true;\n\t\t\t\t\tif (context != null)\n\t\t\t\t\t\ttrust.Persist = context.Persist;\n\t\t\t\t\telse\n\t\t\t\t\t\ttrust.Persist = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn trust;\n\t\t}\n\n\t\tpublic SecurityElement ToXml()\n\t\t{\n\t\t\tSecurityElement se = new SecurityElement(&quot;IApplicationTrustManager&quot;);\n\t\t\tse.AddAttribute(&quot;class&quot;, typeof(MyTrustManager).AssemblyQualifiedName);\n\t\t\treturn se;\n\t\t}\n\n\t\tpublic void FromXml(SecurityElement se)\n\t\t{\n\t\t\tif (se.Tag != &quot;IApplicationTrustManager&quot; || (string)se.Attributes[&quot;class&quot;] != typeof(MyTrustManager).AssemblyQualifiedName)\n\t\t\t\tthrow new ArgumentException(&quot;Invalid tag&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Policy.IApplicationTrustManager#1\">&#39; To use the custom trust manager MyTrustManager, compile it into CustomTrustManager.dll, \n&#39; place that assembly in the GAC, and  put the following elements in\n&#39; an ApplicationTrust.config file in the config folder in the Microsoft .NET framework\n&#39; installation folder.\n&#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&#39;&lt;configuration&gt;\n&#39;    &lt;mscorlib&gt;\n&#39;        &lt;security&gt;\n&#39;            &lt;policy&gt;\n&#39;                &lt;ApplicationSecurityManager&gt;\n&#39;                    &lt;ApplicationEntries /&gt;\n&#39;                    &lt;IApplicationTrustManager class=&quot;MyNamespace.MyTrustManager, CustomTrustManager, Version=1.0.0.3, Culture=neutral, PublicKeyToken=5659fc598c2a503e&quot;/&gt;\n&#39;                &lt;/ApplicationSecurityManager&gt;\n&#39;            &lt;/policy&gt;\n&#39;        &lt;/security&gt;\n&#39;    &lt;/mscorlib&gt;\n&#39;&lt;/configuration&gt;\nImports System\nImports System.Security\nImports System.Security.Policy\nImports System.Windows.Forms\n\n\nPublic Class MyTrustManager\n    Implements IApplicationTrustManager\n    \n    Public Function DetermineApplicationTrust(ByVal appContext As ActivationContext, ByVal context As TrustManagerContext) As ApplicationTrust Implements IApplicationTrustManager.DetermineApplicationTrust\n        Dim trust As New ApplicationTrust(appContext.Identity)\n        trust.IsApplicationTrustedToRun = False\n\n        Dim asi As New ApplicationSecurityInfo(appContext)\n        trust.DefaultGrantSet = New PolicyStatement(asi.DefaultRequestSet, _\n        PolicyStatementAttribute.Nothing)\n        If context.UIContext = TrustManagerUIContext.Run Then\n            Dim message As String = &quot;Do you want to run &quot; + asi.ApplicationId.Name + &quot; ?&quot;\n            Dim caption As String = &quot;MyTrustManager&quot;\n            Dim buttons As MessageBoxButtons = MessageBoxButtons.YesNo\n            Dim result As DialogResult\n\n            &#39; Displays the MessageBox.\n            result = MessageBox.Show(message, caption, buttons)\n\n            If result = DialogResult.Yes Then\n                trust.IsApplicationTrustedToRun = True\n                If Not (context Is Nothing) Then\n                    trust.Persist = context.Persist\n                Else\n                    trust.Persist = False\n                End If\n            End If\n        End If\n        Return trust\n\n    End Function &#39;DetermineApplicationTrust\n    \n    Public Function ToXml() As SecurityElement Implements IApplicationTrustManager.ToXml\n        Dim se As New SecurityElement(&quot;IApplicationTrustManager&quot;)\n        se.AddAttribute(&quot;class&quot;, GetType(MyTrustManager).AssemblyQualifiedName)\n        Return se\n\n    End Function &#39;ToXml\n    \n    Public Sub FromXml(ByVal se As SecurityElement) Implements IApplicationTrustManager.FromXml\n        If se.Tag &lt;&gt; &quot;IApplicationTrustManager&quot; OrElse _\n        CStr(se.Attributes(&quot;class&quot;)) &lt;&gt; GetType(MyTrustManager).AssemblyQualifiedName Then\n            Throw New ArgumentException(&quot;Invalid tag&quot;)\n        End If\n\n    End Sub &#39;FromXml \nEnd Class &#39;MyTrustManager\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Trust managers must implement the IApplicationTrustManager interface. The host calls the <a class=\"xref\" href=\"system.security.policy.iapplicationtrustmanager#System_Security_Policy_IApplicationTrustManager_DetermineApplicationTrust_\" data-linktype=\"relative-path\">DetermineApplicationTrust</a> method to determine whether an application should be executed and which permissions should be granted to the application.  </p>\n<p> In the .NET Framework 4 and later, there is only one trust manager, which can be a custom implementation of the IApplicationTrustManager interface. The default trust manager implementation prompts the user for permission to install the application and to elevate the permissions granted to the application. Other trust manager implementations might provide different user experiences. For example, an implementation might check an enterprise list for trusted applications instead of prompting the user for that information.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_IApplicationTrustManager_DetermineApplicationTrust_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_IApplicationTrustManager_DetermineApplicationTrust_System_ActivationContext_System_Security_Policy_TrustManagerContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DetermineApplicationTrust(ActivationContext, TrustManagerContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether an application should be executed and which set of permissions should be granted to it.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>activationContext</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.activationcontext\" data-linktype=\"relative-path\">ActivationContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The activation context for the application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.trustmanagercontext\" data-linktype=\"relative-path\">TrustManagerContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The trust manager context for the application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.applicationtrust\" data-linktype=\"relative-path\">ApplicationTrust</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An object that contains security decisions about the application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DetermineApplicationTrust method is called by the host to determine whether an application should be executed and which set of permissions it should be granted. DetermineApplicationTrust returns an <a class=\"xref\" href=\"system.security.policy.applicationtrust\" data-linktype=\"relative-path\">ApplicationTrust</a> object with a <a class=\"xref\" href=\"system.security.policy.applicationtrust#System_Security_Policy_ApplicationTrust_DefaultGrantSet_\" data-linktype=\"relative-path\">DefaultGrantSet</a> property that contains a permission set representing the permissions to be granted to each assembly executing within the context of the application. The granted permissions do not apply to assemblies in the global assembly cache. The <a class=\"xref\" href=\"system.security.policy.applicationtrust\" data-linktype=\"relative-path\">ApplicationTrust</a> object also has an <a class=\"xref\" href=\"system.security.policy.applicationtrust#System_Security_Policy_ApplicationTrust_IsApplicationTrustedToRun_\" data-linktype=\"relative-path\">IsApplicationTrustedToRun</a> property that the trust manager sets to indicate whether the application should be trusted. If the trust manager indicates that the application can be trusted, the host activates the application and grants its assemblies the set of permissions provided in the <a class=\"xref\" href=\"system.security.policy.applicationtrust\" data-linktype=\"relative-path\">ApplicationTrust</a> collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Policy.IApplicationTrustManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.IApplicationTrustManager\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"fd5e838f-d6f5-d79f-8877-83fa7b75ec4e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Determines whether an application should be executed and which set of permissions should be granted to it.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.policy/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Policy.IApplicationTrustManager\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Policy.IApplicationTrustManager.yml","open_to_public_contributors":false,"api_name":["System.Security.Policy.IApplicationTrustManager","System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Policy.IApplicationTrustManager","System::Security::Policy::IApplicationTrustManager","System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust","System::Security::Policy::IApplicationTrustManager::DetermineApplicationTrust"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"fd5e838f-d6f5-d79f-8877-83fa7b75ec4e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Policy/IApplicationTrustManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IApplicationTrustManager interface | Microsoft Docs","_op_ogTitle":"IApplicationTrustManager interface","description":"Determines whether an application should be executed and which set of permissions should be granted to it.\n","toc_asset_id":"api/_splitted/System.Security.Policy/toc.json","toc_rel":"_splitted/System.Security.Policy/toc.json","source_url":"","ms.assetid":"System.Security.Policy.IApplicationTrustManager","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.policy.iapplicationtrustmanager","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.policy.iapplicationtrustmanager","fileRelativePath":"api/System.Security.Policy.IApplicationTrustManager.html"},"themesRelativePathToOutputRoot":"_themes/"}