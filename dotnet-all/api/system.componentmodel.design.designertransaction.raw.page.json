{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DesignerTransaction</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a way to group a series of design-time actions to improve performance and enable most types of changes to be undone.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class DesignerTransaction : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">DesignerTransaction</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example program demonstrates how to create a DesignerTransaction from a designer. To run this sample, compile the source code into a class library. You must add a reference to the System.Design assembly. In a new project, add a reference to the compiled DLL and add the component in the library to the <strong>Toolbox</strong>.  </p>\n<p> There is extensive support for this feature in Visual Studio.  </p>\n<p> Also see <a href=\"http://msdn.microsoft.com/library/fw694kde(v=vs.110).aspx\" data-linktype=\"external\">Walkthrough: Automatically Populating the Toolbox with Custom Components</a>.  </p>\n<p> The designer can optionally display notifications about designer transaction events. If you add an instance of the <code>DTComponent</code> to a form while in design mode, a message box appears asking whether you would like to receive designer transaction event notifications. You may toggle these notifications using the shortcut menu that appears when you right-click an instance of the <code>DTComponent</code>. Transactions are created when you change values using the Properties window. You can also have the designer perform a transaction by clicking <strong>Perform Example Transaction</strong> on the shortcut menu for the component.  </p>\n<pre><code class=\"lang-cpp\" name=\"DesignerTransaction Sample#1\">#using &lt;system.dll&gt;\n#using &lt;system.design.dll&gt;\n#using &lt;system.windows.forms.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\n\n/*\nThis sample demonstrates how to perform a series of actions in a designer\ntransaction, how to change values of properties of a component from a\ndesigner, and how to complete transactions without being interrupted\nby other activities.\n\nTo run this sample, add this code to a class library project and compile.\nCreate a new Windows Forms project or load a form in the designer. Add a\nreference to the class library that was compiled in the first step.\nRight-click the Toolbox in design mode and click Customize Toolbox.\nBrowse to the class library that was compiled in the first step and\nselect OK until the DTComponent item appears in the Toolbox.  Add an\ninstance of this component to the form.\n\nWhen the component is created and added to the component tray for your\ndesign project, the Initialize method of the designer is called.\nThis method displays a message box informing you that designer transaction\nevent handlers will be registered unless you click Cancel. When you set\nproperties in the properties window, each change will be encapsulated in\na designer transaction, allowing the change to be undone later.\n\nWhen you right-click the component, the shortcut menu for the component\nis displayed. The designer constructs this menu according to whether\ndesigner transaction notifications are enabled, and offers the option\nof enabling or disabling the notifications, depending on the current\nmode. The shortcut menu also presents a Perform Example Transaction\nitem, which will set the values of the component&#39;s StringProperty and\nCountProperty properties. You can undo the last designer transaction using\nthe Undo command provided by the Visual Studio development environment.\n*/\n\nprivate ref class DTDesigner: public ComponentDesigner\n{\nprivate:\n   bool notification_mode;\n   int count;\n   void LinkDTNotifications( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      if (  !notification_mode )\n      {\n         IDesignerHost^ host = dynamic_cast&lt;IDesignerHost^&gt;(GetService( IDesignerHost::typeid ));\n         if ( host != nullptr )\n         {\n            notification_mode = true;\n            host-&gt;TransactionOpened += gcnew EventHandler( this, &amp;DTDesigner::OnDesignerTransactionOpened );\n            host-&gt;TransactionClosed += gcnew DesignerTransactionCloseEventHandler( this, &amp;DTDesigner::OnDesignerTransactionClosed );\n         }\n      }\n   }\n\n   void UnlinkDTNotifications( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      if ( notification_mode )\n      {\n         IDesignerHost^ host = dynamic_cast&lt;IDesignerHost^&gt;(GetService( IDesignerHost::typeid ));\n         if ( host != nullptr )\n         {\n            notification_mode = false;\n            host-&gt;TransactionOpened -= gcnew EventHandler( this, &amp;DTDesigner::OnDesignerTransactionOpened );\n            host-&gt;TransactionClosed -= gcnew DesignerTransactionCloseEventHandler( this, &amp;DTDesigner::OnDesignerTransactionClosed );\n         }\n      }\n   }\n\n   void OnDesignerTransactionOpened( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;A Designer Transaction was started. (TransactionOpened)&quot; );\n   }\n\n   void OnDesignerTransactionClosed( Object^ /*sender*/, DesignerTransactionCloseEventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;A Designer Transaction was completed. (TransactionClosed)&quot; );\n   }\n\n   void DoTransaction( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      IDesignerHost^ host = static_cast&lt;IDesignerHost^&gt;(GetService( IDesignerHost::typeid ));\n      DesignerTransaction^ t = host-&gt;CreateTransaction( &quot;Change Text and Size&quot; );\n      \n      /* The code within the using statement is considered to be a single transaction.\n              When the user selects Undo, the system will undo everything executed in this code block.\n              */\n      if ( notification_mode )\n            MessageBox::Show( &quot;Entering a Designer-Initiated Designer Transaction&quot; );\n\n      // The .NET Framework automatically associates the TypeDescriptor with the correct component\n      PropertyDescriptor^ someText = TypeDescriptor::GetProperties( Component )[ &quot;StringProperty&quot; ];\n      someText-&gt;SetValue( Component, &quot;This text was set by the designer for this component.&quot; );\n      PropertyDescriptor^ anInteger = TypeDescriptor::GetProperties( Component )[ &quot;CountProperty&quot; ];\n      anInteger-&gt;SetValue( Component, count );\n      count++;\n\n      // Complete the designer transaction.\n      t-&gt;Commit();\n      if ( notification_mode )\n            MessageBox::Show( &quot;Designer-Initiated Designer Transaction Completed&quot; );\n   }\n\npublic:\n   property DesignerVerbCollection^ Verbs \n   {\n      // The Verbs property is overridden from ComponentDesigner\n      virtual DesignerVerbCollection^ get() override\n      {\n         DesignerVerbCollection^ dvc = gcnew DesignerVerbCollection;\n         dvc-&gt;Add( gcnew DesignerVerb( &quot;Perform Example Transaction&quot;,gcnew EventHandler( this, &amp;DTDesigner::DoTransaction ) ) );\n         if ( notification_mode )\n                  dvc-&gt;Add( gcnew DesignerVerb( &quot;End Designer Transaction Notifications&quot;,\n                     gcnew EventHandler( this, &amp;DTDesigner::UnlinkDTNotifications ) ) );\n         else\n                  dvc-&gt;Add( gcnew DesignerVerb( &quot;Show Designer Transaction Notifications&quot;,\n                     gcnew EventHandler( this, &amp;DTDesigner::LinkDTNotifications ) ) );\n\n         return dvc;\n      }\n   }\n   virtual void Initialize( IComponent^ component ) override\n   {\n      ComponentDesigner::Initialize( component );\n      notification_mode = false;\n      count = 10;\n      IDesignerHost^ host = dynamic_cast&lt;IDesignerHost^&gt;(GetService( IDesignerHost::typeid ));\n      if ( host == nullptr )\n      {\n         MessageBox::Show( &quot;The IDesignerHost service interface could not be obtained.&quot; );\n         return;\n      }\n\n      if ( MessageBox::Show( &quot;Press the Yes button to display notification message boxes for the designer transaction opened and closed notifications.&quot;, &quot;Link DesignerTransaction Notifications?&quot;, MessageBoxButtons::YesNo, MessageBoxIcon::Question, MessageBoxDefaultButton::Button1, MessageBoxOptions::RightAlign ) == DialogResult::Yes )\n      {\n         host-&gt;TransactionOpened += gcnew EventHandler( this, &amp;DTDesigner::OnDesignerTransactionOpened );\n         host-&gt;TransactionClosed += gcnew DesignerTransactionCloseEventHandler( this, &amp;DTDesigner::OnDesignerTransactionClosed );\n         notification_mode = true;\n      }\n   }\n\npublic:\n   ~DTDesigner()\n   {\n      UnlinkDTNotifications( this, gcnew EventArgs );\n   }\n};\n\n// Associate the DTDesigner with this component\n\n[DesignerAttribute(DTDesigner::typeid)]\npublic ref class DTComponent: public System::ComponentModel::Component\n{\nprivate:\n   String^ m_String;\n   int m_Count;\n   void InitializeComponent()\n   {\n      m_String = &quot;Initial Value&quot;;\n      m_Count = 0;\n   }\n\npublic:\n   property String^ StringProperty \n   {\n      String^ get()\n      {\n         return m_String;\n      }\n\n      void set( String^ value )\n      {\n         m_String = value;\n      }\n   }\n\n   property int CountProperty \n   {\n      int get()\n      {\n         return m_Count;\n      }\n\n      void set( int value )\n      {\n         m_Count = value;\n      }\n   }\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"DesignerTransaction Sample#1\">Imports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n&#39;   This sample demonstrates how to perform a series of actions in a designer \n&#39;   transaction, how to change values of properties of a component from a \n&#39;   designer, and how to complete transactions without being interrupted \n&#39;   by other activities.\n\n&#39;   To run this sample, add this code to a class library project and compile. \n&#39;   Create a new Windows Forms project or load a form in the designer. Add a \n&#39;   reference to the class library that was compiled in the first step.\n&#39;   Right-click the Toolbox in design mode and click Customize Toolbox.  \n&#39;   Browse to the class library that was compiled in the first step and \n&#39;   select OK until the DTComponent item appears in the Toolbox.  Add an \n&#39;   instance of this component to the form.  \n\n&#39;   When the component is created and added to the component tray for your\n&#39;   design project, the Initialize method of the designer is called. \n&#39;   This method displays a message box informing you that designer transaction\n&#39;   event handlers are being registered unless you click Cancel. When you set \n&#39;   properties in the properties window, each change will be encapsulated in \n&#39;   a designer transaction, allowing the change to be undone later.  \n\n&#39;   When you right-click the component, the shortcut menu for the component \n&#39;   is displayed. The designer constructs this menu according to whether \n&#39;   designer transaction notifications are enabled, and offers the option\n&#39;   of enabling or disabling the notifications, depending on the current \n&#39;   mode. The shortcut menu also presents a Perform Example Transaction \n&#39;   item which will set the values of the component&#39;s StringProperty and \n&#39;   CountProperty properties. You can undo the last designer transaction using \n&#39;   the Undo command provided by the Visual Studio development environment.\t\n\nNamespace DesignerTransactionSample\n\n    &#39; Associate the DTDesigner with this component\n    &lt;DesignerAttribute(GetType(DTDesigner))&gt; _\n    Public Class DTComponent\n        Inherits System.ComponentModel.Component\n        Private m_String As String\n        Private m_Count As Integer\n\n        Public Property StringProperty() As String\n            Get\n                Return m_String\n            End Get\n            Set(ByVal Value As String)\n                m_String = Value\n            End Set\n        End Property\n\n        Public Property CountProperty() As Integer\n            Get\n                Return m_Count\n            End Get\n            Set(ByVal Value As Integer)\n                m_Count = Value\n            End Set\n        End Property\n\n        Private Sub InitializeComponent()\n            m_String = &quot;Initial Value&quot;\n            m_Count = 0\n        End Sub &#39;InitializeComponent\n\n    End Class &#39;DTComponent\n\n    Friend Class DTDesigner\n        Inherits ComponentDesigner\n\n        Private notification_mode As Boolean = False\n        Private count As Integer = 10\n\n        &#39; The Verbs property is overridden from ComponentDesigner\n        Public Overrides ReadOnly Property Verbs() As DesignerVerbCollection\n            Get\n                Dim dvc As New DesignerVerbCollection()\n                dvc.Add(New DesignerVerb(&quot;Perform Example Transaction&quot;, AddressOf Me.DoTransaction))\n                If notification_mode Then\n                    dvc.Add(New DesignerVerb(&quot;End Designer Transaction Notifications&quot;, AddressOf Me.UnlinkDTNotifications))\n                Else\n                    dvc.Add(New DesignerVerb(&quot;Show Designer Transaction Notifications&quot;, AddressOf Me.LinkDTNotifications))\n                End If\n                Return dvc\n            End Get\n        End Property\n\n        Public Overrides Sub Initialize(ByVal component As System.ComponentModel.IComponent)\n            MyBase.Initialize(component)\n\n            Dim host As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n            If host Is Nothing Then\n                MessageBox.Show(&quot;The IDesignerHost service interface could not be obtained.&quot;)\n                Return\n            End If\n\n            If MessageBox.Show(&quot;Press the Yes button to display notification message boxes for the designer transaction opened and closed notifications.&quot;, &quot;Link DesignerTransaction Notifications?&quot;, MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign) = DialogResult.Yes Then\n                AddHandler host.TransactionOpened, AddressOf OnDesignerTransactionOpened\n                AddHandler host.TransactionClosed, AddressOf OnDesignerTransactionClosed\n                notification_mode = True\n            End If\n        End Sub &#39;Initialize\n\n        Private Sub LinkDTNotifications(ByVal sender As Object, ByVal e As EventArgs)\n            If notification_mode = False Then\n                Dim host As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n                If (host IsNot Nothing) Then\n                    notification_mode = True\n                    AddHandler host.TransactionOpened, AddressOf OnDesignerTransactionOpened\n                    AddHandler host.TransactionClosed, AddressOf OnDesignerTransactionClosed\n                End If\n            End If\n        End Sub &#39;LinkDTNotifications\n\n        Private Sub UnlinkDTNotifications(ByVal sender As Object, ByVal e As EventArgs)\n            If notification_mode Then\n                Dim host As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n                If (host IsNot Nothing) Then\n                    notification_mode = False\n                    RemoveHandler host.TransactionOpened, AddressOf Me.OnDesignerTransactionOpened\n                    RemoveHandler host.TransactionClosed, AddressOf Me.OnDesignerTransactionClosed\n                End If\n            End If\n        End Sub &#39;UnlinkDTNotifications\n\n        Private Sub OnDesignerTransactionOpened(ByVal sender As Object, ByVal e As EventArgs)\n            System.Windows.Forms.MessageBox.Show(&quot;A Designer Transaction was started. (TransactionOpened)&quot;)\n        End Sub &#39;OnDesignerTransactionOpened\n\n        Private Sub OnDesignerTransactionClosed(ByVal sender As Object, ByVal e As DesignerTransactionCloseEventArgs)\n            System.Windows.Forms.MessageBox.Show(&quot;A Designer Transaction was completed. (TransactionClosed)&quot;)\n        End Sub &#39;OnDesignerTransactionClosed\n\n        Private Sub DoTransaction(ByVal sender As Object, ByVal e As EventArgs)\n            Dim host As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n            Dim t As DesignerTransaction = host.CreateTransaction(&quot;Change Text and Size&quot;)\n\n            &#39; The code within the using statement is considered to be a single transaction.\n            &#39; When the user selects Undo, the system will undo everything executed in this code block. \n            Try\n                If (notification_mode) Then\n                    System.Windows.Forms.MessageBox.Show(&quot;Entering a Designer-Initiated Designer Transaction&quot;)\n                End If\n\n                Dim someText As PropertyDescriptor = TypeDescriptor.GetProperties(Component)(&quot;StringProperty&quot;)\n                someText.SetValue(Component, &quot;This text was set by the designer for this component.&quot;)\n                Dim anInteger As PropertyDescriptor = TypeDescriptor.GetProperties(Component)(&quot;CountProperty&quot;)\n                anInteger.SetValue(Component, count)\n                count = count + 1\n\n                Exit Try\n            Finally\n                t.Commit()                \n            End Try\n            If (notification_mode) Then\n                System.Windows.Forms.MessageBox.Show(&quot;Designer-Initiated Designer Transaction Completed&quot;)\n            End If\n        End Sub &#39;DoTransaction\n\n        Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n            UnlinkDTNotifications(Me, New EventArgs())\n            MyBase.Dispose(disposing)\n        End Sub &#39;Dispose\n\n    End Class &#39;DTDesigner\nEnd Namespace &#39;DesignerTransactionSample\n</code></pre><pre><code class=\"lang-cs\" name=\"DesignerTransaction Sample#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\n/*\n    This sample demonstrates how to perform a series of actions in a designer \n    transaction, how to change values of properties of a component from a \n    designer, and how to complete transactions without being interrupted \n    by other activities.\n\n    To run this sample, add this code to a class library project and compile. \n    Create a new Windows Forms project or load a form in the designer. Add a \n    reference to the class library that was compiled in the first step.\n    Right-click the Toolbox in design mode and click Customize Toolbox.  \n    Browse to the class library that was compiled in the first step and \n    select OK until the DTComponent item appears in the Toolbox.  Add an \n    instance of this component to the form.  \n\t\n    When the component is created and added to the component tray for your\n    design project, the Initialize method of the designer is called. \n    This method displays a message box informing you that designer transaction\n    event handlers will be registered unless you click Cancel. When you set \n    properties in the properties window, each change will be encapsulated in \n    a designer transaction, allowing the change to be undone later.  \n\t\n    When you right-click the component,\tthe shortcut menu for the component \n    is displayed. The designer constructs this menu according to whether \n    designer transaction notifications are enabled, and offers the option\n    of enabling or disabling the notifications, depending on the current \n    mode. The shortcut menu also presents a Perform Example Transaction \n    item, which will set the values of the component&#39;s StringProperty and \n    CountProperty properties. You can undo the last designer transaction using \n    the Undo command provided by the Visual Studio development environment.\n*/\n\nnamespace DesignerTransactionSample\n{\n    // Associate the DTDesigner with this component\n    [DesignerAttribute(typeof(DTDesigner))]\n    public class DTComponent : System.ComponentModel.Component\n    {\n    \tprivate string m_String;\n\tprivate int m_Count;\n\t\t\t\n\tpublic string StringProperty\n\t{\n\t    get\n            { return m_String; }\n\t    set\n\t    { m_String = value; }\n\t}\n\t\t\t\n\tpublic int CountProperty\n\t{\n\t    get\n\t    { return m_Count; }\n\t    set\n\t    { m_Count = value; }\n\t}\n\n\tprivate void InitializeComponent()\n\t{\n\t    m_String = &quot;Initial Value&quot;;\n\t    m_Count = 0;\n\t}\n    }\n\t\n    internal class DTDesigner : ComponentDesigner\n    {\n\tprivate bool notification_mode = false;\n\tprivate int count = 10;\n\t\t\n\t// The Verbs property is overridden from ComponentDesigner\n\tpublic override DesignerVerbCollection Verbs\n\t{\n\t    get\n\t    {\t\t\t\t\n\t        DesignerVerbCollection dvc = new DesignerVerbCollection();\t\t\t\t\n\t\tdvc.Add( new DesignerVerb(&quot;Perform Example Transaction&quot;, new EventHandler(this.DoTransaction)) );\n\t\tif(notification_mode)\n\t\t    dvc.Add(new DesignerVerb(&quot;End Designer Transaction Notifications&quot;, new EventHandler(this.UnlinkDTNotifications)));\n\t\telse\n\t\t    dvc.Add(new DesignerVerb(&quot;Show Designer Transaction Notifications&quot;, new EventHandler(this.LinkDTNotifications)));\t\t\t\treturn dvc;\n\t    }\n\t}\n\t\t\n        public override void Initialize(System.ComponentModel.IComponent component)\n        {\n            base.Initialize(component);\n\n            IDesignerHost host = (IDesignerHost)GetService(typeof(IDesignerHost));\t\t\t\n            if(host == null)\n            {\n                MessageBox.Show(&quot;The IDesignerHost service interface could not be obtained.&quot;);\n                return;\n            }\n\n            if( MessageBox.Show(&quot;Press the Yes button to display notification message boxes for the designer transaction opened and closed notifications.&quot;,&quot;Link DesignerTransaction Notifications?&quot;, MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign) == DialogResult.Yes )\n            {\t\t\t\t\t\t\t\n\t        host.TransactionOpened += new EventHandler(OnDesignerTransactionOpened);\n    \t        host.TransactionClosed += new DesignerTransactionCloseEventHandler(OnDesignerTransactionClosed);\n                notification_mode = true;\n            }\n        }\n\t\t\n        private void LinkDTNotifications(object sender, EventArgs e)\n        {\n            if(notification_mode == false)\n            {\n\t        IDesignerHost host = (IDesignerHost)GetService(typeof(IDesignerHost));\t\t\t\t\t\t\t\n                if(host != null)\n\t        {\n\t\t    notification_mode = true;\n                   host.TransactionOpened += new EventHandler(OnDesignerTransactionOpened);\n                   host.TransactionClosed += new DesignerTransactionCloseEventHandler(OnDesignerTransactionClosed);\n\t        }\n\t    }\n        }\n\n        private void UnlinkDTNotifications(object sender, EventArgs e)\n        {\n\t    if(notification_mode)\n    \t    {\n    \t        IDesignerHost host = (IDesignerHost)GetService(typeof(IDesignerHost));\t\t\t\t\t\t\t\n\t        if(host != null)\n                {\t\t\t\t\n\t\t    notification_mode = false;\n                    host.TransactionOpened -= new EventHandler(OnDesignerTransactionOpened);\n                    host.TransactionClosed -= new DesignerTransactionCloseEventHandler(OnDesignerTransactionClosed);\n                }\n            }\n        }\n\n        private void OnDesignerTransactionOpened(object sender, EventArgs e)\n        {\t\t\t\n\t    System.Windows.Forms.MessageBox.Show(&quot;A Designer Transaction was started. (TransactionOpened)&quot;);\n        }\n\n        private void OnDesignerTransactionClosed(object sender, DesignerTransactionCloseEventArgs e)\n        {\t\t\t\n\t    System.Windows.Forms.MessageBox.Show(&quot;A Designer Transaction was completed. (TransactionClosed)&quot;);\n        }   \n\n        private void DoTransaction(object sender, EventArgs e) \n        {\t\t\t\n    \t    IDesignerHost host = (IDesignerHost)GetService(typeof(IDesignerHost));\t\t\t\n            DesignerTransaction t = host.CreateTransaction(&quot;Change Text and Size&quot;);\n\n            /* The code within the using statement is considered to be a single transaction.\n\t       When the user selects Undo, the system will undo everything executed in this code block. */\n            using (t)\n            {\n\t        if(notification_mode)\n\t            System.Windows.Forms.MessageBox.Show(&quot;Entering a Designer-Initiated Designer Transaction&quot;);\n\t\t\t\t\n                // The .NET Framework automatically associates the TypeDescriptor with the correct component\n\t        PropertyDescriptor someText = TypeDescriptor.GetProperties(Component)[&quot;StringProperty&quot;];\n                someText.SetValue(Component, &quot;This text was set by the designer for this component.&quot;);\n\n                PropertyDescriptor anInteger = TypeDescriptor.GetProperties(Component)[&quot;CountProperty&quot;];\n\t        anInteger.SetValue(Component, count);\n\t        count++;\n\n                // Complete the designer transaction.\n\t        t.Commit();\n\t\t\t\t\n\t        if(notification_mode)\n\t            System.Windows.Forms.MessageBox.Show(&quot;Designer-Initiated Designer Transaction Completed&quot;);\n            }\n        }\n\t\t\n\tprotected override void Dispose(bool disposing)\n\t{\n\t    UnlinkDTNotifications(this, new EventArgs());\n\t    base.Dispose(disposing);\n\t}\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Transactions can track actions that can be undone later. Changes made during a transaction can be reversed by canceling a transaction, which automatically attempts to reverse each change by setting each changed property to its pre-change value. Transactions can also improve performance during a series of operations by deferring updates to the display until the completion of the transaction.  </p>\n<p> When a transaction is in progress, some components defer their processing until the transaction has completed by listening to the <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_TransactionOpening\" data-linktype=\"relative-path\">TransactionOpening</a> and <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_TransactionClosed\" data-linktype=\"relative-path\">TransactionClosed</a> events. The Properties window, for example, does not update its display after a transaction has opened until the transaction has closed.  </p>\n<p> To use transactions for reversible or multiple operations, have your designer create a DesignerTransaction for each operation or series of operations which should be reversible. Be careful not to perform actions outside the transactions that might prevent a sequence of undo events from completing successfully.  </p>\n<p> You can obtain a new DesignerTransaction by calling the <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_CreateTransaction_\" data-linktype=\"relative-path\">CreateTransaction</a> method of an <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost\" data-linktype=\"relative-path\">IDesignerHost</a>. Be sure to obtain each DesignerTransaction from the active <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost\" data-linktype=\"relative-path\">IDesignerHost</a> in order to correctly integrate with the designer transaction processing mechanism, rather than creating a new DesignerTransaction directly.  </p>\n<p> To perform an action within a transaction, you must first create a transaction. Then you must call the <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_OnComponentChanging_\" data-linktype=\"relative-path\">OnComponentChanging</a> method before each change or set of changes occurs, and the <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_OnComponentChanged_\" data-linktype=\"relative-path\">OnComponentChanged</a> method after each change or set of changes occur. Finally, complete and close the transaction by calling the <a class=\"xref\" href=\"system.componentmodel.design.designertransaction#System_ComponentModel_Design_DesignerTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When making changes to property values, use the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor#System_ComponentModel_PropertyDescriptor_SetValue_\" data-linktype=\"relative-path\">SetValue</a> method of a <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a>, which calls the component change methods of the <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice\" data-linktype=\"relative-path\">IComponentChangeService</a> and creates a DesignerTransaction representing the change automatically.  </p>\n</div>\n<p> To perform a transaction, complete the following steps:  </p>\n<ol>\n<li><p>Call <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_CreateTransaction_\" data-linktype=\"relative-path\">CreateTransaction</a> to obtain a DesignerTransaction that can be used to control the transaction.  </p>\n</li>\n<li><p>Within a <code>try</code> block, for each action that you want to track with a DesignerTransaction, call the <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_OnComponentChanging_\" data-linktype=\"relative-path\">OnComponentChanging</a> method, make the change or changes, then call the <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_OnComponentChanged_\" data-linktype=\"relative-path\">OnComponentChanged</a> method to signal that the change or changes have been made.  </p>\n</li>\n<li><p>To complete the transaction, call <a class=\"xref\" href=\"system.componentmodel.design.designertransaction#System_ComponentModel_Design_DesignerTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> from within a <code>finally</code> block.  </p>\n</li>\n</ol>\n<p> In C#, you can use the <code>using</code> statement rather than a <code>try/finally</code> block, such as in the following example.  </p>\n<pre><code>using (host.CreateTransaction() {  \n// Insert your code here.  \n}  \n</code></pre><p> To cancel and attempt to roll back a transaction before it has been committed, call the <a class=\"xref\" href=\"system.componentmodel.design.designertransaction#System_ComponentModel_Design_DesignerTransaction_Cancel_\" data-linktype=\"relative-path\">Cancel</a> method. When the <a class=\"xref\" href=\"system.componentmodel.design.designertransaction#System_ComponentModel_Design_DesignerTransaction_Cancel_\" data-linktype=\"relative-path\">Cancel</a> method is invoked, the actions tracked by the DesignerTransaction are reversed to attempt to roll back the changes. To undo actions that occurred as part of earlier transactions, you must use the undo command provided by the development environment.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DesignerTransaction()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> class with no description.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected DesignerTransaction ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DesignerTransaction(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> class using the specified transaction description.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected DesignerTransaction (string description);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>description</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A description for this transaction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes the transaction with the specified description.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_Canceled_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_Canceled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Canceled</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the transaction was canceled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Canceled { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the transaction was canceled; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction. Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code&#39;s state, and whether a sequence of expected operations failed to complete.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_Committed_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_Committed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Committed</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the transaction was committed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Committed { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the transaction was committed; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_Description_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_Description\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Description</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a description for the transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Description { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A description for the transaction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A transaction can have a description that is useful in identifying the nature of the operation or operations.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_Cancel_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_Cancel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Cancel()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Cancels the transaction and attempts to roll back the changes made by the events of the transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Cancel ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_Commit_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_Commit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Commit()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Commits this transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Commit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a designer transaction is committed, the transaction is considered complete and does not track further changes.  </p>\n<p> Once a transaction has been committed, further calls to this method do nothing. Always call this method after creating a transaction to ensure that the transaction closes properly.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_Finalize_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_Finalize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Finalize()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the resources associated with this object. This override commits this transaction if it was not already committed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">~DesignerTransaction ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> and cleans up resources by calling <code>Dispose(false)</code>. Override <code>Dispose(Boolean)</code> to customize the cleanup.  </p>\n<p> Application code should not call this method; an object&#39;s <code>Finalize</code> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <a class=\"xref\" href=\"system.gc#System_GC_SuppressFinalize_\" data-linktype=\"relative-path\">SuppressFinalize</a> method.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70\" data-linktype=\"external\">Finalize Methods and Destructors</a>, <a href=\"../topic/cleaning%20up%20unmanaged%20resources\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>, and <a href=\"http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3\" data-linktype=\"external\">Overriding the Finalize Method</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_OnCancel_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_OnCancel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnCancel()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <code>Cancel</code> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected abstract void OnCancel ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction. Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code&#39;s state, and whether a sequence of expected operations failed to complete.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_OnCommit_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_OnCommit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnCommit()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs the actual work of committing a transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected abstract void OnCommit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_DesignerTransaction_System_IDisposable_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerTransaction_System_IDisposable_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDisposable.Dispose()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases all resources used by the <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IDisposable.Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a transaction is disposed, it is committed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.DesignerTransaction.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.Cancel\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.Canceled\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.Commit\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.Committed\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.Description\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.Dispose\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.Finalize\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.OnCancel\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.OnCommit\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerTransaction.IDisposable.Dispose\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"fb578c18-d994-2920-f072-8ad005c9e95a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a way to group a series of design-time actions to improve performance and enable most types of changes to be undone.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.DesignerTransaction\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.DesignerTransaction.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.DesignerTransaction","System.ComponentModel.Design.DesignerTransaction..ctor","System.ComponentModel.Design.DesignerTransaction.Cancel","System.ComponentModel.Design.DesignerTransaction.Canceled","System.ComponentModel.Design.DesignerTransaction.Commit","System.ComponentModel.Design.DesignerTransaction.Committed","System.ComponentModel.Design.DesignerTransaction.Description","System.ComponentModel.Design.DesignerTransaction.Dispose","System.ComponentModel.Design.DesignerTransaction.Finalize","System.ComponentModel.Design.DesignerTransaction.OnCancel","System.ComponentModel.Design.DesignerTransaction.OnCommit","System.ComponentModel.Design.DesignerTransaction.IDisposable.Dispose"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.DesignerTransaction","System::ComponentModel::Design::DesignerTransaction","System.ComponentModel.Design.DesignerTransaction.#ctor","System::ComponentModel::Design::DesignerTransaction::#ctor","System.ComponentModel.Design.DesignerTransaction.Cancel","System::ComponentModel::Design::DesignerTransaction::Cancel","System.ComponentModel.Design.DesignerTransaction.Canceled","System::ComponentModel::Design::DesignerTransaction::Canceled","System.ComponentModel.Design.DesignerTransaction.Commit","System::ComponentModel::Design::DesignerTransaction::Commit","System.ComponentModel.Design.DesignerTransaction.Committed","System::ComponentModel::Design::DesignerTransaction::Committed","System.ComponentModel.Design.DesignerTransaction.Description","System::ComponentModel::Design::DesignerTransaction::Description","System.ComponentModel.Design.DesignerTransaction.Dispose","System::ComponentModel::Design::DesignerTransaction::Dispose","System.ComponentModel.Design.DesignerTransaction.Finalize","System::ComponentModel::Design::DesignerTransaction::Finalize","System.ComponentModel.Design.DesignerTransaction.OnCancel","System::ComponentModel::Design::DesignerTransaction::OnCancel","System.ComponentModel.Design.DesignerTransaction.OnCommit","System::ComponentModel::Design::DesignerTransaction::OnCommit","System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose","System::ComponentModel::Design::DesignerTransaction::System#IDisposable#Dispose"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"fb578c18-d994-2920-f072-8ad005c9e95a","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/DesignerTransaction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DesignerTransaction class | Microsoft Docs","_op_ogTitle":"DesignerTransaction class","description":"Provides a way to group a series of design-time actions to improve performance and enable most types of changes to be undone.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.DesignerTransaction","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.designertransaction","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.designertransaction","fileRelativePath":"api/System.ComponentModel.Design.DesignerTransaction.html"},"themesRelativePathToOutputRoot":"_themes/"}