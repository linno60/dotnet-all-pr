{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CharacterRange</span>\r\n      Struct\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies a range of character positions within a string.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public struct CharacterRange</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><span class=\"lang-csharp\">CharacterRange</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to create a CharacterRange and use it to highlight part of a string. This example is designed to be used with Windows Forms. Paste the example into a form and call the <code>HighlightACharacterRange</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.CharacterRangeExample#1\">private void HighlightACharacterRange(PaintEventArgs e)\n{\n\n    // Declare the string to draw.\n    string message = &quot;This is the string to highlight a word in.&quot;;\n\n    // Declare the word to highlight.\n    string searchWord = &quot;string&quot;;\n\n    // Create a CharacterRange array with the searchWord \n    // location and length.\n    CharacterRange[] ranges = \n        new CharacterRange[]{new CharacterRange\n        (message.IndexOf(searchWord), searchWord.Length)};\n\n    // Construct a StringFormat object.\n    StringFormat stringFormat1 = new StringFormat();\n\n    // Set the ranges on the StringFormat object.\n    stringFormat1.SetMeasurableCharacterRanges(ranges);\n\n    // Declare the font to write the message in.\n    Font largeFont = new Font(FontFamily.GenericSansSerif, 16.0F,\n        GraphicsUnit.Pixel);\n\n    // Construct a new Rectangle.\n    Rectangle displayRectangle = new Rectangle(20, 20, 200, 100);\n\n    // Convert the Rectangle to a RectangleF.\n    RectangleF displayRectangleF = (RectangleF)displayRectangle;\n\n    // Get the Region to highlight by calling the \n    // MeasureCharacterRanges method.\n    Region[] charRegion = e.Graphics.MeasureCharacterRanges(message, \n        largeFont, displayRectangleF, stringFormat1);\n\n    // Draw the message string on the form.\n    e.Graphics.DrawString(message, largeFont, Brushes.Blue, \n        displayRectangleF);\n\n    // Fill in the region using a semi-transparent color.\n    e.Graphics.FillRegion(new SolidBrush(Color.FromArgb(50, Color.Fuchsia)), \n        charRegion[0]);\n\n    largeFont.Dispose();\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.CharacterRangeExample#1\">void HighlightACharacterRange( PaintEventArgs^ e )\n{\n   // Declare the string to draw.\n   String^ message = &quot;This is the string to highlight a word in.&quot;;\n\n   // Declare the word to highlight.\n   String^ searchWord = &quot;string&quot;;\n\n   // Create a CharacterRange array with the searchWord \n   // location and length.\n   array&lt;CharacterRange&gt;^ temp = {CharacterRange( message-&gt;IndexOf( searchWord ), searchWord-&gt;Length )};\n   array&lt;CharacterRange&gt;^ranges = temp;\n\n   // Construct a StringFormat object.\n   StringFormat^ stringFormat1 = gcnew StringFormat;\n\n   // Set the ranges on the StringFormat object.\n   stringFormat1-&gt;SetMeasurableCharacterRanges( ranges );\n\n   // Declare the font to write the message in.\n   System::Drawing::Font^ largeFont = gcnew System::Drawing::Font( FontFamily::GenericSansSerif,16.0F,GraphicsUnit::Pixel );\n\n   // Construct a new Rectangle.\n   Rectangle displayRectangle = Rectangle(20,20,200,100);\n\n   // Convert the Rectangle to a RectangleF.\n   RectangleF displayRectangleF = displayRectangle;\n\n   // Get the Region to highlight by calling the \n   // MeasureCharacterRanges method.\n   array&lt;System::Drawing::Region^&gt;^charRegion = e-&gt;Graphics-&gt;MeasureCharacterRanges( message, largeFont, displayRectangleF, stringFormat1 );\n\n   // Draw the message string on the form.\n   e-&gt;Graphics-&gt;DrawString( message, largeFont, Brushes::Blue, displayRectangleF );\n\n   // Fill in the region using a semi-transparent color.\n   e-&gt;Graphics-&gt;FillRegion( gcnew SolidBrush( Color::FromArgb( 50, Color::Fuchsia ) ), charRegion[ 0 ] );\n   delete largeFont;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.CharacterRangeExample#1\">Private Sub HighlightACharacterRange(ByVal e As PaintEventArgs)\n\n    &#39; Declare the string to draw.\n    Dim message As String = _\n        &quot;This is the string to highlight a word in.&quot;\n\n    &#39; Declare the word to highlight.\n    Dim searchWord As String = &quot;string&quot;\n\n    &#39; Create a CharacterRange array with the searchWord \n    &#39; location and length.\n    Dim ranges() As CharacterRange = _\n        New CharacterRange() _\n            {New CharacterRange(message.IndexOf(searchWord), _\n            searchWord.Length)}\n\n    &#39; Construct a StringFormat object.\n    Dim stringFormat1 As New StringFormat\n\n    &#39; Set the ranges on the StringFormat object.\n    stringFormat1.SetMeasurableCharacterRanges(ranges)\n\n    &#39; Declare the font to write the message in.\n    Dim largeFont As Font = New Font(FontFamily.GenericSansSerif, _\n        16.0F, GraphicsUnit.Pixel)\n\n    &#39; Construct a new Rectangle.\n    Dim displayRectangle As New Rectangle(20, 20, 200, 100)\n\n    &#39; Convert the Rectangle to a RectangleF.\n    Dim displayRectangleF As RectangleF = _\n        RectangleF.op_Implicit(displayRectangle)\n\n    &#39; Get the Region to highlight by calling the \n    &#39; MeasureCharacterRanges method.\n    Dim charRegion() As Region = _\n        e.Graphics.MeasureCharacterRanges(message, _\n        largeFont, displayRectangleF, stringFormat1)\n\n    &#39; Draw the message string on the form.\n    e.Graphics.DrawString(message, largeFont, Brushes.Blue, _\n        displayRectangleF)\n\n    &#39; Fill in the region using a semi-transparent color.\n    e.Graphics.FillRegion(New SolidBrush(Color.FromArgb(50, _\n        Color.Fuchsia)), charRegion(0))\n\nEnd Sub\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_CharacterRange__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_CharacterRange__ctor_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CharacterRange(Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> structure, specifying a range of character positions within a string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CharacterRange (int First, int Length);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>First</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position of the first character in the range. For example, if <code>First</code> is set to 0, the first position of the range is position 0 in the string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Length</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of positions in the range.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_CharacterRange_First_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_CharacterRange_First\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">First</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the position in the string of the first character of this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int First { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first position of this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_CharacterRange_Length_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_CharacterRange_Length\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Length</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of positions in this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Length { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of positions in this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_CharacterRange_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_CharacterRange_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this object is equivalent to the specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare to for equality.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to indicate the specified object is an instance with the same <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> and <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> value as this instance; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can also use <a class=\"xref\" href=\"system.drawing.characterrange#System_Drawing_CharacterRange_op_Equality_\" data-linktype=\"relative-path\">op_Equality</a> to test for equality.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_CharacterRange_GetHashCode_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_CharacterRange_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the hash code for this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A 32-bit signed integer that is the hash code for this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Operators\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_CharacterRange_op_Equality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_CharacterRange_op_Equality_System_Drawing_CharacterRange_System_Drawing_CharacterRange_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Equality(CharacterRange, CharacterRange)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects. Gets a value indicating whether the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> and <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Equality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cr1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for equality.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cr2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for equality.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to indicate the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects have the same <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> and <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can also test for equality using the <a class=\"xref\" href=\"system.drawing.characterrange#System_Drawing_CharacterRange_Equals_\" data-linktype=\"relative-path\">Equals</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Drawing_CharacterRange_op_Inequality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Drawing_CharacterRange_op_Inequality_System_Drawing_CharacterRange_System_Drawing_CharacterRange_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Inequality(CharacterRange, CharacterRange)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects. Gets a value indicating whether the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> or <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects are not equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Inequality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cr1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for inequality.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cr2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for inequality.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to indicate the either the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> or <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects differ; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Inequality method returns the opposite of the <a class=\"xref\" href=\"system.drawing.characterrange#System_Drawing_CharacterRange_op_Equality_\" data-linktype=\"relative-path\">op_Equality</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.CharacterRange.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.Equals\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.First\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.Length\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_op_Inequality\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"f4170753-e54d-e1de-52d4-3bd2c1c163b4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies a range of character positions within a string.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.drawing/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.CharacterRange\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.CharacterRange.yml","open_to_public_contributors":false,"api_name":["System.Drawing.CharacterRange","System.Drawing.CharacterRange..ctor","System.Drawing.CharacterRange.Equals","System.Drawing.CharacterRange.First","System.Drawing.CharacterRange.GetHashCode","System.Drawing.CharacterRange.Length","System.Drawing.CharacterRange.op_Equality","System.Drawing.CharacterRange.op_op_Equality","System.Drawing.CharacterRange.op_Inequality","System.Drawing.CharacterRange.op_op_Inequality"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.CharacterRange","System::Drawing::CharacterRange","System.Drawing.CharacterRange.#ctor","System::Drawing::CharacterRange::#ctor","System.Drawing.CharacterRange.Equals","System::Drawing::CharacterRange::Equals","System.Drawing.CharacterRange.First","System::Drawing::CharacterRange::First","System.Drawing.CharacterRange.GetHashCode","System::Drawing::CharacterRange::GetHashCode","System.Drawing.CharacterRange.Length","System::Drawing::CharacterRange::Length","System.Drawing.CharacterRange.op_Equality","System::Drawing::CharacterRange::op_Equality","System.Drawing.CharacterRange.op_Inequality","System::Drawing::CharacterRange::op_Inequality"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"f4170753-e54d-e1de-52d4-3bd2c1c163b4","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Drawing/CharacterRange.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CharacterRange struct | Microsoft Docs","_op_ogTitle":"CharacterRange struct","description":"Specifies a range of character positions within a string.\n","toc_asset_id":"api/_splitted/System.Drawing/toc.json","toc_rel":"_splitted/System.Drawing/toc.json","source_url":"","ms.assetid":"System.Drawing.CharacterRange","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.characterrange","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.characterrange","fileRelativePath":"api/System.Drawing.CharacterRange.html"},"themesRelativePathToOutputRoot":"_themes/"}