{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">TransactionCompletedEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_TransactionCompleted\" data-linktype=\"relative-path\">TransactionCompleted</a> event of a <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> class.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void TransactionCompletedEventHandler(object sender, TransactionEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">TransactionCompletedEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how an application can obtain the outcome of a transaction by subscribing to the <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_TransactionCompleted\" data-linktype=\"relative-path\">TransactionCompleted</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"Tx_Outcome#1\">static void Main(string[] args)\n{\n\ttry\n\t{\n\t\t//Create the transaction scope\n\t\tusing (TransactionScope scope = new TransactionScope())\n\t\t{\n\t\t\t//Register for the transaction completed event for the current transaction\n\t\t\tTransaction.Current.TransactionCompleted += new TransactionCompletedEventHandler(Current_TransactionCompleted);\n\n\t\t\t//Call complete on the TransactionScope based on console input\n\t\t\tConsoleKeyInfo c;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tConsole.Write(&quot;Complete the transaction scope? [Y|N] &quot;);\n\t\t\t\tc = Console.ReadKey();\n\t\t\t\tConsole.WriteLine();\n\n\t\t\t\tif ((c.KeyChar == &#39;Y&#39;) || (c.KeyChar == &#39;y&#39;))\n\t\t\t\t{\n\t\t\t\t\tscope.Complete();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if ((c.KeyChar == &#39;N&#39;) || (c.KeyChar == &#39;n&#39;))\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\tcatch (System.Transactions.TransactionException ex)\n\t{\n\t\tConsole.WriteLine(ex);\n\t}\n\tcatch\n\t{\n\t\tConsole.WriteLine(&quot;Cannot complete transaction&quot;);\n\t\tthrow;\n\t}\n}\n\n//Transaction completed event handler\nstatic void Current_TransactionCompleted(object sender, TransactionEventArgs e)\n{\n\tConsole.WriteLine(&quot;A transaction has completed:&quot;);\n\tConsole.WriteLine(&quot;ID:             {0}&quot;, e.Transaction.TransactionInformation.LocalIdentifier);\n\tConsole.WriteLine(&quot;Distributed ID: {0}&quot;, e.Transaction.TransactionInformation.DistributedIdentifier);\n\tConsole.WriteLine(&quot;Status:         {0}&quot;, e.Transaction.TransactionInformation.Status);\n\tConsole.WriteLine(&quot;IsolationLevel: {0}&quot;, e.Transaction.IsolationLevel);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Tx_Outcome#1\">Public Shared Sub Main()\n    Try\n        Using scope As TransactionScope = New TransactionScope()\n\n            &#39;Register for the transaction completed event for the current transaction\n            AddHandler Transaction.Current.TransactionCompleted, AddressOf Current_TransactionCompleted\n\n            &#39;Perform transactional work here.\n\n            &#39;Call complete on the TransactionScope based on console input\n            Dim c As ConsoleKeyInfo\n            While (True)\n\n                Console.Write(&quot;Complete the transaction scope? [Y|N] &quot;)\n                c = Console.ReadKey()\n                Console.WriteLine()\n                If (c.KeyChar = &quot;Y&quot;) Or (c.KeyChar = &quot;y&quot;) Then\n                    scope.Complete()\n                    Exit While\n                ElseIf ((c.KeyChar = &quot;N&quot;) Or (c.KeyChar = &quot;n&quot;)) Then\n                    Exit While\n                End If\n                \n            End While\n\n        End Using\n    Catch ex As TransactionException\n        Console.WriteLine(ex)\n    Catch\n        Console.WriteLine(&quot;Cannot complete transaction&quot;)\n        Throw\n    End Try\nEnd Sub\n\n&#39;Transaction completed event handler\nPrivate Shared Sub Current_TransactionCompleted(ByVal sender As Object, ByVal e As TransactionEventArgs)\n    Console.WriteLine(&quot;A transaction has completed:&quot;)\n    Console.WriteLine(&quot;ID:             {0}&quot;, e.Transaction.TransactionInformation.LocalIdentifier)\n    Console.WriteLine(&quot;Distributed ID: {0}&quot;, e.Transaction.TransactionInformation.DistributedIdentifier)\n    Console.WriteLine(&quot;Status:         {0}&quot;, e.Transaction.TransactionInformation.Status)\n    Console.WriteLine(&quot;IsolationLevel: {0}&quot;, e.Transaction.IsolationLevel)\nEnd Sub\n</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Transactions.TransactionCompletedEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Transactions.TransactionCompletedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Transactions.TransactionCompletedEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Transactions.TransactionCompletedEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Transactions.TransactionCompletedEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Transactions.TransactionCompletedEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"079d2a09-7cb8-c247-71cb-a84b6ab1f9e4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.transactions/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Transactions.TransactionCompletedEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Transactions.TransactionCompletedEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Transactions.TransactionCompletedEventHandler","System.Transactions.TransactionCompletedEventHandler..ctor","System.Transactions.TransactionCompletedEventHandler.Invoke","System.Transactions.TransactionCompletedEventHandler.BeginInvoke","System.Transactions.TransactionCompletedEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Transactions.TransactionCompletedEventHandler","System::Transactions::TransactionCompletedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"079d2a09-7cb8-c247-71cb-a84b6ab1f9e4","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Transactions/TransactionCompletedEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TransactionCompletedEventHandler delegate | Microsoft Docs","_op_ogTitle":"TransactionCompletedEventHandler delegate","description":"Represents the method that handles the  event of a  class.\n","toc_asset_id":"api/_splitted/System.Transactions/toc.json","toc_rel":"_splitted/System.Transactions/toc.json","source_url":"","ms.assetid":"System.Transactions.TransactionCompletedEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.transactions.transactioncompletedeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.transactions.transactioncompletedeventhandler","fileRelativePath":"api/System.Transactions.TransactionCompletedEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}