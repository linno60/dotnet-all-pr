{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataListItemEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemDataBound\" data-linktype=\"relative-path\">ItemDataBound</a> events of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DataListItemEventHandler(object sender, DataListItemEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DataListItemEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to define a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemDataBound\" data-linktype=\"relative-path\">ItemDataBound</a> event to calculate the price of items in a <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control. This example specifies the event handler declaratively, setting the event handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_OnItemDataBound_\" data-linktype=\"relative-path\">OnItemDataBound</a> attribute on the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DataListItemDataBound#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataList control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Description for item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n\n      }\n \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            ItemsList.DataSource = CreateDataSource();\n            ItemsList.DataBind();\n         }\n\n      }\n\n      void Item_Bound(Object sender, DataListItemEventArgs e)\n      {\n\n         if (e.Item.ItemType == ListItemType.Item || \n             e.Item.ItemType == ListItemType.AlternatingItem)\n         {\n\n            // Retrieve the Label control in the current DataListItem.\n            Label PriceLabel = (Label)e.Item.FindControl(&quot;PriceLabel&quot;);\n\n            // Retrieve the text of the CurrencyColumn from the DataListItem\n            // and convert the value to a Double.\n            Double Price = Convert.ToDouble(\n                ((DataRowView)e.Item.DataItem).Row.ItemArray[2].ToString());\n\n            // Format the value as currency and redisplay it in the DataList.\n            PriceLabel.Text = Price.ToString(&quot;c&quot;);\n\n         }\n\n      }\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataList ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           BorderColor=&quot;black&quot;\n           CellPadding=&quot;5&quot;\n           CellSpacing=&quot;5&quot;\n           RepeatDirection=&quot;Vertical&quot;\n           RepeatLayout=&quot;Table&quot;\n           RepeatColumns=&quot;3&quot;\n           OnItemDataBound=&quot;Item_Bound&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            List of items\n\n         &lt;/HeaderTemplate&gt;\n               \n         &lt;ItemTemplate&gt;\n\n            Description: &lt;br /&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price: \n            &lt;asp:Label id=&quot;PriceLabel&quot;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataListItemDataBound#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataList control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 8 \n\n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Description for item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n \n      Sub Page_Load(sender As Object, e As EventArgs) \n\n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then\n         \n            ItemsList.DataSource = CreateDataSource()\n            ItemsList.DataBind()\n         \n         End If\n\n      End Sub\n\n      Sub Item_Bound(sender As Object, e As DataListItemEventArgs)\n\n         If e.Item.ItemType = ListItemType.Item Or _\n             e.Item.ItemType = ListItemType.AlternatingItem Then\n\n\n            &#39; Retrieve the Label control in the current DataListItem.\n            Dim PriceLabel As Label = _\n                CType(e.Item.FindControl(&quot;PriceLabel&quot;), Label)\n\n            &#39; Retrieve the text of the CurrencyColumn from the DataListItem\n            &#39; and convert the value to a Double.\n            Dim Price As Double = Convert.ToDouble( _\n                (CType(e.Item.DataItem, DataRowView)).Row.ItemArray(2).ToString())\n\n            &#39; Format the value as currency and redisplay it in the DataList.\n            PriceLabel.Text = Price.ToString(&quot;c&quot;)\n\n         End If\n\n      End Sub\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataList ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           BorderColor=&quot;black&quot;\n           CellPadding=&quot;5&quot;\n           CellSpacing=&quot;5&quot;\n           RepeatDirection=&quot;Vertical&quot;\n           RepeatLayout=&quot;Table&quot;\n           RepeatColumns=&quot;3&quot;\n           OnItemDataBound=&quot;Item_Bound&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            List of items\n\n         &lt;/HeaderTemplate&gt;\n               \n         &lt;ItemTemplate&gt;\n\n            Description: &lt;br /&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price: \n            &lt;asp:Label id=&quot;PriceLabel&quot;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to specify the event handler and programmatically add it to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemDataBound\" data-linktype=\"relative-path\">ItemDataBound</a> event in the <code>Page_Load</code> method.  </p>\n<pre><code class=\"lang-vb\" name=\"DataListItemDataBound2#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataList control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 8 \n\n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Description for item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n \n      Sub Page_Load(sender As Object, e As EventArgs)\n\n         &#39; Manually register the event-handling method for the \n         &#39; ItemCommand event.\n         AddHandler ItemsList.ItemDataBound, AddressOf Item_Bound \n\n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then\n         \n            ItemsList.DataSource = CreateDataSource()\n            ItemsList.DataBind()\n         \n         End If\n\n      End Sub\n\n      Sub Item_Bound(sender As Object, e As DataListItemEventArgs)\n\n         If e.Item.ItemType = ListItemType.Item Or _\n             e.Item.ItemType = ListItemType.AlternatingItem Then\n\n            &#39; Retrieve the Label control in the current DataListItem.\n            Dim PriceLabel As Label = _\n                CType(e.Item.FindControl(&quot;PriceLabel&quot;), Label)\n\n            &#39; Retrieve the text of the CurrencyColumn from the DataListItem\n            &#39; and convert the value to a Double.\n            Dim Price As Double = Convert.ToDouble( _\n                (CType(e.Item.DataItem, DataRowView)).Row.ItemArray(2).ToString())\n\n            &#39; Format the value as currency and redisplay it in the DataList.\n            PriceLabel.Text = Price.ToString(&quot;c&quot;)\n\n         End If\n\n      End Sub\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataList ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           BorderColor=&quot;black&quot;\n           CellPadding=&quot;5&quot;\n           CellSpacing=&quot;5&quot;\n           RepeatDirection=&quot;Vertical&quot;\n           RepeatLayout=&quot;Table&quot;\n           RepeatColumns=&quot;3&quot;\n           OnItemDataBound=&quot;Item_Bound&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            List of items\n\n         &lt;/HeaderTemplate&gt;\n               \n         &lt;ItemTemplate&gt;\n\n            Description: &lt;br /&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price: \n            &lt;asp:Label id=&quot;PriceLabel&quot;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataListItemDataBound2#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataList control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Description for item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n\n      }\n \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         // Manually register the event-handling method for the \n         // ItemCommand event.\n         ItemsList.ItemDataBound += \n             new DataListItemEventHandler(this.Item_Bound);\n\n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            ItemsList.DataSource = CreateDataSource();\n            ItemsList.DataBind();\n         }\n\n      }\n\n      void Item_Bound(Object sender, DataListItemEventArgs e)\n      {\n\n         if (e.Item.ItemType == ListItemType.Item || \n             e.Item.ItemType == ListItemType.AlternatingItem)\n         {\n\n            // Retrieve the Label control in the current DataListItem.\n            Label PriceLabel = (Label)e.Item.FindControl(&quot;PriceLabel&quot;);\n\n            // Retrieve the text of the CurrencyColumn from the DataListItem\n            // and convert the value to a Double.\n            Double Price = Convert.ToDouble(\n                ((DataRowView)e.Item.DataItem).Row.ItemArray[2].ToString());\n\n            // Format the value as currency and redisplay it in the DataList.\n            PriceLabel.Text = Price.ToString(&quot;c&quot;);\n\n         }\n\n      }\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataList ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           BorderColor=&quot;black&quot;\n           CellPadding=&quot;5&quot;\n           CellSpacing=&quot;5&quot;\n           RepeatDirection=&quot;Vertical&quot;\n           RepeatLayout=&quot;Table&quot;\n           RepeatColumns=&quot;3&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            List of items\n\n         &lt;/HeaderTemplate&gt;\n               \n         &lt;ItemTemplate&gt;\n\n            Description: &lt;br /&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price: \n            &lt;asp:Label id=&quot;PriceLabel&quot;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event is raised when an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control is created.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemDataBound\" data-linktype=\"relative-path\">ItemDataBound</a> event is raised when an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control is data bound to a source.  </p>\n<p> When you create a DataListItemEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataListItemEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListItemEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListItemEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListItemEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListItemEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListItemEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"31d2c16d-3be2-ebdc-58d3-c9be8df4f6f1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  and  events of the  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DataListItemEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataListItemEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.DataListItemEventHandler","System.Web.UI.WebControls.DataListItemEventHandler..ctor","System.Web.UI.WebControls.DataListItemEventHandler.Invoke","System.Web.UI.WebControls.DataListItemEventHandler.BeginInvoke","System.Web.UI.WebControls.DataListItemEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DataListItemEventHandler","System::Web::UI::WebControls::DataListItemEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"31d2c16d-3be2-ebdc-58d3-c9be8df4f6f1","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/DataListItemEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataListItemEventHandler delegate | Microsoft Docs","_op_ogTitle":"DataListItemEventHandler delegate","description":"Represents the method that will handle the  and  events of the  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DataListItemEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datalistitemeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datalistitemeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.DataListItemEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}