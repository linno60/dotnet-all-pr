{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EncryptedData</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the <code>&lt;EncryptedData&gt;</code> element in XML encryption. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class EncryptedData : System.Security.Cryptography.Xml.EncryptedType</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype\" data-linktype=\"relative-path\">EncryptedType</a></span></div><span class=\"lang-csharp\">EncryptedData</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_AddProperty_System_Security_Cryptography_Xml_EncryptionProperty_\" data-linktype=\"relative-path\">AddProperty(EncryptionProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_CipherData\" data-linktype=\"relative-path\">CipherData</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_Encoding\" data-linktype=\"relative-path\">Encoding</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_EncryptionMethod\" data-linktype=\"relative-path\">EncryptionMethod</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_EncryptionProperties\" data-linktype=\"relative-path\">EncryptionProperties</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_Id\" data-linktype=\"relative-path\">Id</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_KeyInfo\" data-linktype=\"relative-path\">KeyInfo</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_MimeType\" data-linktype=\"relative-path\">MimeType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedtype#System_Security_Cryptography_Xml_EncryptedType_Type\" data-linktype=\"relative-path\">Type</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to encrypt and decrypt an XML element by using the EncryptedData class. This example then displays various properties of the EncryptedData class to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"Cryptography.XML.EncryptedData#1\">Imports System\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n        &#39; Create an XmlDocument object.\n        Dim xmlDoc As New XmlDocument()\n\n        &#39; Load an XML file into the XmlDocument object.\n        Try\n            xmlDoc.PreserveWhitespace = True\n            xmlDoc.Load(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n\n        &#39; Create a new RSA key.  This key will encrypt a symmetric key,\n        &#39; which will then be imbedded in the XML document.  \n        Dim rsaKey As New RSACryptoServiceProvider()\n\n\n        Try\n            &#39; Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Inspect the EncryptedKey element.\n            InspectElement(xmlDoc)\n\n            &#39; Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;)\n\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear the RSA key.\n            rsaKey.Clear()\n        End Try\n\n    End Sub\n\n\n    Sub Encrypt(ByVal Doc As XmlDocument, ByVal ElementToEncryptParam As String, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If ElementToEncryptParam Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementToEncrypt&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Find the specified element in the XmlDocument\n        &#39; object and create a new XmlElemnt object.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        Dim elementToEncrypt As XmlElement = Doc.GetElementsByTagName(ElementToEncryptParam)(0)\n\n\n        &#39; Throw an XmlException if the element was not found.\n        If elementToEncrypt Is Nothing Then\n            Throw New XmlException(&quot;The specified element was not found&quot;)\n        End If\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a new instance of the EncryptedXml class \n        &#39; and use it to encrypt the XmlElement with the \n        &#39; a new random symmetric key.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a 256 bit Rijndael key.\n        Dim sessionKey As New RijndaelManaged()\n        sessionKey.KeySize = 256\n\n        Dim eXml As New EncryptedXml()\n\n        Dim encryptedElement As Byte() = eXml.EncryptData(elementToEncrypt, sessionKey, False)\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Construct an EncryptedData object and populate\n        &#39; it with the desired encryption information.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim edElement As New EncryptedData()\n        edElement.Type = EncryptedXml.XmlEncElementUrl\n\n        &#39; Create an EncryptionMethod element so that the \n        &#39; receiver knows which algorithm to use for decryption.\n        edElement.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncAES256Url)\n\n        &#39; Encrypt the session key and add it to an EncryptedKey element.\n        Dim ek As New EncryptedKey()\n\n        Dim encryptedKey As Byte() = EncryptedXml.EncryptKey(sessionKey.Key, Alg, False)\n\n        ek.CipherData = New CipherData(encryptedKey)\n\n        ek.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncRSA15Url)\n\n        &#39; Set the KeyInfo element to specify the\n        &#39; name of the RSA key.\n        &#39; Create a new KeyInfo element.\n        edElement.KeyInfo = New KeyInfo()\n\n        &#39; Create a new KeyInfoName element.\n        Dim kin As New KeyInfoName()\n\n        &#39; Specify a name for the key.\n        kin.Value = KeyName\n\n        &#39; Add the KeyInfoName element to the \n        &#39; EncryptedKey object.\n        ek.KeyInfo.AddClause(kin)\n\n        &#39; Add the encrypted key to the \n        &#39; EncryptedData object.\n        edElement.KeyInfo.AddClause(New KeyInfoEncryptedKey(ek))\n\n        &#39; Add the encrypted element data to the \n        &#39; EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Replace the element from the original XmlDocument\n        &#39; object with the EncryptedData element.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, False)\n\n    End Sub\n\n\n    Sub Decrypt(ByVal Doc As XmlDocument, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39; Create a new EncryptedXml object.\n        Dim exml As New EncryptedXml(Doc)\n\n        &#39; Add a key-name mapping.\n        &#39; This method can only decrypt documents\n        &#39; that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg)\n\n        &#39; Decrypt the element.\n        exml.DecryptDocument()\n\n    End Sub\n\n\n    Sub InspectElement(ByVal Doc As XmlDocument)\n        &#39; Get the EncryptedData element from the XMLDocument object.\n        Dim encryptedData As XmlElement = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)(0)\n\n        &#39; Create a new EncryptedData object.\n        Dim encData As New EncryptedData()\n\n        &#39; Load the XML from the document to\n        &#39; initialize the EncryptedData object.\n        encData.LoadXml(encryptedData)\n\n        &#39; Display the properties.\n        &#39; Most values are Null by default.\n\n\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding)\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml)\n        If encData.EncryptionProperties.Count &gt;= 1 Then\n            Console.WriteLine(&quot;EncryptedData.EncryptionProperties: &quot; + encData.EncryptionProperties(0).GetXml().InnerXml)\n        End If\n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id)\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType)\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.XML.EncryptedData#1\">using System;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Program\n{\n\tstatic void Main(string[] args)\n\t{\n\n\t\t// Create an XmlDocument object.\n\t\tXmlDocument xmlDoc = new XmlDocument();\n\n\t\t// Load an XML file into the XmlDocument object.\n\t\ttry\n\t\t{\n\t\t\txmlDoc.PreserveWhitespace = true;\n\t\t\txmlDoc.Load(&quot;test.xml&quot;);\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tConsole.WriteLine(e.Message);\n\t\t}\n\n\t\t// Create a new RSA key.  This key will encrypt a symmetric key,\n\t\t// which will then be imbedded in the XML document.  \n\t\tRSA rsaKey = new RSACryptoServiceProvider();\n\n\n\t\ttry\n\t\t{\n\t\t\t// Encrypt the &quot;creditcard&quot; element.\n\t\t\tEncrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;);\n\n\t\t\t// Inspect the EncryptedKey element.\n\t\t\tInspectElement(xmlDoc);\n\n\t\t\t// Decrypt the &quot;creditcard&quot; element.\n\t\t\tDecrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;);\n\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tConsole.WriteLine(e.Message);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\t// Clear the RSA key.\n\t\t\trsaKey.Clear();\n\t\t}\n\n\t}\n\n\tpublic static void Encrypt(XmlDocument Doc, string ElementToEncrypt, RSA Alg, string KeyName)\n\t{\n\t\t// Check the arguments.  \n\t\tif (Doc == null)\n\t\t\tthrow new ArgumentNullException(&quot;Doc&quot;);\n\t\tif (ElementToEncrypt == null)\n\t\t\tthrow new ArgumentNullException(&quot;ElementToEncrypt&quot;);\n\t\tif (Alg == null)\n\t\t\tthrow new ArgumentNullException(&quot;Alg&quot;);\n\n\t\t////////////////////////////////////////////////\n\t\t// Find the specified element in the XmlDocument\n\t\t// object and create a new XmlElemnt object.\n\t\t////////////////////////////////////////////////\n\n\t\tXmlElement elementToEncrypt = Doc.GetElementsByTagName(ElementToEncrypt)[0] as XmlElement;\n\n\t\t// Throw an XmlException if the element was not found.\n\t\tif (elementToEncrypt == null)\n\t\t{\n\t\t\tthrow new XmlException(&quot;The specified element was not found&quot;);\n\n\t\t}\n\n\t\t//////////////////////////////////////////////////\n\t\t// Create a new instance of the EncryptedXml class \n\t\t// and use it to encrypt the XmlElement with the \n\t\t// a new random symmetric key.\n\t\t//////////////////////////////////////////////////\n\n\t\t// Create a 256 bit Rijndael key.\n\t\tRijndaelManaged sessionKey = new RijndaelManaged();\n\t\tsessionKey.KeySize = 256;\n\n\t\tEncryptedXml eXml = new EncryptedXml();\n\n\t\tbyte[] encryptedElement = eXml.EncryptData(elementToEncrypt, sessionKey, false);\n\n\t\t////////////////////////////////////////////////\n\t\t// Construct an EncryptedData object and populate\n\t\t// it with the desired encryption information.\n\t\t////////////////////////////////////////////////\n\n\n\t\tEncryptedData edElement = new EncryptedData();\n\t\tedElement.Type = EncryptedXml.XmlEncElementUrl;\n\n\t\t// Create an EncryptionMethod element so that the \n\t\t// receiver knows which algorithm to use for decryption.\n\n\t\tedElement.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncAES256Url);\n\n\t\t// Encrypt the session key and add it to an EncryptedKey element.\n\t\tEncryptedKey ek = new EncryptedKey();\n\n\t\tbyte[] encryptedKey = EncryptedXml.EncryptKey(sessionKey.Key, Alg, false);\n\n\t\tek.CipherData = new CipherData(encryptedKey);\n\n\t\tek.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncRSA15Url);\n\n\t\t// Set the KeyInfo element to specify the\n\t\t// name of the RSA key.\n\n\t\t// Create a new KeyInfo element.\n\t\tedElement.KeyInfo = new KeyInfo();\n\n\t\t// Create a new KeyInfoName element.\n\t\tKeyInfoName kin = new KeyInfoName();\n\n\t\t// Specify a name for the key.\n\t\tkin.Value = KeyName;\n\n\t\t// Add the KeyInfoName element to the \n\t\t// EncryptedKey object.\n\t\tek.KeyInfo.AddClause(kin);\n\n\t\t// Add the encrypted key to the \n\t\t// EncryptedData object.\n\n\t\tedElement.KeyInfo.AddClause(new KeyInfoEncryptedKey(ek));\n\n\t\t// Add the encrypted element data to the \n\t\t// EncryptedData object.\n\t\tedElement.CipherData.CipherValue = encryptedElement;\n\n\t\t////////////////////////////////////////////////////\n\t\t// Replace the element from the original XmlDocument\n\t\t// object with the EncryptedData element.\n\t\t////////////////////////////////////////////////////\n\n\t\tEncryptedXml.ReplaceElement(elementToEncrypt, edElement, false);\n\n\t}\n\n\tpublic static void Decrypt(XmlDocument Doc, RSA Alg, string KeyName)\n\t{\n\t\t// Check the arguments.  \n\t\tif (Doc == null)\n\t\t\tthrow new ArgumentNullException(&quot;Doc&quot;);\n\t\tif (Alg == null)\n\t\t\tthrow new ArgumentNullException(&quot;Alg&quot;);\n\t\tif (KeyName == null)\n\t\t\tthrow new ArgumentNullException(&quot;KeyName&quot;);\n\n\t\t// Create a new EncryptedXml object.\n\t\tEncryptedXml exml = new EncryptedXml(Doc);\n\n\t\t// Add a key-name mapping.\n\t\t// This method can only decrypt documents\n\t\t// that present the specified key name.\n\t\texml.AddKeyNameMapping(KeyName, Alg);\n\n\t\t// Decrypt the element.\n\t\texml.DecryptDocument();\n\n\t}\n\n\tstatic void InspectElement(XmlDocument Doc)\n\t{\n\t\t// Get the EncryptedData element from the XMLDocument object.\n\t\tXmlElement encryptedData = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)[0] as XmlElement;\n\n\t\t// Create a new EncryptedData object.\n\t\tEncryptedData encData = new EncryptedData();\n\n\t\t// Load the XML from the document to\n\t\t// initialize the EncryptedData object.\n\t\tencData.LoadXml(encryptedData);\n\n\t\t// Display the properties.\n\t\t// Most values are Null by default.\n\n\n\t\t\n\t\tConsole.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml);\n\t\tConsole.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding);\n\t\tConsole.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml);\n\t\tif (encData.EncryptionProperties.Count &gt;= 1)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;EncryptedData.EncryptionProperties: &quot; + encData.EncryptionProperties[0].GetXml().InnerXml);\n\t\t}\n\n\t\tConsole.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id);\n\t\tConsole.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml);\n\t\tConsole.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType);\n\t}\n\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This class is used to represent the <code>&lt;EncryptedData&gt;</code> element in XML encryption. This element is the core element in XML encryption. Its child element, <code>&lt;CipherData&gt;</code>, contains encrypted data. The <code>&lt;EncryptedData&gt;</code> element replaces an encrypted element or serves as the new document root.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptedData__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncryptedData()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encrypteddata\" data-linktype=\"relative-path\">EncryptedData</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EncryptedData ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor creates a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encrypteddata\" data-linktype=\"relative-path\">EncryptedData</a> class. For more information about XML encryption standards, see the &quot;XML Encryption Syntax and Processing&quot; document at <a href=\"http://www.w3.org/TR/xmlenc-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmlenc-core/</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptedData_GetXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the XML representation of the <a class=\"xref\" href=\"system.security.cryptography.xml.encrypteddata\" data-linktype=\"relative-path\">EncryptedData</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Xml.XmlElement GetXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> that represents the <code>&lt;EncryptedData&gt;</code> element in XML encryption.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.encrypteddata\" data-linktype=\"relative-path\">EncryptedData</a> value is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to output the <code>&lt;EncryptedData&gt;</code> element.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptedData_LoadXml_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadXml(XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads XML information into the <code>&lt;EncryptedData&gt;</code> element in XML encryption.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void LoadXml (System.Xml.XmlElement value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object representing an XML element to use for the <code>&lt;EncryptedData&gt;</code> element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>value</code> provided is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>value</code> parameter does not contain a &lt;<code>CypherData</code>&gt; node.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to load an existing XML element into the <code>&lt;EncryptedData&gt;</code> element represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.encrypteddata\" data-linktype=\"relative-path\">EncryptedData</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.EncryptedData.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptedData\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptedData..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptedData.GetXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptedData.LoadXml\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"a87fa7a1-f19d-1262-7b26-58dca765a145\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the &amp;lt;EncryptedData&amp;gt; element in XML encryption. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.EncryptedData\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.EncryptedData.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Xml.EncryptedData","System.Security.Cryptography.Xml.EncryptedData..ctor","System.Security.Cryptography.Xml.EncryptedData.GetXml","System.Security.Cryptography.Xml.EncryptedData.LoadXml"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.EncryptedData","System::Security::Cryptography::Xml::EncryptedData","System.Security.Cryptography.Xml.EncryptedData.#ctor","System::Security::Cryptography::Xml::EncryptedData::#ctor","System.Security.Cryptography.Xml.EncryptedData.GetXml","System::Security::Cryptography::Xml::EncryptedData::GetXml","System.Security.Cryptography.Xml.EncryptedData.LoadXml","System::Security::Cryptography::Xml::EncryptedData::LoadXml"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"a87fa7a1-f19d-1262-7b26-58dca765a145","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography.Xml/EncryptedData.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EncryptedData class | Microsoft Docs","_op_ogTitle":"EncryptedData class","description":"Represents the &lt;EncryptedData&gt; element in XML encryption. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.EncryptedData","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.encrypteddata","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.encrypteddata","fileRelativePath":"api/System.Security.Cryptography.Xml.EncryptedData.html"},"themesRelativePathToOutputRoot":"_themes/"}