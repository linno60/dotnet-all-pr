{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IComparable&lt;T&gt;</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IComparable&lt;in T&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>T</td>\r\n  \t\t\t<td><p>The type of object to compare.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object. For example, one number can be larger than a second number, and one string can appear in alphabetical order before another. It requires that implementing types define a single method, <a class=\"xref\" href=\"system.icomparable-1#System_IComparable_1_CompareTo__0_\" data-linktype=\"relative-path\">CompareTo(T)</a>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type. Typically, the method is not called directly from developer code. Instead, it is called automatically by methods such as <a class=\"xref\" href=\"system.collections.generic.list-1#System_Collections_Generic_List_1_Sort\" data-linktype=\"relative-path\">System.Collections.Generic.List&lt;T&gt;.Sort()</a> and <a class=\"xref\" href=\"system.collections.generic.sortedlist-2#System_Collections_Generic_SortedList_2_Add_\" data-linktype=\"relative-path\">Add</a>.  </p>\n<p> Typically, types that provide an IComparable(T) implementation also implement the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">IEquatable&lt;T&gt;</a> interface. The <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">IEquatable&lt;T&gt;</a> interface defines the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method, which determines the equality of instances of the implementing type.  </p>\n<p> The implementation of the <a class=\"xref\" href=\"system.icomparable-1#System_IComparable_1_CompareTo__0_\" data-linktype=\"relative-path\">CompareTo(T)</a> method must return an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that has one of three values, as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Less than zero</td>\n<td>This object precedes the object specified by the <a class=\"xref\" href=\"system.icomparable-1#System_IComparable_1_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method in the sort order.</td>\n</tr>\n<tr>\n<td>Zero</td>\n<td>This current instance occurs in the same position in the sort order as the object specified by the <a class=\"xref\" href=\"system.icomparable-1#System_IComparable_1_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method argument.</td>\n</tr>\n<tr>\n<td>Greater than zero</td>\n<td>This current instance follows the object specified by the <a class=\"xref\" href=\"system.icomparable-1#System_IComparable_1_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method argument in the sort order.</td>\n</tr>\n</tbody>\n</table>\n<p> All numeric types (such as <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> and <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>) implement IComparable(T), as do <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>, and <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Custom types should also provide their own implementation of IComparable(T) to enable object instances to be ordered or sorted.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IComparable_1_CompareTo__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CompareTo(T)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CompareTo (T other);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>other</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object to compare with this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value that indicates the relative order of the objects being compared. The return value has these meanings:  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Meaning<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> This instance precedes <code>other</code> in the sort order.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance occurs in the same position in the sort order as <code>other</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> This instance follows <code>other</code> in the sort order.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>CompareTo provides a strongly typed comparison method for ordering members of a generic collection object. Because of this, it is usually not called directly from developer code. Instead, it is called automatically by methods such as <a class=\"xref\" href=\"system.collections.generic.list-1#System_Collections_Generic_List_1_Sort\" data-linktype=\"relative-path\">System.Collections.Generic.List&lt;T&gt;.Sort()</a> and <a class=\"xref\" href=\"system.collections.generic.sortedlist-2#System_Collections_Generic_SortedList_2_Add_\" data-linktype=\"relative-path\">Add</a>.  </p>\n<p> This method is only a definition and must be implemented by a specific class or value type to have effect. The meaning of the comparisons specified in the Return Values section (&quot;precedes&quot;, &quot;occurs in the same position as&quot;, and &quot;follows) depends on the particular implementation.  </p>\n<p> By definition, any object compares greater than <code>null</code>, and two null references compare equal to each other.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.IComparable-1.yml\">\r\n<meta name=\"APIName\" content=\"System.IComparable&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.IComparable&lt;T&gt;.CompareTo\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-22 02:45 AM\">\r\n<meta name=\"document_id\" content=\"32321fc7-cbca-2056-dd9b-ce29740666ba\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IComparable`1\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.IComparable-1.yml","open_to_public_contributors":false,"api_name":["System.IComparable<T>","System.IComparable<T>.CompareTo"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IComparable`1","System::IComparable`1","System.IComparable`1.CompareTo","System::IComparable`1::CompareTo"],"dev_langs":["csharp"],"updated_at":"2017-03-22 02:45 AM","document_id":"32321fc7-cbca-2056-dd9b-ce29740666ba","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/xml/System/IComparable`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IComparable<T> interface | Microsoft Docs","_op_ogTitle":"IComparable<T> interface","description":"Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.\n","toc_asset_id":"api/_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.IComparable`1","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/api/system.icomparable-1","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/api/system.icomparable-1","fileRelativePath":"api/System.IComparable-1.html"},"themesRelativePathToOutputRoot":"_themes/"}