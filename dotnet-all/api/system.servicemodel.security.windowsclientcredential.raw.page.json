{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">WindowsClientCredential</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Allows you to specify properties related to Windows credentials to be used to represent the client.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class WindowsClientCredential</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">WindowsClientCredential</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example creates a client and gets a reference to the WindowsClientCredential. The code then changes the <a class=\"xref\" href=\"system.servicemodel.security.windowsclientcredential#System_ServiceModel_Security_WindowsClientCredential_AllowedImpersonationLevel_\" data-linktype=\"relative-path\">AllowedImpersonationLevel</a> to a new value.  </p>\n<pre><code class=\"lang-cs\" name=\"WindowsClientCredential#1\">// Create a service host.\nEndpointAddress ea = new EndpointAddress(&quot;http://localhost/Calculator&quot;);\nWSHttpBinding b = new WSHttpBinding(SecurityMode.Message);\nb.Security.Message.ClientCredentialType = MessageCredentialType.Windows;\n\n// Create a client. The code is not shown here. See the WCF samples\n// for an example of the CalculatorClient code.\n\nCalculatorClient cc = new CalculatorClient(b, ea);\n// Get a reference to the Windows client credential object.\nWindowsClientCredential winCred= cc.ClientCredentials.Windows;\nConsole.WriteLine(&quot;AllowedImpersonationLevel: {0}&quot;, \n    winCred.AllowedImpersonationLevel);\nConsole.WriteLine(&quot;AllowNtlm: {0}&quot;, winCred.AllowNtlm);\nConsole.WriteLine(&quot;Domain: {0}&quot;, winCred.ClientCredential.Domain);\n\nConsole.ReadLine();\n// Change the AllowedImpersonationLevel.\nwinCred.AllowedImpersonationLevel = \n    System.Security.Principal.TokenImpersonationLevel.Impersonation;\n\nConsole.WriteLine(&quot;Changed AllowedImpersonationLevel: {0}&quot;, \n    winCred.AllowedImpersonationLevel);\nConsole.ReadLine();\n// Open the calculator and use it.\n//cc.Open();\n//Console.WriteLine(cc.Add(11, 11));\n\n//// Close the client.\n//cc.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"WindowsClientCredential#1\">&#39; Create a service host.\nDim ea As New EndpointAddress(&quot;http://localhost/Calculator&quot;)\nDim b As New WSHttpBinding(SecurityMode.Message)\nb.Security.Message.ClientCredentialType = _\nMessageCredentialType.Windows\n\n&#39; Create a client. The code is not shown here. See the WCF samples\n&#39; for an example of the CalculatorClient code.\nDim cc As New CalculatorClient(b, ea)\n&#39; Get a reference to the Windows client credential object.\nDim winCred As WindowsClientCredential = cc.ClientCredentials.Windows\nConsole.WriteLine(&quot;AllowedImpersonationLevel: {0}&quot;, _\n                 winCred.AllowedImpersonationLevel)\nConsole.WriteLine(&quot;AllowNtlm: {0}&quot;, winCred.AllowNtlm)\nConsole.WriteLine(&quot;Domain: {0}&quot;, winCred.ClientCredential.Domain)\n\nConsole.ReadLine()\n&#39; Change the AllowedImpersonationLevel.\nwinCred.AllowedImpersonationLevel = _\nSystem.Security.Principal.TokenImpersonationLevel.Impersonation\n\nConsole.WriteLine(&quot;Changed AllowedImpersonationLevel: {0}&quot;, _\nwinCred.AllowedImpersonationLevel)\nConsole.ReadLine()\n&#39; Open the calculator and use it.\n&#39; cc.Open()\n&#39; Console.WriteLine(cc.Add(11, 11))\n&#39; Close the client.\n&#39; cc.Close()\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The WindowsClientCredential enables the setting of Windows client properties used when communicating with a service. The <a class=\"xref\" href=\"system.servicemodel.security.windowsclientcredential#System_ServiceModel_Security_WindowsClientCredential_AllowedImpersonationLevel_\" data-linktype=\"relative-path\">AllowedImpersonationLevel</a> sets the level of impersonation the service can assume when impersonating the client. The <a class=\"xref\" href=\"system.servicemodel.security.windowsclientcredential#System_ServiceModel_Security_WindowsClientCredential_ClientCredential_\" data-linktype=\"relative-path\">ClientCredential</a> enables a client to authenticate with username and password to the service. The <a class=\"xref\" href=\"system.servicemodel.security.windowsclientcredential#System_ServiceModel_Security_WindowsClientCredential_AllowNtlm_\" data-linktype=\"relative-path\">AllowNtlm</a> determines whether NTLM can be used to authenticate the client if Kerberos is not used.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Security_WindowsClientCredential_AllowedImpersonationLevel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowedImpersonationLevel</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the allowed impersonation level.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property specifies the impersonation level granted by the client to the server when using Windows SSPI Negotiate authentication. Note that the impersonation level obtained by the server when it impersonates the client token is not solely a function of this setting. It is also a function of the associated privileges and domain settings for the account in which the service is running.  </p>\n<p> The client must explicitly set the allowed impersonation level using this property.  </p>\n<p> When the client specifies anonymous impersonation the client always authenticates to the service as anonymous even when no impersonation is performed on the service. This is due to underlying Windows operating system behavior.  </p>\n<p> For more information about Windows impersonation, go to <a href=\"http://go.microsoft.com/fwlink/?LinkId=96178\" data-linktype=\"external\">Impersonating and Reverting</a>. For more information about impersonation using Windows Communication Foundation (WCF), see <a href=\"../topic/delegation%20and%20impersonation%20with%20wcf\" data-linktype=\"relative-path\">Delegation and Impersonation</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Security_WindowsClientCredential_AllowNtlm\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowNtlm</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AllowNtlm { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, <code>false</code> otherwise. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Setting this property to <code>true</code> allows authentication to downgrade to NTLM if Kerberos is not available.  </p>\n<p> Setting this property to <code>false</code> causes Windows Communication Foundation (WCF) to make a best-effort to throw an exception if NTLM is used. Note that setting this property to <code>false</code> may not prevent NTLM credentials from being sent over the wire.  </p>\n<p> Certain deployments such as workgroups and local accounts require NTLM authentication. Setting this flag to <code>false</code> in such deployments result in authentication failures when using WCF. In a deployment that requires mutual authentication (only supported by Kerberos), set this flag to <code>false</code>.  </p>\n<p> NTLM (Windows NT LAN Manager) is the authentication protocol used on networks that include systems running the Windows NT operating system, and on stand-alone systems.  </p>\n<p> The Microsoft Kerberos security package adds greater security than NTLM to systems on a network. Although Microsoft Kerberos is the protocol of choice, NTLM is still supported and must be used for network authentication if the network includes systems running versions of Windows NT 4.0 and earlier, and on stand-alone systems.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_Security_WindowsClientCredential_ClientCredential\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClientCredential</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the Windows client credential.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.NetworkCredential ClientCredential { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> for the client.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default, the current thread&#39;s credentials are used by WCF for doing Windows SSPI Negotiate authentication.  </p>\n<p> To authenticate the client as another principal, change the properties of the instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class that is returned by this property. Alternatively, create a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class and assign it to this property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Security.WindowsClientCredential.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Security.WindowsClientCredential\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Security.WindowsClientCredential.AllowNtlm\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Security.WindowsClientCredential.ClientCredential\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"96ccaad7-5594-559b-eb04-82af4b7113df\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Allows you to specify properties related to Windows credentials to be used to represent the client.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.servicemodel.security/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Security.WindowsClientCredential\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.Security.WindowsClientCredential.yml","open_to_public_contributors":false,"api_name":["System.ServiceModel.Security.WindowsClientCredential","System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel","System.ServiceModel.Security.WindowsClientCredential.AllowNtlm","System.ServiceModel.Security.WindowsClientCredential.ClientCredential"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Security.WindowsClientCredential","System::ServiceModel::Security::WindowsClientCredential","System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel","System::ServiceModel::Security::WindowsClientCredential::AllowedImpersonationLevel","System.ServiceModel.Security.WindowsClientCredential.AllowNtlm","System::ServiceModel::Security::WindowsClientCredential::AllowNtlm","System.ServiceModel.Security.WindowsClientCredential.ClientCredential","System::ServiceModel::Security::WindowsClientCredential::ClientCredential"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"96ccaad7-5594-559b-eb04-82af4b7113df","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WindowsClientCredential class | Microsoft Docs","_op_ogTitle":"WindowsClientCredential class","description":"Allows you to specify properties related to Windows credentials to be used to represent the client.\n","toc_asset_id":"api/_splitted/System.ServiceModel.Security/toc.json","toc_rel":"_splitted/System.ServiceModel.Security/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Security.WindowsClientCredential","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.security.windowsclientcredential","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.security.windowsclientcredential","fileRelativePath":"api/System.ServiceModel.Security.WindowsClientCredential.html"},"themesRelativePathToOutputRoot":"_themes/"}