{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CodeCatchClause</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a <code>catch</code> exception block of a <code>try/catch</code> statement.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class CodeCatchClause</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">CodeCatchClause</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example code demonstrates using CodeCatchClause objects to define exception handling clauses of a try...catch block.  </p>\n<pre><code class=\"lang-cs\" name=\"CodeTryCatchFinallyExample#2\">// Declares a type to contain a try...catch block.\nCodeTypeDeclaration type1 = new CodeTypeDeclaration(&quot;TryCatchTest&quot;);\n\n// Defines a method that throws an exception of type System.ApplicationException.\nCodeMemberMethod method1 = new CodeMemberMethod();\nmethod1.Name = &quot;ThrowApplicationException&quot;;\nmethod1.Statements.Add( new CodeThrowExceptionStatement( \n    new CodeObjectCreateExpression(&quot;System.ApplicationException&quot;, new CodePrimitiveExpression(&quot;Test Application Exception&quot;)) ) );\ntype1.Members.Add( method1 );\n\n// Defines a constructor that calls the ThrowApplicationException method from a try block.\nCodeConstructor constructor1 = new CodeConstructor();\nconstructor1.Attributes = MemberAttributes.Public;            \ntype1.Members.Add( constructor1 );    \n\n// Defines a try statement that calls the ThrowApplicationException method.\nCodeTryCatchFinallyStatement try1 = new CodeTryCatchFinallyStatement();\ntry1.TryStatements.Add( new CodeMethodInvokeExpression( new CodeThisReferenceExpression(), &quot;ThrowApplicationException&quot; ) );\nconstructor1.Statements.Add( try1 );                    \n\n// Defines a catch clause for exceptions of type ApplicationException.\nCodeCatchClause catch1 = new CodeCatchClause(&quot;ex&quot;, new CodeTypeReference(&quot;System.ApplicationException&quot;));\ncatch1.Statements.Add( new CodeCommentStatement(&quot;Handle any System.ApplicationException here.&quot;) );\ntry1.CatchClauses.Add( catch1 );\n\n// Defines a catch clause for any remaining unhandled exception types.\nCodeCatchClause catch2 = new CodeCatchClause(&quot;ex&quot;);\ncatch2.Statements.Add( new CodeCommentStatement(&quot;Handle any other exception type here.&quot;) );\ntry1.CatchClauses.Add( catch2 );\n\n// Defines a finally block by adding to the FinallyStatements collection.\ntry1.FinallyStatements.Add( new CodeCommentStatement(&quot;Handle any finally block statements.&quot;) );\n\n// A C# code generator produces the following source code for the preceeding example code:\n\n//    public class TryCatchTest \n//    {\n//        \n//        public TryCatchTest() \n//        {\n//            try \n//            {\n//                this.ThrowApplicationException();\n//            }\n//            catch (System.ApplicationException ex) \n//            {\n//                // Handle any System.ApplicationException here.\n//            }\n//            catch (System.Exception ex) \n//            {\n//                // Handle any other exception type here.\n//            }\n//          finally {\n//                // Handle any finally block statements.\n//            }\n//        }\n//        \n//        private void ThrowApplicationException() \n//        {\n//            throw new System.ApplicationException(&quot;Test Application Exception&quot;);\n//        }\n//    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"CodeTryCatchFinallyExample#2\">// Declares a type to contain a try...catch block.\nCodeTypeDeclaration^ type1 = gcnew CodeTypeDeclaration( &quot;TryCatchTest&quot; );\n\n// Defines a method that throws an exception of type System.ApplicationException.\nCodeMemberMethod^ method1 = gcnew CodeMemberMethod;\nmethod1-&gt;Name = &quot;ThrowApplicationException&quot;;\narray&lt;CodePrimitiveExpression^&gt;^temp = {gcnew CodePrimitiveExpression( &quot;Test Application Exception&quot; )};\nmethod1-&gt;Statements-&gt;Add( gcnew CodeThrowExceptionStatement( gcnew CodeObjectCreateExpression( &quot;System.ApplicationException&quot;,temp ) ) );\ntype1-&gt;Members-&gt;Add( method1 );\n\n// Defines a constructor that calls the ThrowApplicationException method from a try block.\nCodeConstructor^ constructor1 = gcnew CodeConstructor;\nconstructor1-&gt;Attributes = MemberAttributes::Public;\ntype1-&gt;Members-&gt;Add( constructor1 );\n\n// Defines a try statement that calls the ThrowApplicationException method.\nCodeTryCatchFinallyStatement^ try1 = gcnew CodeTryCatchFinallyStatement;\ntry1-&gt;TryStatements-&gt;Add( gcnew CodeMethodInvokeExpression( gcnew CodeThisReferenceExpression,&quot;ThrowApplicationException&quot;, nullptr ) );\nconstructor1-&gt;Statements-&gt;Add( try1 );\n\n// Defines a catch clause for exceptions of type ApplicationException.\nCodeCatchClause^ catch1 = gcnew CodeCatchClause( &quot;ex&quot;,gcnew CodeTypeReference( &quot;System.ApplicationException&quot; ) );\ncatch1-&gt;Statements-&gt;Add( gcnew CodeCommentStatement( &quot;Handle any System.ApplicationException here.&quot; ) );\ntry1-&gt;CatchClauses-&gt;Add( catch1 );\n\n// Defines a catch clause for any remaining unhandled exception types.\nCodeCatchClause^ catch2 = gcnew CodeCatchClause( &quot;ex&quot; );\ncatch2-&gt;Statements-&gt;Add( gcnew CodeCommentStatement( &quot;Handle any other exception type here.&quot; ) );\ntry1-&gt;CatchClauses-&gt;Add( catch2 );\n\n// Defines a finally block by adding to the FinallyStatements collection.\ntry1-&gt;FinallyStatements-&gt;Add( gcnew CodeCommentStatement( &quot;Handle any finally block statements.&quot; ) );\n\n// A C# code generator produces the following source code for the preceeding example code:\n//    public class TryCatchTest \n//    {\n//        \n//        public TryCatchTest() \n//        {\n//            try \n//            {\n//                this.ThrowApplicationException();\n//            }\n//            catch (System.ApplicationException ex) \n//            {\n//                // Handle any System.ApplicationException here.\n//            }\n//            catch (System.Exception ex) \n//            {\n//                // Handle any other exception type here.\n//            }\n//          finally {\n//                // Handle any finally block statements.\n//            }\n//        }\n//        \n//        private void ThrowApplicationException() \n//        {\n//            throw new System.ApplicationException(&quot;Test Application Exception&quot;);\n//        }\n//    }\n</code></pre><pre><code class=\"lang-vb\" name=\"CodeTryCatchFinallyExample#2\">&#39; Declares a type to contain a try...catch block.\nDim type1 As New CodeTypeDeclaration(&quot;TryCatchTest&quot;)\n\n&#39; Defines a method that throws an exception of type System.ApplicationException.\nDim method1 As New CodeMemberMethod()\nmethod1.Name = &quot;ThrowApplicationException&quot;\nmethod1.Statements.Add(New CodeThrowExceptionStatement( _\n    New CodeObjectCreateExpression(&quot;System.ApplicationException&quot;, New CodePrimitiveExpression(&quot;Test Application Exception&quot;))))\ntype1.Members.Add(method1)\n\n&#39; Defines a constructor that calls the ThrowApplicationException method from a try block.\nDim constructor1 As New CodeConstructor()\nconstructor1.Attributes = MemberAttributes.Public\ntype1.Members.Add(constructor1)\n\n&#39; Defines a try statement that calls the ThrowApplicationException method.\nDim try1 As New CodeTryCatchFinallyStatement()\ntry1.TryStatements.Add(New CodeMethodInvokeExpression(New CodeThisReferenceExpression(), &quot;ThrowApplicationException&quot;))\nconstructor1.Statements.Add(try1)\n\n&#39; Defines a catch clause for exceptions of type ApplicationException.\nDim catch1 As New CodeCatchClause(&quot;ex&quot;, New CodeTypeReference(&quot;System.ApplicationException&quot;))\ncatch1.Statements.Add(New CodeCommentStatement(&quot;Handle any System.ApplicationException here.&quot;))\ntry1.CatchClauses.Add(catch1)\n\n&#39; Defines a catch clause for any remaining unhandled exception types.\nDim catch2 As New CodeCatchClause(&quot;ex&quot;)\ncatch2.Statements.Add(New CodeCommentStatement(&quot;Handle any other exception type here.&quot;))\ntry1.CatchClauses.Add(catch2)\n\n&#39; Defines a finally block by adding to the FinallyStatements collection.\ntry1.FinallyStatements.Add(New CodeCommentStatement(&quot;Handle any finally block statements.&quot;))\n\n&#39; A Visual Basic code generator produces the following Visual Basic source \n&#39; code for the preceeding example code:\n\n&#39;            &#39;------------------------------------------------------------------------------\n&#39;            &#39; &lt;auto-generated&gt;\n&#39;            &#39;     This code was generated by a tool.\n&#39;            &#39;     Runtime Version:2.0.50727.42\n&#39;            &#39;\n&#39;            &#39;     Changes to this file may cause incorrect behavior and will be lost if\n&#39;            &#39;     the code is regenerated.\n&#39;            &#39; &lt;/auto-generated&gt;\n&#39;            &#39;------------------------------------------------------------------------------\n\n&#39;Option Strict Off\n&#39;Option Explicit On\n\n&#39;Imports System\n\n&#39;Namespace Samples\n\n&#39;            Public Class TryCatchTest\n\n&#39;                Public Sub New()\n&#39;                    MyBase.New()\n&#39;                    Try\n&#39;                        Me.ThrowApplicationException()\n&#39;                    Catch ex As System.ApplicationException\n&#39;                        &#39;Handle any System.ApplicationException here.\n&#39;                    Catch ex As System.Exception\n&#39;                        &#39;Handle any other exception type here.\n&#39;                    Finally\n&#39;                        &#39;Handle any finally block statements.\n&#39;                    End Try\n&#39;                End Sub\n\n&#39;                Private Sub ThrowApplicationException()\n&#39;                    Throw New System.ApplicationException(&quot;Test Application Exception&quot;)\n&#39;                End Sub\n&#39;            End Class\n&#39;        End Namespace\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>CodeCatchClause can be used to represent a <code>catch</code> exception block of a <code>try/catch</code> statement.  </p>\n<p> The <a class=\"xref\" href=\"system.codedom.codecatchclause#System_CodeDom_CodeCatchClause_CatchExceptionType_\" data-linktype=\"relative-path\">CatchExceptionType</a> property specifies the type of exception to catch. The <a class=\"xref\" href=\"system.codedom.codecatchclause#System_CodeDom_CodeCatchClause_LocalName_\" data-linktype=\"relative-path\">LocalName</a> property specifies a name for the variable representing the exception that has been caught. The <a class=\"xref\" href=\"system.codedom.codecatchclause#System_CodeDom_CodeCatchClause_Statements_\" data-linktype=\"relative-path\">Statements</a> collection property contains the statements for the <code>catch</code> block.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCatchClause__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeCatchClause()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codecatchclause\" data-linktype=\"relative-path\">CodeCatchClause</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeCatchClause ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCatchClause__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeCatchClause(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codecatchclause\" data-linktype=\"relative-path\">CodeCatchClause</a> class using the specified local variable name for the exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeCatchClause (string localName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>localName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the local variable declared in the catch clause for the exception. This is optional.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCatchClause__ctor_System_String_System_CodeDom_CodeTypeReference_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeCatchClause(String, CodeTypeReference)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codecatchclause\" data-linktype=\"relative-path\">CodeCatchClause</a> class using the specified local variable name for the exception and exception type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>localName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the local variable declared in the catch clause for the exception. This is optional.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>catchExceptionType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a> that indicates the type of exception to catch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCatchClause__ctor_System_String_System_CodeDom_CodeTypeReference_System_CodeDom_CodeStatement___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodeCatchClause(String, CodeTypeReference, CodeStatement[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codecatchclause\" data-linktype=\"relative-path\">CodeCatchClause</a> class using the specified local variable name for the exception, exception type and statement collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType, System.CodeDom.CodeStatement[] statements);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>localName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the local variable declared in the catch clause for the exception. This is optional.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>catchExceptionType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a> that indicates the type of exception to catch.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>statements</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> objects that represent the contents of the catch block.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCatchClause_CatchExceptionType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CatchExceptionType</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the type of the exception to handle with the catch block.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.CodeDom.CodeTypeReference CatchExceptionType { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a> that indicates the type of the exception to handle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If a value for this property is not specified, the value of this property defaults to <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCatchClause_LocalName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LocalName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the variable name of the exception that the <code>catch</code> clause handles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string LocalName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name for the exception variable that the <code>catch</code> clause handles.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodeCatchClause_Statements\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Statements</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the statements within the catch block.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.CodeDom.CodeStatementCollection Statements { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatementcollection\" data-linktype=\"relative-path\">CodeStatementCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.codedom.codestatementcollection\" data-linktype=\"relative-path\">CodeStatementCollection</a> containing the statements within the catch block.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodeCatchClause.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCatchClause\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCatchClause..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCatchClause.CatchExceptionType\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCatchClause.LocalName\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCatchClause.Statements\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"f2438b19-633d-3a50-9c88-a6fffc2fb41e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a catch exception block of a try/catch statement.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.codedom/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodeCatchClause\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodeCatchClause.yml","open_to_public_contributors":false,"api_name":["System.CodeDom.CodeCatchClause","System.CodeDom.CodeCatchClause..ctor","System.CodeDom.CodeCatchClause.CatchExceptionType","System.CodeDom.CodeCatchClause.LocalName","System.CodeDom.CodeCatchClause.Statements"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodeCatchClause","System::CodeDom::CodeCatchClause","System.CodeDom.CodeCatchClause.#ctor","System::CodeDom::CodeCatchClause::#ctor","System.CodeDom.CodeCatchClause.CatchExceptionType","System::CodeDom::CodeCatchClause::CatchExceptionType","System.CodeDom.CodeCatchClause.LocalName","System::CodeDom::CodeCatchClause::LocalName","System.CodeDom.CodeCatchClause.Statements","System::CodeDom::CodeCatchClause::Statements"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"f2438b19-633d-3a50-9c88-a6fffc2fb41e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.CodeDom/CodeCatchClause.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeCatchClause class | Microsoft Docs","_op_ogTitle":"CodeCatchClause class","description":"Represents a catch exception block of a try/catch statement.\n","toc_asset_id":"api/_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodeCatchClause","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codecatchclause","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codecatchclause","fileRelativePath":"api/System.CodeDom.CodeCatchClause.html"},"themesRelativePathToOutputRoot":"_themes/"}