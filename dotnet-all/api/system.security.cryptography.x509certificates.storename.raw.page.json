{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">StoreName</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the name of the X.509 certificate store to open.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum StoreName</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">StoreName</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-vb\" name=\"X509StoreName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Opens the personal certificates store.\n        Dim store As New X509Store(StoreName.My)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"X509StoreName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n    public static void Main(string[] args)\n    {\n        //Opens the personal certificates store.\n        X509Store store = new X509Store(StoreName.My);\n        store.Open(OpenFlags.ReadWrite);\n        X509Certificate2 certificate = new X509Certificate2();\n\n        //Create certificates from certificate files.\n        //You must put in a valid path to three certificates in the following constructors.\n        X509Certificate2 certificate1 = new X509Certificate2(&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n        X509Certificate2 certificate2 = new X509Certificate2(&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n        X509Certificate2 certificate5 = new X509Certificate2(&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n        //Create a collection and add two of the certificates.\n        X509Certificate2Collection collection = new X509Certificate2Collection();\n        collection.Add(certificate2);\n        collection.Add(certificate5);\n\n        //Add certificates to the store.\n        store.Add(certificate1);\n        store.AddRange(collection);\n\n        X509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name);\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location);\n        foreach (X509Certificate2 x509 in storecollection)\n        {\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject);\n        }\n\n        //Remove a certificate.\n        store.Remove(certificate1);\n        X509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n        foreach (X509Certificate2 x509 in storecollection2)\n        {\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject);\n        }\n\n        //Remove a range of certificates.\n        store.RemoveRange(collection);\n        X509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n        if (storecollection3.Count == 0)\n        {\n            Console.WriteLine(&quot;Store contains no certificates.&quot;);\n        }\n        else\n        {\n            foreach (X509Certificate2 x509 in storecollection3)\n            {\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject);\n            }\n        }\n\n        //Close the store.\n        store.Close();\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This enumeration specifies the X.509 store name, which also includes the type of certificates included. For example, My includes personal certificates, whereas Disallowed includes only revoked certificates.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_AddressBook\">\r\n      \t\t\t<span class=\"lang-csharp\">AddressBook</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for other users.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_AuthRoot\">\r\n      \t\t\t<span class=\"lang-csharp\">AuthRoot</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for third-party certificate authorities (CAs).</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_CertificateAuthority\">\r\n      \t\t\t<span class=\"lang-csharp\">CertificateAuthority</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for intermediate certificate authorities (CAs).</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_Disallowed\">\r\n      \t\t\t<span class=\"lang-csharp\">Disallowed</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for revoked certificates.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_My\">\r\n      \t\t\t<span class=\"lang-csharp\">My</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for personal certificates.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_Root\">\r\n      \t\t\t<span class=\"lang-csharp\">Root</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for trusted root certificate authorities (CAs).</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_TrustedPeople\">\r\n      \t\t\t<span class=\"lang-csharp\">TrustedPeople</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for directly trusted people and resources.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_X509Certificates_StoreName_TrustedPublisher\">\r\n      \t\t\t<span class=\"lang-csharp\">TrustedPublisher</span>\r\n      \t</td>\r\n      \t<td><p>The X.509 certificate store for directly trusted publishers.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.X509Certificates.StoreName.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.AddressBook\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.AuthRoot\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.CertificateAuthority\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.Disallowed\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.My\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.Root\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.TrustedPeople\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.StoreName.TrustedPublisher\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"68c46423-6ea1-b822-7464-b3f78c639d18\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the name of the X.509 certificate store to open.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.x509certificates/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.X509Certificates.StoreName\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.X509Certificates.StoreName.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.X509Certificates.StoreName","System.Security.Cryptography.X509Certificates.StoreName.AddressBook","System.Security.Cryptography.X509Certificates.StoreName.AuthRoot","System.Security.Cryptography.X509Certificates.StoreName.CertificateAuthority","System.Security.Cryptography.X509Certificates.StoreName.Disallowed","System.Security.Cryptography.X509Certificates.StoreName.My","System.Security.Cryptography.X509Certificates.StoreName.Root","System.Security.Cryptography.X509Certificates.StoreName.TrustedPeople","System.Security.Cryptography.X509Certificates.StoreName.TrustedPublisher"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.X509Certificates.StoreName","System::Security::Cryptography::X509Certificates::StoreName","System.Security.Cryptography.X509Certificates.StoreName.AddressBook","System::Security::Cryptography::X509Certificates::StoreName::AddressBook","System.Security.Cryptography.X509Certificates.StoreName.AuthRoot","System::Security::Cryptography::X509Certificates::StoreName::AuthRoot","System.Security.Cryptography.X509Certificates.StoreName.CertificateAuthority","System::Security::Cryptography::X509Certificates::StoreName::CertificateAuthority","System.Security.Cryptography.X509Certificates.StoreName.Disallowed","System::Security::Cryptography::X509Certificates::StoreName::Disallowed","System.Security.Cryptography.X509Certificates.StoreName.My","System::Security::Cryptography::X509Certificates::StoreName::My","System.Security.Cryptography.X509Certificates.StoreName.Root","System::Security::Cryptography::X509Certificates::StoreName::Root","System.Security.Cryptography.X509Certificates.StoreName.TrustedPeople","System::Security::Cryptography::X509Certificates::StoreName::TrustedPeople","System.Security.Cryptography.X509Certificates.StoreName.TrustedPublisher","System::Security::Cryptography::X509Certificates::StoreName::TrustedPublisher"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"68c46423-6ea1-b822-7464-b3f78c639d18","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/StoreName.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StoreName enum | Microsoft Docs","_op_ogTitle":"StoreName enum","description":"Specifies the name of the X.509 certificate store to open.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.X509Certificates/toc.json","toc_rel":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.X509Certificates.StoreName","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.storename","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.storename","fileRelativePath":"api/System.Security.Cryptography.X509Certificates.StoreName.html"},"themesRelativePathToOutputRoot":"_themes/"}