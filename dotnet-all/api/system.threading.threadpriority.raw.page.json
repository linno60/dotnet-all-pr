{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ThreadPriority</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the scheduling priority of a <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic enum ThreadPriority</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">ThreadPriority</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows the result of changing the priority of a thread. Three threads are created, the priority of one thread is set to BelowNormal, and the priority of a second is set to AboveNormal. Each thread increments a variable in a <code>while</code> loop and runs for a set time.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.ThreadPriority#1\">using System;\nusing System.Threading;\nusing Timers = System.Timers;\n\nclass Test\n{\n    static void Main()\n    {\n        PriorityTest priorityTest = new PriorityTest();\n\n        Thread thread1 = new Thread(priorityTest.ThreadMethod);\n        thread1.Name = &quot;ThreadOne&quot;;\n        Thread thread2 = new Thread(priorityTest.ThreadMethod);\n        thread2.Name = &quot;ThreadTwo&quot;;\n        thread2.Priority = ThreadPriority.BelowNormal;\n        Thread thread3 = new Thread(priorityTest.ThreadMethod);\n        thread3.Name = &quot;ThreadThree&quot;;\n        thread3.Priority = ThreadPriority.AboveNormal;\n\n        thread1.Start();\n        thread2.Start();\n        thread3.Start();\n        // Allow counting for 10 seconds.\n        Thread.Sleep(10000);\n        priorityTest.LoopSwitch = false;\n    }\n}\n\nclass PriorityTest\n{\n    static bool loopSwitch;\n    [ThreadStatic] static long threadCount = 0;\n\n    public PriorityTest()\n    {\n        loopSwitch = true;\n    }\n\n    public bool LoopSwitch\n    {\n        set{ loopSwitch = value; }\n    }\n\n    public void ThreadMethod()\n    {\n        while(loopSwitch)\n        {\n            threadCount++;\n        }\n        Console.WriteLine(&quot;{0,-11} with {1,11} priority &quot; +\n            &quot;has a count = {2,13}&quot;, Thread.CurrentThread.Name, \n            Thread.CurrentThread.Priority.ToString(), \n            threadCount.ToString(&quot;N0&quot;)); \n    }\n}\n// The example displays output like the following:\n//    ThreadOne   with      Normal priority has a count =   755,897,581\n//    ThreadThree with AboveNormal priority has a count =   778,099,094\n//    ThreadTwo   with BelowNormal priority has a count =     7,840,984\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.ThreadPriority#1\">Imports System.Threading\nImports Timers = System.Timers\n\nPublic Module Example\n   Dim t As Timers.Timer\n   Private priorityTest As New PriorityTest()\n\n    Public Sub Main()\n        Dim thread1 As New Thread(AddressOf priorityTest.ThreadMethod)\n        thread1.Name = &quot;ThreadOne&quot;\n        Dim thread2 As New Thread(AddressOf priorityTest.ThreadMethod)\n        thread2.Name = &quot;ThreadTwo&quot;\n        thread2.Priority = ThreadPriority.BelowNormal\n        Dim thread3 As New Thread(AddressOf priorityTest.ThreadMethod)\n        thread3.Name = &quot;ThreadThree&quot;\n        thread3.Priority = ThreadPriority.AboveNormal\n        thread1.Start()\n        thread2.Start()\n        thread3.Start()\n\n        &#39; Allow threads to execute for about 10 seconds.\n        t = New Timers.Timer()\n        t.AutoReset = False\n        t.Interval = 10000\n        AddHandler t.Elapsed, AddressOf Elapsed\n        t.Start()\n    End Sub\n\n    Private Sub Elapsed(sender As Object, e As Timers.ElapsedEventArgs)\n       priorityTest.LoopSwitch = False\n    End Sub\nEnd Module\n\nPublic Class PriorityTest\n    Private Shared loopSwitchValue As Boolean\n    &lt;ThreadStatic&gt; Shared threadCount As Long\n\n    Sub New()\n        loopSwitchValue = True\n    End Sub\n\n    WriteOnly Property LoopSwitch As Boolean\n        Set\n            loopSwitchValue = Value\n        End Set\n    End Property\n\n    Sub ThreadMethod()\n        Do While True\n            threadCount += 1\n            If Not loopSwitchValue Then Exit Do\n        Loop\n\n        Console.WriteLine(&quot;{0,-11} with {1,11} priority &quot; &amp;\n            &quot;has a count = {2,13}&quot;, Thread.CurrentThread.Name,\n            Thread.CurrentThread.Priority.ToString(),\n            threadCount.ToString(&quot;N0&quot;)) \n    End Sub\nEnd Class\n&#39; The example displays the following output:\n&#39;    ThreadOne   with      Normal priority has a count =   755,897,581\n&#39;    ThreadThree with AboveNormal priority has a count =   778,099,094\n&#39;    ThreadTwo   with BelowNormal priority has a count =     7,840,984\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>ThreadPriority defines the set of all possible values for a thread priority. Thread priorities specify the relative priority of one thread versus another.  </p>\n<p> Every thread has an assigned priority. Threads created within the runtime are initially assigned the <code>Normal</code> priority, while threads created outside the runtime retain their previous priority when they enter the runtime. You can get and set the priority of a thread by accessing its <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Priority_\" data-linktype=\"relative-path\">Priority</a> property.  </p>\n<p> Threads are scheduled for execution based on their priority. The scheduling algorithm used to determine the order of thread execution varies with each operating system. The operating system can also adjust the thread priority dynamically as the user interface&#39;s focus is moved between the foreground and the background.  </p>\n<p> The priority of a thread does not affect the thread&#39;s state; the state of the thread must be <a class=\"xref\" href=\"system.threading.threadstate\" data-linktype=\"relative-path\">ThreadState</a> before the operating system can schedule it.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Threading_ThreadPriority_AboveNormal\">\r\n      \t\t\t<span class=\"lang-csharp\">AboveNormal</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a> can be scheduled after threads with <code>Highest</code> priority and before those with <code>Normal</code> priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadPriority_BelowNormal\">\r\n      \t\t\t<span class=\"lang-csharp\">BelowNormal</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a> can be scheduled after threads with <code>Normal</code> priority and before those with <code>Lowest</code> priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadPriority_Highest\">\r\n      \t\t\t<span class=\"lang-csharp\">Highest</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a> can be scheduled before threads with any other priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadPriority_Lowest\">\r\n      \t\t\t<span class=\"lang-csharp\">Lowest</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a> can be scheduled after threads with any other priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Threading_ThreadPriority_Normal\">\r\n      \t\t\t<span class=\"lang-csharp\">Normal</span>\r\n      \t</td>\r\n      \t<td><p>The <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a> can be scheduled after threads with <code>AboveNormal</code> priority and before those with <code>BelowNormal</code> priority. Threads have <code>Normal</code> priority by default.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.ThreadPriority.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadPriority\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadPriority.AboveNormal\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadPriority.BelowNormal\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadPriority.Highest\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadPriority.Lowest\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadPriority.Normal\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"327f1de3-151f-c547-b452-c1dc09f9fe8e\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the scheduling priority of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.threading/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.ThreadPriority\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.ThreadPriority.yml","open_to_public_contributors":false,"api_name":["System.Threading.ThreadPriority","System.Threading.ThreadPriority.AboveNormal","System.Threading.ThreadPriority.BelowNormal","System.Threading.ThreadPriority.Highest","System.Threading.ThreadPriority.Lowest","System.Threading.ThreadPriority.Normal"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.ThreadPriority","System::Threading::ThreadPriority","System.Threading.ThreadPriority.AboveNormal","System::Threading::ThreadPriority::AboveNormal","System.Threading.ThreadPriority.BelowNormal","System::Threading::ThreadPriority::BelowNormal","System.Threading.ThreadPriority.Highest","System::Threading::ThreadPriority::Highest","System.Threading.ThreadPriority.Lowest","System::Threading::ThreadPriority::Lowest","System.Threading.ThreadPriority.Normal","System::Threading::ThreadPriority::Normal"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"327f1de3-151f-c547-b452-c1dc09f9fe8e","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadPriority.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ThreadPriority enum | Microsoft Docs","_op_ogTitle":"ThreadPriority enum","description":"Specifies the scheduling priority of a .\n","toc_asset_id":"api/_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.ThreadPriority","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.threading.threadpriority","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.threading.threadpriority","fileRelativePath":"api/System.Threading.ThreadPriority.html"},"themesRelativePathToOutputRoot":"_themes/"}