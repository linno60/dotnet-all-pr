{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DownloadStringCompletedEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event of a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DownloadStringCompletedEventHandler(object sender, DownloadStringCompletedEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DownloadStringCompletedEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates downloading a string asynchronously.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#28\">// Sample call : DownloadStringInBackground2 (&quot;http://www.contoso.com/GameScores.html&quot;);\nvoid DownloadStringInBackground2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   \n   // Specify that the DownloadStringCallback2 method gets called\n   // when the download completes.\n   client-&gt;DownloadStringCompleted += gcnew DownloadStringCompletedEventHandler( DownloadStringCallback2 );\n   client-&gt;DownloadStringAsync( uri );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#28\">// Sample call : DownloadStringInBackground2 (&quot;http://www.contoso.com/GameScores.html&quot;);\npublic static void DownloadStringInBackground2 (string address)\n{\n    WebClient client = new WebClient ();\n    Uri uri = new Uri(address);\n\n    // Specify that the DownloadStringCallback2 method gets called\n    // when the download completes.\n    client.DownloadStringCompleted += new DownloadStringCompletedEventHandler (DownloadStringCallback2);\n    client.DownloadStringAsync (uri);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#28\">&#39;  Sample call : DownloadStringInBackground2 (&quot;http:&#39; www.contoso.com/GameScores.html&quot;)\nPublic Shared Sub DownloadStringInBackground2(ByVal address As String)\n\n\tDim client As WebClient = New WebClient()\n\n\t&#39;  Specify that the DownloadStringCallback2 method gets called\n\t&#39;  when the download completes.\n\tAddHandler client.DownloadStringCompleted, AddressOf DownloadStringCallback2\n                      Dim uri as Uri = New Uri(address)\n\tclient.DownloadStringAsync(uri)\nEnd Sub\n</code></pre><p> The following method is called when the download completes.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#29\">void DownloadStringCallback2( Object^ /*sender*/, DownloadStringCompletedEventArgs^ e )\n{\n   \n   // If the request was not canceled and did not throw\n   // an exception, display the resource.\n   if (  !e-&gt;Cancelled &amp;&amp; e-&gt;Error == nullptr )\n   {\n      String^ textString = dynamic_cast&lt;String^&gt;(e-&gt;Result);\n      Console::WriteLine( textString );\n   }\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#29\">private static void DownloadStringCallback2 (Object sender, DownloadStringCompletedEventArgs e)\n{\n    // If the request was not canceled and did not throw\n    // an exception, display the resource.\n    if (!e.Cancelled &amp;&amp; e.Error == null)\n    {\n        string textString = (string)e.Result;\n\n        Console.WriteLine (textString);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#29\">Private Shared Sub DownloadStringCallback2(ByVal sender As Object, ByVal e As DownloadStringCompletedEventArgs)\n\n    &#39;  If the request was not canceled and did not throw\n    &#39;  an exception, display the resource.\n    If e.Cancelled = False AndAlso e.Error Is Nothing Then\n\n        Dim textString As String = CStr(e.Result)\n        Console.WriteLine(textString)\n    End If\nEnd Sub\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a DownloadStringCompletedEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.DownloadStringCompletedEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.DownloadStringCompletedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Net.DownloadStringCompletedEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.DownloadStringCompletedEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Net.DownloadStringCompletedEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Net.DownloadStringCompletedEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"10c7124d-5e58-cb0a-b3dc-e6326ccac82e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  event of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.DownloadStringCompletedEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.DownloadStringCompletedEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Net.DownloadStringCompletedEventHandler","System.Net.DownloadStringCompletedEventHandler..ctor","System.Net.DownloadStringCompletedEventHandler.Invoke","System.Net.DownloadStringCompletedEventHandler.BeginInvoke","System.Net.DownloadStringCompletedEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.DownloadStringCompletedEventHandler","System::Net::DownloadStringCompletedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"10c7124d-5e58-cb0a-b3dc-e6326ccac82e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Net/DownloadStringCompletedEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DownloadStringCompletedEventHandler delegate | Microsoft Docs","_op_ogTitle":"DownloadStringCompletedEventHandler delegate","description":"Represents the method that will handle the  event of a .\n","toc_asset_id":"api/_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.DownloadStringCompletedEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.downloadstringcompletedeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.downloadstringcompletedeventhandler","fileRelativePath":"api/System.Net.DownloadStringCompletedEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}