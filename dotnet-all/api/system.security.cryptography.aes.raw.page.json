{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Aes</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the abstract base class from which all implementations of the Advanced Encryption Standard (AES) must inherit.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic abstract class Aes : System.Security.Cryptography.SymmetricAlgorithm</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm\" data-linktype=\"relative-path\">SymmetricAlgorithm</a></span></div><span class=\"lang-csharp\">Aes</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Derived</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.aescng\" data-linktype=\"relative-path\">AesCng</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.aescryptoserviceprovider\" data-linktype=\"relative-path\">AesCryptoServiceProvider</a></span></div>\r\n        \t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.aesmanaged\" data-linktype=\"relative-path\">AesManaged</a></span></div>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.compilerservices.typeforwardedfromattribute\" title=\"System.Runtime.CompilerServices.TypeForwardedFromAttribute\" data-linktype=\"relative-path\">TypeForwardedFromAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_BlockSize\" data-linktype=\"relative-path\">BlockSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_BlockSizeValue\" data-linktype=\"relative-path\">BlockSizeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Clear\" data-linktype=\"relative-path\">Clear()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_CreateDecryptor\" data-linktype=\"relative-path\">CreateDecryptor()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_CreateDecryptor_System_Byte___System_Byte___\" data-linktype=\"relative-path\">CreateDecryptor(Byte[], Byte[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_CreateEncryptor\" data-linktype=\"relative-path\">CreateEncryptor()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_CreateEncryptor_System_Byte___System_Byte___\" data-linktype=\"relative-path\">CreateEncryptor(Byte[], Byte[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_FeedbackSize\" data-linktype=\"relative-path\">FeedbackSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_FeedbackSizeValue\" data-linktype=\"relative-path\">FeedbackSizeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_GenerateIV\" data-linktype=\"relative-path\">GenerateIV()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_GenerateKey\" data-linktype=\"relative-path\">GenerateKey()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_IV\" data-linktype=\"relative-path\">IV</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_IVValue\" data-linktype=\"relative-path\">IVValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Key\" data-linktype=\"relative-path\">Key</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_KeySize\" data-linktype=\"relative-path\">KeySize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_KeySizeValue\" data-linktype=\"relative-path\">KeySizeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_KeyValue\" data-linktype=\"relative-path\">KeyValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalBlockSizes\" data-linktype=\"relative-path\">LegalBlockSizes</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalBlockSizesValue\" data-linktype=\"relative-path\">LegalBlockSizesValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalKeySizes\" data-linktype=\"relative-path\">LegalKeySizes</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_LegalKeySizesValue\" data-linktype=\"relative-path\">LegalKeySizesValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Mode\" data-linktype=\"relative-path\">Mode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_ModeValue\" data-linktype=\"relative-path\">ModeValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_Padding\" data-linktype=\"relative-path\">Padding</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_PaddingValue\" data-linktype=\"relative-path\">PaddingValue</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.symmetricalgorithm#System_Security_Cryptography_SymmetricAlgorithm_ValidKeySize_System_Int32_\" data-linktype=\"relative-path\">ValidKeySize(Int32)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to encrypt and decrypt sample data by using the Aes class.  </p>\n<pre><code class=\"lang-vb\" name=\"AesSample#1\">Imports System\nImports System.IO\nImports System.Security.Cryptography\n\n\n\nClass AesExample\n\n    Public Shared Sub Main()\n        Try\n\n            Dim original As String = &quot;Here is some data to encrypt!&quot;\n\n            &#39; Create a new instance of the Aes\n            &#39; class.  This generates a new key and initialization \n            &#39; vector (IV).\n            Using myAes As Aes = Aes.Create()\n\n                &#39; Encrypt the string to an array of bytes.\n                Dim encrypted As Byte() = EncryptStringToBytes_Aes(original, myAes.Key, myAes.IV)\n\n                &#39; Decrypt the bytes to a string.\n                Dim roundtrip As String = DecryptStringFromBytes_Aes(encrypted, myAes.Key, myAes.IV)\n\n                &#39;Display the original data and the decrypted data.\n                Console.WriteLine(&quot;Original:   {0}&quot;, original)\n                Console.WriteLine(&quot;Round Trip: {0}&quot;, roundtrip)\n            End Using\n        Catch e As Exception\n            Console.WriteLine(&quot;Error: {0}&quot;, e.Message)\n        End Try\n\n    End Sub &#39;Main\n\n    Shared Function EncryptStringToBytes_Aes(ByVal plainText As String, ByVal Key() As Byte, ByVal IV() As Byte) As Byte()\n        &#39; Check arguments.\n        If plainText Is Nothing OrElse plainText.Length &lt;= 0 Then\n            Throw New ArgumentNullException(&quot;plainText&quot;)\n        End If\n        If Key Is Nothing OrElse Key.Length &lt;= 0 Then\n            Throw New ArgumentNullException(&quot;Key&quot;)\n        End If\n        If IV Is Nothing OrElse IV.Length &lt;= 0 Then\n            Throw New ArgumentNullException(&quot;IV&quot;)\n        End If\n        Dim encrypted() As Byte\n        &#39; Create an Aes object\n        &#39; with the specified key and IV.\n        Using aesAlg As Aes = Aes.Create()\n\n            aesAlg.Key = Key\n            aesAlg.IV = IV\n\n            &#39; Create a decrytor to perform the stream transform.\n            Dim encryptor As ICryptoTransform = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV)\n            &#39; Create the streams used for encryption.\n            Using msEncrypt As New MemoryStream()\n                Using csEncrypt As New CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write)\n                    Using swEncrypt As New StreamWriter(csEncrypt)\n\n                        &#39;Write all data to the stream.\n                        swEncrypt.Write(plainText)\n                    End Using\n                    encrypted = msEncrypt.ToArray()\n                End Using\n            End Using\n        End Using\n\n        &#39; Return the encrypted bytes from the memory stream.\n        Return encrypted\n\n    End Function &#39;EncryptStringToBytes_Aes\n\n    Shared Function DecryptStringFromBytes_Aes(ByVal cipherText() As Byte, ByVal Key() As Byte, ByVal IV() As Byte) As String\n        &#39; Check arguments.\n        If cipherText Is Nothing OrElse cipherText.Length &lt;= 0 Then\n            Throw New ArgumentNullException(&quot;cipherText&quot;)\n        End If\n        If Key Is Nothing OrElse Key.Length &lt;= 0 Then\n            Throw New ArgumentNullException(&quot;Key&quot;)\n        End If\n        If IV Is Nothing OrElse IV.Length &lt;= 0 Then\n            Throw New ArgumentNullException(&quot;IV&quot;)\n        End If\n        &#39; Declare the string used to hold\n        &#39; the decrypted text.\n        Dim plaintext As String = Nothing\n\n        &#39; Create an Aes object\n        &#39; with the specified key and IV.\n        Using aesAlg As Aes = Aes.Create()\n            aesAlg.Key = Key\n            aesAlg.IV = IV\n\n            &#39; Create a decrytor to perform the stream transform.\n            Dim decryptor As ICryptoTransform = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV)\n\n            &#39; Create the streams used for decryption.\n            Using msDecrypt As New MemoryStream(cipherText)\n\n                Using csDecrypt As New CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read)\n\n                    Using srDecrypt As New StreamReader(csDecrypt)\n\n\n                        &#39; Read the decrypted bytes from the decrypting stream\n                        &#39; and place them in a string.\n                        plaintext = srDecrypt.ReadToEnd()\n                    End Using\n                End Using\n            End Using\n        End Using\n\n        Return plaintext\n\n    End Function &#39;DecryptStringFromBytes_Aes \nEnd Class &#39;AesExample\n</code></pre><pre><code class=\"lang-cs\" name=\"AesSample#1\">using System;\nusing System.IO;\nusing System.Security.Cryptography;\n\nnamespace Aes_Example\n{\n    class AesExample\n    {\n        public static void Main()\n        {\n            try\n            {\n\n                string original = &quot;Here is some data to encrypt!&quot;;\n\n                // Create a new instance of the Aes\n                // class.  This generates a new key and initialization \n                // vector (IV).\n                using (Aes myAes = Aes.Create())\n                {\n\n                    // Encrypt the string to an array of bytes.\n                    byte[] encrypted = EncryptStringToBytes_Aes(original, \nmyAes.Key, myAes.IV);\n\n                    // Decrypt the bytes to a string.\n                    string roundtrip = DecryptStringFromBytes_Aes(encrypted, \nmyAes.Key, myAes.IV);\n\n                    //Display the original data and the decrypted data.\n                    Console.WriteLine(&quot;Original:   {0}&quot;, original);\n                    Console.WriteLine(&quot;Round Trip: {0}&quot;, roundtrip);\n                }\n\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(&quot;Error: {0}&quot;, e.Message);\n            }\n        }\n        static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, \nbyte[] IV)\n        {\n            // Check arguments.\n            if (plainText == null || plainText.Length &lt;= 0)\n                throw new ArgumentNullException(&quot;plainText&quot;);\n            if (Key == null || Key.Length &lt;= 0)\n                throw new ArgumentNullException(&quot;Key&quot;);\n            if (IV == null || IV.Length &lt;= 0)\n                throw new ArgumentNullException(&quot;IV&quot;);\n            byte[] encrypted;\n            // Create an Aes object\n            // with the specified key and IV.\n            using (Aes aesAlg = Aes.Create())\n            {\n                aesAlg.Key = Key;\n                aesAlg.IV = IV;\n\n                // Create a decrytor to perform the stream transform.\n                ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key\n, aesAlg.IV);\n\n                // Create the streams used for encryption.\n                using (MemoryStream msEncrypt = new MemoryStream())\n                {\n                    using (CryptoStream csEncrypt = new CryptoStream(msEncrypt\n, encryptor, CryptoStreamMode.Write))\n                    {\n                        using (StreamWriter swEncrypt = new StreamWriter(\ncsEncrypt))\n                        {\n\n                            //Write all data to the stream.\n                            swEncrypt.Write(plainText);\n                        }\n                        encrypted = msEncrypt.ToArray();\n                    }\n                }\n            }\n\n\n            // Return the encrypted bytes from the memory stream.\n            return encrypted;\n\n        }\n\n        static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key\n, byte[] IV)\n        {\n            // Check arguments.\n            if (cipherText == null || cipherText.Length &lt;= 0)\n                throw new ArgumentNullException(&quot;cipherText&quot;);\n            if (Key == null || Key.Length &lt;= 0)\n                throw new ArgumentNullException(&quot;Key&quot;);\n            if (IV == null || IV.Length &lt;= 0)\n                throw new ArgumentNullException(&quot;IV&quot;);\n\n            // Declare the string used to hold\n            // the decrypted text.\n            string plaintext = null;\n\n            // Create an Aes object\n            // with the specified key and IV.\n            using (Aes aesAlg = Aes.Create())\n            {\n                aesAlg.Key = Key;\n                aesAlg.IV = IV;\n\n                // Create a decrytor to perform the stream transform.\n                ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key\n, aesAlg.IV);\n\n                // Create the streams used for decryption.\n                using (MemoryStream msDecrypt = new MemoryStream(cipherText))\n                {\n                    using (CryptoStream csDecrypt = new CryptoStream(msDecrypt\n, decryptor, CryptoStreamMode.Read))\n                    {\n                        using (StreamReader srDecrypt = new StreamReader(\ncsDecrypt))\n                        {\n\n                            // Read the decrypted bytes from the decrypting \nstream\n                            // and place them in a string.\n                            plaintext = srDecrypt.ReadToEnd();\n                        }\n                    }\n                }\n\n            }\n\n            return plaintext;\n\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Aes__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Aes__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Aes()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.aes\" data-linktype=\"relative-path\">Aes</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected Aes ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.compilerservices.typeforwardedfromattribute\" title=\"System.Runtime.CompilerServices.TypeForwardedFromAttribute\" data-linktype=\"relative-path\">TypeForwardedFromAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Aes_Create_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Aes_Create\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Create()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a cryptographic object that is used to perform the symmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Security.Cryptography.Aes Create ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.aes\" data-linktype=\"relative-path\">Aes</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A cryptographic object that is used to perform the symmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.compilerservices.typeforwardedfromattribute\" title=\"System.Runtime.CompilerServices.TypeForwardedFromAttribute\" data-linktype=\"relative-path\">TypeForwardedFromAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Aes_Create_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Aes_Create_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Create(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a cryptographic object that specifies the implementation of AES to use to perform the symmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Security.Cryptography.Aes Create (string algorithmName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>algorithmName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the specific implementation of AES to use.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.aes\" data-linktype=\"relative-path\">Aes</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A cryptographic object that is used to perform the symmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.compilerservices.typeforwardedfromattribute\" title=\"System.Runtime.CompilerServices.TypeForwardedFromAttribute\" data-linktype=\"relative-path\">TypeForwardedFromAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>algorithmName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Possible <code>algorithmName</code> values are: &quot;AES&quot;, &quot;AesCryptoServiceProvider&quot;, &quot;System.Security.Cryptography.AesCryptoServiceProvider&quot;, &quot;AesManaged&quot;, and &quot;System.Security.Cryptography.AesManaged&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Aes.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Aes\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Aes..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Aes.Create\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"e0d59f6d-32a0-77c4-7a16-78e58ddfe538\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the abstract base class from which all implementations of the Advanced Encryption Standard (AES) must inherit.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Aes\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Aes.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Aes","System.Security.Cryptography.Aes..ctor","System.Security.Cryptography.Aes.Create"],"api_location":["System.Core.dll","mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Aes","System::Security::Cryptography::Aes","System.Security.Cryptography.Aes.#ctor","System::Security::Cryptography::Aes::#ctor","System.Security.Cryptography.Aes.Create","System::Security::Cryptography::Aes::Create"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"e0d59f6d-32a0-77c4-7a16-78e58ddfe538","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography/Aes.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Aes class | Microsoft Docs","_op_ogTitle":"Aes class","description":"Represents the abstract base class from which all implementations of the Advanced Encryption Standard (AES) must inherit.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Aes","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.aes","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.aes","fileRelativePath":"api/System.Security.Cryptography.Aes.html"},"themesRelativePathToOutputRoot":"_themes/"}