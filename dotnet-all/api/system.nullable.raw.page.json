{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Nullable</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Supports a value type that can be assigned <code>null</code>. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic static class Nullable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">Nullable</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A type is said to be nullable if it can be assigned a value or can be assigned <code>null</code>, which means the type has no value whatsoever. By default, all reference types, such as <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, are nullable, but all value types, such as <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>, are not.  </p>\n<p> In C# and Visual Basic, you mark a value type as nullable by using the <code>?</code> notation after the value type. For example, <code>int?</code> in C# or <code>Integer?</code> in Visual Basic declares an integer value type that can be assigned <code>null</code>.  </p>\n<p> The Nullable class provides complementary support for the <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> structure. The Nullable class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.  </p>\n<h3 class=\"accented\" id=\"boxing-and-unboxing\">Boxing and Unboxing</h3>\n<p> When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object, not the <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object itself. That is, if the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property is <code>true</code>, the contents of the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property is boxed. If the <code>HasValue</code> property is <code>false</code>, <code>null</code> is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> structure initialized to the underlying value.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Nullable_Compare__1_System_Nullable___0__System_Nullable___0__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Compare&lt;T&gt;(Nullable&lt;T&gt;,Nullable&lt;T&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares the relative values of two <span class=\"xref\">stem.Nullable`1</span> objects.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int Compare&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>n1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>n2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An integer that indicates the relative values of the <code>n1</code> and <code>n2</code> parameters.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n1</code> is <code>false</code>, and the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n2</code> is <code>true</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n1</code> is less than the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n2</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>false</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n1</code> is equal to the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n2</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n1</code> is <code>true</code>, and the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n2</code> is <code>false</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n1</code> is greater than the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n2</code>.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Nullable_Equals__1_System_Nullable___0__System_Nullable___0__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals&lt;T&gt;(Nullable&lt;T&gt;,Nullable&lt;T&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether two specified <span class=\"xref\">stem.Nullable`1</span> objects are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool Equals&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>n1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>n2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>n1</code> parameter is equal to the <code>n2</code> parameter; otherwise, <code>false</code>.  </p>\n<p> The return value depends on the <span class=\"xref\">stem.Nullable`1.HasValue*</span> and <span class=\"xref\">stem.Nullable`1.Value*</span> properties of the two parameters that are compared.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td><code>true</code></td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>false</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the <span class=\"xref\">stem.Nullable`1.Value*</span> properties of the parameters are equal.<br>\n </td></tr><tr><td><code>false</code></td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code> for one parameter and <code>false</code> for the other parameter.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the <span class=\"xref\">stem.Nullable`1.Value*</span> properties of the parameters are unequal.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Nullable_GetUnderlyingType_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetUnderlyingType(Type)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the underlying type argument of the specified nullable type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static Type GetUnderlyingType (Type nullableType);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nullableType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object that describes a closed generic nullable type.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type argument of the <code>nullableType</code> parameter, if the <code>nullableType</code> parameter is a closed generic nullable type; otherwise, <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>nullableType</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A generic type definition is a type declaration, such as <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a>, that contains a type parameter list, and the type parameter list declares one or more type parameters. A closed generic type is a type declaration where a particular type is specified for a type parameter.  </p>\n<p> For example, if the <code>nullableType</code> parameter is the type of <code>Nullable&lt;Int32&gt;</code> in C# (<code>Nullable(Of Int32)</code> in Visual Basic), the return value is the type of <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> (that is, the type argument of the closed generic type).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Nullable.yml\">\r\n<meta name=\"APIName\" content=\"System.Nullable\">\r\n<meta name=\"APIName\" content=\"System.Nullable.Compare&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Nullable.Equals&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Nullable.GetUnderlyingType\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"7eb43f54-9b1f-003c-4bb5-0873ce80d1af\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Supports a value type that can be assigned null. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Nullable\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Nullable.yml","open_to_public_contributors":false,"api_name":["System.Nullable","System.Nullable.Compare<T>","System.Nullable.Equals<T>","System.Nullable.GetUnderlyingType"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Nullable","System::Nullable","System.Nullable.Compare``1","System::Nullable::Compare``1","System.Nullable.Equals``1","System::Nullable::Equals``1","System.Nullable.GetUnderlyingType","System::Nullable::GetUnderlyingType"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"7eb43f54-9b1f-003c-4bb5-0873ce80d1af","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Nullable class | Microsoft Docs","_op_ogTitle":"Nullable class","description":"Supports a value type that can be assigned null. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.Nullable","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.nullable","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.nullable","fileRelativePath":"api/System.Nullable.html"},"themesRelativePathToOutputRoot":"_themes/"}