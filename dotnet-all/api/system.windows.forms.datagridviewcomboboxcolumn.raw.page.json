{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridViewComboBoxColumn</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a column of <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a> objects.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.DataGridViewComboBoxColumnDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewComboBoxColumn), &quot;DataGridViewComboBoxColumn.bmp&quot;)]\npublic class DataGridViewComboBoxColumn : System.Windows.Forms.DataGridViewColumn</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement\" data-linktype=\"relative-path\">DataGridViewElement</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a></span></div><span class=\"lang-csharp\">DataGridViewComboBoxColumn</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultHeaderCellType\" data-linktype=\"relative-path\">DefaultHeaderCellType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Displayed\" data-linktype=\"relative-path\">Displayed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_HasDefaultCellStyle\" data-linktype=\"relative-path\">HasDefaultCellStyle</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_HeaderCellCore\" data-linktype=\"relative-path\">HeaderCellCore</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Index\" data-linktype=\"relative-path\">Index</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_IsRow\" data-linktype=\"relative-path\">IsRow</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_OnDataGridViewChanged\" data-linktype=\"relative-path\">OnDataGridViewChanged()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected\" data-linktype=\"relative-path\">Selected</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Tag\" data-linktype=\"relative-path\">Tag</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode\" data-linktype=\"relative-path\">AutoSizeMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_CellType\" data-linktype=\"relative-path\">CellType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ContextMenuStrip\" data-linktype=\"relative-path\">ContextMenuStrip</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName\" data-linktype=\"relative-path\">DataPropertyName</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle\" data-linktype=\"relative-path\">DefaultCellStyle</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DisplayIndex\" data-linktype=\"relative-path\">DisplayIndex</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DividerWidth\" data-linktype=\"relative-path\">DividerWidth</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_FillWeight\" data-linktype=\"relative-path\">FillWeight</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Frozen\" data-linktype=\"relative-path\">Frozen</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_GetPreferredWidth_System_Windows_Forms_DataGridViewAutoSizeColumnMode_System_Boolean_\" data-linktype=\"relative-path\">GetPreferredWidth(DataGridViewAutoSizeColumnMode, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_HeaderCell\" data-linktype=\"relative-path\">HeaderCell</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_HeaderText\" data-linktype=\"relative-path\">HeaderText</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_InheritedAutoSizeMode\" data-linktype=\"relative-path\">InheritedAutoSizeMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_InheritedStyle\" data-linktype=\"relative-path\">InheritedStyle</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_IsDataBound\" data-linktype=\"relative-path\">IsDataBound</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_MinimumWidth\" data-linktype=\"relative-path\">MinimumWidth</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ReadOnly\" data-linktype=\"relative-path\">ReadOnly</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Resizable\" data-linktype=\"relative-path\">Resizable</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode\" data-linktype=\"relative-path\">SortMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ToolTipText\" data-linktype=\"relative-path\">ToolTipText</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ValueType\" data-linktype=\"relative-path\">ValueType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Visible\" data-linktype=\"relative-path\">Visible</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Width\" data-linktype=\"relative-path\">Width</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_DataGridView\" data-linktype=\"relative-path\">DataGridView</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentDoubleClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellValueChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellValueChanged(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseDataError_System_Windows_Forms_DataGridViewDataErrorEventArgs_\" data-linktype=\"relative-path\">RaiseDataError(DataGridViewDataErrorEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseWheel(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_State\" data-linktype=\"relative-path\">State</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use a DataGridViewComboBoxColumn to aid in entering data into the <code>TitleOfCourtesy</code> column.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#0\">#using &lt;System.Data.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.EnterpriseServices.dll&gt;\n#using &lt;System.Transactions.dll&gt;\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Data::SqlClient;\nusing namespace System::Windows::Forms;\nusing namespace System::Collections::Generic;\nusing namespace System::Drawing;\n\npublic ref class Employees : public Form\n{\nprivate:\n    DataGridView^ DataGridView1;\n\nprivate:\n    DataGridView^ DataGridView2;\n\npublic:\n    [STAThread]\n    static void Main()\n    {\n        try\n        {\n            Application::EnableVisualStyles();\n            Application::Run(gcnew Employees());\n        }\n        catch (Exception^ e)\n        {\n            MessageBox::Show(e-&gt;Message + e-&gt;StackTrace);\n        }\n    }\n\nprivate:\n    Dictionary&lt;String^, bool&gt;^ inOffice;\n\npublic:\n    Employees()\n    {\n        DataGridView1 = gcnew DataGridView();\n        DataGridView2 = gcnew DataGridView();\n        connectionString =\n            &quot;Integrated Security=SSPI;Persist Security Info=False;&quot; +\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;;\n        inOffice = gcnew Dictionary&lt;String^, bool&gt;;\n\n        this-&gt;Load += gcnew EventHandler(this, &amp;Employees::Form1_Load);\n    }\n\nprivate:\n    void Form1_Load(System::Object^ /*sender*/, System::EventArgs^ /*e*/)\n    {\n        try\n        {\n            SetUpForm();\n            SetUpDataGridView1();\n            SetUpDataGridView2();\n        }\n        catch (SqlException^)\n        {\n            MessageBox::Show(&quot;The connection string &lt;&quot;\n                + connectionString\n                + &quot;&gt; failed to connect.  Modify it &quot;\n                + &quot;to connect to a Northwind database accessible to &quot;\n                + &quot;your system.&quot;,\n                &quot;ERROR&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation);\n            Application::Exit();\n        }\n    }\n\nprivate:\n    void SetUpForm()\n    {\n        Size = System::Drawing::Size(800, 600);\n        FlowLayoutPanel^ flowLayout = gcnew FlowLayoutPanel();\n        flowLayout-&gt;FlowDirection = FlowDirection::TopDown;\n        flowLayout-&gt;Dock = DockStyle::Fill;\n        Controls-&gt;Add(flowLayout);\n\n        flowLayout-&gt;Controls-&gt;Add(DataGridView1);\n        flowLayout-&gt;Controls-&gt;Add(DataGridView2);\n    }\n\nprivate:\n    void SetUpDataGridView2()\n    {\n        DataGridView2-&gt;Dock = DockStyle::Bottom;\n        DataGridView2-&gt;TopLeftHeaderCell-&gt;Value = &quot;Sales Details&quot;;\n        DataGridView2-&gt;RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode::AutoSizeToAllHeaders;\n    }\n\nprivate:\n    void SetUpDataGridView1()\n    {\n        //DataGridView1.DataError += new \n          //  DataGridViewDataErrorEventHandler(DataGridView1_DataError);\n        DataGridView1-&gt;CellContentClick += gcnew \n            DataGridViewCellEventHandler(this, &amp;Employees::DataGridView1_CellContentClick);\n        DataGridView1-&gt;CellValuePushed += gcnew \n            DataGridViewCellValueEventHandler(this, &amp;Employees::DataGridView1_CellValuePushed);\n        DataGridView1-&gt;CellValueNeeded += gcnew \n            DataGridViewCellValueEventHandler(this, &amp;Employees::DataGridView1_CellValueNeeded);\n\n        // Virtual mode is turned on so that the\n        // unbound DataGridViewCheckBoxColumn will\n        // keep its state when the bound columns are\n        // sorted.       \n        DataGridView1-&gt;VirtualMode = true;\n        DataGridView1-&gt;AutoSize = true;\n        DataGridView1-&gt;DataSource = Populate(&quot;SELECT * FROM Employees&quot;);\n        DataGridView1-&gt;TopLeftHeaderCell-&gt;Value = &quot;Employees&quot;;\n        DataGridView1-&gt;RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode::AutoSizeToAllHeaders;\n        DataGridView1-&gt;ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode::AutoSize;\n        DataGridView1-&gt;AutoSizeColumnsMode = \n            DataGridViewAutoSizeColumnsMode::AllCells;\n        DataGridView1-&gt;AllowUserToAddRows = false;\n        DataGridView1-&gt;AllowUserToDeleteRows = false;\n\n        // The below autogenerated column is removed so \n        // a DataGridViewComboboxColumn could be used instead.\n        DataGridView1-&gt;Columns-&gt;Remove(ColumnName::TitleOfCourtesy.ToString());\n        DataGridView1-&gt;Columns-&gt;Remove(ColumnName::ReportsTo.ToString());\n\n        AddLinkColumn();\n        AddComboBoxColumns();\n        AddButtonColumn();\n        AddOutOfOfficeColumn();\n    }\n\nprivate:\n    void AddComboBoxColumns()\n    {\n        DataGridViewComboBoxColumn^ comboboxColumn;\n        comboboxColumn = CreateComboBoxColumn();\n        SetAlternateChoicesUsingDataSource(comboboxColumn);\n        comboboxColumn-&gt;HeaderText = &quot;TitleOfCourtesy (via DataSource property)&quot;;\n        DataGridView1-&gt;Columns-&gt;Insert(0, comboboxColumn);\n\n        comboboxColumn = CreateComboBoxColumn();\n        SetAlternateChoicesUsingItems(comboboxColumn);\n        comboboxColumn-&gt;HeaderText = &quot;TitleOfCourtesy (via Items property)&quot;;\n        // Tack this example column onto the end.\n        DataGridView1-&gt;Columns-&gt;Add(comboboxColumn);\n    }\n\nprivate:\n    void AddLinkColumn()\n    {\n        DataGridViewLinkColumn^ links = gcnew DataGridViewLinkColumn();\n\n\t\tlinks-&gt;UseColumnTextForLinkValue = true;\n        links-&gt;HeaderText = ColumnName::ReportsTo.ToString();\n        links-&gt;DataPropertyName = ColumnName::ReportsTo.ToString();\n        links-&gt;ActiveLinkColor = Color::White;\n        links-&gt;LinkBehavior = LinkBehavior::SystemDefault;\n        links-&gt;LinkColor = Color::Blue;\n        links-&gt;TrackVisitedState = true;\n        links-&gt;VisitedLinkColor = Color::YellowGreen;\n\n        DataGridView1-&gt;Columns-&gt;Add(links);\n    }\n\nprivate:\n    void SetAlternateChoicesUsingItems(\n        DataGridViewComboBoxColumn^ comboboxColumn)\n    {\n        comboboxColumn-&gt;Items-&gt;AddRange(&quot;Mr.&quot;, &quot;Ms.&quot;, &quot;Mrs.&quot;, &quot;Dr.&quot;);\n    }\n\nprivate:\n    DataGridViewComboBoxColumn^ CreateComboBoxColumn()\n    {\n        DataGridViewComboBoxColumn^ column =\n            gcnew DataGridViewComboBoxColumn();\n        {\n            column-&gt;DataPropertyName = ColumnName::TitleOfCourtesy.ToString();\n            column-&gt;HeaderText = ColumnName::TitleOfCourtesy.ToString();\n            column-&gt;DropDownWidth = 160;\n            column-&gt;Width = 90;\n            column-&gt;MaxDropDownItems = 3;\n            column-&gt;FlatStyle = FlatStyle::Flat;\n        }\n        return column;\n    }\n\nprivate:\n    void SetAlternateChoicesUsingDataSource(DataGridViewComboBoxColumn^ comboboxColumn)\n    {\n        {\n            comboboxColumn-&gt;DataSource = RetrieveAlternativeTitles();\n            comboboxColumn-&gt;ValueMember = ColumnName::TitleOfCourtesy.ToString();\n            comboboxColumn-&gt;DisplayMember = comboboxColumn-&gt;ValueMember;\n        }\n    }\n\nprivate:\n    DataTable^ RetrieveAlternativeTitles()\n    {\n        return Populate(&quot;SELECT distinct TitleOfCourtesy FROM Employees&quot;);\n    }\n\n    String^ connectionString;\n\nprivate:\n    DataTable^ Populate(String^ sqlCommand)\n    {\n        SqlConnection^ northwindConnection = gcnew SqlConnection(connectionString);\n        northwindConnection-&gt;Open();\n\n        SqlCommand^ command = gcnew SqlCommand(sqlCommand, northwindConnection);\n        SqlDataAdapter^ adapter = gcnew SqlDataAdapter();\n        adapter-&gt;SelectCommand = command;\n\n        DataTable^ table = gcnew DataTable();\n        adapter-&gt;Fill(table);\n\n        return table;\n    }\n\n\t// Using an enum provides some abstraction between column index\n    // and column name along with compile time checking, and gives\n    // a handy place to store the column names.\n    enum class ColumnName\n    {\n        EmployeeID,\n        LastName,\n        FirstName,\n        Title,\n        TitleOfCourtesy,\n        BirthDate,\n        HireDate,\n        Address,\n        City,\n        Region,\n        PostalCode,\n        Country,\n        HomePhone,\n        Extension,\n        Photo,\n        Notes,\n        ReportsTo,\n        PhotoPath,\n        OutOfOffice\n    };\n\nprivate:\n    void AddButtonColumn()\n    {\n        DataGridViewButtonColumn^ buttons = gcnew DataGridViewButtonColumn();\n        {\n            buttons-&gt;HeaderText = &quot;Sales&quot;;\n            buttons-&gt;Text = &quot;Sales&quot;;\n            buttons-&gt;UseColumnTextForButtonValue = true;\n            buttons-&gt;AutoSizeMode =\n                DataGridViewAutoSizeColumnMode::AllCells;\n            buttons-&gt;FlatStyle = FlatStyle::Standard;\n            buttons-&gt;CellTemplate-&gt;Style-&gt;BackColor = Color::Honeydew;\n            buttons-&gt;DisplayIndex = 0;\n        }\n\n        DataGridView1-&gt;Columns-&gt;Add(buttons);\n\n    }\n\nprivate:\n    void AddOutOfOfficeColumn()\n    {\n        DataGridViewCheckBoxColumn^ column = gcnew DataGridViewCheckBoxColumn();\n        {\n            column-&gt;HeaderText = ColumnName::OutOfOffice.ToString();\n            column-&gt;Name = ColumnName::OutOfOffice.ToString();\n            column-&gt;AutoSizeMode = \n                DataGridViewAutoSizeColumnMode::DisplayedCells;\n            column-&gt;FlatStyle = FlatStyle::Standard;\n            column-&gt;ThreeState = true;\n            column-&gt;CellTemplate = gcnew DataGridViewCheckBoxCell();\n            column-&gt;CellTemplate-&gt;Style-&gt;BackColor = Color::Beige;\n        }\n\n        DataGridView1-&gt;Columns-&gt;Insert(0, column);\n    }\n\nprivate:\n    void PopulateSales(DataGridViewCellEventArgs^ buttonClick)\n    {\n\n        String^ employeeID = DataGridView1-&gt;Rows[buttonClick-&gt;RowIndex]\n            -&gt;Cells[ColumnName::EmployeeID.ToString()]-&gt;Value-&gt;ToString();\n        DataGridView2-&gt;DataSource = Populate(&quot;SELECT * FROM Orders WHERE EmployeeID = &quot; + employeeID);\n    }\n\n    #pragma region &quot;SQL Error handling&quot;\nprivate:\n    void DataGridView1_DataError(Object^ sender, DataGridViewDataErrorEventArgs^ anError)\n    {\n\n        MessageBox::Show(&quot;Error happened &quot; + anError-&gt;Context.ToString());\n\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::Commit)\n        {\n            MessageBox::Show(&quot;Commit error&quot;);\n        }\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::CurrentCellChange)\n        {\n            MessageBox::Show(&quot;Cell change&quot;);\n        }\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::Parsing)\n        {\n            MessageBox::Show(&quot;parsing error&quot;);\n        }\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::LeaveControl)\n        {\n            MessageBox::Show(&quot;leave control error&quot;);\n        }\n\n        if (dynamic_cast&lt;ConstraintException^&gt;(anError-&gt;Exception) != nullptr)\n        {\n            DataGridView^ view = (DataGridView^)sender;\n            view-&gt;Rows[anError-&gt;RowIndex]-&gt;ErrorText = &quot;an error&quot;;\n            view-&gt;Rows[anError-&gt;RowIndex]-&gt;Cells[anError-&gt;ColumnIndex]-&gt;ErrorText = &quot;an error&quot;;\n\n            anError-&gt;ThrowException = false;\n        }\n    }\n    #pragma endregion\n\nprivate:\n    void DataGridView1_CellContentClick(Object^ /*sender*/, DataGridViewCellEventArgs^ e)\n    {\n\n        if (IsANonHeaderLinkCell(e))\n        {\n            MoveToLinked(e);\n        }\n        else if (IsANonHeaderButtonCell(e))\n        {\n            PopulateSales(e);\n        }\n    }\n\nprivate:\n    void MoveToLinked(DataGridViewCellEventArgs^ e)\n    {\n        String^ employeeId;\n        Object^ value = DataGridView1-&gt;Rows[e-&gt;RowIndex]-&gt;Cells[e-&gt;ColumnIndex]-&gt;Value;\n        if (dynamic_cast&lt;DBNull^&gt;(value) != nullptr) { return; }\n\n        employeeId = value-&gt;ToString();\n        DataGridViewCell^ boss = RetrieveSuperiorsLastNameCell(employeeId);\n        if (boss != nullptr)\n        {\n            DataGridView1-&gt;CurrentCell = boss;\n        }\n    }\n\nprivate:\n    bool IsANonHeaderLinkCell(DataGridViewCellEventArgs^ cellEvent)\n    {\n        if (dynamic_cast&lt;DataGridViewLinkColumn^&gt;(DataGridView1-&gt;Columns[cellEvent-&gt;ColumnIndex]) != nullptr\n             &amp;&amp;\n            cellEvent-&gt;RowIndex != -1)\n        { return true; }\n        else { return false; }\n    }\n\nprivate:\n    bool IsANonHeaderButtonCell(DataGridViewCellEventArgs^ cellEvent)\n    {\n        if (dynamic_cast&lt;DataGridViewButtonColumn^&gt;(DataGridView1-&gt;Columns[cellEvent-&gt;ColumnIndex]) != nullptr\n             &amp;&amp;\n            cellEvent-&gt;RowIndex != -1)\n        { return true; }\n        else { return (false); }\n    }\n\nprivate:\n    DataGridViewCell^ RetrieveSuperiorsLastNameCell(String^ employeeId)\n    {\n\n        for each (DataGridViewRow^ row in DataGridView1-&gt;Rows)\n        {\n            if (row-&gt;IsNewRow) { return nullptr; }\n            if (row-&gt;Cells[ColumnName::EmployeeID.ToString()]-&gt;Value-&gt;ToString()-&gt;Equals(employeeId))\n            {\n                return row-&gt;Cells[ColumnName::LastName.ToString()];\n            }\n        }\n        return nullptr;\n    }\n\n    #pragma region &quot;checkbox state&quot;\n\nprivate:\n    void DataGridView1_CellValuePushed(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        if (IsCheckBoxColumn(e-&gt;ColumnIndex))\n        {\n            String^ employeeId = GetKey(e);\n            if (!inOffice-&gt;ContainsKey(employeeId))\n            {\n                inOffice-&gt;Add(employeeId, (Boolean)e-&gt;Value);\n            }\n            else\n            {\n                inOffice[employeeId] = (Boolean)e-&gt;Value;\n            }\n        }\n    }\n\nprivate:\n    String^ GetKey(DataGridViewCellValueEventArgs^ cell)\n    {\n        return DataGridView1-&gt;Rows[cell-&gt;RowIndex]-&gt;\n            Cells[ColumnName::EmployeeID.ToString()]-&gt;Value-&gt;ToString();\n    }\n\nprivate:\n    void DataGridView1_CellValueNeeded(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n\n        if (IsCheckBoxColumn(e-&gt;ColumnIndex))\n        {\n            String^ employeeId = GetKey(e);\n            if (!inOffice-&gt;ContainsKey(employeeId))\n            {\n                bool defaultValue = false;\n                inOffice-&gt;Add(employeeId, defaultValue);\n            }\n\n            e-&gt;Value = inOffice[employeeId];\n        }\n    }\n\nprivate:\n    bool IsCheckBoxColumn(int columnIndex)\n    {\n        DataGridViewColumn^ outOfOfficeColumn =\n            DataGridView1-&gt;Columns[ColumnName::OutOfOffice.ToString()];\n        return (DataGridView1-&gt;Columns[columnIndex] == outOfOfficeColumn);\n    }\n    #pragma endregion\n};\n\nint main()\n{\n    Employees::Main();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#0\">using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Windows.Forms;\nusing System.Collections.Generic;\nusing System.Drawing;\n\npublic class Employees : Form\n{\n    private DataGridView DataGridView1 = new DataGridView();\n    private DataGridView DataGridView2 = new DataGridView();\n\n    [STAThread]\n    public static void Main()\n    {\n        try\n        {\n            Application.EnableVisualStyles();\n            Application.Run(new Employees());\n        }\n        catch (Exception e)\n        {\n            MessageBox.Show(e.Message + e.StackTrace);\n        }\n    }\n\n    public Employees()\n    {\n        this.Load += new EventHandler(Form1_Load);\n    }\n\n    private void Form1_Load(System.Object sender, System.EventArgs e)\n    {\n        try\n        {\n            SetUpForm();\n            SetUpDataGridView1();\n            SetUpDataGridView2();\n        }\n        catch (SqlException)\n        {\n            MessageBox.Show(&quot;The connection string &lt;&quot;\n                + connectionString\n                + &quot;&gt; failed to connect.  Modify it &quot;\n                + &quot;to connect to a Northwind database accessible to &quot;\n                + &quot;your system.&quot;,\n                &quot;ERROR&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n            Application.Exit();\n        }\n    }\n\n    private void SetUpForm()\n    {\n        Size = new Size(800, 600);\n        FlowLayoutPanel flowLayout = new FlowLayoutPanel();\n        flowLayout.FlowDirection = FlowDirection.TopDown;\n        flowLayout.Dock = DockStyle.Fill;\n        Controls.Add(flowLayout);\n        Text = &quot;DataGridView columns demo&quot;;\n\n        flowLayout.Controls.Add(DataGridView1);\n        flowLayout.Controls.Add(DataGridView2);\n    }\n\n    private void SetUpDataGridView2()\n    {\n        DataGridView2.Dock = DockStyle.Bottom;\n        DataGridView2.TopLeftHeaderCell.Value = &quot;Sales Details&quot;;\n        DataGridView2.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders;\n    }\n\n    private void SetUpDataGridView1()\n    {\n        DataGridView1.DataError += new \n            DataGridViewDataErrorEventHandler(DataGridView1_DataError);\n        DataGridView1.CellContentClick += new \n            DataGridViewCellEventHandler(DataGridView1_CellContentClick);\n        DataGridView1.CellValuePushed += new \n            DataGridViewCellValueEventHandler(DataGridView1_CellValuePushed);\n        DataGridView1.CellValueNeeded += new \n            DataGridViewCellValueEventHandler(DataGridView1_CellValueNeeded);\n\n        // Virtual mode is turned on so that the\n        // unbound DataGridViewCheckBoxColumn will\n        // keep its state when the bound columns are\n        // sorted.       \n        DataGridView1.VirtualMode = true;\n        DataGridView1.AutoSize = true;\n        DataGridView1.DataSource = Populate(&quot;SELECT * FROM Employees&quot;);\n        DataGridView1.TopLeftHeaderCell.Value = &quot;Employees&quot;;\n        DataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders;\n        DataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.AutoSize;\n        DataGridView1.AutoSizeColumnsMode = \n            DataGridViewAutoSizeColumnsMode.AllCells;\n        DataGridView1.AllowUserToAddRows = false;\n        DataGridView1.AllowUserToDeleteRows = false;\n\n        // The below autogenerated column is removed so \n        // a DataGridViewComboboxColumn could be used instead.\n        DataGridView1.Columns.Remove(ColumnName.TitleOfCourtesy.ToString());\n        DataGridView1.Columns.Remove(ColumnName.ReportsTo.ToString());\n\n        AddLinkColumn();\n        AddComboBoxColumns();\n        AddButtonColumn();\n        AddOutOfOfficeColumn();\n    }\n\n    private void AddComboBoxColumns()\n    {\n        DataGridViewComboBoxColumn comboboxColumn;\n        comboboxColumn = CreateComboBoxColumn();\n        SetAlternateChoicesUsingDataSource(comboboxColumn);\n        comboboxColumn.HeaderText = &quot;TitleOfCourtesy (via DataSource property)&quot;;\n        DataGridView1.Columns.Insert(0, comboboxColumn);\n\n        comboboxColumn = CreateComboBoxColumn();\n        SetAlternateChoicesUsingItems(comboboxColumn);\n        comboboxColumn.HeaderText = &quot;TitleOfCourtesy (via Items property)&quot;;\n        // Tack this example column onto the end.\n        DataGridView1.Columns.Add(comboboxColumn);\n    }\n\n    private void AddLinkColumn()\n    {\n        DataGridViewLinkColumn links = new DataGridViewLinkColumn();\n\n        links.UseColumnTextForLinkValue = true;\n        links.HeaderText = ColumnName.ReportsTo.ToString();\n        links.DataPropertyName = ColumnName.ReportsTo.ToString();\n        links.ActiveLinkColor = Color.White;\n        links.LinkBehavior = LinkBehavior.SystemDefault;\n        links.LinkColor = Color.Blue;\n        links.TrackVisitedState = true;\n        links.VisitedLinkColor = Color.YellowGreen;\n\n        DataGridView1.Columns.Add(links);\n    }\n\n    private static void SetAlternateChoicesUsingItems(\n        DataGridViewComboBoxColumn comboboxColumn)\n    {\n        comboboxColumn.Items.AddRange(&quot;Mr.&quot;, &quot;Ms.&quot;, &quot;Mrs.&quot;, &quot;Dr.&quot;);\n    }\n\n    private DataGridViewComboBoxColumn CreateComboBoxColumn()\n    {\n        DataGridViewComboBoxColumn column =\n            new DataGridViewComboBoxColumn();\n        {\n            column.DataPropertyName = ColumnName.TitleOfCourtesy.ToString();\n            column.HeaderText = ColumnName.TitleOfCourtesy.ToString();\n            column.DropDownWidth = 160;\n            column.Width = 90;\n            column.MaxDropDownItems = 3;\n            column.FlatStyle = FlatStyle.Flat;\n        }\n        return column;\n    }\n\n    private void SetAlternateChoicesUsingDataSource(DataGridViewComboBoxColumn comboboxColumn)\n    {\n        {\n            comboboxColumn.DataSource = RetrieveAlternativeTitles();\n            comboboxColumn.ValueMember = ColumnName.TitleOfCourtesy.ToString();\n            comboboxColumn.DisplayMember = comboboxColumn.ValueMember;\n        }\n    }\n\n    private DataTable RetrieveAlternativeTitles()\n    {\n        return Populate(&quot;SELECT distinct TitleOfCourtesy FROM Employees&quot;);\n    }\n\n    string connectionString =\n        &quot;Integrated Security=SSPI;Persist Security Info=False;&quot; +\n        &quot;Initial Catalog=Northwind;Data Source=localhost&quot;;\n\n    private DataTable Populate(string sqlCommand)\n    {\n        SqlConnection northwindConnection = new SqlConnection(connectionString);\n        northwindConnection.Open();\n\n        SqlCommand command = new SqlCommand(sqlCommand, northwindConnection);\n        SqlDataAdapter adapter = new SqlDataAdapter();\n        adapter.SelectCommand = command;\n\n        DataTable table = new DataTable();\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n        adapter.Fill(table);\n\n        return table;\n    }\n\n    // Using an enum provides some abstraction between column index\n    // and column name along with compile time checking, and gives\n    // a handy place to store the column names.\n    enum ColumnName\n    {\n        EmployeeId,\n        LastName,\n        FirstName,\n        Title,\n        TitleOfCourtesy,\n        BirthDate,\n        HireDate,\n        Address,\n        City,\n        Region,\n        PostalCode,\n        Country,\n        HomePhone,\n        Extension,\n        Photo,\n        Notes,\n        ReportsTo,\n        PhotoPath,\n        OutOfOffice\n    };\n\n    private void AddButtonColumn()\n    {\n        DataGridViewButtonColumn buttons = new DataGridViewButtonColumn();\n        {\n            buttons.HeaderText = &quot;Sales&quot;;\n            buttons.Text = &quot;Sales&quot;;\n            buttons.UseColumnTextForButtonValue = true;\n            buttons.AutoSizeMode =\n                DataGridViewAutoSizeColumnMode.AllCells;\n            buttons.FlatStyle = FlatStyle.Standard;\n            buttons.CellTemplate.Style.BackColor = Color.Honeydew;\n            buttons.DisplayIndex = 0;\n        }\n\n        DataGridView1.Columns.Add(buttons);\n\n    }\n\n    private void AddOutOfOfficeColumn()\n    {\n        DataGridViewCheckBoxColumn column = new DataGridViewCheckBoxColumn();\n        {\n            column.HeaderText = ColumnName.OutOfOffice.ToString();\n            column.Name = ColumnName.OutOfOffice.ToString();\n            column.AutoSizeMode = \n                DataGridViewAutoSizeColumnMode.DisplayedCells;\n            column.FlatStyle = FlatStyle.Standard;\n            column.ThreeState = true;\n            column.CellTemplate = new DataGridViewCheckBoxCell();\n            column.CellTemplate.Style.BackColor = Color.Beige;\n        }\n\n        DataGridView1.Columns.Insert(0, column);\n    }\n\n    private void PopulateSales(DataGridViewCellEventArgs buttonClick)\n    {\n\n        string employeeId = DataGridView1.Rows[buttonClick.RowIndex]\n            .Cells[ColumnName.EmployeeId.ToString()].Value.ToString();\n        DataGridView2.DataSource = Populate(&quot;SELECT * FROM Orders WHERE EmployeeId = &quot; + employeeId);\n    }\n\n    #region &quot;SQL Error handling&quot;\n    private void DataGridView1_DataError(object sender, DataGridViewDataErrorEventArgs anError)\n    {\n\n        MessageBox.Show(&quot;Error happened &quot; + anError.Context.ToString());\n\n        if (anError.Context == DataGridViewDataErrorContexts.Commit)\n        {\n            MessageBox.Show(&quot;Commit error&quot;);\n        }\n        if (anError.Context == DataGridViewDataErrorContexts.CurrentCellChange)\n        {\n            MessageBox.Show(&quot;Cell change&quot;);\n        }\n        if (anError.Context == DataGridViewDataErrorContexts.Parsing)\n        {\n            MessageBox.Show(&quot;parsing error&quot;);\n        }\n        if (anError.Context == DataGridViewDataErrorContexts.LeaveControl)\n        {\n            MessageBox.Show(&quot;leave control error&quot;);\n        }\n\n        if ((anError.Exception) is ConstraintException)\n        {\n            DataGridView view = (DataGridView)sender;\n            view.Rows[anError.RowIndex].ErrorText = &quot;an error&quot;;\n            view.Rows[anError.RowIndex].Cells[anError.ColumnIndex].ErrorText = &quot;an error&quot;;\n\n            anError.ThrowException = false;\n        }\n    }\n    #endregion\n\n    private void DataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)\n    {\n\n        if (IsANonHeaderLinkCell(e))\n        {\n            MoveToLinked(e);\n        }\n        else if (IsANonHeaderButtonCell(e))\n        {\n            PopulateSales(e);\n        }\n    }\n\n    private void MoveToLinked(DataGridViewCellEventArgs e)\n    {\n        string employeeId;\n        object value = DataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value;\n        if (value is DBNull) { return; }\n\n        employeeId = value.ToString();\n        DataGridViewCell boss = RetrieveSuperiorsLastNameCell(employeeId);\n        if (boss != null)\n        {\n            DataGridView1.CurrentCell = boss;\n        }\n    }\n\n    private bool IsANonHeaderLinkCell(DataGridViewCellEventArgs cellEvent)\n    {\n        if (DataGridView1.Columns[cellEvent.ColumnIndex] is\n            DataGridViewLinkColumn &amp;&amp;\n            cellEvent.RowIndex != -1)\n        { return true; }\n        else { return false; }\n    }\n\n    private bool IsANonHeaderButtonCell(DataGridViewCellEventArgs cellEvent)\n    {\n        if (DataGridView1.Columns[cellEvent.ColumnIndex] is\n            DataGridViewButtonColumn &amp;&amp;\n            cellEvent.RowIndex != -1)\n        { return true; }\n        else { return (false); }\n    }\n\n    private DataGridViewCell RetrieveSuperiorsLastNameCell(string employeeId)\n    {\n\n        foreach (DataGridViewRow row in DataGridView1.Rows)\n        {\n            if (row.IsNewRow) { return null; }\n            if (row.Cells[ColumnName.EmployeeId.ToString()].Value.ToString().Equals(employeeId))\n            {\n                return row.Cells[ColumnName.LastName.ToString()];\n            }\n        }\n        return null;\n    }\n\n    #region &quot;checkbox state&quot;\n    Dictionary&lt;string, bool&gt; inOffice = new Dictionary&lt;string, bool&gt;();\n    private void DataGridView1_CellValuePushed(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        if (IsCheckBoxColumn(e.ColumnIndex))\n        {\n            string employeeId = GetKey(e);\n            if (!inOffice.ContainsKey(employeeId))\n            {\n                inOffice.Add(employeeId, (Boolean)e.Value);\n            }\n            else\n            {\n                inOffice[employeeId] = (Boolean)e.Value;\n            }\n        }\n    }\n\n    private string GetKey(DataGridViewCellValueEventArgs cell)\n    {\n        return DataGridView1.Rows[cell.RowIndex].\n            Cells[ColumnName.EmployeeId.ToString()].Value.ToString();\n    }\n\n    private void DataGridView1_CellValueNeeded(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n\n        if (IsCheckBoxColumn(e.ColumnIndex))\n        {\n            string employeeId = GetKey(e);\n            if (!inOffice.ContainsKey(employeeId))\n            {\n                bool defaultValue = false;\n                inOffice.Add(employeeId, defaultValue);\n            }\n\n            e.Value = inOffice[employeeId];\n        }\n    }\n\n    private bool IsCheckBoxColumn(int columnIndex)\n    {\n        DataGridViewColumn outOfOfficeColumn =\n            DataGridView1.Columns[ColumnName.OutOfOffice.ToString()];\n        return (DataGridView1.Columns[columnIndex] == outOfOfficeColumn);\n    }\n    #endregion\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#0\">Imports System\nImports System.Data\nImports System.Data.SqlClient\nImports System.Windows.Forms\nImports System.Collections.Generic\nImports System.Drawing\n\nPublic Class Employees\n    Inherits System.Windows.Forms.Form\n\n    Private WithEvents DataGridView1 As New DataGridView\n    Private WithEvents DataGridView2 As New DataGridView\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Try\n            Application.EnableVisualStyles()\n            Application.Run(New Employees())\n        Catch e As Exception\n            MessageBox.Show(e.Message &amp; e.StackTrace)\n        End Try\n    End Sub\n\n    Private Sub Form1_Load(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Load\n\n        Try\n            SetUpForm()\n            SetUpDataGridView1()\n            SetUpDataGridView2()\n        Catch ex As SqlException\n            MessageBox.Show(&quot;The connection string &lt;&quot; _\n                &amp; connectionString _\n                &amp; &quot;&gt; failed to connect.  Modify it to connect to &quot; _\n                &amp; &quot;a Northwind database accessible to your system.&quot;, _\n                &quot;ERROR&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n            Application.Exit()\n        End Try\n    End Sub\n\n    Private Sub SetUpForm()\n        Size = New Size(800, 600)\n        Dim flowLayout As New FlowLayoutPanel()\n        flowLayout.FlowDirection = FlowDirection.TopDown\n        flowLayout.Dock = DockStyle.Fill\n        Controls.Add(flowLayout)\n        Text = &quot;DataGridView columns demo&quot;\n\n        flowLayout.Controls.Add(DataGridView1)\n        flowLayout.Controls.Add(DataGridView2)\n    End Sub\n\n    Private Sub SetUpDataGridView2()\n        DataGridView2.Dock = DockStyle.Bottom\n        DataGridView2.TopLeftHeaderCell.Value = &quot;Sales Details&quot;\n        DataGridView2.RowHeadersWidthSizeMode = _\n        DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders\n    End Sub\n\n    Private Sub SetUpDataGridView1()\n        &#39; Virtual mode is turned on so that the\n        &#39; unbound DataGridViewCheckBoxColumn will\n        &#39; keep its state when the bound columns are\n        &#39; sorted.\n        DataGridView1.VirtualMode = True\n\n        DataGridView1.AutoSize = True\n        DataGridView1.DataSource = _\n            Populate(&quot;SELECT * FROM Employees&quot;)\n        DataGridView1.TopLeftHeaderCell.Value = &quot;Employees&quot;\n        DataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders\n        DataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.AutoSize\n        DataGridView1.AutoSizeColumnsMode = _\n            DataGridViewAutoSizeColumnsMode.AllCells\n        DataGridView1.AllowUserToAddRows = False\n        DataGridView1.AllowUserToDeleteRows = False\n\n        &#39; The below autogenerated column is removed so \n        &#39; a DataGridViewComboboxColumn could be used instead.\n        DataGridView1.Columns.Remove( _\n            ColumnName.TitleOfCourtesy.ToString())\n        DataGridView1.Columns.Remove(ColumnName.ReportsTo.ToString())\n\n        AddLinkColumn()\n        AddComboBoxColumns()\n        AddButtonColumn()\n        AddOutOfOfficeColumn()\n    End Sub\n\n    Private Sub AddComboBoxColumns()\n        Dim comboboxColumn As DataGridViewComboBoxColumn\n        comboboxColumn = CreateComboBoxColumn()\n        SetAlternateChoicesUsingDataSource(comboboxColumn)\n        comboboxColumn.HeaderText = _\n            &quot;TitleOfCourtesy (via DataSource property)&quot;\n        DataGridView1.Columns.Insert(0, comboboxColumn)\n\n        comboboxColumn = CreateComboBoxColumn()\n        SetAlternateChoicesUsingItems(comboboxColumn)\n        comboboxColumn.HeaderText = _\n            &quot;TitleOfCourtesy (via Items property)&quot;\n        &#39; Tack this example column onto the end.\n        DataGridView1.Columns.Add(comboboxColumn)\n    End Sub\n\n    Private Sub AddLinkColumn()\n\n        Dim links As New DataGridViewLinkColumn()\n        With links\n            .UseColumnTextForLinkValue = True\n            .HeaderText = ColumnName.ReportsTo.ToString()\n            .DataPropertyName = ColumnName.ReportsTo.ToString()\n            .ActiveLinkColor = Color.White\n            .LinkBehavior = LinkBehavior.SystemDefault\n            .LinkColor = Color.Blue\n            .TrackVisitedState = True\n            .VisitedLinkColor = Color.YellowGreen\n        End With\n        DataGridView1.Columns.Add(links)\n    End Sub\n\n    Private Shared Sub SetAlternateChoicesUsingItems( _\n        ByVal comboboxColumn As DataGridViewComboBoxColumn)\n\n        comboboxColumn.Items.AddRange(&quot;Mr.&quot;, &quot;Ms.&quot;, &quot;Mrs.&quot;, &quot;Dr.&quot;)\n\n    End Sub\n\n    Private Function CreateComboBoxColumn() _\n        As DataGridViewComboBoxColumn\n        Dim column As New DataGridViewComboBoxColumn()\n\n        With column\n            .DataPropertyName = ColumnName.TitleOfCourtesy.ToString()\n            .HeaderText = ColumnName.TitleOfCourtesy.ToString()\n            .DropDownWidth = 160\n            .Width = 90\n            .MaxDropDownItems = 3\n            .FlatStyle = FlatStyle.Flat\n        End With\n        Return column\n    End Function\n\n    Private Sub SetAlternateChoicesUsingDataSource( _\n        ByVal comboboxColumn As DataGridViewComboBoxColumn)\n        With comboboxColumn\n            .DataSource = RetrieveAlternativeTitles()\n            .ValueMember = ColumnName.TitleOfCourtesy.ToString()\n            .DisplayMember = .ValueMember\n        End With\n    End Sub\n\n    Private Function RetrieveAlternativeTitles() As DataTable\n        Return Populate( _\n            &quot;SELECT distinct TitleOfCourtesy FROM Employees&quot;)\n    End Function\n\n    Private connectionString As String = _\n            &quot;Integrated Security=SSPI;Persist Security Info=False;&quot; _\n            &amp; &quot;Initial Catalog=Northwind;Data Source=localhost&quot;\n\n    Private Function Populate(ByVal sqlCommand As String) As DataTable\n        Dim northwindConnection As New SqlConnection(connectionString)\n        northwindConnection.Open()\n\n        Dim command As New SqlCommand(sqlCommand, _\n            northwindConnection)\n        Dim adapter As New SqlDataAdapter()\n        adapter.SelectCommand = command\n        Dim table As New DataTable()\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture\n        adapter.Fill(table)\n\n        Return table\n    End Function\n\n    &#39; Using an enum provides some abstraction between column index\n    &#39; and column name along with compile time checking, and gives\n    &#39; a handy place to store the column names.\n    Enum ColumnName\n        EmployeeId\n        LastName\n        FirstName\n        Title\n        TitleOfCourtesy\n        BirthDate\n        HireDate\n        Address\n        City\n        Region\n        PostalCode\n        Country\n        HomePhone\n        Extension\n        Photo\n        Notes\n        ReportsTo\n        PhotoPath\n        OutOfOffice\n    End Enum\n\n    Private Sub AddButtonColumn()\n        Dim buttons As New DataGridViewButtonColumn()\n        With buttons\n            .HeaderText = &quot;Sales&quot;\n            .Text = &quot;Sales&quot;\n            .UseColumnTextForButtonValue = True\n            .AutoSizeMode = DataGridViewAutoSizeColumnMode.DisplayedCells\n            .FlatStyle = FlatStyle.Standard\n            .CellTemplate.Style.BackColor = Color.Honeydew\n            .DisplayIndex = 0\n        End With\n\n        DataGridView1.Columns.Add(buttons)\n\n    End Sub\n\n    Private Sub AddOutOfOfficeColumn()\n        Dim column As New DataGridViewCheckBoxColumn()\n        With column\n            .HeaderText = ColumnName.OutOfOffice.ToString()\n            .Name = ColumnName.OutOfOffice.ToString()\n            .AutoSizeMode = DataGridViewAutoSizeColumnMode.DisplayedCells\n            .FlatStyle = FlatStyle.Standard\n            .CellTemplate = New DataGridViewCheckBoxCell()\n            .CellTemplate.Style.BackColor = Color.Beige\n        End With\n\n        DataGridView1.Columns.Insert(0, column)\n    End Sub\n\n    Private Sub PopulateSales( _\n        ByVal buttonClick As DataGridViewCellEventArgs)\n\n        Dim employeeId As String = _\n            DataGridView1.Rows(buttonClick.RowIndex). _\n            Cells(ColumnName.EmployeeId.ToString()).Value().ToString()\n        DataGridView2.DataSource = Populate( _\n            &quot;SELECT * FROM Orders WHERE EmployeeId = &quot; &amp; employeeId)\n    End Sub\n\n#Region &quot;SQL Error handling&quot;\n    Private Sub DataGridView1_DataError(ByVal sender As Object, _\n    ByVal e As DataGridViewDataErrorEventArgs) _\n    Handles DataGridView1.DataError\n\n        MessageBox.Show(&quot;Error happened &quot; _\n            &amp; e.Context.ToString())\n\n        If (e.Context = DataGridViewDataErrorContexts.Commit) _\n            Then\n            MessageBox.Show(&quot;Commit error&quot;)\n        End If\n        If (e.Context = DataGridViewDataErrorContexts _\n            .CurrentCellChange) Then\n            MessageBox.Show(&quot;Cell change&quot;)\n        End If\n        If (e.Context = DataGridViewDataErrorContexts.Parsing) _\n            Then\n            MessageBox.Show(&quot;parsing error&quot;)\n        End If\n        If (e.Context = _\n            DataGridViewDataErrorContexts.LeaveControl) Then\n            MessageBox.Show(&quot;leave control error&quot;)\n        End If\n\n        If (TypeOf (e.Exception) Is ConstraintException) Then\n            Dim view As DataGridView = CType(sender, DataGridView)\n            view.Rows(e.RowIndex).ErrorText = &quot;an error&quot;\n            view.Rows(e.RowIndex).Cells(e.ColumnIndex) _\n                .ErrorText = &quot;an error&quot;\n\n            e.ThrowException = False\n        End If\n    End Sub\n#End Region\n\n    Private Sub DataGridView1_CellContentClick(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellContentClick\n\n        If IsANonHeaderLinkCell(e) Then\n            MoveToLinked(e)\n        ElseIf IsANonHeaderButtonCell(e) Then\n            PopulateSales(e)\n        End If\n    End Sub\n\n    Private Sub MoveToLinked(ByVal e As DataGridViewCellEventArgs)\n        Dim employeeId As String\n        Dim value As Object = DataGridView1.Rows(e.RowIndex). _\n            Cells(e.ColumnIndex).Value\n        If value.GetType Is GetType(DBNull) Then Return\n\n        employeeId = CType(value, String)\n        Dim boss As DataGridViewCell = _\n            RetrieveSuperiorsLastNameCell(employeeId)\n        If boss IsNot Nothing Then\n            DataGridView1.CurrentCell = boss\n        End If\n    End Sub\n\n    Private Function IsANonHeaderLinkCell(ByVal cellEvent As _\n        DataGridViewCellEventArgs) As Boolean\n\n        If TypeOf DataGridView1.Columns(cellEvent.ColumnIndex) _\n            Is DataGridViewLinkColumn _\n            AndAlso Not cellEvent.RowIndex = -1 Then _\n            Return True Else Return False\n\n    End Function\n\n    Private Function IsANonHeaderButtonCell(ByVal cellEvent As _\n        DataGridViewCellEventArgs) As Boolean\n\n        If TypeOf DataGridView1.Columns(cellEvent.ColumnIndex) _\n            Is DataGridViewButtonColumn _\n            AndAlso Not cellEvent.RowIndex = -1 Then _\n            Return True Else Return (False)\n\n    End Function\n\n    Private Function RetrieveSuperiorsLastNameCell( _\n        ByVal employeeId As String) As DataGridViewCell\n\n        For Each row As DataGridViewRow In DataGridView1.Rows\n            If row.IsNewRow Then Return Nothing\n            If row.Cells(ColumnName.EmployeeId.ToString()). _\n                Value.ToString().Equals(employeeId) Then\n                Return row.Cells(ColumnName.LastName.ToString())\n            End If\n        Next\n        Return Nothing\n    End Function\n\n#Region &quot;checkbox state&quot;\n    Dim inOffice As New Dictionary(Of String, Boolean)\n    Private Sub DataGridView1_CellValuePushed(ByVal sender As Object, _\n     ByVal e As DataGridViewCellValueEventArgs) _\n        Handles DataGridView1.CellValuePushed\n\n        If IsCheckBoxColumn(e.ColumnIndex) Then\n            Dim employeeId As String = GetKey(e)\n            If Not inOffice.ContainsKey(employeeId) Then\n                inOffice.Add(employeeId, CType(e.Value, Boolean))\n            Else\n                inOffice.Item(employeeId) = CType(e.Value, Boolean)\n            End If\n        End If\n    End Sub\n\n    Private Function GetKey(ByVal cell As DataGridViewCellValueEventArgs) As String\n        Return DataGridView1.Rows(cell.RowIndex).Cells( _\n            ColumnName.EmployeeId.ToString()).Value().ToString()\n    End Function\n\n    Private Sub DataGridView1_CellValueNeeded(ByVal sender As Object, _\n     ByVal e As DataGridViewCellValueEventArgs) _\n        Handles DataGridView1.CellValueNeeded\n\n        If IsCheckBoxColumn(e.ColumnIndex) Then\n            Dim employeeId As String = GetKey(e)\n            If Not inOffice.ContainsKey(employeeId) Then\n                Dim defaultValue As Boolean = False\n                inOffice.Add(employeeId, defaultValue)\n            End If\n\n            e.Value = inOffice.Item(employeeId)\n        End If\n    End Sub\n\n    Private Function IsCheckBoxColumn(ByVal columnIndex As Integer) As Boolean\n\n        Dim outOfOfficeColumn As DataGridViewColumn = _\n            DataGridView1.Columns(ColumnName.OutOfOffice.ToString())\n        Return (DataGridView1.Columns(columnIndex) Is outOfOfficeColumn)\n\n    End Function\n#End Region\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The DataGridViewComboBoxColumn class is a specialized type of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> used to logically host cells that enable users to select values from a list of choices. A DataGridViewComboBoxColumn has an associated <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a> in every <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> that intersects it.  </p>\n<p> You can populate the cells manually by setting their <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> properties. Alternatively, you can bind the column to the data source indicated by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property. If the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is bound to a database table, set the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName_\" data-linktype=\"relative-path\">DataPropertyName</a> property to the name of a column in the table. If the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is bound to a collection of objects, set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName_\" data-linktype=\"relative-path\">DataPropertyName</a> property to the name of an object property.  </p>\n<p> You can populate the column drop-down list manually by adding values to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_Items_\" data-linktype=\"relative-path\">Items</a> collection. Alternatively, you can bind the drop-down list to its own data source by setting the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property. If the values are objects in a collection or records in a database table, you must also set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> properties. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> property indicates which object property or database column provides the values that are displayed in the drop-down list. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> property indicates which object property or database column is used to set the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> property.  </p>\n<p> One typical scenario is to bind the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to a parent database table and bind the drop-down list to a related child table. For example, you might bind the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to an <code>Orders</code> table that contains a <code>ProductID</code> column and set the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property to a <code>Products</code> table that contains <code>ProductID</code> and <code>ProductName</code> columns. In this case, you would set the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName_\" data-linktype=\"relative-path\">DataPropertyName</a> property to &quot;ProductID&quot; to populate its cell values from the <code>Orders.ProductID</code> column. However, to display the actual product names in the cells and the drop-down list, you would map these values to the <code>Products</code> table by setting the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> property to &quot;ProductID&quot; and the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> property to &quot;ProductName&quot;.  </p>\n<p> The drop-down list values (or the values indicated by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> property) must include the actual cell values or the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control will throw an exception.  </p>\n<p> Setting the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DataSource_\" data-linktype=\"relative-path\">DataSource</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> properties automatically sets the corresponding properties of all cells in the column including the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a>. To override these property values for specific cells, set the column property first, and then set the cell properties.  </p>\n<p> Unlike the <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a> control, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a> does not have <a class=\"xref\" href=\"system.windows.forms.combobox#System_Windows_Forms_ComboBox_SelectedIndex_\" data-linktype=\"relative-path\">SelectedIndex</a> and <a class=\"xref\" href=\"system.windows.forms.listcontrol#System_Windows_Forms_ListControl_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> properties. Instead, selecting a value from a drop-down list sets the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> property.  </p>\n<p> The default sort mode for this column type is <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataGridViewComboBoxColumn()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcolumn\" data-linktype=\"relative-path\">DataGridViewTextBoxColumn</a> class to the default state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataGridViewComboBoxColumn ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When initializing a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> instance, this constructor sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_AutoComplete\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AutoComplete</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether cells in the column will match the characters being entered in the cell with one from the possible selections.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AutoComplete { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if auto completion is activated; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_AutoComplete_\" data-linktype=\"relative-path\">AutoComplete</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_AutoComplete_\" data-linktype=\"relative-path\">AutoComplete</a> property of every cell in the column. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CellTemplate</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the template used to create cells.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that all other cells in the column are modeled after. The default value is a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>When setting this property to a value that is not of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The constructor for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> class initializes this property to a newly created <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Changing the properties of the cell template will not immediately affect the user interface (UI) of the column&#39;s existing cells. These changes are only apparent after the column is regenerated (for example, by sorting the column or through a call to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_InvalidateColumn_\" data-linktype=\"relative-path\">InvalidateColumn</a> method).</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_DataSource\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSource</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the data source that populates the selections for the combo boxes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object DataSource { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents a data source. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DataSource or <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_Items_\" data-linktype=\"relative-path\">Items</a> properties specify where to retrieve the selection data shown in the combo box drop-down list. When using the DataSource property, if the data must be drawn from a nondefault property or column, then the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> property must be set to the name of the nondefault property or column.  </p>\n<p> If the DataSource property is set to a string array, then <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> do not need to be set because each string in the array will be used for both value and display.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayMember</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a string that specifies the property or column from which to retrieve strings for display in the combo boxes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DisplayMember { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that specifies the name of a property or column in the data source specified in the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.DataSource*</span> property. The default is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The data for the values stored in a column of <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a> objects is obtained from the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a>. If this data comes from a nondefault property or column, then the DisplayMember property must be set to the necessary property name or column name.  </p>\n<p> If the cell values are internal values not visible to the user, then use DisplayMember and <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> to map the internal cell values to user-viewable values.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set to a string array, the DisplayMember property does not need to be set because each string in the array will be used as a valid display string and as a valid underlying value.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_DisplayStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayStyle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that determines how the combo box is displayed when not editing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.DataGridViewComboBoxDisplayStyle DisplayStyle { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxdisplaystyle\" data-linktype=\"relative-path\">DataGridViewComboBoxDisplayStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxdisplaystyle\" data-linktype=\"relative-path\">DataGridViewComboBoxDisplayStyle</a> value indicating the combo box appearance. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxdisplaystyle\" data-linktype=\"relative-path\">DataGridViewComboBoxDisplayStyle</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DisplayStyle property affects the appearance of cells in the column when they are not in edit mode, and regardless of whether they are read-only. When a cell is in edit mode, it always looks like a <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a> control.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayStyleForCurrentCellOnly_\" data-linktype=\"relative-path\">DisplayStyleForCurrentCellOnly</a> property value is <code>false</code>, the DisplayStyle property affects all cells in the column; otherwise, the DisplayStyle property affects only the current cell.  </p>\n<p> The behavior and appearance of the drop-down arrow in the cells is indicated by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_FlatStyle_\" data-linktype=\"relative-path\">FlatStyle</a> property.  </p>\n<p> To enable cell highlighting when the mouse pointer is over a cell, you must set the DisplayStyle property to <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxdisplaystyle\" data-linktype=\"relative-path\">DataGridViewComboBoxDisplayStyle</a> and the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_FlatStyle_\" data-linktype=\"relative-path\">FlatStyle</a> property to <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a>.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DisplayStyle_\" data-linktype=\"relative-path\">DisplayStyle</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DisplayStyle_\" data-linktype=\"relative-path\">DisplayStyle</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_DisplayStyleForCurrentCellOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayStyleForCurrentCellOnly</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyle*</span> property value applies only to the current cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control when the current cell is in this column.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool DisplayStyleForCurrentCellOnly { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the display style applies only to the current cell; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the DisplayStyleForCurrentCellOnly property value is <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayStyle_\" data-linktype=\"relative-path\">DisplayStyle</a> property affects all cells in the column; otherwise, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayStyle_\" data-linktype=\"relative-path\">DisplayStyle</a> property affects only the current cell.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayStyle_\" data-linktype=\"relative-path\">DisplayStyle</a> property affects the appearance of cells in the column when they are not in edit mode, and regardless of whether they are read-only. When a cell is in edit mode, it always looks like a <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a> control.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DisplayStyleForCurrentCellOnly_\" data-linktype=\"relative-path\">DisplayStyleForCurrentCellOnly</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DisplayStyleForCurrentCellOnly_\" data-linktype=\"relative-path\">DisplayStyleForCurrentCellOnly</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_DropDownWidth\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DropDownWidth</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the width of the drop-down lists of the combo boxes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int DropDownWidth { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The width, in pixels, of the drop-down lists. The default is 1.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property corresponds to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DropDownWidth_\" data-linktype=\"relative-path\">DropDownWidth</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> member.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DropDownWidth_\" data-linktype=\"relative-path\">DropDownWidth</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_DropDownWidth_\" data-linktype=\"relative-path\">DropDownWidth</a> property of every cell in the column. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_FlatStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FlatStyle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the flat style appearance of the column&#39;s cells.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.FlatStyle FlatStyle { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a> value indicating the cell appearance. The default is <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The FlatStyle property affects the behavior and appearance of the drop-down arrows for the cells in this column.  </p>\n<p> Starting with the .NET Framework 4.6, when the FlatStyle property is set to <code>Flat</code> or <code>Popup</code> the drop-down arrows are resized according to the system DPI settings when the app.config file contains the following entry:  </p>\n<pre><code>&lt;appSettings&gt;  \n  &lt;add key=&quot;EnableWindowsFormsHighDpiAutoResizing&quot; value=&quot;true&quot; /&gt;  \n&lt;/appSettings&gt;  \n</code></pre><p> To enable cell highlighting when the mouse pointer is over a cell, you must set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayStyle_\" data-linktype=\"relative-path\">DisplayStyle</a> property to <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxdisplaystyle\" data-linktype=\"relative-path\">DataGridViewComboBoxDisplayStyle</a> and the FlatStyle property to <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a>.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_FlatStyle_\" data-linktype=\"relative-path\">FlatStyle</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_FlatStyle_\" data-linktype=\"relative-path\">FlatStyle</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_Items\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Items</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of objects used as selections in the combo boxes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.DataGridViewComboBoxCell.ObjectCollection Items { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell.objectcollection\" data-linktype=\"relative-path\">DataGridViewComboBoxCell.ObjectCollection</a> that represents the selections in the combo boxes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property returns the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_Items_\" data-linktype=\"relative-path\">Items</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property.  </p>\n<p> The Items or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> properties are used to populate the selections of the combo boxes.  </p>\n<p> If strings are added to Items, then the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> properties do not need to be set because each string added will be used for both value and display.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> does not support the use of multiple items with identical display values.  </p>\n</div>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set, then Items cannot be used.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_MaxDropDownItems\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxDropDownItems</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the maximum number of items in the drop-down list of the cells in the column.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int MaxDropDownItems { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of drop-down list items, from 1 to 100. The default is 8.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_MaxDropDownItems_\" data-linktype=\"relative-path\">MaxDropDownItems</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_MaxDropDownItems_\" data-linktype=\"relative-path\">MaxDropDownItems</a> property of every cell in the column. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_Sorted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Sorted</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the items in the combo box are sorted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Sorted { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the combo box is sorted; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_Sorted_\" data-linktype=\"relative-path\">Sorted</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_Sorted_\" data-linktype=\"relative-path\">Sorted</a> property of every cell in the column. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_ValueMember\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ValueMember</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a string that specifies the property or column from which to get values that correspond to the selections in the drop-down list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ValueMember { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that specifies the name of a property or column used in the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.DataSource*</span> property. The default is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>See <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DisplayMember_\" data-linktype=\"relative-path\">DisplayMember</a> for more information about its relationship with ValueMember.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set to a string array, the ValueMember property does not need to be set because each string in the array will be used as a valid display string and as a valid underlying value.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn#System_Windows_Forms_DataGridViewComboBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell#System_Windows_Forms_DataGridViewComboBoxCell_ValueMember_\" data-linktype=\"relative-path\">ValueMember</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an exact copy of this column.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the cloned <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to duplicate a column of cells.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewComboBoxColumn_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a string that describes the column.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that describes the column.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewComboBoxColumn.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.AutoComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.DataSource\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.DisplayMember\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyleForCurrentCellOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.DropDownWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.FlatStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.Items\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.MaxDropDownItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.Sorted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn.ValueMember\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"3e13f5b5-f736-0e70-d541-dc5fbe8f7f58\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a column of  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewComboBoxColumn\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewComboBoxColumn.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DataGridViewComboBoxColumn","System.Windows.Forms.DataGridViewComboBoxColumn..ctor","System.Windows.Forms.DataGridViewComboBoxColumn.AutoComplete","System.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate","System.Windows.Forms.DataGridViewComboBoxColumn.Clone","System.Windows.Forms.DataGridViewComboBoxColumn.DataSource","System.Windows.Forms.DataGridViewComboBoxColumn.DisplayMember","System.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyle","System.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyleForCurrentCellOnly","System.Windows.Forms.DataGridViewComboBoxColumn.DropDownWidth","System.Windows.Forms.DataGridViewComboBoxColumn.FlatStyle","System.Windows.Forms.DataGridViewComboBoxColumn.Items","System.Windows.Forms.DataGridViewComboBoxColumn.MaxDropDownItems","System.Windows.Forms.DataGridViewComboBoxColumn.Sorted","System.Windows.Forms.DataGridViewComboBoxColumn.ToString","System.Windows.Forms.DataGridViewComboBoxColumn.ValueMember"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewComboBoxColumn","System::Windows::Forms::DataGridViewComboBoxColumn","System.Windows.Forms.DataGridViewComboBoxColumn.#ctor","System::Windows::Forms::DataGridViewComboBoxColumn::#ctor","System.Windows.Forms.DataGridViewComboBoxColumn.AutoComplete","System::Windows::Forms::DataGridViewComboBoxColumn::AutoComplete","System.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate","System::Windows::Forms::DataGridViewComboBoxColumn::CellTemplate","System.Windows.Forms.DataGridViewComboBoxColumn.Clone","System::Windows::Forms::DataGridViewComboBoxColumn::Clone","System.Windows.Forms.DataGridViewComboBoxColumn.DataSource","System::Windows::Forms::DataGridViewComboBoxColumn::DataSource","System.Windows.Forms.DataGridViewComboBoxColumn.DisplayMember","System::Windows::Forms::DataGridViewComboBoxColumn::DisplayMember","System.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyle","System::Windows::Forms::DataGridViewComboBoxColumn::DisplayStyle","System.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyleForCurrentCellOnly","System::Windows::Forms::DataGridViewComboBoxColumn::DisplayStyleForCurrentCellOnly","System.Windows.Forms.DataGridViewComboBoxColumn.DropDownWidth","System::Windows::Forms::DataGridViewComboBoxColumn::DropDownWidth","System.Windows.Forms.DataGridViewComboBoxColumn.FlatStyle","System::Windows::Forms::DataGridViewComboBoxColumn::FlatStyle","System.Windows.Forms.DataGridViewComboBoxColumn.Items","System::Windows::Forms::DataGridViewComboBoxColumn::Items","System.Windows.Forms.DataGridViewComboBoxColumn.MaxDropDownItems","System::Windows::Forms::DataGridViewComboBoxColumn::MaxDropDownItems","System.Windows.Forms.DataGridViewComboBoxColumn.Sorted","System::Windows::Forms::DataGridViewComboBoxColumn::Sorted","System.Windows.Forms.DataGridViewComboBoxColumn.ToString","System::Windows::Forms::DataGridViewComboBoxColumn::ToString","System.Windows.Forms.DataGridViewComboBoxColumn.ValueMember","System::Windows::Forms::DataGridViewComboBoxColumn::ValueMember"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"3e13f5b5-f736-0e70-d541-dc5fbe8f7f58","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/DataGridViewComboBoxColumn.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewComboBoxColumn class | Microsoft Docs","_op_ogTitle":"DataGridViewComboBoxColumn class","description":"Represents a column of  objects.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewComboBoxColumn","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewcomboboxcolumn","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewcomboboxcolumn","fileRelativePath":"api/System.Windows.Forms.DataGridViewComboBoxColumn.html"},"themesRelativePathToOutputRoot":"_themes/"}