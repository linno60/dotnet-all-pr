{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">HitTestFilterCallback</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the callback method that specifies parts of the visual tree to omit from hit test processing</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate System.Windows.Media.HitTestFilterBehavior HitTestFilterCallback(DependencyObject potentialHitTestTarget);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">HitTestFilterCallback</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how to invoke <a class=\"xref\" href=\"system.windows.media.visualtreehelper#System_Windows_Media_VisualTreeHelper_HitTest_\" data-linktype=\"relative-path\">HitTest</a> by using a HitTestFilterCallback value. The corresponding hit test callback method is also defined.  </p>\n<pre><code class=\"lang-cs\" name=\"HitTestingOverview#104\">// Respond to the mouse wheel event by setting up a hit test filter and results enumeration.\nprivate void OnMouseWheel(object sender, MouseWheelEventArgs e)\n{\n    // Retrieve the coordinate of the mouse position.\n    Point pt = e.GetPosition((UIElement)sender);\n\n    // Clear the contents of the list used for hit test results.\n    hitResultsList.Clear();\n\n    // Set up a callback to receive the hit test result enumeration.\n    VisualTreeHelper.HitTest(myCanvas,\n                      new HitTestFilterCallback(MyHitTestFilter),\n                      new HitTestResultCallback(MyHitTestResult),\n                      new PointHitTestParameters(pt));\n\n    // Perform actions on the hit test results list.\n    if (hitResultsList.Count &gt; 0)\n    {\n        ProcessHitTestResultsList();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"HitTestingOverview#104\">&#39; Respond to the mouse wheel event by setting up a hit test filter and results enumeration.\nPrivate Overloads Sub OnMouseWheel(ByVal sender As Object, ByVal e As MouseWheelEventArgs)\n\t&#39; Retrieve the coordinate of the mouse position.\n\tDim pt As Point = e.GetPosition(CType(sender, UIElement))\n\n\t&#39; Clear the contents of the list used for hit test results.\n\thitResultsList.Clear()\n\n\t&#39; Set up a callback to receive the hit test result enumeration.\n\tVisualTreeHelper.HitTest(myCanvas, New HitTestFilterCallback(AddressOf MyHitTestFilter), New HitTestResultCallback(AddressOf MyHitTestResult), New PointHitTestParameters(pt))\n\n\t&#39; Perform actions on the hit test results list.\n\tIf hitResultsList.Count &gt; 0 Then\n\t\tProcessHitTestResultsList()\n\tEnd If\nEnd Sub\n</code></pre><p> The following example shows how to return a <a class=\"xref\" href=\"system.windows.media.hittestfilterbehavior\" data-linktype=\"relative-path\">HitTestFilterBehavior</a> value from a hit test filter callback method.  </p>\n<pre><code class=\"lang-cs\" name=\"HitTestingOverview#106\">// Filter the hit test values for each object in the enumeration.\npublic HitTestFilterBehavior MyHitTestFilter(DependencyObject o)\n{\n    // Test for the object value you want to filter.\n    if (o.GetType() == typeof(Label))\n    {\n        // Visual object and descendants are NOT part of hit test results enumeration.\n        return HitTestFilterBehavior.ContinueSkipSelfAndChildren;\n    }\n    else\n    {\n        // Visual object is part of hit test results enumeration.\n        return HitTestFilterBehavior.Continue;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"HitTestingOverview#106\">&#39; Filter the hit test values for each object in the enumeration.\nPublic Function MyHitTestFilter(ByVal o As DependencyObject) As HitTestFilterBehavior\n\t&#39; Test for the object value you want to filter.\n\tIf o.GetType() Is GetType(Label) Then\n\t\t&#39; Visual object and descendants are NOT part of hit test results enumeration.\n\t\tReturn HitTestFilterBehavior.ContinueSkipSelfAndChildren\n\tElse\n\t\t&#39; Visual object is part of hit test results enumeration.\n\t\tReturn HitTestFilterBehavior.Continue\n\tEnd If\nEnd Function\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree. However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function. The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take. For example, if you return the value, <a class=\"xref\" href=\"system.windows.media.hittestfilterbehavior\" data-linktype=\"relative-path\">HitTestFilterBehavior</a>, you can remove the current visual object and its descendants from the hit test results enumeration. This means that the hit test results callback method will not see these objects in its enumeration.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.  </p>\n</div>\n<p> <img src=\"../add/media/filteredvisualtree-01.png\" alt=\"Pruning a visual tree using a hit test filter\" title=\"Pruning a visual tree using a hit test filter\" data-linktype=\"relative-path\"><br>Pruning a visual tree</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Media.HitTestFilterCallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.HitTestFilterCallback\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.HitTestFilterCallback..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.HitTestFilterCallback.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.HitTestFilterCallback.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.HitTestFilterCallback.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"62070305-f2e7-09f4-a8b6-7771a87560a3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the callback method that specifies parts of the visual tree to omit from hit test processing\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.media/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Media.HitTestFilterCallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Media.HitTestFilterCallback.yml","open_to_public_contributors":false,"api_name":["System.Windows.Media.HitTestFilterCallback","System.Windows.Media.HitTestFilterCallback..ctor","System.Windows.Media.HitTestFilterCallback.Invoke","System.Windows.Media.HitTestFilterCallback.BeginInvoke","System.Windows.Media.HitTestFilterCallback.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Media.HitTestFilterCallback","System::Windows::Media::HitTestFilterCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"62070305-f2e7-09f4-a8b6-7771a87560a3","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Media/HitTestFilterCallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HitTestFilterCallback delegate | Microsoft Docs","_op_ogTitle":"HitTestFilterCallback delegate","description":"Represents the callback method that specifies parts of the visual tree to omit from hit test processing\n","toc_asset_id":"api/_splitted/System.Windows.Media/toc.json","toc_rel":"_splitted/System.Windows.Media/toc.json","source_url":"","ms.assetid":"System.Windows.Media.HitTestFilterCallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.hittestfiltercallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.hittestfiltercallback","fileRelativePath":"api/System.Windows.Media.HitTestFilterCallback.html"},"themesRelativePathToOutputRoot":"_themes/"}