{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DesignerVerb</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a verb that can be invoked from a designer.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class DesignerVerb : System.ComponentModel.Design.MenuCommand</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">System.ComponentModel.Design.MenuCommand</a></span></div><span class=\"lang-csharp\">DesignerVerb</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Checked\" data-linktype=\"relative-path\">Checked</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_CommandChanged\" data-linktype=\"relative-path\">CommandChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_CommandID\" data-linktype=\"relative-path\">CommandID</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Enabled\" data-linktype=\"relative-path\">Enabled</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Invoke\" data-linktype=\"relative-path\">Invoke()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Invoke_System_Object_\" data-linktype=\"relative-path\">Invoke(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_OleStatus\" data-linktype=\"relative-path\">OleStatus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_OnCommandChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCommandChanged(EventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Properties\" data-linktype=\"relative-path\">Properties</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Supported\" data-linktype=\"relative-path\">Supported</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Visible\" data-linktype=\"relative-path\">Visible</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to create DesignerVerb objects and add them to the design-time shortcut menu for a component.  </p>\n<pre><code class=\"lang-cpp\" name=\"DesignerVerb Example#1\">#using &lt;system.dll&gt;\n#using &lt;system.design.dll&gt;\n#using &lt;system.windows.forms.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Windows::Forms;\n\n/* This sample demonstrates a designer that adds menu commands\nto the design-time shortcut menu for a component.\n\nTo test this sample, build the code for the component as a class library,\nadd the resulting component to the toolbox, open a form in design mode,\nand drag the component from the toolbox onto the form.\n\nThe component should appear in the component tray beneath the form.\nRight-click the component.  The verbs should appear in the shortcut menu.\n*/\n// This is a designer class which provides designer verb menu commands for\n// the associated component. This code is called by the design environment at design-time.\nprivate ref class MyDesigner: public ComponentDesigner\n{\npublic:\n\n   property DesignerVerbCollection^ Verbs \n   {\n      // DesignerVerbCollection is overridden from ComponentDesigner\n      virtual DesignerVerbCollection^ get() override\n      {\n         if ( m_Verbs == nullptr )\n         {\n            // Create and initialize the collection of verbs\n            m_Verbs = gcnew DesignerVerbCollection;\n            m_Verbs-&gt;Add( gcnew DesignerVerb( &quot;First Designer Verb&quot;,gcnew EventHandler( this, &amp;MyDesigner::OnFirstItemSelected ) ) );\n            m_Verbs-&gt;Add( gcnew DesignerVerb( &quot;Second Designer Verb&quot;,gcnew EventHandler( this, &amp;MyDesigner::OnSecondItemSelected ) ) );\n         }\n\n         return m_Verbs;\n      }\n   }\n   MyDesigner(){}\n\nprivate:\n   DesignerVerbCollection^ m_Verbs;\n   void OnFirstItemSelected( Object^ /*sender*/, EventArgs^ /*args*/ )\n   {\n      // Display a message\n      MessageBox::Show( &quot;The first designer verb was invoked.&quot; );\n   }\n\n   void OnSecondItemSelected( Object^ /*sender*/, EventArgs^ /*args*/ )\n   {\n      // Display a message\n      MessageBox::Show( &quot;The second designer verb was invoked.&quot; );\n   }\n};\n\n// Associate MyDesigner with this component type using a DesignerAttribute\n[Designer(MyDesigner::typeid)]\npublic ref class Component1: public System::ComponentModel::Component{};\n</code></pre><pre><code class=\"lang-cs\" name=\"DesignerVerb Example#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Collections;\n\n/* This sample demonstrates a designer that adds menu commands\n    to the design-time shortcut menu for a component.\n\n    To test this sample, build the code for the component as a class library, \n    add the resulting component to the toolbox, open a form in design mode, \n    and drag the component from the toolbox onto the form. \n\n    The component should appear in the component tray beneath the form. \n    Right-click the component.  The verbs should appear in the shortcut menu.\n*/\n\nnamespace CSDesignerVerb\n{\n    // Associate MyDesigner with this component type using a DesignerAttribute\n    [Designer(typeof(MyDesigner))]\n    public class Component1 : System.ComponentModel.Component\n    {\n    }\n\n    // This is a designer class which provides designer verb menu commands for \n    // the associated component. This code is called by the design environment at design-time.\n    internal class MyDesigner : ComponentDesigner\n    {\n        DesignerVerbCollection m_Verbs;\n\n        // DesignerVerbCollection is overridden from ComponentDesigner\n        public override DesignerVerbCollection Verbs\n        {\n            get \n            {\n                if (m_Verbs == null) \n                {\n                    // Create and initialize the collection of verbs\n                    m_Verbs = new DesignerVerbCollection();\n\t\t\t\n                    m_Verbs.Add( new DesignerVerb(&quot;First Designer Verb&quot;, new EventHandler(OnFirstItemSelected)) );\n                    m_Verbs.Add( new DesignerVerb(&quot;Second Designer Verb&quot;, new EventHandler(OnSecondItemSelected)) );\n                }\n                return m_Verbs;\n            }\n        }\n\n        MyDesigner() \n        {\n        }\n\n        private void OnFirstItemSelected(object sender, EventArgs args) \n        {\n            // Display a message\n            System.Windows.Forms.MessageBox.Show(&quot;The first designer verb was invoked.&quot;);\n        }\n\n        private void OnSecondItemSelected(object sender, EventArgs args) \n        {\n            // Display a message\n            System.Windows.Forms.MessageBox.Show(&quot;The second designer verb was invoked.&quot;);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DesignerVerb Example#1\">Imports System\nImports System.ComponentModel\nImports System.Collections\nImports System.ComponentModel.Design\n\n&#39;  This sample demonstrates a designer that adds menu commands\n&#39;   to the design-time shortcut menu for a component.\n&#39;\n&#39;   To test this sample, build the code for the component as a class library, \n&#39;   add the resulting component to the toolbox, open a form in design mode, \n&#39;   and drag the component from the toolbox onto the form. \n&#39;\n&#39;   The component should appear in the component tray beneath the form. \n&#39;   Right-click the component.  The verbs should appear in the shortcut menu.\n\nNamespace VBDesignerVerb\n    &#39; Associate MyDesigner with this component type using a DesignerAttribute\n    &lt;Designer(GetType(MyDesigner))&gt; _\n    Public Class Component1\n        Inherits System.ComponentModel.Component\n    End Class \n\n\n    &#39;  This is a designer class which provides designer verb menu commands for \n    &#39;  the associated component. This code is called by the design environment at design-time.    \n    Friend Class MyDesigner\n        Inherits ComponentDesigner\n\n        Private m_Verbs As DesignerVerbCollection\n\n        &#39; DesignerVerbCollection is overridden from ComponentDesigner\n        Public Overrides ReadOnly Property Verbs() As DesignerVerbCollection\n            Get\n                If m_Verbs Is Nothing Then\n                    &#39; Create and initialize the collection of verbs\n                    m_Verbs = New DesignerVerbCollection()\n                    m_Verbs.Add( New DesignerVerb(&quot;First Designer Verb&quot;, New EventHandler(AddressOf OnFirstItemSelected)) )\n                    m_Verbs.Add( New DesignerVerb(&quot;Second Designer Verb&quot;, New EventHandler(AddressOf OnSecondItemSelected)) )\n                End If\n                Return m_Verbs\n            End Get\n        End Property\n\n        Sub New()\n        End Sub \n\n        Private Sub OnFirstItemSelected(ByVal sender As Object, ByVal args As EventArgs)\n            &#39; Display a message\n            System.Windows.Forms.MessageBox.Show(&quot;The first designer verb was invoked.&quot;)\n        End Sub \n\n        Private Sub OnSecondItemSelected(ByVal sender As Object, ByVal args As EventArgs)\n            &#39; Display a message\n            System.Windows.Forms.MessageBox.Show(&quot;The second designer verb was invoked.&quot;)\n        End Sub \n    End Class \nEnd Namespace\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A designer verb is a menu command linked to an event handler. Designer verbs are added to a component&#39;s shortcut menu at design time. In Visual Studio, each designer verb is also listed, using a <a class=\"xref\" href=\"system.windows.forms.linklabel\" data-linktype=\"relative-path\">LinkLabel</a>, in the <strong>Description</strong> pane of the Properties window.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerVerb__ctor_System_String_System_EventHandler_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DesignerVerb(String,EventHandler)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.designerverb\" data-linktype=\"relative-path\">DesignerVerb</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DesignerVerb (string text, EventHandler handler);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text of the menu command that is shown to the user.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handler</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event handler that performs the actions of the verb.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Verbs are menu commands that are dynamically inserted into the menu at run time. Verb commands are usually displayed on either an edit menu or on a component&#39;s shortcut menu.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerVerb__ctor_System_String_System_EventHandler_System_ComponentModel_Design_CommandID_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DesignerVerb(String,EventHandler,CommandID)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.designerverb\" data-linktype=\"relative-path\">DesignerVerb</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DesignerVerb (string text, EventHandler handler, System.ComponentModel.Design.CommandID startCommandID);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text of the menu command that is shown to the user.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handler</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event handler that performs the actions of the verb.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>startCommandID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The starting command ID for this verb. By default, the designer architecture sets aside a range of command IDs for verbs. You can override this by providing a custom command ID.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Verbs are menu commands that are dynamically inserted into the menu at run time. Verb commands are usually displayed on either an edit menu or on a component&#39;s shortcut menu.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerVerb_Description\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Description</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the description of the menu item for the verb.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Description { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string describing the menu item.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerVerb_Text\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Text</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the text description for the verb command on the menu.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Text { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A description for the verb command.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerVerb_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Overrides <span class=\"xref\">stem.Object.ToString*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The verb&#39;s text, or an empty string (&quot;&quot;) if the text field is empty.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.DesignerVerb.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerVerb\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerVerb..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerVerb.Description\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerVerb.Text\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerVerb.ToString\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"4dc3ce19-cc75-3379-b1f7-2ce35c643f42\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a verb that can be invoked from a designer.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.DesignerVerb\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.DesignerVerb.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.DesignerVerb","System.ComponentModel.Design.DesignerVerb..ctor","System.ComponentModel.Design.DesignerVerb.Description","System.ComponentModel.Design.DesignerVerb.Text","System.ComponentModel.Design.DesignerVerb.ToString"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.DesignerVerb","System::ComponentModel::Design::DesignerVerb","System.ComponentModel.Design.DesignerVerb.#ctor","System::ComponentModel::Design::DesignerVerb::#ctor","System.ComponentModel.Design.DesignerVerb.Description","System::ComponentModel::Design::DesignerVerb::Description","System.ComponentModel.Design.DesignerVerb.Text","System::ComponentModel::Design::DesignerVerb::Text","System.ComponentModel.Design.DesignerVerb.ToString","System::ComponentModel::Design::DesignerVerb::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"4dc3ce19-cc75-3379-b1f7-2ce35c643f42","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerVerb.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DesignerVerb class | Microsoft Docs","_op_ogTitle":"DesignerVerb class","description":"Represents a verb that can be invoked from a designer.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.DesignerVerb","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.designerverb","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.designerverb","fileRelativePath":"api/System.ComponentModel.Design.DesignerVerb.html"},"themesRelativePathToOutputRoot":"_themes/"}