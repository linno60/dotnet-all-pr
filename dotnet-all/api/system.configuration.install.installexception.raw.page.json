{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">InstallException</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>The exception that is thrown when an error occurs during the commit, rollback, or uninstall phase of an installation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class InstallException : SystemException</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a></span></div><span class=\"lang-csharp\">InstallException</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo, StreamingContext)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example, plus the examples in the <a class=\"xref\" href=\"system.configuration.install.installexception#System_Configuration_Install_InstallException__ctor_\" data-linktype=\"relative-path\">InstallException</a> constructors, together make up an example showing an assembly having its own installer. The installer is named <code>MyInstaller</code>, which has an attribute <code>RunInstallerAttribute</code>, indicating that this installer will be invoked by <a href=\"../topic/installutil.exe%20(installer%20tool)\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a>. <a href=\"../topic/installutil.exe%20(installer%20tool)\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a> calls the methods <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_\" data-linktype=\"relative-path\">Commit</a>, <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Rollback_\" data-linktype=\"relative-path\">Rollback</a>, <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Install_\" data-linktype=\"relative-path\">Install</a> and <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a>. The code in <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_\" data-linktype=\"relative-path\">Commit</a> presumes that a file named <code>FileDoesNotExist.txt</code> exists before the installation of the assembly can be committed. If the file <code>FileDoesNotExist.txt</code> does not exist, <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_\" data-linktype=\"relative-path\">Commit</a> raises an InstallException. The same is the case with <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> in which an uninstallation will only happen if a file named <code>FileDoesNotExist.txt</code> exists. Otherwise it raises an InstallException. In <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Rollback_\" data-linktype=\"relative-path\">Rollback</a>, a code fragment is executed, which might raise an exception. If the exception is raised, it is caught and an InstallException is raised with that exception being passed to it.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Run this example with the help of Installutil.exe. Type this in the command prompt:  </p>\n</div>\n<p> <code>Installutil InstallException.exe</code>  </p>\n<p> -or-  </p>\n<p> <code>Installutil /u InstallException.exe</code>  </p>\n<pre><code class=\"lang-cs\" name=\"InstallException#1\">using System;\nusing System.ComponentModel;\nusing System.Collections;\nusing System.Configuration.Install;\nusing System.IO;\n\n\n[RunInstaller(true)]\npublic class MyInstaller : Installer\n{\n   public override void Install(IDictionary savedState)\n   {\n      base.Install(savedState);\n      Console.WriteLine(&quot;Install ...&quot;);\n\n      // Commit is called when install goes through successfully.\n      // Rollback is called if there is any error during Install.\n\n      // Uncommenting the code below will lead to &#39;RollBack&#39; being called,\n      // currently &#39;Commit&#39; shall be called.\n\n      // throw new IOException();\n   }\n\n   public override void Commit(IDictionary savedState)\n   {\n      base.Commit(savedState);\n      Console.WriteLine(&quot;Commit ...&quot;);\n      // Throw an error if a particular file doesn&#39;t exist.\n      if(!File.Exists(&quot;FileDoesNotExist.txt&quot;))\n         throw new InstallException();\n      // Perform the final installation if the file exists.\n   }\n\n   public override void Rollback(IDictionary savedState)\n   {\n      base.Rollback(savedState);\n      Console.WriteLine(&quot;RollBack ...&quot;);\n      try\n      {\n         // Performing some activity during rollback that raises an &#39;IOException&#39;.\n         throw new IOException();\n      }\n      catch(Exception e)\n      {\n         throw new InstallException(&quot;IOException raised&quot;, e);\n      }\n      // Perform the remaining rollback activites if no exception raised.\n   }\n\n   public override void Uninstall(IDictionary savedState)\n   {\n      base.Uninstall(savedState);\n      Console.WriteLine(&quot;UnInstall ...&quot;);\n      // Throw an error if a particular file doesn&#39;t exist.\n      if(!File.Exists(&quot;FileDoesNotExist.txt&quot;))\n         throw new InstallException(&quot;The file &#39;FileDoesNotExist&#39;&quot; +\n            &quot; does not exist&quot;);\n      // Perform the uninstall activites if the file exists.\n   }\n}\n\n\n// An Assembly that has its own installer.\npublic class MyAssembly1\n{\n   public static void Main()\n   {\n      Console.WriteLine(&quot;This assembly is just an example for the Installer&quot;);\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"InstallException#1\">#using &lt;System.dll&gt;\n#using &lt;System.Configuration.Install.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::Collections;\nusing namespace System::Configuration::Install;\nusing namespace System::IO;\n\n[RunInstaller(true)]\nref class MyInstaller: public Installer\n{\npublic:\n   virtual void Install( IDictionary^ savedState ) override\n   {\n      Installer::Install( savedState );\n      Console::WriteLine( &quot;Install ...&quot; );\n      \n      // Commit is called when install goes through successfully.\n      // Rollback is called if there is any error during Install.\n      // Uncommenting the code below will lead to &#39;RollBack&#39; being called,\n      // currently &#39;Commit&#39; shall be called.\n      // throw new IOException();\n   }\n\n\n   virtual void Commit( IDictionary^ savedState ) override\n   {\n      Installer::Commit( savedState );\n      Console::WriteLine( &quot;Commit ...&quot; );\n      \n      // Throw an error if a particular file doesn&#39;t exist.\n      if (  !File::Exists( &quot;FileDoesNotExist.txt&quot; ) )\n            throw gcnew InstallException;\n\n      \n      // Perform the final installation if the file exists.\n   }\n\n\n   virtual void Rollback( IDictionary^ savedState ) override\n   {\n      Installer::Rollback( savedState );\n      Console::WriteLine( &quot;RollBack ...&quot; );\n      try\n      {\n         \n         // Performing some activity during rollback that raises an &#39;IOException*&#39;.\n         throw gcnew IOException;\n      }\n      catch ( Exception^ e ) \n      {\n         throw gcnew InstallException( &quot;IOException* raised&quot;,e );\n      }\n\n      \n      // Perform the remaining rollback activites if no exception raised.\n   }\n\n\n   virtual void Uninstall( IDictionary^ savedState ) override\n   {\n      Installer::Uninstall( savedState );\n      Console::WriteLine( &quot;UnInstall ...&quot; );\n      \n      // Throw an error if a particular file doesn&#39;t exist.\n      if (  !File::Exists( &quot;FileDoesNotExist.txt&quot; ) )\n            throw gcnew InstallException( &quot;The file &#39;FileDoesNotExist&#39;  does not exist&quot; );\n\n      \n      // Perform the uninstall activites if the file exists.\n   }\n\n};\n\nint main()\n{\n   Console::WriteLine( &quot;This assembly is just an example for the Installer&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallException#1\">Imports System\nImports System.ComponentModel\nImports System.Collections\nImports System.Configuration.Install\nImports System.IO\n\n&lt;RunInstaller(True)&gt; Public Class MyInstaller\n   Inherits Installer\n\n   Public Overrides Sub Install(savedState As IDictionary)\n      MyBase.Install(savedState)\n      Console.WriteLine(&quot;Install ...&quot;)\n\n     &#39; Commit is called when install goes through successfully.\n     &#39; Rollback is called if there is any error during Install.\n     &#39; Uncommenting the code below will lead to &#39;RollBack&#39; being called,\n     &#39; currently &#39;Commit&#39; shall be called.\n     &#39; throw new IOException();\n\n   End Sub\n\n   Public Overrides Sub Commit(savedState As IDictionary)\n      MyBase.Commit(savedState)\n      Console.WriteLine(&quot;Commit ...&quot;)\n      &#39; Throw an error if a particular file doesn&#39;t exist.\n      If Not File.Exists(&quot;FileDoesNotExist.txt&quot;) Then\n         Throw New InstallException()\n      End If\n      &#39; Perform the final installation if the file exists.\n   End Sub\n\n   Public Overrides Sub Rollback(savedState As IDictionary)\n      MyBase.Rollback(savedState)\n      Console.WriteLine(&quot;RollBack ...&quot;)\n      Try\n         &#39; Performing some activity during rollback that raises an &#39;IOException&#39;.\n         Throw New IOException()\n      Catch e As Exception\n         Throw New InstallException(&quot;IOException raised&quot;, e)\n      End Try\n   End Sub &#39;Rollback\n    &#39; Perform the remaining rollback activites if no exception raised.\n\n   Public Overrides Sub Uninstall(savedState As IDictionary)\n      MyBase.Uninstall(savedState)\n      Console.WriteLine(&quot;UnInstall ...&quot;)\n      &#39; Throw an error if a particular file doesn&#39;t exist.\n      If Not File.Exists(&quot;FileDoesNotExist.txt&quot;) Then\n         Throw New InstallException(&quot;The file &#39;FileDoesNotExist&#39;&quot; + &quot; does not exist&quot;)\n      End If\n      &#39; Perform the uninstall activites if the file exists.\n   End Sub\n\nEnd Class\n\n&#39; An Assembly that has its own installer.\nPublic Class MyAssembly1\n   Public Shared Sub Main()\n      Console.WriteLine(&quot;This assembly is just an example for the Installer&quot;)\n   End Sub\nEnd Class\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Configuration_Install_InstallException__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallException__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstallException()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.install.installexception\" data-linktype=\"relative-path\">InstallException</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InstallException ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Configuration_Install_InstallException__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallException__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstallException(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.install.installexception\" data-linktype=\"relative-path\">InstallException</a> class, and specifies the message to display to the user.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InstallException (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to display to the user.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Configuration_Install_InstallException__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstallException(SerializationInfo, StreamingContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.install.installexception\" data-linktype=\"relative-path\">InstallException</a> class with serialized data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected InstallException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> that holds the serialized object data about the exception being thrown.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that contains contextual information about the source or destination.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Configuration_Install_InstallException__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Configuration_Install_InstallException__ctor_System_String_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstallException(String, Exception)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.install.installexception\" data-linktype=\"relative-path\">InstallException</a> class, and specifies the message to display to the user, and a reference to the inner exception that is the cause of this exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InstallException (string message, Exception innerException);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to display to the user.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>innerException</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not <code>null</code>, the current exception is raised in a <code>catch</code> block that handles the inner exception.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Install.InstallException.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallException\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallException..ctor\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.Install.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"a99764af-db1f-f803-c1ca-0e75b60f3b4e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when an error occurs during the commit, rollback, or uninstall phase of an installation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.configuration.install/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.Install.InstallException\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Configuration.Install.InstallException.yml","open_to_public_contributors":false,"api_name":["System.Configuration.Install.InstallException","System.Configuration.Install.InstallException..ctor"],"api_location":["System.Configuration.Install.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.Install.InstallException","System::Configuration::Install::InstallException","System.Configuration.Install.InstallException.#ctor","System::Configuration::Install::InstallException::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"a99764af-db1f-f803-c1ca-0e75b60f3b4e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Configuration.Install/InstallException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InstallException class | Microsoft Docs","_op_ogTitle":"InstallException class","description":"The exception that is thrown when an error occurs during the commit, rollback, or uninstall phase of an installation.\n","toc_asset_id":"api/_splitted/System.Configuration.Install/toc.json","toc_rel":"_splitted/System.Configuration.Install/toc.json","source_url":"","ms.assetid":"System.Configuration.Install.InstallException","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.install.installexception","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.configuration.install.installexception","fileRelativePath":"api/System.Configuration.Install.InstallException.html"},"themesRelativePathToOutputRoot":"_themes/"}