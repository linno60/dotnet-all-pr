{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">WindowsPrincipal</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Enables code to check the Windows group membership of a Windows user.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class WindowsPrincipal : System.Security.Claims.ClaimsPrincipal</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">System.Security.Claims.ClaimsPrincipal</a></span></div><span class=\"lang-csharp\">WindowsPrincipal</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_AddIdentities_System_Collections_Generic_IEnumerable_System_Security_Claims_ClaimsIdentity__\" data-linktype=\"relative-path\">AddIdentities(IEnumerable&lt;ClaimsIdentity&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_AddIdentity_System_Security_Claims_ClaimsIdentity_\" data-linktype=\"relative-path\">AddIdentity(ClaimsIdentity)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Claims\" data-linktype=\"relative-path\">Claims</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_ClaimsPrincipalSelector\" data-linktype=\"relative-path\">ClaimsPrincipalSelector</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Clone\" data-linktype=\"relative-path\">Clone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_CreateClaimsIdentity_System_IO_BinaryReader_\" data-linktype=\"relative-path\">CreateClaimsIdentity(BinaryReader)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Current\" data-linktype=\"relative-path\">Current</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_CustomSerializationData\" data-linktype=\"relative-path\">CustomSerializationData</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindAll_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindAll(Predicate&lt;Claim&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindAll_System_String_\" data-linktype=\"relative-path\">FindAll(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindFirst_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindFirst(Predicate&lt;Claim&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindFirst_System_String_\" data-linktype=\"relative-path\">FindFirst(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo,StreamingContext)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_HasClaim_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">HasClaim(Predicate&lt;Claim&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_HasClaim_System_String_System_String_\" data-linktype=\"relative-path\">HasClaim(String,String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Identities\" data-linktype=\"relative-path\">Identities</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_PrimaryIdentitySelector\" data-linktype=\"relative-path\">PrimaryIdentitySelector</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_WriteTo_System_IO_BinaryWriter_\" data-linktype=\"relative-path\">WriteTo(BinaryWriter)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_WriteTo_System_IO_BinaryWriter_System_Byte___\" data-linktype=\"relative-path\">WriteTo(BinaryWriter,Byte[])</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to use the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method overloads. The <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> enumeration is used as the source for the relative identifiers (RIDs) that identify the built-in roles. The RIDs are used to determine the roles of the current principal.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">using System;\nusing System.Threading;\nusing System.Security.Permissions;\nusing System.Security.Principal;\n\nclass SecurityPrincipalDemo\n{\n    public static void DemonstrateWindowsBuiltInRoleEnum()\n    {\n        AppDomain myDomain = Thread.GetDomain();\n\n        myDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal);\n        WindowsPrincipal myPrincipal = (WindowsPrincipal)Thread.CurrentPrincipal;\n        Console.WriteLine(&quot;{0} belongs to: &quot;, myPrincipal.Identity.Name.ToString());\n        Array wbirFields = Enum.GetValues(typeof(WindowsBuiltInRole));\n        foreach (object roleName in wbirFields)\n        {\n            try\n            {\n                // Cast the role name to a RID represented by the WindowsBuildInRole value.\n                Console.WriteLine(&quot;{0}? {1}.&quot;, roleName,\n                    myPrincipal.IsInRole((WindowsBuiltInRole)roleName));\n                Console.WriteLine(&quot;The RID for this role is: &quot; + ((int)roleName).ToString());\n\n            }\n            catch (Exception)\n            {\n                Console.WriteLine(&quot;{0}: Could not obtain role for this RID.&quot;,\n                    roleName);\n            }\n        }\n        // Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Administrators&quot;));\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Users&quot;));\n        // Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator,\n           myPrincipal.IsInRole(WindowsBuiltInRole.Administrator));\n        // Get the role using the WellKnownSidType.\n        SecurityIdentifier sid = new SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, null);\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid));\n    }\n\n    public static void Main()\n    {\n        DemonstrateWindowsBuiltInRoleEnum();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">public:\n   static void DemonstrateWindowsBuiltInRoleEnum()\n   {\n      AppDomain^ myDomain = Thread::GetDomain();\n\n      myDomain-&gt;SetPrincipalPolicy( PrincipalPolicy::WindowsPrincipal );\n      WindowsPrincipal^ myPrincipal = dynamic_cast&lt;WindowsPrincipal^&gt;(Thread::CurrentPrincipal);\n\n      Console::WriteLine( &quot;{0} belongs to: &quot;, myPrincipal-&gt;Identity-&gt;Name );\n\n      Array^ wbirFields = Enum::GetValues( WindowsBuiltInRole::typeid );\n\n      for each ( Object^ roleName in wbirFields )\n      {\n         try\n         {\n            Console::WriteLine( &quot;{0}? {1}.&quot;, roleName,\n               myPrincipal-&gt;IsInRole(  *dynamic_cast&lt;WindowsBuiltInRole^&gt;(roleName) ) );\n         }\n         catch ( Exception^ ) \n         {\n            Console::WriteLine( &quot;{0}: Could not obtain role for this RID.&quot;,\n               roleName );\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">Imports System\nImports System.Threading\nImports System.Security.Permissions\nImports System.Security.Principal\n\nClass SecurityPrincipalDemo\n\n    Public Shared Sub DemonstrateWindowsBuiltInRoleEnum()\n        Dim myDomain As AppDomain = Thread.GetDomain()\n\n        myDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal)\n        Dim myPrincipal As WindowsPrincipal = CType(Thread.CurrentPrincipal, WindowsPrincipal)\n        Console.WriteLine(&quot;{0} belongs to: &quot;, myPrincipal.Identity.Name.ToString())\n        Dim wbirFields As Array = [Enum].GetValues(GetType(WindowsBuiltInRole))\n        Dim roleName As Object\n        For Each roleName In wbirFields\n            Try\n                &#39; Cast the role name to a RID represented by the WindowsBuildInRole value.\n                Console.WriteLine(&quot;{0}? {1}.&quot;, roleName, myPrincipal.IsInRole(CType(roleName, WindowsBuiltInRole)))\n                Console.WriteLine(&quot;The RID for this role is: &quot; + Fix(roleName).ToString())\n\n            Catch\n                Console.WriteLine(&quot;{0}: Could not obtain role for this RID.&quot;, roleName)\n            End Try\n        Next roleName\n        &#39; Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Administrators&quot;))\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Users&quot;))\n        &#39; Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator, myPrincipal.IsInRole(WindowsBuiltInRole.Administrator))\n        &#39; Get the role using the WellKnownSidType.\n        Dim sid As New SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, Nothing)\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid))\n\n    End Sub &#39;DemonstrateWindowsBuiltInRoleEnum\n\n    Public Shared Sub Main()\n        DemonstrateWindowsBuiltInRoleEnum()\n\n    End Sub &#39;Main\nEnd Class &#39;SecurityPrincipalDemo \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The WindowsPrincipal class is primarily used to check the role of a Windows user. The <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method overloads let you check the user role by using different role contexts.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal__ctor_System_Security_Principal_WindowsIdentity_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WindowsPrincipal(WindowsIdentity)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a> class by using the specified <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public WindowsPrincipal (System.Security.Principal.WindowsIdentity ntIdentity);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ntIdentity</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object from which to construct the new instance of <a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>ntIdentity</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal_DeviceClaims\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeviceClaims</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets all Windows device claims from this principal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.claims.claim\" data-linktype=\"relative-path\">Claim</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of all Windows device claims from this principal.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal_Identity\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Identity</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the identity of the current principal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Security.Principal.IIdentity Identity { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.iidentity\" data-linktype=\"relative-path\">IIdentity</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object of the current principal.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal_UserClaims\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UserClaims</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets all Windows user claims from this principal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.claims.claim\" data-linktype=\"relative-path\">Claim</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of all Windows user claims from this principal.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInRole(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool IsInRole (int rid);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The RID of the Windows user group in which to check for the principal’s membership status.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<p> For performance reasons, the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\" data-linktype=\"relative-path\">IsInRole(SecurityIdentifier)</a> overload is recommended as the preferable overload for determining the user&#39;s role.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> Relative identifiers (RIDs) are components of a Windows user group&#39;s security identifier (SID) and are supported to help prevent cross-platform localization issues. Many user accounts, local groups, and global groups have a default RID value that is constant across all versions of Windows.  </p>\n<p> For example, the RID for the BUILTIN\\Administrators role is 0x220. Using 0x220 as the input parameter for the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method results in <code>true</code> being returned if the current principal is an administrator.  </p>\n<p> The following tables list the default RID values.  </p>\n<table>\n<thead>\n<tr>\n<th>Built-in users</th>\n<th>RID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DOMAINNAME\\Administrator</td>\n<td>0x1F4</td>\n</tr>\n<tr>\n<td>DOMAINNAME\\Guest</td>\n<td>0x1F5</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Built-in global groups</th>\n<th>RID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DOMAINNAME\\Domain Admins</td>\n<td>0x200</td>\n</tr>\n<tr>\n<td>DOMAINNAME\\Domain Users</td>\n<td>0x201</td>\n</tr>\n<tr>\n<td>DOMAINNAME\\Domain Guests</td>\n<td>0x202</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Built-in local groups</th>\n<th>RID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BUILTIN\\Administrators</td>\n<td>0x220</td>\n</tr>\n<tr>\n<td>BUILTIN\\Users</td>\n<td>0x221</td>\n</tr>\n<tr>\n<td>BUILTIN\\Guests</td>\n<td>0x222</td>\n</tr>\n<tr>\n<td>BUILTIN\\Account Operators</td>\n<td>0x224</td>\n</tr>\n<tr>\n<td>BUILTIN\\Server Operators</td>\n<td>0x225</td>\n</tr>\n<tr>\n<td>BUILTIN\\Print Operators</td>\n<td>0x226</td>\n</tr>\n<tr>\n<td>BUILTIN\\Backup Operators</td>\n<td>0x227</td>\n</tr>\n<tr>\n<td>BUILTIN\\Replicator</td>\n<td>0x228</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInRole(SecurityIdentifier)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool IsInRole (System.Security.Principal.SecurityIdentifier sid);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sid</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> that uniquely identifies a Windows user group.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the current principal is a member of the specified Windows user group; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>sid</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Windows returned a Win32 error.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> uniquely identifies a user or group on Windows 2000, Windows Server, and Windows XP implementations. When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> For performance reasons, this is the preferable overload to determine a user&#39;s role.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_WindowsBuiltInRole_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInRole(WindowsBuiltInRole)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the current principal belongs to the Windows user group with the specified <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool IsInRole (System.Security.Principal.WindowsBuiltInRole role);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>role</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the current principal is a member of the specified Windows user group; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>role</code> is not a valid <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> value.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<p> For performance reasons, the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\" data-linktype=\"relative-path\">IsInRole(SecurityIdentifier)</a> overload is recommended as the preferable overload for determining the user&#39;s role.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInRole(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the current principal belongs to the Windows user group with the specified name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool IsInRole (string role);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>role</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the Windows user group for which to check membership.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the current principal is a member of the specified Windows user group; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<p> For performance reasons, the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\" data-linktype=\"relative-path\">IsInRole(SecurityIdentifier)</a> overload is recommended as the preferable overload for determining the user&#39;s role.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> For built-in roles, the <code>role</code> string should be in the form &quot;BUILTIN\\<em>RoleNameHere</em>&quot;. For example, to test for membership in the Windows administrator role, the string representing the role should be &quot;BUILTIN\\Administrators&quot;. Note that the backslash might need to be escaped. The following table lists the built-in roles.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The spelling for the BUILTIN roles in string format differs from the spelling used in the <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> enumeration. For example, the spelling for an administrator in the enumeration is &quot;Administrator&quot;, not &quot;Administrators&quot;. When using this overload, use the spelling for the role from the following table.  </p>\n</div>\n<table>\n<thead>\n<tr>\n<th>Built-in local groups</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BUILTIN\\Administrators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Users</td>\n</tr>\n<tr>\n<td>BUILTIN\\Guests</td>\n</tr>\n<tr>\n<td>BUILTIN\\Account Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Server Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Print Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Backup Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Replicator</td>\n</tr>\n</tbody>\n</table>\n<p> For machine-specific roles, the <code>role</code> string should be in the form &quot;MachineName\\<em>RoleNameHere</em>&quot;.  </p>\n<p> For domain-specific roles, the <code>role</code> string should be in the form &quot;DomainName\\<em>RoleNameHere</em>&quot;; for example, <code>&quot;SomeDomain\\Domain Users</code>&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In the .NET Framework version 1.0, the <code>role</code> parameter is case-sensitive. In the .NET Framework version 1.1 and later, the <code>role</code> parameter is case-insensitive.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Principal.WindowsPrincipal.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.DeviceClaims\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.Identity\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.IsInRole\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.UserClaims\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"b242e0cf-c6ff-5ace-cbb4-542c968f8db9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Enables code to check the Windows group membership of a Windows user.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.principal/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Principal.WindowsPrincipal\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Principal.WindowsPrincipal.yml","open_to_public_contributors":false,"api_name":["System.Security.Principal.WindowsPrincipal","System.Security.Principal.WindowsPrincipal..ctor","System.Security.Principal.WindowsPrincipal.DeviceClaims","System.Security.Principal.WindowsPrincipal.Identity","System.Security.Principal.WindowsPrincipal.IsInRole","System.Security.Principal.WindowsPrincipal.UserClaims"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Principal.WindowsPrincipal","System::Security::Principal::WindowsPrincipal","System.Security.Principal.WindowsPrincipal.#ctor","System::Security::Principal::WindowsPrincipal::#ctor","System.Security.Principal.WindowsPrincipal.DeviceClaims","System::Security::Principal::WindowsPrincipal::DeviceClaims","System.Security.Principal.WindowsPrincipal.Identity","System::Security::Principal::WindowsPrincipal::Identity","System.Security.Principal.WindowsPrincipal.IsInRole","System::Security::Principal::WindowsPrincipal::IsInRole","System.Security.Principal.WindowsPrincipal.UserClaims","System::Security::Principal::WindowsPrincipal::UserClaims"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"b242e0cf-c6ff-5ace-cbb4-542c968f8db9","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsPrincipal.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WindowsPrincipal class | Microsoft Docs","_op_ogTitle":"WindowsPrincipal class","description":"Enables code to check the Windows group membership of a Windows user.\n","toc_asset_id":"api/_splitted/System.Security.Principal/toc.json","toc_rel":"_splitted/System.Security.Principal/toc.json","source_url":"","ms.assetid":"System.Security.Principal.WindowsPrincipal","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsprincipal","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsprincipal","fileRelativePath":"api/System.Security.Principal.WindowsPrincipal.html"},"themesRelativePathToOutputRoot":"_themes/"}