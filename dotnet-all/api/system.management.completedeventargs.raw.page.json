{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CompletedEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Holds event data for the <a class=\"xref\" href=\"system.management.managementoperationobserver#System_Management_ManagementOperationObserver_Completed\" data-linktype=\"relative-path\">Completed</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class CompletedEventArgs : System.Management.ManagementEventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementeventargs\" data-linktype=\"relative-path\">ManagementEventArgs</a></span></div><span class=\"lang-csharp\">CompletedEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementeventargs#System_Management_ManagementEventArgs_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example calls a method asynchronously. The <strong>Win32_Process.Create</strong> method is called to create a new process for Calc.exe.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_CompletedEventArgs#1\">Imports System\nImports System.Management\n\nPublic Class InvokeMethodAsync\n\n    Private isFinished As Boolean = False\n    Private returnObj As ManagementBaseObject\n\n    Public Sub New()\n\n        &#39; Get the object on which the method \n        &#39; will be invoked\n        Dim processClass As ManagementClass = _\n            New ManagementClass(&quot;Win32_Process&quot;)\n\n        &#39; Create a results and completion handler\n        Dim handler As ManagementOperationObserver = _\n            New ManagementOperationObserver\n        AddHandler handler.Completed, _\n            AddressOf Me.Completed\n\n        &#39; Invoke method asynchronously\n        Dim inParams As ManagementBaseObject = _\n            processClass.GetMethodParameters(&quot;Create&quot;)\n        inParams(&quot;CommandLine&quot;) = &quot;calc.exe&quot;\n        processClass.InvokeMethod( _\n            handler, &quot;Create&quot;, inParams, Nothing)\n\n        &#39; Do something while method is executing\n        While (Not Me.IsComplete)\n\n            System.Threading.Thread.Sleep(1000)\n        End While\n\n    End Sub\n\n    &#39; Property allows accessing the result\n    &#39; object in the main function\n    Private Function ReturnObject() As ManagementBaseObject\n\n        Return returnObj\n\n    End Function\n\n    &#39; Delegate called when the method completes\n    &#39; and results are available\n    Private Sub NewObject(ByVal sender As Object, _\n        ByVal e As ObjectReadyEventArgs)\n\n        Console.WriteLine(&quot;New Object arrived!&quot;)\n        returnObj = e.NewObject\n\n    End Sub\n\n    &#39; Used to determine whether the method\n    &#39; execution has completed\n    Private Function IsComplete() As Boolean\n\n        Return isFinished\n\n    End Function\n\n    Private Sub Completed(ByVal sender As Object, _\n        ByVal e As CompletedEventArgs)\n\n        isFinished = True\n        Console.WriteLine(&quot;Completed method invocation.&quot;)\n\n    End Sub\n\n    Public Shared Function _\n            Main(ByVal args() As String) As Integer\n\n        Dim invokeMethod As New InvokeMethodAsync\n\n        Return 0\n\n    End Function\n\n\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_CompletedEventArgs#1\">using System;\nusing System.Management;\n\npublic class InvokeMethodAsync \n{\n    private bool isComplete = false;\n    private ManagementBaseObject returnObject;\n\n    public InvokeMethodAsync()\n    {\n        // Get the object on which the method \n        // will be invoked\n        ManagementClass processClass = \n            new ManagementClass(&quot;Win32_Process&quot;);\n\n        // Create a results and completion handler\n        ManagementOperationObserver handler = \n            new ManagementOperationObserver();\n        handler.Completed += \n            new CompletedEventHandler(this.Completed);\n\n        // Invoke method asynchronously\n        ManagementBaseObject inParams =\n            processClass.GetMethodParameters(&quot;Create&quot;);\n        inParams[&quot;CommandLine&quot;] = &quot;calc.exe&quot;;\n        processClass.InvokeMethod(\n            handler, &quot;Create&quot;, inParams, null);\n      \n        // Do something while method is executing\n        while(!this.IsComplete) \n        {\n            System.Threading.Thread.Sleep(1000);\n        }\n\n    }\n\n    // Property allows accessing the result\n    // object in the main function\n    private ManagementBaseObject ReturnObject \n    {\n        get \n        {\n            return returnObject;\n        }\n    }\n\n    // Delegate called when the method completes\n    // and results are available\n    private void NewObject(object sender,\n        ObjectReadyEventArgs e) \n    {\n        Console.WriteLine(&quot;New Object arrived!&quot;);\n        returnObject = e.NewObject;\n    }\n\n    // Used to determine whether the method\n    // execution has completed\n    private bool IsComplete \n    {\n        get \n        {\n            return isComplete;\n        }\n    }\n\n    private void Completed(object sender,\n        CompletedEventArgs e)\n    {\n        isComplete = true;\n        Console.WriteLine(&quot;Method invoked.&quot;);\n    }\n\n    public static void Main()\n    {\n        InvokeMethodAsync invokeMethod = new InvokeMethodAsync();\n\n        return;\n\n    }\n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Management_CompletedEventArgs_Status\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Status</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the completion status of the operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Management.ManagementStatus Status { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementstatus\" data-linktype=\"relative-path\">ManagementStatus</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.management.managementstatus\" data-linktype=\"relative-path\">ManagementStatus</a> enumeration value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h3 class=\"accented\" id=\"property-value\">Property Value</h3>\n<p> A <a class=\"xref\" href=\"system.management.managementstatus\" data-linktype=\"relative-path\">ManagementStatus</a> value indicating the  status of the operation.  </p>\n<h3 class=\"accented\" id=\"net-framework-security\">.NET Framework Security</h3>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../topic/using%20libraries%20from%20partially%20trusted%20code\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Management_CompletedEventArgs_StatusObject\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StatusObject</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets additional status information within a WMI object. This may be null.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Management.ManagementBaseObject StatusObject { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementbaseobject\" data-linktype=\"relative-path\">ManagementBaseObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.management.managementbaseobject\" data-linktype=\"relative-path\">ManagementBaseObject</a> that contains status information about the completion of an operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h3 class=\"accented\" id=\"property-value\">Property Value</h3>\n<p> <code>null</code> if an error did not occur. Otherwise, may be non-null if the provider supports extended error information.  </p>\n<h3 class=\"accented\" id=\"net-framework-security\">.NET Framework Security</h3>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../topic/using%20libraries%20from%20partially%20trusted%20code\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.CompletedEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.CompletedEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Management.CompletedEventArgs.Status\">\r\n<meta name=\"APIName\" content=\"System.Management.CompletedEventArgs.StatusObject\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"9d3d9d61-e779-97f6-3b1d-0a15a3a383ba\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Holds event data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.management/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.CompletedEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Management.CompletedEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Management.CompletedEventArgs","System.Management.CompletedEventArgs.Status","System.Management.CompletedEventArgs.StatusObject"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.CompletedEventArgs","System::Management::CompletedEventArgs","System.Management.CompletedEventArgs.Status","System::Management::CompletedEventArgs::Status","System.Management.CompletedEventArgs.StatusObject","System::Management::CompletedEventArgs::StatusObject"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"9d3d9d61-e779-97f6-3b1d-0a15a3a383ba","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Management/CompletedEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CompletedEventArgs class | Microsoft Docs","_op_ogTitle":"CompletedEventArgs class","description":"Holds event data for the  event.\n","toc_asset_id":"api/_splitted/System.Management/toc.json","toc_rel":"_splitted/System.Management/toc.json","source_url":"","ms.assetid":"System.Management.CompletedEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.management.completedeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.management.completedeventargs","fileRelativePath":"api/System.Management.CompletedEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}