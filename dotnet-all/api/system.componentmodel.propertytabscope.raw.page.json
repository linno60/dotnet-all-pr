{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">PropertyTabScope</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines identifiers that indicate the persistence scope of a tab in the Properties window.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum PropertyTabScope</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">PropertyTabScope</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use PropertyTabScope to specify the scope of a property tab.  </p>\n<pre><code class=\"lang-cs\" name=\"PropertyTabExample#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.IO;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\nnamespace TypeCategoryTabExample\n{\t\n    // This component adds a TypeCategoryTab to the property browser \n    // that is available for any components in the current design mode document.\n    [PropertyTabAttribute(typeof(TypeCategoryTab), PropertyTabScope.Document)]\n    public class TypeCategoryTabComponent : System.ComponentModel.Component\n    {           \n        public TypeCategoryTabComponent()\n        {\n        }\n    }\n\n    // A TypeCategoryTab property tab lists properties by the \n    // category of the type of each property.\n    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class TypeCategoryTab : PropertyTab\n    {\n        [BrowsableAttribute(true)]\n        // This string contains a Base-64 encoded and serialized example property tab image.\n        private string img = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuMzMwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9gAAAAJCTfYAAAAAAAAANgAAACgAAAAIAAAACAAAAAEAGAAAAAAAAAAAAMQOAADEDgAAAAAAAAAAAAD///////////////////////////////////9ZgABZgADzPz/zPz/zPz9AgP//////////gAD/gAD/AAD/AAD/AACKyub///////+AAACAAAAAAP8AAP8AAP9AgP////////9ZgABZgABz13hz13hz13hAgP//////////gAD/gACA/wCA/wCA/wAA//////////+AAACAAAAAAP8AAP8AAP9AgP////////////////////////////////////8L&quot;;\n\n        public TypeCategoryTab()\n        {            \n        }\n\n        // Returns the properties of the specified component extended with \n        // a CategoryAttribute reflecting the name of the type of the property.\n        public override System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, System.Attribute[] attributes)\n        {\n            PropertyDescriptorCollection props;\n            if( attributes == null )\n                props = TypeDescriptor.GetProperties(component);    \n            else\n                props = TypeDescriptor.GetProperties(component, attributes);    \n            \n            PropertyDescriptor[] propArray = new PropertyDescriptor[props.Count];            \n            for(int i=0; i&lt;props.Count; i++)           \n            {                \n                // Create a new PropertyDescriptor from the old one, with \n                // a CategoryAttribute matching the name of the type.\n                propArray[i] = TypeDescriptor.CreateProperty(props[i].ComponentType, props[i], new CategoryAttribute(props[i].PropertyType.Name));\n            }\n            return new PropertyDescriptorCollection( propArray );\n        }\n\n        public override System.ComponentModel.PropertyDescriptorCollection GetProperties(object component)\n        {                     \n            return this.GetProperties(component, null);\n        }\n\n        // Provides the name for the property tab.\n        public override string TabName\n        {\n            get\n            {\n                return &quot;Properties by Type&quot;;\n            }\n        }\n\n        // Provides an image for the property tab.\n        public override System.Drawing.Bitmap Bitmap\n        {\n            get\n            {\n                Bitmap bmp = new Bitmap(DeserializeFromBase64Text(img));\n                return bmp;\n            }\n        }\n\n        // This method can be used to retrieve an Image from a block of Base64-encoded text.\n        private Image DeserializeFromBase64Text(string text)\n        {\n            Image img = null;\n            byte[] memBytes = Convert.FromBase64String(text);\n            IFormatter formatter = new BinaryFormatter();\n            MemoryStream stream = new MemoryStream(memBytes);\n            img = (Image)formatter.Deserialize(stream);\n            stream.Close();\n            return img;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"PropertyTabExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::IO;\nusing namespace System::Reflection;\nusing namespace System::Runtime::Serialization;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\nusing namespace System::Security::Permissions;\n\nnamespace TypeCategoryTabExample\n{\n   ref class TypeCategoryTab;\n\n   // forward declaration.\n   // This component adds a TypeCategoryTab to the propery browser\n   // that is available for any components in the current design mode document.\n\n   [PropertyTabAttribute(TypeCategoryTabExample::TypeCategoryTab::typeid,PropertyTabScope::Document)]\n   public ref class TypeCategoryTabComponent: public System::ComponentModel::Component\n   {\n   public:\n      TypeCategoryTabComponent(){}\n   };\n\n   // A TypeCategoryTab property tab lists properties by the\n   // category of the type of each property.\n   public ref class TypeCategoryTab: public PropertyTab\n   {\n   private:\n\n      // This String^ contains a Base-64 encoded and serialized example property tab image.\n\n      [BrowsableAttribute(true)]\n      String^ img;\n\n   public:\n      TypeCategoryTab()\n      {\n         img = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuMzMwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9gAAAAJCTfYAAAAAAAAANgAAACgAAAAIAAAACAAAAAEAGAAAAAAAAAAAAMQOAADEDgAAAAAAAAAAAAD///////////////////////////////////9ZgABZgADzPz/zPz/zPz9AgP//////////gAD/gAD/AAD/AAD/AACKyub///////+AAACAAAAAAP8AAP8AAP9AgP////////9ZgABZgABz13hz13hz13hAgP//////////gAD/gACA/wCA/wCA/wAA//////////+AAACAAAAAAP8AAP8AAP9AgP////////////////////////////////////8L&quot;;\n      }\n\n      // Returns the properties of the specified component extended with\n      // a CategoryAttribute reflecting the name of the type of the property.\n      [ReflectionPermission(SecurityAction::Demand, Flags=ReflectionPermissionFlag::MemberAccess)]\n      virtual System::ComponentModel::PropertyDescriptorCollection^ GetProperties( Object^ component, array&lt;System::Attribute^&gt;^attributes ) override\n      {\n         PropertyDescriptorCollection^ props;\n         if ( attributes == nullptr )\n                  props = TypeDescriptor::GetProperties( component );\n         else\n                  props = TypeDescriptor::GetProperties( component, attributes );\n\n         array&lt;PropertyDescriptor^&gt;^propArray = gcnew array&lt;PropertyDescriptor^&gt;(props-&gt;Count);\n         for ( int i = 0; i &lt; props-&gt;Count; i++ )\n         {\n            // Create a new PropertyDescriptor from the old one, with\n            // a CategoryAttribute matching the name of the type.\n            array&lt;Attribute^&gt;^temp0 = {gcnew CategoryAttribute( props[ i ]-&gt;PropertyType-&gt;Name )};\n            propArray[ i ] = TypeDescriptor::CreateProperty( props[ i ]-&gt;ComponentType, props[ i ], temp0 );\n\n         }\n         return gcnew PropertyDescriptorCollection( propArray );\n      }\n\n      virtual System::ComponentModel::PropertyDescriptorCollection^ GetProperties( Object^ component ) override\n      {\n         return this-&gt;GetProperties( component, nullptr );\n      }\n\n      property String^ TabName \n      {\n         // Provides the name for the property tab.\n         virtual String^ get() override\n         {\n            return &quot;Properties by Type&quot;;\n         }\n      }\n\n      property System::Drawing::Bitmap^ Bitmap \n      {\n         // Provides an image for the property tab.\n         virtual System::Drawing::Bitmap^ get() override\n         {\n            System::Drawing::Bitmap^ bmp = gcnew System::Drawing::Bitmap( DeserializeFromBase64Text( img ) );\n            return bmp;\n         }\n      }\n\n   private:\n\n      // This method can be used to retrieve an Image from a block of Base64-encoded text.\n      Image^ DeserializeFromBase64Text( String^ text )\n      {\n         Image^ img = nullptr;\n         array&lt;Byte&gt;^memBytes = Convert::FromBase64String( text );\n         IFormatter^ formatter = gcnew BinaryFormatter;\n         MemoryStream^ stream = gcnew MemoryStream( memBytes );\n         img = dynamic_cast&lt;Image^&gt;(formatter-&gt;Deserialize( stream ));\n         stream-&gt;Close();\n         return img;\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"PropertyTabExample#1\">Imports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.IO\nImports System.Reflection\nImports System.Runtime.Serialization\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n&#39; This component adds a TypeCategoryTab to the property browser\n&#39; that is available for any components in the current design mode document.\n&lt;PropertyTabAttribute(GetType(TypeCategoryTab), PropertyTabScope.Document)&gt;  _\nPublic Class TypeCategoryTabComponent\n   Inherits System.ComponentModel.Component\n   \n   Public Sub New()\n    End Sub\nEnd Class\n\n&#39; A TypeCategoryTab property tab lists properties by the \n&#39; category of the type of each property.\n&lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class TypeCategoryTab\n    Inherits PropertyTab\n\n    &#39; This string contains a Base-64 encoded and serialized example property tab image.\n    &lt;BrowsableAttribute(True)&gt; _\n    Private img As String = &quot;AAEAAAD/////AQAAAAAAAAAMAgAAAFRTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0xLjAuMzMwMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9gAAAAJCTfYAAAAAAAAANgAAACgAAAAIAAAACAAAAAEAGAAAAAAAAAAAAMQOAADEDgAAAAAAAAAAAAD///////////////////////////////////9ZgABZgADzPz/zPz/zPz9AgP//////////gAD/gAD/AAD/AAD/AACKyub///////+AAACAAAAAAP8AAP8AAP9AgP////////9ZgABZgABz13hz13hz13hAgP//////////gAD/gACA/wCA/wCA/wAA//////////+AAACAAAAAAP8AAP8AAP9AgP////////////////////////////////////8L&quot;\n\n    Public Sub New()\n    End Sub\n\n    &#39; Returns the properties of the specified component extended with \n    &#39; a CategoryAttribute reflecting the name of the type of the property.\n    Public Overloads Overrides Function GetProperties(ByVal component As Object, ByVal attributes() As System.Attribute) As System.ComponentModel.PropertyDescriptorCollection\n        Dim props As PropertyDescriptorCollection\n        If attributes Is Nothing Then\n            props = TypeDescriptor.GetProperties(component)\n        Else\n            props = TypeDescriptor.GetProperties(component, attributes)\n        End If\n        Dim propArray(props.Count - 1) As PropertyDescriptor\n        Dim i As Integer\n        For i = 0 To props.Count - 1\n            &#39; Create a new PropertyDescriptor from the old one, with \n            &#39; a CategoryAttribute matching the name of the type.\n            propArray(i) = TypeDescriptor.CreateProperty(props(i).ComponentType, props(i), New CategoryAttribute(props(i).PropertyType.Name))\n        Next i\n        Return New PropertyDescriptorCollection(propArray)\n    End Function\n\n    Public Overloads Overrides Function GetProperties(ByVal component As Object) As System.ComponentModel.PropertyDescriptorCollection\n        Return Me.GetProperties(component, Nothing)\n    End Function\n\n    &#39; Provides the name for the property tab.\n    Public Overrides ReadOnly Property TabName() As String\n        Get\n            Return &quot;Properties by Type&quot;\n        End Get\n    End Property\n\n    &#39; Provides an image for the property tab.\n    Public Overrides ReadOnly Property Bitmap() As System.Drawing.Bitmap\n        Get\n            Dim bmp As New Bitmap(DeserializeFromBase64Text(img))\n            Return bmp\n        End Get\n    End Property\n\n    &#39; This method can be used to retrieve an Image from a block of Base64-encoded text.\n    Private Function DeserializeFromBase64Text(ByVal [text] As String) As Image\n        Dim img As Image = Nothing\n        Dim memBytes As Byte() = Convert.FromBase64String([text])\n        Dim formatter As New BinaryFormatter()\n        Dim stream As New MemoryStream(memBytes)\n        img = CType(formatter.Deserialize(stream), Image)\n        stream.Close()\n        Return img\n    End Function\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>PropertyTabScope indicates the persistence scope of a tab that is displayed in the Properties window when a component of a design document has an associated <a class=\"xref\" href=\"system.componentmodel.propertytabattribute\" data-linktype=\"relative-path\">PropertyTabAttribute</a>.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_ComponentModel_PropertyTabScope_Component\">\r\n      \t\t\t<span class=\"lang-csharp\">Component</span>\r\n      \t</td>\r\n      \t<td><p>This tab is specific to the current component. This tab is added to the Properties window for the current component only and is removed when the component is no longer selected.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ComponentModel_PropertyTabScope_Document\">\r\n      \t\t\t<span class=\"lang-csharp\">Document</span>\r\n      \t</td>\r\n      \t<td><p>This tab is specific to the current document. This tab is added to the Properties window and is removed when the currently selected document changes.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ComponentModel_PropertyTabScope_Global\">\r\n      \t\t\t<span class=\"lang-csharp\">Global</span>\r\n      \t</td>\r\n      \t<td><p>This tab is added to the Properties window and can only be removed explicitly by a parent component.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ComponentModel_PropertyTabScope_Static\">\r\n      \t\t\t<span class=\"lang-csharp\">Static</span>\r\n      \t</td>\r\n      \t<td><p>This tab is added to the Properties window and cannot be removed.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.PropertyTabScope.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.PropertyTabScope\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.PropertyTabScope.Component\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.PropertyTabScope.Document\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.PropertyTabScope.Global\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.PropertyTabScope.Static\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"c64f1d11-b12d-3ef3-6075-1be51a965528\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines identifiers that indicate the persistence scope of a tab in the Properties window.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.PropertyTabScope\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.PropertyTabScope.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.PropertyTabScope","System.ComponentModel.PropertyTabScope.Component","System.ComponentModel.PropertyTabScope.Document","System.ComponentModel.PropertyTabScope.Global","System.ComponentModel.PropertyTabScope.Static"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.PropertyTabScope","System::ComponentModel::PropertyTabScope","System.ComponentModel.PropertyTabScope.Component","System::ComponentModel::PropertyTabScope::Component","System.ComponentModel.PropertyTabScope.Document","System::ComponentModel::PropertyTabScope::Document","System.ComponentModel.PropertyTabScope.Global","System::ComponentModel::PropertyTabScope::Global","System.ComponentModel.PropertyTabScope.Static","System::ComponentModel::PropertyTabScope::Static"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"c64f1d11-b12d-3ef3-6075-1be51a965528","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel/PropertyTabScope.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PropertyTabScope enum | Microsoft Docs","_op_ogTitle":"PropertyTabScope enum","description":"Defines identifiers that indicate the persistence scope of a tab in the Properties window.\n","toc_asset_id":"api/_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.PropertyTabScope","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.propertytabscope","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.propertytabscope","fileRelativePath":"api/System.ComponentModel.PropertyTabScope.html"},"themesRelativePathToOutputRoot":"_themes/"}