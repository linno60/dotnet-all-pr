{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DetailsViewPageEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DetailsViewPageEventHandler(object sender, DetailsViewPageEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DetailsViewPageEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to programmatically add a DetailsViewPageEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewPageEventHandlerDynamic#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n\n    &#39; Create a new DetailsView object.\n    Dim customerDetailsView As New DetailsView()\n\n    &#39; Set the DetailsView object&#39;s properties.\n    customerDetailsView.ID = &quot;CustomerDetailsView&quot;\n    customerDetailsView.DataSourceID = &quot;DetailsViewSource&quot;\n    customerDetailsView.AutoGenerateRows = True\n    customerDetailsView.AutoGenerateEditButton = True\n    customerDetailsView.AllowPaging = true\n    customerDetailsView.PagerSettings.Position = PagerPosition.Bottom\n\n    Dim keyArray() As String = {&quot;CustomerID&quot;}\n    customerDetailsView.DataKeyNames = keyArray\n       \n    &#39; Programmatically register the event-handling methods\n    &#39; for the DetailsView control.\n    AddHandler customerDetailsView.PageIndexChanging, AddressOf CustomerDetailsView_PageIndexChanging\n    AddHandler customerDetailsView.ModeChanging, AddressOf CustomerDetailsView_ModeChanging\n    \n    &#39; Add the DetailsView object to the Controls collection\n    &#39; of the PlaceHolder control.\n    DetailsViewPlaceHolder.Controls.Add(customerDetailsView)\n\n  End Sub\n  \n  Sub CustomerDetailsView_PageIndexChanging(ByVal sender As Object, ByVal e As DetailsViewPageEventArgs)\n  \n    &#39; Use the sender parameter to access the DetailsView control\n    &#39; that raised the event.\n    Dim customerDetailsView As DetailsView = CType(sender, DetailsView)\n\n    &#39; Cancel the paging operation if the DetailsView control \n    &#39; in edit mode.\n    If customerDetailsView.CurrentMode = DetailsViewMode.Edit Then\n    \n      e.Cancel = True\n      \n      &#39; Display an error message.\n      Dim newPage As Integer = e.NewPageIndex + 1\n      MessageLabel.Text = &quot;Please update the current record before to moving to page &quot; &amp; _\n        newPage.ToString() &amp; &quot;.&quot;\n    \n    End If\n      \n  End Sub\n\n  Sub CustomerDetailsView_ModeChanging(ByVal sender As Object, ByVal e As DetailsViewModeEventArgs)\n  \n    &#39; Clear the message label when the user changes mode.\n    MessageLabel.Text = &quot;&quot;\n  \n  End Sub\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewPageEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewPageEventHandler Example&lt;/h3&gt;\n                               \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:placeholder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewPageEventHandlerDynamic#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void Page_Load(Object sender, EventArgs e)\n  {\n\n    // Create a new DetailsView object.\n    DetailsView customerDetailsView = new DetailsView();\n\n    // Set the DetailsView object&#39;s properties.\n    customerDetailsView.ID = &quot;CustomerDetailsView&quot;;\n    customerDetailsView.DataSourceID = &quot;DetailsViewSource&quot;;\n    customerDetailsView.AutoGenerateRows = true;\n    customerDetailsView.AutoGenerateEditButton = true;\n    customerDetailsView.AllowPaging = true;\n    customerDetailsView.DataKeyNames = new String[1] { &quot;CustomerID&quot; };\n    customerDetailsView.PagerSettings.Position = PagerPosition.Bottom;\n\n    // Programmatically register the event-handling methods\n    // for the DetailsView control.\n    customerDetailsView.PageIndexChanging += new DetailsViewPageEventHandler(this.CustomerDetailsView_PageIndexChanging);\n    customerDetailsView.ModeChanging += new DetailsViewModeEventHandler(this.CustomerDetailsView_ModeChanging);\n    \n    // Add the DetailsView object to the Controls collection\n    // of the PlaceHolder control.\n    DetailsViewPlaceHolder.Controls.Add(customerDetailsView);\n\n  }\n  \n  void CustomerDetailsView_PageIndexChanging(Object sender, DetailsViewPageEventArgs e)\n  {\n    // Use the sender parameter to access the DetailsView control\n    // that raised the event.\n    DetailsView customerDetailsView = (DetailsView)sender;\n\n    // Cancel the paging operation if the DetailsView control \n    // in edit mode.\n    if (customerDetailsView.CurrentMode == DetailsViewMode.Edit)\n    {\n      e.Cancel = true;\n      \n      // Display an error message.\n      int newPage = e.NewPageIndex + 1;\n      MessageLabel.Text = &quot;Please update the current record before to moving to page &quot; + \n        newPage.ToString() + &quot;.&quot;;\n    }\n  }\n\n  void CustomerDetailsView_ModeChanging(Object sender, DetailsViewModeEventArgs e)\n  {\n    // Clear the message label when the user changes mode.\n    MessageLabel.Text = &quot;&quot;;\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewPageEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewPageEventHandler Example&lt;/h3&gt;\n                               \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:placeholder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to declaratively add a DetailsViewPageEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewPageEventHandlerDeclarative#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomerDetailsView_PageIndexChanging(ByVal sender As Object, ByVal e As DetailsViewPageEventArgs) Handles CustomerDetailsView.PageIndexChanging\n  \n    &#39; Cancel the paging operation if the DetailsView control \n    &#39; in edit mode.\n    If CustomerDetailsView.CurrentMode = DetailsViewMode.Edit Then\n    \n      e.Cancel = True\n      \n      &#39; Display an error message.\n      Dim newPage As Integer = e.NewPageIndex + 1\n      MessageLabel.Text = &quot;Please update the current record before to moving to page &quot; &amp; _\n        newPage.ToString() &amp; &quot;.&quot;\n    \n    End If\n      \n  End Sub\n\n  Sub CustomerDetailsView_ModeChanging(ByVal sender As Object, ByVal e As DetailsViewModeEventArgs) Handles CustomerDetailsView.ModeChanging\n  \n    &#39; Clear the message label when the user changes mode.\n    MessageLabel.Text = &quot;&quot;\n      \n  End Sub\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewPageEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewPageEventHandler Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot;   \n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewPageEventHandlerDeclarative#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomerDetailsView_PageIndexChanging(Object sender, DetailsViewPageEventArgs e)\n  {\n    // Cancel the paging operation if the DetailsView control \n    // in edit mode.\n    if (CustomerDetailsView.CurrentMode == DetailsViewMode.Edit)\n    {\n      e.Cancel = true;\n      \n      // Display an error message.\n      int newPage = e.NewPageIndex + 1;\n      MessageLabel.Text = &quot;Please update the current record before to moving to page &quot; + \n        newPage.ToString() + &quot;.&quot;;\n    }\n  }\n\n  void CustomerDetailsView_ModeChanging(Object sender, DetailsViewModeEventArgs e)\n  {\n    // Clear the message label when the user changes mode.\n    MessageLabel.Text = &quot;&quot;;\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewPageEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewPageEventHandler Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot;  \n          allowpaging=&quot;true&quot;\n          onpageindexchanging=&quot;CustomerDetailsView_PageIndexChanging&quot; \n          onmodechanging=&quot;CustomerDetailsView_ModeChanging&quot;\n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event when a pager button (a button with its <code>CommandName</code> property set to &quot;Page&quot;) within the control is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control handles the paging operation. This allows you to provide an event handler that performs a custom routine, such as canceling the paging operation, whenever this event occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Pager buttons are usually located in the pager row of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n</div>\n<p> When you create a DetailsViewPageEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DetailsViewPageEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewPageEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewPageEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewPageEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewPageEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewPageEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"ca138470-f68c-e79e-d0f6-bb79560dc650\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DetailsViewPageEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DetailsViewPageEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.DetailsViewPageEventHandler","System.Web.UI.WebControls.DetailsViewPageEventHandler..ctor","System.Web.UI.WebControls.DetailsViewPageEventHandler.Invoke","System.Web.UI.WebControls.DetailsViewPageEventHandler.BeginInvoke","System.Web.UI.WebControls.DetailsViewPageEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DetailsViewPageEventHandler","System::Web::UI::WebControls::DetailsViewPageEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"ca138470-f68c-e79e-d0f6-bb79560dc650","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/DetailsViewPageEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DetailsViewPageEventHandler delegate | Microsoft Docs","_op_ogTitle":"DetailsViewPageEventHandler delegate","description":"Represents the method that handles the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DetailsViewPageEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.detailsviewpageeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.detailsviewpageeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.DetailsViewPageEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}