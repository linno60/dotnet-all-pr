{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DesignerOptionService</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a base class for getting and setting option values for a designer.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class DesignerOptionService : System.ComponentModel.Design.IDesignerOptionService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">DesignerOptionService</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates accessing the DesignerOptionService to display the current values of the standard options.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ComponentModel.Design.DesignerOptionService#1\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Data;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\nnamespace DesignerOptionServiceExample\n{\n    // This control demonstrates retrieving the standard \n    // designer option service values in design mode.\n    public class DesignerOptionServiceControl : System.Windows.Forms.UserControl\n    {\t\t\n        private DesignerOptionService designerOptionSvc;\n\n        public DesignerOptionServiceControl()\n        {\n            this.BackColor = Color.Beige;\n                    this.Size = new Size(404, 135);\n        }\n        \n        public override System.ComponentModel.ISite Site\n        {\n            get\n            {\n                return base.Site;\n            }\n            set\n            {\n                base.Site = value;\n\n                // If siting component, attempt to obtain an DesignerOptionService.\n                if( base.Site != null )                            \n                    designerOptionSvc = (DesignerOptionService)this.GetService(typeof(DesignerOptionService));                                   \n            }\n        }\n\n        // Displays control information and current DesignerOptionService \n        // values, if available.\n        protected override void OnPaint(System.Windows.Forms.PaintEventArgs e)\n        {\n            e.Graphics.DrawString(&quot;DesignerOptionServiceControl&quot;, \n                new Font(&quot;Arial&quot;, 9), \n                new SolidBrush(Color.Blue), 4, 4);\n\n            if( this.DesignMode )\n                e.Graphics.DrawString(&quot;Currently in design mode&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 4, 18);\n            else\n                e.Graphics.DrawString(&quot;Not in design mode. Cannot access DesignerOptionService.&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Red), 4, 18);\n            \n            if( base.Site != null &amp;&amp; designerOptionSvc != null )\n            {\n                e.Graphics.DrawString(&quot;DesignerOptionService provides access to the table of option values listed when&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 4, 38);\n\n                e.Graphics.DrawString(&quot;the Windows Forms Designer\\\\General tab of the Tools\\\\Options menu is selected.&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 4, 50);                \n                \n                e.Graphics.DrawString(&quot;Table of standard value names and current values&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Red), 4, 76);\n                \n                // Displays a table of the standard value names and current values.\n                int ypos = 90;\n\n                // Obtains and shows the size of the standard design-mode grid square.\n                PropertyDescriptor pd;\n                pd = designerOptionSvc.Options.Properties[&quot;GridSize&quot;];\n                e.Graphics.DrawString(&quot;GridSize&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(pd.GetValue(null).ToString(), \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 200, ypos);\n                ypos += 12;\n\n                // Uncomment the following code to demonstrate that this\n                // alternate syntax works the same as the previous syntax.\n\n                //pd = designerOptionSvc.Options[&quot;WindowsFormsDesigner&quot;].Properties[&quot;GridSize&quot;];\n                //e.Graphics.DrawString(&quot;GridSize&quot;,\n                //    new Font(&quot;Arial&quot;, 8),\n                //    new SolidBrush(Color.Black), 4, ypos);\n                //e.Graphics.DrawString(pd.GetValue(null).ToString(),\n                //    new Font(&quot;Arial&quot;, 8),\n                //    new SolidBrush(Color.Black), 200, ypos);\n                //ypos += 12;\n\n                //pd = designerOptionSvc.Options[&quot;WindowsFormsDesigner&quot;][&quot;General&quot;].Properties[&quot;GridSize&quot;];\n                //e.Graphics.DrawString(&quot;GridSize&quot;,\n                //    new Font(&quot;Arial&quot;, 8),\n                //    new SolidBrush(Color.Black), 4, ypos);\n                //e.Graphics.DrawString(pd.GetValue(null).ToString(),\n                //    new Font(&quot;Arial&quot;, 8),\n                //    new SolidBrush(Color.Black), 200, ypos);\n                //ypos += 12;\n                \n                // Obtains and shows whether the design mode surface grid is enabled.\n                pd = designerOptionSvc.Options.Properties[&quot;ShowGrid&quot;];\n                e.Graphics.DrawString(&quot;ShowGrid&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(pd.GetValue(null).ToString(), \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 200, ypos);\n                ypos+=12;\n                \n                // Obtains and shows whether components should be aligned with the surface grid.\n                pd = designerOptionSvc.Options.Properties[&quot;SnapToGrid&quot;];\n                e.Graphics.DrawString(&quot;SnapToGrid&quot;, \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(pd.GetValue(null).ToString(), \n                    new Font(&quot;Arial&quot;, 8), \n                    new SolidBrush(Color.Black), 200, ypos);\n                ypos += 12;\n\n                // Obtains and shows which layout mode is selected.\n                pd = designerOptionSvc.Options.Properties[&quot;LayoutMode&quot;];\n                e.Graphics.DrawString(&quot;LayoutMode&quot;,\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(pd.GetValue(null).ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 200, ypos);\n                ypos += 12;\n\n                // Obtains and shows whether the Toolbox is automatoically\n                // populated with custom controls and components.\n                pd = designerOptionSvc.Options.Properties[&quot;AutoToolboxPopulate&quot;];\n                e.Graphics.DrawString(&quot;AutoToolboxPopulate&quot;,\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(pd.GetValue(null).ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 200, ypos);\n                ypos += 12;\n\n                // Obtains and shows whether the component cache is used.\n                pd = designerOptionSvc.Options.Properties[&quot;UseOptimizedCodeGeneration&quot;];\n                e.Graphics.DrawString(&quot;Optimized Code Generation&quot;,\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(pd.GetValue(null).ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 200, ypos);\n                ypos += 12;\n\n                // Obtains and shows whether smart tags are automatically opened.\n                pd = designerOptionSvc.Options.Properties[&quot;ObjectBoundSmartTagAutoShow&quot;];\n                e.Graphics.DrawString(&quot;Automatically Open Smart Tags&quot;,\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 4, ypos);\n                e.Graphics.DrawString(pd.GetValue(null).ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    new SolidBrush(Color.Black), 200, ypos);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ComponentModel.Design.DesignerOptionService#1\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Data\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n\n&#39; This control demonstrates retrieving the standard \n&#39; designer option service values in design mode.\n\nPublic Class DesignerOptionServiceControl\n   Inherits System.Windows.Forms.UserControl\n   Private designerOptionSvc As DesignerOptionService\n   \n   \n   Public Sub New()\n      Me.BackColor = Color.Beige\n      Me.Size = New Size(404, 135)\n    End Sub\n   \n   \n   Public Overrides Property Site() As System.ComponentModel.ISite\n      Get\n         Return MyBase.Site\n      End Get\n      Set\n         MyBase.Site = value\n         \n         &#39; If siting component, attempt to obtain an DesignerOptionService.\n         If (MyBase.Site IsNot Nothing) Then\n            designerOptionSvc = CType(Me.GetService(GetType(DesignerOptionService)), DesignerOptionService)\n         End If\n      End Set\n   End Property\n    \n   &#39; Displays control information and current DesignerOptionService \n   &#39; values, if available.\n   Protected Overrides Sub OnPaint(e As System.Windows.Forms.PaintEventArgs)\n        e.Graphics.DrawString(&quot;DesignerOptionServiceControl&quot;, _\n        New Font(&quot;Arial&quot;, 9), _\n        New SolidBrush(Color.Blue), 4, 4)\n      \n      If Me.DesignMode Then\n            e.Graphics.DrawString(&quot;Currently in design mode&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, 18)\n      Else\n            e.Graphics.DrawString(&quot;Not in design mode. Cannot access DesignerOptionService.&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Red), 4, 18)\n      End If\n      \n      If (MyBase.Site IsNot Nothing) AndAlso (designerOptionSvc IsNot Nothing) Then\n            e.Graphics.DrawString(&quot;DesignerOptionService provides access to the table of option values listed when&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, 38)\n\n            e.Graphics.DrawString(&quot;the Windows Forms Designer\\General tab of the Tools\\Options menu is selected.&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, 50)\n\n            e.Graphics.DrawString(&quot;Table of standard value names and current values&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Red), 4, 76)\n\n            &#39; Displays a table of the standard value names and current values.\n            Dim ypos As Integer = 90\n\n            &#39; Obtains and shows the size of the standard design-mode grid square.\n            Dim pd As PropertyDescriptor\n            pd = designerOptionSvc.Options.Properties(&quot;GridSize&quot;)\n\n            e.Graphics.DrawString(&quot;GridSize&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, ypos)\n\n            e.Graphics.DrawString(pd.GetValue(Nothing).ToString(), _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 200, ypos)\n\n            ypos += 12\n\n            &#39; Uncomment the following code to demonstrate that this\n            &#39; alternate syntax works the same as the previous syntax.\n            &#39;pd = designerOptionSvc.Options[&quot;WindowsFormsDesigner&quot;].Properties[&quot;GridSize&quot;];\n            &#39;e.Graphics.DrawString(&quot;GridSize&quot;,\n            &#39;    new Font(&quot;Arial&quot;, 8),\n            &#39;    new SolidBrush(Color.Black), 4, ypos);\n            &#39;e.Graphics.DrawString(pd.GetValue(null).ToString(),\n            &#39;    new Font(&quot;Arial&quot;, 8),\n            &#39;    new SolidBrush(Color.Black), 200, ypos);\n            &#39;ypos += 12;\n            &#39;pd = designerOptionSvc.Options[&quot;WindowsFormsDesigner&quot;][&quot;General&quot;].Properties[&quot;GridSize&quot;];\n            &#39;e.Graphics.DrawString(&quot;GridSize&quot;,\n            &#39;    new Font(&quot;Arial&quot;, 8),\n            &#39;    new SolidBrush(Color.Black), 4, ypos);\n            &#39;e.Graphics.DrawString(pd.GetValue(null).ToString(),\n            &#39;    new Font(&quot;Arial&quot;, 8),\n            &#39;    new SolidBrush(Color.Black), 200, ypos);\n            &#39;ypos += 12;\n\n            &#39; Obtains and shows whether the design mode surface grid is enabled.\n            pd = designerOptionSvc.Options.Properties(&quot;ShowGrid&quot;)\n\n            e.Graphics.DrawString(&quot;ShowGrid&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, ypos)\n\n            e.Graphics.DrawString(pd.GetValue(Nothing).ToString(), _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 200, ypos)\n\n            ypos += 12\n\n            &#39; Obtains and shows whether components should be aligned with the surface grid.\n            pd = designerOptionSvc.Options.Properties(&quot;SnapToGrid&quot;)\n\n            e.Graphics.DrawString(&quot;SnapToGrid&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, ypos)\n\n            e.Graphics.DrawString(pd.GetValue(Nothing).ToString(), _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 200, ypos)\n\n            ypos += 12\n\n            &#39; Obtains and shows which layout mode is selected.\n            pd = designerOptionSvc.Options.Properties(&quot;LayoutMode&quot;)\n\n            e.Graphics.DrawString(&quot;LayoutMode&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, ypos)\n\n            e.Graphics.DrawString(pd.GetValue(Nothing).ToString(), _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 200, ypos)\n\n            ypos += 12\n\n            &#39; Obtains and shows whether the Toolbox is automatoically\n            &#39; populated with custom controls and components.\n            pd = designerOptionSvc.Options.Properties(&quot;AutoToolboxPopulate&quot;)\n\n            e.Graphics.DrawString(&quot;AutoToolboxPopulate&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, ypos)\n\n            e.Graphics.DrawString(pd.GetValue(Nothing).ToString(), _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 200, ypos)\n\n            ypos += 12\n\n            &#39; Obtains and shows whether the component cache is used.\n            pd = designerOptionSvc.Options.Properties(&quot;UseOptimizedCodeGeneration&quot;)\n\n            e.Graphics.DrawString(&quot;Optimized Code Generation&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, ypos)\n\n            e.Graphics.DrawString(pd.GetValue(Nothing).ToString(), _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 200, ypos)\n\n            ypos += 12\n\n            &#39; Obtains and shows whether smart tags are automatically opened.\n            pd = designerOptionSvc.Options.Properties(&quot;ObjectBoundSmartTagAutoShow&quot;)\n\n            e.Graphics.DrawString(&quot;Automatically Open Smart Tags&quot;, _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 4, ypos)\n\n            e.Graphics.DrawString(pd.GetValue(Nothing).ToString(), _\n            New Font(&quot;Arial&quot;, 8), _\n            New SolidBrush(Color.Black), 200, ypos)\n      End If\n    End Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The DesignerOptionService class provides a collection of options. Each of these option collections has an indexer that enables it to be further filtered. Each option collection contains its own set of options, as well as a rollup of all of its child options. In the event of a naming conflict between properties, the outermost options object takes precedence. The following <strong>Tools &#124; Options</strong> user interface (UI) structure shows how the outermost options object takes on greater importance:  </p>\n<p> <strong>WindowsFormsDesigner &#124; General</strong>  </p>\n<ul>\n<li><p><strong>SnapToGrid</strong>  </p>\n</li>\n<li><p><strong>ShowGrid</strong>  </p>\n</li>\n<li><p><strong>GridSize</strong>  </p>\n</li>\n</ul>\n<p> Given a <a class=\"xref\" href=\"system.componentmodel.design.idesigneroptionservice\" data-linktype=\"relative-path\">IDesignerOptionService</a> named <code>service</code>, to get to the value of the <a class=\"xref\" href=\"system.windows.forms.design.parentcontroldesigner#System_Windows_Forms_Design_ParentControlDesigner_GridSize_\" data-linktype=\"relative-path\">GridSize</a> property, you would make the following call:  </p>\n<pre><code class=\"lang-cs\" name=\"IDesignerOptionServiceExample#2\">// Obtains and shows the size of the standard design-mode grid square.\nSize size = (Size)designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\\\General&quot;, &quot;GridSize&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"IDesignerOptionServiceExample#2\">&#39; Obtains and shows the size of the standard design-mode grid square.\nDim size As Size = CType(designerOptionService.GetOptionValue(&quot;WindowsFormsDesigner\\General&quot;, &quot;GridSize&quot;), Size)\n</code></pre><pre><code class=\"lang-cpp\" name=\"IDesignerOptionServiceExample#2\">// Obtains and shows the size of the standard design-mode grid square.\nSystem::Drawing::Size size =  *dynamic_cast&lt;System::Drawing::Size^&gt;(designerOptionService-&gt;GetOptionValue( &quot;WindowsFormsDesigner\\\\General&quot;, &quot;GridSize&quot; ));\n</code></pre><p> This works, until you want to move <a class=\"xref\" href=\"system.windows.forms.design.parentcontroldesigner#System_Windows_Forms_Design_ParentControlDesigner_GridSize_\" data-linktype=\"relative-path\">GridSize</a> to another page. Also, <a class=\"xref\" href=\"system.componentmodel.design.idesigneroptionservice\" data-linktype=\"relative-path\">IDesignerOptionService</a> provides no discovery mechanism. If you do not know what string to pass in, the service cannot find the property value.  </p>\n<p> The DesignerOptionService class addresses these issues. You can query collections, and there is a type converter defined on the <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice.designeroptioncollection\" data-linktype=\"relative-path\">DesignerOptionService.DesignerOptionCollection</a> object that marks the collection as expandable. With this type converter, you can pass the entire designer option service to a property window and visually inspect the service.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerOptionService__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DesignerOptionService()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice\" data-linktype=\"relative-path\">DesignerOptionService</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected DesignerOptionService ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerOptionService_Options\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Options</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the options collection for this service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection Options { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice.designeroptioncollection\" data-linktype=\"relative-path\">DesignerOptionService.DesignerOptionCollection</a> populated with available designer options.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>There is always a global options collection that contains child collections.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerOptionService_CreateOptionCollection_System_ComponentModel_Design_DesignerOptionService_DesignerOptionCollection_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateOptionCollection(DesignerOptionService+DesignerOptionCollection, String, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice.designeroptioncollection\" data-linktype=\"relative-path\">DesignerOptionService.DesignerOptionCollection</a> with the given name and adds it to the given parent.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection CreateOptionCollection (System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection parent, string name, object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>parent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The parent designer option collection. All collections have a parent except the root object collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of this collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object providing properties for this collection. Can be <code>null</code> if the collection should not provide any properties.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice.designeroptioncollection\" data-linktype=\"relative-path\">DesignerOptionService.DesignerOptionCollection</a> with the given name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>parent</code> or <code>name</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>name</code> is an empty string.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>value</code> parameter specifies an object whose public properties are used in the <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice.designeroptioncollection#System_ComponentModel_Design_DesignerOptionService_DesignerOptionCollection_Properties_\" data-linktype=\"relative-path\">Properties</a> collection of the option collection. The <code>value</code> parameter can be <code>null</code> if this options collection does not offer any properties. Properties are wrapped in such a way that passing anything into the component parameter of the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> is ignored, and the <code>value</code> object is substituted.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerOptionService_PopulateOptionCollection_System_ComponentModel_Design_DesignerOptionService_DesignerOptionCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PopulateOptionCollection(DesignerOptionService+DesignerOptionCollection)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Populates a <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice.designeroptioncollection\" data-linktype=\"relative-path\">DesignerOptionService.DesignerOptionCollection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void PopulateOptionCollection (System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection options);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>options</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The collection to populate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PopulateOptionCollection method is called on demand the first time a user asks for child options or properties of an options collection.  </p>\n<p> You can populate the <code>options</code> collection by calling the <a class=\"xref\" href=\"system.componentmodel.design.designeroptionservice#System_ComponentModel_Design_DesignerOptionService_CreateOptionCollection_\" data-linktype=\"relative-path\">CreateOptionCollection</a> method and passing this collection as the parent.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerOptionService_ShowDialog_System_ComponentModel_Design_DesignerOptionService_DesignerOptionCollection_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShowDialog(DesignerOptionService+DesignerOptionCollection, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Shows the options dialog box for the given object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ShowDialog (System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection options, object optionObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>options</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The options collection containing the object to be invoked.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>optionObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The actual options object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the dialog box is shown; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ShowDialog method must be implemented for the <code>optionObject</code> parameter&#39;s options dialog box to be shown.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerOptionService_System_ComponentModel_Design_IDesignerOptionService_GetOptionValue_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDesignerOptionService.GetOptionValue(String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value of an option defined in this package.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">object IDesignerOptionService.GetOptionValue (string pageName, string valueName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pageName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The page to which the option is bound.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>valueName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the option value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The value of the option named <code>valueName</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>pageName</code> or <code>valueName</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_DesignerOptionService_System_ComponentModel_Design_IDesignerOptionService_SetOptionValue_System_String_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDesignerOptionService.SetOptionValue(String, String, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the value of an option defined in this package.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IDesignerOptionService.SetOptionValue (string pageName, string valueName, object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pageName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The page to which the option is bound</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>valueName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the option value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the option.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>pageName</code> or <code>valueName</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.DesignerOptionService.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService.Options\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService.ShowDialog\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService.IDesignerOptionService.GetOptionValue\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.DesignerOptionService.IDesignerOptionService.SetOptionValue\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"000a31ee-13d3-7421-df28-3e5594ef64e4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a base class for getting and setting option values for a designer.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.DesignerOptionService\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.DesignerOptionService.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.DesignerOptionService","System.ComponentModel.Design.DesignerOptionService..ctor","System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection","System.ComponentModel.Design.DesignerOptionService.Options","System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection","System.ComponentModel.Design.DesignerOptionService.ShowDialog","System.ComponentModel.Design.DesignerOptionService.IDesignerOptionService.GetOptionValue","System.ComponentModel.Design.DesignerOptionService.IDesignerOptionService.SetOptionValue"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.DesignerOptionService","System::ComponentModel::Design::DesignerOptionService","System.ComponentModel.Design.DesignerOptionService.#ctor","System::ComponentModel::Design::DesignerOptionService::#ctor","System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection","System::ComponentModel::Design::DesignerOptionService::CreateOptionCollection","System.ComponentModel.Design.DesignerOptionService.Options","System::ComponentModel::Design::DesignerOptionService::Options","System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection","System::ComponentModel::Design::DesignerOptionService::PopulateOptionCollection","System.ComponentModel.Design.DesignerOptionService.ShowDialog","System::ComponentModel::Design::DesignerOptionService::ShowDialog","System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue","System::ComponentModel::Design::DesignerOptionService::System#ComponentModel#Design#IDesignerOptionService#GetOptionValue","System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue","System::ComponentModel::Design::DesignerOptionService::System#ComponentModel#Design#IDesignerOptionService#SetOptionValue"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"000a31ee-13d3-7421-df28-3e5594ef64e4","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/DesignerOptionService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DesignerOptionService class | Microsoft Docs","_op_ogTitle":"DesignerOptionService class","description":"Provides a base class for getting and setting option values for a designer.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.DesignerOptionService","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.designeroptionservice","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.designeroptionservice","fileRelativePath":"api/System.ComponentModel.Design.DesignerOptionService.html"},"themesRelativePathToOutputRoot":"_themes/"}