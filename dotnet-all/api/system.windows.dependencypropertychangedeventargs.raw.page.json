{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DependencyPropertyChangedEventArgs</span>\r\n      Struct\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public struct DependencyPropertyChangedEventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><span class=\"lang-csharp\">DependencyPropertyChangedEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example uses the DependencyPropertyChangedEventArgs class in the context of a <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by DependencyPropertyChangedEventArgs, and repackages these into a different events arguments class <a class=\"xref\" href=\"system.windows.routedpropertychangedeventargs-1\" data-linktype=\"relative-path\">RoutedPropertyChangedEventArgs&lt;T&gt;</a>. The new arguments are then used as the data for a &quot;ValueChanged&quot; event defined by and raised by the custom class.  </p>\n<pre><code class=\"lang-cs\" name=\"CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs\">public static readonly DependencyProperty ValueProperty =\n    DependencyProperty.Register(\n        &quot;Value&quot;, typeof(decimal), typeof(NumericUpDown),\n        new FrameworkPropertyMetadata(MinValue, new PropertyChangedCallback(OnValueChanged),\n                                      new CoerceValueCallback(CoerceValue)));\n\nprivate static object CoerceValue(DependencyObject element, object value)\n{\n    decimal newValue = (decimal)value;\n\n    newValue = Math.Max(MinValue, Math.Min(MaxValue, newValue));\n\n    return newValue;\n}\n\nprivate static void OnValueChanged(DependencyObject obj, DependencyPropertyChangedEventArgs args)\n{\n    NumericUpDown control = (NumericUpDown)obj;\n\n    RoutedPropertyChangedEventArgs&lt;decimal&gt; e = new RoutedPropertyChangedEventArgs&lt;decimal&gt;(\n        (decimal)args.OldValue, (decimal)args.NewValue, ValueChangedEvent);\n    control.OnValueChanged(e);\n}\n/// &lt;summary&gt;\n/// Identifies the ValueChanged routed event.\n/// &lt;/summary&gt;\npublic static readonly RoutedEvent ValueChangedEvent = EventManager.RegisterRoutedEvent(\n    &quot;ValueChanged&quot;, RoutingStrategy.Bubble,\n    typeof(RoutedPropertyChangedEventHandler&lt;decimal&gt;), typeof(NumericUpDown));\n\n/// &lt;summary&gt;\n/// Occurs when the Value property changes.\n/// &lt;/summary&gt;\npublic event RoutedPropertyChangedEventHandler&lt;decimal&gt; ValueChanged\n{\n    add { AddHandler(ValueChangedEvent, value); }\n    remove { RemoveHandler(ValueChangedEvent, value); }\n}\n/// &lt;summary&gt;\n/// Raises the ValueChanged event.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Arguments associated with the ValueChanged event.&lt;/param&gt;\nprotected virtual void OnValueChanged(RoutedPropertyChangedEventArgs&lt;decimal&gt; args)\n{\n    RaiseEvent(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs\">Public Shared ReadOnly ValueProperty As DependencyProperty = DependencyProperty.Register(&quot;Value&quot;, GetType(Decimal), GetType(NumericUpDown), New FrameworkPropertyMetadata(MinValue, New PropertyChangedCallback(AddressOf OnValueChanged), New CoerceValueCallback(AddressOf CoerceValue)))\n\nPrivate Shared Overloads Function CoerceValue(ByVal element As DependencyObject, ByVal value As Object) As Object\n\tDim newValue As Decimal = CDec(value)\n\n\tnewValue = Math.Max(MinValue, Math.Min(MaxValue, newValue))\n\n\tReturn newValue\nEnd Function\n\nPrivate Shared Sub OnValueChanged(ByVal obj As DependencyObject, ByVal args As DependencyPropertyChangedEventArgs)\n\tDim control As NumericUpDown = CType(obj, NumericUpDown)\n\n\tDim e As New RoutedPropertyChangedEventArgs(Of Decimal)(CDec(args.OldValue), CDec(args.NewValue), ValueChangedEvent)\n\tcontrol.OnValueChanged(e)\nEnd Sub\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Identifies the ValueChanged routed event.\n&#39;&#39;&#39; &lt;/summary&gt;\nPublic Shared ReadOnly ValueChangedEvent As RoutedEvent = EventManager.RegisterRoutedEvent(&quot;ValueChanged&quot;, RoutingStrategy.Bubble, GetType(RoutedPropertyChangedEventHandler(Of Decimal)), GetType(NumericUpDown))\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Occurs when the Value property changes.\n&#39;&#39;&#39; &lt;/summary&gt;\nPublic Custom Event ValueChanged As RoutedPropertyChangedEventHandler(Of Decimal)\n\tAddHandler(ByVal value As RoutedPropertyChangedEventHandler(Of Decimal))\n\t\tMyBase.AddHandler(ValueChangedEvent, value)\n\tEnd AddHandler\n\tRemoveHandler(ByVal value As RoutedPropertyChangedEventHandler(Of Decimal))\n\t\tMyBase.RemoveHandler(ValueChangedEvent, value)\n\tEnd RemoveHandler\n\tRaiseEvent(ByVal sender As System.Object, ByVal e As RoutedPropertyChangedEventArgs(Of Decimal))\n\tEnd RaiseEvent\nEnd Event\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Raises the ValueChanged event.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Arguments associated with the ValueChanged event.&lt;/param&gt;\nProtected Overridable Sub OnValueChanged(ByVal args As RoutedPropertyChangedEventArgs(Of Decimal))\n\tMyBase.RaiseEvent(args)\nEnd Sub\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The events that use the DependencyPropertyChangedEventArgs class for event data, and the <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventhandler\" data-linktype=\"relative-path\">DependencyPropertyChangedEventHandler</a> method implementations for handlers, generally follow the naming pattern <code>Is*Changed</code>, and are generally implemented as common language runtime (CLR) events without <a class=\"xref\" href=\"system.windows.routedevent\" data-linktype=\"relative-path\">RoutedEvent</a> backing (they are not routed events). Some class handling methods that &quot;handle&quot; otherwise unexposed events that report a state change through a property change, such as <a class=\"xref\" href=\"system.windows.controls.primitives.buttonbase#System_Windows_Controls_Primitives_ButtonBase_OnIsPressedChanged_\" data-linktype=\"relative-path\">OnIsPressedChanged</a>, also use the DependencyPropertyChangedEventArgs class for event data.  </p>\n<p> The scenario for <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs__ctor_System_Windows_DependencyProperty_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DependencyPropertyChangedEventArgs(DependencyProperty, Object, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>property</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The identifier for the dependency property that changed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>oldValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the property before the change reported by the relevant event or state change.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>newValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the property after the change reported by the relevant event or state change.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_NewValue_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_NewValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NewValue</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value of the property after the change.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object NewValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property value after the change.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the value provided should always be castable to the type of the dependency property being reported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_OldValue_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_OldValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OldValue</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value of the property before the change.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object OldValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property value before the change.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The type of the value provided should always be castable to the type of the dependency property being reported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_Property_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_Property\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Property</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the identifier for the dependency property where the value change occurred.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.DependencyProperty Property { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The identifier field of the dependency property where the value change occurred.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is relevant if used within a common <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the provided object is equivalent to the current <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare to the current <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the provided object is equivalent to the current <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This implementation relies on value equivalence of all properties, including internal properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_Equals_System_Windows_DependencyPropertyChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(DependencyPropertyChangedEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the provided <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> is equivalent to the current <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> to compare to the current <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the provided <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> is equivalent to the current <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This implementation relies on value equivalence of all properties, including internal properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_GetHashCode_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a hash code  for this <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A signed 32-bit integer hash code.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Operators\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_op_Equality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_op_Equality_System_Windows_DependencyPropertyChangedEventArgs_System_Windows_DependencyPropertyChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Equality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether two specified <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> objects have the same value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Equality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>left</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>right</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the two <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> instances are equivalent; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The implementation uses the same logic as <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs#System_Windows_DependencyPropertyChangedEventArgs_Equals_\" data-linktype=\"relative-path\">Equals</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_DependencyPropertyChangedEventArgs_op_Inequality_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_DependencyPropertyChangedEventArgs_op_Inequality_System_Windows_DependencyPropertyChangedEventArgs_System_Windows_DependencyPropertyChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Inequality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether two specified <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> objects are different.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Inequality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>left</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>right</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the two <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a> instances are different; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The implementation returns the negation of the same logic as <a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs#System_Windows_DependencyPropertyChangedEventArgs_Equals_\" data-linktype=\"relative-path\">Equals</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.DependencyPropertyChangedEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.Equals\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.NewValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.OldValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyPropertyChangedEventArgs.Property\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"902b2aa9-7691-4c61-99cb-30e349c9abef\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a  implementation…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.DependencyPropertyChangedEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.DependencyPropertyChangedEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Windows.DependencyPropertyChangedEventArgs","System.Windows.DependencyPropertyChangedEventArgs..ctor","System.Windows.DependencyPropertyChangedEventArgs.Equals","System.Windows.DependencyPropertyChangedEventArgs.GetHashCode","System.Windows.DependencyPropertyChangedEventArgs.NewValue","System.Windows.DependencyPropertyChangedEventArgs.OldValue","System.Windows.DependencyPropertyChangedEventArgs.op_Equality","System.Windows.DependencyPropertyChangedEventArgs.op_op_Equality","System.Windows.DependencyPropertyChangedEventArgs.op_Inequality","System.Windows.DependencyPropertyChangedEventArgs.op_op_Inequality","System.Windows.DependencyPropertyChangedEventArgs.Property"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.DependencyPropertyChangedEventArgs","System::Windows::DependencyPropertyChangedEventArgs","System.Windows.DependencyPropertyChangedEventArgs.#ctor","System::Windows::DependencyPropertyChangedEventArgs::#ctor","System.Windows.DependencyPropertyChangedEventArgs.Equals","System::Windows::DependencyPropertyChangedEventArgs::Equals","System.Windows.DependencyPropertyChangedEventArgs.GetHashCode","System::Windows::DependencyPropertyChangedEventArgs::GetHashCode","System.Windows.DependencyPropertyChangedEventArgs.NewValue","System::Windows::DependencyPropertyChangedEventArgs::NewValue","System.Windows.DependencyPropertyChangedEventArgs.OldValue","System::Windows::DependencyPropertyChangedEventArgs::OldValue","System.Windows.DependencyPropertyChangedEventArgs.op_Equality","System::Windows::DependencyPropertyChangedEventArgs::op_Equality","System.Windows.DependencyPropertyChangedEventArgs.op_Inequality","System::Windows::DependencyPropertyChangedEventArgs::op_Inequality","System.Windows.DependencyPropertyChangedEventArgs.Property","System::Windows::DependencyPropertyChangedEventArgs::Property"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"902b2aa9-7691-4c61-99cb-30e349c9abef","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DependencyPropertyChangedEventArgs struct | Microsoft Docs","_op_ogTitle":"DependencyPropertyChangedEventArgs struct","description":"Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a  implementation…","toc_asset_id":"api/_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.DependencyPropertyChangedEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.dependencypropertychangedeventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.dependencypropertychangedeventargs","fileRelativePath":"api/System.Windows.DependencyPropertyChangedEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}