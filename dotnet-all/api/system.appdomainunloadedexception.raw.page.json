{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">AppDomainUnloadedException</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>The exception that is thrown when an attempt is made to access an unloaded application domain.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class AppDomainUnloadedException : SystemException</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a></span></div><span class=\"lang-csharp\">AppDomainUnloadedException</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo, StreamingContext)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This section contains two code examples. The first example demonstrates the effects of an AppDomainUnloadedException on various threads, and the second shows elementary application domain unloading.  </p>\n<p> Example 1  </p>\n<p> The following code example defines a <code>TestClass</code> class that can be marshaled across application domain boundaries and an <code>Example</code> class containing a <code>static</code> (<code>Shared</code> in Visual Basic) <code>ThreadProc</code> method. The <code>ThreadProc</code> method creates an application domain, creates a <code>TestClass</code> object in the domain, and calls a method of <code>TestClass</code> that unloads the executing domain, causing an AppDomainUnloadedException.  </p>\n<p> The <code>TestClass</code> method is executed without exception handling from a <a class=\"xref\" href=\"system.threading.threadpool\" data-linktype=\"relative-path\">ThreadPool</a> thread and from an ordinary thread, demonstrating that the unhandled exception terminates the task or thread but not the application. It is then executed with and without exception handling from the main application thread, demonstrating that it terminates the application if not handled.  </p>\n<pre><code class=\"lang-vb\" name=\"AppDomainUnloadedException#1\">Imports System\nImports System.Threading\nImports System.Runtime.InteropServices\n\nPublic Class Example\n    \n    Public Shared Sub Main() \n\n        &#39; 1. Queue ThreadProc as a task for a ThreadPool thread.\n        ThreadPool.QueueUserWorkItem(AddressOf ThreadProc, _\n            &quot; from a ThreadPool thread&quot;)\n        Thread.Sleep(1000)\n        \n        &#39; 2. Execute ThreadProc on an ordinary thread.\n        Dim t As New Thread(AddressOf ThreadProc)\n        t.Start(&quot; from an ordinary thread&quot;)\n        t.Join()\n        \n        &#39; 3. Execute ThreadProc on the main thread, with \n        &#39;    exception handling.\n        Try\n            ThreadProc(&quot; from the main application thread (handled)&quot;)\n        Catch adue As AppDomainUnloadedException\n            Console.WriteLine(&quot;Main thread caught AppDomainUnloadedException: {0}&quot;, _\n                adue.Message)\n        End Try\n        \n        &#39; 4. Execute ThreadProc on the main thread without\n        &#39;    exception handling.\n        ThreadProc(&quot; from the main application thread (unhandled)&quot;)\n        \n        Console.WriteLine(&quot;Main: This message is never displayed.&quot;)\n    \n    End Sub \n    \n    Private Shared Sub ThreadProc(ByVal state As Object) \n        &#39; Create an application domain, and create an instance\n        &#39; of TestClass in the application domain. The first\n        &#39; parameter of CreateInstanceAndUnwrap is the name of\n        &#39; this executable. If you compile the example code using\n        &#39; any name other than &quot;Sample.exe&quot;, you must change the\n        &#39; parameter appropriately.\n        Dim ad As AppDomain = AppDomain.CreateDomain(&quot;TestDomain&quot;)\n        Dim o As Object = ad.CreateInstanceAndUnwrap(&quot;Sample&quot;, &quot;TestClass&quot;)\n        Dim tc As TestClass = CType(o, TestClass)\n        \n        &#39; In the new application domain, execute a method that\n        &#39; unloads the AppDomain. The unhandled exception this\n        &#39; causes ends the current thread.\n        tc.UnloadCurrentDomain(state)\n        \n        Console.WriteLine(&quot;ThreadProc: This message is never displayed.&quot;)\n    \n    End Sub\nEnd Class \n\n&#39; TestClass derives from MarshalByRefObject, so it can be marshaled\n&#39; across application domain boundaries. \n&#39;\nPublic Class TestClass\n    Inherits MarshalByRefObject\n    \n    Public Sub UnloadCurrentDomain(ByVal state As Object) \n        Console.WriteLine(vbLf &amp; &quot;Unloading the current AppDomain{0}.&quot;, state)\n        \n        &#39; Unload the current application domain. This causes\n        &#39; an AppDomainUnloadedException to be thrown.\n        &#39;\n        AppDomain.Unload(AppDomain.CurrentDomain)\n    \n    End Sub \nEnd Class \n\n&#39; This code example produces output similar to the following:\n&#39;\n&#39;Unloading the current AppDomain from a ThreadPool thread.\n&#39;\n&#39;Unloading the current AppDomain from an ordinary thread.\n&#39;\n&#39;Unloading the current AppDomain from the main application thread (handled).\n&#39;Main thread caught AppDomainUnloadedException: The application domain in which the thread was running has been unloaded.\n&#39;\n&#39;Unloading the current AppDomain from the main application thread (unhandled).\n&#39;\n&#39;Unhandled Exception: System.AppDomainUnloadedException: The application domain in which the thread was running has been unloaded.\n&#39;   at TestClass.UnloadCurrentDomain(Object state)\n&#39;   at Example.ThreadProc(Object state)\n&#39;   at Example.Main()\n&#39; \n</code></pre><pre><code class=\"lang-cs\" name=\"AppDomainUnloadedException#1\">using System;\nusing System.Threading;\nusing System.Runtime.InteropServices;\n\npublic class Example\n{\n    public static void Main()\n    {\n        // 1. Queue ThreadProc as a task for a ThreadPool thread.\n        ThreadPool.QueueUserWorkItem(ThreadProc, &quot; from a ThreadPool thread&quot;);\n        Thread.Sleep(1000);\n\n        // 2. Execute ThreadProc on an ordinary thread.\n        Thread t = new Thread(ThreadProc);\n        t.Start(&quot; from an ordinary thread&quot;);\n        t.Join();\n\n        // 3. Execute ThreadProc on the main thread, with \n        //    exception handling.\n        try\n        {\n            ThreadProc(&quot; from the main application thread (handled)&quot;);\n        }\n        catch (AppDomainUnloadedException adue)\n        {\n            Console.WriteLine(&quot;Main thread caught AppDomainUnloadedException: {0}&quot;, adue.Message);\n        }\n\n        // 4. Execute ThreadProc on the main thread without\n        //    exception handling.\n        ThreadProc(&quot; from the main application thread (unhandled)&quot;);\n\n        Console.WriteLine(&quot;Main: This message is never displayed.&quot;);\n    }\n\n    private static void ThreadProc(object state)\n    {\n        // Create an application domain, and create an instance\n        // of TestClass in the application domain. The first\n        // parameter of CreateInstanceAndUnwrap is the name of\n        // this executable. If you compile the example code using\n        // any name other than &quot;Sample.exe&quot;, you must change the\n        // parameter appropriately.\n        AppDomain ad = AppDomain.CreateDomain(&quot;TestDomain&quot;);\n        TestClass tc = (TestClass)ad.CreateInstanceAndUnwrap(&quot;Sample&quot;, &quot;TestClass&quot;);\n\n        // In the new application domain, execute a method that\n        // unloads the AppDomain. The unhandled exception this\n        // causes ends the current thread.\n        tc.UnloadCurrentDomain(state);\n\n        Console.WriteLine(&quot;ThreadProc: This message is never displayed.&quot;);\n    }\n}\n\n// TestClass derives from MarshalByRefObject, so it can be marshaled\n// across application domain boundaries. \n//\npublic class TestClass : MarshalByRefObject\n{\n    public void UnloadCurrentDomain(object state)\n    {\n        Console.WriteLine(&quot;\\nUnloading the current AppDomain{0}.&quot;, state);\n \n        // Unload the current application domain. This causes\n        // an AppDomainUnloadedException to be thrown.\n        //\n        AppDomain.Unload(AppDomain.CurrentDomain);\n    }\n}\n\n/* This code example produces output similar to the following:\nUnloading the current AppDomain from a ThreadPool thread.\n\nUnloading the current AppDomain from an ordinary thread.\n\nUnloading the current AppDomain from the main application thread (handled).\nMain thread caught AppDomainUnloadedException: The application domain in which the thread was running has been unloaded.\n\nUnloading the current AppDomain from the main application thread (unhandled).\n\nUnhandled Exception: System.AppDomainUnloadedException: The application domain in which the thread was running has been unloaded.\n   at TestClass.UnloadCurrentDomain(Object state)\n   at Example.ThreadProc(Object state)\n   at Example.Main()\n */\n</code></pre><p> Example 2  </p>\n<p> The following code example creates and unloads an application domain, and demonstrates that an AppDomainUnloadedException is thrown on a subsequent attempt to access the unloaded domain.  </p>\n<pre><code class=\"lang-cpp\" name=\"ADUnload#1\">using namespace System;\nusing namespace System::Reflection;\nusing namespace System::Security::Policy;\n\n//for evidence Object*\nint main()\n{\n   \n   //Create evidence for the new appdomain.\n   Evidence^ adevidence = AppDomain::CurrentDomain-&gt;Evidence;\n   \n   // Create the new application domain.\n   AppDomain^ domain = AppDomain::CreateDomain( &quot;MyDomain&quot;, adevidence );\n   Console::WriteLine( &quot;Host domain: {0}&quot;, AppDomain::CurrentDomain-&gt;FriendlyName );\n   Console::WriteLine( &quot;child domain: {0}&quot;, domain-&gt;FriendlyName );\n   \n   // Unload the application domain.\n   AppDomain::Unload( domain );\n   try\n   {\n      Console::WriteLine();\n      \n      // Note that the following statement creates an exception because the domain no longer exists.\n      Console::WriteLine( &quot;child domain: {0}&quot;, domain-&gt;FriendlyName );\n   }\n   catch ( AppDomainUnloadedException^ /*e*/ ) \n   {\n      Console::WriteLine( &quot;The appdomain MyDomain does not exist.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ADUnload#1\">Imports System\nImports System.Reflection\nImports System.Security.Policy &#39;for evidence object\n\nClass ADUnload\n   \n   Public Shared Sub Main()\n\n      &#39;Create evidence for the new appdomain.\n      Dim adevidence As Evidence = AppDomain.CurrentDomain.Evidence\n\n      &#39; Create the new application domain.\n      Dim domain As AppDomain = AppDomain.CreateDomain(&quot;MyDomain&quot;, adevidence)\n      \n      Console.WriteLine((&quot;Host domain: &quot; + AppDomain.CurrentDomain.FriendlyName))\n      Console.WriteLine((&quot;child domain: &quot; + domain.FriendlyName))\n      &#39; Unload the application domain.\n      AppDomain.Unload(domain)\n      \n      Try\n         Console.WriteLine()\n         &#39; Note that the following statement creates an exception because the domain no longer exists.\n         Console.WriteLine((&quot;child domain: &quot; + domain.FriendlyName))\n      \n      Catch e As AppDomainUnloadedException\n         Console.WriteLine(&quot;The appdomain MyDomain does not exist.&quot;)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;ADUnload\n</code></pre><pre><code class=\"lang-cs\" name=\"ADUnload#1\">using System;\nusing System.Reflection;\nusing System.Security.Policy;  //for evidence object\nclass ADUnload\n{\n\tpublic static void Main()\n\t{\n\n\t\t//Create evidence for the new appdomain.\n\t\tEvidence adevidence = AppDomain.CurrentDomain.Evidence;\n\n \t\t// Create the new application domain.\n \t\tAppDomain domain = AppDomain.CreateDomain(&quot;MyDomain&quot;, adevidence);\n\n            \tConsole.WriteLine(&quot;Host domain: &quot; + AppDomain.CurrentDomain.FriendlyName);\n            \tConsole.WriteLine(&quot;child domain: &quot; + domain.FriendlyName);\n\t\t// Unload the application domain.\n\t\tAppDomain.Unload(domain);\n\n\t\ttry\n\t\t{\n\t\tConsole.WriteLine();\n\t\t// Note that the following statement creates an exception because the domain no longer exists.\n            \tConsole.WriteLine(&quot;child domain: &quot; + domain.FriendlyName);\n\t\t}\n\n\t\tcatch (AppDomainUnloadedException e)\n\t\t{\n\t\tConsole.WriteLine(&quot;The appdomain MyDomain does not exist.&quot;);\n\t\t}\n\t\t\n\t}\n\t\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>In the .NET Framework version 2.0, an AppDomainUnloadedException that is not handled in user code has the following effect:  </p>\n<ul>\n<li><p>If a thread was started in managed code, it is terminated. The unhandled exception is not allowed to terminate the application.  </p>\n</li>\n<li><p>If a task is executing on a <a class=\"xref\" href=\"system.threading.threadpool\" data-linktype=\"relative-path\">ThreadPool</a> thread, it is terminated and the thread is returned to the thread pool. The unhandled exception is not allowed to terminate the application.  </p>\n</li>\n<li><p>If a thread started in unmanaged code, such as the main application thread, it is terminated. The unhandled exception is allowed to proceed, and the operating system terminates the application.  </p>\n</li>\n</ul>\n<p> AppDomainUnloadedException uses the HRESULT COR_E_APPDOMAINUNLOADED, which has the value 0x80131014.  </p>\n<p> For a list of initial property values for an instance of AppDomainUnloadedException, see the <a class=\"xref\" href=\"system.appdomainunloadedexception#System_AppDomainUnloadedException__ctor_\" data-linktype=\"relative-path\">AppDomainUnloadedException</a> constructors.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_AppDomainUnloadedException__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AppDomainUnloadedException()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.appdomainunloadedexception\" data-linktype=\"relative-path\">AppDomainUnloadedException</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public AppDomainUnloadedException ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property of the new instance to a system-supplied message that describes the error, such as &quot;The target application domain has been unloaded.&quot; This message takes into account the current system culture.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.appdomainunloadedexception\" data-linktype=\"relative-path\">AppDomainUnloadedException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>A null reference (<code>Nothing</code> in Visual Basic).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The localized error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_AppDomainUnloadedException__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AppDomainUnloadedException(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.appdomainunloadedexception\" data-linktype=\"relative-path\">AppDomainUnloadedException</a> class with a specified error message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public AppDomainUnloadedException (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message that describes the error.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The content of the <code>message</code> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.appdomainunloadedexception\" data-linktype=\"relative-path\">AppDomainUnloadedException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>A null reference (<code>Nothing</code> in Visual Basic).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_AppDomainUnloadedException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AppDomainUnloadedException(SerializationInfo, StreamingContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.appdomainunloadedexception\" data-linktype=\"relative-path\">AppDomainUnloadedException</a> class with serialized data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected AppDomainUnloadedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object that holds the serialized object data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The contextual information about the source or destination.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see <a href=\"../topic/xml%20and%20soap%20serialization\" data-linktype=\"relative-path\">XML and SOAP Serialization</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_AppDomainUnloadedException__ctor_System_String_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AppDomainUnloadedException(String, Exception)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.appdomainunloadedexception\" data-linktype=\"relative-path\">AppDomainUnloadedException</a> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public AppDomainUnloadedException (string message, Exception innerException);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message that describes the error.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>innerException</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference, the current exception is raised in a <code>catch</code> block that handles the inner exception.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The content of the <code>message</code> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  </p>\n<p> An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property returns the same value that is passed into the constructor, or a null reference if the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property does not supply the inner exception value to the constructor.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.appdomainunloadedexception\" data-linktype=\"relative-path\">AppDomainUnloadedException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>The inner exception reference.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.AppDomainUnloadedException.yml\">\r\n<meta name=\"APIName\" content=\"System.AppDomainUnloadedException\">\r\n<meta name=\"APIName\" content=\"System.AppDomainUnloadedException..ctor\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"914635bf-9e2f-a8e2-e0ac-7fec80af111e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when an attempt is made to access an unloaded application domain.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.AppDomainUnloadedException\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.AppDomainUnloadedException.yml","open_to_public_contributors":false,"api_name":["System.AppDomainUnloadedException","System.AppDomainUnloadedException..ctor"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.AppDomainUnloadedException","System::AppDomainUnloadedException","System.AppDomainUnloadedException.#ctor","System::AppDomainUnloadedException::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"914635bf-9e2f-a8e2-e0ac-7fec80af111e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System/AppDomainUnloadedException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AppDomainUnloadedException class | Microsoft Docs","_op_ogTitle":"AppDomainUnloadedException class","description":"The exception that is thrown when an attempt is made to access an unloaded application domain.\n","toc_asset_id":"api/_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.AppDomainUnloadedException","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.appdomainunloadedexception","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.appdomainunloadedexception","fileRelativePath":"api/System.AppDomainUnloadedException.html"},"themesRelativePathToOutputRoot":"_themes/"}