{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ITask</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a task, which is a unit of executable code used by MSBuild to perform build operations.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface ITask</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows the code from a complete task implementation.  </p>\n<pre><code class=\"lang-cs\" name=\"msbuild_MakeDirTask#1\">using System;\nusing System.IO;\nusing System.Security;\nusing System.Collections;\nusing Microsoft.Build.Framework;\nusing Microsoft.Build.Utilities;\n\nnamespace Microsoft.Build.Tasks\n{\n\t/*\n\t * Class: MakeDir\n\t *\n\t * An MSBuild task that creates one or more directories.\n\t *\n\t */\n\tpublic class MakeDir : Task\n\t{\n\t    // The Required attribute indicates the following to MSBuild:\n\t    //\t     - if the parameter is a scalar type, and it is not supplied, fail the build immediately\n\t    //\t     - if the parameter is an array type, and it is not supplied, pass in an empty array\n\t    // In this case the parameter is an array type, so if a project fails to pass in a value for the \n            // Directories parameter, the task will get invoked, but this implementation will do nothing,\n            // because the array will be empty.\n\t\t[Required]\n            // Directories to create.\n\t\tpublic ITaskItem[] Directories\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn directories;\n\t\t\t}\n\n\t\t\tset\n\t\t\t{\n\t\t\t\tdirectories = value;\n\t\t\t}\n\t\t}\n\n\t\t// The Output attribute indicates to MSBuild that the value of this property can be gathered after the\n\t\t// task has returned from Execute(), if the project has an &lt;Output&gt; tag under this task&#39;s element for \n\t\t// this property.\n\t\t[Output]\n\t\t// A project may need the subset of the inputs that were actually created, so make that available here.\n\t\tpublic ITaskItem[] DirectoriesCreated\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn directoriesCreated;\n\t\t\t}\n\t\t}\n\n\t\tprivate ITaskItem[] directories;\n\t\tprivate ITaskItem[] directoriesCreated;\n\n\t\t/// &lt;summary&gt;\n\t\t/// Execute is part of the Microsoft.Build.Framework.ITask interface.\n\t\t/// When it&#39;s called, any input parameters have already been set on the task&#39;s properties.\n\t\t/// It returns true or false to indicate success or failure.\n\t\t/// &lt;/summary&gt;\n\t\tpublic override bool Execute()\n\t\t{\n\t\t\tArrayList items = new ArrayList();\n\t\t\tforeach (ITaskItem directory in Directories)\n\t\t\t{\n\t\t\t\t// ItemSpec holds the filename or path of an Item\n\t\t\t\tif (directory.ItemSpec.Length &gt; 0)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Only log a message if we actually need to create the folder\n\t\t\t\t\t\tif (!Directory.Exists(directory.ItemSpec))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.LogMessage(MessageImportance.Normal, &quot;Creating directory &quot; + directory.ItemSpec);\n\t\t\t\t\t\t\tDirectory.CreateDirectory(directory.ItemSpec);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add to the list of created directories\n\t\t\t\t\t\titems.Add(directory);\n\t\t\t\t\t}\n\t\t\t\t\t// If a directory fails to get created, log an error, but proceed with the remaining \n\t\t\t\t\t// directories.\n\t\t\t\t\tcatch (Exception ex)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (ex is IOException\n\t\t\t\t\t\t\t|| ex is UnauthorizedAccessException\n\t\t\t\t\t\t\t|| ex is PathTooLongException\n\t\t\t\t\t\t\t|| ex is DirectoryNotFoundException\n\t\t\t\t\t\t\t|| ex is SecurityException)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.LogError(&quot;Error trying to create directory &quot; + directory.ItemSpec + &quot;. &quot; + ex.Message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthrow;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Populate the &quot;DirectoriesCreated&quot; output items.\n\t\t\tdirectoriesCreated = (ITaskItem[])items.ToArray(typeof(ITaskItem));\n\n\t\t\t// Log.HasLoggedErrors is true if the task logged any errors -- even if they were logged \n\t\t\t// from a task&#39;s constructor or property setter. As long as this task is written to always log an error\n\t\t\t// when it fails, we can reliably return HasLoggedErrors.\n\t\t\treturn !Log.HasLoggedErrors;\n\t\t}\n\t}\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>All task classes must implement this interface to be recognized by the build engine. Instead of implenting this interface directly, you can also derive your class from the helper class, <a class=\"xref\" href=\"microsoft.build.utilities.task\" data-linktype=\"relative-path\">Task</a>, which provides default implementations of some ITask members.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Build_Framework_ITask_BuildEngine\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BuildEngine</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the build engine associated with the task.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Microsoft.Build.Framework.IBuildEngine BuildEngine { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.ibuildengine\" data-linktype=\"relative-path\">IBuildEngine</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The build engine associated with the task.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Build_Framework_ITask_HostObject\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HostObject</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets any host object that is associated with the task.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Microsoft.Build.Framework.ITaskHost HostObject { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.itaskhost\" data-linktype=\"relative-path\">ITaskHost</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The host object associated with the task.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property can be a null reference (<code>Nothing</code> in Visual Basic).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Build_Framework_ITask_Execute\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Execute()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Executes a task.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Execute ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the task executed successfully; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the build engine to execute a task. Upon termination of this method, a task should indicate if the execution was successful. If a task throws an exception from this method, the engine assumes that the task has failed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/Microsoft.Build.Framework.ITask.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Framework.ITask\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Framework.ITask.BuildEngine\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Framework.ITask.Execute\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Framework.ITask.HostObject\">\r\n<meta name=\"APILocation\" content=\"Microsoft.Build.Framework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"ed6f6ba8-45fe-7699-a5bf-935e725d44e4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a task, which is a unit of executable code used by MSBuild to perform build operations.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/microsoft.build.framework/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.Build.Framework.ITask\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/Microsoft.Build.Framework.ITask.yml","open_to_public_contributors":false,"api_name":["Microsoft.Build.Framework.ITask","Microsoft.Build.Framework.ITask.BuildEngine","Microsoft.Build.Framework.ITask.Execute","Microsoft.Build.Framework.ITask.HostObject"],"api_location":["Microsoft.Build.Framework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.Build.Framework.ITask","Microsoft::Build::Framework::ITask","Microsoft.Build.Framework.ITask.BuildEngine","Microsoft::Build::Framework::ITask::BuildEngine","Microsoft.Build.Framework.ITask.Execute","Microsoft::Build::Framework::ITask::Execute","Microsoft.Build.Framework.ITask.HostObject","Microsoft::Build::Framework::ITask::HostObject"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"ed6f6ba8-45fe-7699-a5bf-935e725d44e4","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/Microsoft.Build.Framework/ITask.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ITask interface | Microsoft Docs","_op_ogTitle":"ITask interface","description":"Defines a task, which is a unit of executable code used by MSBuild to perform build operations.\n","toc_asset_id":"api/_splitted/Microsoft.Build.Framework/toc.json","toc_rel":"_splitted/Microsoft.Build.Framework/toc.json","source_url":"","ms.assetid":"Microsoft.Build.Framework.ITask","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.build.framework.itask","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.build.framework.itask","fileRelativePath":"api/Microsoft.Build.Framework.ITask.html"},"themesRelativePathToOutputRoot":"_themes/"}