{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IPInterfaceProperties</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class IPInterfaceProperties</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">IPInterfaceProperties</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example displays address information.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclNetInfoReport#8\">void ShowIPAddresses( IPInterfaceProperties ^ adapterProperties )\n{\n   IPAddressCollection ^ dnsServers = adapterProperties-&gt;DnsAddresses;\n   if ( dnsServers != nullptr )\n   {\n      System::Collections::IEnumerator^ myEnum = dnsServers-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         IPAddressInformation ^ dns = safe_cast&lt;IPAddressInformation ^&gt;(myEnum-&gt;Current);\n         Console::WriteLine( &quot;  DNS Servers ............................. : {0} ({1} {2})&quot;,\n            dns-&gt;Address, dns-&gt;IsTransient ? (String^)&quot;Transient&quot; : &quot;&quot;, dns-&gt;IsDnsEligible ? (String^)&quot;DNS Eligible&quot; : &quot;&quot; );\n      }\n   }\n\n   IPAddressInformationCollection ^ anyCast = adapterProperties-&gt;AnycastAddresses;\n   if ( anyCast != nullptr )\n   {\n      System::Collections::IEnumerator^ myEnum1 = anyCast-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         IPAddressInformation ^ any = safe_cast&lt;IPAddressInformation ^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( &quot;  Anycast Address .......................... : {0} {1} {2}&quot;, any-&gt;Address, any-&gt;IsTransient ? (String^)&quot;Transient&quot; : &quot;&quot;, any-&gt;IsDnsEligible ? (String^)&quot;DNS Eligible&quot; : &quot;&quot; );\n      }\n\n      Console::WriteLine();\n   }\n\n   MulticastIPAddressInformationCollection ^ multiCast = adapterProperties-&gt;MulticastAddresses;\n   if ( multiCast != nullptr )\n   {\n      System::Collections::IEnumerator^ myEnum2 = multiCast-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         IPAddressInformation ^ multi = safe_cast&lt;IPAddressInformation ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;  Multicast Address ....................... : {0} {1} {2}&quot;, multi-&gt;Address, multi-&gt;IsTransient ? (String^)&quot;Transient&quot; : &quot;&quot;, multi-&gt;IsDnsEligible ? (String^)&quot;DNS Eligible&quot; : &quot;&quot; );\n      }\n\n      Console::WriteLine();\n   }\n\n   UnicastIPAddressInformationCollection ^ uniCast = adapterProperties-&gt;UnicastAddresses;\n   if ( uniCast != nullptr )\n   {\n      String^ lifeTimeFormat = &quot;dddd, MMMM dd, yyyy  hh:mm:ss tt&quot;;\n      System::Collections::IEnumerator^ myEnum3 = uniCast-&gt;GetEnumerator();\n      while ( myEnum3-&gt;MoveNext() )\n      {\n         UnicastIPAddressInformation ^ uni = safe_cast&lt;UnicastIPAddressInformation ^&gt;(myEnum3-&gt;Current);\n         DateTime when;\n         Console::WriteLine( &quot;  Unicast Address ......................... : {0}&quot;, uni-&gt;Address );\n         Console::WriteLine( &quot;     Prefix Origin ........................ : {0}&quot;, uni-&gt;PrefixOrigin );\n         Console::WriteLine( &quot;     Suffix Origin ........................ : {0}&quot;, uni-&gt;SuffixOrigin );\n         Console::WriteLine( &quot;     Duplicate Address Detection .......... : {0}&quot;, uni-&gt;DuplicateAddressDetectionState );\n\n         // Format the lifetimes as Sunday, February 16, 2003 11:33:44 PM\n         // if en-us is the current culture.\n         // Calculate the date and time at the end of the lifetimes.\n         when = DateTime::UtcNow + TimeSpan::FromSeconds( (double)uni-&gt;AddressValidLifetime );\n         when = when.ToLocalTime();\n         Console::WriteLine( &quot;     Valid Life Time ...................... : {0}&quot;, when.ToString( lifeTimeFormat, System::Globalization::CultureInfo::CurrentCulture ) );\n         when = DateTime::UtcNow + TimeSpan::FromSeconds( (double)uni-&gt;AddressPreferredLifetime );\n         when = when.ToLocalTime();\n         Console::WriteLine( &quot;     Preferred life time .................. : {0}&quot;, when.ToString( lifeTimeFormat, System::Globalization::CultureInfo::CurrentCulture ) );\n         when = DateTime::UtcNow + TimeSpan::FromSeconds( (double)uni-&gt;DhcpLeaseLifetime );\n         when = when.ToLocalTime();\n         Console::WriteLine( &quot;     DHCP Leased Life Time ................ : {0}&quot;, when.ToString( lifeTimeFormat, System::Globalization::CultureInfo::CurrentCulture ) );\n      }\n\n      Console::WriteLine();\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NclNetInfoReport#8\">public static void ShowIPAddresses(IPInterfaceProperties adapterProperties)\n{\n    IPAddressCollection dnsServers = adapterProperties.DnsAddresses;\n    if (dnsServers != null)\n    {\n        foreach (IPAddress dns in dnsServers)\n        {\n            Console.WriteLine(&quot;  DNS Servers ............................. : {0}&quot;, \n                dns.ToString()\n           );\n        }\n    }\n    IPAddressInformationCollection anyCast = adapterProperties.AnycastAddresses;\n    if (anyCast != null)\n    {\n        foreach (IPAddressInformation any in anyCast)\n        {\n            Console.WriteLine(&quot;  Anycast Address .......................... : {0} {1} {2}&quot;, \n                any.Address,\n                any.IsTransient ? &quot;Transient&quot; : &quot;&quot;, \n                any.IsDnsEligible ? &quot;DNS Eligible&quot; : &quot;&quot;\n            );\n        }\n        Console.WriteLine();\n    }\n        \n    MulticastIPAddressInformationCollection multiCast = adapterProperties.MulticastAddresses;\n    if (multiCast != null)\n    {\n        foreach (IPAddressInformation multi in multiCast)\n        {\n            Console.WriteLine(&quot;  Multicast Address ....................... : {0} {1} {2}&quot;, \n                multi.Address,\n                multi.IsTransient ? &quot;Transient&quot; : &quot;&quot;, \n                multi.IsDnsEligible ? &quot;DNS Eligible&quot; : &quot;&quot;\n            );\n        }\n        Console.WriteLine();\n    }\n    UnicastIPAddressInformationCollection uniCast = adapterProperties.UnicastAddresses;\n    if (uniCast != null)\n    {\n        string lifeTimeFormat = &quot;dddd, MMMM dd, yyyy  hh:mm:ss tt&quot;;\n        foreach (UnicastIPAddressInformation uni in uniCast)\n        {\n            DateTime when;\n            \n            Console.WriteLine(&quot;  Unicast Address ......................... : {0}&quot;, uni.Address);\n            Console.WriteLine(&quot;     Prefix Origin ........................ : {0}&quot;, uni.PrefixOrigin);\n            Console.WriteLine(&quot;     Suffix Origin ........................ : {0}&quot;, uni.SuffixOrigin);\n            Console.WriteLine(&quot;     Duplicate Address Detection .......... : {0}&quot;, \n                uni.DuplicateAddressDetectionState);\n                \n            // Format the lifetimes as Sunday, February 16, 2003 11:33:44 PM\n            // if en-us is the current culture.\n            \n            // Calculate the date and time at the end of the lifetimes.    \n            when = DateTime.UtcNow + TimeSpan.FromSeconds(uni.AddressValidLifetime);\n            when = when.ToLocalTime();    \n            Console.WriteLine(&quot;     Valid Life Time ...................... : {0}&quot;, \n                when.ToString(lifeTimeFormat,System.Globalization.CultureInfo.CurrentCulture)\n            );\n            when = DateTime.UtcNow + TimeSpan.FromSeconds(uni.AddressPreferredLifetime);   \n            when = when.ToLocalTime();      \n            Console.WriteLine(&quot;     Preferred life time .................. : {0}&quot;, \n                when.ToString(lifeTimeFormat,System.Globalization.CultureInfo.CurrentCulture)\n            ); \n            \n            when = DateTime.UtcNow + TimeSpan.FromSeconds(uni.DhcpLeaseLifetime);\n            when = when.ToLocalTime(); \n            Console.WriteLine(&quot;     DHCP Leased Life Time ................ : {0}&quot;, \n                when.ToString(lifeTimeFormat,System.Globalization.CultureInfo.CurrentCulture)\n            );\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This class provides access to configuration and address information for network interfaces that support IPv4 or IPv6. You do not create instances of this class; they are returned by the <a class=\"xref\" href=\"system.net.networkinformation.networkinterface#System_Net_NetworkInformation_NetworkInterface_GetIPProperties_\" data-linktype=\"relative-path\">GetIPProperties</a> method.  </p>\n<p> To access IPv4-specific properties, use the object returned by the <a class=\"xref\" href=\"system.net.networkinformation.ipinterfaceproperties#System_Net_NetworkInformation_IPInterfaceProperties_GetIPv4Properties_\" data-linktype=\"relative-path\">GetIPv4Properties</a> method. To access IPv6-specific properties, use the object returned by the <a class=\"xref\" href=\"system.net.networkinformation.ipinterfaceproperties#System_Net_NetworkInformation_IPInterfaceProperties_GetIPv6Properties_\" data-linktype=\"relative-path\">GetIPv6Properties</a> method.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IPInterfaceProperties()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.ipinterfaceproperties\" data-linktype=\"relative-path\">IPInterfaceProperties</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected IPInterfaceProperties ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor can be called only from classes that derive from <a class=\"xref\" href=\"system.net.networkinformation.ipinterfaceproperties\" data-linktype=\"relative-path\">IPInterfaceProperties</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_AnycastAddresses\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AnycastAddresses</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the anycast IP addresses assigned to this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.IPAddressInformationCollection AnycastAddresses { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipaddressinformationcollection\" data-linktype=\"relative-path\">IPAddressInformationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.ipaddressinformationcollection\" data-linktype=\"relative-path\">IPAddressInformationCollection</a> that contains the anycast addresses for this interface.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An anycast address identifies multiple computers. Packets sent to an anycast address are sent to one of the computers identified by the address. Anycast addressing is an IPv6 feature used to update router tables for a group of hosts.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_DhcpServerAddresses\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DhcpServerAddresses</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.IPAddressCollection DhcpServerAddresses { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipaddresscollection\" data-linktype=\"relative-path\">IPAddressCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.ipaddresscollection\" data-linktype=\"relative-path\">IPAddressCollection</a> that contains the address information for DHCP servers, or an empty array if no servers are found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. A DHCP server does not permanently assign addresses; instead, it temporarily uses one of a number of available addresses to the computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_DnsAddresses\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DnsAddresses</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the addresses of Domain Name System (DNS) servers for this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.IPAddressCollection DnsAddresses { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipaddresscollection\" data-linktype=\"relative-path\">IPAddressCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.networkinformation.ipaddresscollection\" data-linktype=\"relative-path\">IPAddressCollection</a> that contains the DNS server addresses.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>DNS is a hierarchical naming system used to map host names to IP addresses.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_DnsSuffix\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DnsSuffix</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the Domain Name System (DNS) suffix associated with this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract string DnsSuffix { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the DNS suffix for this interface, or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if there is no DNS suffix for the interface.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>This property is not valid on computers running operating systems earlier than Windows 2000.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DNS suffix identifies the domain name (for example, &quot;contoso.com&quot;) that is appended to an unqualified host name to obtain a fully qualified domain name (FQDN) suitable for a DNS name query. For example, if the local machine has &quot;contoso.com&quot; as its DnsSuffix, and must resolve the unqualified host name &quot;www&quot;, the FQDN to query is &quot;www.contoso.com&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_GatewayAddresses\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GatewayAddresses</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the IPv4 network gateway addresses for this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.GatewayIPAddressInformationCollection GatewayAddresses { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.gatewayipaddressinformationcollection\" data-linktype=\"relative-path\">GatewayIPAddressInformationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.gatewayipaddressinformationcollection\" data-linktype=\"relative-path\">GatewayIPAddressInformationCollection</a> that contains the address information for network gateways, or an empty array if no gateways are found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Gateways that implement the Internet Protocol Version 4 (IPv4) to forward packets between networks are returned by this property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_IsDnsEnabled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsDnsEnabled</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether NetBt is configured to use DNS name resolution on this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract bool IsDnsEnabled { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if NetBt is configured to use DNS name resolution on this interface; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>DNS is a hierarchical naming system used to map host names to IP addresses.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_IsDynamicDnsEnabled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsDynamicDnsEnabled</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract bool IsDynamicDnsEnabled { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Dynamic DNS enables a client to inform the DNS servers that its dynamic IP address is mapped to its static host name.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_MulticastAddresses\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MulticastAddresses</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the multicast addresses assigned to this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.MulticastIPAddressInformationCollection MulticastAddresses { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.multicastipaddressinformationcollection\" data-linktype=\"relative-path\">MulticastIPAddressInformationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.multicastipaddressinformationcollection\" data-linktype=\"relative-path\">MulticastIPAddressInformationCollection</a> that contains the multicast addresses for this interface.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A multicast address identifies multiple computers. Packets sent to a multicast address are sent to all computers identified by the address.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_UnicastAddresses\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UnicastAddresses</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the unicast addresses assigned to this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.UnicastIPAddressInformationCollection UnicastAddresses { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.unicastipaddressinformationcollection\" data-linktype=\"relative-path\">UnicastIPAddressInformationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.unicastipaddressinformationcollection\" data-linktype=\"relative-path\">UnicastIPAddressInformationCollection</a> that contains the unicast addresses for this interface.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A unicast address identifies a single computer. Packets sent to a unicast address are sent to the computer identified by the address.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_WinsServersAddresses\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WinsServersAddresses</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the addresses of Windows Internet Name Service (WINS) servers.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.IPAddressCollection WinsServersAddresses { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipaddresscollection\" data-linktype=\"relative-path\">IPAddressCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.ipaddresscollection\" data-linktype=\"relative-path\">IPAddressCollection</a> that contains the address information for WINS servers, or an empty array if no servers are found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_GetIPv4Properties\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetIPv4Properties()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.IPv4InterfaceProperties GetIPv4Properties ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipv4interfaceproperties\" data-linktype=\"relative-path\">IPv4InterfaceProperties</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.ipv4interfaceproperties\" data-linktype=\"relative-path\">IPv4InterfaceProperties</a> object that contains IPv4 configuration data, or <code>null</code> if no data is available for the interface.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The interface does not support the IPv4 protocol.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property returns <code>null</code> for <a class=\"xref\" href=\"system.net.networkinformation.networkinterfacetype\" data-linktype=\"relative-path\">NetworkInterfaceType</a> interfaces.  </p>\n<p> For a detailed description of the information available for an interface that supports IPv4, see the <a class=\"xref\" href=\"system.net.networkinformation.ipv4interfaceproperties\" data-linktype=\"relative-path\">IPv4InterfaceProperties</a> class documentation. Note that the object returned by the GetIPv4Properties method reflects the configuration as of the time the object is created. This information is not updated dynamically.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_NetworkInformation_IPInterfaceProperties_GetIPv6Properties\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetIPv6Properties()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Net.NetworkInformation.IPv6InterfaceProperties GetIPv6Properties ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a> object that contains IPv6 configuration data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The interface does not support the IPv6 protocol.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For a detailed description of the information available for an interface that supports IPv6, see the <a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a> documentation. Note that the object returned by the GetIPv6Properties method reflects the configuration as of the time the object is created. This information is not updated dynamically.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.NetworkInformation.IPInterfaceProperties.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"c3fb6291-c2b9-506c-2585-5834e97a4116\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net.networkinformation/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.NetworkInformation.IPInterfaceProperties\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.NetworkInformation.IPInterfaceProperties.yml","open_to_public_contributors":false,"api_name":["System.Net.NetworkInformation.IPInterfaceProperties","System.Net.NetworkInformation.IPInterfaceProperties..ctor","System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses","System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses","System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses","System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix","System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses","System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties","System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties","System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled","System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled","System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses","System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses","System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.NetworkInformation.IPInterfaceProperties","System::Net::NetworkInformation::IPInterfaceProperties","System.Net.NetworkInformation.IPInterfaceProperties.#ctor","System::Net::NetworkInformation::IPInterfaceProperties::#ctor","System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses","System::Net::NetworkInformation::IPInterfaceProperties::AnycastAddresses","System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses","System::Net::NetworkInformation::IPInterfaceProperties::DhcpServerAddresses","System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses","System::Net::NetworkInformation::IPInterfaceProperties::DnsAddresses","System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix","System::Net::NetworkInformation::IPInterfaceProperties::DnsSuffix","System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses","System::Net::NetworkInformation::IPInterfaceProperties::GatewayAddresses","System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties","System::Net::NetworkInformation::IPInterfaceProperties::GetIPv4Properties","System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties","System::Net::NetworkInformation::IPInterfaceProperties::GetIPv6Properties","System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled","System::Net::NetworkInformation::IPInterfaceProperties::IsDnsEnabled","System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled","System::Net::NetworkInformation::IPInterfaceProperties::IsDynamicDnsEnabled","System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses","System::Net::NetworkInformation::IPInterfaceProperties::MulticastAddresses","System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses","System::Net::NetworkInformation::IPInterfaceProperties::UnicastAddresses","System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses","System::Net::NetworkInformation::IPInterfaceProperties::WinsServersAddresses"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"c3fb6291-c2b9-506c-2585-5834e97a4116","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IPInterfaceProperties class | Microsoft Docs","_op_ogTitle":"IPInterfaceProperties class","description":"Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).\n","toc_asset_id":"api/_splitted/System.Net.NetworkInformation/toc.json","toc_rel":"_splitted/System.Net.NetworkInformation/toc.json","source_url":"","ms.assetid":"System.Net.NetworkInformation.IPInterfaceProperties","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.networkinformation.ipinterfaceproperties","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.networkinformation.ipinterfaceproperties","fileRelativePath":"api/System.Net.NetworkInformation.IPInterfaceProperties.html"},"themesRelativePathToOutputRoot":"_themes/"}