{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDbDataAdapter</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a set of command-related properties that are used to fill the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDbDataAdapter : System.Data.IDataAdapter</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example uses the derived classes, <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a>, to select records from a data source. The filled <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is then returned. To accomplish this, the method is passed an initialized <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, a connection string, and a query string that is a Transact-SQL SELECT statement.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData SqlDataAdapter Example#1\">Public Function SelectRows( _\n    ByVal dataSet As DataSet, ByVal connectionString As String, _\n    ByVal queryString As String) As DataSet\n\n    Using connection As New SqlConnection(connectionString)\n        Dim adapter As New SqlDataAdapter()\n        adapter.SelectCommand = New SqlCommand( _\n            queryString, connection)\n        adapter.Fill(dataSet)\n        Return dataSet\n    End Using\nEnd Function\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData SqlDataAdapter Example#1\">private static DataSet SelectRows(DataSet dataset,\n    string connectionString,string queryString) \n{\n    using (SqlConnection connection = \n        new SqlConnection(connectionString))\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter();\n        adapter.SelectCommand = new SqlCommand(\n            queryString, connection);\n        adapter.Fill(dataset);\n        return dataset;\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The IDbDataAdapter interface inherits from the <a class=\"xref\" href=\"system.data.idataadapter\" data-linktype=\"relative-path\">IDataAdapter</a> interface and allows an object to create a DataAdapter designed for use with a relational database. The IDbDataAdapter interface and, optionally, the utility class, <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information about DataAdapter classes, see <a href=\"../topic/populating%20a%20dataset%20from%20a%20dataadapter\" data-linktype=\"relative-path\">Populating a DataSet from a DataAdapter</a>. For more information about implementing .NET Framework data providers, see <a href=\"http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852\" data-linktype=\"external\">&#91;&lt;topic://cpconimplementingnetdataprovider&gt;&#93;</a>.  </p>\n<p> An application does not create an instance of the IDbDataAdapter interface directly, but creates an instance of a class that inherits IDbDataAdapter and <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a>.  </p>\n<p> Classes that inherit IDbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbDataAdapter interface defines the <a class=\"xref\" href=\"system.data.idbdataadapter#System_Data_IDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property, and the <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a> interface defines a <a class=\"xref\" href=\"system.data.idataadapter#System_Data_IDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method that takes a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as a parameter. In turn, the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter\" data-linktype=\"relative-path\">OleDbDataAdapter</a> class inherits the <a class=\"xref\" href=\"system.data.idbdataadapter#System_Data_IDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property and the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method, and also defines two additional overloads of the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method that take an ADO Recordset object as a parameter.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbDataAdapter_DeleteCommand\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeleteCommand</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an SQL statement for deleting records from the data set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbCommand DeleteCommand { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to delete records in the data source for deleted rows in the data set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the DeleteCommand can be generated automatically if you set the <code>SelectCommand</code> property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information see <a href=\"../topic/generating%20commands%20with%20commandbuilders\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When DeleteCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The DeleteCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbDataAdapter_InsertCommand\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InsertCommand</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an SQL statement used to insert new records into the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbCommand InsertCommand { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to insert records in the data source for new rows in the data set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the InsertCommand can be generated automatically if you set the <code>SelectCommand</code> property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information see <a href=\"../topic/generating%20commands%20with%20commandbuilders\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When InsertCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The InsertCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If execution of this command returns rows, these rows may be added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> depending on how you set the <a class=\"xref\" href=\"system.data.idbcommand#System_Data_IDbCommand_UpdatedRowSource_\" data-linktype=\"relative-path\">UpdatedRowSource</a> property of the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbDataAdapter_SelectCommand\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectCommand</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an SQL statement used to select records in the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbCommand SelectCommand { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> that is used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to select records from data source for placement in the data set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When SelectCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The SelectCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.  </p>\n<p> If the SelectCommand does not return any rows, no tables are added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, and no exception is raised.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_IDbDataAdapter_UpdateCommand\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateCommand</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an SQL statement used to update records in the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.IDbCommand UpdateCommand { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to update records in the data source for modified rows in the data set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the UpdateCommand can be generated automatically if you set the <code>SelectCommand</code> property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information see <a href=\"../topic/generating%20commands%20with%20commandbuilders\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When UpdateCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The UpdateCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If execution of this command returns rows, these rows are added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.IDbDataAdapter.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.DeleteCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.InsertCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.SelectCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.UpdateCommand\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"d68b7174-6100-460c-47e4-0e311a14cd2d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a set of command-related properties that are used to fill the  and update a data source, and is implemented by .NET Framework data providers that access relational databases.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.IDbDataAdapter\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.IDbDataAdapter.yml","open_to_public_contributors":false,"api_name":["System.Data.IDbDataAdapter","System.Data.IDbDataAdapter.DeleteCommand","System.Data.IDbDataAdapter.InsertCommand","System.Data.IDbDataAdapter.SelectCommand","System.Data.IDbDataAdapter.UpdateCommand"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.IDbDataAdapter","System::Data::IDbDataAdapter","System.Data.IDbDataAdapter.DeleteCommand","System::Data::IDbDataAdapter::DeleteCommand","System.Data.IDbDataAdapter.InsertCommand","System::Data::IDbDataAdapter::InsertCommand","System.Data.IDbDataAdapter.SelectCommand","System::Data::IDbDataAdapter::SelectCommand","System.Data.IDbDataAdapter.UpdateCommand","System::Data::IDbDataAdapter::UpdateCommand"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"d68b7174-6100-460c-47e4-0e311a14cd2d","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data/IDbDataAdapter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDbDataAdapter interface | Microsoft Docs","_op_ogTitle":"IDbDataAdapter interface","description":"Represents a set of command-related properties that are used to fill the  and update a data source, and is implemented by .NET Framework data providers that access relational databases.\n","toc_asset_id":"api/_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.IDbDataAdapter","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.idbdataadapter","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.idbdataadapter","fileRelativePath":"api/System.Data.IDbDataAdapter.html"},"themesRelativePathToOutputRoot":"_themes/"}