{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IChannelReceiverHook</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Indicates that the implementing channel wants to hook into the outside listener service.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic interface IChannelReceiverHook</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<pre><code class=\"lang-cs\" name=\"IChannelReceiverHook_ChannelScheme#1\">// Implementation of &#39;IChannelReceiverHook&#39; interface.\n[PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\npublic class MyCustomChannel : IChannelReceiverHook \n{\n   private bool portSet;\n   // Constructor for MyCustomChannel.\n   public MyCustomChannel(int port)\n   {\n      portSet = true;\n   }\n   // Constructor for MyCustomChannel.\n   public MyCustomChannel()\n   {\n      portSet = false;\n   }\n   public bool WantsToListen\n   {\n      get\n      {\n         if (portSet)\n         {\n            return false;\n         }\n         else\n         {\n            return true;\n         }\n      }\n   }\n   private string MyChannelScheme = &quot;http&quot;;\n   public string ChannelScheme\n   {\n      get\n      {\n         return MyChannelScheme;\n      }\n   }\n   public IServerChannelSink ChannelSinkChain\n   {\n      get\n      {\n         // Null implementation.\n         return null;\n      }\n   }\n   public void AddHookChannelUri(string channelUri)\n   {\n      // Null implementation.\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"IChannelReceiverHook_ChannelScheme#1\">// Implementation of &#39;IChannelReceiverHook&#39; interface.\npublic ref class MyCustomChannel: public IChannelReceiverHook\n{\nprivate:\n   bool portSet;\n\npublic:\n   // Constructor for MyCustomChannel.\n   MyCustomChannel( int /*port*/ )\n   {\n      MyChannelScheme = &quot;http&quot;;\n      portSet = true;\n   }\n\n   // Constructor for MyCustomChannel.\n   MyCustomChannel()\n   {\n      MyChannelScheme = &quot;http&quot;;\n      portSet = false;\n   }\n\n   property bool WantsToListen \n   {\n      [System::Security::Permissions::SecurityPermissionAttribute\n      (System::Security::Permissions::SecurityAction::LinkDemand,\n      Flags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n      virtual bool get()\n      {\n         if ( portSet )\n         {\n            return false;\n         }\n         else\n         {\n            return true;\n         }\n      }\n   }\n\nprivate:\n   String^ MyChannelScheme;\n\npublic:\n   property String^ ChannelScheme \n   {\n      [System::Security::Permissions::SecurityPermissionAttribute\n      (System::Security::Permissions::SecurityAction::LinkDemand,\n      Flags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n      virtual String^ get()\n      {\n         return MyChannelScheme;\n      }\n   }\n\n   property IServerChannelSink^ ChannelSinkChain \n   {\n      [System::Security::Permissions::SecurityPermissionAttribute\n      (System::Security::Permissions::SecurityAction::LinkDemand,\n      Flags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n      virtual IServerChannelSink^ get()\n      {\n         \n         // Null implementation.\n         return nullptr;\n      }\n   }\n\n   [System::Security::Permissions::SecurityPermissionAttribute\n   (System::Security::Permissions::SecurityAction::LinkDemand,\n   Flags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n   virtual void AddHookChannelUri( String^ /*channelUri*/ )\n   {\n      // Null implementation.\n   }\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"IChannelReceiverHook_ChannelScheme#1\">&#39; Implementation of &#39;IChannelReceiverHook&#39; interface.\n&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class MyCustomChannel\n   Implements IChannelReceiverHook \n   Private portSet As Boolean\n\n   &#39; Constructor for MyCustomChannel.\n   Public Sub New(ByVal port As Integer)\n      portSet = True\n   End Sub &#39;New\n\n   &#39; Constructor for MyCustomChannel.\n   Public Sub New()\n      portSet = False\n   End Sub &#39;New\n\n   Public ReadOnly Property WantsToListen() As Boolean Implements IChannelReceiverHook.WantsToListen\n      Get\n         If portSet Then\n            Return False\n         Else\n            Return True\n         End If\n      End Get\n   End Property\n\n   Private MyChannelScheme As String = &quot;http&quot;\n\n   Public ReadOnly Property ChannelScheme() As String Implements IChannelReceiverHook.ChannelScheme\n      Get\n         Return MyChannelScheme\n      End Get\n   End Property\n\n   Public ReadOnly Property ChannelSinkChain() As IServerChannelSink _\n                                       Implements IChannelReceiverHook.ChannelSinkChain\n      Get\n         &#39; Null implementation.\n         Return Nothing\n      End Get\n   End Property\n\n   Public Sub AddHookChannelUri(ByVal channelUri As String) _\n                                          Implements IChannelReceiverHook.AddHookChannelUri\n      &#39; Null implementation.\n   End Sub &#39;AddHookChannelUri\nEnd Class &#39;MyCustomChannel \n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_ChannelScheme_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_ChannelScheme\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ChannelScheme</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the type of listener to hook into.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ChannelScheme { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of listener to hook into (for example, &quot;http&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This value is not case-sensitive.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_ChannelSinkChain_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_ChannelSinkChain\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ChannelSinkChain</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the channel sink chain that the current channel is using.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Runtime.Remoting.Channels.IServerChannelSink ChannelSinkChain { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.iserverchannelsink\" data-linktype=\"relative-path\">IServerChannelSink</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The channel sink chain that the current channel is using.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_WantsToListen_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_WantsToListen\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WantsToListen</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a Boolean value that indicates whether <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannelreceiverhook\" data-linktype=\"relative-path\">IChannelReceiverHook</a> needs to be hooked into the outside listener service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool WantsToListen { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A Boolean value that indicates whether <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannelreceiverhook\" data-linktype=\"relative-path\">IChannelReceiverHook</a> needs to be hooked into the outside listener service.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_AddHookChannelUri_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Channels_IChannelReceiverHook_AddHookChannelUri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddHookChannelUri(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds a URI on which the channel hook will listen.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddHookChannelUri (string channelUri);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>channelUri</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A URI on which the channel hook will listen.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitycriticalattribute\" title=\"System.Security.SecurityCriticalAttribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Client code should not call this method directly.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Channels.IChannelReceiverHook.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.IChannelReceiverHook\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.IChannelReceiverHook.AddHookChannelUri\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.IChannelReceiverHook.ChannelScheme\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.IChannelReceiverHook.ChannelSinkChain\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.IChannelReceiverHook.WantsToListen\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"ee690d1e-9793-3d35-a097-41750e9ae21d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that the implementing channel wants to hook into the outside listener service.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.remoting.channels/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Channels.IChannelReceiverHook\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Channels.IChannelReceiverHook.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Remoting.Channels.IChannelReceiverHook","System.Runtime.Remoting.Channels.IChannelReceiverHook.AddHookChannelUri","System.Runtime.Remoting.Channels.IChannelReceiverHook.ChannelScheme","System.Runtime.Remoting.Channels.IChannelReceiverHook.ChannelSinkChain","System.Runtime.Remoting.Channels.IChannelReceiverHook.WantsToListen"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Channels.IChannelReceiverHook","System::Runtime::Remoting::Channels::IChannelReceiverHook","System.Runtime.Remoting.Channels.IChannelReceiverHook.AddHookChannelUri","System::Runtime::Remoting::Channels::IChannelReceiverHook::AddHookChannelUri","System.Runtime.Remoting.Channels.IChannelReceiverHook.ChannelScheme","System::Runtime::Remoting::Channels::IChannelReceiverHook::ChannelScheme","System.Runtime.Remoting.Channels.IChannelReceiverHook.ChannelSinkChain","System::Runtime::Remoting::Channels::IChannelReceiverHook::ChannelSinkChain","System.Runtime.Remoting.Channels.IChannelReceiverHook.WantsToListen","System::Runtime::Remoting::Channels::IChannelReceiverHook::WantsToListen"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"ee690d1e-9793-3d35-a097-41750e9ae21d","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.Remoting.Channels/IChannelReceiverHook.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IChannelReceiverHook interface | Microsoft Docs","_op_ogTitle":"IChannelReceiverHook interface","description":"Indicates that the implementing channel wants to hook into the outside listener service.\n","toc_asset_id":"api/_splitted/System.Runtime.Remoting.Channels/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Channels/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Channels.IChannelReceiverHook","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.channels.ichannelreceiverhook","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.channels.ichannelreceiverhook","fileRelativePath":"api/System.Runtime.Remoting.Channels.IChannelReceiverHook.html"},"themesRelativePathToOutputRoot":"_themes/"}