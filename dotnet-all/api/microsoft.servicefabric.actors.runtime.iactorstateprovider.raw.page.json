{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IActorStateProvider</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the interface that an actor state provider needs to implement for \n            actor runtime to communicate with it.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IActorStateProvider : Microsoft.ServiceFabric.Data.IStateProviderReplica</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t\t\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\t<table class=\"nameValue\">\r\n  \t\t\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.actoractivatedasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_ActorActivatedAsync_Microsoft_ServiceFabric_Actors_ActorId_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">ActorActivatedAsync(ActorId, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>This method is invoked as part of the activation process of the actor with the specified actor ID.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.containsstateasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_ContainsStateAsync_Microsoft_ServiceFabric_Actors_ActorId_System_String_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">ContainsStateAsync(ActorId, String, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Checks whether actor state provider contains an actor state with \n            specified state name for the specified actor ID.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.deletereminderasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_DeleteReminderAsync_Microsoft_ServiceFabric_Actors_ActorId_System_String_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">DeleteReminderAsync(ActorId, String, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Deletes the actor reminder with the given reminder name if it exists</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.enumeratestatenamesasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_EnumerateStateNamesAsync_Microsoft_ServiceFabric_Actors_ActorId_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">EnumerateStateNamesAsync(ActorId, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Creates an enumerable of all the state names associated with specified actor ID.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.getactorsasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_GetActorsAsync_System_Int32_Microsoft_ServiceFabric_Actors_Query_ContinuationToken_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">GetActorsAsync(Int32, ContinuationToken, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Gets the requested number of ActorID&#39;s from the state provider.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.initialize#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_Initialize_Microsoft_ServiceFabric_Actors_Runtime_ActorTypeInformation_\" data-linktype=\"relative-path\">Initialize(ActorTypeInformation)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Initializes the actor state provider with type information\n            of the actor type associated with it.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.loadremindersasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_LoadRemindersAsync_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">LoadRemindersAsync(CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Loads all the reminders contained in the actor state provider.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.loadstateasync--1#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_LoadStateAsync__1_Microsoft_ServiceFabric_Actors_ActorId_System_String_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">LoadStateAsync&lt;T&gt;(ActorId, String, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Loads the actor state associated with the specified state name for the specified actor ID.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.remindercallbackcompletedasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_ReminderCallbackCompletedAsync_Microsoft_ServiceFabric_Actors_ActorId_Microsoft_ServiceFabric_Actors_Runtime_IActorReminder_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>This method is invoked when a reminder fires and finishes executing its callback \n            <a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iremindable.receivereminderasync#Microsoft_ServiceFabric_Actors_Runtime_IRemindable_ReceiveReminderAsync_System_String_System_Byte___System_TimeSpan_System_TimeSpan_\" data-linktype=\"relative-path\">ReceiveReminderAsync(String, Byte[], TimeSpan, TimeSpan)</a> successfully.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.removeactorasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_RemoveActorAsync_Microsoft_ServiceFabric_Actors_ActorId_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">RemoveActorAsync(ActorId, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Removes all the existing states and reminders associated with specified actor ID atomically.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.savereminderasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_SaveReminderAsync_Microsoft_ServiceFabric_Actors_ActorId_Microsoft_ServiceFabric_Actors_Runtime_IActorReminder_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">SaveReminderAsync(ActorId, IActorReminder, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Saves the specified actor ID reminder. If an actor reminder with\n            given name does not exist, it adds the actor reminder otherwise\n            existing actor reminder with same name is updated.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t\t\t\t<tr data-moniker=\" 0\">\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.servicefabric.actors.runtime.iactorstateprovider.savestateasync#Microsoft_ServiceFabric_Actors_Runtime_IActorStateProvider_SaveStateAsync_Microsoft_ServiceFabric_Actors_ActorId_System_Collections_Generic_IReadOnlyCollection_Microsoft_ServiceFabric_Actors_Runtime_ActorStateChange__System_Threading_CancellationToken_\" data-linktype=\"relative-path\">SaveStateAsync(ActorId, IReadOnlyCollection&lt;ActorStateChange&gt;, CancellationToken)</a></span>\r\n  \t\t\t\t</td>\r\n  \t\t\t\t\t<td>\r\n  \t\t\t\t\t\t<p>Saves the specified set of actor state changes for the specified actor ID atomically.</p>\n\r\n  \t\t\t\t\t</td>\r\n  \t\t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"ms.devlang\" content=\"csharp\">\r\n<meta name=\"author\" content=\"erickson-doug\">\r\n<meta name=\"ms.author\" content=\"douge\">\r\n<meta name=\"manager\" content=\"douge\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"reference\">\r\n<meta name=\"ms.date\" content=\"11/16/2016\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"azuredotnet\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"Azure\">\r\n<meta name=\"depot_name\" content=\"Azure.azuredotnet\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/Azure/azure-docs-sdk-dotnet/blob/master/docs-ref-from-xml/Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 03:03 AM\">\r\n<meta name=\"document_id\" content=\"971ccf41-0484-6b6f-8302-7184a6870662\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the interface that an actor state provider needs to implement for \n            actor runtime to communicate with it.\n\">\r\n<meta name=\"toc_rel\" content=\"microsoft.servicefabric.actors.runtime/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider\">\r\n","rawMetadata":{"ms.devlang":"csharp","author":"erickson-doug","ms.author":"douge","manager":"douge","breadcrumb_path":"breadcrumb/toc.json","apiPlatform":"dotnet","_op_documentIdPathDepotMapping":{"./":{"folder_relative_path_in_docset":"api-index"},"breadcrumb/":{"folder_relative_path_in_docset":"breadcrumb"},"docs-ref-autogen/":{"folder_relative_path_in_docset":"docs-ref-autogen"},"docs-ref-manual/":{"folder_relative_path_in_docset":"docs-ref-manual"},"docs-ref-overwrite/":{"folder_relative_path_in_docset":"docs-ref-overwrite"},"scripts/":{"folder_relative_path_in_docset":"scripts"}},"ms.topic":"reference","ms.date":"11/16/2016","search.ms_sitename":"Docs","search.ms_docsetname":"azuredotnet","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet/api/","locale":"en-us","site_name":"Docs","search.ms_product":"Azure","_op_openToPublicContributors":false,"depot_name":"Azure.azuredotnet","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/Azure/azure-docs-sdk-dotnet/blob/master/docs-ref-from-xml/Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.yml","open_to_public_contributors":false,"api_name":["Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider","Microsoft::ServiceFabric::Actors::Runtime::IActorStateProvider"],"dev_langs":["csharp"],"updated_at":"2017-04-01 03:03 AM","document_id":"971ccf41-0484-6b6f-8302-7184a6870662","content_git_url":"https://github.com/Azure/azure-docs-sdk-dotnet/blob/master/xml/Microsoft.ServiceFabric.Actors.Runtime/IActorStateProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IActorStateProvider interface | Microsoft Docs","_op_ogTitle":"IActorStateProvider interface","description":"Represents the interface that an actor state provider needs to implement for \n            actor runtime to communicate with it.\n","toc_asset_id":"Microsoft.ServiceFabric.Actors.Runtime/toc.json","toc_rel":"Microsoft.ServiceFabric.Actors.Runtime/toc.json","source_url":"","ms.assetid":"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.servicefabric.actors.runtime.iactorstateprovider","_op_displayDate":"2016-11-16","_op_displayDate_source":"2016-11-16T00:00:00Z","_op_brand":"azure","_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.servicefabric.actors.runtime.iactorstateprovider","fileRelativePath":"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}