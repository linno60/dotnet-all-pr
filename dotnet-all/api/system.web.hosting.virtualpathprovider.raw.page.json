{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">VirtualPathProvider</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class VirtualPathProvider : MarshalByRefObject</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><span class=\"lang-csharp\">VirtualPathProvider</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example is a VirtualPathProvider class implementation that creates a virtual file system using information stored in a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object. The code example works with the code examples for the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> and <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> classes to provide virtual resources from a data store that is loaded into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object.  </p>\n<p> This example has four parts: the VirtualPathProvider class implementation, an XML data file used to populate the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object, an <code>AppStart</code> object that contains an <code>AppInitialize</code> method used to register the VirtualPathProvider class with the compilation system, and an ASP.NET page that provides links to the virtual files.  </p>\n<p> To use this sample code in an application, follow these steps.  </p>\n<ol>\n<li><p>Create a sample application on your Web server.  </p>\n</li>\n<li><p>Copy the source code for the custom VirtualPathProvider object (see below) into a file in the application&#39;s <code>App_Code</code> directory.  </p>\n</li>\n<li><p>Copy the source code for the custom <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> object (see the Example section in the <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> class overview topic) into a file in the application&#39;s <code>App_Code</code> directory.  </p>\n</li>\n<li><p>Copy the source code for the custom <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> object (see the Example section in the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class overview topic) into a file in the application&#39;s <code>App_Code</code> directory.  </p>\n</li>\n<li><p>Copy the source code for the <code>AppStart</code> object (see below) into a file in the application&#39;s <code>App_Code</code> directory.  </p>\n</li>\n<li><p>Copy the XML data (see below) into a file named <code>XMLData.xml</code> into a file in the application&#39;s <code>App_Data</code> directory.  </p>\n</li>\n<li><p>Copy the <code>default.aspx</code> file (see below) into the root directory of the sample application. Use a Web browser to open the <code>default.aspx</code> file, and then click the links on the page to see the contents of the virtual files.  </p>\n</li>\n</ol>\n<p> The first example is a custom VirtualPathProvider class. The <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider#System_Web_Hosting_VirtualPathProvider_DirectoryExists_\" data-linktype=\"relative-path\">DirectoryExists</a> and <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider#System_Web_Hosting_VirtualPathProvider_FileExists_\" data-linktype=\"relative-path\">FileExists</a> methods are overridden to indicate whether a requested directory is present in the virtual file system. The <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider#System_Web_Hosting_VirtualPathProvider_GetDirectory_\" data-linktype=\"relative-path\">GetDirectory</a> and <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider#System_Web_Hosting_VirtualPathProvider_GetFile_\" data-linktype=\"relative-path\">GetFile</a> methods are overridden to return custom <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> and <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> instances containing information from the virtual file system.  </p>\n<p> The class also provides a <code>GetVirtualData</code> method used by the <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> and <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> classes to access the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object containing the virtual file system data. In a production implementation, this method would typically be implemented in a business object responsible for interacting with the data store.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Hosting.VirtualPathProvider#20\">using System;\nusing System.Data;\nusing System.Security.Permissions;\nusing System.Web;\nusing System.Web.Caching;\nusing System.Web.Hosting;\n\nnamespace Samples.AspNet.CS\n{\n  [AspNetHostingPermission(SecurityAction.Demand, Level = AspNetHostingPermissionLevel.Medium)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand, Level = AspNetHostingPermissionLevel.High)]\n  public class SamplePathProvider : VirtualPathProvider\n  {\n    private string dataFile;\n\n    public SamplePathProvider()\n      : base()\n    {\n    }\n\n    protected override void Initialize()\n    {\n      // Set the datafile path relative to the application&#39;s path.\n      dataFile = HostingEnvironment.ApplicationPhysicalPath + &quot;App_Data\\\\XMLData.xml&quot;;\n    }\n\n    /// &lt;summary&gt;\n    ///   Data set provider for the SampleVirtualDirectory and\n    ///   SampleVirtualFile classes. In a production application\n    ///   this method would be on a provider class that accesses\n    ///   the virtual resource data source.\n    /// &lt;/summary&gt;\n    /// &lt;returns&gt;\n    ///   The System.Data.DataSet containing the virtual resources \n    ///   provided by the SamplePathProvider.\n    /// &lt;/returns&gt;\n    public DataSet GetVirtualData()\n    {\n      // Get the data from the cache.\n      DataSet ds = (DataSet)HostingEnvironment.Cache.Get(&quot;VPPData&quot;);\n      if (ds == null)\n      {\n        // Data not in cache. Read XML file.\n        ds = new DataSet();\n        ds.ReadXml(dataFile);\n\n        // Make DataSet dependent on XML file.\n        CacheDependency cd = new CacheDependency(dataFile);\n\n        // Put DataSet into cache for maximum of 20 minutes.\n        HostingEnvironment.Cache.Add(&quot;VPPData&quot;, ds, cd,\n          Cache.NoAbsoluteExpiration,\n          new TimeSpan(0, 20, 0),\n          CacheItemPriority.Default, null);\n\n        // Set data timestamp.\n        DateTime dataTimeStamp = DateTime.Now;\n        // Cache it so we can get the timestamp in later calls.\n        HostingEnvironment.Cache.Insert(&quot;dataTimeStamp&quot;, dataTimeStamp, null,\n          Cache.NoAbsoluteExpiration,\n          new TimeSpan(0, 20, 0),\n          CacheItemPriority.Default, null);\n      }\n      return ds;\n    }\n\n    /// &lt;summary&gt;\n    ///   Determines whether a specified virtual path is within\n    ///   the virtual file system.\n    /// &lt;/summary&gt;\n    /// &lt;param name=&quot;virtualPath&quot;&gt;An absolute virtual path.&lt;/param&gt;\n    /// &lt;returns&gt;\n    ///   true if the virtual path is within the \n    ///   virtual file sytem; otherwise, false.\n    /// &lt;/returns&gt;\n    private bool IsPathVirtual(string virtualPath)\n    {\n      String checkPath = VirtualPathUtility.ToAppRelative(virtualPath);\n      return checkPath.StartsWith(&quot;~/vrdir&quot;, StringComparison.InvariantCultureIgnoreCase);\n    }\n\n    public override bool FileExists(string virtualPath)\n    {\n      if (IsPathVirtual(virtualPath))\n      {\n        SampleVirtualFile file = (SampleVirtualFile)GetFile(virtualPath);\n        return file.Exists;\n      }\n      else\n        return Previous.FileExists(virtualPath);\n    }\n\n    public override bool DirectoryExists(string virtualDir)\n    {\n      if (IsPathVirtual(virtualDir))\n      {\n        SampleVirtualDirectory dir = (SampleVirtualDirectory)GetDirectory(virtualDir);\n        return dir.Exists;\n      }\n      else\n        return Previous.DirectoryExists(virtualDir);\n    }\n\n    public override VirtualFile GetFile(string virtualPath)\n    {\n      if (IsPathVirtual(virtualPath))\n        return new SampleVirtualFile(virtualPath, this);\n      else\n        return Previous.GetFile(virtualPath);\n    }\n\n    public override VirtualDirectory GetDirectory(string virtualDir)\n    {\n      if (IsPathVirtual(virtualDir))\n        return new SampleVirtualDirectory(virtualDir, this);\n      else\n        return Previous.GetDirectory(virtualDir);\n    }\n\n    public override CacheDependency GetCacheDependency(\n      string virtualPath, \n      System.Collections.IEnumerable virtualPathDependencies, \n      DateTime utcStart)\n    {\n      if (IsPathVirtual(virtualPath))\n      {\n        System.Collections.Specialized.StringCollection fullPathDependencies = null;\n\n        // Get the full path to all dependencies.\n        foreach (string virtualDependency in virtualPathDependencies)\n        {\n          if (fullPathDependencies == null)\n            fullPathDependencies = new System.Collections.Specialized.StringCollection();\n\n          fullPathDependencies.Add(virtualDependency);\n        }\n        if (fullPathDependencies == null)\n          return null;\n\n        // Copy the list of full-path dependencies into an array.\n        string[] fullPathDependenciesArray = new string[fullPathDependencies.Count];\n        fullPathDependencies.CopyTo(fullPathDependenciesArray, 0);\n        // Copy the virtual path into an array.\n        string[] virtualPathArray = new string[1];\n        virtualPathArray[0] = virtualPath;\n\n        return new CacheDependency(virtualPathArray, fullPathDependenciesArray, utcStart);\n      }\n      else\n        return Previous.GetCacheDependency(virtualPath, virtualPathDependencies, utcStart);\n    }\n  }\n  \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Hosting.VirtualPathProvider#20\">Imports Microsoft.VisualBasic\n\nImports System\nImports System.Data\nImports System.Security.Permissions\nImports System.Web\nImports System.Web.Caching\nImports System.Web.Hosting\n\n\nNamespace Samples.AspNet.VB\n  &lt;AspNetHostingPermission(SecurityAction.Demand, Level:=AspNetHostingPermissionLevel.Medium), _\n   AspNetHostingPermission(SecurityAction.InheritanceDemand, level:=AspNetHostingPermissionLevel.High)&gt; _\n  Public Class SamplePathProvider\n    Inherits VirtualPathProvider\n\n    Private dataFile As String\n\n    Public Sub New()\n      MyBase.New()\n    End Sub\n\n    Protected Overrides Sub Initialize()\n      &#39; Set the datafile path relative to the application&#39;s path.\n      dataFile = HostingEnvironment.ApplicationPhysicalPath &amp; _\n        &quot;App_Data\\XMLData.xml&quot;\n    End Sub\n\n    &#39; &lt;summary&gt;\n    &#39;   Data set provider for the SampleVirtualFile and\n    &#39;   SampleVirtualDirectory classes. In a production application\n    &#39;   this method would be on a provider class that accesses\n    &#39;   the virtual resource data source.\n    &#39; &lt;/summary&gt;\n    &#39; &lt;returns&gt;\n    &#39;   The System.Data.DataSet containing the virtual resources\n    &#39;   provided by the SamplePathProvider.\n    &#39; &lt;/returns&gt;\n    Public Function GetVirtualData() As DataSet\n      &#39; Get the data from the cache.\n      Dim ds As DataSet\n      ds = CType(HostingEnvironment.Cache.Get(&quot;VPPData&quot;), DataSet)\n\n      If ds Is Nothing Then\n        &#39; Data set not in cache. Read XML file.\n        ds = New DataSet\n        ds.ReadXml(dataFile)\n\n        &#39; Make DataSet dependent on XML file.\n        Dim cd As CacheDependency\n        cd = New CacheDependency(dataFile)\n\n        &#39; Put DataSet into cache for maximum of 20 minutes.\n        HostingEnvironment.Cache.Add(&quot;VPPData&quot;, ds, cd, _\n         Cache.NoAbsoluteExpiration, _\n         New TimeSpan(0, 20, 0), _\n         CacheItemPriority.Default, Nothing)\n\n        &#39; Set data timestamp.\n        Dim dataTimeStamp As DateTime\n        dataTimeStamp = DateTime.Now\n        &#39; Cache it so we can get the timestamp in later calls.\n        HostingEnvironment.Cache.Add(&quot;dataTimeStamp&quot;, dataTimeStamp, Nothing, _\n          Cache.NoAbsoluteExpiration, _\n          New TimeSpan(0, 20, 0), _\n          CacheItemPriority.Default, Nothing)\n      End If\n      Return ds\n    End Function\n\n    Private Function IsPathVirtual(ByVal virtualPath As String) As Boolean\n      Dim checkPath As String\n      checkPath = VirtualPathUtility.ToAppRelative(virtualPath)\n      Return checkPath.StartsWith(&quot;~/vrdir&quot;, StringComparison.InvariantCultureIgnoreCase)\n    End Function\n\n    Public Overrides Function FileExists(ByVal virtualPath As String) As Boolean\n      If (IsPathVirtual(virtualPath)) Then\n        Dim file As SampleVirtualFile\n        file = CType(GetFile(virtualPath), SampleVirtualFile)\n        Return file.Exists\n      Else\n        Return Previous.FileExists(virtualPath)\n      End If\n    End Function\n\n    Public Overrides Function DirectoryExists(ByVal virtualDir As String) As Boolean\n      If (IsPathVirtual(virtualDir)) Then\n        Dim dir As SampleVirtualDirectory\n        dir = CType(GetDirectory(virtualDir), SampleVirtualDirectory)\n        Return dir.exists\n      Else\n        Return Previous.DirectoryExists(virtualDir)\n      End If\n    End Function\n\n    Public Overrides Function GetFile(ByVal virtualPath As String) As VirtualFile\n      If (IsPathVirtual(virtualPath)) Then\n        Return New SampleVirtualFile(virtualPath, Me)\n      Else\n        Return Previous.GetFile(virtualPath)\n      End If\n    End Function\n\n    Public Overrides Function GetDirectory(ByVal virtualDir As String) As VirtualDirectory\n      If (IsPathVirtual(virtualDir)) Then\n        Return New SampleVirtualDirectory(virtualDir, Me)\n      Else\n        Return Previous.GetDirectory(virtualDir)\n      End If\n    End Function\n\n    Public Overrides Function GetCacheDependency(ByVal virtualPath As String, ByVal virtualPathDependencies As IEnumerable, ByVal utcStart As Date) As CacheDependency\n      If (IsPathVirtual(virtualPath)) Then\n\n        Dim fullPathDependencies As System.Collections.Specialized.StringCollection\n        fullPathDependencies = Nothing\n\n        &#39; Get the full path to all dependencies.\n        For Each virtualDependency As String In virtualPathDependencies\n          If fullPathDependencies Is Nothing Then\n            fullPathDependencies = New System.Collections.Specialized.StringCollection\n          End If\n\n          fullPathDependencies.Add(virtualDependency)\n        Next\n\n        If fullPathDependencies Is Nothing Then\n          Return Nothing\n        End If\n\n        Dim fullPathDependenciesArray As String()\n        fullPathDependencies.CopyTo(fullPathDependenciesArray, 0)\n\n        Return New CacheDependency(fullPathDependenciesArray, utcStart)\n      Else\n        Return Previous.GetCacheDependency(virtualPath, virtualPathDependencies, utcStart)\n      End If\n    End Function\n  End Class\nEnd Namespace\n</code></pre><p> The second example is the XML data file used to populate the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object returned by the custom VirtualPathProvider object. This XML data is used to demonstrate using the VirtualPathProvider, <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a>, and <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> objects to retrieve data from external data and is not intended to represent a production-quality data store.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;  \n  &lt;resource type=&quot;dir&quot;   \n    path=&quot;/vrDir&quot;   \n    parentPath=&quot;&quot;   \n    content=&quot;&quot;&gt;  \n    &lt;resource type=&quot;file&quot;   \n      path=&quot;/vrDir/Level1FileA.vrf&quot;  \n      parentPath=&quot;/vrDir&quot;   \n      content=&quot;This is the content of file Level1FileA.&quot;&gt;  \n    &lt;/resource&gt;  \n    &lt;resource type=&quot;file&quot;   \n      path=&quot;/vrDir/Level1FileB.vrf&quot;  \n      parentPath=&quot;/vrDir&quot;   \n      content=&quot;This is the content of file Level1FileB.&quot;&gt;  \n    &lt;/resource&gt;  \n    &lt;resource type=&quot;dir&quot;   \n      path=&quot;/vrDir/Level2DirA&quot;   \n      parentPath=&quot;/vrDir&quot;   \n      content=&quot;&quot;&gt;  \n    &lt;resource type=&quot;file&quot;   \n      path=&quot;/vrDir/Level2DirA/Level2FileA.vrf&quot;   \n      parentPath=&quot;/vrDir/Level2DirA&quot;   \n      content=&quot;This is the content of file Level2FileA.&quot;&gt;  \n    &lt;/resource&gt;  \n    &lt;resource type=&quot;file&quot;   \n      path=&quot;/vrDir/Level2DirA/Level2FileB.vrf&quot;  \n      parentPath=&quot;/vrDir/Level2DirA&quot;   \n      content=&quot;This is the content of file Level2FileB.&quot;&gt;  \n    &lt;/resource&gt;  \n  &lt;/resource&gt;  \n  &lt;resource type=&quot;dir&quot;   \n    path=&quot;/vrDir/Level2DirB&quot;   \n    parentPath=&quot;/vrDir&quot;   \n    content=&quot;&quot;&gt;  \n    &lt;resource type=&quot;file&quot;   \n      path=&quot;/vrDir/Level2DirB/Level2FileA.vrf&quot;   \n      parentPath=&quot;/vrDir/Level2DirB&quot;   \n      content=&quot;This is the content of file Level2FileA.&quot;&gt;  \n    &lt;/resource&gt;  \n    &lt;resource type=&quot;file&quot;   \n      path=&quot;/vrDir/Level2DirB/Level2FileB.vrf&quot;  \n      parentPath=&quot;/vrDir/Level2DirB&quot;   \n      content=&quot;This is the content of file Level2FileB.&quot;&gt;  \n    &lt;/resource&gt;  \n  &lt;/resource&gt;  \n&lt;/resource&gt;  \n</code></pre><p> The third example provides an <code>AppStart</code> object that contains an <code>AppInitialize</code> method. This method is called during the initialization of an ASP.NET application to perform any custom initialization required. In this case, it registers the custom VirtualPathProvider object with the ASP.NET build system.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Hosting.VirtualPathProvider#10\">Imports Microsoft.VisualBasic\n\nImports System.Web.Hosting\n\nNamespace Samples.AspNet.VB\n\n  Public Class AppStart\n\n    Public Shared Sub AppInitialize()\n      Dim sampleProvider As SamplePathProvider = New SamplePathProvider()\n      HostingEnvironment.RegisterVirtualPathProvider(sampleProvider)\n    End Sub\n\n  End Class\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Hosting.VirtualPathProvider#10\">using System.Web.Hosting;\n\nnamespace Samples.AspNet.CS\n{\n  /// &lt;summary&gt;\n  ///   Contains the application initialization method\n  ///   for the sample application.\n  /// &lt;/summary&gt;\n  public static class AppStart\n  {\n    public static void AppInitialize()\n    {\n      SamplePathProvider sampleProvider = new SamplePathProvider();\n      HostingEnvironment.RegisterVirtualPathProvider(sampleProvider);\n    } \n  }\n}\n</code></pre><p> The last example is an ASP.NET page that contains links to the virtual files contained in the virtual file system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Hosting.VirtualPathProvider#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html&quot; /&gt;\n  &lt;title&gt;Virtual Path Provider Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink1&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level1FileA.vrf&quot; Text=&quot;Level 1, File A&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink2&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level1FileB.vrf&quot; Text=&quot;Level 1, File B&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink3&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirA/Level2FileA.vrf&quot; Text=&quot;Level 2a, File A&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink4&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirA/Level2FileB.vrf&quot; Text=&quot;Level 2a, File B&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink5&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirB/Level2FileA.vrf&quot; Text=&quot;Level 2b, File A&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink6&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirB/Level2FileB.vrf&quot; Text=&quot;Level 2b, File B&quot; /&gt;&lt;br /&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Hosting.VirtualPathProvider#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html&quot; /&gt;\n  &lt;title&gt;Virtual Path Provider Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink1&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level1FileA.vrf&quot; Text=&quot;Level 1, File A&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink2&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level1FileB.vrf&quot; Text=&quot;Level 1, File B&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink3&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirA/Level2FileA.vrf&quot; Text=&quot;Level 2a, File A&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink4&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirA/Level2FileB.vrf&quot; Text=&quot;Level 2a, File B&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink5&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirB/Level2FileA.vrf&quot; Text=&quot;Level 2b, File A&quot; /&gt;&lt;br /&gt;\n    &lt;asp:HyperLink ID=&quot;hyperLink6&quot; runat=&quot;server&quot; NavigateUrl=&quot;vrDir/Level2DirB/Level2FileB.vrf&quot; Text=&quot;Level 2b, File B&quot; /&gt;&lt;br /&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The VirtualPathProvider class provides a set of methods for implementing a virtual file system for a Web application. In a virtual file system, the files and directories are managed by a data store other than the file system provided by the server&#39;s operating system. For example, you can use a virtual file system to store content in a SQL Server database.  </p>\n<p> You can store any file that is processed on request in a virtual file system. This includes:  </p>\n<ul>\n<li><p>ASP.NET pages, master pages, user controls, and other objects.  </p>\n</li>\n<li><p>Standard Web pages with extensions such as .htm and .jpg.  </p>\n</li>\n<li><p>Any custom extension mapped to a <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> instance.  </p>\n</li>\n<li><p>Any named theme in the <code>App_Theme</code> folder.  </p>\n</li>\n</ul>\n<p> You cannot store ASP.NET application folders or files that generate application-level assemblies in a virtual file system. This includes:  </p>\n<ul>\n<li><p>The Global.asax file.  </p>\n</li>\n<li><p>Web.config files.  </p>\n</li>\n<li><p>Site map data files used by the <a class=\"xref\" href=\"system.web.xmlsitemapprovider\" data-linktype=\"relative-path\">XmlSiteMapProvider</a>.  </p>\n</li>\n<li><p>Directories that contain application assemblies or that generate application assemblies: <code>Bin</code>, <code>App_Code</code>, <code>App_GlobalResources</code>, any <code>App_LocalResources</code>.  </p>\n</li>\n<li><p>The application data folder, <code>App_Data</code>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> If a Web site is precompiled for deployment, content provided by a VirtualPathProvider instance is not compiled, and no VirtualPathProvider instances are used by the precompiled site.  </p>\n</div>\n<h3 class=\"accented\" id=\"registering-a-virtualpathprovider\">Registering a VirtualPathProvider</h3>\n<p> A custom VirtualPathProvider instance should be registered with the ASP.NET compilation system by using the <a class=\"xref\" href=\"system.web.hosting.hostingenvironment#System_Web_Hosting_HostingEnvironment_RegisterVirtualPathProvider_\" data-linktype=\"relative-path\">RegisterVirtualPathProvider</a> method before any page parsing or compilation is performed by the Web application.  </p>\n<p> Typically, a VirtualPathProvider instance is registered in an <code>AppInitialize</code> method defined in the <code>App_Code</code> directory, or during the <code>Application_Start</code> event in the <code>Global.asax</code> file. For an example of registering a VirtualPathProvider instance in an <code>AppInitialize</code> method, see the Example section.  </p>\n<p> You can register a VirtualPathProvider instance during other events, but pages compiled and cached before the VirtualPathProvider instance is registered will not be invalidated, even if the new VirtualPathProvider instance would now provide the source for the previously compiled page.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">VirtualPathProvider()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected VirtualPathProvider ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When overriding the VirtualPathProvider constructor, defer any initialization that must occur after the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object is registered to the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider#System_Web_Hosting_VirtualPathProvider_Initialize_\" data-linktype=\"relative-path\">Initialize</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_Previous\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Previous</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a reference to a previously registered <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object in the compilation system.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Web.Hosting.VirtualPathProvider Previous { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The next <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object in the compilation system.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object is registered with the ASP.NET compilation system, it is added to a chain of providers. Use the Previous property to hand processing off to the previous <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object in the chain if the requested path is not provided by this <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> instance.  </p>\n<p> The chain of path providers always ends with the default ASP.NET provider, which serves files from the file system.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_CombineVirtualPaths_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CombineVirtualPaths(String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Combines a base path with a relative path to return a complete path to a virtual resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string CombineVirtualPaths (string basePath, string relativePath);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>basePath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The base path for the application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>relativePath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the virtual resource, relative to the base path.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The complete path to a virtual resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the CombineVirtualPaths method to inspect the contents of a relative path to a virtual resource and perform any modifications required.  </p>\n<p> The default implementation combines the <code>basePath</code> and <code>relativePath</code> parameters according to standard ASP.NET path processing.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_DirectoryExists_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DirectoryExists(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether a directory exists in the virtual file system.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool DirectoryExists (string virtualDir);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualDir</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the virtual directory.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the directory exists in the virtual file system; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Override the DirectoryExists method to indicate to the compilation system that the resource represented by <code>virtualDir</code> exists in the virtual file system provided by this <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> instance.  </p>\n<p> If your custom <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> class does not support directories, the DirectoryExists method should return <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If your virtual file system will contain themes for the Web site (by creating a virtual <code>App_Themes</code> directory), your custom <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> class must support directories.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_FileExists_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FileExists(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether a file exists in the virtual file system.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool FileExists (string virtualPath);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the virtual file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the file exists in the virtual file system; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Override the FileExists method to indicate to the compilation system that the resource represented by <code>virtualPath</code> exists in the virtual file system provided by this <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_GetCacheDependency_System_String_System_Collections_IEnumerable_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCacheDependency(String, IEnumerable, DateTime)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a cache dependency based on the specified virtual paths.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the primary virtual resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPathDependencies</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths to other resources required by the primary virtual resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>utcStart</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The UTC time at which the virtual resources were read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object for the specified virtual resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation of the GetCacheDependency method returns <code>null</code>. To cache virtual resources for later use you must override either the GetCacheDependency method or the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider#System_Web_Hosting_VirtualPathProvider_GetFileHash_\" data-linktype=\"relative-path\">GetFileHash</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_GetCacheKey_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCacheKey(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a cache key to use for the specified virtual path.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string GetCacheKey (string virtualPath);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the virtual resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A cache key for the specified virtual resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the GetCacheKey method to provide a custom cache key for virtual resources. If you do not override the GetCacheKey method, the virtual path is used for the cache key.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_GetDirectory_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDirectory(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a virtual directory from the virtual file system.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualDir</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the virtual directory.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A descendent of the <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> class that represents a directory in the virtual file system.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetDirectory method returns a descendent of the <a class=\"xref\" href=\"system.web.hosting.virtualdirectory\" data-linktype=\"relative-path\">VirtualDirectory</a> class that contains the file and directories contained in the directory specified in the <code>virtualDir</code> parameter.  </p>\n<p> If your custom <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> class does not support directories, the GetDirectory method should return <code>null</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If your virtual file system will contain themes for the Web site (by creating a virtual <code>App_Themes</code> directory), your custom <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> class must support directories.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_GetFile_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetFile(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a virtual file from the virtual file system.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the virtual file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A descendent of the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class that represents a file in the virtual file system.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetFile method returns a descendent of the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class that represents the file specified by the <code>virtualPath</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_GetFileHash_System_String_System_Collections_IEnumerable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetFileHash(String, IEnumerable)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a hash of the specified virtual paths.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the primary virtual resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPathDependencies</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths to other virtual resources required by the primary virtual resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A hash of the specified virtual paths.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the GetFileHash method to provide a hash of the dependencies for a virtual-file-system resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_Initialize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Initialize()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Initialize ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Initialize method is called after the provider is registered with the ASP.NET compilation system. The Initialize method is used to provide any initialization required after the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> instance is placed into the environment the application occupies.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_InitializeLifetimeService\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InitializeLifetimeService()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gives the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object an infinite lifetime by preventing a lease from being created.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object InitializeLifetimeService ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>Always <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides the <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService_\" data-linktype=\"relative-path\">InitializeLifetimeService</a> method in its base class. It always returns <code>null</code> and thereby prevents a lease from being created that would limit the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object&#39;s lifetime.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Hosting_VirtualPathProvider_OpenFile_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenFile(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a stream from a virtual file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.IO.Stream OpenFile (string virtualPath);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>virtualPath</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to the virtual file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A read-only <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object for the specified virtual file or resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OpenFile method is a convenience method that enables you to get a stream from a virtual file without creating a <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Hosting.VirtualPathProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.DirectoryExists\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.FileExists\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.GetCacheDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.GetCacheKey\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.GetDirectory\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.GetFile\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.GetFileHash\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.OpenFile\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualPathProvider.Previous\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"b03320c7-271a-8d30-cbdb-cb4d19181893\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.hosting/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Hosting.VirtualPathProvider\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.Hosting.VirtualPathProvider.yml","open_to_public_contributors":false,"api_name":["System.Web.Hosting.VirtualPathProvider","System.Web.Hosting.VirtualPathProvider..ctor","System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths","System.Web.Hosting.VirtualPathProvider.DirectoryExists","System.Web.Hosting.VirtualPathProvider.FileExists","System.Web.Hosting.VirtualPathProvider.GetCacheDependency","System.Web.Hosting.VirtualPathProvider.GetCacheKey","System.Web.Hosting.VirtualPathProvider.GetDirectory","System.Web.Hosting.VirtualPathProvider.GetFile","System.Web.Hosting.VirtualPathProvider.GetFileHash","System.Web.Hosting.VirtualPathProvider.Initialize","System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService","System.Web.Hosting.VirtualPathProvider.OpenFile","System.Web.Hosting.VirtualPathProvider.Previous"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Hosting.VirtualPathProvider","System::Web::Hosting::VirtualPathProvider","System.Web.Hosting.VirtualPathProvider.#ctor","System::Web::Hosting::VirtualPathProvider::#ctor","System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths","System::Web::Hosting::VirtualPathProvider::CombineVirtualPaths","System.Web.Hosting.VirtualPathProvider.DirectoryExists","System::Web::Hosting::VirtualPathProvider::DirectoryExists","System.Web.Hosting.VirtualPathProvider.FileExists","System::Web::Hosting::VirtualPathProvider::FileExists","System.Web.Hosting.VirtualPathProvider.GetCacheDependency","System::Web::Hosting::VirtualPathProvider::GetCacheDependency","System.Web.Hosting.VirtualPathProvider.GetCacheKey","System::Web::Hosting::VirtualPathProvider::GetCacheKey","System.Web.Hosting.VirtualPathProvider.GetDirectory","System::Web::Hosting::VirtualPathProvider::GetDirectory","System.Web.Hosting.VirtualPathProvider.GetFile","System::Web::Hosting::VirtualPathProvider::GetFile","System.Web.Hosting.VirtualPathProvider.GetFileHash","System::Web::Hosting::VirtualPathProvider::GetFileHash","System.Web.Hosting.VirtualPathProvider.Initialize","System::Web::Hosting::VirtualPathProvider::Initialize","System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService","System::Web::Hosting::VirtualPathProvider::InitializeLifetimeService","System.Web.Hosting.VirtualPathProvider.OpenFile","System::Web::Hosting::VirtualPathProvider::OpenFile","System.Web.Hosting.VirtualPathProvider.Previous","System::Web::Hosting::VirtualPathProvider::Previous"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"b03320c7-271a-8d30-cbdb-cb4d19181893","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"VirtualPathProvider class | Microsoft Docs","_op_ogTitle":"VirtualPathProvider class","description":"Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.\n","toc_asset_id":"api/_splitted/System.Web.Hosting/toc.json","toc_rel":"_splitted/System.Web.Hosting/toc.json","source_url":"","ms.assetid":"System.Web.Hosting.VirtualPathProvider","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.hosting.virtualpathprovider","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.hosting.virtualpathprovider","fileRelativePath":"api/System.Web.Hosting.VirtualPathProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}