{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IResourceService</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface for designers to access resource readers and writers for specific <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> resource types.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IResourceService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates a designer that uses the IResourceService to read from and write to resource files in order to configure a property of an associated control.  </p>\n<pre><code class=\"lang-vb\" name=\"IResourceServiceExample#1\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Globalization\nImports System.Resources\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\nNamespace IResourceServiceExample\n\n    &#39; Associates the ResourceTestControlDesigner with the \n    &#39; ResourceTestControl class.\n    &lt;Designer(GetType(ResourceTestControlDesigner))&gt; _\n    Public Class ResourceTestControl\n        Inherits System.Windows.Forms.UserControl\n        &#39; Initializes a string array used to store strings that this control displays.\n        Public resource_strings() As String = {&quot;Initial Default String #1&quot;, &quot;Initial Default String #2&quot;}\n\n        Public Sub New()\n            Me.BackColor = Color.White\n            Me.Size = New Size(408, 160)\n        End Sub\n\n        &#39; Draws the strings contained in the string array.\n        Protected Overrides Sub OnPaint(ByVal e As System.Windows.Forms.PaintEventArgs)\n            e.Graphics.DrawString(&quot;IResourceService Example Designer Control&quot;, New Font(FontFamily.GenericMonospace, 10), New SolidBrush(Color.Blue), 2, 2)\n            e.Graphics.DrawString(&quot;String list:  (use shortcut menu in design mode)&quot;, New Font(FontFamily.GenericMonospace, 8), New SolidBrush(Color.Black), 2, 20)\n\n            Dim i As Integer\n            For i = 0 To resource_strings.Length - 1\n                e.Graphics.DrawString(resource_strings(i), New Font(FontFamily.GenericMonospace, 8), New SolidBrush(Color.SeaGreen), 2, 38 + (i * 18))\n            Next i\n        End Sub\n    End Class\n    _\n\n    &#39; This designer offers several menu commands for the \n    &#39; shortcut menu for the associated control.\n    &#39; These commands can be used to reset the control&#39;s string \n    &#39; list, to generate a default resources file, or to load the string \n    &#39; list for the control from the default resources file.\n    Public Class ResourceTestControlDesigner\n        Inherits System.Windows.Forms.Design.ControlDesigner\n\n        Public Sub New()\n        End Sub \n\n        Public Overrides ReadOnly Property Verbs() As System.ComponentModel.Design.DesignerVerbCollection\n            Get\n                &#39; Creates a collection of designer verb menu commands \n                &#39; that link to event handlers in this designer.            \n                Return New DesignerVerbCollection(New DesignerVerb() { _\n                    New DesignerVerb(&quot;Load Strings From Default Resources File&quot;, AddressOf Me.LoadResources), _\n                    New DesignerVerb(&quot;Create Default Resources File&quot;, AddressOf Me.CreateResources), _\n                    New DesignerVerb(&quot;Clear ResourceTestControl String List&quot;, AddressOf Me.ClearStrings)})\n            End Get\n        End Property\n\n        &#39; Sets the string list for the control to the strings \n        &#39; loaded from a resource file.\n        Private Sub LoadResources(ByVal sender As Object, ByVal e As EventArgs)\n            Dim rs As IResourceService = CType(Me.Component.Site.GetService(GetType(IResourceService)), IResourceService)\n            If rs Is Nothing Then\n                Throw New Exception(&quot;Could not obtain IResourceService.&quot;)\n            End If\n            Dim rr As IResourceReader = rs.GetResourceReader(CultureInfo.CurrentUICulture)\n            If rr Is Nothing Then\n                Throw New Exception(&quot;Resource file could not be obtained. You may need to create one first.&quot;)\n            End If\n            Dim de As IDictionaryEnumerator = rr.GetEnumerator()\n\n            If Me.Control.GetType() Is GetType(ResourceTestControl) Then\n                Dim rtc As ResourceTestControl = CType(Me.Control, ResourceTestControl)\n                Dim s1, s2, s3 As String\n                de.MoveNext()\n                s1 = CStr(CType(de.Current, DictionaryEntry).Value)\n                de.MoveNext()\n                s2 = CStr(CType(de.Current, DictionaryEntry).Value)\n                de.MoveNext()\n                s3 = CStr(CType(de.Current, DictionaryEntry).Value)\n                de.MoveNext()\n                rtc.resource_strings = New String() {s1, s2, s3}\n                Me.Control.Refresh()\n            End If\n        End Sub\n\n        &#39; Creates a default resource file for the current \n        &#39; CultureInfo and adds 3 strings to it.\n        Private Sub CreateResources(ByVal sender As Object, ByVal e As EventArgs)\n            Dim rs As IResourceService = CType(Me.Component.Site.GetService(GetType(IResourceService)), IResourceService)\n            If rs Is Nothing Then\n                Throw New Exception(&quot;Could not obtain IResourceService.&quot;)\n            End If\n            Dim rw As IResourceWriter = rs.GetResourceWriter(CultureInfo.CurrentUICulture)\n            rw.AddResource(&quot;string1&quot;, &quot;Persisted resource string #1&quot;)\n            rw.AddResource(&quot;string2&quot;, &quot;Persisted resource string #2&quot;)\n            rw.AddResource(&quot;string3&quot;, &quot;Persisted resource string #3&quot;)\n            rw.Generate()\n            rw.Close()\n        End Sub   \n\n        &#39; Clears the string list of the associated ResourceTestControl.\n        Private Sub ClearStrings(ByVal sender As Object, ByVal e As EventArgs)\n            If Me.Control.GetType() Is GetType(ResourceTestControl) Then\n                Dim rtc As ResourceTestControl = CType(Me.Control, ResourceTestControl)\n                rtc.resource_strings = New String() {&quot;Test String #1&quot;, &quot;Test String #2&quot;}\n                Me.Control.Refresh()\n            End If\n        End Sub \n    End Class \nEnd Namespace \n</code></pre><pre><code class=\"lang-cs\" name=\"IResourceServiceExample#1\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Globalization;\nusing System.Resources;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\nnamespace IResourceServiceExample\n{\n    // Associates the ResourceTestControlDesigner with the \n    // ResourceTestControl class.\n    [Designer(typeof(ResourceTestControlDesigner))]\n    public class ResourceTestControl : System.Windows.Forms.UserControl\n    {\n        // Initializes a string array used to store strings that \n        // this control displays.\n        public string[] resource_strings = new string[] { &quot;Initial Default String #1&quot;, &quot;Initial Default String #2&quot; };\n\n        public ResourceTestControl()\n        {\n            this.BackColor = Color.White;\n            this.Size = new Size(408, 160);\n        }\n\n        // Draws the strings contained in the string array.\n        protected override void OnPaint(System.Windows.Forms.PaintEventArgs e)\n        {\n            e.Graphics.DrawString(&quot;IResourceService Example Designer Control&quot;, new Font(FontFamily.GenericMonospace, 10), new SolidBrush(Color.Blue), 2, 2);\n            e.Graphics.DrawString(&quot;String list:  (use shortcut menu in design mode)&quot;, new Font(FontFamily.GenericMonospace, 8), new SolidBrush(Color.Black), 2, 20);\n            \n            for(int i=0; i&lt;resource_strings.Length; i++)\n            {\n                e.Graphics.DrawString(resource_strings[i], new Font(FontFamily.GenericMonospace, 8), new SolidBrush(Color.SeaGreen), 2, 38+(i*18));\n            }\n        }\n    }\n\n    // This designer offers several menu commands for the \n    // shortcut menu for the associated control.\n    // These commands can be used to reset the control&#39;s string \n    // list, to generate a default resources file, or to load the string \n    // list for the control from the default resources file.\n    public class ResourceTestControlDesigner : System.Windows.Forms.Design.ControlDesigner\n    {\n        public ResourceTestControlDesigner()\n        {}\n\n        public override System.ComponentModel.Design.DesignerVerbCollection Verbs\n        {\n            get\n            {\n                // Creates a collection of designer verb menu commands \n                // that link to event handlers in this designer.\n                return new DesignerVerbCollection( new DesignerVerb[] { \n                    new DesignerVerb(&quot;Load Strings from Default Resources File&quot;, new EventHandler(this.LoadResources)),\n                    new DesignerVerb(&quot;Create Default Resources File&quot;, new EventHandler(this.CreateResources)),\n                    new DesignerVerb(&quot;Clear ResourceTestControl String List&quot;, new EventHandler(this.ClearStrings)) });\n            }\n        }\n\n        // Sets the string list for the control to the strings \n        // loaded from a resource file.\n        private void LoadResources(object sender, EventArgs e)\n        {\n            IResourceService rs = (IResourceService)this.Component.Site.GetService(typeof(IResourceService));\n            if( rs == null )\n                throw new Exception(&quot;Could not obtain IResourceService.&quot;);\n\n            IResourceReader rr = rs.GetResourceReader(CultureInfo.CurrentUICulture);\n            if( rr == null )\n                throw new Exception(&quot;Resource file could not be obtained. You may need to create one first.&quot;);\n\n            IDictionaryEnumerator de = rr.GetEnumerator();\n            \n            if(this.Control.GetType() == typeof(ResourceTestControl))\n            {\n                ResourceTestControl rtc = (ResourceTestControl)this.Control;\n                string s1, s2, s3;\t\t\n                de.MoveNext();\t\t\n                s1 = (string)((DictionaryEntry)de.Current).Value;\n                de.MoveNext();\n                s2 = (string)((DictionaryEntry)de.Current).Value;\n                de.MoveNext();\n                s3 = (string)((DictionaryEntry)de.Current).Value;\n                de.MoveNext();\n                rtc.resource_strings = new string[] {s1, s2, s3};\n                this.Control.Refresh();\n            }\n            \n        }\n\n        // Creates a default resource file for the current \n        // CultureInfo and adds 3 strings to it.\n        private void CreateResources(object sender, EventArgs e)\n        {\n            IResourceService rs = (IResourceService)this.Component.Site.GetService(typeof(IResourceService));\n            if( rs == null )\n                throw new Exception(&quot;Could not obtain IResourceService.&quot;);\n\n            IResourceWriter rw = rs.GetResourceWriter(CultureInfo.CurrentUICulture);\n            rw.AddResource(&quot;string1&quot;, &quot;Persisted resource string #1&quot;);\n            rw.AddResource(&quot;string2&quot;, &quot;Persisted resource string #2&quot;);\n            rw.AddResource(&quot;string3&quot;, &quot;Persisted resource string #3&quot;);\n            rw.Generate();\n            rw.Close();\n        }\n\n        // Clears the string list of the associated ResourceTestControl.\n        private void ClearStrings(object sender, EventArgs e)\n        {\n            if(this.Control.GetType() == typeof(ResourceTestControl))\n            {\n                ResourceTestControl rtc = (ResourceTestControl)this.Control;\n                rtc.resource_strings = new string[] { &quot;Test String #1&quot;, &quot;Test String #2&quot; };\n                this.Control.Refresh();\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"IResourceServiceExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Design.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Globalization;\nusing namespace System::Resources;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\nref class ResourceTestControlDesigner;\n\n// Associates the ResourceTestControlDesigner with the\n// ResourceTestControl class.\n\n[Designer(ResourceTestControlDesigner::typeid)]\npublic ref class ResourceTestControl: public System::Windows::Forms::UserControl\n{\npublic:\n\n   // Initializes a string array used to store strings that\n   // this control displays.\n   array&lt;String^&gt;^resource_strings;\n   ResourceTestControl()\n   {\n      array&lt;String^&gt;^temp = {&quot;Initial Default String #1&quot;,&quot;Initial Default String #2&quot;};\n      resource_strings = temp;\n      this-&gt;BackColor = Color::White;\n      this-&gt;Size = System::Drawing::Size( 408, 160 );\n   }\n\nprotected:\n\n   // Draws the strings contained in the string array.\n   virtual void OnPaint( System::Windows::Forms::PaintEventArgs^ e ) override\n   {\n      e-&gt;Graphics-&gt;DrawString( &quot;IResourceService Example Designer Control&quot;, gcnew System::Drawing::Font( FontFamily::GenericMonospace,10 ), gcnew SolidBrush( Color::Blue ), 2, 2 );\n      e-&gt;Graphics-&gt;DrawString( &quot;String list:  (use shortcut menu in design mode)&quot;, gcnew System::Drawing::Font( FontFamily::GenericMonospace,8 ), gcnew SolidBrush( Color::Black ), 2, 20 );\n      for ( int i = 0; i &lt; resource_strings-&gt;Length; i++ )\n      {\n         e-&gt;Graphics-&gt;DrawString( resource_strings[ i ], gcnew System::Drawing::Font( FontFamily::GenericMonospace,8 ), gcnew SolidBrush( Color::SeaGreen ), 2.f, 38.f + (i * 18) );\n\n      }\n   }\n\n};\n\n// This designer offers several menu commands for the\n// shortcut menu for the associated control.\n// These commands can be used to reset the control&#39;s string\n// list, to generate a default resources file, or to load the string\n// list for the control from the default resources file.\npublic ref class ResourceTestControlDesigner: public System::Windows::Forms::Design::ControlDesigner\n{\npublic:\n   ResourceTestControlDesigner(){}\n\n   property System::ComponentModel::Design::DesignerVerbCollection^ Verbs \n   {\n      virtual System::ComponentModel::Design::DesignerVerbCollection^ get() override\n      {\n         // Creates a collection of designer verb menu commands\n         // that link to event handlers in this designer.\n         array&lt;DesignerVerb^&gt;^temp0 = {gcnew DesignerVerb( &quot;Load Strings from Default Resources File&quot;,gcnew EventHandler( this, &amp;ResourceTestControlDesigner::LoadResources ) ),gcnew DesignerVerb( &quot;Create Default Resources File&quot;,gcnew EventHandler( this, &amp;ResourceTestControlDesigner::CreateResources ) ),gcnew DesignerVerb( &quot;Clear ResourceTestControl String List&quot;,gcnew EventHandler( this, &amp;ResourceTestControlDesigner::ClearStrings ) )};\n         return gcnew DesignerVerbCollection( temp0 );\n      }\n   }\n\nprivate:\n\n   // Sets the string list for the control to the strings\n   // loaded from a resource file.\n   void LoadResources( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      IResourceService^ rs = dynamic_cast&lt;IResourceService^&gt;(this-&gt;Component-&gt;Site-&gt;GetService( IResourceService::typeid ));\n      if ( rs == nullptr )\n            throw gcnew System::Exception( &quot;Could not obtain IResourceService.&quot; );\n\n      IResourceReader^ rr = rs-&gt;GetResourceReader( CultureInfo::CurrentUICulture );\n      if ( rr == nullptr )\n            throw gcnew System::Exception( &quot;Resource file could not be obtained. You may need to create one first.&quot; );\n\n      IDictionaryEnumerator^ de = rr-&gt;GetEnumerator();\n      if ( this-&gt;Control-&gt;GetType() == ResourceTestControl::typeid )\n      {\n         ResourceTestControl^ rtc = dynamic_cast&lt;ResourceTestControl^&gt;(this-&gt;Control);\n         String^ s1;\n         String^ s2;\n         String^ s3;\n         de-&gt;MoveNext();\n         s1 = dynamic_cast&lt;String^&gt;(( *dynamic_cast&lt;DictionaryEntry^&gt;(de-&gt;Current)).Value);\n         de-&gt;MoveNext();\n         s2 = dynamic_cast&lt;String^&gt;(( *dynamic_cast&lt;DictionaryEntry^&gt;(de-&gt;Current)).Value);\n         de-&gt;MoveNext();\n         s3 = dynamic_cast&lt;String^&gt;(( *dynamic_cast&lt;DictionaryEntry^&gt;(de-&gt;Current)).Value);\n         de-&gt;MoveNext();\n         array&lt;String^&gt;^temp = {s1,s2,s3};\n         rtc-&gt;resource_strings = temp;\n         this-&gt;Control-&gt;Refresh();\n      }\n   }\n\n   // Creates a default resource file for the current\n   // CultureInfo and adds 3 strings to it.\n   void CreateResources( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      IResourceService^ rs = dynamic_cast&lt;IResourceService^&gt;(this-&gt;Component-&gt;Site-&gt;GetService( IResourceService::typeid ));\n      if ( rs == nullptr )\n            throw gcnew System::Exception( &quot;Could not obtain IResourceService.&quot; );\n\n      IResourceWriter^ rw = rs-&gt;GetResourceWriter( CultureInfo::CurrentUICulture );\n      rw-&gt;AddResource( &quot;string1&quot;, &quot;Persisted resource string #1&quot; );\n      rw-&gt;AddResource( &quot;string2&quot;, &quot;Persisted resource string #2&quot; );\n      rw-&gt;AddResource( &quot;string3&quot;, &quot;Persisted resource string #3&quot; );\n      rw-&gt;Generate();\n      rw-&gt;Close();\n   }\n\n   // Clears the string list of the associated ResourceTestControl.\n   void ClearStrings( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      if ( this-&gt;Control-&gt;GetType() == ResourceTestControl::typeid )\n      {\n         ResourceTestControl^ rtc = dynamic_cast&lt;ResourceTestControl^&gt;(this-&gt;Control);\n         array&lt;String^&gt;^temp = {&quot;Test String #1&quot;,&quot;Test String #2&quot;};\n         rtc-&gt;resource_strings = temp;\n         this-&gt;Control-&gt;Refresh();\n      }\n   }\n};\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A resource writer or resource reader can be used to serialize or deserialze objects or data according to the specified <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> resource settings.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IResourceService_GetResourceReader_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IResourceService_GetResourceReader_System_Globalization_CultureInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResourceReader(CultureInfo)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Locates the resource reader for the specified culture and returns it.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Resources.IResourceReader GetResourceReader (System.Globalization.CultureInfo info);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> of the resource for which to retrieve a resource reader.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.iresourcereader\" data-linktype=\"relative-path\">IResourceReader</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.resources.iresourcereader\" data-linktype=\"relative-path\">IResourceReader</a> interface that contains the resources for the culture, or <code>null</code> if no resources for the culture exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If no resources are associated with the designer for the specified culture, this method returns <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ComponentModel_Design_IResourceService_GetResourceWriter_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IResourceService_GetResourceWriter_System_Globalization_CultureInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResourceWriter(CultureInfo)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Locates the resource writer for the specified culture and returns it.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Resources.IResourceWriter GetResourceWriter (System.Globalization.CultureInfo info);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> of the resource for which to create a resource writer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.iresourcewriter\" data-linktype=\"relative-path\">IResourceWriter</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.resources.iresourcewriter\" data-linktype=\"relative-path\">IResourceWriter</a> interface for the specified culture.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method creates a new resource for the specified culture and destroys an existing resource, if one already exists.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IResourceService.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IResourceService\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IResourceService.GetResourceReader\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IResourceService.GetResourceWriter\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"96db56d5-e5d9-f0d8-0534-74e01075dc25\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface for designers to access resource readers and writers for specific  resource types.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.IResourceService\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IResourceService.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.IResourceService","System.ComponentModel.Design.IResourceService.GetResourceReader","System.ComponentModel.Design.IResourceService.GetResourceWriter"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.IResourceService","System::ComponentModel::Design::IResourceService","System.ComponentModel.Design.IResourceService.GetResourceReader","System::ComponentModel::Design::IResourceService::GetResourceReader","System.ComponentModel.Design.IResourceService.GetResourceWriter","System::ComponentModel::Design::IResourceService::GetResourceWriter"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"96db56d5-e5d9-f0d8-0534-74e01075dc25","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/IResourceService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IResourceService interface | Microsoft Docs","_op_ogTitle":"IResourceService interface","description":"Provides an interface for designers to access resource readers and writers for specific  resource types.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.IResourceService","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.iresourceservice","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.iresourceservice","fileRelativePath":"api/System.ComponentModel.Design.IResourceService.html"},"themesRelativePathToOutputRoot":"_themes/"}