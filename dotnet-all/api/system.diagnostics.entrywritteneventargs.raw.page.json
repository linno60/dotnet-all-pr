{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EntryWrittenEventArgs</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides data for the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EntryWritten\" data-linktype=\"relative-path\">EntryWritten</a> event.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class EntryWrittenEventArgs : EventArgs</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a></span></div><span class=\"lang-csharp\">EntryWrittenEventArgs</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates the <a class=\"xref\" href=\"system.diagnostics.entrywritteneventargs#System_Diagnostics_EntryWrittenEventArgs__ctor_\" data-linktype=\"relative-path\">EntryWrittenEventArgs</a> constructor. It creates a custom <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> object and writes an entry into it. Then it creates an EntryWrittenEventArgs object using the first entry in the custom <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>. This object is used to notify a message.  </p>\n<pre><code class=\"lang-vb\" name=\"EntryWrittenEventArgs_ctor1#1\">Imports System\nImports System.Diagnostics\n\nClass MySample\n   Public Shared Sub Main()\n      Try\n         Dim myNewLog As New EventLog()\n         myNewLog.Log = &quot;MyNewLog&quot;\n         myNewLog.Source = &quot;MySource&quot;\n         &#39; Create the source if it does not exist already.\n         If Not EventLog.SourceExists(&quot;MySource&quot;) Then\n            EventLog.CreateEventSource(&quot;MySource&quot;, &quot;MyNewLog&quot;)\n            Console.WriteLine(&quot;CreatingEventSource&quot;)\n         End If\n         &#39; Write an entry to the EventLog.\n         myNewLog.WriteEntry(&quot;The Latest entry in the Event Log&quot;)\n         Dim myEntryEventArgs As EntryWrittenEventArgs = _\n                                    New EntryWrittenEventArgs()\n         MyOnEntry(myNewLog, myEntryEventArgs)\n      Catch e As Exception\n         Console.WriteLine(&quot;Exception Raised&quot; + e.Message)\n      End Try\n   End Sub &#39;Main\n   Protected Shared Sub MyOnEntry(ByVal source As Object, _\n                                  ByVal e As EntryWrittenEventArgs)\n      If e.Entry Is Nothing Then\n          Console.WriteLine(&quot;A new entry is written in MyNewLog.&quot;)\n      End If\n   End Sub &#39;MyOnEntry\nEnd Class &#39;MySample\n</code></pre><pre><code class=\"lang-cs\" name=\"EntryWrittenEventArgs_ctor1#1\">using System;\nusing System.Diagnostics;\n\nclass MySample\n{\n    public static void Main()\n    {\n        try\n        {\n            EventLog myNewLog = new EventLog();\n            myNewLog.Log = &quot;MyNewLog&quot;;\n            myNewLog.Source = &quot;MySource&quot;;\n            // Create the source if it does not exist already.\n            if (!EventLog.SourceExists(&quot;MySource&quot;))\n            {\n                // An event log source should not be created and immediately used.\n                // There is a latency time to enable the source, it should be created\n                // prior to executing the application that uses the source.\n                // Execute this sample a second time to use the new source.\n                EventLog.CreateEventSource(&quot;MySource&quot;, &quot;MyNewLog&quot;);\n                Console.WriteLine(&quot;CreatingEventSource&quot;);\n                Console.WriteLine(&quot;Exiting, execute the application a second time to use the source.&quot;);\n                // The source is created.  Exit the application to allow it to be registered.\n                return;\n            }\n            // Write an entry to the EventLog.\n            myNewLog.WriteEntry(&quot;The Latest entry in the Event Log&quot;);\n            int myEntries = myNewLog.Entries.Count;\n            EventLogEntry entry = myNewLog.Entries[myEntries - 1];\n            EntryWrittenEventArgs myEntryEventArgs =\n                                 new EntryWrittenEventArgs();\n            MyOnEntry(myNewLog, myEntryEventArgs);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;Exception Raised&quot; + e.Message);\n        }\n    }\n    protected static void MyOnEntry(Object source, EntryWrittenEventArgs e)\n    {\n        if (e.Entry == null)\n            Console.WriteLine(&quot;A new entry is written in MyNewLog.&quot;);\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"EntryWrittenEventArgs_ctor1#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nvoid MyOnEntry( Object^ source, EntryWrittenEventArgs^ e )\n{\n   if ( !e-&gt;Entry )\n      Console::WriteLine( &quot;A new entry is written in MyNewLog.&quot; );\n}\n\nint main()\n{\n   try\n   {\n      EventLog^ myNewLog = gcnew EventLog;\n      myNewLog-&gt;Log = &quot;MyNewLog&quot;;\n      myNewLog-&gt;Source = &quot;MySource&quot;;\n      \n      // Create the source if it does not exist already.\n      if (  !EventLog::SourceExists( &quot;MySource&quot; ) )\n      {\n         EventLog::CreateEventSource( &quot;MySource&quot;, &quot;MyNewLog&quot; );\n         Console::WriteLine( &quot;CreatingEventSource&quot; );\n      }\n      \n      // Write an entry to the EventLog.\n      myNewLog-&gt;WriteEntry( &quot;The Latest entry in the Event Log&quot; );\n      int myEntries = myNewLog-&gt;Entries-&gt;Count;\n      EventLogEntry^ entry = myNewLog-&gt;Entries[ myEntries - 1 ];\n      EntryWrittenEventArgs^ myEntryEventArgs = gcnew EntryWrittenEventArgs;\n      MyOnEntry( myNewLog, myEntryEventArgs );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;Exception Raised{0}&quot;, e-&gt;Message );\n   }\n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EntryWrittenEventArgs__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EntryWrittenEventArgs()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.entrywritteneventargs\" data-linktype=\"relative-path\">EntryWrittenEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EntryWrittenEventArgs ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EntryWrittenEventArgs__ctor_System_Diagnostics_EventLogEntry_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EntryWrittenEventArgs(EventLogEntry)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.entrywritteneventargs\" data-linktype=\"relative-path\">EntryWrittenEventArgs</a> class with the specified event log entry.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EntryWrittenEventArgs (System.Diagnostics.EventLogEntry entry);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>entry</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> that represents the entry that was written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EntryWrittenEventArgs_Entry\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Entry</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the event log entry that was written to the log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Diagnostics.EventLogEntry Entry { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> that represents the entry that was written to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.EntryWrittenEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EntryWrittenEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EntryWrittenEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EntryWrittenEventArgs.Entry\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"e9b4c380-d35a-3029-8bcf-182c133f8453\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.diagnostics/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.EntryWrittenEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.EntryWrittenEventArgs.yml","open_to_public_contributors":false,"api_name":["System.Diagnostics.EntryWrittenEventArgs","System.Diagnostics.EntryWrittenEventArgs..ctor","System.Diagnostics.EntryWrittenEventArgs.Entry"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.EntryWrittenEventArgs","System::Diagnostics::EntryWrittenEventArgs","System.Diagnostics.EntryWrittenEventArgs.#ctor","System::Diagnostics::EntryWrittenEventArgs::#ctor","System.Diagnostics.EntryWrittenEventArgs.Entry","System::Diagnostics::EntryWrittenEventArgs::Entry"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"e9b4c380-d35a-3029-8bcf-182c133f8453","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EntryWrittenEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EntryWrittenEventArgs class | Microsoft Docs","_op_ogTitle":"EntryWrittenEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"api/_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.EntryWrittenEventArgs","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.entrywritteneventargs","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.entrywritteneventargs","fileRelativePath":"api/System.Diagnostics.EntryWrittenEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}