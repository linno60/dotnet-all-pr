{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">FileShare</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Contains constants for controlling the kind of access other <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> objects can have to the same file.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic enum FileShare</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div><span class=\"lang-csharp\">FileShare</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> constructor opens an existing file and grants read-only access to other users (Read).  </p>\n<pre><code class=\"lang-vb\" name=\"Classic FileAccess Example#1\"> Dim s2 As New FileStream(name, FileMode.Open, FileAccess.Read, FileShare.Read)\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileAccess Example#1\">FileStream^ s2 = gcnew FileStream( name, FileMode::Open, FileAccess::Read, FileShare::Read );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileAccess Example#1\">FileStream s2 = new FileStream(name, FileMode.Open, FileAccess.Read, FileShare.Read);\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>For an example of creating a file and writing text to a file, see <a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a>. For an example of reading text from a file, see <a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a>. For an example of reading from and writing to a binary file, see <a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a>.  </p>\n<p> A typical use of this enumeration is to define whether two processes can simultaneously read from the same file. For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.  </p>\n<p> A FileShare parameter is specified in some of the constructors for <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>, <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a>, and in some of the <code>Open</code> methods of <a class=\"xref\" href=\"system.io.file\" data-linktype=\"relative-path\">File</a> and <a class=\"xref\" href=\"system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> to control how a file is opened.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_IO_FileShare_Delete\">\r\n      \t\t\t<span class=\"lang-csharp\">Delete</span>\r\n      \t</td>\r\n      \t<td><p>Allows subsequent deleting of a file.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_IO_FileShare_Inheritable\">\r\n      \t\t\t<span class=\"lang-csharp\">Inheritable</span>\r\n      \t</td>\r\n      \t<td><p>Makes the file handle inheritable by child processes. This is not directly supported by Win32.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_IO_FileShare_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>Declines sharing of the current file. Any request to open the file (by this process or another process) will fail until the file is closed.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_IO_FileShare_Read\">\r\n      \t\t\t<span class=\"lang-csharp\">Read</span>\r\n      \t</td>\r\n      \t<td><p>Allows subsequent opening of the file for reading. If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_IO_FileShare_ReadWrite\">\r\n      \t\t\t<span class=\"lang-csharp\">ReadWrite</span>\r\n      \t</td>\r\n      \t<td><p>Allows subsequent opening of the file for reading or writing. If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_IO_FileShare_Write\">\r\n      \t\t\t<span class=\"lang-csharp\">Write</span>\r\n      \t</td>\r\n      \t<td><p>Allows subsequent opening of the file for writing. If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.FileShare.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.FileShare\">\r\n<meta name=\"APIName\" content=\"System.IO.FileShare.Delete\">\r\n<meta name=\"APIName\" content=\"System.IO.FileShare.Inheritable\">\r\n<meta name=\"APIName\" content=\"System.IO.FileShare.None\">\r\n<meta name=\"APIName\" content=\"System.IO.FileShare.Read\">\r\n<meta name=\"APIName\" content=\"System.IO.FileShare.ReadWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.FileShare.Write\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"97b51ef9-c8bc-df8b-5b33-ee6dd5efbc10\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains constants for controlling the kind of access other  objects can have to the same file.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.io/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.FileShare\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.FileShare.yml","open_to_public_contributors":false,"api_name":["System.IO.FileShare","System.IO.FileShare.Delete","System.IO.FileShare.Inheritable","System.IO.FileShare.None","System.IO.FileShare.Read","System.IO.FileShare.ReadWrite","System.IO.FileShare.Write"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.FileShare","System::IO::FileShare","System.IO.FileShare.Delete","System::IO::FileShare::Delete","System.IO.FileShare.Inheritable","System::IO::FileShare::Inheritable","System.IO.FileShare.None","System::IO::FileShare::None","System.IO.FileShare.Read","System::IO::FileShare::Read","System.IO.FileShare.ReadWrite","System::IO::FileShare::ReadWrite","System.IO.FileShare.Write","System::IO::FileShare::Write"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"97b51ef9-c8bc-df8b-5b33-ee6dd5efbc10","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FileShare enum | Microsoft Docs","_op_ogTitle":"FileShare enum","description":"Contains constants for controlling the kind of access other  objects can have to the same file.\n","toc_asset_id":"api/_splitted/System.IO/toc.json","toc_rel":"_splitted/System.IO/toc.json","source_url":"","ms.assetid":"System.IO.FileShare","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.io.fileshare","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.io.fileshare","fileRelativePath":"api/System.IO.FileShare.html"},"themesRelativePathToOutputRoot":"_themes/"}