{"content":"\r\n  \r\n  \t<a id=\"System_Fabric_IStateReplicator_ReplicateAsync_System_Fabric_OperationData_System_Threading_CancellationToken_System_Int64__\"></a>\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IStateReplicator.ReplicateAsync</span>\r\n      Method\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \t\t<dl class=\"attributeList\">\r\n  \t\t\t<dt>Namespace:</dt>\t\r\n  \t\t\t\t<dd>\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.fabric\" data-linktype=\"relative-path\">System.Fabric</a></span>\r\n  \t\t\t\t</dd>\r\n  \t\t</dl>\r\n  \r\n  \t\t<dl class=\"attributeList\">\r\n  \t\t\t<dt>Assembly:</dt><dd>System.Fabric.dll</dd>\r\n  \t\t</dl>\r\n  \r\n  </div>\r\n  \r\n  \r\n  <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \r\n  \t\r\n  \t<div data-moniker=\" servicefabric-5.5.216\">\r\n  \t\t<div class=\"summaryHolder\">\r\n  \t\t\t<div class=\"summary\">\r\n  \t\t\t\t<p>Replicates state changes from Primary replica to the Secondary replicas and receives a quorum acknowledgement that those state changes have been applied.</p>\r\n  \t\t\t</div>\r\n  \t\t</div>\r\n  \t\r\n  \t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;long&gt; ReplicateAsync (System.Fabric.OperationData operationData, System.Threading.CancellationToken cancellationToken, out long sequenceNumber);</code></pre>\r\n  \t\r\n  \t\r\n  \t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t<dt>operationData</dt>\r\n  \t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.fabric.operationdata\" data-linktype=\"relative-path\">OperationData</a></span>\r\n  \t\t\t\t\t</dd>\r\n  \t\t\t\t</dl>\r\n  \t\t\t\t<p>The <a class=\"xref\" href=\"system.fabric.operationdata\" data-linktype=\"relative-path\">OperationData</a> that represents the state change that the Primary replica wants to replicate.</p>\r\n  \t\t\t\t</div>\r\n  \t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t<dt>cancellationToken</dt>\r\n  \t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.threading.cancellationtoken(v=vs.110).aspx\" data-linktype=\"external\">CancellationToken</a></span>\r\n  \t\t\t\t\t</dd>\r\n  \t\t\t\t</dl>\r\n  \t\t\t\t<p> A write quorum of replicas that have been lost. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</p>\r\n  \t\t\t\t</div>\r\n  \t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t<dt>sequenceNumber</dt>\r\n  \t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.int64(v=vs.110).aspx\" data-linktype=\"external\">Int64</a></span>\r\n  \t\t\t\t\t</dd>\r\n  \t\t\t\t</dl>\r\n  \t\t\t\t<p>Long, the LSN of the operation. Note that this is the same value which is returned by the task. Providing it as an out parameter is useful for services which want to prepare the local write to commit when the task finishes.</p>\r\n  \t\t\t\t</div>\r\n  \t\r\n  \t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/dd321424(v=vs.110).aspx\" data-linktype=\"external\">Task</a>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.int64(v=vs.110).aspx\" data-linktype=\"external\">Int64</a>&gt;</span>\r\n  \t\t\t\t</div>\r\n  \t\t\t\t<p>Returns <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/dd321424(v=vs.110).aspx\" data-linktype=\"external\">Task&lt;TResult&gt;</a> of type long, the LSN of the operation.</p>\r\n  \t\t\t\t</div>\r\n  \t\r\n  \t\r\n  \t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">System.Diagnostics.CodeAnalysis.SuppressMessage</span></span>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t</dd>\r\n  \t\t\t\t</dl>\r\n  \t\r\n  \t\r\n  \t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.argumentexception(v=vs.110).aspx\" data-linktype=\"external\">System.ArgumentException</a></span>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<p>Caused by one of the following:</p>\n    <p>E_INVALIDARG is returned when one or more arguments are not valid.</p>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.fabric.fabrictransientexception\" data-linktype=\"relative-path\">FabricTransientException</a></span>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<p>\n      <a class=\"xref\" href=\"system.fabric.fabrictransientexception\" data-linktype=\"relative-path\">FabricTransientException</a> is a retriable exception. It is caused by one of the following;</p>\n    <p>\n      <a class=\"xref\" href=\"system.fabric.fabricerrorcode.nowritequorum\" data-linktype=\"relative-path\">NoWriteQuorum</a> is returned when the replicator does not currently have write quorum..</p>\n    <p>\n      <a class=\"xref\" href=\"system.fabric.fabricerrorcode.reconfigurationpending\" data-linktype=\"relative-path\">ReconfigurationPending</a> is returned when the replicator has a pending reconfiguration.</p>\n    <p>\n      <a class=\"xref\" href=\"system.fabric.fabricerrorcode.replicationqueuefull\" data-linktype=\"relative-path\">ReplicationQueueFull</a> is returned when the replicator queue is full.</p>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.fabric.fabricnotprimaryexception\" data-linktype=\"relative-path\">FabricNotPrimaryException</a></span>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<p>\n      <a class=\"xref\" href=\"system.fabric.fabricnotprimaryexception\" data-linktype=\"relative-path\">FabricNotPrimaryException</a> is caused by one of the following;</p>\n    <p>\n      <a class=\"xref\" href=\"system.fabric.fabricerrorcode.notprimary\" data-linktype=\"relative-path\">NotPrimary</a> is returned when the replicator has a pending reconfiguration.</p>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.fabric.fabricobjectclosedexception\" data-linktype=\"relative-path\">FabricObjectClosedException</a></span>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<p>\n      <a class=\"xref\" href=\"system.fabric.fabricobjectclosedexception\" data-linktype=\"relative-path\">FabricObjectClosedException</a> is caused by one of the following;</p>\n    <p>\n      <a class=\"xref\" href=\"system.fabric.fabricerrorcode.objectclosed\" data-linktype=\"relative-path\">ObjectClosed</a> is returned when the replicator has been closed.</p>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.operationcanceledexception(v=vs.110).aspx\" data-linktype=\"external\">System.OperationCanceledException</a></span>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<p>\n      <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.operationcanceledexception(v=vs.110).aspx\" data-linktype=\"external\">OperationCanceledException</a> is caused by one of the following;</p>\n    <p>E_ABORT when replicator cancels an inflight replication operation.</p>\r\n  \t\t\t\t\t</div>\r\n  \t\r\n  \t\r\n  \t\t\t\t<h2 class=\"accented\">Remarks</h2>\r\n  \t\t\t<p>Replication at the Primary replica produces the objects that implement  that the Secondary replica obtains from the Replication Stream via , which is followed by . The Primary replica has many duties that are related to process state updates. The following steps show the general sequence of events that a Primary replica must handle to replicate and acknowledge a change. Part 1: Handling incoming requests: Receive request: Write(x) – Service receives a write request, x. CheckArguments – The service checks the arguments of the request. This check helps ensure the consistency of the service’s state.Check current state – The service examines its current state to ensure that the operation is valid and can or should be performed. This check also helps ensure data consistency. It is performed by the service code.Acquire Locks – The service should acquire the necessary locks to prevent additional operations from occurring at the same time. This operation helps ensure isolation and consistency.Attempt Operation (optional) – The service can attempt the operation locally. This step reserves and allocates space and performs all the necessary computations. This step includes everything but the actual commit of the result. This operation improves the durability of the operation and makes later failures very unlikely.Manufacture the OperationData – An  object is the representation of the Write(x) that was presented to the service. The  object contains the state change to be transferred with acknowledgement from the Primary replica to the Secondary replicas. The data that the service places in the OperationData defines the atomic update that the  transfers to the Secondary replicas. Note that creating of the  object requires one or more byte arrays. The service must itself determine and serialize the change in state, and then provide this set of bytes to the FabricReplicator via . The service sends the operation to the FabricReplicator and receives a logical sequence number (LSN) in return. The LSN is the identity for the operation and helps both the service and Service Fabric ensure that operations are always applied in the same order everywhere.The service should record the OperationData along with its LSN in an ordered list of in-flight operations. This ensures that when the operations are completed, they can be consistently applied in the correct order.Release Locks - Continue processing or waiting for further requests.Part 2: Completing requests and responding: The Primary replica receives a callback that indicates that the operation has been applied. ReplicateAsync is completed. This callback indicates that the operation has been acknowledged by a quorum of the replicas in the replica set. When the Primary replica receives this callback, it should perform the following actions: Find the corresponding operation that is indicated by the long LSN that is returned from ReplicateAsync in the service’s in-flight list and mark it as &quot;QuorumAck’d&quot;. Now, starting at the first operation in the in-flight list, go through the list and locally commit all of the QuorumAck’d operations, finish any changes to the local state and mark the state changes with their corresponding LSN, until the first incomplete operation is encountered. This ensures that ordering is preserved (consistency) and that the operations are actually applied. This takes advantage of the previous durability and isolation preparations. Note: Most services should cache the last committed LSN value so that responses to the  do not require querying the actual store for the greatest LSN. When an operation is successfully committed at the Primary replica, the Primary replica can now reply to the client that initiated the call and remove the operation from the in-flight list. Continue to wait for the next quorum-acknowledgment callback.</p>\n\r\n  \t\r\n  \t\r\n  \t</div>","outputRootRelativePath":"./","pageMetadata":"<meta name=\"ms.devlang\" content=\"csharp\">\r\n<meta name=\"author\" content=\"erickson-doug\">\r\n<meta name=\"ms.author\" content=\"douge\">\r\n<meta name=\"manager\" content=\"douge\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"reference\">\r\n<meta name=\"ms.date\" content=\"11/16/2016\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"azuredotnet\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"Azure\">\r\n<meta name=\"depot_name\" content=\"Azure.azuredotnet\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/Azure/azure-docs-sdk-dotnet/blob/master/docs-ref-from-xml/System.Fabric.IStateReplicator.yml\">\r\n<meta name=\"APIName\" content=\"System.Fabric.IStateReplicator.ReplicateAsync\">\r\n<meta name=\"APILocation\" content=\"System.Fabric.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 03:11 AM\">\r\n<meta name=\"document_id\" content=\"bd137ebf-5414-193b-27f1-1835e78c797d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"toc_rel\" content=\"system.fabric/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Fabric.IStateReplicator.ReplicateAsync*\">\r\n","rawMetadata":{"ms.devlang":"csharp","author":"erickson-doug","ms.author":"douge","manager":"douge","breadcrumb_path":"breadcrumb/toc.json","apiPlatform":"dotnet","_op_documentIdPathDepotMapping":{"./":{"folder_relative_path_in_docset":"api-index"},"breadcrumb/":{"folder_relative_path_in_docset":"breadcrumb"},"docs-ref-autogen/":{"folder_relative_path_in_docset":"docs-ref-autogen"},"docs-ref-manual/":{"folder_relative_path_in_docset":"docs-ref-manual"},"docs-ref-overwrite/":{"folder_relative_path_in_docset":"docs-ref-overwrite"},"scripts/":{"folder_relative_path_in_docset":"scripts"}},"ms.topic":"reference","ms.date":"11/16/2016","search.ms_sitename":"Docs","search.ms_docsetname":"azuredotnet","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet/api/","locale":"en-us","site_name":"Docs","search.ms_product":"Azure","_op_openToPublicContributors":false,"depot_name":"Azure.azuredotnet","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/Azure/azure-docs-sdk-dotnet/blob/master/docs-ref-from-xml/System.Fabric.IStateReplicator.yml","open_to_public_contributors":false,"api_name":["System.Fabric.IStateReplicator.ReplicateAsync"],"api_location":["System.Fabric.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Fabric.IStateReplicator.ReplicateAsync","System::Fabric::IStateReplicator::ReplicateAsync"],"dev_langs":["csharp"],"updated_at":"2017-04-01 03:11 AM","document_id":"bd137ebf-5414-193b-27f1-1835e78c797d","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ReplicateAsync method | Microsoft Docs","_op_ogTitle":"ReplicateAsync method","toc_asset_id":"System.Fabric/toc.json","toc_rel":"System.Fabric/toc.json","content_git_url":"","source_url":"","ms.assetid":"System.Fabric.IStateReplicator.ReplicateAsync*","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.fabric.istatereplicator.replicateasync","_op_displayDate":"2016-11-16","_op_displayDate_source":"2016-11-16T00:00:00Z","_op_brand":"azure","_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.fabric.istatereplicator.replicateasync","fileRelativePath":"System.Fabric.IStateReplicator.ReplicateAsync.html"},"themesRelativePathToOutputRoot":"_themes/"}