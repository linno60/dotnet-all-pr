{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Evidence</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the set of information that constitutes input to security policy decisions. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic sealed class Evidence : System.Collections.ICollection</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">Evidence</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to create new Evidence classes with both host evidence and assembly evidence.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#1\">Imports System\nImports System.Collections\nImports System.Security\nImports System.Security.Policy\nImports System.Security.Permissions\nImports System.Globalization\nImports Microsoft.VisualBasic\n\n\n\nPublic Class Evidence_Example\n\n    Public Function CreateEvidence() As Boolean\n        Dim retVal As Boolean = True\n\n        Try\n            &#39; Create empty evidence using the default contructor.\n            Dim ev1 As New Evidence\n            Console.WriteLine(&quot;Created empty evidence with the default constructor.&quot;)\n\n            &#39; Constructor used to create null host evidence.\n            Dim ev2a As New Evidence(Nothing)\n            Console.WriteLine(&quot;Created an Evidence object with null host evidence.&quot;)\n\n            &#39; Constructor used to create host evidence.\n            Dim url As New Url(&quot;http://www.treyresearch.com&quot;)\n            Console.WriteLine((&quot;Adding host evidence &quot; &amp; url.ToString()))\n            ev2a.AddHost(url)\n            Dim ev2b As New Evidence(ev2a)\n            Console.WriteLine(&quot;Copy evidence into new evidence&quot;)\n            Dim enum1 As IEnumerator = ev2b.GetHostEnumerator()\n            enum1.MoveNext()\n            Console.WriteLine(enum1.Current.ToString())\n            &#39; Constructor used to create both host and assembly evidence.\n            Dim oa1() As [Object]\n            Dim site As New Site(&quot;www.wideworldimporters.com&quot;)\n            Dim oa2 As [Object]() = {url, site}\n            Dim ev3a As New Evidence(oa1, oa2)\n            enum1 = ev3a.GetHostEnumerator()\n            Dim enum2 As IEnumerator = ev3a.GetAssemblyEnumerator()\n            enum2.MoveNext()\n            Dim obj1 As [Object] = enum2.Current\n            enum2.MoveNext()\n            Console.WriteLine((&quot;URL = &quot; &amp; obj1.ToString() &amp; &quot;  Site = &quot; &amp; enum2.Current.ToString()))\n            &#39; Constructor used to create null host and null assembly evidence.\n            Dim ev3b As New Evidence(Nothing, Nothing)\n            Console.WriteLine(&quot;Create new evidence with null host and assembly evidence&quot;)\n\n        Catch e As Exception\n            Console.WriteLine(&quot;Fatal error: {0}&quot;, e.ToString())\n            Return False\n        End Try\n\n        Return retVal\n    End Function &#39;CreateEvidence\n\n    Public Function DemonstrateEvidenceMembers() As Evidence\n        Dim myEvidence As New Evidence\n        Dim sPubKeyBlob As String = &quot;00240000048000009400000006020000&quot; &amp; &quot;00240000525341310004000001000100&quot; &amp; &quot;19390E945A40FB5730204A25FA5DC4DA&quot; &amp; &quot;B18688B412CB0EDB87A6EFC50E2796C9&quot; &amp; &quot;B41AD3040A7E46E4A02516C598678636&quot; &amp; &quot;44A0F74C39B7AB9C38C01F10AF4A5752&quot; &amp; &quot;BFBCDF7E6DD826676AD031E7BCE63393&quot; &amp; &quot;495BAD2CA4BE03B529A73C95E5B06BE7&quot; &amp; &quot;35CA0F622C63E8F54171BD73E4C8F193&quot; &amp; &quot;CB2664163719CA41F8159B8AC88F8CD3&quot;\n        Dim pubkey As [Byte]() = HexsToArray(sPubKeyBlob)\n\n        &#39; Create a strong name.\n        Dim mSN As New StrongName(New StrongNamePublicKeyBlob(pubkey), &quot;SN01&quot;, New Version(&quot;0.0.0.0&quot;))\n\n        &#39; Create assembly and host evidence.\n        Console.WriteLine(&quot;Adding assembly evidence.&quot;)\n        myEvidence.AddAssembly(&quot;SN01&quot;)\n        myEvidence.AddAssembly(New Version(&quot;0.0.0.0&quot;))\n        myEvidence.AddAssembly(mSN)\n        Console.WriteLine((&quot;Count of evidence items = &quot; &amp; myEvidence.Count.ToString()))\n        Dim url As New Url(&quot;http://www.treyresearch.com&quot;)\n        Console.WriteLine((&quot;Adding host evidence &quot; &amp; url.ToString()))\n        myEvidence.AddHost(url)\n        PrintEvidence(myEvidence).ToString()\n        Console.WriteLine((&quot;Count of evidence items = &quot; &amp; myEvidence.Count.ToString()))\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Copy the evidence to an array using CopyTo, then display the array.&quot;)\n        Dim evidenceArray(myEvidence.Count - 1) As Object\n        myEvidence.CopyTo(evidenceArray, 0)\n        Dim obj As Object\n        For Each obj In evidenceArray\n            Console.WriteLine(obj.ToString())\n        Next obj\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Display the contents of the properties.&quot;)\n        Console.WriteLine(&quot;Locked is the only property normally used by code.&quot;)\n        Console.WriteLine(&quot;IsReadOnly, IsSynchronized, and SyncRoot properties are not normally used.&quot;)\n        Console.WriteLine((ControlChars.Lf &amp; &quot;The default value for the Locked property = &quot; &amp; myEvidence.Locked.ToString()))\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Get the hashcode for the evidence.&quot;)\n        Console.WriteLine((&quot;HashCode = &quot; &amp; myEvidence.GetHashCode().ToString()))\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Get the type for the evidence.&quot;)\n        Console.WriteLine((&quot;Type = &quot; &amp; myEvidence.GetType().ToString()))\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Merge new evidence with the current evidence.&quot;)\n        Dim oa1() As [Object]\n        Dim site As New Site(&quot;www.wideworldimporters.com&quot;)\n        Dim oa2 As [Object]() = {url, site}\n        Dim newEvidence As New Evidence(oa1, oa2)\n        myEvidence.Merge(newEvidence)\n\n        Console.WriteLine((&quot;Evidence count = &quot; &amp; PrintEvidence(myEvidence).ToString()))\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Remove URL evidence.&quot;)\n        myEvidence.RemoveType(url.GetType())\n        Console.WriteLine((&quot;Evidence count is now: &quot; &amp; myEvidence.Count.ToString()))\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Make a copy of the current evidence.&quot;)\n        Dim evidenceCopy As New Evidence(myEvidence)\n        Console.WriteLine((&quot;Count of new evidence items = &quot; &amp; evidenceCopy.Count.ToString()))\n        Console.WriteLine((&quot;Does the copy equal the current evidence? &quot; &amp; myEvidence.Equals(evidenceCopy)))\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Clear the current evidence.&quot;)\n        myEvidence.Clear()\n        Console.WriteLine((&quot;Count is now &quot; &amp; myEvidence.Count.ToString()))\n        Return myEvidence\n    End Function &#39;DemonstrateEvidenceMembers\n\n    Public Shared Function PrintEvidence(ByVal myEvidence As Evidence) As Integer\n        Dim p As Integer = 0\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Current evidence = &quot;)\n        If myEvidence Is Nothing Then\n            Return 0\n        End If\n        Dim list As IEnumerator = myEvidence.GetEnumerator()\n        Dim obj As Object\n        While list.MoveNext()\n            Console.WriteLine(list.Current.ToString())\n            p = p + 1\n        End While\n        Console.WriteLine(ControlChars.Lf)\n        Return p\n    End Function &#39;PrintEvidence\n\n    &#39; Convert a hexidecimal string to an array.\n    Public Shared Function HexsToArray(ByVal sHexString As String) As Byte()\n        Dim array(sHexString.Length / 2) As [Byte]\n        Dim i As Integer\n        For i = 0 To sHexString.Length - 2 Step 2\n            array((i / 2)) = [Byte].Parse(sHexString.Substring(i, 2), NumberStyles.HexNumber)\n        Next i\n        Return array\n    End Function &#39;HexsToArray\n\n\n\n\n    &#39; Main method.\n    Public Shared Sub Main()\n        Try\n            Dim EvidenceTest As New Evidence_Example\n            Dim ret As Boolean = EvidenceTest.CreateEvidence()\n            If ret Then\n                Console.WriteLine(&quot;Evidence successfully created.&quot;)\n            Else\n                Console.WriteLine(&quot;Evidence creation failed.&quot;)\n            End If\n\n            EvidenceTest.DemonstrateEvidenceMembers()\n        Catch e As Exception\n            Console.WriteLine(e.ToString())\n            Environment.ExitCode = 101\n        End Try\n    End Sub &#39;Main\nEnd Class &#39;Evidence_Example\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#1\">using namespace System;\nusing namespace System::Collections;\nusing namespace System::Security;\nusing namespace System::Security::Policy;\nusing namespace System::Security::Permissions;\nusing namespace System::Globalization;\npublic ref class Evidence_Example\n{\npublic:\n   bool CreateEvidence()\n   {\n      bool retVal = true;\n      try\n      {\n         // Create empty evidence using the default contructor.\n         Evidence^ ev1 = gcnew Evidence;\n         Console::WriteLine( &quot;Created empty evidence with the default constructor.&quot; );\n\n         // Constructor used to create null host evidence.\n         Evidence^ ev2a = gcnew Evidence( nullptr );\n         Console::WriteLine( &quot;Created an Evidence object with null host evidence.&quot; );\n\n         // Constructor used to create host evidence.\n         Url^ url = gcnew Url( &quot;http://www.treyresearch.com&quot; );\n         Console::WriteLine( &quot;Adding host evidence {0}&quot;, url );\n         ev2a-&gt;AddHost( url );\n         Evidence^ ev2b = gcnew Evidence( ev2a );\n         Console::WriteLine( &quot;Copy evidence into new evidence&quot; );\n         IEnumerator^ enum1 = ev2b-&gt;GetHostEnumerator();\n         enum1-&gt;MoveNext();\n         Console::WriteLine( enum1-&gt;Current );\n\n         // Constructor used to create both host and assembly evidence.\n         array&lt;Object^&gt;^oa1 = {};\n         Site^ site = gcnew Site( &quot;www.wideworldimporters.com&quot; );\n         array&lt;Object^&gt;^oa2 = {url,site};\n         Evidence^ ev3a = gcnew Evidence( oa1,oa2 );\n         enum1 = ev3a-&gt;GetHostEnumerator();\n         IEnumerator^ enum2 = ev3a-&gt;GetAssemblyEnumerator();\n         enum2-&gt;MoveNext();\n         Object^ obj1 = enum2-&gt;Current;\n         enum2-&gt;MoveNext();\n         Console::WriteLine( &quot;URL = {0}  Site = {1}&quot;, obj1, enum2-&gt;Current );\n         \n         // Constructor used to create null host and null assembly evidence.\n         Evidence^ ev3b = gcnew Evidence( (array&lt;Object^&gt;^)nullptr, (array&lt;Object^&gt;^)nullptr );\n         Console::WriteLine( &quot;Create new evidence with null host and assembly evidence&quot; );\n      }\n      catch ( Exception^ e )\n      {\n         Console::WriteLine( &quot;Fatal error: {0}&quot;, e );\n         return false;\n      }\n\n      return retVal;\n   }\n\n   Evidence^ DemonstrateEvidenceMembers()\n   {\n      Evidence^ myEvidence = gcnew Evidence;\n      String^ sPubKeyBlob = &quot;00240000048000009400000006020000&quot;\n      &quot;00240000525341310004000001000100&quot;\n      &quot;19390E945A40FB5730204A25FA5DC4DA&quot;\n      &quot;B18688B412CB0EDB87A6EFC50E2796C9&quot;\n      &quot;B41AD3040A7E46E4A02516C598678636&quot;\n      &quot;44A0F74C39B7AB9C38C01F10AF4A5752&quot;\n      &quot;BFBCDF7E6DD826676AD031E7BCE63393&quot;\n      &quot;495BAD2CA4BE03B529A73C95E5B06BE7&quot;\n      &quot;35CA0F622C63E8F54171BD73E4C8F193&quot;\n      &quot;CB2664163719CA41F8159B8AC88F8CD3&quot;;\n      array&lt;Byte&gt;^pubkey = HexsToArray( sPubKeyBlob );\n\n      // Create a strong name.\n      StrongName^ mSN = gcnew StrongName( gcnew StrongNamePublicKeyBlob( pubkey ),&quot;SN01&quot;,gcnew Version( &quot;0.0.0.0&quot; ) );\n\n      // Create assembly and host evidence.\n      Console::WriteLine( &quot;Adding assembly evidence.&quot; );\n      myEvidence-&gt;AddAssembly( &quot;SN01&quot; );\n      myEvidence-&gt;AddAssembly( gcnew Version( &quot;0.0.0.0&quot; ) );\n      myEvidence-&gt;AddAssembly( mSN );\n      Console::WriteLine( &quot;Count of evidence items = {0}&quot;, myEvidence-&gt;Count );\n\n      Url^ url = gcnew Url( &quot;http://www.treyresearch.com&quot; );\n      Console::WriteLine( &quot;Adding host evidence {0}&quot;, url );\n      myEvidence-&gt;AddHost( url );\n      PrintEvidence( myEvidence ).ToString();\n      Console::WriteLine( &quot;Count of evidence items = {0}&quot;, myEvidence-&gt;Count );\n\n      Console::WriteLine( &quot;\\nCopy the evidence to an array using CopyTo, then display the array.&quot; );\n      array&lt;Object^&gt;^evidenceArray = gcnew array&lt;Object^&gt;(myEvidence-&gt;Count);\n      myEvidence-&gt;CopyTo( evidenceArray, 0 );\n      for each (Object^ obj in evidenceArray)\n      {\n         Console::WriteLine(obj-&gt;ToString());\n      }\n\n      Console::WriteLine( &quot;\\nDisplay the contents of the properties.&quot; );\n      Console::WriteLine( &quot;Locked is the only property normally used by code.&quot; );\n      Console::WriteLine( &quot;IsReadOnly, IsSynchronized, and SyncRoot properties are not normally used.&quot; );\n      \n      Console::WriteLine( &quot;\\nThe default value for the Locked property = {0}&quot;, myEvidence-&gt;Locked );\n\n      Console::WriteLine( &quot;\\nGet the hashcode for the evidence.&quot; );\n      Console::WriteLine( &quot;HashCode = {0}&quot;, myEvidence-&gt;GetHashCode() );\n\n      Console::WriteLine( &quot;\\nGet the type for the evidence.&quot; );\n      Console::WriteLine( &quot;Type = {0}&quot;, myEvidence-&gt;GetType() );\n\n      Console::WriteLine( &quot;\\nMerge new evidence with the current evidence.&quot; );\n      array&lt;Object^&gt;^oa1 = {};\n      Site^ site = gcnew Site( &quot;www.wideworldimporters.com&quot; );\n      array&lt;Object^&gt;^oa2 = {url,site};\n      Evidence^ newEvidence = gcnew Evidence( oa1,oa2 );\n      myEvidence-&gt;Merge( newEvidence );\n      Console::WriteLine( &quot;Evidence count = {0}&quot;, PrintEvidence( myEvidence ) );\n\n      Console::WriteLine( &quot;\\nRemove URL evidence.&quot; );\n      myEvidence-&gt;RemoveType( url-&gt;GetType() );\n      Console::WriteLine( &quot;Evidence count is now: {0}&quot;, myEvidence-&gt;Count );\n\n      Console::WriteLine( &quot;\\nMake a copy of the current evidence.&quot; );\n      Evidence^ evidenceCopy = gcnew Evidence( myEvidence );\n      Console::WriteLine( &quot;Count of new evidence items = {0}&quot;, evidenceCopy-&gt;Count );\n      Console::WriteLine( &quot;Does the copy equal the current evidence? {0}&quot;, myEvidence-&gt;Equals( evidenceCopy ) );\n\n      Console::WriteLine( &quot;\\nClear the current evidence.&quot; );\n      myEvidence-&gt;Clear();\n      Console::WriteLine( &quot;Count is now {0}&quot;, myEvidence-&gt;Count );\n\n      return myEvidence;\n   }\n\n   static int PrintEvidence( Evidence^ myEvidence )\n   {\n      int p = 0;\n      Console::WriteLine( &quot;\\nCurrent evidence = &quot; );\n      if ( nullptr == myEvidence )\n            return 0;\n\n      IEnumerator^ list = myEvidence-&gt;GetEnumerator();\n      IEnumerator^ myEnum1 = list;\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Object^ obj = safe_cast&lt;Object^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( obj );\n         p++;\n      }\n\n      Console::WriteLine( &quot;\\n&quot; );\n      return p;\n   }\n\n   // Convert a hexadecimal string to an array.\n   static array&lt;Byte&gt;^ HexsToArray( String^ sHexString )\n   {\n      array&lt;Byte&gt;^arr = gcnew array&lt;Byte&gt;(sHexString-&gt;Length / 2);\n      for ( int i = 0; i &lt; sHexString-&gt;Length; i += 2 )\n      {\n         arr[ i / 2 ] = Byte::Parse( sHexString-&gt;Substring( i, 2 ), NumberStyles::HexNumber );\n\n      }\n      return arr;\n   }\n};\n\n\n// Main method.\nint main()\n{\n   try\n   {\n      Evidence_Example^ EvidenceTest = gcnew Evidence_Example;\n      bool ret = EvidenceTest-&gt;CreateEvidence();\n      if ( ret )\n      {\n         Console::WriteLine( &quot;Evidence successfully created.&quot; );\n      }\n      else\n      {\n         Console::WriteLine( &quot;Evidence creation failed.&quot; );\n      }\n      EvidenceTest-&gt;DemonstrateEvidenceMembers();\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( e );\n      Environment::ExitCode = 101;\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#1\">\nusing System;\nusing System.Collections;\nusing System.Security;\nusing System.Security.Policy;\nusing System.Security.Permissions;\nusing System.Globalization;\n\npublic class Evidence_Example\n{\n    public bool CreateEvidence()\n    {\n        bool retVal = true;\n\n        try\n        {\n            // Create empty evidence using the default contructor.\n            Evidence ev1 = new Evidence();\n            Console.WriteLine(&quot;Created empty evidence with the default constructor.&quot;);\n\n            // Constructor used to create null host evidence.\n            Evidence ev2a = new Evidence(null);\n            Console.WriteLine(&quot;Created an Evidence object with null host evidence.&quot;);\n\n            // Constructor used to create host evidence.\n            Url url = new Url(&quot;http://www.treyresearch.com&quot;);\n            Console.WriteLine(&quot;Adding host evidence &quot; + url.ToString());\n            ev2a.AddHost(url);\n            Evidence ev2b = new Evidence(ev2a);\n            Console.WriteLine(&quot;Copy evidence into new evidence&quot;);\n            IEnumerator enum1 = ev2b.GetHostEnumerator();\n            enum1.MoveNext();\n            Console.WriteLine(enum1.Current.ToString());\n\t\t\t\n            // Constructor used to create both host and assembly evidence.\n            Object [] oa1 = {};\n            Site site = new Site(&quot;www.wideworldimporters.com&quot;);\n            Object [] oa2 = { url, site };\n            Evidence ev3a = new Evidence(oa1, oa2);\n            enum1 = ev3a.GetHostEnumerator();\n            IEnumerator enum2 = ev3a.GetAssemblyEnumerator();\n            enum2.MoveNext();\n            Object obj1 = enum2.Current;\n            enum2.MoveNext();\n            Console.WriteLine(&quot;URL = &quot; + obj1.ToString() + &quot;  Site = &quot; + enum2.Current.ToString());\n\t\t\t\n            // Constructor used to create null host and null assembly evidence.\n            Evidence ev3b = new Evidence(null, null);\n            Console.WriteLine(&quot;Create new evidence with null host and assembly evidence&quot;);\n\t\t\t\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;Fatal error: {0}&quot;, e.ToString());\n            return false;\n        }\n\n        return retVal;\n    }\n    public Evidence DemonstrateEvidenceMembers()\n    {\n        Evidence myEvidence = new Evidence();\n        string sPubKeyBlob =\t&quot;00240000048000009400000006020000&quot; + \n            &quot;00240000525341310004000001000100&quot; + \n            &quot;19390E945A40FB5730204A25FA5DC4DA&quot; + \n            &quot;B18688B412CB0EDB87A6EFC50E2796C9&quot; + \n            &quot;B41AD3040A7E46E4A02516C598678636&quot; + \n            &quot;44A0F74C39B7AB9C38C01F10AF4A5752&quot; + \n            &quot;BFBCDF7E6DD826676AD031E7BCE63393&quot; + \n            &quot;495BAD2CA4BE03B529A73C95E5B06BE7&quot; + \n            &quot;35CA0F622C63E8F54171BD73E4C8F193&quot; + \n            &quot;CB2664163719CA41F8159B8AC88F8CD3&quot;;\n        Byte[] pubkey = HexsToArray(sPubKeyBlob);\n\n        // Create a strong name.\n        StrongName mSN = new StrongName(new StrongNamePublicKeyBlob(pubkey), &quot;SN01&quot;, new Version(&quot;0.0.0.0&quot;));\n\n        // Create assembly and host evidence.\n        Console.WriteLine(&quot;Adding assembly evidence.&quot;);\n        myEvidence.AddAssembly(&quot;SN01&quot;);\n        myEvidence.AddAssembly(new Version(&quot;0.0.0.0&quot;));\n        myEvidence.AddAssembly(mSN);\n        Console.WriteLine(&quot;Count of evidence items = &quot; + myEvidence.Count.ToString());\n        Url url = new Url(&quot;http://www.treyresearch.com&quot;);\n        Console.WriteLine(&quot;Adding host evidence &quot; + url.ToString());\n        myEvidence.AddHost(url);\n        PrintEvidence(myEvidence).ToString();\n        Console.WriteLine(&quot;Count of evidence items = &quot; + myEvidence.Count.ToString());\n        Console.WriteLine(&quot;\\nCopy the evidence to an array using CopyTo, then display the array.&quot;);\n        object[] evidenceArray = new object[myEvidence.Count];\n        myEvidence.CopyTo(evidenceArray, 0);\n        foreach (object obj in evidenceArray)\n        {\n            Console.WriteLine(obj.ToString());\n        }\n        Console.WriteLine(&quot;\\nDisplay the contents of the properties.&quot;);\n        Console.WriteLine(&quot;Locked is the only property normally used by code.&quot;);\n        Console.WriteLine(&quot;IsReadOnly, IsSynchronized, and SyncRoot properties are not normally used.&quot;);\n        Console.WriteLine(&quot;\\nThe default value for the Locked property = &quot; + myEvidence.Locked.ToString());\n\t\t\n        Console.WriteLine(&quot;\\nGet the hashcode for the evidence.&quot;);\n        Console.WriteLine(&quot;HashCode = &quot; + myEvidence.GetHashCode().ToString());\n        Console.WriteLine(&quot;\\nGet the type for the evidence.&quot;);\n        Console.WriteLine(&quot;Type = &quot; + myEvidence.GetType().ToString());\n        Console.WriteLine(&quot;\\nMerge new evidence with the current evidence.&quot;);\n        Object [] oa1 = {};\n        Site site = new Site(&quot;www.wideworldimporters.com&quot;);\n        Object [] oa2 = { url, site };\n        Evidence newEvidence = new Evidence(oa1, oa2);\n        myEvidence.Merge(newEvidence);\n        Console.WriteLine(&quot;Evidence count = &quot; + PrintEvidence(myEvidence).ToString());\n        Console.WriteLine(&quot;\\nRemove URL evidence.&quot;);\n        myEvidence.RemoveType(url.GetType());\n        Console.WriteLine(&quot;Evidence count is now: &quot; + myEvidence.Count.ToString());\n        Console.WriteLine(&quot;\\nMake a copy of the current evidence.&quot;);\n        Evidence evidenceCopy = new Evidence(myEvidence);\n        Console.WriteLine(&quot;Count of new evidence items = &quot; + evidenceCopy.Count);\n        Console.WriteLine(&quot;Does the copy equal the current evidence? &quot; + myEvidence.Equals(evidenceCopy));\n        Console.WriteLine(&quot;\\nClear the current evidence.&quot;);\n        myEvidence.Clear();\n        Console.WriteLine(&quot;Count is now &quot; + myEvidence.Count.ToString());\n        return myEvidence;\n    }\n    public static int PrintEvidence(Evidence myEvidence)\n    {\n        int p = 0;\n        Console.WriteLine(&quot;\\nCurrent evidence = &quot;);\n        if (null == myEvidence) return 0;\n        IEnumerator list = myEvidence.GetEnumerator();\n        while (list.MoveNext())\n        {\n            Console.WriteLine(list.Current.ToString());\n        }\n\n        Console.WriteLine(&quot;\\n&quot;);\n        return p;\n    }\n    // Convert a hexidecimal string to an array.\n    public static byte[] HexsToArray(string sHexString)\n    {\n        Byte[] array = new Byte[sHexString.Length/2];\n        for (int i = 0; i &lt; sHexString.Length; i += 2)\n        {\n            array[i / 2] = Byte.Parse(sHexString.Substring(i, 2), NumberStyles.HexNumber);\n        }\n        return array;\n    }\n\n\n\n    // Main method.\n    public static void Main()\n    {\n        try\n        {\n            Evidence_Example EvidenceTest = new Evidence_Example();\n            bool ret = EvidenceTest.CreateEvidence();\n            if (ret)\n            {\n                Console.WriteLine(&quot;Evidence successfully created.&quot;);\n            }\n            else\n            {\n                Console.WriteLine(&quot;Evidence creation failed.&quot;);\n            }\n\t\t\t\n            EvidenceTest.DemonstrateEvidenceMembers();\n        }\n        catch(Exception e)\n        {\n\t\n            Console.WriteLine(e.ToString());\n            Environment.ExitCode = 101;\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Common forms of evidence include signatures and location of origin of code, but can potentially be anything. Objects of any type that are recognized by security policy represent evidence.  </p>\n<p> Security policy is composed of code groups; a particular assembly (the basic unit of code for granting security permissions) is a member of a code group if it satisfies the code group&#39;s membership condition. Evidence is the set of inputs to policy that membership conditions use to determine to which code groups an assembly belongs.  </p>\n<p> The Evidence class is a collection (see <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>) that holds a set of objects that represent evidence. This class holds two sets that correspond to the source of the evidence: host evidence and assembly evidence.  </p>\n<p> Policy can get evidence from two different sources when evaluating permissions for code.  </p>\n<ul>\n<li><p><code>Host evidence</code> is provided by the host, and can only be provided by hosts that have been granted the <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a> permission. Typically, this is evidence of the origin of the code and digital signatures on the assembly. Evidence about origin typically includes <a class=\"xref\" href=\"system.security.policy.url\" data-linktype=\"relative-path\">Url</a>, <a class=\"xref\" href=\"system.security.policy.site\" data-linktype=\"relative-path\">Site</a>, and <a class=\"xref\" href=\"system.security.policy.zone\" data-linktype=\"relative-path\">Zone</a> evidence. Signatures refer to software publisher (AuthentiCode X.509v3 signature) and strong name identities. Both kinds of digital signature-based identity are built into the assembly, but must be validated and passed to policy by the host; when loaded, the security system verifies the signature. The system then creates the appropriate evidence and passes it to policy only if the corresponding signature is valid.  </p>\n</li>\n<li><p><code>Assembly evidence</code> is part of the assembly itself. Developers or administrators can attach custom evidence to the assembly to extend the set of evidence for policy. Assembly evidence can only be added at the time of assembly generation, which occurs before the assembly is signed. The default policy of the security system ignores assembly-provided evidence, but policy can be extended to accept it.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Evidence()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new empty instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Evidence ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence__ctor_System_Security_Policy_Evidence_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Evidence(Evidence)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from a shallow copy of an existing one.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Evidence (System.Security.Policy.Evidence evidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> instance from which to create the new instance. This instance is not deep-copied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>evidence</code> parameter is not a valid instance of <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence__ctor_System_Object___System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Evidence(Object[], Object[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from multiple sets of host and assembly evidence.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Evidence (object[] hostEvidence, object[] assemblyEvidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hostEvidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The host evidence from which to create the new instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>assemblyEvidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The assembly evidence from which to create the new instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence__ctor_System_Security_Policy_EvidenceBase___System_Security_Policy_EvidenceBase___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Evidence(EvidenceBase[], EvidenceBase[])</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from multiple sets of host and assembly evidence.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Evidence (System.Security.Policy.EvidenceBase[] hostEvidence, System.Security.Policy.EvidenceBase[] assemblyEvidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hostEvidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The host evidence from which to create the new instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>assemblyEvidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The assembly evidence from which to create the new instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor creates a new instance of the class by using evidence objects that inherit from the <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_Count_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_Count\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Count</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of evidence objects in the evidence set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Count { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of evidence objects in the evidence set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_IsReadOnly_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_IsReadOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsReadOnly</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the evidence set is read-only.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsReadOnly { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Always <code>false</code>, because read-only evidence sets are not supported.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Application code does not normally use this property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_IsSynchronized_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_IsSynchronized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsSynchronized</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the evidence set is thread-safe.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsSynchronized { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Always <code>false</code> because thread-safe evidence sets are not supported.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Application code does not normally use this property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_Locked_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_Locked\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Locked</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the evidence is locked.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Locked { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the evidence is locked; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">set: System.Security.SecuritySafeCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_SyncRoot_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_SyncRoot\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SyncRoot</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the synchronization root.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object SyncRoot { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Always <code>this</code> (<code>Me</code> in Visual Basic), because synchronization of evidence sets is not supported.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is not normally used by application code.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_AddAssembly_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_AddAssembly_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddAssembly(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the specified assembly evidence to the evidence set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddAssembly (object id);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>id</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Any evidence object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>id</code> is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>id</code> is not serializable.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method for evidence derived from the assembly.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method does not perform a check to prevent adding duplicate types of evidence. Many assembly evidence objects can exist at the same time.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_AddAssemblyEvidence__1_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_AddAssemblyEvidence__1___0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddAssemblyEvidence&lt;T&gt;(T)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds an evidence object of the specified type to the assembly-supplied evidence list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddAssemblyEvidence&lt;T&gt; (T evidence) where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The assembly evidence to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>evidence</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Evidence of type <code>T</code> is already in the list.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>evidence</code> is not serializable.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Legacy evidence, that is, evidence that is not derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>, cannot be added. Only evidence that is derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> can be added. This method does not allow you to add evidence if evidence of that type already exists in the assembly list.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_AddHost_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_AddHost_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddHost(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the specified evidence supplied by the host to the evidence set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddHost (object id);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>id</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Any evidence object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>id</code> is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>id</code> is not serializable.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method for evidence supplied by the host.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method does not perform a check to prevent adding duplicate types of evidence. Many host evidence objects can exist at the same time.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_AddHostEvidence__1_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_AddHostEvidence__1___0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddHostEvidence&lt;T&gt;(T)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds host evidence of the specified type to the host evidence collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddHostEvidence&lt;T&gt; (T evidence) where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The host evidence to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>evidence</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Evidence of type <code>T</code> is already in the list.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Legacy evidence, that is, evidence that is not derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>, cannot be added. Only evidence that is derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> can be added. This method does not allow you to add evidence if evidence of that type already exists in the assembly list.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_Clear_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_Clear\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clear()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the host and assembly evidence from the evidence set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Clear ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Clear removes the evidence in the host and assembly enumerations, setting both to <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_Clone_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a duplicate copy of this evidence object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Policy.Evidence Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A duplicate copy of this evidence object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The duplicate copy is a complete copy that includes all the evidence objects in the collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_CopyTo_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_CopyTo_System_Array_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CopyTo(Array, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies evidence objects to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CopyTo (Array array, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>array</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The target array to which to copy evidence objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The zero-based position in the array to which to begin copying evidence objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>array</code> is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index </code>is outside the range of the target array<code>.</code></p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_GetAssemblyEnumerator_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_GetAssemblyEnumerator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAssemblyEnumerator()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Enumerates evidence provided by the assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.IEnumerator GetAssemblyEnumerator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An enumerator for evidence added by the <span class=\"xref\">stem.Security.Policy.Evidence.AddAssembly*</span> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_GetAssemblyEvidence__1_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_GetAssemblyEvidence__1\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAssemblyEvidence&lt;T&gt;()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets assembly evidence of the specified type from the collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public T GetAssemblyEvidence&lt;T&gt; () where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>Evidence of type <code>T</code> in the assembly evidence collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method returns only evidence that is derived from the <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> class. It does not return legacy evidence objects that are derived from other classes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_GetEnumerator_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_GetEnumerator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEnumerator()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Enumerates all evidence in the set, both that provided by the host and that provided by the assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An enumerator for evidence added by both the <span class=\"xref\">stem.Security.Policy.Evidence.AddHost*</span> method and the <span class=\"xref\">stem.Security.Policy.Evidence.AddAssembly*</span> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_GetHostEnumerator_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_GetHostEnumerator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHostEnumerator()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Enumerates evidence supplied by the host.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.IEnumerator GetHostEnumerator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An enumerator for evidence added by the <span class=\"xref\">stem.Security.Policy.Evidence.AddHost*</span> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_GetHostEvidence__1_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_GetHostEvidence__1\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHostEvidence&lt;T&gt;()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets host evidence of the specified type from the collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public T GetHostEvidence&lt;T&gt; () where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>Evidence of type <code>T</code> in the host evidence collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method returns only evidence that is derived from the <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> class. It does not return legacy evidence objects that are derived from other classes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_Merge_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_Merge_System_Security_Policy_Evidence_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(Evidence)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges the specified evidence set into the current evidence set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Security.Policy.Evidence evidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The evidence set to be merged into the current evidence set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>evidence</code> parameter is not a valid instance of <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.Security.Policy.Evidence.Locked*</span> is <code>true</code>, the code that calls this method does not have <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a>, and the <code>evidence</code> parameter has a host list that is not empty.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Each evidence object in the specified evidence set is added to the assembly and host sets of the current evidence set, according to the sets from which it came.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method does not perform a check to prevent adding duplicate types of evidence. Many assembly and host evidence objects can exist at the same time.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Policy_Evidence_RemoveType_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Policy_Evidence_RemoveType_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoveType(Type)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the evidence for a given type from the host and assembly enumerations.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RemoveType (Type t);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the evidence to be removed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>t</code> is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The results of executing the RemoveType method can be confirmed using the <a class=\"xref\" href=\"system.security.policy.evidence#System_Security_Policy_Evidence_GetAssemblyEnumerator_\" data-linktype=\"relative-path\">GetAssemblyEnumerator</a> method and the <a class=\"xref\" href=\"system.security.policy.evidence#System_Security_Policy_Evidence_GetHostEnumerator_\" data-linktype=\"relative-path\">GetHostEnumerator</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Policy.Evidence.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddAssembly\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddAssemblyEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddHost\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddHostEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Clear\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Clone\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Count\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetAssemblyEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetAssemblyEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetHostEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetHostEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Locked\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Merge\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.RemoveType\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.SyncRoot\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"81bb6ab0-e8b4-7a28-af99-dc3600210e7f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the set of information that constitutes input to security policy decisions. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.policy/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Policy.Evidence\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Policy.Evidence.yml","open_to_public_contributors":false,"api_name":["System.Security.Policy.Evidence","System.Security.Policy.Evidence..ctor","System.Security.Policy.Evidence.AddAssembly","System.Security.Policy.Evidence.AddAssemblyEvidence<T>","System.Security.Policy.Evidence.AddHost","System.Security.Policy.Evidence.AddHostEvidence<T>","System.Security.Policy.Evidence.Clear","System.Security.Policy.Evidence.Clone","System.Security.Policy.Evidence.CopyTo","System.Security.Policy.Evidence.Count","System.Security.Policy.Evidence.GetAssemblyEnumerator","System.Security.Policy.Evidence.GetAssemblyEvidence<T>","System.Security.Policy.Evidence.GetEnumerator","System.Security.Policy.Evidence.GetHostEnumerator","System.Security.Policy.Evidence.GetHostEvidence<T>","System.Security.Policy.Evidence.IsReadOnly","System.Security.Policy.Evidence.IsSynchronized","System.Security.Policy.Evidence.Locked","System.Security.Policy.Evidence.Merge","System.Security.Policy.Evidence.RemoveType","System.Security.Policy.Evidence.SyncRoot"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Policy.Evidence","System::Security::Policy::Evidence","System.Security.Policy.Evidence.#ctor","System::Security::Policy::Evidence::#ctor","System.Security.Policy.Evidence.AddAssembly","System::Security::Policy::Evidence::AddAssembly","System.Security.Policy.Evidence.AddAssemblyEvidence``1","System::Security::Policy::Evidence::AddAssemblyEvidence``1","System.Security.Policy.Evidence.AddHost","System::Security::Policy::Evidence::AddHost","System.Security.Policy.Evidence.AddHostEvidence``1","System::Security::Policy::Evidence::AddHostEvidence``1","System.Security.Policy.Evidence.Clear","System::Security::Policy::Evidence::Clear","System.Security.Policy.Evidence.Clone","System::Security::Policy::Evidence::Clone","System.Security.Policy.Evidence.CopyTo","System::Security::Policy::Evidence::CopyTo","System.Security.Policy.Evidence.Count","System::Security::Policy::Evidence::Count","System.Security.Policy.Evidence.GetAssemblyEnumerator","System::Security::Policy::Evidence::GetAssemblyEnumerator","System.Security.Policy.Evidence.GetAssemblyEvidence``1","System::Security::Policy::Evidence::GetAssemblyEvidence``1","System.Security.Policy.Evidence.GetEnumerator","System::Security::Policy::Evidence::GetEnumerator","System.Security.Policy.Evidence.GetHostEnumerator","System::Security::Policy::Evidence::GetHostEnumerator","System.Security.Policy.Evidence.GetHostEvidence``1","System::Security::Policy::Evidence::GetHostEvidence``1","System.Security.Policy.Evidence.IsReadOnly","System::Security::Policy::Evidence::IsReadOnly","System.Security.Policy.Evidence.IsSynchronized","System::Security::Policy::Evidence::IsSynchronized","System.Security.Policy.Evidence.Locked","System::Security::Policy::Evidence::Locked","System.Security.Policy.Evidence.Merge","System::Security::Policy::Evidence::Merge","System.Security.Policy.Evidence.RemoveType","System::Security::Policy::Evidence::RemoveType","System.Security.Policy.Evidence.SyncRoot","System::Security::Policy::Evidence::SyncRoot"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"81bb6ab0-e8b4-7a28-af99-dc3600210e7f","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Policy/Evidence.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Evidence class | Microsoft Docs","_op_ogTitle":"Evidence class","description":"Defines the set of information that constitutes input to security policy decisions. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security.Policy/toc.json","toc_rel":"_splitted/System.Security.Policy/toc.json","source_url":"","ms.assetid":"System.Security.Policy.Evidence","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.policy.evidence","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.policy.evidence","fileRelativePath":"api/System.Security.Policy.Evidence.html"},"themesRelativePathToOutputRoot":"_themes/"}