{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Converter&lt;TInput,TOutput&gt;</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a method that converts an object from one type to another type.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate TOutput Converter&lt;in TInput,out TOutput&gt;(TInput input);</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TInput</td>\r\n  \t\t\t<td><p>The type of object that is to be converted.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TOutput</td>\r\n  \t\t\t<td><p>The type the input object is to be converted to.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">System.Delegate</a></span></div><span class=\"lang-csharp\">Converter&lt;TInput,TOutput&gt;</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This section contains two code examples. The first demonstrates the Converter(TInput, delegate with the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/exc45z53(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method of the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> class, and the second demonstrates the delegate with the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/73fe8cwf(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method of the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> generic class.  </p>\n<p> Example 1  </p>\n<p> The following code example defines a method named <code>PointFToPoint</code> that converts a <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure to a <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure. The example then creates an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures, creates a <code>Converter\\&lt;PointF, Point&gt;</code> delegate (<code>Converter(Of PointF, Point)</code> in Visual Basic) to represent the <code>PointFToPoint</code> method, and passes the delegate to the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/exc45z53(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method. The <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/exc45z53(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method passes each element of the input list to the <code>PointFToPoint</code> method and puts the converted elements into a new list of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures. Both lists are displayed.  </p>\n<pre><code class=\"lang-cpp\" name=\"Array_ConvertAll#1\">#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Collections::Generic;\n\nPoint PointFToPoint(PointF pf)\n{\n    return Point((int) pf.X, (int) pf.Y);\n};\n\nvoid main()\n{\n    // Create an array of PointF objects.\n    array&lt;PointF&gt;^ apf = {\n        PointF(27.8F, 32.62F),\n        PointF(99.3F, 147.273F),\n        PointF(7.5F, 1412.2F) };\n\n\n    // Display each element in the PointF array.\n    Console::WriteLine();\n    for each(PointF p in apf)\n    {\n        Console::WriteLine(p);\n    }\n\n    // Convert each PointF element to a Point object.\n    array&lt;Point&gt;^ ap = \n        Array::ConvertAll(apf, \n            gcnew Converter&lt;PointF, Point&gt;(PointFToPoint)\n        );\n\n    // Display each element in the Point array.\n    Console::WriteLine();\n    for each(Point p in ap)\n    {\n        Console::WriteLine(p);\n    }\n}\n\n/* This code example produces the following output:\n\n{X=27.8, Y=32.62}\n{X=99.3, Y=147.273}\n{X=7.5, Y=1412.2}\n\n{X=27,Y=32}\n{X=99,Y=147}\n{X=7,Y=1412}\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"Array_ConvertAll#1\">Imports System.Drawing\nImports System.Collections.Generic\n\nPublic Class Example\n    Public Shared Sub Main()\n        &#39; Create an array of PointF objects.\n        Dim apf() As PointF = { _\n            New PointF(27.8, 32.62), _\n            New PointF(99.3, 147.273), _\n            New PointF(7.5, 1412.2)  }\n\n        &#39; Display each element in the PointF array.\n        Console.WriteLine()\n        For Each p As PointF In apf\n            Console.WriteLine(p)\n        Next\n        \n        &#39; Convert each PointF element to a Point object.\n        Dim ap() As Point = Array.ConvertAll(apf, _\n            New Converter(Of PointF, Point)(AddressOf PointFToPoint))\n\n        &#39; Display each element in the Point array.\n        Console.WriteLine()\n        For Each p As Point In ap\n            Console.WriteLine(p)\n        Next\n    End Sub\n\n    Public Shared Function PointFToPoint(ByVal pf As PointF) _\n        As Point\n\n        Return New Point(CInt(pf.X), CInt(pf.Y))\n    End Function\nEnd Class\n&#39; The example produces the following output:\n&#39;       {X=27.8, Y=32.62}\n&#39;       {X=99.3, Y=147.273}\n&#39;       {X=7.5, Y=1412.2}\n&#39;       \n&#39;       {X=28,Y=33}\n&#39;       {X=99,Y=147}\n&#39;       {X=8,Y=1412}\n</code></pre><pre><code class=\"lang-cs\" name=\"Array_ConvertAll#1\">using System;\nusing System.Drawing;\nusing System.Collections.Generic;\n\npublic class Example\n{\n    public static void Main()\n    {\n        // Create an array of PointF objects.\n        PointF[] apf = {\n            new PointF(27.8F, 32.62F),\n            new PointF(99.3F, 147.273F),\n            new PointF(7.5F, 1412.2F) };\n\n        // Display each element in the PointF array.\n        Console.WriteLine();\n        foreach( PointF p in apf )\n            Console.WriteLine(p);\n\n        // Convert each PointF element to a Point object.\n        Point[] ap = Array.ConvertAll(apf, \n            new Converter&lt;PointF, Point&gt;(PointFToPoint));\n\n        // Display each element in the Point array.\n        Console.WriteLine();\n        foreach( Point p in ap )\n        {\n            Console.WriteLine(p);\n        }\n    }\n\n    public static Point PointFToPoint(PointF pf)\n    {\n        return new Point(((int) pf.X), ((int) pf.Y));\n    }\n}\n\n/* This code example produces the following output:\n\n{X=27.8, Y=32.62}\n{X=99.3, Y=147.273}\n{X=7.5, Y=1412.2}\n\n{X=27,Y=32}\n{X=99,Y=147}\n{X=7,Y=1412}\n */\n</code></pre><p> Example 2  </p>\n<p> The following code example defines a method named <code>PointFToPoint</code> that converts a <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure to a <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure. The example then creates a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures, creates a <code>Converter&lt;PointF, Point&gt;</code> delegate (<code>Converter(Of PointF, Point)</code> in Visual Basic) to represent the <code>PointFToPoint</code> method, and passes the delegate to the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/73fe8cwf(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method. The <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/73fe8cwf(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method passes each element of the input list to the <code>PointFToPoint</code> method and puts the converted elements into a new list of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures. Both lists are displayed.  </p>\n<pre><code class=\"lang-cpp\" name=\"List`1_ConvertAll#1\">#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Collections::Generic;\n\nPoint PointFToPoint(PointF pf)\n{\n    return Point((int) pf.X, (int) pf.Y);\n};\n\nvoid main()\n{\n    List&lt;PointF&gt;^ lpf = gcnew List&lt;PointF&gt;();\n\n    lpf-&gt;Add(PointF(27.8F, 32.62F));\n    lpf-&gt;Add(PointF(99.3F, 147.273F));\n    lpf-&gt;Add(PointF(7.5F, 1412.2F));\n\n    Console::WriteLine();\n    for each(PointF p in lpf)\n    {\n        Console::WriteLine(p);\n    }\n\n    List&lt;Point&gt;^ lp = \n        lpf-&gt;ConvertAll&lt;Point&gt;(\n            gcnew Converter&lt;PointF, Point&gt;(PointFToPoint)\n        );\n\n    Console::WriteLine();\n    for each(Point p in lp)\n    {\n        Console::WriteLine(p);\n    }\n}\n\n/* This code example produces the following output:\n\n{X=27.8, Y=32.62}\n{X=99.3, Y=147.273}\n{X=7.5, Y=1412.2}\n\n{X=27,Y=32}\n{X=99,Y=147}\n{X=7,Y=1412}\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"List`1_ConvertAll#1\">Imports System\nImports System.Drawing\nImports System.Collections.Generic\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim lpf As New List(Of PointF)\n\n        lpf.Add(New PointF(27.8, 32.62))\n        lpf.Add(New PointF(99.3, 147.273))\n        lpf.Add(New PointF(7.5, 1412.2))\n\n        Console.WriteLine()\n        For Each p As PointF In lpf\n            Console.WriteLine(p)\n        Next\n\n        Dim lp As List(Of Point) = lpf.ConvertAll( _\n            New Converter(Of PointF, Point)(AddressOf PointFToPoint))\n\n        Console.WriteLine()\n        For Each p As Point In lp\n            Console.WriteLine(p)\n        Next\n\n    End Sub\n\n    Public Shared Function PointFToPoint(ByVal pf As PointF) _\n        As Point\n\n        Return New Point(CInt(pf.X), CInt(pf.Y))\n    End Function\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;{X=27.8, Y=32.62}\n&#39;{X=99.3, Y=147.273}\n&#39;{X=7.5, Y=1412.2}\n&#39;\n&#39;{X=28,Y=33}\n&#39;{X=99,Y=147}\n&#39;{X=8,Y=1412}\n</code></pre><pre><code class=\"lang-cs\" name=\"List`1_ConvertAll#1\">using System;\nusing System.Drawing;\nusing System.Collections.Generic;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;PointF&gt; lpf = new List&lt;PointF&gt;();\n\n        lpf.Add(new PointF(27.8F, 32.62F));\n        lpf.Add(new PointF(99.3F, 147.273F));\n        lpf.Add(new PointF(7.5F, 1412.2F));\n\n        Console.WriteLine();\n        foreach( PointF p in lpf )\n        {\n            Console.WriteLine(p);\n        }\n\n        List&lt;Point&gt; lp = lpf.ConvertAll( \n            new Converter&lt;PointF, Point&gt;(PointFToPoint));\n\n        Console.WriteLine();\n        foreach( Point p in lp )\n        {\n            Console.WriteLine(p);\n        }\n    }\n\n    public static Point PointFToPoint(PointF pf)\n    {\n        return new Point(((int) pf.X), ((int) pf.Y));\n    }\n}\n\n/* This code example produces the following output:\n\n{X=27.8, Y=32.62}\n{X=99.3, Y=147.273}\n{X=7.5, Y=1412.2}\n\n{X=27,Y=32}\n{X=99,Y=147}\n{X=7,Y=1412}\n */\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This delegate is used by the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/exc45z53(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method of the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> class and the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/73fe8cwf(v=vs.110).aspx\" data-linktype=\"external\">ConvertAll</a> method of the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>class to convert each element of the collection from one type to another.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Converter-2.yml\">\r\n<meta name=\"APIName\" content=\"System.Converter&lt;TInput,TOutput&gt;\">\r\n<meta name=\"APIName\" content=\"System.Converter&lt;TInput,TOutput&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Converter&lt;TInput,TOutput&gt;.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Converter&lt;TInput,TOutput&gt;.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Converter&lt;TInput,TOutput&gt;.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"c36ea58a-8706-76ae-fd69-45a7e3fca647\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a method that converts an object from one type to another type.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Converter`2\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Converter-2.yml","open_to_public_contributors":false,"api_name":["System.Converter<TInput,TOutput>","System.Converter<TInput,TOutput>..ctor","System.Converter<TInput,TOutput>.Invoke","System.Converter<TInput,TOutput>.BeginInvoke","System.Converter<TInput,TOutput>.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Converter`2","System::Converter`2"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"c36ea58a-8706-76ae-fd69-45a7e3fca647","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System/Converter`2.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Converter<TInput,TOutput> delegate | Microsoft Docs","_op_ogTitle":"Converter<TInput,TOutput> delegate","description":"Represents a method that converts an object from one type to another type.\n","toc_asset_id":"api/_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.Converter`2","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.converter-2","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.converter-2","fileRelativePath":"api/System.Converter-2.html"},"themesRelativePathToOutputRoot":"_themes/"}