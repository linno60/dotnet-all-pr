{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ObfuscationAttribute</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Instructs obfuscation tools to take the specified actions for an assembly, type, or member.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\n[ECMA2Yaml.Models.ECMAAttribute]\npublic sealed class ObfuscationAttribute : Attribute</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></span></div><span class=\"lang-csharp\">ObfuscationAttribute</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo, Type, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows a public assembly with two types: <code>Type1</code> and <code>Type2</code>. The assembly is marked for obfuscation with the <a class=\"xref\" href=\"system.reflection.obfuscateassemblyattribute\" data-linktype=\"relative-path\">ObfuscateAssemblyAttribute</a>, which marks the assembly to be treated as public (that is, the <a class=\"xref\" href=\"system.reflection.obfuscateassemblyattribute#System_Reflection_ObfuscateAssemblyAttribute_AssemblyIsPrivate_\" data-linktype=\"relative-path\">AssemblyIsPrivate</a> property is <code>false</code>).  </p>\n<p> <code>Type1</code> is marked for obfuscation because the assembly is marked for obfuscation. One member of <code>Type1</code> is excluded from obfuscation, using the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_Exclude_\" data-linktype=\"relative-path\">Exclude</a> property.  </p>\n<p> <code>Type2</code> is excluded from obfuscation, but its members are marked for obfuscation because the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_ApplyToMembers_\" data-linktype=\"relative-path\">ApplyToMembers</a> property is <code>false</code>.  </p>\n<p> The <code>MethodA</code> method of <code>Type2</code> is marked with the value <code>&quot;default&quot;</code> for the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_Feature_\" data-linktype=\"relative-path\">Feature</a> property. It is necessary to specify <code>false</code> for the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_Exclude_\" data-linktype=\"relative-path\">Exclude</a> property to avoid excluding <code>MethodA</code> from obfuscation, because the default for the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_Exclude_\" data-linktype=\"relative-path\">Exclude</a> property is <code>true</code>. The obfuscation tool should not strip the attribute after obfuscation because the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_StripAfterObfuscation_\" data-linktype=\"relative-path\">StripAfterObfuscation</a> property is <code>false</code>. All the other attributes in this code example are stripped after obfuscation, because the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_StripAfterObfuscation_\" data-linktype=\"relative-path\">StripAfterObfuscation</a> property is not specified, and therefore defaults to <code>true</code>.  </p>\n<p> The code example includes code to display the attributes and their properties. You can also examine the attributes by opening the DLL with the <a href=\"../topic/ildasm.exe%20(il%20disassembler)\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"ObfuscationAttribute#1\">using System;\nusing System.Reflection;\n\n// Mark this public assembly for obfuscation.\n[assembly:ObfuscateAssemblyAttribute(false)]\n\n// This class is marked for obfuscation, because the assembly\n// is marked.\npublic class Type1\n{\n\n    // Exclude this method from obfuscation. The default value\n    // of the Exclude property is true, so it is not necessary\n    // to specify Exclude=True, although spelling it out makes\n    // your intent clearer.\n    [ObfuscationAttribute(Exclude=true)]\n    public void MethodA() {}\n\n    // This member is marked for obfuscation because the class\n    // is marked.\n    public void MethodB() {}\n}\n\n// Exclude this type from obfuscation, but do not apply that\n// exclusion to members. The default value of the Exclude \n// property is true, so it is not necessary to specify \n// Exclude=true, although spelling it out makes your intent \n// clearer.\n[ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]\npublic class Type2\n{\n\n    // The exclusion of the type is not applied to its members,\n    // however in order to mark the member with the &quot;default&quot; \n    // feature it is necessary to specify Exclude=false,\n    // because the default value of Exclude is true. The tool\n    // should not strip this attribute after obfuscation.\n    [ObfuscationAttribute(Exclude=false, Feature=&quot;default&quot;, \n        StripAfterObfuscation=false)]\n    public void MethodA() {}\n\n    // This member is marked for obfuscation, because the \n    // exclusion of the type is not applied to its members.\n    public void MethodB() {}\n\n}\n\n// This class only exists to provide an entry point for the\n// assembly and to display the attribute values.\ninternal class Test\n{\n\n    public static void Main()\n    {\n\n        // Display the ObfuscateAssemblyAttribute properties\n        // for the assembly.        \n        Assembly assem = typeof(Test).Assembly;\n        object[] assemAttrs = assem.GetCustomAttributes(\n            typeof(ObfuscateAssemblyAttribute), false);\n\n        foreach( Attribute a in assemAttrs )\n        {\n            ShowObfuscateAssembly((ObfuscateAssemblyAttribute) a);\n        }\n\n        // Display the ObfuscationAttribute properties for each\n        // type that is visible to users of the assembly.\n        foreach( Type t in assem.GetTypes() )\n        {\n            if (t.IsVisible)\n            {\n                object[] tAttrs = t.GetCustomAttributes(\n                    typeof(ObfuscationAttribute), false);\n\n                foreach( Attribute a in tAttrs )\n                {\n                    ShowObfuscation(((ObfuscationAttribute) a),\n                        t.Name);\n                }\n\n                // Display the ObfuscationAttribute properties\n                // for each member in the type.\n                foreach( MemberInfo m in t.GetMembers() )\n                {\n                    object[] mAttrs = m.GetCustomAttributes(\n                        typeof(ObfuscationAttribute), false);\n\n                    foreach( Attribute a in mAttrs )\n                    {\n                        ShowObfuscation(((ObfuscationAttribute) a), \n                            t.Name + &quot;.&quot; + m.Name);\n                    }\n                }\n            }\n        }\n    }\n\n    private static void ShowObfuscateAssembly(\n        ObfuscateAssemblyAttribute ob)\n    {\n        Console.WriteLine(&quot;\\r\\nObfuscateAssemblyAttribute properties:&quot;);\n        Console.WriteLine(&quot;   AssemblyIsPrivate: {0}&quot;, \n            ob.AssemblyIsPrivate);\n        Console.WriteLine(&quot;   StripAfterObfuscation: {0}&quot;,\n            ob.StripAfterObfuscation);\n    }\n\n    private static void ShowObfuscation(\n        ObfuscationAttribute ob, string target)\n    {\n        Console.WriteLine(&quot;\\r\\nObfuscationAttribute properties for: {0}&quot;,\n            target);\n        Console.WriteLine(&quot;   Exclude: {0}&quot;, ob.Exclude);\n        Console.WriteLine(&quot;   Feature: {0}&quot;, ob.Feature);\n        Console.WriteLine(&quot;   StripAfterObfuscation: {0}&quot;,\n            ob.StripAfterObfuscation);\n        Console.WriteLine(&quot;   ApplyToMembers: {0}&quot;, ob.ApplyToMembers);\n    }\n}\n\n/* This code example produces the following output:\n\nObfuscateAssemblyAttribute properties:\n   AssemblyIsPrivate: False\n   StripAfterObfuscation: True\n\nObfuscationAttribute properties for: Type1.MethodA\n   Exclude: True\n   Feature: all\n   StripAfterObfuscation: True\n   ApplyToMembers: True\n\nObfuscationAttribute properties for: Type2\n   Exclude: True\n   Feature: all\n   StripAfterObfuscation: True\n   ApplyToMembers: False\n\nObfuscationAttribute properties for: Type2.MethodA\n   Exclude: False\n   Feature: default\n   StripAfterObfuscation: False\n   ApplyToMembers: True\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"ObfuscationAttribute#1\">Imports System.Reflection\n\n&#39; Mark this public assembly for obfuscation.\n&lt;Assembly: ObfuscateAssemblyAttribute(False)&gt;\n\n&#39; This class is marked for obfuscation, because the assembly\n&#39; is marked.\nPublic Class Type1\n\n    &#39; Exclude this method from obfuscation. The default value\n    &#39; of the Exclude property is True, so it is not necessary\n    &#39; to specify Exclude:=True, although spelling it out makes\n    &#39; your intent clearer.\n    &lt;ObfuscationAttribute(Exclude:=True)&gt; _\n    Public Sub MethodA()\n    End Sub\n\n    &#39; This member is marked for obfuscation because the class\n    &#39; is marked.\n    Public Sub MethodB()\n    End Sub\n\nEnd Class\n\n&#39; Exclude this type from obfuscation, but do not apply that\n&#39; exclusion to members. The default value of the Exclude \n&#39; property is True, so it is not necessary to specify \n&#39; Exclude:=True, although spelling it out makes your intent \n&#39; clearer.\n&lt;ObfuscationAttribute(Exclude:=True, ApplyToMembers:=False)&gt; _\nPublic Class Type2\n\n    &#39; The exclusion of the type is not applied to its members,\n    &#39; however in order to mark the member with the &quot;default&quot; \n    &#39; feature it is necessary to specify Exclude:=False,\n    &#39; because the default value of Exclude is True. The tool\n    &#39; should not strip this attribute after obfuscation.\n    &lt;ObfuscationAttribute(Exclude:=False, _\n        Feature:=&quot;default&quot;, StripAfterObfuscation:=False)&gt; _\n    Public Sub MethodA()\n    End Sub\n\n    &#39; This member is marked for obfuscation, because the \n    &#39; exclusion of the type is not applied to its members.\n    Public Sub MethodB()\n    End Sub\n\nEnd Class\n\n&#39; This class only exists to provide an entry point for the\n&#39; assembly and to display the attribute values.\nFriend Class Test\n\n    Public Shared Sub Main()\n\n        &#39; Display the ObfuscateAssemblyAttribute properties\n        &#39; for the assembly.        \n        Dim assem As Assembly =GetType(Test).Assembly\n        Dim assemAttrs() As Object = _\n            assem.GetCustomAttributes( _\n                GetType(ObfuscateAssemblyAttribute), _\n                False)\n\n        For Each a As Attribute In assemAttrs\n            ShowObfuscateAssembly(CType(a, ObfuscateAssemblyAttribute))\n        Next\n\n        &#39; Display the ObfuscationAttribute properties for each\n        &#39; type that is visible to users of the assembly.\n        For Each t As Type In assem.GetTypes()\n            If t.IsVisible Then\n                Dim tAttrs() As Object = _\n                    t.GetCustomAttributes( _\n                        GetType(ObfuscationAttribute), _\n                        False)\n\n                For Each a As Attribute In tAttrs\n                    ShowObfuscation(CType(a, ObfuscationAttribute), _\n                        t.Name)\n                Next\n\n                &#39; Display the ObfuscationAttribute properties\n                &#39; for each member in the type.\n                For Each m As MemberInfo In t.GetMembers()\n                    Dim mAttrs() As Object = _\n                        m.GetCustomAttributes( _\n                            GetType(ObfuscationAttribute), _\n                            False)\n\n                    For Each a As Attribute In mAttrs\n                        ShowObfuscation(CType(a, ObfuscationAttribute), _\n                            t.Name &amp; &quot;.&quot; &amp; m.Name)\n                    Next\n                Next\n            End If\n        Next\n    End Sub\n\n    Private Shared Sub ShowObfuscateAssembly( _\n        ByVal ob As ObfuscateAssemblyAttribute)\n        \n        Console.WriteLine(vbCrLf &amp; &quot;ObfuscateAssemblyAttribute properties:&quot;)\n        Console.WriteLine(&quot;   AssemblyIsPrivate: &quot; _\n            &amp; ob.AssemblyIsPrivate)\n        Console.WriteLine(&quot;   StripAfterObfuscation: &quot; _\n            &amp; ob.StripAfterObfuscation)\n\n    End Sub\n\n    Private Shared Sub ShowObfuscation( _\n        ByVal ob As ObfuscationAttribute, _\n        ByVal target As String)\n        \n        Console.WriteLine(vbCrLf _\n            &amp; &quot;ObfuscationAttribute properties for: &quot; _\n            &amp; target)\n        Console.WriteLine(&quot;   Exclude: &quot; &amp; ob.Exclude)\n        Console.WriteLine(&quot;   Feature: &quot; &amp; ob.Feature)\n        Console.WriteLine(&quot;   StripAfterObfuscation: &quot; _\n            &amp; ob.StripAfterObfuscation)\n        Console.WriteLine(&quot;   ApplyToMembers: &quot; &amp; ob.ApplyToMembers)\n\n    End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;ObfuscateAssemblyAttribute properties:\n&#39;   AssemblyIsPrivate: False\n&#39;   StripAfterObfuscation: True\n&#39;\n&#39;ObfuscationAttribute properties for: Type1.MethodA\n&#39;   Exclude: True\n&#39;   Feature: all\n&#39;   StripAfterObfuscation: True\n&#39;   ApplyToMembers: True\n&#39;\n&#39;ObfuscationAttribute properties for: Type2\n&#39;   Exclude: True\n&#39;   Feature: all\n&#39;   StripAfterObfuscation: True\n&#39;   ApplyToMembers: False\n&#39;\n&#39;ObfuscationAttribute properties for: Type2.MethodA\n&#39;   Exclude: False\n&#39;   Feature: default\n&#39;   StripAfterObfuscation: False\n&#39;   ApplyToMembers: True\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ObfuscationAttribute and <a class=\"xref\" href=\"system.reflection.obfuscateassemblyattribute\" data-linktype=\"relative-path\">ObfuscateAssemblyAttribute</a> attributes allow assembly authors to annotate their binaries so that obfuscation tools can process them correctly with minimal external configuration.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.  </p>\n</div>\n<p> The ObfuscationAttribute attribute has a string <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_Feature_\" data-linktype=\"relative-path\">Feature</a> property. Obfuscation tools can map the string values of this property to features they implement, preferably by using an XML configuration file that users can access. The ObfuscationAttribute defines two feature strings, &quot;default&quot; and &quot;all&quot;. The string &quot;default&quot; should map to the default obfuscation features of a tool, and &quot;all&quot; should map to the complete set of obfuscation features supported by a tool. The default value of the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_Feature_\" data-linktype=\"relative-path\">Feature</a> property is &quot;all&quot;, enabling the complete set of obfuscation features.  </p>\n<p> When applied to an assembly, ObfuscationAttribute also applies to all types within the assembly. If the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_ApplyToMembers_\" data-linktype=\"relative-path\">ApplyToMembers</a> property is not specified, or is set to <code>true</code>, the attribute applies to all members as well. ObfuscationAttribute does not specify whether an assembly is public or private. To specify whether an assembly is public or private, use the <a class=\"xref\" href=\"system.reflection.obfuscateassemblyattribute\" data-linktype=\"relative-path\">ObfuscateAssemblyAttribute</a> attribute.  </p>\n<p> When applied to classes and structures, ObfuscationAttribute also applies to all members of the type if the <a class=\"xref\" href=\"system.reflection.obfuscationattribute#System_Reflection_ObfuscationAttribute_ApplyToMembers_\" data-linktype=\"relative-path\">ApplyToMembers</a> property is not specified, or is set to <code>true</code>.  </p>\n<p> When applied to methods, parameters, fields, and properties, the attribute affects only the entity to which it is applied.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_ObfuscationAttribute__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ObfuscationAttribute__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ObfuscationAttribute()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.reflection.obfuscationattribute\" data-linktype=\"relative-path\">ObfuscationAttribute</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ObfuscationAttribute ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.reflection.obfuscationattribute\" data-linktype=\"relative-path\">ObfuscationAttribute</a> does not specify whether an assembly is public or private. To specify whether an assembly is public or private, use <a class=\"xref\" href=\"system.reflection.obfuscateassemblyattribute\" data-linktype=\"relative-path\">ObfuscateAssemblyAttribute</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_ObfuscationAttribute_ApplyToMembers_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ObfuscationAttribute_ApplyToMembers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplyToMembers</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether the attribute of a type is to apply to the members of the type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ApplyToMembers { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the attribute is to apply to the members of the type; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of this property is ignored when the attribute is applied to a member.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_ObfuscationAttribute_Exclude_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ObfuscationAttribute_Exclude\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Exclude</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether the obfuscation tool should exclude the type or member from obfuscation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Exclude { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the type or member to which this attribute is applied should be excluded from obfuscation; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"IMPORTANT\"><h5>Important</h5><p> Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_ObfuscationAttribute_Feature_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ObfuscationAttribute_Feature\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Feature</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a string value that is recognized by the obfuscation tool, and which specifies processing options.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Feature { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string value that is recognized by the obfuscation tool, and which specifies processing options. The default is &quot;all&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value passed to this property depends on the obfuscation tool used. It is recommended that vendors of obfuscation tools support at least &quot;default&quot; and &quot;all&quot;. Vendors can use these settings in conjunction with the XML configuration file.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Reflection_ObfuscationAttribute_StripAfterObfuscation_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Reflection_ObfuscationAttribute_StripAfterObfuscation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StripAfterObfuscation</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether the obfuscation tool should remove this attribute after processing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool StripAfterObfuscation { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if an obfuscation tool should remove the attribute after processing; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.attributeusageattribute\" title=\"System.AttributeUsageAttribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Attributes should not be stripped if your library will be included as part of another application, and obfuscated as part of that application.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.ObfuscationAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ObfuscationAttribute\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ObfuscationAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ObfuscationAttribute.ApplyToMembers\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ObfuscationAttribute.Exclude\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ObfuscationAttribute.Feature\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ObfuscationAttribute.StripAfterObfuscation\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"f0d0dc1c-1659-3d73-0156-19621e4f2b18\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Instructs obfuscation tools to take the specified actions for an assembly, type, or member.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.reflection/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.ObfuscationAttribute\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.ObfuscationAttribute.yml","open_to_public_contributors":false,"api_name":["System.Reflection.ObfuscationAttribute","System.Reflection.ObfuscationAttribute..ctor","System.Reflection.ObfuscationAttribute.ApplyToMembers","System.Reflection.ObfuscationAttribute.Exclude","System.Reflection.ObfuscationAttribute.Feature","System.Reflection.ObfuscationAttribute.StripAfterObfuscation"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.ObfuscationAttribute","System::Reflection::ObfuscationAttribute","System.Reflection.ObfuscationAttribute.#ctor","System::Reflection::ObfuscationAttribute::#ctor","System.Reflection.ObfuscationAttribute.ApplyToMembers","System::Reflection::ObfuscationAttribute::ApplyToMembers","System.Reflection.ObfuscationAttribute.Exclude","System::Reflection::ObfuscationAttribute::Exclude","System.Reflection.ObfuscationAttribute.Feature","System::Reflection::ObfuscationAttribute::Feature","System.Reflection.ObfuscationAttribute.StripAfterObfuscation","System::Reflection::ObfuscationAttribute::StripAfterObfuscation"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"f0d0dc1c-1659-3d73-0156-19621e4f2b18","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Reflection/ObfuscationAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ObfuscationAttribute class | Microsoft Docs","_op_ogTitle":"ObfuscationAttribute class","description":"Instructs obfuscation tools to take the specified actions for an assembly, type, or member.\n","toc_asset_id":"api/_splitted/System.Reflection/toc.json","toc_rel":"_splitted/System.Reflection/toc.json","source_url":"","ms.assetid":"System.Reflection.ObfuscationAttribute","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.obfuscationattribute","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.obfuscationattribute","fileRelativePath":"api/System.Reflection.ObfuscationAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}