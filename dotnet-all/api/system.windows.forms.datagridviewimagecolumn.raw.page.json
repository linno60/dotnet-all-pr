{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridViewImageColumn</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Hosts a collection of <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell\" data-linktype=\"relative-path\">DataGridViewImageCell</a> objects.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic class DataGridViewImageColumn : System.Windows.Forms.DataGridViewColumn</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement\" data-linktype=\"relative-path\">DataGridViewElement</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a></span></div><span class=\"lang-csharp\">DataGridViewImageColumn</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.drawing.toolboxbitmapattribute\" title=\"System.Drawing.ToolboxBitmapAttribute\" data-linktype=\"relative-path\">ToolboxBitmapAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultHeaderCellType\" data-linktype=\"relative-path\">DefaultHeaderCellType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Displayed\" data-linktype=\"relative-path\">Displayed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_HasDefaultCellStyle\" data-linktype=\"relative-path\">HasDefaultCellStyle</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_HeaderCellCore\" data-linktype=\"relative-path\">HeaderCellCore</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Index\" data-linktype=\"relative-path\">Index</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_IsRow\" data-linktype=\"relative-path\">IsRow</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_OnDataGridViewChanged\" data-linktype=\"relative-path\">OnDataGridViewChanged()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected\" data-linktype=\"relative-path\">Selected</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Tag\" data-linktype=\"relative-path\">Tag</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode\" data-linktype=\"relative-path\">AutoSizeMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_CellType\" data-linktype=\"relative-path\">CellType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ContextMenuStrip\" data-linktype=\"relative-path\">ContextMenuStrip</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName\" data-linktype=\"relative-path\">DataPropertyName</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DisplayIndex\" data-linktype=\"relative-path\">DisplayIndex</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DividerWidth\" data-linktype=\"relative-path\">DividerWidth</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_FillWeight\" data-linktype=\"relative-path\">FillWeight</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Frozen\" data-linktype=\"relative-path\">Frozen</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_GetPreferredWidth_System_Windows_Forms_DataGridViewAutoSizeColumnMode_System_Boolean_\" data-linktype=\"relative-path\">GetPreferredWidth(DataGridViewAutoSizeColumnMode, Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_HeaderCell\" data-linktype=\"relative-path\">HeaderCell</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_HeaderText\" data-linktype=\"relative-path\">HeaderText</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_InheritedAutoSizeMode\" data-linktype=\"relative-path\">InheritedAutoSizeMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_InheritedStyle\" data-linktype=\"relative-path\">InheritedStyle</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_IsDataBound\" data-linktype=\"relative-path\">IsDataBound</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_MinimumWidth\" data-linktype=\"relative-path\">MinimumWidth</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ReadOnly\" data-linktype=\"relative-path\">ReadOnly</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Resizable\" data-linktype=\"relative-path\">Resizable</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode\" data-linktype=\"relative-path\">SortMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ToolTipText\" data-linktype=\"relative-path\">ToolTipText</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ValueType\" data-linktype=\"relative-path\">ValueType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Visible\" data-linktype=\"relative-path\">Visible</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Width\" data-linktype=\"relative-path\">Width</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_DataGridView\" data-linktype=\"relative-path\">DataGridView</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentDoubleClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellValueChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellValueChanged(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseDataError_System_Windows_Forms_DataGridViewDataErrorEventArgs_\" data-linktype=\"relative-path\">RaiseDataError(DataGridViewDataErrorEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseWheel(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_State\" data-linktype=\"relative-path\">State</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use images to create a TicTacToe game.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#0\">using System.IO;\nusing System.Windows.Forms;\nusing System.Drawing;\nusing System;\n\npublic class TicTacToe : System.Windows.Forms.Form\n{\n    public TicTacToe()\n    {\n        blank = new Bitmap(new MemoryStream(blankImage));\n        x = new Bitmap(new MemoryStream(xImage));\n        o = new Bitmap(new MemoryStream(oImage));\n\n        this.AutoSize = true;\n        SetupButtons();\n        InitializeDataGridView(null, null);\n    }\n\n    private DataGridView dataGridView1;\n    private Button Button1 = new Button();\n    private Label turn = new Label();\n    private Button Button2 = new Button();\n    private Button Button3 = new Button();\n    private Button Button4 = new Button();\n    private Button Button5 = new Button();\n    private FlowLayoutPanel Panel1 = new FlowLayoutPanel();\n\n    #region &quot;bitmaps&quot;\n    private byte[] oImage = new byte[] {\n        0x42, 0x4D, 0xC6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, \n        0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0xB, 0x0, 0x0, 0x0, 0xA,\n        0x0, 0x0, 0x0, 0x1, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50,\n        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10,\n        0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n        0x0, 0x80, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x80, 0x0, \n        0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x80, 0x0, \n        0x0, 0xC0, 0xC0, 0xC0, 0x0, 0x80, 0x80, 0x80, 0x0, 0x0, 0x0,\n        0xFF, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0xFF, \n        0x0, 0x0, 0x0, 0xFF, 0x0, 0xFF, 0x0, 0xFF, 0xFF, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0x0, 0xFF, 0xFF, 0x0, 0xF, 0xFF, 0xF0, \n        0x0, 0x0, 0xFF, 0x0, 0xFF, 0xF0, 0xF, 0xF0, 0x0, 0x0, 0xF0, \n        0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xF0, 0xFF, 0xFF, \n        0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xF, 0xFF, 0xFF, 0xFF, 0xFF, \n        0x0, 0x0, 0x0, 0xF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0, 0x0, 0x0, \n        0xF0, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xF0, 0xFF, \n        0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xFF, 0x0, 0xFF, 0xF0, \n        0xF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0xF, 0xFF, 0xF0, 0x0, \n        0x0};\n\n    private byte[] xImage = new byte[]{\n        0x42, 0x4D, 0xC6, 0x0, 0x0, 0x0, 0x0, \n        0x0, 0x0, 0x0, 0x76, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, \n        0xB, 0x0, 0x0, 0x0, 0xA, 0x0, 0x0, 0x0, 0x1, 0x0, 0x4, 0x0, \n        0x0, 0x0, 0x0, 0x0, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n        0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, \n        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x80, \n        0x0, 0x0, 0x0, 0x80, 0x80, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, \n        0x0, 0x80, 0x0, 0x80, 0x80, 0x0, 0x0, 0xC0, 0xC0, 0xC0, 0x0,\n        0x80, 0x80, 0x80, 0x0, 0x0, 0x0, 0xFF, 0x0, 0x0, 0xFF, 0x0, \n        0x0, 0x0, 0xFF, 0xFF, 0x0, 0xFF, 0x0, 0x0, 0x0, 0xFF, 0x0, \n        0xFF, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0x0, \n        0xF0, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xFF, 0xF, \n        0xFF, 0xFF, 0xF, 0xF0, 0x0, 0x0, 0xFF, 0xF0, 0xFF, 0xF0, \n        0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xF, 0xF, 0xFF, 0xF0, 0x0,\n        0x0, 0xFF, 0xFF, 0xF, 0xF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF,\n        0xF, 0xF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xF0, 0xFF, 0xF0, \n        0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xF, 0xFF, 0xFF, 0xF, 0xF0, 0x0,\n        0x0, 0xF0, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xFF, \n        0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0};\n\n    private byte[] blankImage = new byte[] {\n        0x42, 0x4D, 0xC6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, \n        0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0xB, 0x0, 0x0, 0x0, 0xA,\n        0x0, 0x0, 0x0, 0x1, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50,\n        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10,\n        0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n        0x0, 0x80, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x80, 0x0, \n        0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x80, 0x0, \n        0x0, 0xC0, 0xC0, 0xC0, 0x0, 0x80, 0x80, 0x80, 0x0, 0x0, 0x0,\n        0xFF, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0xFF, \n        0x0, 0x0, 0x0, 0xFF, 0x0, 0xFF, 0x0, 0xFF, 0xFF, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, \n        0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, \n        0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, \n        0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, \n        0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, \n        0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, \n        0xFF, 0xF0, 0x0, 0x0};\n    #endregion\n\n    private Bitmap blank;\n    private Bitmap x;\n    private Bitmap o;\n    private string xString = &quot;X&#39;s turn&quot;;\n    private string oString = &quot;O&#39;s turn&quot;;\n    private string gameOverString = &quot;Game Over&quot;;\n    private int bitmapPadding = 6;\n\n    private void InitializeDataGridView(object sender,\n        EventArgs e)\n    {\n        this.Panel1.SuspendLayout();\n        this.SuspendLayout();\n\n        ConfigureForm();\n        SizeGrid();\n        CreateColumns();\n        CreateRows();\n\n        this.Panel1.ResumeLayout(false);\n        this.ResumeLayout(false);\n    }\n\n    private void ConfigureForm()\n    {\n        AutoSize = true;\n        turn.Size = new System.Drawing.Size(75, 34);\n        turn.TextAlign = ContentAlignment.MiddleLeft;\n        turn.Text = xString;\n\n        Panel1.Location = new System.Drawing.Point(0, 8);\n        Panel1.Size = new System.Drawing.Size(120, 196);\n        Panel1.FlowDirection = FlowDirection.TopDown;\n\n        ClientSize = new System.Drawing.Size(355, 200);\n        Controls.Add(this.Panel1);\n        Text = &quot;TicTacToe&quot;;\n\n        dataGridView1 = new System.Windows.Forms.DataGridView();\n        dataGridView1.Location = new Point(120, 0);\n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.CellClick += new\n            DataGridViewCellEventHandler(dataGridView1_CellClick);\n        dataGridView1.CellMouseEnter += new\n            DataGridViewCellEventHandler(dataGridView1_CellMouseEnter);\n        dataGridView1.CellMouseLeave += new\n            DataGridViewCellEventHandler(dataGridView1_CellMouseLeave);\n\n        Controls.Add(dataGridView1);\n    }\n\n    private void SetupButtons()\n    {\n        Button1.AutoSize = true;\n        SetupButton(Button1, &quot;Restart&quot;, new EventHandler(Reset));\n        Panel1.Controls.Add(turn);\n        SetupButton(Button2, &quot;Increase Cell Size&quot;, new EventHandler(MakeCellsLarger));\n        SetupButton(Button3, &quot;Stretch Images&quot;, new EventHandler(Stretch));\n        SetupButton(Button4, &quot;Zoom Images&quot;, new EventHandler(ZoomToImage));\n        SetupButton(Button5, &quot;Normal Images&quot;, new EventHandler(NormalImage));\n    }\n\n    private void SetupButton(Button button, string buttonLabel, EventHandler handler)\n    {\n        Panel1.Controls.Add(button);\n        button.Text = buttonLabel;\n        button.AutoSize = true;\n        button.Click += handler;\n    }\n\n    private void CreateColumns()\n    {\n        DataGridViewImageColumn imageColumn;\n        int columnCount = 0;\n        do\n        {\n            Bitmap unMarked = blank;\n            imageColumn = new DataGridViewImageColumn();\n\n            //Add twice the padding for the left and \n            //right sides of the cell.\n            imageColumn.Width = x.Width + 2 * bitmapPadding + 1;\n\n            imageColumn.Image = unMarked;\n            dataGridView1.Columns.Add(imageColumn);\n            columnCount = columnCount + 1;\n        }\n        while (columnCount &lt; 3);\n    }\n\n    private void CreateRows()\n    {\n        dataGridView1.Rows.Add();\n        dataGridView1.Rows.Add();\n        dataGridView1.Rows.Add();\n    }\n\n    private void SizeGrid()\n    {\n        dataGridView1.ColumnHeadersVisible = false;\n        dataGridView1.RowHeadersVisible = false;\n        dataGridView1.AllowUserToResizeColumns = false;;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.BorderStyle = BorderStyle.None;\n\n        //Add twice the padding for the top of the cell \n        //and the bottom.\n        dataGridView1.RowTemplate.Height = x.Height +\n            2 * bitmapPadding + 1;\n\n        dataGridView1.AutoSize = true;\n    }\n\n    private void Reset(object sender, System.EventArgs e)\n    {\n        dataGridView1.Dispose();\n        InitializeDataGridView(null, null);\n    }\n\n    private void dataGridView1_CellClick(object sender,\n        DataGridViewCellEventArgs e)\n    {\n\n        if (turn.Text.Equals(gameOverString)) { return; }\n\n        DataGridViewImageCell cell = (DataGridViewImageCell)\n            dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex];\n\n        if (cell.Value == blank)\n        {\n            if (IsOsTurn())\n            {\n                cell.Value = o;\n            }\n            else\n            {\n                cell.Value = x;\n            }\n            ToggleTurn();\n        }\n        if (IsAWin())\n        {\n            turn.Text = gameOverString;\n        }\n    }\n\n    private void dataGridView1_CellMouseEnter(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        Bitmap markingUnderMouse = (Bitmap)dataGridView1.\n               Rows[e.RowIndex].\n               Cells[e.ColumnIndex].Value;\n\n        if (markingUnderMouse == blank)\n        {\n            dataGridView1.Cursor = Cursors.Default;\n        }\n        else if (markingUnderMouse == o || markingUnderMouse == x)\n        {\n            dataGridView1.Cursor = Cursors.No;\n            ToolTip(e, true);\n        }\n    }\n\n    private void ToolTip(DataGridViewCellEventArgs e, bool showTip)\n    {\n        DataGridViewImageCell cell = (DataGridViewImageCell)\n            dataGridView1\n            .Rows[e.RowIndex].Cells[e.ColumnIndex];\n        DataGridViewImageColumn imageColumn =\n            (DataGridViewImageColumn)\n            dataGridView1.Columns[cell.ColumnIndex];\n\n        if (showTip) cell.ToolTipText = imageColumn.Description;\n        else { cell.ToolTipText = String.Empty; }\n    }\n\n    private void dataGridView1_CellMouseLeave(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        ToolTip(e, false);\n        dataGridView1.Cursor = Cursors.Default;\n    }\n\n    private void Stretch(object sender, EventArgs e)\n    {\n        foreach (DataGridViewImageColumn column in\n            dataGridView1.Columns)\n        {\n            column.ImageLayout = DataGridViewImageCellLayout.Stretch;\n            column.Description = &quot;Stretched&quot;;\n        }\n    }\n\n    private void ZoomToImage(object sender, EventArgs e)\n    {\n\n        foreach (DataGridViewImageColumn column in\n            dataGridView1.Columns)\n        {\n            column.ImageLayout = DataGridViewImageCellLayout.Zoom;\n            column.Description = &quot;Zoomed&quot;;\n        }\n    }\n\n    private void NormalImage(object sender, EventArgs e)\n    {\n\n        foreach (DataGridViewImageColumn column in\n            dataGridView1.Columns)\n        {\n            column.ImageLayout = DataGridViewImageCellLayout.Normal;\n            column.Description = &quot;Normal&quot;;\n        }\n    }\n\n    private void MakeCellsLarger(object sender, EventArgs e)\n    {\n        foreach (DataGridViewImageColumn column in\n            dataGridView1.Columns)\n        {\n            column.Width = column.Width * 2;\n        }\n        foreach (DataGridViewRow row in dataGridView1.Rows)\n        {\n            if (row.IsNewRow) break;\n            row.Height = (int)(row.Height * 1.5);\n        }\n    }\n\n    private bool IsAWin()\n    {\n        if (ARowIsSame() || AColumnIsSame() || ADiagonalIsSame())\n            return true;\n        else return false;\n    }\n\n    private bool ARowIsSame()\n    {\n        Bitmap marking = null;\n\n        foreach (DataGridViewRow row in dataGridView1.Rows)\n        {\n            if (row.IsNewRow) break;\n            marking = (Bitmap)row.Cells[0].Value;\n            if (marking != blank)\n            {\n                if (marking == row.Cells[1].Value &amp;&amp;\n                    marking == row.Cells[2].Value) return true;\n            }\n        }\n        return false;\n    }\n\n    private bool AColumnIsSame()\n    {\n        int columnIndex = 0;\n        Bitmap marking;\n        do\n        {\n            marking = (Bitmap)\n                dataGridView1.Rows[0].Cells[columnIndex].Value;\n            if (marking != blank)\n            {\n                if (marking == (Bitmap)dataGridView1.Rows[1]\n                    .Cells[columnIndex].Value\n                    &amp;&amp; marking == (Bitmap)dataGridView1.Rows[2].\n                    Cells[columnIndex].Value) return true;\n            }\n            columnIndex = columnIndex + 1;\n        }\n        while (columnIndex &lt; dataGridView1.Columns.GetColumnCount(\n            DataGridViewElementStates.Visible));\n        return false;\n    }\n\n    private bool ADiagonalIsSame()\n    {\n        if (LeftToRightDiagonalIsSame()) { return true; }\n        if (RightToLeftDiagonalIsSame()) { return true; }\n        return false;\n    }\n\n    private bool LeftToRightDiagonalIsSame()\n    {\n        return IsDiagonalSame(0, 2);\n    }\n\n    private bool RightToLeftDiagonalIsSame()\n    {\n        return IsDiagonalSame(2, 0);\n    }\n\n    private bool IsDiagonalSame(int startingColumn, int lastColumn)\n    {\n        Bitmap marking = (Bitmap)dataGridView1.Rows[0]\n            .Cells[startingColumn].Value;\n\n        if (marking == blank) return false;\n        if (marking == dataGridView1.Rows[1].Cells[1]\n            .Value &amp;&amp; marking == dataGridView1.Rows[2]\n            .Cells[lastColumn].Value) return true;\n\n        return false;\n    }\n\n    private void ToggleTurn()\n    {\n        if (turn.Text.Equals(xString)) { turn.Text = oString; }\n        else { turn.Text = xString; }\n    }\n\n    private bool IsOsTurn()\n    {\n        if (turn.Text.Equals(oString)) return true;\n        return false;\n    }\n\n    [STAThread]\n    public static void Main()\n    {\n        Application.Run(new TicTacToe());\n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#0\">#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;system.windows.forms.dll&gt;\n\nusing namespace System::IO;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\nusing namespace System;\npublic ref class TicTacToe: public System::Windows::Forms::Form\n{\npublic:\n   TicTacToe()\n      : Form()\n   {\n      oBytes = gcnew array&lt;Byte&gt;{\n        0x42, 0x4D, 0xC6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, \n        0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0xB, 0x0, 0x0, 0x0, 0xA,\n        0x0, 0x0, 0x0, 0x1, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50,\n        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10,\n        0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n        0x0, 0x80, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x80, 0x0, \n        0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x80, 0x0, \n        0x0, 0xC0, 0xC0, 0xC0, 0x0, 0x80, 0x80, 0x80, 0x0, 0x0, 0x0,\n        0xFF, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0xFF, \n        0x0, 0x0, 0x0, 0xFF, 0x0, 0xFF, 0x0, 0xFF, 0xFF, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0x0, 0xFF, 0xFF, 0x0, 0xF, 0xFF, 0xF0, \n        0x0, 0x0, 0xFF, 0x0, 0xFF, 0xF0, 0xF, 0xF0, 0x0, 0x0, 0xF0, \n        0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xF0, 0xFF, 0xFF, \n        0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xF, 0xFF, 0xFF, 0xFF, 0xFF, \n        0x0, 0x0, 0x0, 0xF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0, 0x0, 0x0, \n        0xF0, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xF0, 0xFF, \n        0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xFF, 0x0, 0xFF, 0xF0, \n        0xF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0xF, 0xFF, 0xF0, 0x0, \n        0x0};\n      xBytes = gcnew array&lt;Byte&gt;{\n        0x42, 0x4D, 0xC6, 0x0, 0x0, 0x0, 0x0, \n        0x0, 0x0, 0x0, 0x76, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, \n        0xB, 0x0, 0x0, 0x0, 0xA, 0x0, 0x0, 0x0, 0x1, 0x0, 0x4, 0x0, \n        0x0, 0x0, 0x0, 0x0, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n        0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, \n        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x80, \n        0x0, 0x0, 0x0, 0x80, 0x80, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, \n        0x0, 0x80, 0x0, 0x80, 0x80, 0x0, 0x0, 0xC0, 0xC0, 0xC0, 0x0,\n        0x80, 0x80, 0x80, 0x0, 0x0, 0x0, 0xFF, 0x0, 0x0, 0xFF, 0x0, \n        0x0, 0x0, 0xFF, 0xFF, 0x0, 0xFF, 0x0, 0x0, 0x0, 0xFF, 0x0, \n        0xFF, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0x0, \n        0xF0, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xFF, 0xF, \n        0xFF, 0xFF, 0xF, 0xF0, 0x0, 0x0, 0xFF, 0xF0, 0xFF, 0xF0, \n        0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xF, 0xF, 0xFF, 0xF0, 0x0,\n        0x0, 0xFF, 0xFF, 0xF, 0xF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF,\n        0xF, 0xF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xF0, 0xFF, 0xF0, \n        0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xF, 0xFF, 0xFF, 0xF, 0xF0, 0x0,\n        0x0, 0xF0, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x0, 0x0, 0xFF, \n        0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0};\n      blankBytes = gcnew array&lt;Byte&gt;{\n        0x42, 0x4D, 0xC6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, \n        0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0xB, 0x0, 0x0, 0x0, 0xA,\n        0x0, 0x0, 0x0, 0x1, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50,\n        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10,\n        0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n        0x0, 0x80, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x80, 0x0, \n        0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x80, 0x0, \n        0x0, 0xC0, 0xC0, 0xC0, 0x0, 0x80, 0x80, 0x80, 0x0, 0x0, 0x0,\n        0xFF, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0xFF, \n        0x0, 0x0, 0x0, 0xFF, 0x0, 0xFF, 0x0, 0xFF, 0xFF, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, \n        0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, \n        0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, \n        0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, \n        0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, \n        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, \n        0xFF, 0xFF, 0xFF, 0xF0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, \n        0xFF, 0xF0, 0x0, 0x0};\n      blank = gcnew Bitmap( gcnew MemoryStream( blankBytes ) );\n      x = gcnew Bitmap( gcnew MemoryStream( xBytes ) );\n      o = gcnew Bitmap( gcnew MemoryStream( oBytes ) );\n      this-&gt;AutoSize = true;\n      turn = gcnew Label;\n      Button1 = gcnew Button;\n      Button2 = gcnew Button;\n      Button3 = gcnew Button;\n      Button4 = gcnew Button;\n      Button5 = gcnew Button;\n      Panel1 = gcnew FlowLayoutPanel;\n\t  SetupButtons();\n      InitializeDataGridView( nullptr, nullptr );\n\n      xString = L&quot;X&#39;s turn&quot;;\n      oString = L&quot;O&#39;s turn&quot;;\n      gameOverString = L&quot;Game Over&quot;;\n      bitmapPadding = 6;\n   }\n\n\nprivate:\n   DataGridView^ dataGridView1;\n   Button^ Button1;\n   Label^ turn;\n   Button^ Button2;\n   Button^ Button3;\n   Button^ Button4;\n   Button^ Button5;\n   FlowLayoutPanel^ Panel1;\n\n#pragma region S &quot; bitmaps &quot; \n   array&lt;Byte&gt;^oBytes;\n   array&lt;Byte&gt;^xBytes;\n   array&lt;Byte&gt;^blankBytes;\n\n#pragma endregion \n   Bitmap^ blank;\n   Bitmap^ x;\n   Bitmap^ o;\n   String^ xString;\n   String^ oString;\n   String^ gameOverString;\n   int bitmapPadding;\n   void InitializeDataGridView( Object^ ignored, EventArgs^ e )\n   {\n      this-&gt;Panel1-&gt;SuspendLayout();\n      this-&gt;SuspendLayout();\n      ConfigureForm();\n      SizeGrid();\n      CreateColumns();\n      CreateRows();\n      this-&gt;Panel1-&gt;ResumeLayout( false );\n      this-&gt;ResumeLayout( false );\n   }\n\n   void ConfigureForm()\n   {\n      AutoSize = true;\n      turn-&gt;Size = System::Drawing::Size( 75, 34 );\n      turn-&gt;TextAlign = ContentAlignment::MiddleLeft;\n      Panel1-&gt;Location = System::Drawing::Point( 0, 8 );\n      Panel1-&gt;Size = System::Drawing::Size( 120, 196 );\n      Panel1-&gt;FlowDirection = FlowDirection::TopDown;\n      ClientSize = System::Drawing::Size( 355, 200 );\n      Controls-&gt;Add( this-&gt;Panel1 );\n      Text = L&quot;TicTacToe&quot;;\n      dataGridView1 = gcnew System::Windows::Forms::DataGridView;\n      dataGridView1-&gt;Location = Point(120,0);\n      dataGridView1-&gt;AllowUserToAddRows = false;\n      dataGridView1-&gt;CellClick += gcnew DataGridViewCellEventHandler( this, &amp;TicTacToe::dataGridView1_CellClick );\n      dataGridView1-&gt;CellMouseEnter += gcnew DataGridViewCellEventHandler( this, &amp;TicTacToe::dataGridView1_CellMouseEnter );\n      dataGridView1-&gt;CellMouseLeave += gcnew DataGridViewCellEventHandler( this, &amp;TicTacToe::dataGridView1_CellMouseLeave );\n      Controls-&gt;Add( dataGridView1 );\n      turn-&gt;Text = xString;\n      turn-&gt;AutoSize = true;\n   }\n\n   void SetupButtons()\n   {\n      Button1-&gt;AutoSize = true;\n      SetupButton( Button1, L&quot;Restart&quot;, gcnew EventHandler( this, &amp;TicTacToe::Reset ) );\n      Panel1-&gt;Controls-&gt;Add( turn );\n      SetupButton( Button2, L&quot;Increase Cell Size&quot;, gcnew EventHandler( this, &amp;TicTacToe::MakeCellsLarger ) );\n      SetupButton( Button3, L&quot;Stretch Images&quot;, gcnew EventHandler( this, &amp;TicTacToe::Stretch ) );\n      SetupButton( Button4, L&quot;Zoom Images&quot;, gcnew EventHandler( this, &amp;TicTacToe::ZoomToImage ) );\n      SetupButton( Button5, L&quot;Normal Images&quot;, gcnew EventHandler( this, &amp;TicTacToe::NormalImage ) );\n   }\n\n   void SetupButton( Button^ button, String^ buttonLabel, EventHandler^ handler )\n   {\n      Panel1-&gt;Controls-&gt;Add( button );\n      button-&gt;Text = buttonLabel;\n      button-&gt;AutoSize = true;\n      button-&gt;Click += handler;\n   }\n\n\n   void CreateColumns()\n   {\n      DataGridViewImageColumn^ imageColumn;\n      int columnCount = 0;\n      do\n      {\n         Bitmap^ unMarked = blank;\n         imageColumn = gcnew DataGridViewImageColumn;\n         \n         //Add twice the padding for the left and \n         //right sides of the cell.\n         imageColumn-&gt;Width = x-&gt;Width + 2 * bitmapPadding + 1;\n         imageColumn-&gt;Image = unMarked;\n         dataGridView1-&gt;Columns-&gt;Add( imageColumn );\n         columnCount = columnCount + 1;\n      }\n      while ( columnCount &lt; 3 );\n   }\n\n\n   void CreateRows()\n   {\n      dataGridView1-&gt;Rows-&gt;Add();\n      dataGridView1-&gt;Rows-&gt;Add();\n      dataGridView1-&gt;Rows-&gt;Add();\n   }\n\n\n   void SizeGrid()\n   {\n      dataGridView1-&gt;ColumnHeadersVisible = false;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;AllowUserToResizeColumns = false;\n      dataGridView1-&gt;AllowUserToResizeRows = false;\n      dataGridView1-&gt;BorderStyle = BorderStyle::None;\n      \n      //Add twice the padding for the top of the cell \n      //and the bottom.\n      dataGridView1-&gt;RowTemplate-&gt;Height = x-&gt;Height + 2 * bitmapPadding + 1;\n      dataGridView1-&gt;AutoSize = true;\n   }\n\n\n   void Reset( Object^ sender, System::EventArgs^ e )\n   {\n      dataGridView1-&gt;~DataGridView();\n      InitializeDataGridView( nullptr, nullptr );\n   }\n\n\n   void dataGridView1_CellClick( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      if ( turn-&gt;Equals( gameOverString ) )\n      {\n         return;\n      }\n\n      DataGridViewImageCell^ cell = dynamic_cast&lt;DataGridViewImageCell^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]);\n      if ( cell-&gt;Value == blank )\n      {\n         if ( IsOsTurn() )\n         {\n            cell-&gt;Value = o;\n         }\n         else\n         {\n            cell-&gt;Value = x;\n         }\n\n         ToggleTurn();\n      }\n\n      if ( IsAWin( cell ) )\n      {\n         turn-&gt;Text = gameOverString;\n      }\n   }\n\n\n   void dataGridView1_CellMouseEnter( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      Bitmap^ markingUnderMouse = dynamic_cast&lt;Bitmap^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]-&gt;Value);\n      if ( markingUnderMouse == blank )\n      {\n         dataGridView1-&gt;Cursor = Cursors::Default;\n      }\n      else\n      if ( markingUnderMouse == o || markingUnderMouse == x )\n      {\n         dataGridView1-&gt;Cursor = Cursors::No;\n         ToolTip(e,true);\n      }\n   }\n\n   void ToolTip( DataGridViewCellEventArgs^ e, bool showTip )\n   {\n      DataGridViewImageCell^ cell = dynamic_cast&lt;DataGridViewImageCell^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]);\n      DataGridViewImageColumn^ imageColumn = dynamic_cast&lt;DataGridViewImageColumn^&gt;(dataGridView1-&gt;Columns[ cell-&gt;ColumnIndex ]);\n      if ( showTip )\n            cell-&gt;ToolTipText = imageColumn-&gt;Description;\n      else\n      {\n         cell-&gt;ToolTipText = String::Empty;\n      }\n   }\n\n   void dataGridView1_CellMouseLeave( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      ToolTip( e, false );\n      dataGridView1-&gt;Cursor = Cursors::Default;\n   }\n\n\n   void Stretch( Object^ sender, EventArgs^ e )\n   {\n      System::Collections::IEnumerator^ myEnum = dataGridView1-&gt;Columns-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         DataGridViewImageColumn^ column = safe_cast&lt;DataGridViewImageColumn^&gt;(myEnum-&gt;Current);\n         column-&gt;ImageLayout = DataGridViewImageCellLayout::Stretch;\n         column-&gt;Description = L&quot;Stretched&quot;;\n      }\n   }\n\n   void ZoomToImage( Object^ sender, EventArgs^ e )\n   {\n      System::Collections::IEnumerator^ myEnum1 = dataGridView1-&gt;Columns-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DataGridViewImageColumn^ column = safe_cast&lt;DataGridViewImageColumn^&gt;(myEnum1-&gt;Current);\n         column-&gt;ImageLayout = DataGridViewImageCellLayout::Zoom;\n         column-&gt;Description = L&quot;Zoomed&quot;;\n      }\n   }\n\n   void NormalImage( Object^ sender, EventArgs^ e )\n   {\n      System::Collections::IEnumerator^ myEnum2 = dataGridView1-&gt;Columns-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         DataGridViewImageColumn^ column = safe_cast&lt;DataGridViewImageColumn^&gt;(myEnum2-&gt;Current);\n         column-&gt;ImageLayout = DataGridViewImageCellLayout::Normal;\n         column-&gt;Description = L&quot;Normal&quot;;\n      }\n   }\n\n\n   void MakeCellsLarger( Object^ sender, EventArgs^ e )\n   {\n      System::Collections::IEnumerator^ myEnum3 = dataGridView1-&gt;Columns-&gt;GetEnumerator();\n      while ( myEnum3-&gt;MoveNext() )\n      {\n         DataGridViewImageColumn^ column = safe_cast&lt;DataGridViewImageColumn^&gt;(myEnum3-&gt;Current);\n         column-&gt;Width = column-&gt;Width * 2;\n      }\n\n      System::Collections::IEnumerable^ temp = safe_cast&lt;System::Collections::IEnumerable^&gt;(dataGridView1-&gt;Rows);\n      System::Collections::IEnumerator^ myEnum4 = temp-&gt;GetEnumerator();\n\n      //System::Collections::IEnumerator^ myEnum4 = dataGridView1-&gt;Rows-&gt;GetEnumerator();\n      while ( myEnum4-&gt;MoveNext() )\n      {\n         DataGridViewRow^ row = safe_cast&lt;DataGridViewRow^&gt;(myEnum4-&gt;Current);\n         if ( row-&gt;IsNewRow )\n                  break;\n         row-&gt;Height = (int)(row-&gt;Height * 1.5);\n      }\n   }\n\n   bool IsAWin( DataGridViewCell^ cell )\n   {\n      if ( ARowIsSame() || AColumnIsSame() || ADiagonalIsSame() )\n            return true;\n      else\n            return false;\n   }\n\n   bool ARowIsSame()\n   {\n      Bitmap^ marking = nullptr;\n      System::Collections::IEnumerable^ temp = safe_cast&lt;System::Collections::IEnumerable^&gt;(dataGridView1-&gt;Rows);\n      System::Collections::IEnumerator^ myEnum5 = temp-&gt;GetEnumerator();\n      //System::Collections::IEnumerator^ myEnum5 = dataGridView1-&gt;Rows-&gt;GetEnumerator();\n      while ( myEnum5-&gt;MoveNext() )\n      {\n         DataGridViewRow^ row = safe_cast&lt;DataGridViewRow^&gt;(myEnum5-&gt;Current);\n         if ( row-&gt;IsNewRow )\n                  break;\n\n         marking = dynamic_cast&lt;Bitmap^&gt;(row-&gt;Cells[ 0 ]-&gt;Value);\n         if ( marking != blank )\n         {\n            if ( marking == row-&gt;Cells[ 1 ]-&gt;Value &amp;&amp; marking == row-&gt;Cells[ 2 ]-&gt;Value )\n                        return true;\n         }\n      }\n\n      return false;\n   }\n\n   bool AColumnIsSame()\n   {\n      int columnIndex = 0;\n      Bitmap^ marking;\n      do\n      {\n         marking = dynamic_cast&lt;Bitmap^&gt;(dataGridView1-&gt;Rows[ 0 ]-&gt;Cells[ columnIndex ]-&gt;Value);\n         if ( marking != blank )\n         {\n            if ( marking == dynamic_cast&lt;Bitmap^&gt;(dataGridView1-&gt;Rows[ 1 ]-&gt;Cells[ columnIndex ]-&gt;Value) &amp;&amp; marking == dynamic_cast&lt;Bitmap^&gt;(dataGridView1-&gt;Rows[ 2 ]-&gt;Cells[ columnIndex ]-&gt;Value) )\n                        return true;\n         }\n\n         columnIndex = columnIndex + 1;\n      }\n      while ( columnIndex &lt; dataGridView1-&gt;Columns-&gt;GetColumnCount( DataGridViewElementStates::Visible ) );\n\n      return false;\n   }\n\n   bool ADiagonalIsSame()\n   {\n      if ( LeftToRightDiagonalIsSame() )\n      {\n         return true;\n      }\n\n      if ( RightToLeftDiagonalIsSame() )\n      {\n         return true;\n      }\n\n      return false;\n   }\n\n   bool LeftToRightDiagonalIsSame()\n   {\n      return IsDiagonalSame( 0, 2 );\n   }\n\n   bool RightToLeftDiagonalIsSame()\n   {\n      return IsDiagonalSame( 2, 0 );\n   }\n\n   bool IsDiagonalSame( int startingColumn, int lastColumn )\n   {\n      Bitmap^ marking = dynamic_cast&lt;Bitmap^&gt;(dataGridView1-&gt;Rows[ 0 ]-&gt;Cells[ startingColumn ]-&gt;Value);\n      if ( marking == blank )\n            return false;\n\n      if ( marking == dataGridView1-&gt;Rows[ 1 ]-&gt;Cells[ 1 ]-&gt;Value &amp;&amp; marking == dataGridView1-&gt;Rows[ 2 ]-&gt;Cells[ lastColumn ]-&gt;Value )\n            return true;\n\n      return false;\n   }\n\n   void ToggleTurn()\n   {\n      if ( turn-&gt;Text-&gt;Equals( xString ) )\n      {\n         turn-&gt;Text = oString;\n      }\n      else\n      {\n         turn-&gt;Text = xString;\n      }\n   }\n\n   bool IsOsTurn()\n   {\n      if ( turn-&gt;Text-&gt;Equals( oString ) )\n            return true;\n\n      return false;\n   }\n\n\npublic:\n\n   [STAThread]\n   static void Main()\n   {\n      Application::Run( gcnew TicTacToe );\n   }\n\n};\n\nint main()\n{\n   TicTacToe::Main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#0\">Imports System.IO\nImports System.Windows.Forms\nImports System.Drawing\nImports System\n\nPublic Class TicTacToe\n    Inherits System.Windows.Forms.Form\n\n    Friend WithEvents dataGridView1 As DataGridView\n    Friend WithEvents Button1 As Button = New Button()\n    Friend WithEvents turn As Label = New Label()\n    Friend WithEvents Button2 As Button = New Button()\n    Friend WithEvents Button3 As Button = New Button()\n    Friend WithEvents Button4 As Button = New Button()\n    Friend WithEvents Button5 As Button = New Button()\n    Friend WithEvents Panel1 As FlowLayoutPanel = New FlowLayoutPanel()\n\n#Region &quot;bitmaps&quot;\n    Private oImage As Byte() = { _\n        &amp;H42, &amp;H4D, &amp;HC6, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H76, &amp;H0, &amp;H0, &amp;H0, &amp;H28, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;HB, &amp;H0, &amp;H0, &amp;H0, &amp;HA, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H1, &amp;H0, &amp;H4, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H50, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H10, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H10, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H80, &amp;H0, &amp;H0, &amp;H80, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H80, &amp;H80, &amp;H0, &amp;H80, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H80, &amp;H0, &amp;H80, &amp;H0, &amp;H80, &amp;H80, _\n        &amp;H0, &amp;H0, &amp;HC0, &amp;HC0, &amp;HC0, &amp;H0, &amp;H80, &amp;H80, _\n        &amp;H80, &amp;H0, &amp;H0, &amp;H0, &amp;HFF, &amp;H0, &amp;H0, &amp;HFF, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, &amp;H0, &amp;HFF, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;HFF, &amp;H0, &amp;HFF, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, &amp;HFF, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;H0, &amp;HF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;H0, _\n        &amp;HFF, &amp;HF0, &amp;HF, &amp;HF0, &amp;H0, &amp;H0, &amp;HF0, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HF0, &amp;HF0, &amp;H0, &amp;H0, &amp;HF0, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HF0, &amp;HF0, &amp;H0, &amp;H0, &amp;HF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;H0, &amp;H0, &amp;H0, &amp;HF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;H0, &amp;H0, &amp;H0, &amp;HF0, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HF0, &amp;HF0, &amp;H0, &amp;H0, &amp;HF0, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HF0, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;H0, _\n        &amp;HFF, &amp;HF0, &amp;HF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;H0, &amp;HF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0}\n\n    Private xImage As Byte() = { _\n        &amp;H42, &amp;H4D, &amp;HC6, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H76, &amp;H0, &amp;H0, &amp;H0, &amp;H28, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;HB, &amp;H0, &amp;H0, &amp;H0, &amp;HA, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H1, &amp;H0, &amp;H4, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H50, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H10, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H10, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H80, &amp;H0, &amp;H0, &amp;H80, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H80, &amp;H80, &amp;H0, &amp;H80, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H80, &amp;H0, &amp;H80, &amp;H0, &amp;H80, &amp;H80, _\n        &amp;H0, &amp;H0, &amp;HC0, &amp;HC0, &amp;HC0, &amp;H0, &amp;H80, &amp;H80, _\n        &amp;H80, &amp;H0, &amp;H0, &amp;H0, &amp;HFF, &amp;H0, &amp;H0, &amp;HFF, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, &amp;H0, &amp;HFF, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;HFF, &amp;H0, &amp;HFF, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, &amp;HFF, &amp;H0, &amp;HF0, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HF0, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HF, _\n        &amp;HFF, &amp;HFF, &amp;HF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HF0, _\n        &amp;HFF, &amp;HF0, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HF, &amp;HF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HF, &amp;HF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HF, &amp;HF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HF0, _\n        &amp;HFF, &amp;HF0, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HF, _\n        &amp;HFF, &amp;HFF, &amp;HF, &amp;HF0, &amp;H0, &amp;H0, &amp;HF0, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HF0, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0}\n\n    Private blankImage As Byte() = { _\n        &amp;H42, &amp;H4D, &amp;HC6, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H76, &amp;H0, &amp;H0, &amp;H0, &amp;H28, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;HB, &amp;H0, &amp;H0, &amp;H0, &amp;HA, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H1, &amp;H0, &amp;H4, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H50, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H10, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H10, &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H0, &amp;H80, &amp;H0, &amp;H0, &amp;H80, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;H80, &amp;H80, &amp;H0, &amp;H80, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;H80, &amp;H0, &amp;H80, &amp;H0, &amp;H80, &amp;H80, _\n        &amp;H0, &amp;H0, &amp;HC0, &amp;HC0, &amp;HC0, &amp;H0, &amp;H80, &amp;H80, _\n        &amp;H80, &amp;H0, &amp;H0, &amp;H0, &amp;HFF, &amp;H0, &amp;H0, &amp;HFF, _\n        &amp;H0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, &amp;H0, &amp;HFF, &amp;H0, _\n        &amp;H0, &amp;H0, &amp;HFF, &amp;H0, &amp;HFF, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, &amp;HFF, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0, &amp;HFF, &amp;HFF, _\n        &amp;HFF, &amp;HFF, &amp;HFF, &amp;HF0, &amp;H0, &amp;H0}\n#End Region\n\n    Private blank As Bitmap = New Bitmap( _\n        New MemoryStream(blankImage))\n    Private x As Bitmap = New Bitmap(New MemoryStream(xImage))\n    Private o As Bitmap = New Bitmap(New MemoryStream(oImage))\n    Private xString As String = &quot;X&#39;s turn&quot;\n    Private oString As String = &quot;O&#39;s turn&quot;\n    Private gameOverString As String = &quot;Game Over&quot;\n    Private bitmapPadding As Integer = 6\n\n    Private Sub InitializeDataGridView(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Me.Load\n        SuspendLayout()\n        Panel1.SuspendLayout()\n\n        ConfigureForm()\n        SizeGrid()\n        CreateColumns()\n        CreateRows()\n\n        ResumeLayout(False)\n        Panel1.ResumeLayout(False)\n    End Sub\n\n    Private Sub ConfigureForm()\n        AutoSize = True\n        turn.Size = New System.Drawing.Size(75, 34)\n        turn.TextAlign = ContentAlignment.MiddleLeft\n        turn.Text = xString\n\n        Panel1.FlowDirection = FlowDirection.TopDown\n        Panel1.Location = New System.Drawing.Point(0, 8)\n        Panel1.Size = New System.Drawing.Size(120, 196)\n\n        ClientSize = New System.Drawing.Size(355, 200)\n        Controls.Add(Me.Panel1)\n        Text = &quot;TicTacToe&quot;\n\n        dataGridView1 = New System.Windows.Forms.DataGridView\n        dataGridView1.Location = New Point(120, 0)\n        dataGridView1.AllowUserToAddRows = False\n        Controls.Add(dataGridView1)\n        SetupButtons()\n    End Sub\n\n    Private Sub SetupButtons()\n        SetupButton(Button1, &quot;Restart&quot;)\n        Panel1.Controls.Add(Me.turn)\n        SetupButton(Button2, &quot;Increase Cell Size&quot;)\n        SetupButton(Button3, &quot;Stretch Images&quot;)\n        SetupButton(Button4, &quot;Zoom Images&quot;)\n        SetupButton(Button5, &quot;Normal Images&quot;)\n    End Sub\n\n    Private Sub SetupButton(ByVal button As Button, _\n        ByVal buttonLabel As String)\n\n        Panel1.Controls.Add(button)\n        button.Text = buttonLabel\n        button.AutoSize = True\n\n    End Sub\n\n    Private Sub CreateColumns()\n\n        Dim imageColumn As DataGridViewImageColumn\n        Dim columnCount As Integer = 0\n        Do\n            Dim unMarked As Bitmap = blank\n            imageColumn = New DataGridViewImageColumn()\n\n            &#39; Add twice the padding for the left and \n            &#39; right sides of the cell.\n            imageColumn.Width = x.Width + 2 * bitmapPadding + 1\n\n            imageColumn.Image = unMarked\n            imageColumn.ImageLayout = DataGridViewImageCellLayout.NotSet\n            imageColumn.Description = &quot;default image layout&quot;\n            dataGridView1.Columns.Add(imageColumn)\n            columnCount = columnCount + 1\n        Loop While columnCount &lt; 3\n    End Sub\n\n    Private Sub CreateRows()\n        dataGridView1.Rows.Add()\n        dataGridView1.Rows.Add()\n        dataGridView1.Rows.Add()\n    End Sub\n\n    Private Sub SizeGrid()\n        dataGridView1.ColumnHeadersVisible = False\n        dataGridView1.RowHeadersVisible = False\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.BorderStyle = BorderStyle.None\n\n        &#39; Add twice the padding for the top and bottom of the cell. \n        dataGridView1.RowTemplate.Height = x.Height + _\n            2 * bitmapPadding + 1\n\n        dataGridView1.AutoSize = True\n    End Sub\n\n    Private Sub reset(ByVal sender As Object, _\n        ByVal e As EventArgs) _\n        Handles Button1.Click\n\n        dataGridView1.Dispose()\n        InitializeDataGridView(Nothing, Nothing)\n    End Sub\n\n    Private Sub dataGridView1_CellClick(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellClick\n\n        If turn.Text.Equals(gameOverString) Then Return\n\n        Dim cell As DataGridViewImageCell = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n                Cells(e.ColumnIndex), DataGridViewImageCell)\n        If (cell.Value Is blank) Then\n            If IsOsTurn() Then\n                cell.Value = o\n            Else\n                cell.Value = x\n            End If\n            ToggleTurn()\n            ToolTip(e)\n        End If\n        If IsAWin() Then\n            turn.Text = gameOverString\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellMouseEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseEnter\n\n        Dim markingUnderMouse As Bitmap = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n                Cells(e.ColumnIndex).Value, Bitmap)\n\n        If markingUnderMouse Is blank Then\n            dataGridView1.Cursor = Cursors.Default\n        ElseIf markingUnderMouse Is o OrElse markingUnderMouse Is x Then\n            dataGridView1.Cursor = Cursors.No\n            ToolTip(e)\n        End If\n    End Sub\n\n    Private Sub ToolTip( _\n        ByVal e As DataGridViewCellEventArgs)\n\n        Dim cell As DataGridViewImageCell = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n            Cells(e.ColumnIndex), DataGridViewImageCell)\n        Dim imageColumn As DataGridViewImageColumn = _\n            CType(dataGridView1.Columns(cell.ColumnIndex), _\n            DataGridViewImageColumn)\n\n        cell.ToolTipText = imageColumn.Description\n    End Sub\n\n    Private Sub dataGridView1_CellMouseLeave(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseLeave\n\n        dataGridView1.Cursor = Cursors.Default\n    End Sub\n\n    Private Sub Stretch(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button3.Click\n\n        For Each column As DataGridViewImageColumn _\n            In dataGridView1.Columns\n            column.ImageLayout = DataGridViewImageCellLayout.Stretch\n            column.Description = &quot;Stretched image layout&quot;\n        Next\n    End Sub\n\n    Private Sub ZoomToImage(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button4.Click\n\n        For Each column As DataGridViewImageColumn _\n            In dataGridView1.Columns\n            column.ImageLayout = DataGridViewImageCellLayout.Zoom\n            column.Description = &quot;Zoomed image layout&quot;\n        Next\n    End Sub\n\n    Private Sub NormalImage(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button5.Click\n\n        For Each column As DataGridViewImageColumn _\n            In dataGridView1.Columns\n            column.ImageLayout = DataGridViewImageCellLayout.Normal\n            column.Description = &quot;Normal image layout&quot;\n        Next\n    End Sub\n\n    Private Sub MakeCellsLarger(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button2.Click\n\n        For Each column As DataGridViewImageColumn _\n            In dataGridView1.Columns\n            column.Width = column.Width * 2\n        Next\n        For Each row As DataGridViewRow In dataGridView1.Rows\n            If row.IsNewRow Then Continue For\n            row.Height = CInt(row.Height * 1.5)\n        Next\n    End Sub\n\n    Private Function IsAWin() As Boolean\n        If ARowIsSame() OrElse AColumnIsSame() OrElse ADiagonalIsSame() Then\n            Return True\n        Else \n            Return False\n        End If\n    End Function\n\n    Private Function ARowIsSame() As Boolean\n        Dim marking As Bitmap = Nothing\n        If marking Is blank Then Return False\n        For Each row As DataGridViewRow In dataGridView1.Rows\n            If row.IsNewRow Then Continue For\n            marking = CType(row.Cells(0).Value, Bitmap)\n            If marking IsNot blank Then\n                If marking Is row.Cells(1).Value AndAlso _\n                    marking Is row.Cells(2).Value Then Return True\n            End If\n        Next\n        Return False\n    End Function\n\n    Private Function AColumnIsSame() As Boolean\n\n        Dim columnIndex As Integer = 0\n        Dim marking As Bitmap\n        Do\n            marking = CType(dataGridView1.Rows(0).Cells(columnIndex).Value, _\n                Bitmap)\n            If marking IsNot blank Then\n                If marking Is _\n                    dataGridView1.Rows(1).Cells(columnIndex).Value _\n                    AndAlso marking Is _\n                    dataGridView1.Rows(2).Cells(columnIndex).Value _\n                    Then Return True\n            End If\n            columnIndex = columnIndex + 1\n        Loop While columnIndex &lt; _\n            dataGridView1.Columns.GetColumnCount( _\n            DataGridViewElementStates.Visible)\n        Return False\n    End Function\n\n    Private Function ADiagonalIsSame() As Boolean\n\n        If LeftToRightDiagonalIsSame() Then Return True\n        If RightToLeftDiagonalIsSame() Then Return True\n        Return False\n    End Function\n\n    Private Function LeftToRightDiagonalIsSame() As Boolean\n        Return IsDiagonalSame(0, 2)\n    End Function\n\n    Private Function RightToLeftDiagonalIsSame() As Boolean\n        Return IsDiagonalSame(2, 0)\n    End Function\n\n    Private Function IsDiagonalSame(ByVal startingColumn As Integer, _\n        ByVal lastColumn As Integer) As Boolean\n\n        Dim marking As Bitmap = CType( _\n            dataGridView1.Rows(0).Cells(startingColumn).Value, Bitmap)\n        If marking Is blank Then Return False\n        If marking Is dataGridView1.Rows(1).Cells(1).Value AndAlso _\n            marking Is dataGridView1.Rows(2).Cells(lastColumn).Value _\n            Then Return True\n    End Function\n\n    Private Sub ToggleTurn()\n        If turn.Text.Equals(xString) Then turn.Text = oString _\n        Else turn.Text = xString\n    End Sub\n\n    Private Function IsOsTurn() As Boolean\n        If turn.Text.Equals(oString) Then Return True _\n        Else  : Return False\n    End Function\n\n    &lt;STAThread&gt; Public Shared Sub Main()\n        Application.Run(New TicTacToe())\n    End Sub\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The DataGridViewImageColumn class is a specialized type of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> class used to logically host cells that display images. A DataGridViewImageColumn has an associated <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell\" data-linktype=\"relative-path\">DataGridViewImageCell</a> in every <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> that intersects it. Each cell is capable of containing an <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> or an <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>, depending on the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property. Displaying icons is useful to accommodate images with transparency.  </p>\n<p> By default, empty cells display a default error graphic. To prevent this graphic from appearing for cell values equal to <code>null</code> or <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">System.DBNull.Value</a>, set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property of the cell style object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property to <code>null</code> before adding rows to the control. This does not affect the row for new records, however. To prevent the error graphic from appearing in the row for new records when the control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRows_\" data-linktype=\"relative-path\">AllowUserToAddRows</a> property value is <code>true</code>, you must also either explicitly set the cell value to <code>null</code> in a handler for the control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsAdded\" data-linktype=\"relative-path\">RowsAdded</a> event or set the column <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property to an instance of a <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell\" data-linktype=\"relative-path\">DataGridViewImageCell</a>-derived type with an overridden <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_DefaultNewRowValue_\" data-linktype=\"relative-path\">DefaultNewRowValue</a> property that returns <code>null</code>.  </p>\n<p> The default sort mode for this column type is <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataGridViewImageColumn()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn\" data-linktype=\"relative-path\">DataGridViewImageColumn</a> class, configuring it for use with cell values of type <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataGridViewImageColumn ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.drawing.toolboxbitmapattribute\" title=\"System.Drawing.ToolboxBitmapAttribute\" data-linktype=\"relative-path\">ToolboxBitmapAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor calls <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn__ctor_System_Boolean_\" data-linktype=\"relative-path\">DataGridViewImageColumn(Boolean)</a> with a <code>valuesAreIcons</code> parameter value of <code>false</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn__ctor_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataGridViewImageColumn(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn\" data-linktype=\"relative-path\">DataGridViewImageColumn</a> class, optionally configuring it for use with <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> cell values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataGridViewImageColumn (bool valuesAreIcons);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>valuesAreIcons</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to indicate that the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Value*</span> property of cells in this column will be set to values of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>; <code>false</code> to indicate that they will be set to values of type <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.drawing.toolboxbitmapattribute\" title=\"System.Drawing.ToolboxBitmapAttribute\" data-linktype=\"relative-path\">ToolboxBitmapAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes the column by setting the following properties.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a></td>\n<td>A new <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell\" data-linktype=\"relative-path\">DataGridViewImageCell</a> with its <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property initialized to the <code>valuesAreIcons</code> parameter value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons_\" data-linktype=\"relative-path\">ValuesAreIcons</a></td>\n<td>The value of the <code>valuesAreIcons</code> parameter.</td>\n</tr>\n<tr>\n<td>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property.</td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcontentalignment\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewContentAlignment</a></td>\n</tr>\n<tr>\n<td>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property.</td>\n<td>A standard error graphic of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> if <code>valuesAreIcons</code> is <code>true</code> and type <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a> if <code>valuesAreIcons</code> is <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> To ensure that the alpha channel of <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> cell values is painted correctly, use this constructor with a <code>valuesAreIcons</code> parameter value of <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_CellTemplate_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_CellTemplate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CellTemplate</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the template used to create new cells.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that all other cells in the column are modeled after.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.browsableattribute\" title=\"System.ComponentModel.BrowsableAttribute\" data-linktype=\"relative-path\">BrowsableAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.designerserializationvisibilityattribute\" title=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\" data-linktype=\"relative-path\">DesignerSerializationVisibilityAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The set type is not compatible with type <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell\" data-linktype=\"relative-path\">DataGridViewImageCell</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The constructors for the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn\" data-linktype=\"relative-path\">DataGridViewImageColumn</a> class initialize this property to a newly created <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell\" data-linktype=\"relative-path\">DataGridViewImageCell</a>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Changing the properties of the cell template will not immediately affect the user interface (UI) of the column&#39;s existing cells. These changes are only apparent after the column is regenerated (for example, by sorting the column or through a call to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_InvalidateColumn_\" data-linktype=\"relative-path\">InvalidateColumn</a> method).</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_DefaultCellStyle_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_DefaultCellStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultCellStyle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the column&#39;s default cell style.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to be applied as the default style.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.browsableattribute\" title=\"System.ComponentModel.BrowsableAttribute\" data-linktype=\"relative-path\">BrowsableAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by this property has the following initial property values:  </p>\n<table>\n<thead>\n<tr>\n<th><code>DataGridViewCellStyle</code> property</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Alignment_\" data-linktype=\"relative-path\">Alignment</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcontentalignment\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewContentAlignment</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a></td>\n<td>A standard error graphic of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> if the initial <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons_\" data-linktype=\"relative-path\">ValuesAreIcons</a> property value is <code>true</code>; otherwise, a standard error graphic of type <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a>.</td>\n</tr>\n</tbody>\n</table>\n<p> These values override the value specified in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, but may be overridden by other cell style properties. For more information, see <a href=\"../topic/cell%20styles%20in%20the%20windows%20forms%20datagridview%20control\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.  </p>\n<p> To prevent the standard error graphic from appearing for <code>null</code> or <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">System.DBNull.Value</a> cell values, set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property for this cell style object to <code>null</code> or your own error graphic before adding rows to the control. This does not affect the row for new records, however. To prevent the error graphic from appearing in the row for new records when the control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRows_\" data-linktype=\"relative-path\">AllowUserToAddRows</a> property value is <code>true</code>, you must also either explicitly set the cell value to <code>null</code> or your own error graphic in a handler for the control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsAdded\" data-linktype=\"relative-path\">RowsAdded</a> event or set the column <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property to an instance of a <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell\" data-linktype=\"relative-path\">DataGridViewImageCell</a>-derived type with an overridden <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_DefaultNewRowValue_\" data-linktype=\"relative-path\">DefaultNewRowValue</a> property that returns <code>null</code> or your own error graphic.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property of the object returned by the DefaultCellStyle property has a value equal to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a>, changing the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons_\" data-linktype=\"relative-path\">ValuesAreIcons</a> property value to <code>true</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>. If <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> has a value equal to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>, changing the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons_\" data-linktype=\"relative-path\">ValuesAreIcons</a> property value to <code>false</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_Description_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_Description\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Description</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a string that describes the column&#39;s image.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Description { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The textual description of the column image. The default is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.browsableattribute\" title=\"System.ComponentModel.BrowsableAttribute\" data-linktype=\"relative-path\">BrowsableAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.defaultvalueattribute\" title=\"System.ComponentModel.DefaultValueAttribute\" data-linktype=\"relative-path\">DefaultValueAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewImageColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use the Description property to describe the image provided by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_Image_\" data-linktype=\"relative-path\">Image</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_Icon_\" data-linktype=\"relative-path\">Icon</a> property. This description provides an accessible alternative to the image. Additionally, the description text is used when the cell value is copied onto the Clipboard.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_Description_\" data-linktype=\"relative-path\">Description</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_Description_\" data-linktype=\"relative-path\">Description</a> property of every cell in the column. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_Icon_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_Icon\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Icon</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the icon displayed in the cells of this column when the cell&#39;s <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Value*</span> property is not set and the cell&#39;s <span class=\"xref\">stem.Windows.Forms.DataGridViewImageCell.ValueIsIcon*</span> property is set to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Icon Icon { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> to display. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.browsableattribute\" title=\"System.ComponentModel.BrowsableAttribute\" data-linktype=\"relative-path\">BrowsableAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.designerserializationvisibilityattribute\" title=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\" data-linktype=\"relative-path\">DesignerSerializationVisibilityAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Icon property specifies an icons that is displayed in cells with no values when the column is not data-bound and the cell&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property is set to <code>true</code>. For a data-bound column whose cells do not have an associated image, a standard error graphic is displayed.  </p>\n<p> Using the Icon property rather than the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_Image_\" data-linktype=\"relative-path\">Image</a> property ensures that an alpha channel in an icon is painted correctly. If you want to display an <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> instead of an <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>, set the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_Image_\" data-linktype=\"relative-path\">Image</a> property instead and set the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons_\" data-linktype=\"relative-path\">ValuesAreIcons</a> property to <code>false</code>. You can also set the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property of individual cells to indicate whether the cell displays the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_Image_\" data-linktype=\"relative-path\">Image</a> or the Icon property value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_Image_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_Image\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Image</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the image displayed in the cells of this column when the cell&#39;s <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Value*</span> property is not set and the cell&#39;s <span class=\"xref\">stem.Windows.Forms.DataGridViewImageCell.ValueIsIcon*</span> property is set to <code>false</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Image Image { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to display. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.defaultvalueattribute\" title=\"System.ComponentModel.DefaultValueAttribute\" data-linktype=\"relative-path\">DefaultValueAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Image property specifies an image that is displayed in cells with no values when the column is not data-bound and the cell&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property is set to <code>false</code>. For a data-bound column whose cells do not have an associated image, a standard error graphic is displayed.  </p>\n<p> If you want to display an <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> instead of an <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>, set the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_Icon_\" data-linktype=\"relative-path\">Icon</a> property instead and set the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons_\" data-linktype=\"relative-path\">ValuesAreIcons</a> property to <code>true</code>. This ensures that the alpha channel of the <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> is painted correctly. You can also set the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property of individual cells to indicate whether the cell displays the Image or the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_Icon_\" data-linktype=\"relative-path\">Icon</a> property value when there is no cell value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_ImageLayout_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_ImageLayout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ImageLayout</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the image layout in the cells for this column.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.DataGridViewImageCellLayout ImageLayout { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewimagecelllayout\" data-linktype=\"relative-path\">DataGridViewImageCellLayout</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecelllayout\" data-linktype=\"relative-path\">DataGridViewImageCellLayout</a> that specifies the cell layout. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecelllayout\" data-linktype=\"relative-path\">DataGridViewImageCellLayout</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.defaultvalueattribute\" title=\"System.ComponentModel.DefaultValueAttribute\" data-linktype=\"relative-path\">DefaultValueAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewImageColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ImageLayout_\" data-linktype=\"relative-path\">ImageLayout</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ImageLayout_\" data-linktype=\"relative-path\">ImageLayout</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_ValuesAreIcons\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ValuesAreIcons</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether cells in this column display <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ValuesAreIcons { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if cells display values of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>; <code>false</code> if cells display values of type <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.browsableattribute\" title=\"System.ComponentModel.BrowsableAttribute\" data-linktype=\"relative-path\">BrowsableAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.componentmodel.designerserializationvisibilityattribute\" title=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\" data-linktype=\"relative-path\">DesignerSerializationVisibilityAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewImageColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To ensure that the alpha channel of <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> values is painted correctly, set this property to <code>true</code>.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_ValueIsIcon_\" data-linktype=\"relative-path\">ValueIsIcon</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn#System_Windows_Forms_DataGridViewImageColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property has a value equal to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a>, changing the ValuesAreIcons property value to <code>true</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>. If <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> has a value equal to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a>, changing the ValuesAreIcons property value to <code>false</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to the standard error graphic of type <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_Clone_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an exact copy of this column.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override object Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the cloned <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecolumn\" data-linktype=\"relative-path\">DataGridViewImageColumn</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.drawing.toolboxbitmapattribute\" title=\"System.Drawing.ToolboxBitmapAttribute\" data-linktype=\"relative-path\">ToolboxBitmapAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to duplicate a column of cells.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Forms_DataGridViewImageColumn_ToString_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewImageColumn_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a string that describes the column.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that describes the column.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.drawing.toolboxbitmapattribute\" title=\"System.Drawing.ToolboxBitmapAttribute\" data-linktype=\"relative-path\">ToolboxBitmapAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewImageColumn.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.CellTemplate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.Description\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.Icon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.Image\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.ImageLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"44327147-c22a-9182-6e2b-77524904104d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Hosts a collection of  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewImageColumn\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewImageColumn.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DataGridViewImageColumn","System.Windows.Forms.DataGridViewImageColumn..ctor","System.Windows.Forms.DataGridViewImageColumn.CellTemplate","System.Windows.Forms.DataGridViewImageColumn.Clone","System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle","System.Windows.Forms.DataGridViewImageColumn.Description","System.Windows.Forms.DataGridViewImageColumn.Icon","System.Windows.Forms.DataGridViewImageColumn.Image","System.Windows.Forms.DataGridViewImageColumn.ImageLayout","System.Windows.Forms.DataGridViewImageColumn.ToString","System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewImageColumn","System::Windows::Forms::DataGridViewImageColumn","System.Windows.Forms.DataGridViewImageColumn.#ctor","System::Windows::Forms::DataGridViewImageColumn::#ctor","System.Windows.Forms.DataGridViewImageColumn.CellTemplate","System::Windows::Forms::DataGridViewImageColumn::CellTemplate","System.Windows.Forms.DataGridViewImageColumn.Clone","System::Windows::Forms::DataGridViewImageColumn::Clone","System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle","System::Windows::Forms::DataGridViewImageColumn::DefaultCellStyle","System.Windows.Forms.DataGridViewImageColumn.Description","System::Windows::Forms::DataGridViewImageColumn::Description","System.Windows.Forms.DataGridViewImageColumn.Icon","System::Windows::Forms::DataGridViewImageColumn::Icon","System.Windows.Forms.DataGridViewImageColumn.Image","System::Windows::Forms::DataGridViewImageColumn::Image","System.Windows.Forms.DataGridViewImageColumn.ImageLayout","System::Windows::Forms::DataGridViewImageColumn::ImageLayout","System.Windows.Forms.DataGridViewImageColumn.ToString","System::Windows::Forms::DataGridViewImageColumn::ToString","System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons","System::Windows::Forms::DataGridViewImageColumn::ValuesAreIcons"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"44327147-c22a-9182-6e2b-77524904104d","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/DataGridViewImageColumn.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewImageColumn class | Microsoft Docs","_op_ogTitle":"DataGridViewImageColumn class","description":"Hosts a collection of  objects.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewImageColumn","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewimagecolumn","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewimagecolumn","fileRelativePath":"api/System.Windows.Forms.DataGridViewImageColumn.html"},"themesRelativePathToOutputRoot":"_themes/"}