{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">TaskCompletionSource&lt;TResult&gt;</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the producer side of a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> unbound to a delegate, providing access to the consumer side through the <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1.Task*</span> property.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class TaskCompletionSource&lt;TResult&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TResult</td>\r\n  \t\t\t<td><p>The type of the result value assocatied with this TaskCompletionSource(TResult).</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">TaskCompletionSource&lt;TResult&gt;</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how to use a TaskCompletionSource(TResult):  </p>\n<pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.TaskCompletionSource#01\">Imports System.Diagnostics\nImports System.Threading\nImports System.Threading.Tasks\n\nModule TCSDemo\n    &#39; Demonstrated features:\n    &#39;   TaskCompletionSource ctor()\n    &#39;   TaskCompletionSource.SetResult()\n    &#39;   TaskCompletionSource.SetException()\n    &#39;   Task.Result\n    &#39; Expected results:\n    &#39;   The attempt to get t1.Result blocks for ~1000ms until tcs1 gets signaled. 15 is printed out.\n    &#39;   The attempt to get t2.Result blocks for ~1000ms until tcs2 gets signaled. An exception is printed out.\n\n    Private Sub Main()\n        Dim tcs1 As New TaskCompletionSource(Of Integer)()\n        Dim t1 As Task(Of Integer) = tcs1.Task\n\n        &#39; Start a background task that will complete tcs1.Task\n        Task.Factory.StartNew(Sub()\n                                  Thread.Sleep(1000)\n                                  tcs1.SetResult(15)\n                              End Sub)\n\n        &#39; The attempt to get the result of t1 blocks the current thread until the completion source gets signaled.\n        &#39; It should be a wait of ~1000 ms.\n        Dim sw As Stopwatch = Stopwatch.StartNew()\n        Dim result As Integer = t1.Result\n        sw.Stop()\n\n        Console.WriteLine(&quot;(ElapsedTime={0}): t1.Result={1} (expected 15) &quot;, sw.ElapsedMilliseconds, result)\n\n        &#39; ------------------------------------------------------------------\n\n        &#39; Alternatively, an exception can be manually set on a TaskCompletionSource.Task\n        Dim tcs2 As New TaskCompletionSource(Of Integer)()\n        Dim t2 As Task(Of Integer) = tcs2.Task\n\n        &#39; Start a background Task that will complete tcs2.Task with an exception\n        Task.Factory.StartNew(Sub()\n                                  Thread.Sleep(1000)\n                                  tcs2.SetException(New InvalidOperationException(&quot;SIMULATED EXCEPTION&quot;))\n                              End Sub)\n\n        &#39; The attempt to get the result of t2 blocks the current thread until the completion source gets signaled with either a result or an exception.\n        &#39; In either case it should be a wait of ~1000 ms.\n        sw = Stopwatch.StartNew()\n        Try\n            result = t2.Result\n\n            Console.WriteLine(&quot;t2.Result succeeded. THIS WAS NOT EXPECTED.&quot;)\n        Catch e As AggregateException\n            Console.Write(&quot;(ElapsedTime={0}): &quot;, sw.ElapsedMilliseconds)\n            Console.WriteLine(&quot;The following exceptions have been thrown by t2.Result: (THIS WAS EXPECTED)&quot;)\n            For j As Integer = 0 To e.InnerExceptions.Count - 1\n                Console.WriteLine(vbLf &amp; &quot;-------------------------------------------------&quot; &amp; vbLf &amp; &quot;{0}&quot;, e.InnerExceptions(j).ToString())\n            Next\n        End Try\n    End Sub\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.TaskCompletionSource#01\">using System;\nusing System.Diagnostics;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nclass TCSDemo\n{\n    // Demonstrated features:\n    // \t\tTaskCompletionSource ctor()\n    // \t\tTaskCompletionSource.SetResult()\n    // \t\tTaskCompletionSource.SetException()\n    //\t\tTask.Result\n    // Expected results:\n    // \t\tThe attempt to get t1.Result blocks for ~1000ms until tcs1 gets signaled. 15 is printed out.\n    // \t\tThe attempt to get t2.Result blocks for ~1000ms until tcs2 gets signaled. An exception is printed out.\n    static void Main()\n    {\n        TaskCompletionSource&lt;int&gt; tcs1 = new TaskCompletionSource&lt;int&gt;();\n        Task&lt;int&gt; t1 = tcs1.Task;\n\n        // Start a background task that will complete tcs1.Task\n        Task.Factory.StartNew(() =&gt;\n        {\n            Thread.Sleep(1000);\n            tcs1.SetResult(15);\n        });\n\n        // The attempt to get the result of t1 blocks the current thread until the completion source gets signaled.\n        // It should be a wait of ~1000 ms.\n        Stopwatch sw = Stopwatch.StartNew();\n        int result = t1.Result;\n        sw.Stop();\n\n        Console.WriteLine(&quot;(ElapsedTime={0}): t1.Result={1} (expected 15) &quot;, sw.ElapsedMilliseconds, result);\n\n        // ------------------------------------------------------------------\n\n        // Alternatively, an exception can be manually set on a TaskCompletionSource.Task\n        TaskCompletionSource&lt;int&gt; tcs2 = new TaskCompletionSource&lt;int&gt;();\n        Task&lt;int&gt; t2 = tcs2.Task;\n\n        // Start a background Task that will complete tcs2.Task with an exception\n        Task.Factory.StartNew(() =&gt;\n        {\n            Thread.Sleep(1000);\n            tcs2.SetException(new InvalidOperationException(&quot;SIMULATED EXCEPTION&quot;));\n        });\n\n        // The attempt to get the result of t2 blocks the current thread until the completion source gets signaled with either a result or an exception.\n        // In either case it should be a wait of ~1000 ms.\n        sw = Stopwatch.StartNew();\n        try\n        {\n            result = t2.Result;\n\n            Console.WriteLine(&quot;t2.Result succeeded. THIS WAS NOT EXPECTED.&quot;);\n        }\n        catch (AggregateException e)\n        {\n            Console.Write(&quot;(ElapsedTime={0}): &quot;, sw.ElapsedMilliseconds);\n            Console.WriteLine(&quot;The following exceptions have been thrown by t2.Result: (THIS WAS EXPECTED)&quot;);\n            for (int j = 0; j &lt; e.InnerExceptions.Count; j++)\n            {\n                Console.WriteLine(&quot;\\n-------------------------------------------------\\n{0}&quot;, e.InnerExceptions[j].ToString());\n            }\n        }\n    }\n\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>In many scenarios, it is useful to enable a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> to represent an external asynchronous operation. TaskCompletionSource(TResult) is provided for this purpose. It enables the creation of a task that can be handed out to consumers, and those consumers can use the members of the task as they would any other. However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource. This enables the completion of the external asynchronous operation to be propagated to the underlying Task. The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource. For more information, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx\" data-linktype=\"external\">The Nature of TaskCompletionSource&lt;TResult&gt;</a> in the Parallel Programming with .NET blog.  </p>\n<p> The <a href=\"http://go.microsoft.com/fwlink/?LinkID=165717\" data-linktype=\"external\">Parallel Extensions samples</a> also contain examples of how to use TaskCompletionSource(TResult).</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TaskCompletionSource&lt;TResult&gt;()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TaskCompletionSource ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TaskCompletionSource&lt;TResult&gt;(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span> with the specified state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TaskCompletionSource (object state);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The state to use as the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span>&#39;s AsyncState.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor_System_Threading_Tasks_TaskCreationOptions_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TaskCompletionSource&lt;TResult&gt;(TaskCreationOptions)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span> with the specified options.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>creationOptions</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The options to use when creating the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>creationOptions</code> represent options invalid for use with a <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> created by this instance and accessible through its <a class=\"xref\" href=\"system.threading.tasks.taskcompletionsource-1#System_Threading_Tasks_TaskCompletionSource_1_Task_\" data-linktype=\"relative-path\">Task</a> property will be instantiated using the specified <code>creationOptions</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1__ctor_System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TaskCompletionSource&lt;TResult&gt;(Object, TaskCreationOptions)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span> with the specified state and options.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>state</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The state to use as the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span>&#39;s AsyncState.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>creationOptions</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The options to use when creating the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>creationOptions</code> represent options invalid for use with a <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_Task_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_Task\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Task</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <span class=\"xref\">stem.Threading.Tasks.Task`1</span> created by this <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;TResult&gt; Task { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the <span class=\"xref\">stem.Threading.Tasks.Task`1</span> created by this <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property enables a consumer to access the <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> that is controlled by this instance. When you create a <a class=\"xref\" href=\"system.threading.tasks.taskcompletionsource-1\" data-linktype=\"relative-path\">TaskCompletionSource&lt;TResult&gt;</a> object, the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Status_\" data-linktype=\"relative-path\">Status</a> property of this <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object returns <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>  </p>\n<p> The <a class=\"xref\" href=\"system.threading.tasks.taskcompletionsource-1#System_Threading_Tasks_TaskCompletionSource_1_SetResult_\" data-linktype=\"relative-path\">SetResult</a>, <a class=\"xref\" href=\"system.threading.tasks.taskcompletionsource-1#System_Threading_Tasks_TaskCompletionSource_1_SetException_\" data-linktype=\"relative-path\">SetException</a>, <a class=\"xref\" href=\"system.threading.tasks.taskcompletionsource-1#System_Threading_Tasks_TaskCompletionSource_1_SetException_\" data-linktype=\"relative-path\">SetException</a>, and <a class=\"xref\" href=\"system.threading.tasks.taskcompletionsource-1#System_Threading_Tasks_TaskCompletionSource_1_SetCanceled_\" data-linktype=\"relative-path\">SetCanceled</a> methods (and their &quot;Try&quot; variants) on this instance all result in the relevant state transitions on this underlying Task.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_SetCanceled_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_SetCanceled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetCanceled()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transitions the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetCanceled ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or if the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> has already been disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_SetException_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_SetException_System_Collections_Generic_IEnumerable_System_Exception__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetException(IEnumerable&lt;Exception&gt;)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transitions the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state and binds a collection of exception objects to it.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>exceptions</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The collection of exceptions to bind to this <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1.Task*</span> was disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>exceptions</code> argument is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There are one or more null elements in <code>exceptions</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_SetException_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_SetException_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetException(Exception)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transitions the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state and binds it to a specified exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetException (Exception exception);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>exception</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The exception to bind to this <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1.Task*</span> was disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>exception</code> argument is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_SetResult_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_SetResult__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetResult(TResult)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transitions the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetResult (TResult result);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>result</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TResult</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The result value to bind to this <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1.Task*</span> was disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetCanceled_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetCanceled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TrySetCanceled()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attempts to transition the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool TrySetCanceled ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will return false if the <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>.  </p>\n<p> This method also returns false if the underlying <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> has already been disposed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetCanceled_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetCanceled_System_Threading_CancellationToken_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TrySetCanceled(CancellationToken)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attempts to transition the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state and enables a cancellation token to be stored in the canceled task.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cancellationToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A cancellation token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the operation is successful; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The method returns false if the underlying <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object is already in one of the following three final states.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">System.Threading.Tasks.TaskStatus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">System.Threading.Tasks.TaskStatus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">System.Threading.Tasks.TaskStatus</a>  \n</li>\n</ul>\n<p> This method also returns <code>false</code> if the underlying <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object has already been disposed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetException_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetException_System_Collections_Generic_IEnumerable_System_Exception__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TrySetException(IEnumerable&lt;Exception&gt;)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attempts to transition the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state and binds a collection of exception objects to it.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool TrySetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>exceptions</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The collection of exceptions to bind to this <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>True if the operation was successful; otherwise, false.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1.Task*</span> was disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>exceptions</code> argument is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There are one or more null elements in <code>exceptions</code>.  </p>\n<p> -or-  </p>\n<p> The <code>exceptions</code> collection is empty.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will return false if the <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetException_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetException_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TrySetException(Exception)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attempts to transition the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state and binds it to a specified exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool TrySetException (Exception exception);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>exception</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The exception to bind to this <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>True if the operation was successful; otherwise, false.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Threading.Tasks.TaskCompletionSource`1.Task*</span> was disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>exception</code> argument is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will return false if the <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetResult_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Threading_Tasks_TaskCompletionSource_1_TrySetResult__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TrySetResult(TResult)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attempts to transition the underlying <span class=\"xref\">stem.Threading.Tasks.Task`1</span> into the <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool TrySetResult (TResult result);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>result</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TResult</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The result value to bind to this <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>True if the operation was successful; otherwise, false.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will return false if the <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> is already in one of the three final states: <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>, or <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a>.  </p>\n<p> This method also returns false if the underlying <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> has already been disposed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \t<h2 class=\"accented\">Thread Safety</h2>\r\n  \tAll members of TaskCompletionSource(TResult) are thread-safe and may be used from multiple threads concurrently.\r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.Tasks.TaskCompletionSource-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;.SetCanceled\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;.SetException\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;.SetResult\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;.Task\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;.TrySetCanceled\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;.TrySetException\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;.TrySetResult\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"f1e93a1a-d25b-e146-1a7f-96244370aa3d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the producer side of a  unbound to a delegate, providing access to the consumer side through the  property.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.threading.tasks/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.Tasks.TaskCompletionSource`1\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Threading.Tasks.TaskCompletionSource-1.yml","open_to_public_contributors":false,"api_name":["System.Threading.Tasks.TaskCompletionSource<TResult>","System.Threading.Tasks.TaskCompletionSource<TResult>..ctor","System.Threading.Tasks.TaskCompletionSource<TResult>.SetCanceled","System.Threading.Tasks.TaskCompletionSource<TResult>.SetException","System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult","System.Threading.Tasks.TaskCompletionSource<TResult>.Task","System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled","System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException","System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetResult"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.Tasks.TaskCompletionSource`1","System::Threading::Tasks::TaskCompletionSource`1","System.Threading.Tasks.TaskCompletionSource`1.#ctor","System::Threading::Tasks::TaskCompletionSource`1::#ctor","System.Threading.Tasks.TaskCompletionSource`1.SetCanceled","System::Threading::Tasks::TaskCompletionSource`1::SetCanceled","System.Threading.Tasks.TaskCompletionSource`1.SetException","System::Threading::Tasks::TaskCompletionSource`1::SetException","System.Threading.Tasks.TaskCompletionSource`1.SetResult","System::Threading::Tasks::TaskCompletionSource`1::SetResult","System.Threading.Tasks.TaskCompletionSource`1.Task","System::Threading::Tasks::TaskCompletionSource`1::Task","System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled","System::Threading::Tasks::TaskCompletionSource`1::TrySetCanceled","System.Threading.Tasks.TaskCompletionSource`1.TrySetException","System::Threading::Tasks::TaskCompletionSource`1::TrySetException","System.Threading.Tasks.TaskCompletionSource`1.TrySetResult","System::Threading::Tasks::TaskCompletionSource`1::TrySetResult"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"f1e93a1a-d25b-e146-1a7f-96244370aa3d","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TaskCompletionSource<TResult> class | Microsoft Docs","_op_ogTitle":"TaskCompletionSource<TResult> class","description":"Represents the producer side of a  unbound to a delegate, providing access to the consumer side through the  property.\n","toc_asset_id":"api/_splitted/System.Threading.Tasks/toc.json","toc_rel":"_splitted/System.Threading.Tasks/toc.json","source_url":"","ms.assetid":"System.Threading.Tasks.TaskCompletionSource`1","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.taskcompletionsource-1","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.taskcompletionsource-1","fileRelativePath":"api/System.Threading.Tasks.TaskCompletionSource-1.html"},"themesRelativePathToOutputRoot":"_themes/"}