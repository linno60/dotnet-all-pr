{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">KeyValuePair&lt;TKey,TValue&gt;</span>\r\n      Struct\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a key/value pair that can be set or retrieved.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public struct KeyValuePair&lt;TKey,TValue&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TKey</td>\r\n  \t\t\t<td><p>The type of the key.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TValue</td>\r\n  \t\t\t<td><p>The type of the value.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><span class=\"lang-csharp\">KeyValuePair&lt;TKey,TValue&gt;</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to enumerate the keys and values in a dictionary, using the KeyValuePair(TKey, structure.  </p>\n<p> This code is part of a larger example provided for the <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Generic.Dictionary#7\">// When you use foreach to enumerate dictionary elements,\n// the elements are retrieved as KeyValuePair objects.\nConsole::WriteLine();\nfor each( KeyValuePair&lt;String^, String^&gt; kvp in openWith )\n{\n    Console::WriteLine(&quot;Key = {0}, Value = {1}&quot;,\n        kvp.Key, kvp.Value);\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Generic.Dictionary#7\">// When you use foreach to enumerate dictionary elements,\n// the elements are retrieved as KeyValuePair objects.\nConsole.WriteLine();\nforeach( KeyValuePair&lt;string, string&gt; kvp in openWith )\n{\n    Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, \n        kvp.Key, kvp.Value);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Generic.Dictionary#7\">&#39; When you use foreach to enumerate dictionary elements,\n&#39; the elements are retrieved as KeyValuePair objects.\nConsole.WriteLine()\nFor Each kvp As KeyValuePair(Of String, String) In openWith\n    Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, _\n        kvp.Key, kvp.Value)\nNext kvp\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.collections.generic.dictionary-2.enumerator#System_Collections_Generic_Dictionary_2_Enumerator_Current_\" data-linktype=\"relative-path\">Current</a> property returns an instance of this type.  </p>\n<p> The <code>foreach</code> statement of the C# language (<code>for each</code> in C++, <code>For Each</code> in Visual Basic) returns an object of the type of the elements in the collection. Since each element of a collection based on <a class=\"xref\" href=\"system.collections.generic.idictionary-2\" data-linktype=\"relative-path\">IDictionary&lt;TKey,TValue&gt;</a> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is KeyValuePair(TKey,. For example:  </p>\n<pre><code class=\"lang-cpp\" name=\"Generic.Dictionary#11\">for each(KeyValuePair&lt;String^, String^&gt; kvp in myDictionary)\n{\n    Console::WriteLine(&quot;Key = {0}, Value = {1}&quot;, kvp.Key, kvp.Value);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Generic.Dictionary#11\">For Each kvp As KeyValuePair(Of String, String) In myDictionary\n    Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, kvp.Key, kvp.Value)\nNext kvp\n</code></pre><pre><code class=\"lang-cs\" name=\"Generic.Dictionary#11\">foreach( KeyValuePair&lt;string, string&gt; kvp in myDictionary )\n{\n    Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, kvp.Key, kvp.Value);\n}\n</code></pre><p> The <code>foreach</code> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_KeyValuePair_2__ctor__0__1_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyValuePair&lt;TKey,TValue&gt;(TKey, TValue)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.KeyValuePair`2</span> structure with the specified key and value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public KeyValuePair (TKey key, TValue value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TKey</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object defined in each key/value pair.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TValue</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The definition associated with <code>key</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_KeyValuePair_2_Key\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Key</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the key in the key/value pair.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TKey Key { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TKey</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <code>TKey</code> that is the key of the <span class=\"xref\">stem.Collections.Generic.KeyValuePair`2</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is read/only.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_KeyValuePair_2_Value\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Value</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value in the key/value pair.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TValue Value { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TValue</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <code>TValue</code> that is the value of the <span class=\"xref\">stem.Collections.Generic.KeyValuePair`2</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is read/only.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_KeyValuePair_2_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a string representation of the <span class=\"xref\">stem.Collections.Generic.KeyValuePair`2</span>, using the string representations of the key and value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A string representation of the <span class=\"xref\">stem.Collections.Generic.KeyValuePair`2</span>, which includes the string representations of the key and value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets. For example, the ToString method for a <a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair&lt;TKey,TValue&gt;</a> structure with the string <a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2#System_Collections_Generic_KeyValuePair_2_Key_\" data-linktype=\"relative-path\">Key</a> &quot;Test&quot; and the integer <a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2#System_Collections_Generic_KeyValuePair_2_Value_\" data-linktype=\"relative-path\">Value</a> 14 returns the string &quot;[Test, 14]&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method uses the <code>ToString</code> methods provided by the key and value types. Some types do not return useful or informative values for their <code>ToString</code> methods.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.Generic.KeyValuePair-2.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;.Key\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;.ToString\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;.Value\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"e7517aac-c1f9-86a5-d031-d13e566d7ed5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a key/value pair that can be set or retrieved.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.collections.generic/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Generic.KeyValuePair`2\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.Generic.KeyValuePair-2.yml","open_to_public_contributors":false,"api_name":["System.Collections.Generic.KeyValuePair<TKey,TValue>","System.Collections.Generic.KeyValuePair<TKey,TValue>..ctor","System.Collections.Generic.KeyValuePair<TKey,TValue>.Key","System.Collections.Generic.KeyValuePair<TKey,TValue>.ToString","System.Collections.Generic.KeyValuePair<TKey,TValue>.Value"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Generic.KeyValuePair`2","System::Collections::Generic::KeyValuePair`2","System.Collections.Generic.KeyValuePair`2.#ctor","System::Collections::Generic::KeyValuePair`2::#ctor","System.Collections.Generic.KeyValuePair`2.Key","System::Collections::Generic::KeyValuePair`2::Key","System.Collections.Generic.KeyValuePair`2.ToString","System::Collections::Generic::KeyValuePair`2::ToString","System.Collections.Generic.KeyValuePair`2.Value","System::Collections::Generic::KeyValuePair`2::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"e7517aac-c1f9-86a5-d031-d13e566d7ed5","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"KeyValuePair<TKey,TValue> struct | Microsoft Docs","_op_ogTitle":"KeyValuePair<TKey,TValue> struct","description":"Defines a key/value pair that can be set or retrieved.\n","toc_asset_id":"api/_splitted/System.Collections.Generic/toc.json","toc_rel":"_splitted/System.Collections.Generic/toc.json","source_url":"","ms.assetid":"System.Collections.Generic.KeyValuePair`2","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.keyvaluepair-2","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.keyvaluepair-2","fileRelativePath":"api/System.Collections.Generic.KeyValuePair-2.html"},"themesRelativePathToOutputRoot":"_themes/"}