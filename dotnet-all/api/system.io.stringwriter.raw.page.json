{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">StringWriter</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Implements a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> for writing information to a string. The information is stored in an underlying <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class StringWriter : System.IO.TextWriter</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span></div><span class=\"lang-csharp\">StringWriter</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_CoreNewLine\" data-linktype=\"relative-path\">CoreNewLine</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Flush\" data-linktype=\"relative-path\">Flush()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_FormatProvider\" data-linktype=\"relative-path\">FormatProvider</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_NewLine\" data-linktype=\"relative-path\">NewLine</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Null\" data-linktype=\"relative-path\">Null</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Synchronized_System_IO_TextWriter_\" data-linktype=\"relative-path\">Synchronized(TextWriter)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Boolean_\" data-linktype=\"relative-path\">Write(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Char___\" data-linktype=\"relative-path\">Write(Char[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Decimal_\" data-linktype=\"relative-path\">Write(Decimal)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Double_\" data-linktype=\"relative-path\">Write(Double)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Int32_\" data-linktype=\"relative-path\">Write(Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Int64_\" data-linktype=\"relative-path\">Write(Int64)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Object_\" data-linktype=\"relative-path\">Write(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Single_\" data-linktype=\"relative-path\">Write(Single)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_String_System_Object_\" data-linktype=\"relative-path\">Write(String, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_String_System_Object_System_Object_\" data-linktype=\"relative-path\">Write(String, Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_String_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">Write(String, Object, Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_String_System_Object___\" data-linktype=\"relative-path\">Write(String, Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_UInt32_\" data-linktype=\"relative-path\">Write(UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_UInt64_\" data-linktype=\"relative-path\">Write(UInt64)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_Char___\" data-linktype=\"relative-path\">WriteAsync(Char[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine\" data-linktype=\"relative-path\">WriteLine()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Boolean_\" data-linktype=\"relative-path\">WriteLine(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Char_\" data-linktype=\"relative-path\">WriteLine(Char)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Char___\" data-linktype=\"relative-path\">WriteLine(Char[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Char___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteLine(Char[], Int32, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Decimal_\" data-linktype=\"relative-path\">WriteLine(Decimal)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Double_\" data-linktype=\"relative-path\">WriteLine(Double)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Int32_\" data-linktype=\"relative-path\">WriteLine(Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Int64_\" data-linktype=\"relative-path\">WriteLine(Int64)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Object_\" data-linktype=\"relative-path\">WriteLine(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Single_\" data-linktype=\"relative-path\">WriteLine(Single)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_String_\" data-linktype=\"relative-path\">WriteLine(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_String_System_Object_\" data-linktype=\"relative-path\">WriteLine(String, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_String_System_Object_System_Object_\" data-linktype=\"relative-path\">WriteLine(String, Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_String_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">WriteLine(String, Object, Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_String_System_Object___\" data-linktype=\"relative-path\">WriteLine(String, Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_UInt32_\" data-linktype=\"relative-path\">WriteLine(UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_UInt64_\" data-linktype=\"relative-path\">WriteLine(UInt64)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync\" data-linktype=\"relative-path\">WriteLineAsync()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_Char___\" data-linktype=\"relative-path\">WriteLineAsync(Char[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.StringReaderWriter#1\">using namespace System;\nusing namespace System::IO;\nint main()\n{\n   String^ textReaderText = &quot;TextReader is the abstract base &quot;\n   &quot;class of StreamReader and StringReader, which read &quot;\n   &quot;characters from streams and strings, respectively.\\n\\n&quot;\n   &quot;Create an instance of TextReader to open a text file &quot;\n   &quot;for reading a specified range of characters, or to &quot;\n   &quot;create a reader based on an existing stream.\\n\\n&quot;\n   &quot;You can also use an instance of TextReader to read &quot;\n   &quot;text from a custom backing store using the same &quot;\n   &quot;APIs you would use for a string or a stream.\\n\\n&quot;;\n   Console::WriteLine(  &quot;Original text:\\n\\n{0}&quot;, textReaderText );\n\n   // From textReaderText, create a continuous paragraph \n   // with two spaces between each sentence.\n      String^ aLine;\n   String^ aParagraph;\n   StringReader^ strReader = gcnew StringReader( textReaderText );\n   while ( true )\n   {\n      aLine = strReader-&gt;ReadLine();\n      if ( aLine != nullptr )\n      {\n         aParagraph = String::Concat( aParagraph, aLine,  &quot; &quot; );\n      }\n      else\n      {\n         aParagraph = String::Concat( aParagraph,  &quot;\\n&quot; );\n         break;\n      }\n   }\n\n   Console::WriteLine(  &quot;Modified text:\\n\\n{0}&quot;, aParagraph );\n   \n   // Re-create textReaderText from aParagraph.\n   int intCharacter;\n   Char convertedCharacter;\n   StringWriter^ strWriter = gcnew StringWriter;\n   strReader = gcnew StringReader( aParagraph );\n   while ( true )\n   {\n      intCharacter = strReader-&gt;Read();\n      \n      // Check for the end of the string \n      // before converting to a character.\n      if ( intCharacter == -1 )\n            break;\n\n      \n      convertedCharacter = Convert::ToChar( intCharacter );\n      if ( convertedCharacter == &#39;.&#39; )\n      {\n         strWriter-&gt;Write(  &quot;.\\n\\n&quot; );\n         \n         // Bypass the spaces between sentences.\n         strReader-&gt;Read();\n         strReader-&gt;Read();\n      }\n      else\n      {\n         strWriter-&gt;Write( convertedCharacter );\n      }\n   }\n\n   Console::WriteLine(  &quot;\\nOriginal text:\\n\\n{0}&quot;, strWriter-&gt;ToString() );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.StringReaderWriter#1\">Option Explicit\nOption Strict\n\nImports Microsoft.VisualBasic\nImports System\nImports System.IO\n\nPublic Class StrReader\n\n    Shared Sub Main()\n    \n        Dim textReaderText As String = &quot;TextReader is the &quot; &amp; _\n            &quot;abstract base class of StreamReader and &quot; &amp; _\n            &quot;StringReader, which read characters from streams &quot; &amp; _\n            &quot;and strings, respectively.&quot; &amp; _\n            vbCrLf &amp; vbCrLf &amp; _\n            &quot;Create an instance of TextReader to open a text &quot; &amp; _\n            &quot;file for reading a specified range of characters, &quot; &amp; _\n            &quot;or to create a reader based on an existing stream.&quot; &amp; _\n            vbCrLf &amp; vbCrLf &amp; _\n            &quot;You can also use an instance of TextReader to read &quot; &amp; _\n            &quot;text from a custom backing store using the same &quot; &amp; _\n            &quot;APIs you would use for a string or a stream.&quot; &amp; _\n            vbCrLf &amp; vbCrLf\n\n        Console.WriteLine(&quot;Original text:&quot; &amp; vbCrLf &amp; vbCrLf &amp; _\n            textReaderText)\n\n        &#39; From textReaderText, create a continuous paragraph \n        &#39; with two spaces between each sentence.\n        Dim aLine, aParagraph As String\n        Dim strReader As New StringReader(textReaderText)\n        While True\n            aLine = strReader.ReadLine()\n            If aLine Is Nothing Then\n                aParagraph = aParagraph &amp; vbCrLf\n                Exit While\n            Else\n                aParagraph = aParagraph &amp; aLine &amp; &quot; &quot;\n            End If\n        End While\n        Console.WriteLine(&quot;Modified text:&quot; &amp; vbCrLf &amp; vbCrLf &amp; _ \n            aParagraph)\n    \n        &#39; Re-create textReaderText from aParagraph.\n        Dim intCharacter As Integer \n        Dim convertedCharacter As Char \n        Dim strWriter As New StringWriter()\n        strReader = New StringReader(aParagraph)\n        While True\n            intCharacter = strReader.Read()\n\n            &#39; Check for the end of the string \n            &#39; before converting to a character.\n            If intCharacter = -1 Then\n                Exit While\n            End If\n\n            convertedCharacter = Convert.ToChar(intCharacter)\n            If convertedCharacter = &quot;.&quot;C Then\n                strWriter.Write(&quot;.&quot; &amp; vbCrLf &amp; vbCrLf)\n\n                &#39; Bypass the spaces between sentences.\n                strReader.Read()\n                strReader.Read()\n            Else\n                strWriter.Write(convertedCharacter)\n            End If\n        End While\n        Console.WriteLine(vbCrLf &amp; &quot;Original text:&quot; &amp; vbCrLf &amp; _ \n            vbCrLf &amp; strWriter.ToString())\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.StringReaderWriter#1\">using System;\nusing System.IO;\n\nclass StringRW\n{\n    static void Main()\n    {\n        string textReaderText = &quot;TextReader is the abstract base &quot; +\n            &quot;class of StreamReader and StringReader, which read &quot; +\n            &quot;characters from streams and strings, respectively.\\n\\n&quot; +\n\n            &quot;Create an instance of TextReader to open a text file &quot; +\n            &quot;for reading a specified range of characters, or to &quot; +\n            &quot;create a reader based on an existing stream.\\n\\n&quot; +\n\n            &quot;You can also use an instance of TextReader to read &quot; +\n            &quot;text from a custom backing store using the same &quot; +\n            &quot;APIs you would use for a string or a stream.\\n\\n&quot;;\n\n        Console.WriteLine(&quot;Original text:\\n\\n{0}&quot;, textReaderText);\n\n        // From textReaderText, create a continuous paragraph \n        // with two spaces between each sentence.\n        string aLine, aParagraph = null;\n        StringReader strReader = new StringReader(textReaderText);\n        while(true)\n        {\n            aLine = strReader.ReadLine();\n            if(aLine != null)\n            {\n                aParagraph = aParagraph + aLine + &quot; &quot;;\n            }\n            else\n            {\n                aParagraph = aParagraph + &quot;\\n&quot;;\n                break;\n            }\n        }\n        Console.WriteLine(&quot;Modified text:\\n\\n{0}&quot;, aParagraph);\n\n        // Re-create textReaderText from aParagraph.\n        int intCharacter;\n        char convertedCharacter;\n        StringWriter strWriter = new StringWriter();\n        strReader = new StringReader(aParagraph);\n        while(true)\n        {\n            intCharacter = strReader.Read();\n\n            // Check for the end of the string \n            // before converting to a character.\n            if(intCharacter == -1) break;\n\n            convertedCharacter = Convert.ToChar(intCharacter);\n            if(convertedCharacter == &#39;.&#39;)\n            {\n                strWriter.Write(&quot;.\\n\\n&quot;);\n\n                // Bypass the spaces between sentences.\n                strReader.Read();\n                strReader.Read();\n            }\n            else\n            {\n                strWriter.Write(convertedCharacter);\n            }\n        }\n        Console.WriteLine(&quot;\\nOriginal text:\\n\\n{0}&quot;, \n            strWriter.ToString());\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>StringWriter enables you to write to a string synchronously or asynchronously. You can write a character at a time with the <a class=\"xref\" href=\"system.io.stringwriter#System_IO_StringWriter_Write_System_Char_\" data-linktype=\"relative-path\">Write(Char)</a> or the <a class=\"xref\" href=\"system.io.stringwriter#System_IO_StringWriter_WriteAsync_System_Char_\" data-linktype=\"relative-path\">WriteAsync(Char)</a> method, a string at a time using the <a class=\"xref\" href=\"system.io.stringwriter#System_IO_StringWriter_Write_System_String_\" data-linktype=\"relative-path\">Write(String)</a> or the <a class=\"xref\" href=\"system.io.stringwriter#System_IO_StringWriter_WriteAsync_System_String_\" data-linktype=\"relative-path\">WriteAsync(String)</a> method. In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <a class=\"xref\" href=\"system.io.stringwriter#System_IO_StringWriter_WriteLineAsync_\" data-linktype=\"relative-path\">WriteLineAsync</a> methods.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code> /<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n</div>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StringWriter()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public StringWriter ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> object is automatically created and associated with the new instance of the <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> class. Since a format control is not specified for this constructor, the new instance will be initialized with <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter__ctor_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StringWriter(IFormatProvider)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> class with the specified format control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public StringWriter (IFormatProvider formatProvider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatProvider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> object that controls formatting.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> object is automatically created and associated with the new instance of the <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> class.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter__ctor_System_Text_StringBuilder_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StringWriter(StringBuilder)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> class that writes to the specified <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public StringWriter (System.Text.StringBuilder sb);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sb</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> object to write to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>sb</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Since a format control is not specified for this constructor, the new instance will be initialized with <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter__ctor_System_Text_StringBuilder_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StringWriter(StringBuilder, IFormatProvider)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> class that writes to the specified <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> and has the specified format provider.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sb</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> object to write to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatProvider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> object that controls formatting.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>sb</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_Encoding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Encoding</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> in which the output is written.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Text.Encoding Encoding { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>Encoding</code> in which the output is written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <code>StringWriter</code>. This allows the XML code to consume an arbitrary <code>StringWriter</code> and generate the correct XML header.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_Close\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Close()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Closes the current <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> and the underlying stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Close ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For an example of creating a file and writing text to a file, see <a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a>. For an example of reading text from a file, see <a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a>. For an example of reading from and writing to a binary file, see <a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a>.  </p>\n<p> This method overrides <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a>.  </p>\n<p> This implementation of <code>Close</code> calls the <a class=\"xref\" href=\"system.io.stringwriter#System_IO_StringWriter_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method passing a <code>true</code> value.  </p>\n<p> Flushing the stream will not flush its underlying encoder unless you explicitly call <code>Close</code>. Setting <a class=\"xref\" href=\"system.io.streamwriter#System_IO_StreamWriter_AutoFlush_\" data-linktype=\"relative-path\">AutoFlush</a> to <code>true</code> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a> references. This method invokes the <code>Dispose</code> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_FlushAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FlushAsync()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Threading.Tasks.Task FlushAsync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A task that represents the asynchronous flush operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_GetStringBuilder\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetStringBuilder()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the underlying <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Text.StringBuilder GetStringBuilder ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The underlying <code>StringBuilder</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is either the <code>StringBuilder</code> that was passed to the constructor, or the <code>StringBuilder</code> that was automatically created.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a string containing the characters written to the current <code>StringWriter</code> so far.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The string containing the characters written to the current <code>StringWriter</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_Write_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Write(Char)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a character to the string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Write (char value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The writer is closed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a>.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_Write_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Write(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a string to the current string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Write (string value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The writer is closed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a>.  </p>\n<p> If the specified string is <code>null</code>, nothing is written.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_Write_System_Char___System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Write(Char[], Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a subarray of characters to the string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Write (char[] buffer, int index, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character array to write data from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position in the buffer at which to start reading data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of characters to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>buffer</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> or <code>count</code> is negative.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>(<code>index</code> + <code>count</code>)&gt; <code>buffer</code>. <code>Length</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The writer is closed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a>.  </p>\n<p> This method writes <code>count</code> characters of data to this <code>StringWriter</code> from <code>buffer</code>, starting at position <code>index</code>.  </p>\n<p> The following table lists examples of other typical or related I/O tasks.  </p>\n<table>\n<thead>\n<tr>\n<th>To do this...</th>\n<th>See the example in this topic...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Write to a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Text%20to%20a%20File.md\" data-linktype=\"relative-path\">How to: Write Text to a File</a></td>\n</tr>\n<tr>\n<td>Read from a text file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20Text%20from%20a%20File.md\" data-linktype=\"relative-path\">How to: Read Text from a File</a></td>\n</tr>\n<tr>\n<td>Append text to a file.</td>\n<td><a href=\"../Topic/How%20to:%20Open%20and%20Append%20to%20a%20Log%20File.md\" data-linktype=\"relative-path\">How to: Open and Append to a Log File</a><br><br> <a class=\"xref\" href=\"system.io.file#System_IO_File_AppendText_\" data-linktype=\"relative-path\">AppendText</a><br><br> <a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_AppendText_\" data-linktype=\"relative-path\">AppendText</a></td>\n</tr>\n<tr>\n<td>Get the size of a file.</td>\n<td><a class=\"xref\" href=\"system.io.fileinfo#System_IO_FileInfo_Length_\" data-linktype=\"relative-path\">Length</a></td>\n</tr>\n<tr>\n<td>Get the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_GetAttributes_\" data-linktype=\"relative-path\">GetAttributes</a></td>\n</tr>\n<tr>\n<td>Set the attributes of a file.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_SetAttributes_\" data-linktype=\"relative-path\">SetAttributes</a></td>\n</tr>\n<tr>\n<td>Determine if a file exists.</td>\n<td><a class=\"xref\" href=\"system.io.file#System_IO_File_Exists_\" data-linktype=\"relative-path\">Exists</a></td>\n</tr>\n<tr>\n<td>Read from a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n<tr>\n<td>Write to a binary file.</td>\n<td><a href=\"../Topic/How%20to:%20Read%20and%20Write%20to%20a%20Newly%20Created%20Data%20File.md\" data-linktype=\"relative-path\">How to: Read and Write to a Newly Created Data File</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_WriteAsync_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteAsync(Char)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a character to the string asynchronously.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Threading.Tasks.Task WriteAsync (char value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character to write to the string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A task that represents the asynchronous write operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is currently in use by a previous write operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_WriteAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteAsync(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a string to the current string asynchronously.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Threading.Tasks.Task WriteAsync (string value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write. If <code>value</code> is <code>null</code>, nothing is written to the text stream.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A task that represents the asynchronous write operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is currently in use by a previous write operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_WriteAsync_System_Char___System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteAsync(Char[], Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a subarray of characters to the string asynchronously.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character array to write data from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position in the buffer at which to start reading data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of characters to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A task that represents the asynchronous write operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>buffer</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>index</code> plus <code>count</code> is greater than the buffer length.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> or <code>count</code> is negative.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is currently in use by a previous write operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_WriteLineAsync_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteLineAsync(Char)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a character followed by a line terminator asynchronously to the string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Threading.Tasks.Task WriteLineAsync (char value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character to write to the string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A task that represents the asynchronous write operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is currently in use by a previous write operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The line terminator is defined by the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_NewLine_\" data-linktype=\"relative-path\">NewLine</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_WriteLineAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteLineAsync(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a string followed by a line terminator asynchronously to the current string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Threading.Tasks.Task WriteLineAsync (string value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write. If the value is <code>null</code>, only a line terminator is written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A task that represents the asynchronous write operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is currently in use by a previous write operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The line terminator is defined by the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_NewLine_\" data-linktype=\"relative-path\">NewLine</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_StringWriter_WriteLineAsync_System_Char___System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteLineAsync(Char[], Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a subarray of characters followed by a line terminator asynchronously to the string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character array to write data from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position in the buffer at which to start reading data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of characters to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A task that represents the asynchronous write operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>buffer</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>index</code> plus <code>count</code> is greater than the buffer length.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> or <code>count</code> is negative.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is disposed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The string writer is currently in use by a previous write operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The line terminator is defined by the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_NewLine_\" data-linktype=\"relative-path\">NewLine</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.StringWriter.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.Close\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.Dispose\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.Encoding\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.FlushAsync\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.GetStringBuilder\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.ToString\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.Write\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.WriteAsync\">\r\n<meta name=\"APIName\" content=\"System.IO.StringWriter.WriteLineAsync\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"90dd5131-56ee-e796-f8ca-7c31bfbbf822\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Implements a  for writing information to a string. The information is stored in an underlying .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.io/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.StringWriter\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.StringWriter.yml","open_to_public_contributors":false,"api_name":["System.IO.StringWriter","System.IO.StringWriter..ctor","System.IO.StringWriter.Close","System.IO.StringWriter.Dispose","System.IO.StringWriter.Encoding","System.IO.StringWriter.FlushAsync","System.IO.StringWriter.GetStringBuilder","System.IO.StringWriter.ToString","System.IO.StringWriter.Write","System.IO.StringWriter.WriteAsync","System.IO.StringWriter.WriteLineAsync"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.StringWriter","System::IO::StringWriter","System.IO.StringWriter.#ctor","System::IO::StringWriter::#ctor","System.IO.StringWriter.Close","System::IO::StringWriter::Close","System.IO.StringWriter.Dispose","System::IO::StringWriter::Dispose","System.IO.StringWriter.Encoding","System::IO::StringWriter::Encoding","System.IO.StringWriter.FlushAsync","System::IO::StringWriter::FlushAsync","System.IO.StringWriter.GetStringBuilder","System::IO::StringWriter::GetStringBuilder","System.IO.StringWriter.ToString","System::IO::StringWriter::ToString","System.IO.StringWriter.Write","System::IO::StringWriter::Write","System.IO.StringWriter.WriteAsync","System::IO::StringWriter::WriteAsync","System.IO.StringWriter.WriteLineAsync","System::IO::StringWriter::WriteLineAsync"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"90dd5131-56ee-e796-f8ca-7c31bfbbf822","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.IO/StringWriter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StringWriter class | Microsoft Docs","_op_ogTitle":"StringWriter class","description":"Implements a  for writing information to a string. The information is stored in an underlying .\n","toc_asset_id":"api/_splitted/System.IO/toc.json","toc_rel":"_splitted/System.IO/toc.json","source_url":"","ms.assetid":"System.IO.StringWriter","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.io.stringwriter","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.io.stringwriter","fileRelativePath":"api/System.IO.StringWriter.html"},"themesRelativePathToOutputRoot":"_themes/"}