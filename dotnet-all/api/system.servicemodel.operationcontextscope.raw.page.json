{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">OperationContextScope</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Creates a block within which an <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> object is in scope.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class OperationContextScope : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">OperationContextScope</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows how to use the OperationContextScope to create a new context in a client application to add a custom header to the outgoing message.  </p>\n<pre><code class=\"lang-cs\" name=\"OperationContextScope#3\">using System;\nusing System.ServiceModel;\nusing System.ServiceModel.Channels;\nusing System.Threading;\n \npublic class Client : ISampleServiceCallback\n{\n  ManualResetEvent wait = null;\n\n  Client()\n  {\n    this.wait = new ManualResetEvent(false);\n  }\n\n  public static void Main()\n  {\n    Client client = new Client();\n    client.Run();\n  }\n\n  void Run()\n  {\n    // Picks up configuration from the config file.\n    SampleServiceClient wcfClient = new SampleServiceClient(new InstanceContext(this));\n    try\n    {\n      using (OperationContextScope scope = new OperationContextScope(wcfClient.InnerChannel))\n      {\n        MessageHeader header\n          = MessageHeader.CreateHeader(\n          &quot;Service-Bound-CustomHeader&quot;,\n          &quot;http://Microsoft.WCF.Documentation&quot;,\n          &quot;Custom Happy Value.&quot;\n          );\n        OperationContext.Current.OutgoingMessageHeaders.Add(header);\n\n        // Making calls.\n        Console.WriteLine(&quot;Enter the greeting to send: &quot;);\n        string greeting = Console.ReadLine();\n\n        //Console.ReadLine();\n        header = MessageHeader.CreateHeader(\n            &quot;Service-Bound-OneWayHeader&quot;,\n            &quot;http://Microsoft.WCF.Documentation&quot;,\n            &quot;Different Happy Value.&quot;\n          );\n        OperationContext.Current.OutgoingMessageHeaders.Add(header);\n\n        // One-way\n        wcfClient.Push(greeting);\n        this.wait.WaitOne();\n\n        // Done with service. \n        wcfClient.Close();\n        Console.WriteLine(&quot;Done!&quot;);\n        Console.ReadLine();\n      }\n    }\n    catch (TimeoutException timeProblem)\n    {\n      Console.WriteLine(&quot;The service operation timed out. &quot; + timeProblem.Message);\n      Console.ReadLine();\n      wcfClient.Abort();\n    }\n    catch (CommunicationException commProblem)\n    {\n      Console.WriteLine(&quot;There was a communication problem. &quot; + commProblem.Message);\n      Console.ReadLine();\n      wcfClient.Abort();\n    }\n  }\n\n\n  #region ISampleServiceCallback Members\n\n  public void PushBack(string msg)\n  {\n    Console.WriteLine(&quot;Service said: &quot; + msg);\n    this.WriteHeaders(OperationContext.Current.IncomingMessageHeaders);\n    this.wait.Set();\n  }\n\n  void WriteHeaders(MessageHeaders headers)\n  {\n    Console.ForegroundColor = ConsoleColor.Red;\n    Console.WriteLine(&quot;IncomingHeader:&quot;);\n    Console.ForegroundColor = ConsoleColor.Blue;\n    foreach (MessageHeaderInfo h in headers)\n    {\n      if (!h.Actor.Equals(String.Empty))\n        Console.WriteLine(&quot;\\t&quot; + h.Actor);\n      Console.ForegroundColor = ConsoleColor.White;\n      Console.WriteLine(&quot;\\t&quot; + h.Name);\n      Console.ForegroundColor = ConsoleColor.Blue;\n      Console.WriteLine(&quot;\\t&quot; + h.Namespace);\n      Console.WriteLine(&quot;\\t&quot; + h.Relay);\n      if (h.IsReferenceParameter == true)\n      {\n        Console.WriteLine(&quot;IsReferenceParameter header detected: &quot; + h.ToString());\n      }\n    }\n    Console.ResetColor();\n  }\n  #endregion\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"OperationContextScope#3\">Imports System.ServiceModel\nImports System.ServiceModel.Channels\nImports System.Threading\n\nPublic Class Client\n\tImplements ISampleServiceCallback\n  Private wait As ManualResetEvent = Nothing\n\n  Private Sub New()\n\tMe.wait = New ManualResetEvent(False)\n  End Sub\n\n  Public Shared Sub Main()\n\tDim client As New Client()\n\tclient.Run()\n  End Sub\n\n  Private Sub Run()\n\t&#39; Picks up configuration from the config file.\n\tDim wcfClient As New SampleServiceClient(New InstanceContext(Me))\n\tTry\n\t  Using scope As New OperationContextScope(wcfClient.InnerChannel)\n                Dim header As MessageHeader = MessageHeader.CreateHeader(&quot;Service-Bound-CustomHeader&quot;, _\n                                    &quot;http://Microsoft.WCF.Documentation&quot;, &quot;Custom Happy Value.&quot;)\n\t\tOperationContext.Current.OutgoingMessageHeaders.Add(header)\n\n\t\t&#39; Making calls.\n\t\tConsole.WriteLine(&quot;Enter the greeting to send: &quot;)\n\t\tDim greeting As String = Console.ReadLine()\n\n\t\t&#39;Console.ReadLine();\n                header = MessageHeader.CreateHeader(&quot;Service-Bound-OneWayHeader&quot;, _\n                                                    &quot;http://Microsoft.WCF.Documentation&quot;, &quot;Different Happy Value.&quot;)\n\t\tOperationContext.Current.OutgoingMessageHeaders.Add(header)\n\n\t\t&#39; One-way\n\t\twcfClient.Push(greeting)\n\t\tMe.wait.WaitOne()\n\n\t\t&#39; Done with service. \n\t\twcfClient.Close()\n\t\tConsole.WriteLine(&quot;Done!&quot;)\n\t\tConsole.ReadLine()\n\t  End Using\n\tCatch timeProblem As TimeoutException\n\t  Console.WriteLine(&quot;The service operation timed out. &quot; &amp; timeProblem.Message)\n\t  Console.ReadLine()\n\t  wcfClient.Abort()\n\tCatch commProblem As CommunicationException\n\t  Console.WriteLine(&quot;There was a communication problem. &quot; &amp; commProblem.Message)\n\t  Console.ReadLine()\n\t  wcfClient.Abort()\n\tEnd Try\n  End Sub\n\n\n  #Region &quot;ISampleServiceCallback Members&quot;\n\n  Public Sub PushBack(ByVal msg As String) Implements ISampleServiceCallback.PushBack\n\tConsole.WriteLine(&quot;Service said: &quot; &amp; msg)\n\tMe.WriteHeaders(OperationContext.Current.IncomingMessageHeaders)\n\tMe.wait.Set()\n  End Sub\n\n  Private Sub WriteHeaders(ByVal headers As MessageHeaders)\n\tConsole.ForegroundColor = ConsoleColor.Red\n\tConsole.WriteLine(&quot;IncomingHeader:&quot;)\n\tConsole.ForegroundColor = ConsoleColor.Blue\n\tFor Each h As MessageHeaderInfo In headers\n\t  If Not h.Actor.Equals(String.Empty) Then\n\t\tConsole.WriteLine(vbTab &amp; h.Actor)\n\t  End If\n\t  Console.ForegroundColor = ConsoleColor.White\n\t  Console.WriteLine(vbTab &amp; h.Name)\n\t  Console.ForegroundColor = ConsoleColor.Blue\n\t  Console.WriteLine(vbTab &amp; h.Namespace)\n\t  Console.WriteLine(vbTab &amp; h.Relay)\n\t  If h.IsReferenceParameter = True Then\n\t\tConsole.WriteLine(&quot;IsReferenceParameter header detected: &quot; &amp; h.ToString())\n\t  End If\n\tNext h\n\tConsole.ResetColor()\n  End Sub\n  #End Region\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the OperationContextScope class to create a scope for a specific <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> object or a scope for a new <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> object using a specified <a class=\"xref\" href=\"system.servicemodel.icontextchannel\" data-linktype=\"relative-path\">IContextChannel</a> object. An OperationContextScope can be used in a Windows Communication Foundation (WCF) service or WCF client application.  </p>\n<p> Once the OperationContextScope object has established the current operation context, you can use the <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> to:  </p>\n<ul>\n<li><p>Access and modify incoming and outgoing message headers and other properties.  </p>\n</li>\n<li><p>Access the runtime, including dispatchers, the host, channel, and extensions.  </p>\n</li>\n<li><p>Access other types of contexts, such as security, instance, and request contexts.  </p>\n</li>\n<li><p>Access the channel associated with the <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> object or (if the channel implements <a class=\"xref\" href=\"system.servicemodel.channels.isession\" data-linktype=\"relative-path\">System.ServiceModel.Channels.ISession</a>) the associated channel&#39;s session identifier.  </p>\n</li>\n</ul>\n<p> When an OperationContextScope is created, the current <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> is stored and the new <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> becomes the one returned by the <a class=\"xref\" href=\"system.servicemodel.operationcontext#System_ServiceModel_OperationContext_Current_\" data-linktype=\"relative-path\">Current</a> property. When the OperationContextScope is disposed, the original <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> is restored.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> Do not use the asynchronous “await” pattern within a OperationContextScope block. When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific. If you need to call “await” for an async call, use it outside of the OperationContextScope block.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_OperationContextScope__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_OperationContextScope__ctor_System_ServiceModel_IContextChannel_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OperationContextScope(IContextChannel)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.operationcontextscope\" data-linktype=\"relative-path\">OperationContextScope</a> class that uses the specified <a class=\"xref\" href=\"system.servicemodel.icontextchannel\" data-linktype=\"relative-path\">IContextChannel</a> to create a new <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> for the scope.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public OperationContextScope (System.ServiceModel.IContextChannel channel);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>channel</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.icontextchannel\" data-linktype=\"relative-path\">IContextChannel</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The channel to use when creating the scope for a new <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the OperationContextScope constructor to create a new <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a>.  </p>\n<p> The headers added to the <a class=\"xref\" href=\"system.servicemodel.operationcontext#System_ServiceModel_OperationContext_IncomingMessageHeaders_\" data-linktype=\"relative-path\">IncomingMessageHeaders</a> property of the newly created <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> apply only to the channel that was passed to the <a class=\"xref\" href=\"system.servicemodel.operationcontextscope#System_ServiceModel_OperationContextScope__ctor_\" data-linktype=\"relative-path\">OperationContextScope</a> constructor. If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_OperationContextScope__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_OperationContextScope__ctor_System_ServiceModel_OperationContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OperationContextScope(OperationContext)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.operationcontextscope\" data-linktype=\"relative-path\">OperationContextScope</a> class to create a scope for the specified <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public OperationContextScope (System.ServiceModel.OperationContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The active <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> in the created scope.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the OperationContextScope constructor to create a code block within which the specified <a class=\"xref\" href=\"system.servicemodel.operationcontextscope\" data-linktype=\"relative-path\">OperationContextScope</a> object is the current scope.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_ServiceModel_OperationContextScope_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ServiceModel_OperationContextScope_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Restores the original <a class=\"xref\" href=\"system.servicemodel.operationcontext\" data-linktype=\"relative-path\">OperationContext</a> to the active context and recycles the <a class=\"xref\" href=\"system.servicemodel.operationcontextscope\" data-linktype=\"relative-path\">OperationContextScope</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.OperationContextScope.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.OperationContextScope\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.OperationContextScope..ctor\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.OperationContextScope.Dispose\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"105e0148-d76d-5e77-f935-f424cb5417e9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Creates a block within which an  object is in scope.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.servicemodel/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.OperationContextScope\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ServiceModel.OperationContextScope.yml","open_to_public_contributors":false,"api_name":["System.ServiceModel.OperationContextScope","System.ServiceModel.OperationContextScope..ctor","System.ServiceModel.OperationContextScope.Dispose"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.OperationContextScope","System::ServiceModel::OperationContextScope","System.ServiceModel.OperationContextScope.#ctor","System::ServiceModel::OperationContextScope::#ctor","System.ServiceModel.OperationContextScope.Dispose","System::ServiceModel::OperationContextScope::Dispose"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"105e0148-d76d-5e77-f935-f424cb5417e9","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ServiceModel/OperationContextScope.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OperationContextScope class | Microsoft Docs","_op_ogTitle":"OperationContextScope class","description":"Creates a block within which an  object is in scope.\n","toc_asset_id":"api/_splitted/System.ServiceModel/toc.json","toc_rel":"_splitted/System.ServiceModel/toc.json","source_url":"","ms.assetid":"System.ServiceModel.OperationContextScope","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.operationcontextscope","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.operationcontextscope","fileRelativePath":"api/System.ServiceModel.OperationContextScope.html"},"themesRelativePathToOutputRoot":"_themes/"}