{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EncoderReplacementFallback</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a failure handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence. The fallback uses a user-specified replacement string instead of the original input character. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class EncoderReplacementFallback : System.Text.EncoderFallback</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallback\" data-linktype=\"relative-path\">EncoderFallback</a></span></div><span class=\"lang-csharp\">EncoderReplacementFallback</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallback#System_Text_EncoderFallback_ExceptionFallback\" data-linktype=\"relative-path\">ExceptionFallback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallback#System_Text_EncoderFallback_ReplacementFallback\" data-linktype=\"relative-path\">ReplacementFallback</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates the EncoderReplacementFallback class.  </p>\n<pre><code class=\"lang-cs\" name=\"sys.txt.fallbackEncRpl#1\">// This example demonstrates the EncoderReplacementFallback class.\n\nusing System;\nusing System.Text;\n\nclass Sample \n{\n    public static void Main() \n    {\n\n// Create an encoding, which is equivalent to calling the \n// ASCIIEncoding class constructor. \n// The EncoderReplacementFallback parameter specifies that the\n// string, &quot;(unknown)&quot;, replace characters that cannot be encoded. \n// A decoder replacement fallback is also specified, but in this \n// code example the decoding operation cannot fail.  \n\n    Encoding ae = Encoding.GetEncoding(\n                  &quot;us-ascii&quot;,\n                  new EncoderReplacementFallback(&quot;(unknown)&quot;), \n                  new DecoderReplacementFallback(&quot;(error)&quot;));\n\n// The input string consists of the Unicode characters LEFT POINTING \n// DOUBLE ANGLE QUOTATION MARK (U+00AB), &#39;X&#39; (U+0058), and RIGHT POINTING \n// DOUBLE ANGLE QUOTATION MARK (U+00BB). \n// The encoding can only encode characters in the US-ASCII range of U+0000 \n// through U+007F. Consequently, the characters bracketing the &#39;X&#39; character\n// are replaced with the fallback replacement string, &quot;(unknown)&quot;.\n\n    string inputString = &quot;\\u00abX\\u00bb&quot;;\n    string decodedString;\n    string twoNewLines = &quot;\\n\\n&quot;;\n    byte[] encodedBytes = new byte[ae.GetByteCount(inputString)];\n    int numberOfEncodedBytes = 0;\n    int ix = 0;\n\n// --------------------------------------------------------------------------\n    Console.Clear();\n\n// Display the name of the encoding.\n    Console.WriteLine(&quot;The name of the encoding is \\&quot;{0}\\&quot;.\\n&quot;, ae.WebName);\n\n// Display the input string in text.\n    Console.WriteLine(&quot;Input string ({0} characters): \\&quot;{1}\\&quot;&quot;, \n                       inputString.Length, inputString);\n\n// Display the input string in hexadecimal.\n    Console.Write(&quot;Input string in hexadecimal: &quot;);\n    foreach (char c in inputString.ToCharArray()) \n        {\n        Console.Write(&quot;0x{0:X2} &quot;, (int)c);\n        }\n    Console.Write(twoNewLines);\n\n// --------------------------------------------------------------------------\n// Encode the input string. \n\n    Console.WriteLine(&quot;Encode the input string...&quot;);\n    numberOfEncodedBytes = ae.GetBytes(inputString, 0, inputString.Length, \n                                       encodedBytes, 0);\n\n// Display the encoded bytes.\n    Console.WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):\\n&quot;, \n                       numberOfEncodedBytes);\n    ix = 0;\n    foreach (byte b in encodedBytes)\n        {\n        Console.Write(&quot;0x{0:X2} &quot;, (int)b);\n        ix++;\n        if (0 == ix % 6) Console.WriteLine();\n        }\n    Console.Write(twoNewLines);\n\n// --------------------------------------------------------------------------\n// Decode the encoded bytes, yielding a reconstituted string.\n\n    Console.WriteLine(&quot;Decode the encoded bytes...&quot;);\n    decodedString = ae.GetString(encodedBytes);\n\n// Display the input string and the decoded string for comparison.\n    Console.WriteLine(&quot;Input string:  \\&quot;{0}\\&quot;&quot;, inputString);\n    Console.WriteLine(&quot;Decoded string:\\&quot;{0}\\&quot;&quot;, decodedString);\n    }\n}\n/*\nThis code example produces the following results:\n\nThe name of the encoding is &quot;us-ascii&quot;.\n\nInput string (3 characters): &quot;�X�&quot;\nInput string in hexadecimal: 0xAB 0x58 0xBB\n\nEncode the input string...\nEncoded bytes in hexadecimal (19 bytes):\n\n0x28 0x75 0x6E 0x6B 0x6E 0x6F\n0x77 0x6E 0x29 0x58 0x28 0x75\n0x6E 0x6B 0x6E 0x6F 0x77 0x6E\n0x29\n\nDecode the encoded bytes...\nInput string:  &quot;�X�&quot;\nDecoded string:&quot;(unknown)X(unknown)&quot;\n\n*/\n</code></pre><pre><code class=\"lang-cpp\" name=\"sys.txt.fallbackEncRpl#1\">// This example demonstrates the EncoderReplacementFallback class.\n\nusing namespace System;\nusing namespace System::Text;\n\nint main()\n{\n    // Create an encoding, which is equivalent to calling the\n    // ASCIIEncoding class constructor.\n    // The EncoderReplacementFallback parameter specifies that the\n    // string, &quot;(unknown)&quot;, replace characters that cannot be encoded.\n    // A decoder replacement fallback is also specified, but in this\n    // code example the decoding operation cannot fail.\n\n    Encoding^ ascii = Encoding::GetEncoding(&quot;us-ascii&quot;,\n        gcnew EncoderReplacementFallback(&quot;(unknown)&quot;),\n        gcnew DecoderReplacementFallback(&quot;(error)&quot;));\n\n    // The input string consists of the Unicode characters LEFT POINTING\n    // DOUBLE ANGLE QUOTATION MARK (U+00AB), &#39;X&#39; (U+0058), and RIGHT\n    // POINTING DOUBLE ANGLE QUOTATION MARK (U+00BB).\n    // The encoding can only encode characters in the US-ASCII range of\n    // U+0000 through U+007F. Consequently, the characters bracketing the\n    // &#39;X&#39; character are replaced with the fallback replacement string,\n    // &quot;(unknown)&quot;.\n\n    String^ inputString = &quot;\\u00abX\\u00bb&quot;;\n    String^ decodedString;\n    String^ twoNewLines = Environment::NewLine + Environment::NewLine;\n    array &lt;Byte&gt;^ encodedBytes = \n        gcnew array&lt;Byte&gt;(ascii-&gt;GetByteCount(inputString));\n    int numberOfEncodedBytes = 0;\n\n    // ---------------------------------------------------------------------\n    Console::Clear();\n\n    // Display the name of the encoding.\n    Console::WriteLine(&quot;The name of the encoding is \\&quot;{0}\\&quot;.{1}&quot;, \n        ascii-&gt;WebName, Environment::NewLine);\n\n    // Display the input string in text.\n    Console::WriteLine(&quot;Input string ({0} characters): \\&quot;{1}\\&quot;&quot;,\n        inputString-&gt;Length, inputString);\n\n    // Display the input string in hexadecimal.\n    Console::Write(&quot;Input string in hexadecimal: &quot;);\n    for each (char c in inputString)\n    {\n        Console::Write(&quot;0x{0:X2} &quot;, c);\n    }\n    Console::Write(twoNewLines);\n\n    // ---------------------------------------------------------------------\n    // Encode the input string.\n\n    Console::WriteLine(&quot;Encode the input string...&quot;);\n    numberOfEncodedBytes = ascii-&gt;GetBytes(inputString, 0, inputString-&gt;Length,\n        encodedBytes, 0);\n\n    // Display the encoded bytes.\n    Console::WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):{1}&quot;,\n        numberOfEncodedBytes, Environment::NewLine);\n    for(int i = 0; i &lt; encodedBytes-&gt;Length; i++)\n    {\n        Console::Write(&quot;0x{0:X2} &quot;, encodedBytes[i]);\n        if(((i + 1) % 6) == 0)\n        {\n            Console::WriteLine();\n        }\n    }\n    Console::Write(twoNewLines);\n\n    // ---------------------------------------------------------------------\n    // Decode the encoded bytes, yielding a reconstituted string.\n\n    Console::WriteLine(&quot;Decode the encoded bytes...&quot;);\n    decodedString = ascii-&gt;GetString(encodedBytes);\n\n    // Display the input string and the decoded string for comparison.\n    Console::WriteLine(&quot;Input string:  \\&quot;{0}\\&quot;&quot;, inputString);\n    Console::WriteLine(&quot;Decoded string:\\&quot;{0}\\&quot;&quot;, decodedString);\n}\n\n\n\n/*\nThis code example produces the following results:\n\nThe name of the encoding is &quot;us-ascii&quot;.\n\nInput string (3 characters): &quot;X&quot;\nInput string in hexadecimal: 0xAB 0x58 0xBB\n\nEncode the input string...\nEncoded bytes in hexadecimal (19 bytes):\n\n0x28 0x75 0x6E 0x6B 0x6E 0x6F\n0x77 0x6E 0x29 0x58 0x28 0x75\n0x6E 0x6B 0x6E 0x6F 0x77 0x6E\n0x29\n\nDecode the encoded bytes...\nInput string:  &quot;X&quot;\nDecoded string:&quot;(unknown)X(unknown)&quot;\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"sys.txt.fallbackEncRpl#1\">&#39; This example demonstrates the EncoderReplacementFallback class.\nImports System\nImports System.Text\n\nClass Sample\n    Public Shared Sub Main() \n        \n        &#39; Create an encoding, which is equivalent to calling the \n        &#39; ASCIIEncoding class constructor. \n        &#39; The EncoderReplacementFallback parameter specifies that the \n        &#39; string, &quot;(unknown)&quot;, replace characters that cannot be encoded. \n        &#39; A decoder replacement fallback is also specified, but in this \n        &#39; code example the decoding operation cannot fail.  \n\n        Dim erf As New EncoderReplacementFallback(&quot;(unknown)&quot;)\n        Dim drf As New DecoderReplacementFallback(&quot;(error)&quot;)\n        Dim ae As Encoding = Encoding.GetEncoding(&quot;us-ascii&quot;, erf, drf)\n        \n        &#39; The input string consists of the Unicode characters LEFT POINTING \n        &#39; DOUBLE ANGLE QUOTATION MARK (U+00AB), &#39;X&#39; (U+0058), and RIGHT POINTING \n        &#39; DOUBLE ANGLE QUOTATION MARK (U+00BB). \n        &#39; The encoding can only encode characters in the US-ASCII range of U+0000 \n        &#39; through U+007F. Consequently, the characters bracketing the &#39;X&#39; character\n        &#39; are replaced with the fallback replacement string, &quot;(unknown)&quot;.\n\n        Dim inputString As String = &quot;&#171;X&#187;&quot;\n        Dim decodedString As String\n        Dim twoNewLines As String = vbCrLf &amp; vbCrLf\n        Dim ix As Integer = 0\n        Dim numberOfEncodedBytes As Integer = ae.GetByteCount(inputString)\n        &#39; Counteract the compiler adding an extra byte to the array.\n        Dim encodedBytes(numberOfEncodedBytes - 1) As Byte\n        \n        &#39; --------------------------------------------------------------------------\n        Console.Clear()\n        \n        &#39; Display the name of the encoding.\n        Console.WriteLine(&quot;The name of the encoding is &quot;&quot;{0}&quot;&quot;.&quot; &amp; vbCrLf, ae.WebName)\n        \n        &#39; Display the input string in text.\n        Console.WriteLine(&quot;Input string ({0} characters): &quot;&quot;{1}&quot;&quot;&quot;, _\n                           inputString.Length, inputString)\n        \n        &#39; Display the input string in hexadecimal. \n        &#39; Each element is converted to an integer with Convert.ToInt32.\n        Console.Write(&quot;Input string in hexadecimal: &quot;)\n        Dim c As Char\n        For Each c In inputString.ToCharArray()\n            Console.Write(&quot;0x{0:X2} &quot;, Convert.ToInt32(c))\n        Next c\n        Console.Write(twoNewLines)\n        \n        &#39; --------------------------------------------------------------------------\n        &#39; Encode the input string. \n        Console.WriteLine(&quot;Encode the input string...&quot;)\n        numberOfEncodedBytes = ae.GetBytes(inputString, 0, inputString.Length, _\n                                           encodedBytes, 0)\n        \n        &#39; Display the encoded bytes. \n        &#39; Each element is converted to an integer with Convert.ToInt32.\n        Console.WriteLine(&quot;Encoded bytes in hexadecimal ({0} bytes):&quot; &amp; vbCrLf, _\n                           numberOfEncodedBytes)\n        ix = 0\n        Dim b As Byte\n        For Each b In encodedBytes\n            Console.Write(&quot;0x{0:X2} &quot;, Convert.ToInt32(b))\n            ix += 1\n            If 0 = ix Mod 6 Then\n                Console.WriteLine()\n            End If\n        Next b\n        Console.Write(twoNewLines)\n        \n        &#39; --------------------------------------------------------------------------\n        &#39; Decode the encoded bytes, yielding a reconstituted string.\n        Console.WriteLine(&quot;Decode the encoded bytes...&quot;)\n        decodedString = ae.GetString(encodedBytes)\n        \n        &#39; Display the input string and the decoded string for comparison.\n        Console.WriteLine(&quot;Input string:  &quot;&quot;{0}&quot;&quot;&quot;, inputString)\n        Console.WriteLine(&quot;Decoded string:&quot;&quot;{0}&quot;&quot;&quot;, decodedString)\n    \n    End Sub &#39;Main\nEnd Class &#39;Sample\n&#39;\n&#39;This code example produces the following results:\n&#39;\n&#39;The name of the encoding is &quot;us-ascii&quot;.\n&#39;\n&#39;Input string (3 characters): &quot;X&quot;\n&#39;Input string in hexadecimal: 0xAB 0x58 0xBB\n&#39;\n&#39;Encode the input string...\n&#39;Encoded bytes in hexadecimal (19 bytes):\n&#39;\n&#39;0x28 0x75 0x6E 0x6B 0x6E 0x6F\n&#39;0x77 0x6E 0x29 0x58 0x28 0x75\n&#39;0x6E 0x6B 0x6E 0x6F 0x77 0x6E\n&#39;0x29\n&#39;\n&#39;Decode the encoded bytes...\n&#39;Input string:  &quot;X&quot;\n&#39;Decoded string:&quot;(unknown)X(unknown)&quot;\n&#39;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. For example, an <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> object cannot encode a character having a Unicode code point value that is outside the range U+0000 to U+007F. If the input character cannot be converted to an output byte sequence, a EncoderReplacementFallback object substitutes a specified replacement string for the original input character. The conversion process encodes the replacement string and then continues to process the remainder of the original input.  </p>\n<p> The replacement string used by an EncoderReplacementFallback object is determined by the call to its class constructor. Two options are available:  </p>\n<ul>\n<li><p>Replacement with the default character. If you call the <a class=\"xref\" href=\"system.text.encoderreplacementfallback#System_Text_EncoderReplacementFallback__ctor\" data-linktype=\"relative-path\">EncoderReplacementFallback()</a> constructor, the replacement character is &quot;?&quot; (U+003F).  </p>\n</li>\n<li><p>Replacement with a string of your choice. If you call the <a class=\"xref\" href=\"system.text.encoderreplacementfallback#System_Text_EncoderReplacementFallback__ctor_System_String_\" data-linktype=\"relative-path\">EncoderReplacementFallback(String)</a> constructor, you provide the replacement string.  </p>\n</li>\n</ul>\n<p> If you choose a fallback string to use with this class, make sure that the string is composed entirely of characters that can be encoded in the target encoding. Otherwise, a recursive fallback results, causing an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> This class is one of two .NET Framework classes that implement different fallback strategies for handling encoding conversion failures. The other class is the <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a> class, which throws an <a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a> when an invalid character is encountered.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncoderReplacementFallback__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncoderReplacementFallback()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EncoderReplacementFallback ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default, the replacement string that is the value of this <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object is &quot;?&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncoderReplacementFallback__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncoderReplacementFallback(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> class using a specified replacement string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EncoderReplacementFallback (string replacement);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>replacement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that is converted in an encoding operation in place of an input character that cannot be encoded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>replacement</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>replacement</code> contains an invalid surrogate pair. In other words, the surrogate does not consist of one high surrogate component followed by one low surrogate component.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>replacement</code> parameter initializes the replacement string that is the value of this <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object. You application must provide a <code>replacement</code> value that contains only characters that can be encoded in the target encoding. Otherwise, a recursive fallback results, causing an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>. For example, the fallback provided for an <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> object cannot include the character &quot;¿&quot; (U+00BF) because that character is itself not a valid ASCII character.  </p>\n<p> As a result of this, U+FFFD, which is a good choice for a fallback string for <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>, is not generally a good choice for this class. Also, the null character (U+0000) cannot be used in the fallback string.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncoderReplacementFallback_DefaultString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultString</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the replacement string that is the value of the <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DefaultString { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A substitute string that is used in place of an input character that cannot be encoded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncoderReplacementFallback_MaxCharCount\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxCharCount</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of characters in the replacement string for the <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int MaxCharCount { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of characters in the string used in place of an input character that cannot be encoded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncoderReplacementFallback_CreateFallbackBuffer\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateFallbackBuffer()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <a class=\"xref\" href=\"system.text.encoderfallbackbuffer\" data-linktype=\"relative-path\">EncoderFallbackBuffer</a> object that is initialized with the replacement string of this <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackbuffer\" data-linktype=\"relative-path\">EncoderFallbackBuffer</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.text.encoderfallbackbuffer\" data-linktype=\"relative-path\">EncoderFallbackBuffer</a> object equal to this <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncoderReplacementFallback_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether the value of a specified object is equal to the <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>value</code> parameter specifies an <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object and the replacement string of that object is equal to the replacement string of this <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of a <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object is the value of its <a class=\"xref\" href=\"system.text.encoderreplacementfallback#System_Text_EncoderReplacementFallback_DefaultString_\" data-linktype=\"relative-path\">DefaultString</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncoderReplacementFallback_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the hash code for the value of the <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The hash code of the value of the object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of a <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a> object is the value of its <a class=\"xref\" href=\"system.text.encoderreplacementfallback#System_Text_EncoderReplacementFallback_DefaultString_\" data-linktype=\"relative-path\">DefaultString</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Text.EncoderReplacementFallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Text.EncoderReplacementFallback\">\r\n<meta name=\"APIName\" content=\"System.Text.EncoderReplacementFallback..ctor\">\r\n<meta name=\"APIName\" content=\"System.Text.EncoderReplacementFallback.CreateFallbackBuffer\">\r\n<meta name=\"APIName\" content=\"System.Text.EncoderReplacementFallback.DefaultString\">\r\n<meta name=\"APIName\" content=\"System.Text.EncoderReplacementFallback.Equals\">\r\n<meta name=\"APIName\" content=\"System.Text.EncoderReplacementFallback.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Text.EncoderReplacementFallback.MaxCharCount\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"c14f6930-1d37-13cd-4c02-cddbf9754296\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a failure handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence. The fallback uses a user-specified replacement string instead of…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.text/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Text.EncoderReplacementFallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Text.EncoderReplacementFallback.yml","open_to_public_contributors":false,"api_name":["System.Text.EncoderReplacementFallback","System.Text.EncoderReplacementFallback..ctor","System.Text.EncoderReplacementFallback.CreateFallbackBuffer","System.Text.EncoderReplacementFallback.DefaultString","System.Text.EncoderReplacementFallback.Equals","System.Text.EncoderReplacementFallback.GetHashCode","System.Text.EncoderReplacementFallback.MaxCharCount"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Text.EncoderReplacementFallback","System::Text::EncoderReplacementFallback","System.Text.EncoderReplacementFallback.#ctor","System::Text::EncoderReplacementFallback::#ctor","System.Text.EncoderReplacementFallback.CreateFallbackBuffer","System::Text::EncoderReplacementFallback::CreateFallbackBuffer","System.Text.EncoderReplacementFallback.DefaultString","System::Text::EncoderReplacementFallback::DefaultString","System.Text.EncoderReplacementFallback.Equals","System::Text::EncoderReplacementFallback::Equals","System.Text.EncoderReplacementFallback.GetHashCode","System::Text::EncoderReplacementFallback::GetHashCode","System.Text.EncoderReplacementFallback.MaxCharCount","System::Text::EncoderReplacementFallback::MaxCharCount"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"c14f6930-1d37-13cd-4c02-cddbf9754296","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Text/EncoderReplacementFallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EncoderReplacementFallback class | Microsoft Docs","_op_ogTitle":"EncoderReplacementFallback class","description":"Provides a failure handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence. The fallback uses a user-specified replacement string instead of…","toc_asset_id":"api/_splitted/System.Text/toc.json","toc_rel":"_splitted/System.Text/toc.json","source_url":"","ms.assetid":"System.Text.EncoderReplacementFallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.text.encoderreplacementfallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.text.encoderreplacementfallback","fileRelativePath":"api/System.Text.EncoderReplacementFallback.html"},"themesRelativePathToOutputRoot":"_themes/"}