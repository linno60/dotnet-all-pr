{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DefaultTraceListener</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the default output methods and behavior for tracing.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class DefaultTraceListener : System.Diagnostics.TraceListener</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a></span></div><span class=\"lang-csharp\">DefaultTraceListener</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Attributes\" data-linktype=\"relative-path\">Attributes</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Close\" data-linktype=\"relative-path\">Close()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Filter\" data-linktype=\"relative-path\">Filter</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Flush\" data-linktype=\"relative-path\">Flush()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_GetSupportedAttributes\" data-linktype=\"relative-path\">GetSupportedAttributes()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IndentLevel\" data-linktype=\"relative-path\">IndentLevel</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IndentSize\" data-linktype=\"relative-path\">IndentSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IsThreadSafe\" data-linktype=\"relative-path\">IsThreadSafe</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_NeedIndent\" data-linktype=\"relative-path\">NeedIndent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceData_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_Object_\" data-linktype=\"relative-path\">TraceData(TraceEventCache, String, TraceEventType, Int32, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceData_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_Object___\" data-linktype=\"relative-path\">TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache, String, TraceEventType, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_String_\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_String_System_Object___\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceOutputOptions\" data-linktype=\"relative-path\">TraceOutputOptions</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceTransfer_System_Diagnostics_TraceEventCache_System_String_System_Int32_System_String_System_Guid_\" data-linktype=\"relative-path\">TraceTransfer(TraceEventCache, String, Int32, String, Guid)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_Object_\" data-linktype=\"relative-path\">Write(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_Object_System_String_\" data-linktype=\"relative-path\">Write(Object, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_String_System_String_\" data-linktype=\"relative-path\">Write(String, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteIndent\" data-linktype=\"relative-path\">WriteIndent()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_Object_\" data-linktype=\"relative-path\">WriteLine(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_Object_System_String_\" data-linktype=\"relative-path\">WriteLine(Object, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_String_System_String_\" data-linktype=\"relative-path\">WriteLine(String, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example calculates binomial coefficients, which are values used in probability and statistics. This example uses a DefaultTraceListener to trace results and log errors. It creates a new DefaultTraceListener, adds it to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, and sets the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_LogFileName_\" data-linktype=\"relative-path\">LogFileName</a> property to the log file specified in the command-line arguments.  </p>\n<p> If an error is detected while processing the input parameter, or if the <code>CalcBinomial</code> function throws an exception, the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Fail_\" data-linktype=\"relative-path\">Fail</a> method logs and displays an error message. If the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_AssertUiEnabled_\" data-linktype=\"relative-path\">AssertUiEnabled</a> property is <code>false</code>, the error message is also written to the console. When the result is calculated successfully, the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Write_System_String_\" data-linktype=\"relative-path\">Write(String)</a> and <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_WriteLine_System_String_\" data-linktype=\"relative-path\">WriteLine(String)</a> methods write the results to the log file.  </p>\n<p> The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Fail_\" data-linktype=\"relative-path\">Fail</a>, <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Write_\" data-linktype=\"relative-path\">Write</a>, and <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods cause trace information to be written only to the DefaultTraceListener. To write trace information to all listeners in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, use the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Fail_\" data-linktype=\"relative-path\">Fail</a>, <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Write_\" data-linktype=\"relative-path\">Write</a>, and <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods of the <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener#11\">using System;\nusing System.Diagnostics;\nusing Microsoft.VisualBasic;\n\nclass Binomial\n{\n\n    // args(0) is the number of possibilities for binomial coefficients.\n    // args(1) is the file specification for the trace log file.\n    public static void Main(string[] args)\n    {\n\n        decimal possibilities;\n        decimal iter;\n\n        // Remove the original default trace listener.\n        Trace.Listeners.RemoveAt(0);\n\n        // Create and add a new default trace listener.\n        DefaultTraceListener defaultListener;\n        defaultListener = new DefaultTraceListener();\n        Trace.Listeners.Add(defaultListener);\n\n        // Assign the log file specification from the command line, if entered.\n        if (args.Length&gt;=2)\n        {\n            defaultListener.LogFileName = args[1];\n        }\n\n        // Validate the number of possibilities argument.\n        if (args.Length&gt;=1)\n\n            // Verify that the argument is a number within the correct range.\n        {\n            try\n            {\n                const decimal MAX_POSSIBILITIES = 99;\n                possibilities = Decimal.Parse(args[0]);\n                if (possibilities&lt;0||possibilities&gt;MAX_POSSIBILITIES)\n                {\n                    throw new Exception(String.Format(&quot;The number of possibilities must &quot; +\n                        &quot;be in the range 0..{0}.&quot;, MAX_POSSIBILITIES));\n                }\n            }\n            catch(Exception ex)\n            {\n                string failMessage = String.Format(&quot;\\&quot;{0}\\&quot; &quot; +\n                    &quot;is not a valid number of possibilities.&quot;, args[0]);\n                defaultListener.Fail(failMessage, ex.Message);\n                if (!defaultListener.AssertUiEnabled)\n                {\n                    Console.WriteLine(failMessage+ &quot;\\n&quot; +ex.Message);\n                }\n                return;\n            }\n        }\n        else\n        {\n            // Report that the required argument is not present.\n            const string ENTER_PARAM = &quot;Enter the number of &quot; +\n                      &quot;possibilities as a command line argument.&quot;;\n            defaultListener.Fail(ENTER_PARAM);\n            if (!defaultListener.AssertUiEnabled)\n            {\n                Console.WriteLine(ENTER_PARAM);\n            }\n            return;\n        }\n\n        for(iter=0; iter&lt;=possibilities; iter++)\n        {\n            decimal result;\n            string binomial;\n\n            // Compute the next binomial coefficient and handle all exceptions.\n            try\n            {\n                result = CalcBinomial(possibilities, iter);\n            }\n            catch(Exception ex)\n            {\n                string failMessage = String.Format(&quot;An exception was raised when &quot; +\n                    &quot;calculating Binomial( {0}, {1} ).&quot;, possibilities, iter);\n                defaultListener.Fail(failMessage, ex.Message);\n                if (!defaultListener.AssertUiEnabled)\n                {\n                    Console.WriteLine(failMessage+ &quot;\\n&quot; +ex.Message);\n                }\n                return;\n            }\n\n            // Format the trace and console output.\n            binomial = String.Format(&quot;Binomial( {0}, {1} ) = &quot;, possibilities, iter);\n            defaultListener.Write(binomial);\n            defaultListener.WriteLine(result.ToString());\n            Console.WriteLine(&quot;{0} {1}&quot;, binomial, result);\n        }\n    }\n\n    public static decimal CalcBinomial(decimal possibilities, decimal outcomes)\n    {\n\n        // Calculate a binomial coefficient, and minimize the chance of overflow.\n        decimal result = 1;\n        decimal iter;\n        for(iter=1; iter&lt;=possibilities-outcomes; iter++)\n        {\n            result *= outcomes+iter;\n            result /= iter;\n        }\n        return result;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener#11\">Imports System\nImports System.Diagnostics\nImports Microsoft.VisualBasic\n\nModule Binomial\n\n    &#39; args(0) is the number of possibilities for binomial coefficients.\n    &#39; args(1) is the file specification for the trace log file.\n    Sub Main(ByVal args() As String)\n\n        Dim possibilities As Decimal\n        Dim iter As Decimal\n\n        &#39; Remove the original default trace listener.\n        Trace.Listeners.RemoveAt(0)\n\n        &#39; Create and add a new default trace listener.\n        Dim defaultListener As DefaultTraceListener\n        defaultListener = New DefaultTraceListener\n        Trace.Listeners.Add(defaultListener)\n\n        &#39; Assign the log file specification from the command line, if entered.\n        If args.Length &gt;= 2 Then\n            defaultListener.LogFileName = args(1)\n        End If\n\n        &#39; Validate the number of possibilities argument.\n        If args.Length &gt;= 1 Then\n\n            &#39; Verify that the argument is a number within the correct range.\n            Try\n                Const MAX_POSSIBILITIES As Decimal = 99\n                possibilities = Decimal.Parse(args(0))\n                If possibilities &lt; 0 Or possibilities &gt; MAX_POSSIBILITIES Then\n                    Throw New Exception( _\n                        String.Format(&quot;The number of possibilities must &quot; &amp; _\n                            &quot;be in the range 0..{0}.&quot;, MAX_POSSIBILITIES))\n                End If\n            Catch ex As Exception\n                Dim failMessage As String = String.Format(&quot;&quot;&quot;{0}&quot;&quot; &quot; &amp; _\n                    &quot;is not a valid number of possibilities.&quot;, args(0))\n                defaultListener.Fail(failMessage, ex.Message)\n                If Not defaultListener.AssertUiEnabled Then\n                    Console.WriteLine(failMessage &amp; vbCrLf &amp; ex.Message)\n                End If\n                Return\n            End Try\n        Else\n            &#39; Report that the required argument is not present.\n            Const ENTER_PARAM As String = &quot;Enter the number of &quot; &amp; _\n                &quot;possibilities as a command line argument.&quot;\n            defaultListener.Fail(ENTER_PARAM)\n            If Not defaultListener.AssertUiEnabled Then\n                Console.WriteLine(ENTER_PARAM)\n            End If\n            Return\n        End If\n\n        For iter = 0 To possibilities\n            Dim result As Decimal\n            Dim binomial As String\n\n            &#39; Compute the next binomial coefficient and handle all exceptions.\n            Try\n                result = CalcBinomial(possibilities, iter)\n            Catch ex As Exception\n                Dim failMessage As String = String.Format( _\n                        &quot;An exception was raised when &quot; &amp; _\n                        &quot;calculating Binomial( {0}, {1} ).&quot;, _\n                        possibilities, iter)\n                defaultListener.Fail(failmessage, ex.Message)\n                If Not defaultListener.AssertUiEnabled Then\n                    Console.WriteLine(failMessage &amp; vbCrLf &amp; ex.Message)\n                End If\n                Return\n            End Try\n\n            &#39; Format the trace and console output.\n            binomial = String.Format(&quot;Binomial( {0}, {1} ) = &quot;, _\n                            possibilities, iter)\n            defaultListener.Write(binomial)\n            defaultListener.WriteLine(result.ToString)\n            Console.WriteLine(&quot;{0} {1}&quot;, binomial, result)\n        Next\n    End Sub\n\n    Function CalcBinomial(ByVal possibilities As Decimal, _\n                        ByVal outcomes As Decimal) As Decimal\n\n        &#39; Calculate a binomial coefficient, and minimize the chance of overflow.\n        Dim result As Decimal = 1\n        Dim iter As Decimal\n        For iter = 1 To possibilities - outcomes\n            result *= outcomes + iter\n            result /= iter\n        Next\n        Return result\n    End Function\nEnd Module\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>An instance of this class is automatically added to the <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Listeners_\" data-linktype=\"relative-path\">Listeners</a> and <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collections. Explicitly adding a second DefaultTraceListener causes duplicate messages in the debugger output window and duplicate message boxes for asserts.  </p>\n<p> By default, the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Write_\" data-linktype=\"relative-path\">Write</a> and <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods emit the message to the Win32 <code>OutputDebugString</code> function and to the <a class=\"xref\" href=\"system.diagnostics.debugger#System_Diagnostics_Debugger_Log_\" data-linktype=\"relative-path\">Log</a> method. For information about the <code>OutputDebugString</code> function, see the Platform SDK or MSDN.  </p>\n<p> The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Fail_\" data-linktype=\"relative-path\">Fail</a> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The display of the message box for <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Assert_\" data-linktype=\"relative-path\">Assert</a> and <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Fail_\" data-linktype=\"relative-path\">Fail</a> method calls depends on the presence of the DefaultTraceListener. If the DefaultTraceListener is not in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, the message box is not displayed. The DefaultTraceListener can be removed by the <a href=\"../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&lt;clear&gt; element</a>, by the <a href=\"../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&lt;remove&gt; element</a>, or by calling the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method on the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).  </p>\n</div>\n<p> You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  </p>\n<ul>\n<li><p>To enable debugging in C#, add the <code>/d:DEBUG</code> flag to the compiler command line when you compile your code, or add <code>#define DEBUG</code> to the top of your file. In Visual Basic, add the <code>/d:DEBUG=True</code> flag to the compiler command line.  </p>\n</li>\n<li><p>To enable tracing in C#, add the <code>/d:TRACE</code> flag to the compiler command line when you compile your code, or add <code>#define TRACE</code> to the top of your file. In Visual Basic, add the <code>/d:TRACE=True</code> flag to the compiler command line.  </p>\n</li>\n</ul>\n<p> To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example:  </p>\n<pre><code>&lt;configuration&gt;  \n&lt;system.diagnostics&gt;  \n  &lt;trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;&gt;  \n    &lt;listeners&gt;  \n      &lt;remove name=&quot;Default&quot; /&gt;  \n      &lt;add name=&quot;myListener&quot;  type=&quot;System.Diagnostics.TextWriterTraceListener&quot;    initializeData=&quot;c:\\myListener.log&quot; /&gt;  \n    &lt;/listeners&gt;  \n  &lt;/trace&gt;  \n&lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_DefaultTraceListener__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_DefaultTraceListener__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultTraceListener()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> class with &quot;Default&quot; as its <span class=\"xref\">stem.Diagnostics.TraceListener.Name*</span> property value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DefaultTraceListener ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_DefaultTraceListener_AssertUiEnabled_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_DefaultTraceListener_AssertUiEnabled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AssertUiEnabled</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the application is running in user-interface mode.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AssertUiEnabled { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if user-interface mode is enabled; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_DefaultTraceListener_LogFileName_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_DefaultTraceListener_LogFileName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LogFileName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of a log file to write trace or debug messages to.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string LogFileName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of a log file to write trace or debug messages to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_DefaultTraceListener_Fail_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_DefaultTraceListener_Fail_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Fail(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Emits or displays a message and a stack trace for an assertion that always fails.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Fail (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to emit or display.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default, this method sends the <code>message</code> parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_DefaultTraceListener_Fail_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_DefaultTraceListener_Fail_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Fail(String, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Emits or displays detailed messages and a stack trace for an assertion that always fails.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Fail (string message, string detailMessage);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to emit or display.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>detailMessage</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The detailed message to emit or display.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default, this method sends the <code>message</code> parameter, the <code>detailMessage</code> parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_DefaultTraceListener_Write_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_DefaultTraceListener_Write_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Write(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the output to the <code>OutputDebugString</code> function and to the <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Write (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to write to <code>OutputDebugString</code> and <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For information about the Win32 <code>OutputDebugString</code> debugging function, see &quot;OutputDebugString&quot; in the Platform SDK or MSDN.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_DefaultTraceListener_WriteLine_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_DefaultTraceListener_WriteLine_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteLine(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the output to the <code>OutputDebugString</code> function and to the <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span> method, followed by a carriage return and line feed (\\r\\n).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void WriteLine (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to write to <code>OutputDebugString</code> and <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default line terminator is a carriage return followed by a line feed (\\r\\n).  </p>\n<p> For information about the Win32 <code>OutputDebugString</code> debugging function, see the Platform SDK or MSDN.  </p>\n<p> This method sets the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_NeedIndent_\" data-linktype=\"relative-path\">NeedIndent</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \t<h2 class=\"accented\">Thread Safety</h2>\r\n  \tThis class is thread safe.\r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.DefaultTraceListener.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.AssertUiEnabled\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.Fail\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.LogFileName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.Write\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.WriteLine\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"ea2448f0-8646-f6e5-1ca0-1b72a3da5eb9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the default output methods and behavior for tracing.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.diagnostics/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.DefaultTraceListener\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.DefaultTraceListener.yml","open_to_public_contributors":false,"api_name":["System.Diagnostics.DefaultTraceListener","System.Diagnostics.DefaultTraceListener..ctor","System.Diagnostics.DefaultTraceListener.AssertUiEnabled","System.Diagnostics.DefaultTraceListener.Fail","System.Diagnostics.DefaultTraceListener.LogFileName","System.Diagnostics.DefaultTraceListener.Write","System.Diagnostics.DefaultTraceListener.WriteLine"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.DefaultTraceListener","System::Diagnostics::DefaultTraceListener","System.Diagnostics.DefaultTraceListener.#ctor","System::Diagnostics::DefaultTraceListener::#ctor","System.Diagnostics.DefaultTraceListener.AssertUiEnabled","System::Diagnostics::DefaultTraceListener::AssertUiEnabled","System.Diagnostics.DefaultTraceListener.Fail","System::Diagnostics::DefaultTraceListener::Fail","System.Diagnostics.DefaultTraceListener.LogFileName","System::Diagnostics::DefaultTraceListener::LogFileName","System.Diagnostics.DefaultTraceListener.Write","System::Diagnostics::DefaultTraceListener::Write","System.Diagnostics.DefaultTraceListener.WriteLine","System::Diagnostics::DefaultTraceListener::WriteLine"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"ea2448f0-8646-f6e5-1ca0-1b72a3da5eb9","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DefaultTraceListener class | Microsoft Docs","_op_ogTitle":"DefaultTraceListener class","description":"Provides the default output methods and behavior for tracing.\n","toc_asset_id":"api/_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.DefaultTraceListener","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.defaulttracelistener","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.defaulttracelistener","fileRelativePath":"api/System.Diagnostics.DefaultTraceListener.html"},"themesRelativePathToOutputRoot":"_themes/"}