{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CodePropertySetValueReferenceExpression</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the value argument of a property set method call within a property set method.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\n[ECMA2Yaml.Models.ECMAAttribute]\npublic class CodePropertySetValueReferenceExpression : System.CodeDom.CodeExpression</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeobject\" data-linktype=\"relative-path\">CodeObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a></span></div><span class=\"lang-csharp\">CodePropertySetValueReferenceExpression</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeobject#System_CodeDom_CodeObject_UserData\" data-linktype=\"relative-path\">UserData</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>This example demonstrates use of a CodePropertySetValueReferenceExpression to represent the value argument passed to a property set value statement block.  </p>\n<pre><code class=\"lang-cpp\" name=\"CodePropertySetValueExample#2\">// Declares a type.\nCodeTypeDeclaration^ type1 = gcnew CodeTypeDeclaration( &quot;Type1&quot; );\n\n// Declares a constructor.\nCodeConstructor^ constructor1 = gcnew CodeConstructor;\nconstructor1-&gt;Attributes = MemberAttributes::Public;\ntype1-&gt;Members-&gt;Add( constructor1 );\n\n// Declares an integer field.\nCodeMemberField^ field1 = gcnew CodeMemberField( &quot;System.Int32&quot;,&quot;integerField&quot; );\ntype1-&gt;Members-&gt;Add( field1 );\n\n// Declares a property.\nCodeMemberProperty^ property1 = gcnew CodeMemberProperty;\n\n// Declares a property get statement to return the value of the integer field.\nproperty1-&gt;GetStatements-&gt;Add( gcnew CodeMethodReturnStatement( gcnew CodeFieldReferenceExpression( gcnew CodeThisReferenceExpression,&quot;integerField&quot; ) ) );\n\n// Declares a property set statement to set the value to the integer field.\n// The CodePropertySetValueReferenceExpression represents the value argument passed to the property set statement.\nproperty1-&gt;SetStatements-&gt;Add( gcnew CodeAssignStatement( gcnew CodeFieldReferenceExpression( gcnew CodeThisReferenceExpression,&quot;integerField&quot; ),gcnew CodePropertySetValueReferenceExpression ) );\ntype1-&gt;Members-&gt;Add( property1 );\n\n// A C# code generator produces the following source code for the preceeding example code:\n//    public class Type1 \n//    {\n//\n//        private int integerField;\n//\n//        public Type1() \n//        {\n//        }\n//                            \n//        private int integerProperty \n//        {\n//            get \n//            {\n//                return this.integerField;\n//            }\n//            set \n//            {\n//                this.integerField = value;\n//            }\n//        }\n//    }\n</code></pre><pre><code class=\"lang-cs\" name=\"CodePropertySetValueExample#2\">// Declares a type.\nCodeTypeDeclaration type1 = new CodeTypeDeclaration(&quot;Type1&quot;);\n\n// Declares a constructor.\nCodeConstructor constructor1 = new CodeConstructor();\nconstructor1.Attributes = MemberAttributes.Public;\ntype1.Members.Add( constructor1 );\n\n// Declares an integer field.\nCodeMemberField field1 = new CodeMemberField(&quot;System.Int32&quot;, &quot;integerField&quot;);\ntype1.Members.Add( field1 );\n\n// Declares a property.\nCodeMemberProperty property1 = new CodeMemberProperty();\n// Declares a property get statement to return the value of the integer field.\nproperty1.GetStatements.Add( new CodeMethodReturnStatement( new CodeFieldReferenceExpression(new CodeThisReferenceExpression(), &quot;integerField&quot;) ) );\n// Declares a property set statement to set the value to the integer field.\n// The CodePropertySetValueReferenceExpression represents the value argument passed to the property set statement.\nproperty1.SetStatements.Add( new CodeAssignStatement( new CodeFieldReferenceExpression(new CodeThisReferenceExpression(), &quot;integerField&quot;), \n                                    new CodePropertySetValueReferenceExpression() ) );\ntype1.Members.Add( property1 );\n\n// A C# code generator produces the following source code for the preceeding example code:\n\n//    public class Type1 \n//    {\n//\n//        private int integerField;\n//\n//        public Type1() \n//        {\n//        }\n//                            \n//        private int integerProperty \n//        {\n//            get \n//            {\n//                return this.integerField;\n//            }\n//            set \n//            {\n//                this.integerField = value;\n//            }\n//        }\n//    }\n</code></pre><pre><code class=\"lang-vb\" name=\"CodePropertySetValueExample#2\">&#39; Declares a type.\nDim type1 As New CodeTypeDeclaration(&quot;Type1&quot;)\n\n&#39; Declares a constructor.\nDim constructor1 As New CodeConstructor()\nconstructor1.Attributes = MemberAttributes.Public\ntype1.Members.Add(constructor1)\n\n&#39; Declares an integer field.\nDim field1 As New CodeMemberField(&quot;System.Int32&quot;, &quot;integerField&quot;)\ntype1.Members.Add(field1)\n\n&#39; Declares a property.\nDim property1 As New CodeMemberProperty()\n&#39; Declares a property get statement to return the value of the integer field.\nproperty1.GetStatements.Add(New CodeMethodReturnStatement(New CodeFieldReferenceExpression(New CodeThisReferenceExpression(), &quot;integerField&quot;)))\n&#39; Declares a property set statement to set the value to the integer field.\n&#39; The CodePropertySetValueReferenceExpression represents the value argument passed to the property set statement.\nproperty1.SetStatements.Add(New CodeAssignStatement(New CodeFieldReferenceExpression(New CodeThisReferenceExpression(), &quot;integerField&quot;), New CodePropertySetValueReferenceExpression()))\ntype1.Members.Add(property1)\n\n&#39; A Visual Basic code generator produces the following source code for the preceeding example code:\n\n&#39;   Public Class Type1\n&#39;\n&#39;       Private integerField As Integer\n&#39;\n&#39;       Public Sub New()\n&#39;           MyBase.New()\n&#39;       End Sub\n&#39;\n&#39;       Private Property integerProperty() As Integer\n&#39;           Get\n&#39;               Return Me.integerField\n&#39;           End Get\n&#39;           Set(ByVal Value As Integer)\n&#39;               Me.integerField = value\n&#39;           End Set\n&#39;       End Property\n&#39;   End Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>CodePropertySetValueReferenceExpression represents the value argument of a property set method call within a property set method declaration.  </p>\n<p> A property set method typically assigns or uses the value assigned to the property. Within the property set method, this value is represented by an implicit variable represented in CodeDOM by a CodePropertySetValueReferenceExpression.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_CodeDom_CodePropertySetValueReferenceExpression__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_CodeDom_CodePropertySetValueReferenceExpression__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CodePropertySetValueReferenceExpression()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codepropertysetvaluereferenceexpression\" data-linktype=\"relative-path\">CodePropertySetValueReferenceExpression</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CodePropertySetValueReferenceExpression ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.classinterfaceattribute\" title=\"System.Runtime.InteropServices.ClassInterfaceAttribute\" data-linktype=\"relative-path\">ClassInterfaceAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodePropertySetValueReferenceExpression.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodePropertySetValueReferenceExpression\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodePropertySetValueReferenceExpression..ctor\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"a9afeedc-3a12-0b54-96c9-212f12495eb2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the value argument of a property set method call within a property set method.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.codedom/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodePropertySetValueReferenceExpression\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.CodeDom.CodePropertySetValueReferenceExpression.yml","open_to_public_contributors":false,"api_name":["System.CodeDom.CodePropertySetValueReferenceExpression","System.CodeDom.CodePropertySetValueReferenceExpression..ctor"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodePropertySetValueReferenceExpression","System::CodeDom::CodePropertySetValueReferenceExpression","System.CodeDom.CodePropertySetValueReferenceExpression.#ctor","System::CodeDom::CodePropertySetValueReferenceExpression::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"a9afeedc-3a12-0b54-96c9-212f12495eb2","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.CodeDom/CodePropertySetValueReferenceExpression.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodePropertySetValueReferenceExpression class | Microsoft Docs","_op_ogTitle":"CodePropertySetValueReferenceExpression class","description":"Represents the value argument of a property set method call within a property set method.\n","toc_asset_id":"api/_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodePropertySetValueReferenceExpression","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codepropertysetvaluereferenceexpression","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.codedom.codepropertysetvaluereferenceexpression","fileRelativePath":"api/System.CodeDom.CodePropertySetValueReferenceExpression.html"},"themesRelativePathToOutputRoot":"_themes/"}