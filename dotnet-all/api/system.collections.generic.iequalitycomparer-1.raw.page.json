{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IEqualityComparer&lt;T&gt;</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines methods to support the comparison of objects for equality.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IEqualityComparer&lt;in T&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>T</td>\r\n  \t\t\t<td><p>The type of objects to compare.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example adds custom <code>Box</code> objects to a dictionary collection. The <code>Box</code> objects are considered equal if their dimensions are the same.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Collections.Generic.IEqualityComparer#1\">using System;\nusing System.Collections.Generic;\n\nclass Example\n{\n   static void Main()\n   {\n      BoxEqualityComparer boxEqC = new BoxEqualityComparer();\n\n      var boxes = new Dictionary&lt;Box, string&gt;(boxEqC);\n\n      var redBox = new Box(4, 3, 4);\n      AddBox(boxes, redBox, &quot;red&quot;);\n      \n      var blueBox = new Box(4, 3, 4);\n      AddBox(boxes, blueBox, &quot;blue&quot;);\n      \n      var greenBox = new Box(3, 4, 3);\n      AddBox(boxes, greenBox, &quot;green&quot;);\n      Console.WriteLine();\n      \n      Console.WriteLine(&quot;The dictionary contains {0} Box objects.&quot;,\n                        boxes.Count);\n   }\n\n   private static void AddBox(Dictionary&lt;Box, String&gt; dict, Box box, String name)\n   {\n      try {\n         dict.Add(box, name);\n      }\n      catch (ArgumentException e) {\n         Console.WriteLine(&quot;Unable to add {0}: {1}&quot;, box, e.Message);\n      }\n   }\n}\n\npublic class Box\n{\n    public Box(int h,  int l, int w)\n    {\n        this.Height = h;\n        this.Length = l;\n        this.Width = w;\n    }\n\n    public int Height { get; set; }\n    public int Length { get; set; }\n    public int Width { get; set; }\n\n    public override String ToString()\n    {\n       return String.Format(&quot;({0}, {1}, {2})&quot;, Height, Length, Width);\n    }\n}\n\n\nclass BoxEqualityComparer : IEqualityComparer&lt;Box&gt;\n{\n    public bool Equals(Box b1, Box b2)\n    {\n        if (b2 == null &amp;&amp; b1 == null)\n           return true;\n        else if (b1 == null | b2 == null)\n           return false;\n        else if(b1.Height == b2.Height &amp;&amp; b1.Length == b2.Length\n                            &amp;&amp; b1.Width == b2.Width)\n            return true;\n        else\n            return false;\n    }\n\n    public int GetHashCode(Box bx)\n    {\n        int hCode = bx.Height ^ bx.Length ^ bx.Width;\n        return hCode.GetHashCode();\n    }\n}\n// The example displays the following output:\n//    Unable to add (4, 3, 4): An item with the same key has already been added.\n//\n//    The dictionary contains 2 Box objects.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Generic.IEqualityComparer#1\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n\n      Dim boxEqC As New BoxEqualityComparer()\n\n      Dim boxes As New Dictionary(Of Box, String)(boxEqC)\n\n      Dim redBox = New Box(4, 3, 4)\n      AddBox(boxes, redBox, &quot;red&quot;)\n\n      Dim blueBox = new Box(4, 3, 4)\n      AddBox(boxes, blueBox, &quot;blue&quot;)\n\n      Dim greenBox = new Box(3, 4, 3)\n      AddBox(boxes, greenBox, &quot;green&quot;)\n      Console.WriteLine()\n\n      Console.WriteLine(&quot;The dictionary contains {0} Box objects.&quot;,\n                        boxes.Count)\n   End Sub\n\n   Private Sub AddBox(dict As Dictionary(Of Box, String), box As Box, name As String)\n      Try\n         dict.Add(box, name)\n      Catch e As ArgumentException\n         Console.WriteLine(&quot;Unable to add {0}: {1}&quot;, box, e.Message)\n      End Try\n   End Sub\nEnd Module\n\nPublic Class Box\n    Private _Height As Integer\n    Private _Length As Integer\n    Private _Width As Integer\n\n    Public Sub New(ByVal h As Integer, ByVal l As Integer,\n                                        ByVal w As Integer)\n        Me.Height = h\n        Me.Length = l\n        Me.Width = w\n    End Sub\n\n    Public Property Height() As Integer\n        Get\n            Return _Height\n        End Get\n        Set(ByVal value As Integer)\n            _Height = value\n        End Set\n    End Property\n\n    Public Property Length() As Integer\n        Get\n            Return _Length\n        End Get\n        Set(ByVal value As Integer)\n            _Length = value\n        End Set\n    End Property\n\n    Public Property Width() As Integer\n        Get\n            Return _Width\n        End Get\n        Set(ByVal value As Integer)\n            _Width = value\n        End Set\n    End Property\n\n    Public Overrides Function ToString() As String\n       Return String.Format(&quot;({0}, {1}, {2})&quot;, _Height, _Length, _Width)\n    End Function\nEnd Class\n\nClass BoxEqualityComparer\n    Implements IEqualityComparer(Of Box)\n\n    Public Overloads Function Equals(ByVal b1 As Box, ByVal b2 As Box) _\n                   As Boolean Implements IEqualityComparer(Of Box).Equals\n\n        If b1 Is Nothing AndAlso b2 Is Nothing Then\n            Return True\n        ElseIf b1 Is Nothing Or b2 Is Nothing Then\n            Return False\n        ElseIf b1.Height = b2.Height AndAlso b1.Length =\n                b2.Length AndAlso b1.Width = b2.Width Then\n            Return True\n        Else\n            Return False\n        End If\n    End Function\n\n    Public Overloads Function GetHashCode(ByVal bx As Box) _\n                As Integer Implements IEqualityComparer(Of Box).GetHashCode\n        Dim hCode As Integer = bx.Height Xor bx.Length Xor bx.Width\n        Return hCode.GetHashCode()\n    End Function\n\nEnd Class\n&#39; The example displays the following output:\n&#39;    Unable to add (4, 3, 4): An item with the same key has already been added.\n&#39;\n&#39;    The dictionary contains 2 Box objects.\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality for type <code>T</code>, and specify that this definition be used with a collection type that accepts the IEqualityComparer(T) generic interface. In the .NET Framework, constructors of the <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> generic collection type accept this interface.  </p>\n<p> A default implementation of this interface is provided by the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property of the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> generic class. The <a class=\"xref\" href=\"system.stringcomparer\" data-linktype=\"relative-path\">StringComparer</a> class implements IEqualityComparer(T) of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.  </p>\n<p> This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <a class=\"xref\" href=\"system.collections.generic.icomparer-1\" data-linktype=\"relative-path\">IComparer&lt;T&gt;</a> generic interface.  </p>\n<p> We recommend that you derive from the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> class instead of implementing the IEqualityComparer(T) interface, because the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> class tests for equality using the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method instead of the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> method. This is consistent with the <code>Contains</code>, <code>IndexOf</code>, <code>LastIndexOf</code>, and <code>Remove</code> methods of the <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> class and other generic collections.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_IEqualityComparer_1_Equals__0__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(T, T)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the specified objects are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Equals (T x, T y);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object of type <code>T</code> to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object of type <code>T</code> to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified objects are equal; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Implement this method to provide a customized equality comparison for type <code>T</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_IEqualityComparer_1_GetHashCode__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode(T)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a hash code for the specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int GetHashCode (T obj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>obj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">T</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> for which a hash code is to be returned.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A hash code for the specified object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The type of <code>obj</code> is a reference type and <code>obj</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Implement this method to provide a customized hash code for type <code>T</code>,corresponding to the customized equality comparison provided by the <a class=\"xref\" href=\"system.collections.generic.iequalitycomparer-1#System_Collections_Generic_IEqualityComparer_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.Generic.IEqualityComparer-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IEqualityComparer&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IEqualityComparer&lt;T&gt;.Equals\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IEqualityComparer&lt;T&gt;.GetHashCode\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"0ae96c4c-1bed-4811-c68c-eefce3dfeb96\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines methods to support the comparison of objects for equality.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.collections.generic/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Generic.IEqualityComparer`1\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.Generic.IEqualityComparer-1.yml","open_to_public_contributors":false,"api_name":["System.Collections.Generic.IEqualityComparer<T>","System.Collections.Generic.IEqualityComparer<T>.Equals","System.Collections.Generic.IEqualityComparer<T>.GetHashCode"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Generic.IEqualityComparer`1","System::Collections::Generic::IEqualityComparer`1","System.Collections.Generic.IEqualityComparer`1.Equals","System::Collections::Generic::IEqualityComparer`1::Equals","System.Collections.Generic.IEqualityComparer`1.GetHashCode","System::Collections::Generic::IEqualityComparer`1::GetHashCode"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"0ae96c4c-1bed-4811-c68c-eefce3dfeb96","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Collections.Generic/IEqualityComparer`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IEqualityComparer<T> interface | Microsoft Docs","_op_ogTitle":"IEqualityComparer<T> interface","description":"Defines methods to support the comparison of objects for equality.\n","toc_asset_id":"api/_splitted/System.Collections.Generic/toc.json","toc_rel":"_splitted/System.Collections.Generic/toc.json","source_url":"","ms.assetid":"System.Collections.Generic.IEqualityComparer`1","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.iequalitycomparer-1","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.iequalitycomparer-1","fileRelativePath":"api/System.Collections.Generic.IEqualityComparer-1.html"},"themesRelativePathToOutputRoot":"_themes/"}