{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">InstanceData</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Holds instance data associated with a performance counter sample.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class InstanceData</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">InstanceData</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example displays the contents of the InstanceData objects that exist in a particular <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> on the local computer. It first displays a numbered list of <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> categories. After the user enters the number of one of the categories, the sample displays, for each <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> in the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>, the instance data associated with each instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Diagnostics.InstanceData.CopyTo#1\">// InstanceData_CopyTo.cpp : main project file.\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\n\n///////////////////////////////////////////////////////////////////////\n//\n// FORWARD DECLARATIONS\n//\n///////////////////////////////////////////////////////////////////////\n\n// Console Utility Functions:\nvoid InitConsole();                          // Init console size\nvoid TitleBlock();                           // Write the title block\nvoid CW(String^strText ,                    // Write a colored string\n        String^ C = &quot;&quot;, int LF = 1);\n\n\n// InstanceData subroutines\n// Display the contents of an InstanceData object.\nvoid ProcessInstanceDataObject(String^ name, CounterSample CSRef);\n\n// Display the contents of an InstanceDataCollection.\nvoid ProcessInstanceDataCollection(InstanceDataCollection^ idCol);\n\n\n\n\n///////////////////////////////////////////////////////////////////////\n//\n// MAIN PROGRAM\n//\n///////////////////////////////////////////////////////////////////////\n\nvoid main()\n{\n    InitConsole();\n    TitleBlock();\n\n    String^ categoryName;\n    String^ catNumStr;\n    int      categoryNum;\n\n\n    array&lt;PerformanceCounterCategory^&gt;^ categories =\n                PerformanceCounterCategory::GetCategories();\n\n    // Create and sort an array of category names.\n    array&lt;String^&gt;^ categoryNames = gcnew array&lt;String^&gt;(categories-&gt;Length);\n    int catX;\n    for(catX=0; catX &lt; categories-&gt;Length; catX++)\n            categoryNames[catX] = categories[catX]-&gt;CategoryName;\n    Array::Sort(categoryNames);\n\n    while(1)\n    {\n    CW(&quot;These PerformanceCounterCategory categories are registered \\n&quot;\n      +&quot;on this computer:&quot;,&quot;Red&quot;);\n\n    for(catX=0; catX &lt; categories-&gt;Length; catX++)\n            Console::WriteLine(&quot;{0,4} - {1}&quot;, catX+1, categoryNames[catX]);\n\n    // Ask the user to choose a category.\n    Console::Write(&quot;\\nEnter a category number from the above list: &quot;);\n    catNumStr = Console::ReadLine();\n\n    // Validate the entered category number.\n    try {\n        categoryNum = int::Parse(catNumStr);\n        if (categoryNum &lt; 1 || categoryNum &gt; categories-&gt;Length)\n            throw gcnew Exception(String::Format(&quot;The category number &quot;+\n                  &quot; must be in the range 1..{0}.&quot;, categories-&gt;Length));\n        categoryName = categoryNames[(categoryNum-1)];\n\n        // Process the InstanceDataCollectionCollection for this category.\n        PerformanceCounterCategory^ pcc =\n             gcnew PerformanceCounterCategory(categoryName);\n        InstanceDataCollectionCollection^ idColCol = pcc-&gt;ReadCategory();\n        array&lt;InstanceDataCollection^&gt;^ idColArray =\n             gcnew array&lt;InstanceDataCollection^&gt;(idColCol-&gt;Count);\n\n        CW(&quot;\\nInstanceDataCollectionCollection for \\&quot;&quot; +categoryName+&quot;\\&quot; &quot;\n           +&quot;has &quot;+idColCol-&gt;Count+&quot; elements.&quot;,&quot;Blue&quot;);\n\n        idColCol-&gt;CopyTo(idColArray, 0);\n\n        for each ( InstanceDataCollection ^ idCol in idColArray )\n                ProcessInstanceDataCollection(idCol);\n        }\n    catch(Exception^ ex)\n        {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot; is not a valid category number.&quot; +\n            &quot;\\n{1}&quot;, catNumStr, ex-&gt;Message);\n        }\n\n    CW(&quot;\\n\\nRun again (Y,N)?&quot;,&quot;Yellow&quot;);\n    catNumStr = Console::ReadLine();\n    if (&quot;Y&quot; != catNumStr &amp;&amp; &quot;y&quot; != catNumStr) break;\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////\n//\n// SUBROUTINES\n//\n///////////////////////////////////////////////////////////////////////\n\nvoid InitConsole() \n{\n  Console::BufferHeight = 4000;\n  Console::WindowHeight = 40;\n}\n\nvoid TitleBlock()\n{\nConsole::Title = &quot;InstDataCopyTo.cpp Sample&quot;;\n\nCW(\n &quot;///////////////////////////////////////////////////////////////////\\n&quot;\n+&quot;//\\n&quot;\n+&quot;//  PROGRAM   instdatacopyto.cpp\\n&quot;\n+&quot;//  PURPOSE   Show how to use InstanceData objects\\n&quot;\n+&quot;//  OUTPUT    1) Displays a numbered list of PerformanceCounter\\n&quot;\n+&quot;//               categories that exist on the local computer.\\n&quot;\n+&quot;//            2) Prompts the user to select a category.\\n&quot;\n+&quot;//            3) Displays the instance data associated with each\\n&quot;\n+&quot;//               instance of the PerformanceCounter in the\\n&quot;\n+&quot;//               selected PerformanceCounterCategory\\n&quot;\n+&quot;//\\n&quot;\n+ &quot;///////////////////////////////////////////////////////////////////\\n&quot;\n,&quot;Yellow&quot;);\n}\n\n\n// Utility function:  ConsoleWrite:  Write a colored string\nvoid CW(String^ strText , String^ C, int LF)\n{\n   if (C != &quot;&quot;) Console::ForegroundColor =  *dynamic_cast&lt;ConsoleColor^&gt;\n                               (Enum::Parse(ConsoleColor::typeid, C));\n   Console::Write(strText);\n   Console::ResetColor();\n   Console::Write(&quot;\\n{0}&quot;,LF?&quot;\\n&quot;:&quot;&quot;);\n}\n\n// Display the contents of an InstanceDataCollection.\nvoid ProcessInstanceDataCollection(InstanceDataCollection ^ idCol)\n{\n    array&lt;InstanceData^&gt;^ instDataArray = gcnew array&lt;InstanceData^&gt;(idCol-&gt;Count);\n\n    CW(&quot;\\n  InstanceDataCollection for \\&quot;&quot;\n       + idCol-&gt;CounterName + &quot;\\&quot; has &quot; + idCol-&gt;Count + &quot; elements.&quot;, &quot;Red&quot;);\n\n    // Copy and process the InstanceData array.\n    idCol-&gt;CopyTo(instDataArray, 0);\n\n    int idX;\n    for(idX=0; idX &lt; instDataArray-&gt;Length; idX++)\n        ProcessInstanceDataObject(instDataArray[idX]-&gt;InstanceName,\n        instDataArray[idX]-&gt;Sample);\n}\n\n\n// Display the contents of an InstanceData object.\nvoid ProcessInstanceDataObject(String ^ name, CounterSample CSRef)\n{\n    InstanceData ^ instData = gcnew InstanceData(name, CSRef);\n    CW(&quot;    Data from InstanceData object:&quot;,&quot;Red&quot;,0);\n\n    CW(&quot;      InstanceName:     &quot;+instData-&gt;InstanceName,&quot;Green&quot;,0);\n    CW(&quot;      RawValue:         &quot; + instData-&gt;RawValue);\n\n    CounterSample sample = instData-&gt;Sample;\n    Console::Write(&quot;    Data from CounterSample object:\\n&quot; +\n        &quot;      CounterType:      {0,-27} SystemFrequency:  {1}\\n&quot; +\n        &quot;      BaseValue:        {2,-27} RawValue:         {3}\\n&quot; +\n        &quot;      CounterFrequency: {4,-27} CounterTimeStamp: {5}\\n&quot; +\n        &quot;      TimeStamp:        {6,-27} TimeStamp100nSec: {7}\\n\\n&quot;,\n        sample.CounterType, sample.SystemFrequency, sample.BaseValue,\n        sample.RawValue, sample.CounterFrequency, sample.CounterTimeStamp,\n        sample.TimeStamp, sample.TimeStamp100nSec);\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.InstanceData.CopyTo#1\">using System;\nusing System.Diagnostics;\n\nclass InstDataCopyToMod\n{\n\n    private static string categoryName;\n\n    public static void Main()\n    {\n        string catNumStr;\n        int categoryNum;\n\n        PerformanceCounterCategory[] categories = PerformanceCounterCategory.GetCategories();\n\n        // Create and sort an array of category names.\n        string[] categoryNames = new string[categories.Length];\n        int catX;\n        for(catX=0; catX&lt;categories.Length; catX++)\n        {\n            categoryNames[catX] = categories[catX].CategoryName;\n        }\n        Array.Sort(categoryNames);\n\n        Console.WriteLine(&quot;These categories are registered on this computer:&quot;);\n\n        for(catX=0; catX&lt;categories.Length; catX++)\n        {\n            Console.WriteLine(&quot;{0,4} - {1}&quot;, catX+1, categoryNames[catX]);\n        }\n\n        // Ask the user to choose a category.\n        Console.Write(&quot;Enter the category number from the above list: &quot;);\n        catNumStr = Console.ReadLine();\n\n        // Validate the entered category number.\n        try\n        {\n            categoryNum = int.Parse(catNumStr);\n            if (categoryNum&lt;1||categoryNum&gt;categories.Length)\n            {\n                throw new Exception(String.Format(&quot;The category number must be in the &quot; +\n                    &quot;range 1..{0}.&quot;, categories.Length));\n            }\n            categoryName = categoryNames[(categoryNum-1)];\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot; is not a valid category number.&quot; +\n                &quot;\\r\\n{1}&quot;, catNumStr, ex.Message);\n            return;\n        }\n\n        // Process the InstanceDataCollectionCollection for this category.\n        PerformanceCounterCategory pcc = new PerformanceCounterCategory(categoryName);\n        InstanceDataCollectionCollection idColCol = pcc.ReadCategory();\n        InstanceDataCollection[] idColArray = new InstanceDataCollection[idColCol.Count];\n\n        Console.WriteLine(&quot;InstanceDataCollectionCollection for \\&quot;{0}\\&quot; &quot; +\n            &quot;has {1} elements.&quot;, categoryName, idColCol.Count);\n\n        // Copy and process the InstanceDataCollection array.\n        idColCol.CopyTo(idColArray, 0);\n\n        foreach ( InstanceDataCollection idCol in idColArray )\n        {\n            ProcessInstanceDataCollection(idCol);\n        }\n    }\n\n    // Display the contents of an InstanceDataCollection.\n    public static void ProcessInstanceDataCollection(InstanceDataCollection idCol)\n    {\n\n        InstanceData[] instDataArray = new InstanceData[idCol.Count];\n\n        Console.WriteLine(&quot;  InstanceDataCollection for \\&quot;{0}\\&quot; &quot; +\n            &quot;has {1} elements.&quot;, idCol.CounterName, idCol.Count);\n\n        // Copy and process the InstanceData array.\n        idCol.CopyTo(instDataArray, 0);\n\n        int idX;\n        for(idX=0; idX&lt;instDataArray.Length; idX++)\n        {\n            ProcessInstanceDataObject(instDataArray[idX].InstanceName, instDataArray[idX].Sample);\n        }\n    }\n\n    // Display the contents of an InstanceData object.\n    public static void ProcessInstanceDataObject(string name, CounterSample CSRef)\n    {\n\n        InstanceData instData = new InstanceData(name, CSRef);\n        Console.WriteLine(&quot;    Data from InstanceData object:\\r\\n&quot; +\n            &quot;      InstanceName: {0,-31} RawValue: {1}&quot;, instData.InstanceName, instData.RawValue);\n\n        CounterSample sample = instData.Sample;\n        Console.WriteLine(&quot;    Data from CounterSample object:\\r\\n&quot; +\n            &quot;      CounterType: {0,-32} SystemFrequency: {1}\\r\\n&quot; +\n            &quot;      BaseValue: {2,-34} RawValue: {3}\\r\\n&quot; +\n            &quot;      CounterFrequency: {4,-27} CounterTimeStamp: {5}\\r\\n&quot; +\n            &quot;      TimeStamp: {6,-34} TimeStamp100nSec: {7}&quot;, sample.CounterType, sample.SystemFrequency, sample.BaseValue, sample.RawValue, sample.CounterFrequency, sample.CounterTimeStamp, sample.TimeStamp, sample.TimeStamp100nSec);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.InstanceData.CopyTo#1\">Imports System\nImports System.Diagnostics\nImports Microsoft.VisualBasic\n\nModule InstDataCopyToMod\n\n    Private categoryName As String\n\n    Sub Main()\n        Dim catNumStr As String\n        Dim categoryNum As Integer\n\n        Dim categories() As PerformanceCounterCategory = _\n            PerformanceCounterCategory.GetCategories()\n\n        &#39; Create and sort an array of category names.\n        Dim categoryNames(categories.Length - 1) As String\n        Dim catX As Integer\n        For catX = 0 To categories.Length - 1\n            categoryNames(catX) = categories(catX).CategoryName\n        Next\n        Array.Sort(categoryNames)\n\n        Console.WriteLine( _\n            &quot;These categories are registered on this computer:&quot;)\n\n        For catX = 0 To categories.Length - 1\n            Console.WriteLine(&quot;{0,4} - {1}&quot;, catX + 1, _\n                categoryNames(catX))\n        Next catX\n\n        &#39; Ask the user to choose a category.\n        Console.Write( _\n            &quot;Enter the category number from the above list: &quot;)\n        catNumStr = Console.ReadLine()\n\n        &#39; Validate the entered category number.\n        Try\n            categoryNum = Integer.Parse(catNumStr)\n            If categoryNum &lt; 1 Or categoryNum &gt; categories.Length Then\n                Throw New Exception( _\n                    String.Format(&quot;The category number must be in the &quot; &amp; _\n                        &quot;range 1..{0}.&quot;, categories.Length))\n            End If\n            categoryName = categoryNames((categoryNum - 1))\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot; is not a valid category number.&quot; &amp; _\n                vbCrLf &amp; &quot;{1}&quot;, catNumStr, ex.Message)\n            Return\n        End Try\n\n        &#39; Process the InstanceDataCollectionCollection for this category.\n        Dim pcc As New PerformanceCounterCategory(categoryName)\n        Dim idColCol As InstanceDataCollectionCollection = pcc.ReadCategory()\n        Dim idColArray(idColCol.Count - 1) As InstanceDataCollection\n\n        Console.WriteLine(&quot;InstanceDataCollectionCollection for &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            &quot;has {1} elements.&quot;, categoryName, idColCol.Count)\n\n        &#39; Copy and process the InstanceDataCollection array.\n        idColCol.CopyTo(idColArray, 0)\n\n        Dim idCol As InstanceDataCollection\n        For Each idCol In idColArray\n            ProcessInstanceDataCollection(idCol)\n        Next idCol\n    End Sub\n\n    &#39; Display the contents of an InstanceDataCollection.\n    Sub ProcessInstanceDataCollection(ByVal idCol As InstanceDataCollection)\n\n        Dim instDataArray(idCol.Count - 1) As InstanceData\n\n        Console.WriteLine(&quot;  InstanceDataCollection for &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            &quot;has {1} elements.&quot;, idCol.CounterName, idCol.Count)\n\n        &#39; Copy and process the InstanceData array.\n        idCol.CopyTo(instDataArray, 0)\n\n        Dim idX As Integer\n        For idX = 0 To instDataArray.Length - 1\n            ProcessInstanceDataObject(instDataArray(idX).InstanceName, _\n                instDataArray(idX).Sample)\n        Next idX\n    End Sub\n\n    &#39; Display the contents of an InstanceData object.\n    Sub ProcessInstanceDataObject(ByVal name As String, _\n                                  ByVal CSRef As CounterSample)\n\n        Dim instData As New InstanceData(name, CSRef)\n        Console.WriteLine(&quot;    Data from InstanceData object:&quot; &amp; vbCrLf &amp; _\n            &quot;      InstanceName: {0,-31} RawValue: {1}&quot;, _\n            instData.InstanceName, instData.RawValue)\n\n        Dim sample As CounterSample = instData.Sample\n        Console.WriteLine(&quot;    Data from CounterSample object:&quot; &amp; vbCrLf &amp; _\n            &quot;      CounterType: {0,-32} SystemFrequency: {1}&quot; &amp; vbCrLf &amp; _\n            &quot;      BaseValue: {2,-34} RawValue: {3}&quot; &amp; vbCrLf &amp; _\n            &quot;      CounterFrequency: {4,-27} CounterTimeStamp: {5}&quot; &amp; vbCrLf &amp; _\n            &quot;      TimeStamp: {6,-34} TimeStamp100nSec: {7}&quot;, _\n            sample.CounterType, sample.SystemFrequency, sample.BaseValue, _\n            sample.RawValue, sample.CounterFrequency, sample.CounterTimeStamp, _\n            sample.TimeStamp, sample.TimeStamp100nSec)\n    End Sub\nEnd Module\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_InstanceData__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_InstanceData__ctor_System_String_System_Diagnostics_CounterSample_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstanceData(String, CounterSample)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the InstanceData class, using the specified sample and performance counter instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InstanceData (string instanceName, System.Diagnostics.CounterSample sample);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instanceName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of an instance associated with the performance counter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sample</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countersample\" data-linktype=\"relative-path\">CounterSample</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.diagnostics.countersample\" data-linktype=\"relative-path\">CounterSample</a> taken from the instance specified by the <code>instanceName</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_InstanceData_InstanceName_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_InstanceData_InstanceName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InstanceName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the instance name associated with this instance data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string InstanceName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of an instance associated with the performance counter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_InstanceData_RawValue_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_InstanceData_RawValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RawValue</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the raw data value associated with the performance counter sample.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long RawValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The raw value read by the performance counter sample associated with the <span class=\"xref\">stem.Diagnostics.InstanceData.Sample*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Diagnostics_InstanceData_Sample_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_InstanceData_Sample\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Sample</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the performance counter sample that generated this data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Diagnostics.CounterSample Sample { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countersample\" data-linktype=\"relative-path\">CounterSample</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.diagnostics.countersample\" data-linktype=\"relative-path\">CounterSample</a> taken from the instance specified by the <span class=\"xref\">stem.Diagnostics.InstanceData.InstanceName*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.InstanceData.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.InstanceData\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.InstanceData..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.InstanceData.InstanceName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.InstanceData.RawValue\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.InstanceData.Sample\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"a969c200-a2a3-2c00-0b21-1773f8e007ca\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Holds instance data associated with a performance counter sample.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.diagnostics/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.InstanceData\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.InstanceData.yml","open_to_public_contributors":false,"api_name":["System.Diagnostics.InstanceData","System.Diagnostics.InstanceData..ctor","System.Diagnostics.InstanceData.InstanceName","System.Diagnostics.InstanceData.RawValue","System.Diagnostics.InstanceData.Sample"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.InstanceData","System::Diagnostics::InstanceData","System.Diagnostics.InstanceData.#ctor","System::Diagnostics::InstanceData::#ctor","System.Diagnostics.InstanceData.InstanceName","System::Diagnostics::InstanceData::InstanceName","System.Diagnostics.InstanceData.RawValue","System::Diagnostics::InstanceData::RawValue","System.Diagnostics.InstanceData.Sample","System::Diagnostics::InstanceData::Sample"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"a969c200-a2a3-2c00-0b21-1773f8e007ca","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Diagnostics/InstanceData.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InstanceData class | Microsoft Docs","_op_ogTitle":"InstanceData class","description":"Holds instance data associated with a performance counter sample.\n","toc_asset_id":"api/_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.InstanceData","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.instancedata","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.instancedata","fileRelativePath":"api/System.Diagnostics.InstanceData.html"},"themesRelativePathToOutputRoot":"_themes/"}