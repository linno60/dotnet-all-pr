{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IsolatedStorageFileStream</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Exposes a file within isolated storage.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic class IsolatedStorageFileStream : System.IO.FileStream</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a></span></div><span class=\"lang-csharp\">IsolatedStorageFileStream</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_FlushAsync_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">FlushAsync(CancellationToken)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_GetAccessControl\" data-linktype=\"relative-path\">GetAccessControl()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">ReadAsync(Byte[], Int32, Int32, CancellationToken)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_SetAccessControl_System_Security_AccessControl_FileSecurity_\" data-linktype=\"relative-path\">SetAccessControl(FileSecurity)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">WriteAsync(Byte[], Int32, Int32, CancellationToken)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanTimeout\" data-linktype=\"relative-path\">CanTimeout</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close\" data-linktype=\"relative-path\">Close()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_\" data-linktype=\"relative-path\">CopyTo(Stream)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyTo(Stream, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_\" data-linktype=\"relative-path\">CopyToAsync(Stream)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyToAsync(Stream, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">CopyToAsync(Stream, Int32, CancellationToken)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CreateWaitHandle\" data-linktype=\"relative-path\">CreateWaitHandle()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_FlushAsync\" data-linktype=\"relative-path\">FlushAsync()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ObjectInvariant\" data-linktype=\"relative-path\">ObjectInvariant()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">ReadAsync(Byte[], Int32, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadTimeout\" data-linktype=\"relative-path\">ReadTimeout</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Synchronized_System_IO_Stream_\" data-linktype=\"relative-path\">Synchronized(Stream)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteAsync(Byte[], Int32, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteTimeout\" data-linktype=\"relative-path\">WriteTimeout</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following console application demonstrates how you can use <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> and IsolatedStorageFileStream to write data to an Isolated Storage file. The user is requested to log in. If the user is a new user, a News URL and a Sports URL are recorded as personal preferences in Isolated Storage. If the user is a returning user, the user&#39;s current preferences are displayed. The code examples used throughout this namespace are presented in the context of this sample application. You can use the <a href=\"../topic/storeadm.exe%20(isolated%20storage%20tool)\" data-linktype=\"relative-path\">Storeadm.exe (Isolated Storage Tool)</a> utility to list and remove the Isolated Storage files that are created with this console application.  </p>\n<pre><code class=\"lang-vb\" name=\"System.IO.IsolatedStorage.IsolatedStorage#1\">&#39;This sample demonstrates methods of classes found in the System.IO IsolatedStorage namespace.\nImports System\nImports System.IO\nImports System.IO.IsolatedStorage\nImports System.Security.Policy\nImports Microsoft.VisualBasic\nImports Microsoft.Win32.SafeHandles\nImports System.Security.Permissions\n\n\n\nNamespace ISOCS\n    _\n    Class ConsoleApp\n\n\n        &lt;STAThread()&gt; _\n       Overloads Shared Sub Main(ByVal args() As String)\n\n            &#39; Prompt the user for their username.\n            Console.WriteLine(&quot;Enter your login ID:&quot;)\n\n            &#39; Does no error checking.\n            Dim lp As New LoginPrefs(Console.ReadLine())\n\n            If lp.NewPrefs Then\n                Console.WriteLine(&quot;Please set preferences for a new user.&quot;)\n                GatherInfoFromUser(lp)\n\n                &#39; Write the new preferences to storage.\n                Dim percentUsed As Double = lp.SetPrefsForUser()\n                Console.WriteLine((&quot;Your preferences have been written. Current space used is &quot; &amp; percentUsed.ToString() &amp; &quot; %&quot;))\n            Else\n                Console.WriteLine(&quot;Welcome back.&quot;)\n\n                Console.WriteLine(&quot;Your preferences have expired, please reset them.&quot;)\n                GatherInfoFromUser(lp)\n                lp.SetNewPrefsForUser()\n\n                Console.WriteLine(&quot;Your news site has been set to {0}&quot; &amp; ControlChars.Cr &amp; &quot; and your sports site has been set to {1}.&quot;, lp.NewsUrl, lp.SportsUrl)\n            End If\n            lp.GetIsoStoreInfo()\n            Console.WriteLine(&quot;Enter &#39;d&#39; to delete the IsolatedStorage files and exit, or press any other key to exit without deleting files.&quot;)\n            Dim consoleInput As String = Console.ReadLine()\n            If consoleInput.ToLower() = &quot;d&quot; Then\n                lp.DeleteFiles()\n                lp.DeleteDirectories()\n            End If\n        End Sub &#39;Main\n\n\n        Shared Sub GatherInfoFromUser(ByVal lp As LoginPrefs)\n            Console.WriteLine(&quot;Please enter the URL of your news site.&quot;)\n            lp.NewsUrl = Console.ReadLine()\n            Console.WriteLine(&quot;Please enter the URL of your sports site.&quot;)\n            lp.SportsUrl = Console.ReadLine()\n        End Sub &#39;GatherInfoFromUser\n    End Class &#39;ConsoleApp\n    _\n\n    &lt;SecurityPermissionAttribute(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Public Class LoginPrefs\n\n        Public Sub New(ByVal myUserName As String)\n            userName = myUserName\n            myNewPrefs = GetPrefsForUser()\n        End Sub &#39;New\n        Private userName As String\n\n        Private myNewsUrl As String\n\n        Public Property NewsUrl() As String\n            Get\n                Return myNewsUrl\n            End Get\n            Set(ByVal Value As String)\n                myNewsUrl = Value\n            End Set\n        End Property\n        Private mySportsUrl As String\n\n        Public Property SportsUrl() As String\n            Get\n                Return mySportsUrl\n            End Get\n            Set(ByVal Value As String)\n                mySportsUrl = Value\n            End Set\n        End Property\n        Private myNewPrefs As Boolean\n\n        Public ReadOnly Property NewPrefs() As Boolean\n            Get\n                Return myNewPrefs\n            End Get\n        End Property\n\n        Private Function GetPrefsForUser() As Boolean\n            Try\n                &#39; Retrieve an IsolatedStorageFile for the current Domain and Assembly.\n                Dim isoFile As IsolatedStorageFile = _\n                    IsolatedStorageFile.GetStore(IsolatedStorageScope.User _\n                    Or IsolatedStorageScope.Assembly _\n                    Or IsolatedStorageScope.Domain, Nothing, Nothing)\n\n                Dim isoStream As New IsolatedStorageFileStream(&quot;substituteUsername&quot;, System.IO.FileMode.Open, _\n                    System.IO.FileAccess.Read, System.IO.FileShare.Read)\n                &#39; farThe code executes to this point only if a file corresponding to the username exists.\n                &#39; Though you can perform operations on the stream, you cannot get a handle to the file.\n                Try\n\n                    Dim aFileHandle As SafeFileHandle = isoStream.SafeFileHandle\n                    Console.WriteLine((&quot;A pointer to a file handle has been obtained. &quot; &amp; aFileHandle.ToString() &amp; &quot; &quot; &amp; aFileHandle.GetHashCode()))\n\n                Catch ex As Exception\n                    &#39; Handle the exception.\n                    Console.WriteLine(&quot;Expected exception&quot;)\n                    Console.WriteLine(ex.ToString())\n                End Try\n\n                Dim reader As New StreamReader(isoStream)\n                &#39; Read the data.\n                Me.NewsUrl = reader.ReadLine()\n                Me.SportsUrl = reader.ReadLine()\n                reader.Close()\n                isoFile.Close()\n                Return False\n            Catch ex As System.IO.FileNotFoundException\n                &#39; Expected exception if a file cannot be found. This indicates that we have a new user.\n                Return True\n            End Try\n        End Function &#39;GetPrefsForUser\n\n        Public Function GetIsoStoreInfo() As Boolean\n            Try\n                &#39;Get a User store with type evidence for the current Domain and the Assembly.\n                Dim isoFile As IsolatedStorageFile = _\n                    IsolatedStorageFile.GetStore(IsolatedStorageScope.User Or _\n                    IsolatedStorageScope.Assembly Or IsolatedStorageScope.Domain, _\n                    GetType(System.Security.Policy.Url), GetType(System.Security.Policy.Url))\n                Dim dirNames As String() = isoFile.GetDirectoryNames(&quot;*&quot;)\n                Dim fileNames As String() = isoFile.GetFileNames(&quot;*&quot;)\n                Dim name As String\n\n                &#39; List directories currently in this Isolated Storage.\n                If dirNames.Length &gt; 0 Then\n\n                    For Each name In dirNames\n                        Console.WriteLine(&quot;Directory Name: &quot; &amp; name)\n                    Next name\n                End If\n\n                &#39; List the files currently in this Isolated Storage.\n                &#39; The list represents all users who have personal preferences stored for this application.\n                If fileNames.Length &gt; 0 Then\n\n                    For Each name In fileNames\n                        Console.WriteLine(&quot;File Name: &quot; &amp; name)\n                    Next name\n                End If\n                isoFile.Close()\n                Return True\n            Catch ex As Exception\n                Console.WriteLine(ex.ToString())\n            End Try\n        End Function &#39;GetIsoStoreInfo\n\n        Public Function SetPrefsForUser() As Double\n            Try\n                Dim isoFile As IsolatedStorageFile\n                isoFile = IsolatedStorageFile.GetUserStoreForDomain()\n\n                &#39; Open or create a writable file.\n                Dim isoStream As New IsolatedStorageFileStream(Me.userName, FileMode.OpenOrCreate, _\n                    FileAccess.Write, isoFile)\n\n                Dim writer As New StreamWriter(isoStream)\n                writer.WriteLine(Me.NewsUrl)\n                writer.WriteLine(Me.SportsUrl)\n                &#39; Calculate the amount of space used to record the user&#39;s preferences.\n                Dim d As Double = Convert.ToDouble(isoFile.CurrentSize) / Convert.ToDouble(isoFile.MaximumSize)\n                Console.WriteLine((&quot;CurrentSize = &quot; &amp; isoFile.CurrentSize.ToString()))\n                Console.WriteLine((&quot;MaximumSize = &quot; &amp; isoFile.MaximumSize.ToString()))\n                &#39; StreamWriter.Close implicitly closes isoStream.\n                writer.Close()\n                isoFile.Dispose()\n                isoFile.Close()\n                Return d\n            Catch ex As Exception\n                &#39; Add code here to handle the exception.\n                Console.WriteLine(ex)\n                Return 0.0\n            End Try\n        End Function &#39;SetPrefsForUser\n\n\n        Public Sub DeleteFiles()\n            Try\n                Dim isoFile As IsolatedStorageFile = IsolatedStorageFile.GetStore(IsolatedStorageScope.User Or _\n                    IsolatedStorageScope.Assembly Or IsolatedStorageScope.Domain, _\n                    GetType(System.Security.Policy.Url), GetType(System.Security.Policy.Url))\n                Dim name As String\n                Dim dirNames As String() = isoFile.GetDirectoryNames(&quot;*&quot;)\n                Dim fileNames As String() = isoFile.GetFileNames(&quot;*&quot;)\n                &#39; List the files currently in this Isolated Storage.\n                &#39; The list represents all users who have personal\n                &#39; preferences stored for this application.\n                If fileNames.Length &gt; 0 Then\n                    For Each name In fileNames\n                        &#39; Delete the files.\n                        isoFile.DeleteFile(name)\n                    Next name\n                    &#39;Confirm no files are left.\n                    fileNames = isoFile.GetFileNames(&quot;*&quot;)\n                End If\n            Catch ex As Exception\n                Console.WriteLine(ex.ToString())\n            End Try\n        End Sub &#39;DeleteFiles\n\n        &#39; This method deletes directories in the specified Isolated Storage, after first \n        &#39; deleting the files they contain. In this example, the Archive directory is deleted. \n        &#39; There should be no other directories in this Isolated Storage.\n        Public Sub DeleteDirectories()\n            Try\n                Dim isoFile As IsolatedStorageFile = IsolatedStorageFile.GetStore(IsolatedStorageScope.User _\n                    Or IsolatedStorageScope.Assembly Or IsolatedStorageScope.Domain, _\n                    GetType(System.Security.Policy.Url), GetType(System.Security.Policy.Url))\n                Dim name As String\n                Dim dirNames As String() = isoFile.GetDirectoryNames(&quot;*&quot;)\n                Dim fileNames As String() = isoFile.GetFileNames(&quot;Archive\\*&quot;)\n                &#39; Delete all the files currently in the Archive directory.\n                If fileNames.Length &gt; 0 Then\n                    For Each name In fileNames\n                        isoFile.DeleteFile((&quot;Archive\\&quot; &amp; name))\n                    Next name\n                    &#39;Confirm no files are left.\n                    fileNames = isoFile.GetFileNames(&quot;Archive\\*&quot;)\n                End If\n                If dirNames.Length &gt; 0 Then\n                    For Each name In dirNames\n                        &#39; Delete the Archive directory.\n                        isoFile.DeleteDirectory(name)\n                    Next name\n                End If\n                dirNames = isoFile.GetDirectoryNames(&quot;*&quot;)\n                isoFile.Remove()\n            Catch ex As Exception\n                Console.WriteLine(ex.ToString())\n            End Try\n        End Sub &#39;DeleteDirectories\n\n        Public Function SetNewPrefsForUser() As Double\n            Try\n                Dim inputChar As Byte\n                Dim isoFile As IsolatedStorageFile = IsolatedStorageFile.GetStore(IsolatedStorageScope.User Or _\n                    IsolatedStorageScope.Assembly Or IsolatedStorageScope.Domain, _\n                    GetType(System.Security.Policy.Url), GetType(System.Security.Policy.Url))\n\n                &#39; If this is not a new user, archive the old preferences and \n                &#39; overwrite them using the new preferences.\n                If Not Me.myNewPrefs Then\n                    If isoFile.GetDirectoryNames(&quot;Archive&quot;).Length = 0 Then\n                        isoFile.CreateDirectory(&quot;Archive&quot;)\n                    Else\n\n                        Dim source As New IsolatedStorageFileStream(Me.userName, FileMode.OpenOrCreate, isoFile)\n                        Dim canWrite, canRead As Boolean\n                        &#39; This is the stream from which data will be read.\n                        If source.CanRead Then canRead = True Else canRead = False\n                        Console.WriteLine(&quot;Is the source file readable? &quot; &amp; canRead)\n                        Console.WriteLine(&quot;Creating new IsolatedStorageFileStream for Archive.&quot;)\n                        &#39; Open or create a writable file.\n                        Dim target As New IsolatedStorageFileStream(&quot;Archive\\ &quot; &amp; Me.userName, _\n                             FileMode.OpenOrCreate, FileAccess.Write, FileShare.Write, isoFile)\n                        &#39; This is the stream to which data will be written.\n                        If target.CanWrite Then canWrite = True Else canWrite = False\n                        Console.WriteLine(&quot;Is the target file writable? &quot; &amp; canWrite)\n                        target.SetLength(0)  &#39;rewind the target file\n\n                        &#39; Stream the old file to a new file in the Archive directory.\n                        If source.IsAsync And target.IsAsync Then\n                            &#39; IsolatedStorageFileStreams cannot be asynchronous.  However, you\n                            &#39; can use the asynchronous BeginRead and BeginWrite functions\n                            &#39; with some possible performance penalty.\n                            Console.WriteLine(&quot;IsolatedStorageFileStreams cannot be asynchronous.&quot;)\n                        Else\n                            Console.WriteLine(&quot;Writing data to the new file.&quot;)\n                            While source.Position &lt; source.Length\n                                inputChar = CByte(source.ReadByte())\n                                target.WriteByte(inputChar)\n                            End While\n\n                            &#39; Determine the size of the IsolatedStorageFileStream\n                            &#39; by checking its Length property.\n                            Console.WriteLine((&quot;Total Bytes Read: &quot; &amp; source.Length))\n                        End If\n\n                        &#39; After you have read and written to the streams, close them.\t\n                        target.Close()\n                        source.Close()\n                    End If\n                End If\n                &#39; Open or create a writable file with a maximum size of 10K.\n                Dim isoStream As New IsolatedStorageFileStream(Me.userName, FileMode.OpenOrCreate, _\n                    FileAccess.Write, FileShare.Write, 10240, isoFile)\n                isoStream.SetLength(0) &#39;Position to overwrite the old data.\n                Dim writer As New StreamWriter(isoStream)\n                &#39; Update the data based on the new inputs.\n                writer.WriteLine(Me.NewsUrl)\n                writer.WriteLine(Me.SportsUrl)\n\n                &#39;  Calculate the amount of space used to record this user&#39;s preferences.\n                Dim d As Double = Convert.ToDouble(isoFile.CurrentSize) / Convert.ToDouble(isoFile.MaximumSize)\n                Console.WriteLine((&quot;CurrentSize = &quot; &amp; isoFile.CurrentSize.ToString()))\n                Console.WriteLine((&quot;MaximumSize = &quot; &amp; isoFile.MaximumSize.ToString()))\n                &#39; StreamWriter.Close implicitly closes isoStream.\n                writer.Close()\n                isoFile.Close()\n\n                Return d\n            Catch ex As Exception\n                Console.WriteLine(ex.ToString())\n                Return 0.0\n            End Try\n        End Function &#39;SetNewPrefsForUser\n    End Class &#39;LoginPrefs\nEnd Namespace &#39;ISOCS\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.IsolatedStorage.IsolatedStorage#1\">// This sample demonstrates methods of classes found in the System.IO IsolatedStorage namespace.\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::IO::IsolatedStorage;\nusing namespace System::Security::Policy;\nusing namespace System::Security::Permissions;\n\npublic ref class LoginPrefs\n{\nprivate:\n   String^ userName;\n   String^ newsUrl;\n   String^ sportsUrl;\n   bool newPrefs;\n\npublic:\n\n   [SecurityPermissionAttribute(SecurityAction::Demand, Flags=SecurityPermissionFlag::UnmanagedCode)]\n   bool GetPrefsForUser()\n   {\n      try\n      {\n         \n         // Retrieve an IsolatedStorageFile for the current Domain and Assembly.\n         IsolatedStorageFile^ isoFile = IsolatedStorageFile::GetStore( static_cast&lt;IsolatedStorageScope&gt;(IsolatedStorageScope::User | IsolatedStorageScope::Assembly | IsolatedStorageScope::Domain), (Type^)nullptr, nullptr );\n         IsolatedStorageFileStream^ isoStream = gcnew IsolatedStorageFileStream( this-&gt;userName,FileMode::Open,FileAccess::ReadWrite,isoFile );\n         \n         // farThe code executes to this point only if a file corresponding to the username exists.\n         // Though you can perform operations on the stream, you cannot get a handle to the file.\n         try\n         {\n            IntPtr aFileHandle = isoStream-&gt;Handle;\n            Console::WriteLine( &quot;A pointer to a file handle has been obtained. {0} {1}&quot;, aFileHandle, aFileHandle.GetHashCode() );\n         }\n         catch ( Exception^ e ) \n         {\n            \n            // Handle the exception.\n            Console::WriteLine( &quot;Expected exception&quot; );\n            Console::WriteLine( e-&gt;ToString() );\n         }\n\n         StreamReader^ reader = gcnew StreamReader( isoStream );\n         \n         // Read the data.\n         this-&gt;NewsUrl = reader-&gt;ReadLine();\n         this-&gt;SportsUrl = reader-&gt;ReadLine();\n         reader-&gt;Close();\n         isoFile-&gt;Close();\n         isoStream-&gt;Close();\n         return false;\n      }\n      catch ( Exception^ e ) \n      {\n         \n         // Expected exception if a file cannot be found. This indicates that we have a new user.\n         String^ errorMessage = e-&gt;ToString();\n         return true;\n      }\n\n   }\n\n\n   bool GetIsoStoreInfo()\n   {\n      \n      // Get a User store with type evidence for the current Domain and the Assembly.\n      IsolatedStorageFile^ isoFile = IsolatedStorageFile::GetStore( static_cast&lt;IsolatedStorageScope&gt;(IsolatedStorageScope::User | IsolatedStorageScope::Assembly | IsolatedStorageScope::Domain), System::Security::Policy::Url::typeid, System::Security::Policy::Url::typeid );\n      \n      array&lt;String^&gt;^dirNames = isoFile-&gt;GetDirectoryNames( &quot;*&quot; );\n      array&lt;String^&gt;^fileNames = isoFile-&gt;GetFileNames( &quot;*&quot; );\n      \n      // List directories currently in this Isolated Storage.\n      if ( dirNames-&gt;Length &gt; 0 )\n      {\n         for ( int i = 0; i &lt; dirNames-&gt;Length; ++i )\n         {\n            Console::WriteLine( &quot;Directory Name: {0}&quot;, dirNames[ i ] );\n\n         }\n      }\n\n      \n      // List the files currently in this Isolated Storage.\n      // The list represents all users who have personal preferences stored for this application.\n      if ( fileNames-&gt;Length &gt; 0 )\n      {\n         for ( int i = 0; i &lt; fileNames-&gt;Length; ++i )\n         {\n            Console::WriteLine( &quot;File Name: {0}&quot;, fileNames[ i ] );\n\n         }\n      }\n\n      \n      isoFile-&gt;Close();\n      return true;\n   }\n\n\n   double SetPrefsForUser()\n   {\n      try\n      {\n         \n         IsolatedStorageFile^ isoFile;\n         isoFile = IsolatedStorageFile::GetUserStoreForDomain();\n         \n         // Open or create a writable file.\n         IsolatedStorageFileStream^ isoStream = gcnew IsolatedStorageFileStream( this-&gt;userName,FileMode::OpenOrCreate,FileAccess::Write,isoFile );\n         StreamWriter^ writer = gcnew StreamWriter( isoStream );\n         writer-&gt;WriteLine( this-&gt;NewsUrl );\n         writer-&gt;WriteLine( this-&gt;SportsUrl );\n         \n         // Calculate the amount of space used to record the user&#39;s preferences.\n         double d = isoFile-&gt;CurrentSize / isoFile-&gt;MaximumSize;\n         Console::WriteLine( &quot;CurrentSize = {0}&quot;, isoFile-&gt;CurrentSize.ToString() );\n         Console::WriteLine( &quot;MaximumSize = {0}&quot;, isoFile-&gt;MaximumSize.ToString() );\n         writer-&gt;Close();\n         isoFile-&gt;Close();\n         isoStream-&gt;Close();\n         return d;\n         \n      }\n      catch ( Exception^ e ) \n      {      \n         // Add code here to handle the exception.\n         Console::WriteLine( e-&gt;ToString() );\n         return 0.0;\n      }\n\n   }\n\n\n   void DeleteFiles()\n   {\n      \n      try\n      {\n         IsolatedStorageFile^ isoFile = IsolatedStorageFile::GetStore( static_cast&lt;IsolatedStorageScope&gt;(IsolatedStorageScope::User | IsolatedStorageScope::Assembly | IsolatedStorageScope::Domain), System::Security::Policy::Url::typeid, System::Security::Policy::Url::typeid );\n         array&lt;String^&gt;^dirNames = isoFile-&gt;GetDirectoryNames( &quot;*&quot; );\n         array&lt;String^&gt;^fileNames = isoFile-&gt;GetFileNames( &quot;*&quot; );\n         \n         // List the files currently in this Isolated Storage.\n         // The list represents all users who have personal\n         // preferences stored for this application.\n         if ( fileNames-&gt;Length &gt; 0 )\n         {\n            for ( int i = 0; i &lt; fileNames-&gt;Length; ++i )\n            {\n               \n               //Delete the files.\n               isoFile-&gt;DeleteFile( fileNames[ i ] );\n\n            }\n            fileNames = isoFile-&gt;GetFileNames( &quot;*&quot; );\n         }\n         isoFile-&gt;Close();\n      }\n      catch ( Exception^ e ) \n      {\n         Console::WriteLine( e-&gt;ToString() );\n      }\n\n   }\n\n\n   // This method deletes directories in the specified Isolated Storage, after first \n   // deleting the files they contain. In this example, the Archive directory is deleted. \n   // There should be no other directories in this Isolated Storage.\n   void DeleteDirectories()\n   {\n      try\n      {\n         IsolatedStorageFile^ isoFile = IsolatedStorageFile::GetStore( static_cast&lt;IsolatedStorageScope&gt;(IsolatedStorageScope::User | IsolatedStorageScope::Assembly | IsolatedStorageScope::Domain), System::Security::Policy::Url::typeid, System::Security::Policy::Url::typeid );\n         array&lt;String^&gt;^dirNames = isoFile-&gt;GetDirectoryNames( &quot;*&quot; );\n         array&lt;String^&gt;^fileNames = isoFile-&gt;GetFileNames( &quot;Archive\\\\*&quot; );\n         \n         // Delete the current files within the Archive directory.\n         if ( fileNames-&gt;Length &gt; 0 )\n         {\n            for ( int i = 0; i &lt; fileNames-&gt;Length; ++i )\n            {\n               \n               //delete files\n               isoFile-&gt;DeleteFile( String::Concat(&quot;Archive\\\\&quot;, fileNames[ i ]) );\n\n            }\n            fileNames = isoFile-&gt;GetFileNames( &quot;Archive\\\\*&quot; );\n         }\n         if ( dirNames-&gt;Length &gt; 0 )\n         {\n            for ( int i = 0; i &lt; dirNames-&gt;Length; ++i )\n            {\n               \n               // Delete the Archive directory.\n               isoFile-&gt;DeleteDirectory( dirNames[ i ] );\n\n            }\n         }\n         dirNames = isoFile-&gt;GetDirectoryNames( &quot;*&quot; );\n         isoFile-&gt;Remove();\n      }\n      catch ( Exception^ e ) \n      {\n         Console::WriteLine( e-&gt;ToString() );\n      }\n\n   }\n\n\n   double SetNewPrefsForUser()\n   {\n      try\n      {\n         Byte inputChar;\n         IsolatedStorageFile^ isoFile = IsolatedStorageFile::GetStore( static_cast&lt;IsolatedStorageScope&gt;(IsolatedStorageScope::User | IsolatedStorageScope::Assembly | IsolatedStorageScope::Domain), System::Security::Policy::Url::typeid, System::Security::Policy::Url::typeid );\n         \n         // If this is not a new user, archive the old preferences and \n         // overwrite them using the new preferences.\n         if (  !this-&gt;NewPrefs )\n         {\n            if ( isoFile-&gt;GetDirectoryNames( &quot;Archive&quot; )-&gt;Length == 0 )\n                        isoFile-&gt;CreateDirectory( &quot;Archive&quot; );\n            else\n            {\n               \n               // This is the stream to which data will be written.\n               IsolatedStorageFileStream^ source = gcnew IsolatedStorageFileStream( this-&gt;userName,FileMode::OpenOrCreate,isoFile );\n               \n               // This is the stream from which data will be read.\n               Console::WriteLine( &quot;Is the source file readable?  {0}&quot;, (source-&gt;CanRead ? (String^)&quot;true&quot; : &quot;false&quot;) );\n               Console::WriteLine( &quot;Creating new IsolatedStorageFileStream for Archive.&quot; );\n               \n               // Open or create a writable file.\n               IsolatedStorageFileStream^ target = gcnew IsolatedStorageFileStream( String::Concat(&quot;Archive\\\\&quot;,this-&gt;userName),FileMode::OpenOrCreate,FileAccess::Write,FileShare::Write,isoFile );\n               \n               Console::WriteLine( &quot;Is the target file writable? {0}&quot;, (target-&gt;CanWrite ? (String^)&quot;true&quot; : &quot;false&quot;) );\n               \n               // Stream the old file to a new file in the Archive directory.\n               if ( source-&gt;IsAsync &amp;&amp; target-&gt;IsAsync )\n               {\n                  \n                  // IsolatedStorageFileStreams cannot be asynchronous.  However, you\n                  // can use the asynchronous BeginRead and BeginWrite functions\n                  // with some possible performance penalty.\n                  Console::WriteLine( &quot;IsolatedStorageFileStreams cannot be asynchronous.&quot; );\n               }\n               else\n               {\n                  \n                  Console::WriteLine( &quot;Writing data to the new file.&quot; );\n                  while ( source-&gt;Position &lt; source-&gt;Length )\n                  {\n                     inputChar = (Byte)source-&gt;ReadByte();\n                     target-&gt;WriteByte( (Byte)source-&gt;ReadByte() );\n                  }\n                  \n                  // Determine the size of the IsolatedStorageFileStream\n                  // by checking its Length property.\n                  Console::WriteLine( &quot;Total Bytes Read: {0}&quot;, source-&gt;Length.ToString() );\n                  \n               }\n               \n               // After you have read and written to the streams, close them.\n               target-&gt;Close();\n               source-&gt;Close();\n            }\n         }\n         \n         // Open or create a writable file, no larger than 10k\n         IsolatedStorageFileStream^ isoStream = gcnew IsolatedStorageFileStream( this-&gt;userName,FileMode::OpenOrCreate,FileAccess::Write,FileShare::Write,10240,isoFile );\n         \n         isoStream-&gt;Position = 0; // Position to overwrite the old data.\n         \n         StreamWriter^ writer = gcnew StreamWriter( isoStream );\n         \n         // Update the data based on the new inputs.\n         writer-&gt;WriteLine( this-&gt;NewsUrl );\n         writer-&gt;WriteLine( this-&gt;SportsUrl );\n         \n         // Calculate the amount of space used to record this user&#39;s preferences.\n         double d = isoFile-&gt;CurrentSize / isoFile-&gt;MaximumSize;\n         Console::WriteLine( &quot;CurrentSize = {0}&quot;, isoFile-&gt;CurrentSize.ToString() );\n         Console::WriteLine( &quot;MaximumSize = {0}&quot;, isoFile-&gt;MaximumSize.ToString() );\n         \n         // StreamWriter.Close implicitly closes isoStream.\n         writer-&gt;Close();\n         isoFile-&gt;Close();\n         return d;\n      }\n      catch ( Exception^ e ) \n      {\n         Console::WriteLine( e-&gt;ToString() );\n         return 0.0;\n      }\n\n   }\n\n   LoginPrefs( String^ aUserName )\n   {\n      userName = aUserName;\n      newPrefs = GetPrefsForUser();\n   }\n\n\n   property String^ NewsUrl \n   {\n      String^ get()\n      {\n         return newsUrl;\n      }\n\n      void set( String^ value )\n      {\n         newsUrl = value;\n      }\n\n   }\n\n   property String^ SportsUrl \n   {\n      String^ get()\n      {\n         return sportsUrl;\n      }\n\n      void set( String^ value )\n      {\n         sportsUrl = value;\n      }\n\n   }\n\n   property bool NewPrefs \n   {\n      bool get()\n      {\n         return newPrefs;\n      }\n\n   }\n\n};\n\nvoid GatherInfoFromUser( LoginPrefs^ lp )\n{\n   Console::WriteLine( &quot;Please enter the URL of your news site.&quot; );\n   lp-&gt;NewsUrl = Console::ReadLine();\n   Console::WriteLine( &quot;Please enter the URL of your sports site.&quot; );\n   lp-&gt;SportsUrl = Console::ReadLine();\n}\n\nint main()\n{\n   \n   // Prompt the user for their username.\n   Console::WriteLine( &quot;Enter your login ID:&quot; );\n   \n   // Does no error checking.\n   LoginPrefs^ lp = gcnew LoginPrefs( Console::ReadLine() );\n   if ( lp-&gt;NewPrefs )\n   {\n      Console::WriteLine( &quot;Please set preferences for a new user.&quot; );\n      GatherInfoFromUser( lp );\n      \n      // Write the new preferences to storage.\n      double percentUsed = lp-&gt;SetPrefsForUser();\n      Console::WriteLine( &quot;Your preferences have been written. Current space used is {0}%&quot;, percentUsed );\n   }\n   else\n   {\n      Console::WriteLine( &quot;Welcome back.&quot; );\n      Console::WriteLine( &quot;Your preferences have expired, please reset them.&quot; );\n      GatherInfoFromUser( lp );\n      lp-&gt;SetNewPrefsForUser();\n      Console::WriteLine( &quot;Your news site has been set to {0}\\n and your sports site has been set to {1}.&quot;, lp-&gt;NewsUrl, lp-&gt;SportsUrl );\n   }\n\n   lp-&gt;GetIsoStoreInfo();\n   Console::WriteLine( &quot;Enter &#39;d&#39; to delete the IsolatedStorage files and exit, or press any other key to exit without deleting files.&quot; );\n   String^ consoleInput = Console::ReadLine();\n   if ( consoleInput-&gt;Equals( &quot;d&quot; ) )\n   {\n      lp-&gt;DeleteFiles();\n      lp-&gt;DeleteDirectories();\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.IsolatedStorage.IsolatedStorage#1\">// This sample demonstrates methods of classes found in the System.IO IsolatedStorage namespace.\nusing System;\nusing System.IO;\nusing System.IO.IsolatedStorage;\nusing System.Security.Policy;\nusing Microsoft.Win32.SafeHandles;\nusing System.Security.Permissions;\n\n[assembly: CLSCompliantAttribute(true)]\n\nclass ConsoleApp\n{\n    [STAThread]\n    static void Main(string[] args)\n    {\n\n        // Prompt the user for their username.\n\n        Console.WriteLine(&quot;Login:&quot;);\n\n        // Does no error checking.\n        LoginPrefs lp = new LoginPrefs(Console.ReadLine());\n\n        if (lp.NewPrefs)\n        {\n            Console.WriteLine(&quot;Please set preferences for a new user.&quot;);\n            GatherInfoFromUser(lp);\n\n            // Write the new preferences to storage.\n            double percentUsed = lp.SetPrefsForUser();\n            Console.WriteLine(&quot;Your preferences have been written. Current space used is &quot; + percentUsed.ToString() + &quot; %&quot;);\n        }\n        else\n        {\n            Console.WriteLine(&quot;Welcome back.&quot;);\n\n            Console.WriteLine(&quot;Your preferences have expired, please reset them.&quot;);\n            GatherInfoFromUser(lp);\n            lp.SetNewPrefsForUser();\n\n            Console.WriteLine(&quot;Your news site has been set to {0}\\n and your sports site has been set to {1}.&quot;, lp.NewsUrl, lp.SportsUrl);\n        }\n        lp.GetIsoStoreInfo();\n        Console.WriteLine(&quot;Enter &#39;d&#39; to delete the IsolatedStorage files and exit, or press any other key to exit without deleting files.&quot;);\n        string consoleInput = Console.ReadLine();\n        if (consoleInput.ToLower() == &quot;d&quot;)\n        {\n            lp.DeleteFiles();\n            lp.DeleteDirectories();\n        }\n\n    }\n\n    static void GatherInfoFromUser(LoginPrefs lp)\n    {\n        Console.WriteLine(&quot;Please enter the URL of your news site.&quot;);\n        lp.NewsUrl = Console.ReadLine();\n        Console.WriteLine(&quot;Please enter the URL of your sports site.&quot;);\n        lp.SportsUrl = Console.ReadLine();\n    }\n}\n[SecurityPermissionAttribute(SecurityAction.Demand, Flags=SecurityPermissionFlag.UnmanagedCode)]\npublic class LoginPrefs\n{\n    public LoginPrefs(string myUserName)\n    {\n        userName = myUserName;\n        myNewPrefs = GetPrefsForUser();\n    }\n    string userName;\n\n    string myNewsUrl;\n    public string NewsUrl\n    {\n        get { return myNewsUrl; }\n        set { myNewsUrl = value; }\n    }\n\n    string mySportsUrl;\n    public string SportsUrl\n    {\n        get { return mySportsUrl; }\n        set { mySportsUrl = value; }\n    }\n    bool myNewPrefs;\n    public bool NewPrefs\n    {\n        get { return myNewPrefs; }\n    }\n\n    private bool GetPrefsForUser()\n    {\n        try\n        {\n\n            // Retrieve an IsolatedStorageFile for the current Domain and Assembly.\n            IsolatedStorageFile isoFile =\n                IsolatedStorageFile.GetStore(IsolatedStorageScope.User |\n                IsolatedStorageScope.Assembly |\n                IsolatedStorageScope.Domain,\n                null,\n                null);\n\n            IsolatedStorageFileStream isoStream =\n                new IsolatedStorageFileStream(&quot;substituteUsername&quot;,\n                System.IO.FileMode.Open,\n                System.IO.FileAccess.Read,\n                 System.IO.FileShare.Read);\n\n            // The code executes to this point only if a file corresponding to the username exists.\n            // Though you can perform operations on the stream, you cannot get a handle to the file.\n\n            try\n            {\n\n                SafeFileHandle aFileHandle = isoStream.SafeFileHandle;\n                Console.WriteLine(&quot;A pointer to a file handle has been obtained. &quot;\n                    + aFileHandle.ToString() + &quot; &quot;\n                    + aFileHandle.GetHashCode());\n            }\n\n            catch (Exception e)\n            {\n                // Handle the exception.\n                Console.WriteLine(&quot;Expected exception&quot;);\n                Console.WriteLine(e);\n            }\n\n            StreamReader reader = new StreamReader(isoStream);\n            // Read the data.\n            this.NewsUrl = reader.ReadLine();\n            this.SportsUrl = reader.ReadLine();\n            reader.Close();\n            isoFile.Close();\n            return false;\n        }\n        catch (System.IO.FileNotFoundException)\n        {\n            // Expected exception if a file cannot be found. This indicates that we have a new user.\n            return true;\n        }\n    }\n    public bool GetIsoStoreInfo()\n    {\n        // Get a User store with type evidence for the current Domain and the Assembly.\n        IsolatedStorageFile isoFile = IsolatedStorageFile.GetStore(IsolatedStorageScope.User |\n            IsolatedStorageScope.Assembly |\n            IsolatedStorageScope.Domain,\n            typeof(System.Security.Policy.Url),\n            typeof(System.Security.Policy.Url));\n\n        String[] dirNames = isoFile.GetDirectoryNames(&quot;*&quot;);\n        String[] fileNames = isoFile.GetFileNames(&quot;*&quot;);\n\n        // List directories currently in this Isolated Storage.\n        if (dirNames.Length &gt; 0)\n        {\n            for (int i = 0; i &lt; dirNames.Length; ++i)\n            {\n                Console.WriteLine(&quot;Directory Name: &quot; + dirNames[i]);\n            }\n        }\n\n        // List the files currently in this Isolated Storage.\n        // The list represents all users who have personal preferences stored for this application.\n        if (fileNames.Length &gt; 0)\n        {\n            for (int i = 0; i &lt; fileNames.Length; ++i)\n            {\n                Console.WriteLine(&quot;File Name: &quot; + fileNames[i]);\n            }\n        }\n\n        isoFile.Close();\n        return true;\n    }\n\n    public double SetPrefsForUser()\n    {\n        try\n        {\n            IsolatedStorageFile isoFile;\n            isoFile = IsolatedStorageFile.GetUserStoreForDomain();\n\n            // Open or create a writable file.\n            IsolatedStorageFileStream isoStream =\n                new IsolatedStorageFileStream(this.userName,\n                FileMode.OpenOrCreate,\n                FileAccess.Write,\n                isoFile);\n\n            StreamWriter writer = new StreamWriter(isoStream);\n            writer.WriteLine(this.NewsUrl);\n            writer.WriteLine(this.SportsUrl);\n            // Calculate the amount of space used to record the user&#39;s preferences.\n            double d = isoFile.CurrentSize / isoFile.MaximumSize;\n            Console.WriteLine(&quot;CurrentSize = &quot; + isoFile.CurrentSize.ToString());\n            Console.WriteLine(&quot;MaximumSize = &quot; + isoFile.MaximumSize.ToString());\n            // StreamWriter.Close implicitly closes isoStream.\n            writer.Close();\n            isoFile.Dispose();\n            isoFile.Close();\n            return d;\n        }\n        catch (IsolatedStorageException ex)\n        {\n            // Add code here to handle the exception.\n            Console.WriteLine(ex);\n            return 0.0;\n        }\n    }\n\n    public void DeleteFiles()\n    {\n        try\n        {\n            IsolatedStorageFile isoFile = IsolatedStorageFile.GetStore(IsolatedStorageScope.User |\n                IsolatedStorageScope.Assembly |\n                IsolatedStorageScope.Domain,\n                typeof(System.Security.Policy.Url),\n                typeof(System.Security.Policy.Url));\n\n            String[] dirNames = isoFile.GetDirectoryNames(&quot;*&quot;);\n            String[] fileNames = isoFile.GetFileNames(&quot;*&quot;);\n\n            // List the files currently in this Isolated Storage.\n            // The list represents all users who have personal\n            // preferences stored for this application.\n            if (fileNames.Length &gt; 0)\n            {\n                for (int i = 0; i &lt; fileNames.Length; ++i)\n                {\n                    // Delete the files.\n                    isoFile.DeleteFile(fileNames[i]);\n                }\n                // Confirm that no files remain.\n                fileNames = isoFile.GetFileNames(&quot;*&quot;);\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.ToString());\n        }\n\n    }\n    // This method deletes directories in the specified Isolated Storage, after first \n    // deleting the files they contain. In this example, the Archive directory is deleted. \n    // There should be no other directories in this Isolated Storage.\n    public void DeleteDirectories()\n    {\n        try\n        {\n            IsolatedStorageFile isoFile = IsolatedStorageFile.GetStore(IsolatedStorageScope.User |\n                IsolatedStorageScope.Assembly |\n                IsolatedStorageScope.Domain,\n                typeof(System.Security.Policy.Url),\n                typeof(System.Security.Policy.Url));\n            String[] dirNames = isoFile.GetDirectoryNames(&quot;*&quot;);\n            String[] fileNames = isoFile.GetFileNames(&quot;Archive\\\\*&quot;);\n\n            // Delete all the files currently in the Archive directory.\n\n            if (fileNames.Length &gt; 0)\n            {\n                for (int i = 0; i &lt; fileNames.Length; ++i)\n                {\n                    // Delete the files.\n                    isoFile.DeleteFile(&quot;Archive\\\\&quot; + fileNames[i]);\n                }\n                // Confirm that no files remain.\n                fileNames = isoFile.GetFileNames(&quot;Archive\\\\*&quot;);\n            }\n\n\n            if (dirNames.Length &gt; 0)\n            {\n                for (int i = 0; i &lt; dirNames.Length; ++i)\n                {\n                    // Delete the Archive directory.\n                }\n            }\n            dirNames = isoFile.GetDirectoryNames(&quot;*&quot;);\n            isoFile.Remove();\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.ToString());\n        }\n    }\n    public double SetNewPrefsForUser()\n    {\n        try\n        {\n            byte inputChar;\n            IsolatedStorageFile isoFile = IsolatedStorageFile.GetStore(IsolatedStorageScope.User |\n                IsolatedStorageScope.Assembly |\n                IsolatedStorageScope.Domain,\n                typeof(System.Security.Policy.Url),\n                typeof(System.Security.Policy.Url));\n\n            // If this is not a new user, archive the old preferences and \n            // overwrite them using the new preferences.\n            if (!this.myNewPrefs)\n            {\n                if (isoFile.GetDirectoryNames(&quot;Archive&quot;).Length == 0)\n                    isoFile.CreateDirectory(&quot;Archive&quot;);\n                else\n                {\n\n                    IsolatedStorageFileStream source =\n                        new IsolatedStorageFileStream(this.userName, FileMode.OpenOrCreate,\n                        isoFile);\n                    // This is the stream from which data will be read.\n                    Console.WriteLine(&quot;Is the source file readable? &quot; + (source.CanRead ? &quot;true&quot; : &quot;false&quot;));\n                    Console.WriteLine(&quot;Creating new IsolatedStorageFileStream for Archive.&quot;);\n\n                    // Open or create a writable file.\n                    IsolatedStorageFileStream target =\n                        new IsolatedStorageFileStream(&quot;Archive\\\\ &quot; + this.userName,\n                        FileMode.OpenOrCreate,\n                        FileAccess.Write,\n                        FileShare.Write,\n                        isoFile);\n                    Console.WriteLine(&quot;Is the target file writable? &quot; + (target.CanWrite ? &quot;true&quot; : &quot;false&quot;));\n                    // Stream the old file to a new file in the Archive directory.\n                    if (source.IsAsync &amp;&amp; target.IsAsync)\n                    {\n                        // IsolatedStorageFileStreams cannot be asynchronous.  However, you\n                        // can use the asynchronous BeginRead and BeginWrite functions\n                        // with some possible performance penalty.\n\n                        Console.WriteLine(&quot;IsolatedStorageFileStreams cannot be asynchronous.&quot;);\n                    }\n\n                    else\n                    {\n                        Console.WriteLine(&quot;Writing data to the new file.&quot;);\n                        while (source.Position &lt; source.Length)\n                        {\n                            inputChar = (byte)source.ReadByte();\n                            target.WriteByte(inputChar);\n                        }\n\n                        // Determine the size of the IsolatedStorageFileStream\n                        // by checking its Length property.\n                        Console.WriteLine(&quot;Total Bytes Read: &quot; + source.Length);\n\n                    }\n\n                    // After you have read and written to the streams, close them.\n                    target.Close();\n                    source.Close();\n                }\n            }\n\n            // Open or create a writable file with a maximum size of 10K.\n            IsolatedStorageFileStream isoStream =\n                new IsolatedStorageFileStream(this.userName,\n                FileMode.OpenOrCreate,\n                FileAccess.Write,\n                FileShare.Write,\n                10240,\n                isoFile);\n            isoStream.Position = 0;  // Position to overwrite the old data.\n            StreamWriter writer = new StreamWriter(isoStream);\n            // Update the data based on the new inputs.\n            writer.WriteLine(this.NewsUrl);\n            writer.WriteLine(this.SportsUrl);\n\n            // Calculate the amount of space used to record this user&#39;s preferences.\n            double d = isoFile.CurrentSize / isoFile.MaximumSize;\n            Console.WriteLine(&quot;CurrentSize = &quot; + isoFile.CurrentSize.ToString());\n            Console.WriteLine(&quot;MaximumSize = &quot; + isoFile.MaximumSize.ToString());\n            // StreamWriter.Close implicitly closes isoStream.\n            writer.Close();\n            isoFile.Close();\n\n            return d;\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.ToString());\n            return 0.0;\n        }\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use this class to read, write and create files in isolated storage.  </p>\n<p> Since this class extends <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>, you can use an instance of IsolatedStorageFileStream in most situations where a <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> might otherwise be used, such as to construct a <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> or <a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">StreamWriter</a>.  </p>\n<p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Isolated storage is not available for Windows 8.x Store apps. Instead, use the application data classes in the <code>Windows.Storage</code> namespaces included in the Windows Runtime API to store local data and files. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=229175\" data-linktype=\"external\">Application data</a> in the Windows Dev Center.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object giving access to the file designated by <code>path</code> in the specified <code>mode</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.directorynotfoundexception\" data-linktype=\"relative-path\">DirectoryNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The directory in <code>path</code> does not exist.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The isolated store that is used is scoped by the current executing assembly&#39;s identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> objects can be opened from it), use the form of the constructor that accepts an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> object.  </p>\n<p> The <code>mode</code> parameter indicates whether a new file should be created, an existing one used, and so on.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_System_IO_FileAccess_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode, FileAccess)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the kind of <code>access</code> requested.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The isolated store that is used is scoped by the current executing assembly&#39;s identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> objects can be opened from it), use the form of the constructor that accepts an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> object.  </p>\n<p> The <code>mode</code> parameter indicates whether a new file should be created or an existing one used. The <code>access</code> parameter includes read-only, read/write, and write-only.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_System_IO_IsolatedStorage_IsolatedStorageFile_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode, IsolatedStorageFile)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, and in the context of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> specified by <code>isf</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.IsolatedStorage.IsolatedStorageFile isf);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isf</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> in which to open the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>isf</code> does not have a quota.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>mode</code> parameter indicates whether a new file should be created, an existing one used, and so on.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_System_IO_FileAccess_System_IO_FileShare_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode, FileAccess, FileShare)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>share</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The isolated store that is used is scoped by the current executing assembly&#39;s identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> objects can be opened from it), use the form of the constructor that accepts an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> object.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_System_IO_FileAccess_System_IO_IsolatedStorage_IsolatedStorageFile_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode, FileAccess, IsolatedStorageFile)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> class giving access to the file designated by <code>path</code> in the specified <code>mode</code>, with the specified file <code>access</code>, and in the context of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> specified by <code>isf</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.IsolatedStorage.IsolatedStorageFile isf);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isf</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> in which to open the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The isolated store is closed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>isf</code> does not have a quota.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>mode</code> parameter indicates whether a new file should be created or an existing one used. The <code>access</code> parameter includes read-only, read/write, and write-only.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_System_IO_FileAccess_System_IO_FileShare_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode, FileAccess, FileShare, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, with the <code>buffersize</code> specified.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>share</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bufferSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> buffer size.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The isolated store that is used is scoped by the current executing assembly&#39;s identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> objects can be opened from it), use the form of the constructor that accepts an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> object.  </p>\n<p> The <code>mode</code> parameter indicates whether a new file should be created or an existing one used. The <code>access</code> parameter includes read-only, read/write, and write-only.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_System_IO_FileAccess_System_IO_FileShare_System_IO_IsolatedStorage_IsolatedStorageFile_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode, FileAccess, FileShare, IsolatedStorageFile)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, and in the context of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> specified by <code>isf</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.IO.IsolatedStorage.IsolatedStorageFile isf);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>share</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isf</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> in which to open the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>isf</code> does not have a quota.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>mode</code> parameter indicates whether a new file should be created or an existing one used. The <code>access</code> parameter includes read-only, read/write, and write-only.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream__ctor_System_String_System_IO_FileMode_System_IO_FileAccess_System_IO_FileShare_System_Int32_System_IO_IsolatedStorage_IsolatedStorageFile_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsolatedStorageFileStream(String, FileMode, FileAccess, FileShare, Int32, IsolatedStorageFile)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, with the <code>buffersize</code> specified, and in the context of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> specified by <code>isf</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, System.IO.IsolatedStorage.IsolatedStorageFile isf);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The relative path of the file within isolated storage.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>access</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>share</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a> values</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bufferSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> buffer size.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isf</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefile\" data-linktype=\"relative-path\">IsolatedStorageFile</a> in which to open the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is badly formed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>path</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No file was found and the <code>mode</code> is set to <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>isf</code> does not have a quota.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>mode</code> parameter indicates whether a new file should be created or an existing one used. The <code>access</code> parameter includes read-only, read/write, and write-only.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_CanRead_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_CanRead\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanRead</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a Boolean value indicating whether the file can be read.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool CanRead { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object can be read; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this property to determine whether the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object can be read.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_CanSeek_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_CanSeek\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanSeek</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a Boolean value indicating whether seek operations are supported.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool CanSeek { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object supports seek operations; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this property to determine whether the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object supports seek operations.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_CanWrite_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_CanWrite\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanWrite</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a Boolean value indicating whether you can write to the file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool CanWrite { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object can be written; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this property to determine whether the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object can be written.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Handle_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Handle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Handle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the file handle for the file that the current <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object encapsulates. Accessing this property is not permitted on an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object, and throws an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override IntPtr Handle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file handle for the file that the current <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object encapsulates.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.obsoleteattribute\" title=\"System.ObsoleteAttribute\" data-linktype=\"relative-path\">ObsoleteAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The Handle property always generates this exception.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_Handle_\" data-linktype=\"relative-path\">Handle</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_IsAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_IsAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsAsync</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a Boolean value indicating whether the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object was opened asynchronously or synchronously.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool IsAsync { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object supports asynchronous access; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Asynchronous <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> objects cannot be created, unlike <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>. However, the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a>, <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a>, <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a>, and <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> methods are supported on synchronous instances, with some performance penalties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Length_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Length\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Length</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the length of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override long Length { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The length of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object in bytes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Length represents the number of bytes currently in the file. It is not affected by isolated storage quota.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Position_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Position\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Position</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the current position of the current <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override long Position { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current position of this <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The position cannot be set to a negative number.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Setting this property works when the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> property is <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_SafeFileHandle_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_SafeFileHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SafeFileHandle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"microsoft.win32.safehandles.safefilehandle\" data-linktype=\"relative-path\">SafeFileHandle</a> object that represents the operating system file handle for the file that the current <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object encapsulates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safefilehandle\" data-linktype=\"relative-path\">SafeFileHandle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"microsoft.win32.safehandles.safefilehandle\" data-linktype=\"relative-path\">SafeFileHandle</a> object that represents the operating system file handle for the file that the current <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object encapsulates.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The SafeFileHandle property always generates this exception.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SafeFileHandle property is not supported and always generates an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a> exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginRead_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins an asynchronous read.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override IAsyncResult BeginRead (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The buffer to read data into.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The byte offset in <code>buffer</code> at which to begin reading.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>numBytes</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of bytes to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userCallback</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method to call when the asynchronous read operation is completed. This parameter is optional.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stateObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The status of the asynchronous read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that represents the asynchronous read, which is possibly still pending. This <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> must be passed to this stream&#39;s <span class=\"xref\">stem.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*</span> method to determine how many bytes were read. This can be done either by the same code that called BeginRead or in a callback passed to BeginRead.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>An asynchronous read was attempted past the end of the file.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.  </p>\n<p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> with this <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> to find out how many bytes were read.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginWrite_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins an asynchronous write.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override IAsyncResult BeginWrite (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The buffer to write data to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The byte offset in <code>buffer</code> at which to begin writing.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>numBytes</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of bytes to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userCallback</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method to call when the asynchronous write operation is completed. This parameter is optional.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stateObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The status of the asynchronous write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents the asynchronous write, which is possibly still pending. This <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> must be passed to this stream&#39;s <span class=\"xref\">stem.IO.Stream.EndWrite*</span> method to ensure that the write is complete, then frees resources appropriately. This can be done either by the same code that called <span class=\"xref\">stem.IO.Stream.BeginWrite*</span> or in a callback passed to <span class=\"xref\">stem.IO.Stream.BeginWrite*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>An asynchronous write was attempted past the end of the file.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If a <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object is writable, writing at the end of the stream expands the stream.  </p>\n<p> The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.  </p>\n<p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> with the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that this method returns to find out how many bytes were written.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Dispose_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> invokes the protected Dispose method with the <code>disposing</code> parameter set to true. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes Dispose with <code>disposing</code> set to false.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> references. This method invokes the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_EndRead_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_EndRead_System_IAsyncResult_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndRead(IAsyncResult)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Ends a pending asynchronous read request.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int EndRead (IAsyncResult asyncResult);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>asyncResult</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The pending asynchronous request.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The number of bytes read from the stream, between zero and the number of requested bytes. Streams will only return zero at the end of the stream. Otherwise, they will block until at least one byte is available.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>asyncResult</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>EndRead must be called exactly once on every <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object from <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a>, and calling EndRead is the only way to know how many bytes were read from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. EndRead will block until the I/O operation has completed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_EndWrite_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_EndWrite_System_IAsyncResult_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndWrite(IAsyncResult)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Ends an asynchronous write.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void EndWrite (IAsyncResult asyncResult);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>asyncResult</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The pending asynchronous I/O request to end.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>asyncResult</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>EndWrite must be called exactly once on every <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> from <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a>.  </p>\n<p> EndWrite will block until the I/O operation has completed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Flush_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Flush\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Flush()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Clears buffers for this stream and causes any buffered data to be written to the file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Flush ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Because a buffer can be used for either reading or writing, but not both simultaneously, Flush performs two functions. First, any data previously written to the buffer is copied to the file and the buffer is cleared. Second, if <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> is <code>true</code> and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer. The buffer is then cleared.  </p>\n<p> Use the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream#System_IO_IsolatedStorage_IsolatedStorageFileStream_Flush_System_Boolean_\" data-linktype=\"relative-path\">Flush(Boolean)</a> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Flush_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Flush_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Flush(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Flush (bool flushToDisk);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>flushToDisk</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to flush all intermediate file buffers; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Lock_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Lock_System_Int64_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Lock(Int64, Int64)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Prevents other processes from reading from or writing to the stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Lock (long position, long length);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>position</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The starting position of the range to lock. The value of this parameter must be equal to or greater than 0 (zero).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>length</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of bytes to lock.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>position</code> or <code>length</code> is negative.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The file is closed.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The process cannot access the file because another process has locked a portion of the file.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Read_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Read_System_Byte___System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Read(Byte[], Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies bytes from the current buffered <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object to an array.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int Read (byte[] buffer, int offset, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The buffer to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The offset in the buffer at which to begin writing.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of bytes to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The total number of bytes read into the <code>buffer</code>. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>buffer</code> parameter can be an instance of the <a class=\"xref\" href=\"system.buffer\" data-linktype=\"relative-path\">Buffer</a> class, or an array of one of the following types: <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>, <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a>, <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>, <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>, <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>, <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>, <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a>, <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a>, <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>, <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>, or <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>. The <code>offset</code> parameter gives the offset of the byte in buffer at which to begin writing (index in the buffer), and the <code>count</code> parameter gives the maximum number of bytes that will be read from this stream. The returned value is the actual number of bytes read, or zero if the end of the stream is reached. If the read operation is successful, the current position of the stream is advanced by the number of bytes read. If an exception occurs, the current position of the stream is unchanged.  </p>\n<p> The Read method treats the <code>buffer</code> parameter as a block of bytes, regardless of its actual type. Likewise, the <code>offset</code> and <code>count</code> parameters are always specified in bytes. For <code>buffer</code> parameters other than byte arrays, this means that an element index must be multiplied by the element size in bytes to form a correct value for <code>offset</code> or <code>count</code>.  </p>\n<p> The Read method will return zero only if the end of the stream is reached. In all other cases, Read always reads at least one byte from the stream before returning. If no data is available from the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object upon a call to Read, the method will block until at least one byte of data can be returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_ReadByte_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_ReadByte\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadByte()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads a single byte from the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object in isolated storage.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int ReadByte ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The 8-bit unsigned integer value read from the isolated storage file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Seek_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Seek_System_Int64_System_IO_SeekOrigin_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Seek(Int64, SeekOrigin)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the current position of this <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object to the specified value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override long Seek (long offset, System.IO.SeekOrigin origin);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new position of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>origin</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The new position in the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>origin</code> must be one of the <a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Some <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> objects support positioning beyond the length of the stream, others will throw an exception in this case.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_SetLength_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_SetLength_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetLength(Int64)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the length of this <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object to the specified <code>value</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void SetLength (long value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new length of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>value</code> is a negative number.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the specified <code>value</code> is less than the current length of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object, the stream is truncated. If the specified <code>value</code> is larger than the current length of the stream, the stream is expanded. If the stream is expanded, the contents of the stream between the old and the new length are undefined. In order to use this method, an <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object must support both writing and seeking.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Unlock_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Unlock_System_Int64_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Unlock(Int64, Int64)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Allows other processes to access all or part of a file that was previously locked.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Unlock (long position, long length);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>position</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The starting position of the range to unlock. The value of this parameter must be equal to or greater than 0 (zero).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>length</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of bytes to unlock.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>position</code> or <code>length</code> is negative.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Write_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_Write_System_Byte___System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Write(Byte[], Int32, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a block of bytes to the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object using data read from a byte array.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Write (byte[] buffer, int offset, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>buffer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The buffer to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The byte offset in buffer from which to begin.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum number of bytes to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The write attempt exceeds the quota for the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>offset</code> parameter gives the offset of the byte in the <code>buffer</code> at which to begin reading, and the <code>count</code> parameter gives the number of bytes that will be written to this <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object. If the write operation is successful, the current position of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object is advanced by the number of bytes written. If an exception occurs, the current position of the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object is unchanged.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_WriteByte_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IO_IsolatedStorage_IsolatedStorageFileStream_WriteByte_System_Byte_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteByte(Byte)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a single byte to the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void WriteByte (byte value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The byte value to write to the isolated storage file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitysafecriticalattribute\" title=\"System.Security.SecuritySafeCriticalAttribute\" data-linktype=\"relative-path\">SecuritySafeCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstorageexception\" data-linktype=\"relative-path\">IsolatedStorageException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The write attempt exceeds the quota for the <a class=\"xref\" href=\"system.io.isolatedstorage.isolatedstoragefilestream\" data-linktype=\"relative-path\">IsolatedStorageFileStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.IsolatedStorage.IsolatedStorageFileStream.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Length\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Position\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Read\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.Write\">\r\n<meta name=\"APIName\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"95852701-78e0-f328-d977-f6dfc3a20156\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Exposes a file within isolated storage.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.io.isolatedstorage/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.IO.IsolatedStorage.IsolatedStorageFileStream.yml","open_to_public_contributors":false,"api_name":["System.IO.IsolatedStorage.IsolatedStorageFileStream","System.IO.IsolatedStorage.IsolatedStorageFileStream..ctor","System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead","System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite","System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead","System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek","System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite","System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose","System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead","System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite","System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush","System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle","System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync","System.IO.IsolatedStorage.IsolatedStorageFileStream.Length","System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock","System.IO.IsolatedStorage.IsolatedStorageFileStream.Position","System.IO.IsolatedStorage.IsolatedStorageFileStream.Read","System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte","System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle","System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek","System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength","System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock","System.IO.IsolatedStorage.IsolatedStorageFileStream.Write","System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.IsolatedStorage.IsolatedStorageFileStream","System::IO::IsolatedStorage::IsolatedStorageFileStream","System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor","System::IO::IsolatedStorage::IsolatedStorageFileStream::#ctor","System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead","System::IO::IsolatedStorage::IsolatedStorageFileStream::BeginRead","System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite","System::IO::IsolatedStorage::IsolatedStorageFileStream::BeginWrite","System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead","System::IO::IsolatedStorage::IsolatedStorageFileStream::CanRead","System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek","System::IO::IsolatedStorage::IsolatedStorageFileStream::CanSeek","System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite","System::IO::IsolatedStorage::IsolatedStorageFileStream::CanWrite","System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose","System::IO::IsolatedStorage::IsolatedStorageFileStream::Dispose","System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead","System::IO::IsolatedStorage::IsolatedStorageFileStream::EndRead","System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite","System::IO::IsolatedStorage::IsolatedStorageFileStream::EndWrite","System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush","System::IO::IsolatedStorage::IsolatedStorageFileStream::Flush","System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle","System::IO::IsolatedStorage::IsolatedStorageFileStream::Handle","System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync","System::IO::IsolatedStorage::IsolatedStorageFileStream::IsAsync","System.IO.IsolatedStorage.IsolatedStorageFileStream.Length","System::IO::IsolatedStorage::IsolatedStorageFileStream::Length","System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock","System::IO::IsolatedStorage::IsolatedStorageFileStream::Lock","System.IO.IsolatedStorage.IsolatedStorageFileStream.Position","System::IO::IsolatedStorage::IsolatedStorageFileStream::Position","System.IO.IsolatedStorage.IsolatedStorageFileStream.Read","System::IO::IsolatedStorage::IsolatedStorageFileStream::Read","System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte","System::IO::IsolatedStorage::IsolatedStorageFileStream::ReadByte","System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle","System::IO::IsolatedStorage::IsolatedStorageFileStream::SafeFileHandle","System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek","System::IO::IsolatedStorage::IsolatedStorageFileStream::Seek","System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength","System::IO::IsolatedStorage::IsolatedStorageFileStream::SetLength","System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock","System::IO::IsolatedStorage::IsolatedStorageFileStream::Unlock","System.IO.IsolatedStorage.IsolatedStorageFileStream.Write","System::IO::IsolatedStorage::IsolatedStorageFileStream::Write","System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte","System::IO::IsolatedStorage::IsolatedStorageFileStream::WriteByte"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"95852701-78e0-f328-d977-f6dfc3a20156","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.IO.IsolatedStorage/IsolatedStorageFileStream.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IsolatedStorageFileStream class | Microsoft Docs","_op_ogTitle":"IsolatedStorageFileStream class","description":"Exposes a file within isolated storage.\n","toc_asset_id":"api/_splitted/System.IO.IsolatedStorage/toc.json","toc_rel":"_splitted/System.IO.IsolatedStorage/toc.json","source_url":"","ms.assetid":"System.IO.IsolatedStorage.IsolatedStorageFileStream","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.io.isolatedstorage.isolatedstoragefilestream","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.io.isolatedstorage.isolatedstoragefilestream","fileRelativePath":"api/System.IO.IsolatedStorage.IsolatedStorageFileStream.html"},"themesRelativePathToOutputRoot":"_themes/"}