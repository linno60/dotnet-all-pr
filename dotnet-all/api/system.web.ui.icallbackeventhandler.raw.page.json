{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ICallbackEventHandler</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Used to indicate that a control can be the target of a callback event on the server.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface ICallbackEventHandler</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Implement the ICallbackEventHandler interface for any custom control that needs to receive callback events. For more information, see <a href=\"../topic/implementing%20client%20callbacks%20programmatically%20without%20postbacks%20in%20asp.net%20web%20pages\" data-linktype=\"relative-path\">Implementing Client Callbacks Without Postbacks</a>.  </p>\n<p> Examples of controls that implement the ICallbackEventHandler interface include the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview\" data-linktype=\"relative-path\">TreeView</a> controls. When a callback event targets a control that implements the ICallbackEventHandler interface, the <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler#System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_\" data-linktype=\"relative-path\">RaiseCallbackEvent</a> method is called to handle the event, passing the event argument as a parameter and the <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler#System_Web_UI_ICallbackEventHandler_GetCallbackResult_\" data-linktype=\"relative-path\">GetCallbackResult</a> method returns the result of the callback.  </p>\n<p> Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously. ASP.NET controls like <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview\" data-linktype=\"relative-path\">TreeView</a> are implemented synchronously. Synchronous callbacks do not prevent the user from working in the browser. In synchronous mode, only one callback at a time can execute, with the last callback taking precedence. When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously. For details on asynchronous programming, see <a href=\"../topic/event-based%20asynchronous%20pattern%20(eap)\" data-linktype=\"relative-path\">Event-based Asynchronous Pattern (EAP)</a>.  </p>\n<p> You can specify whether callback events originating from the user interface rendered by a control implementing the ICallbackEventHandler interface are validated. Validation of events is a good security practice. However, for performance reasons you can disable it. To control whether event validation is performed on callback events, set the <code>enableEventValidation</code> attribute of the <a href=\"http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4\" data-linktype=\"external\">@ Page</a> directive or the <code>enableEventValidation</code> attribute of the <a href=\"http://msdn.microsoft.com/en-us/4123bb66-3fe4-4d62-b70e-33758656b458\" data-linktype=\"external\">pages Element (ASP.NET Settings Schema)</a> of the Web.config file. If you set the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_EnableEventValidation_\" data-linktype=\"relative-path\">EnableEventValidation</a> property in code, set it in the <code>Page_Init</code> phase of page processing. For more information on balancing the security benefit of event validation with its performance cost, see <a href=\"../topic/asp.net%20performance%20overview\" data-linktype=\"relative-path\">ASP.NET Performance Overview</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_ICallbackEventHandler_GetCallbackResult_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_ICallbackEventHandler_GetCallbackResult\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCallbackResult()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the results of a callback event that targets a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string GetCallbackResult ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The result of the callback.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Exceptions thrown in <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler#System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_\" data-linktype=\"relative-path\">RaiseCallbackEvent</a> will not prevent GetCallbackResult from being called and returning a result. To prevent GetCallbackResult from returning a result, set a flag when an exception is thrown in <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler#System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_\" data-linktype=\"relative-path\">RaiseCallbackEvent</a> and return an empty string from GetCallbackResult.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5 netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RaiseCallbackEvent(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes a callback event that targets a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RaiseCallbackEvent (string eventArgument);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>eventArgument</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that represents an event argument to pass to the event handler.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When <code>null</code> is used as the event argument parameter, the string is serialized to &quot;null&quot; and sent back to the server. Because there is no way to distinguish between <code>null</code> and &quot;null&quot;, you should avoid using <code>null</code> argument parameters with callbacks.  </p>\n<p> Exceptions thrown in RaiseCallbackEvent will not prevent <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler#System_Web_UI_ICallbackEventHandler_GetCallbackResult_\" data-linktype=\"relative-path\">GetCallbackResult</a> from being called and returning a result. To prevent <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler#System_Web_UI_ICallbackEventHandler_GetCallbackResult_\" data-linktype=\"relative-path\">GetCallbackResult</a> from returning a result, set a flag when an exception is thrown in RaiseCallbackEvent and return an empty string from <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler#System_Web_UI_ICallbackEventHandler_GetCallbackResult_\" data-linktype=\"relative-path\">GetCallbackResult</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.ICallbackEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ICallbackEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ICallbackEventHandler.GetCallbackResult\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"e02346bc-7ea2-feb6-2445-9010c401e375\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Used to indicate that a control can be the target of a callback event on the server.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.ICallbackEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.ICallbackEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.ICallbackEventHandler","System.Web.UI.ICallbackEventHandler.GetCallbackResult","System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.ICallbackEventHandler","System::Web::UI::ICallbackEventHandler","System.Web.UI.ICallbackEventHandler.GetCallbackResult","System::Web::UI::ICallbackEventHandler::GetCallbackResult","System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent","System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"e02346bc-7ea2-feb6-2445-9010c401e375","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI/ICallbackEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ICallbackEventHandler interface | Microsoft Docs","_op_ogTitle":"ICallbackEventHandler interface","description":"Used to indicate that a control can be the target of a callback event on the server.\n","toc_asset_id":"api/_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.ICallbackEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.icallbackeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.icallbackeventhandler","fileRelativePath":"api/System.Web.UI.ICallbackEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}