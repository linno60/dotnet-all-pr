{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SortKey</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the result of mapping a string to its sort key.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class SortKey</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">SortKey</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example compares the string &quot;llama&quot; using the &quot;en-US&quot; and &quot;es-ES&quot; cultures, and the &quot;en-US&quot; and &quot;es-ES&quot; traditional cultures.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Globalization.SortKey.Compare#1\">using namespace System;\nusing namespace System::Globalization;\nint main()\n{\n   \n   // Creates a SortKey using the en-US culture.\n   CultureInfo^ MyCI = gcnew CultureInfo( &quot;en-US&quot;,false );\n   CompareInfo^ myComp_enUS = MyCI-&gt;CompareInfo;\n   SortKey^ mySK1 = myComp_enUS-&gt;GetSortKey( &quot;llama&quot; );\n   \n   // Creates a SortKey using the es-ES culture with international sort.\n   MyCI = gcnew CultureInfo( &quot;es-ES&quot;,false );\n   CompareInfo^ myComp_esES = MyCI-&gt;CompareInfo;\n   SortKey^ mySK2 = myComp_esES-&gt;GetSortKey( &quot;llama&quot; );\n   \n   // Creates a SortKey using the es-ES culture with traditional sort.\n   MyCI = gcnew CultureInfo( 0x040A,false );\n   CompareInfo^ myComp_es = MyCI-&gt;CompareInfo;\n   SortKey^ mySK3 = myComp_es-&gt;GetSortKey( &quot;llama&quot; );\n   \n   // Compares the en-US SortKey with each of the es-ES SortKey objects.\n   Console::WriteLine( &quot;Comparing \\&quot;llama\\&quot; in en-US and in es-ES with international sort : {0}&quot;, SortKey::Compare( mySK1, mySK2 ) );\n   Console::WriteLine( &quot;Comparing \\&quot;llama\\&quot; in en-US and in es-ES with traditional sort   : {0}&quot;, SortKey::Compare( mySK1, mySK3 ) );\n}\n\n/*\nThis code produces the following output.\n\nComparing S&quot;llama&quot; in en-US and in es-ES with international sort : 0\nComparing S&quot;llama&quot; in en-US and in es-ES with traditional sort   : -1\n*/\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Globalization.SortKey.Compare#1\">using System;\nusing System.Globalization;\n\npublic class SamplesSortKey  {\n\n   public static void Main()  {\n\n      // Creates a SortKey using the en-US culture.\n      CompareInfo myComp_enUS = new CultureInfo(&quot;en-US&quot;,false).CompareInfo;\n      SortKey mySK1 = myComp_enUS.GetSortKey( &quot;llama&quot; );\n\n      // Creates a SortKey using the es-ES culture with international sort.\n      CompareInfo myComp_esES = new CultureInfo(&quot;es-ES&quot;,false).CompareInfo;\n      SortKey mySK2 = myComp_esES.GetSortKey( &quot;llama&quot; );\n\n      // Creates a SortKey using the es-ES culture with traditional sort.\n      CompareInfo myComp_es   = new CultureInfo(0x040A,false).CompareInfo;\n      SortKey mySK3 = myComp_es.GetSortKey( &quot;llama&quot; );\n\n      // Compares the en-US SortKey with each of the es-ES SortKey objects.\n      Console.WriteLine( &quot;Comparing \\&quot;llama\\&quot; in en-US and in es-ES with international sort : {0}&quot;, SortKey.Compare( mySK1, mySK2 ) );\n      Console.WriteLine( &quot;Comparing \\&quot;llama\\&quot; in en-US and in es-ES with traditional sort   : {0}&quot;, SortKey.Compare( mySK1, mySK3 ) );\n\n   }\n\n}\n\n/*\nThis code produces the following output.\n\nComparing &quot;llama&quot; in en-US and in es-ES with international sort : 0\nComparing &quot;llama&quot; in en-US and in es-ES with traditional sort   : -1\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.SortKey.Compare#1\">Imports System\nImports System.Globalization\n\nPublic Class SamplesSortKey\n\n   Public Shared Sub Main()\n\n      &#39; Creates a SortKey using the en-US culture.\n      Dim myComp_enUS As CompareInfo = New CultureInfo(&quot;en-US&quot;, False).CompareInfo\n      Dim mySK1 As SortKey = myComp_enUS.GetSortKey(&quot;llama&quot;)\n\n      &#39; Creates a SortKey using the es-ES culture with international sort.\n      Dim myComp_esES As CompareInfo = New CultureInfo(&quot;es-ES&quot;, False).CompareInfo\n      Dim mySK2 As SortKey = myComp_esES.GetSortKey(&quot;llama&quot;)\n\n      &#39; Creates a SortKey using the es-ES culture with traditional sort.\n      Dim myComp_es As CompareInfo = New CultureInfo(&amp;H40A, False).CompareInfo\n      Dim mySK3 As SortKey = myComp_es.GetSortKey(&quot;llama&quot;)\n\n      &#39; Compares the en-US SortKey with each of the es-ES SortKey objects.\n      Console.WriteLine(&quot;Comparing &quot;&quot;llama&quot;&quot; in en-US and in es-ES with international sort : {0}&quot;, SortKey.Compare(mySK1, mySK2))\n      Console.WriteLine(&quot;Comparing &quot;&quot;llama&quot;&quot; in en-US and in es-ES with traditional sort   : {0}&quot;, SortKey.Compare(mySK1, mySK3))\n\n   End Sub &#39;Main \n\nEnd Class &#39;SamplesSortKey\n\n\n&#39;This code produces the following output.\n&#39;\n&#39;Comparing &quot;llama&quot; in en-US and in es-ES with international sort : 0\n&#39;Comparing &quot;llama&quot; in en-US and in es-ES with traditional sort   : -1\n</code></pre><p> The following example shows how you can use the SortKey class to improve performance in an application that relies extensively on sorting and searching a large array. The example creates an unordered array of names, which in this case has 13 elements. It then stores the sort key of each name in a parallel array, which it passes to the <a class=\"xref\" href=\"system.array#System_Array_Sort_System_Array_System_Array_\" data-linktype=\"relative-path\">System.Array.Sort(Array, Array)</a> method. The result is a sorted array. The example then searches the array for three strings. For each search string, it calls the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_GetSortKey_System_String_System_Globalization_CompareOptions_\" data-linktype=\"relative-path\">System.Globalization.CompareInfo.GetSortKey(String, CompareOptions)</a> method to retrieve the string&#39;s sort key, and then calls the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/3kyey7x5(v=vs.110).aspx\" data-linktype=\"external\">Array.FindIndex</a> method to retrieve the index of that sort key in the array of sort keys. Because the name and sort key arrays are parallel, the returned index is also the index of the name in the <code>names</code> array.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Globalization.SortKey.Class#1\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      &#39; Define names.\n      Dim names() As String = { &quot;Adam&quot;, &quot;Ignatius&quot;, &quot;Batholomew&quot;, \n                                &quot;Gregory&quot;, &quot;Clement&quot;, &quot;Frances&quot;,  \n                                &quot;Harold&quot;, &quot;Dalmatius&quot;, &quot;Edgar&quot;,    \n                                &quot;John&quot;, &quot;Benedict&quot;, &quot;Paul&quot;, &quot;George&quot; } \n      Dim sortKeys(names.Length - 1) As SortKey\n      Dim ci As CompareInfo = CultureInfo.CurrentCulture.CompareInfo\n\n      For ctr As Integer = 0 To names.Length - 1\n         sortKeys(ctr) = ci.GetSortKey(names(ctr), CompareOptions.IgnoreCase)         \n      Next   \n      \n      &#39; Sort array based on value of sort keys.\n      Array.Sort(names, sortKeys)\n      \n      Console.WriteLine(&quot;Sorted array: &quot;)\n      For Each name In names\n         Console.WriteLine(name)\n      Next          \n      Console.WriteLine()\n      \n      Dim namesToFind() As String = { &quot;Paul&quot;, &quot;PAUL&quot;, &quot;Wilberforce&quot; }\n      \n      Console.WriteLine(&quot;Searching an array:&quot;)\n      For Each nameToFind In namesToFind\n         Dim searchKey As SortKey = ci.GetSortKey(nameToFind, CompareOptions.IgnoreCase)\n         Dim index As Integer = Array.FindIndex(sortKeys, \n                                                Function(x) x.Equals(searchKey)) \n         If index &gt;= 0 Then\n            Console.WriteLine(&quot;{0} found at index {1}: {2}&quot;, nameToFind,\n                              index, names(index))\n         Else\n            Console.WriteLine(&quot;{0} not found&quot;, nameToFind)\n         End If                     \n      Next                     \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Sorted array:\n&#39;       Adam\n&#39;       Batholomew\n&#39;       Benedict\n&#39;       Clement\n&#39;       Dalmatius\n&#39;       Edgar\n&#39;       Frances\n&#39;       George\n&#39;       Gregory\n&#39;       Harold\n&#39;       Ignatius\n&#39;       John\n&#39;       Paul\n&#39;       \n&#39;       Searching an array:\n&#39;       Paul found at index 12: Paul\n&#39;       PAUL found at index 12: Paul\n&#39;       Wilberforce not found\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Globalization.SortKey.Class#1\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define names.\n      String[] names= { &quot;Adam&quot;, &quot;Ignatius&quot;, &quot;Batholomew&quot;, &quot;Gregory&quot;, \n                        &quot;Clement&quot;, &quot;Frances&quot;, &quot;Harold&quot;, &quot;Dalmatius&quot;, \n                        &quot;Edgar&quot;, &quot;John&quot;, &quot;Benedict&quot;, &quot;Paul&quot;, &quot;George&quot; }; \n      SortKey[] sortKeys = new SortKey[names.Length];\n      CompareInfo ci = CultureInfo.CurrentCulture.CompareInfo;\n\n      for (int ctr = 0; ctr &lt; names.Length; ctr++)\n         sortKeys[ctr] = ci.GetSortKey(names[ctr], CompareOptions.IgnoreCase);         \n      \n      // Sort array based on value of sort keys.\n      Array.Sort(names, sortKeys);\n      \n      Console.WriteLine(&quot;Sorted array: &quot;);\n      foreach (var name in names)\n         Console.WriteLine(name);\n\n      Console.WriteLine();\n      \n      String[] namesToFind = { &quot;Paul&quot;, &quot;PAUL&quot;, &quot;Wilberforce&quot; };\n      \n      Console.WriteLine(&quot;Searching an array:&quot;);\n      foreach (var nameToFind in namesToFind) {\n         SortKey searchKey = ci.GetSortKey(nameToFind, CompareOptions.IgnoreCase);\n         int index = Array.FindIndex(sortKeys, (x) =&gt; x.Equals(searchKey)); \n         if (index &gt;= 0)\n            Console.WriteLine(&quot;{0} found at index {1}: {2}&quot;, nameToFind,\n                              index, names[index]);\n         else\n            Console.WriteLine(&quot;{0} not found&quot;, nameToFind);\n      } \n   }\n}\n// The example displays the following output:\n//       Sorted array:\n//       Adam\n//       Batholomew\n//       Benedict\n//       Clement\n//       Dalmatius\n//       Edgar\n//       Frances\n//       George\n//       Gregory\n//       Harold\n//       Ignatius\n//       John\n//       Paul\n//       \n//       Searching an array:\n//       Paul found at index 12: Paul\n//       PAUL found at index 12: Paul\n//       Wilberforce not found\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights. A sort key serves as the repository of these weights for a particular string.  </p>\n<p> The <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_GetSortKey_\" data-linktype=\"relative-path\">GetSortKey</a> method returns an instance of the SortKey class that reflects the culture-sensitive mapping of characters in a specified string. The value of a SortKey object is its key data, which is returned by the <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_KeyData_\" data-linktype=\"relative-path\">KeyData</a> property. This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options. A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.  For example, if you create a sort key by calling the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_GetSortKey_System_String_System_Globalization_CompareOptions_\" data-linktype=\"relative-path\">GetSortKey(String, CompareOptions)</a> method with a value of <a class=\"xref\" href=\"system.globalization.compareoptions\" data-linktype=\"relative-path\">System.Globalization.CompareOptions</a>, a string comparison operation that uses the sort key is case-insensitive.  </p>\n<p> After you create a sort key for a string, you compare sort keys by calling the static <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_Compare_\" data-linktype=\"relative-path\">Compare</a> method. This method performs a simple byte-by-byte comparison, so it is much faster than the <a class=\"xref\" href=\"system.string#System_String_Compare_\" data-linktype=\"relative-path\">Compare</a> or <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_Compare_\" data-linktype=\"relative-path\">Compare</a> method.  </p>\n<h3 class=\"accented\" id=\"performance-considerations\">Performance considerations</h3>\n<p> When performing a string comparison, the <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_Compare_\" data-linktype=\"relative-path\">Compare</a> and <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_Compare_\" data-linktype=\"relative-path\">Compare</a> methods yield the same results, but they target different scenarios.  </p>\n<p> At a high level, the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_Compare_\" data-linktype=\"relative-path\">Compare</a> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison. However, the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_Compare_\" data-linktype=\"relative-path\">Compare</a> method actually doesn&#39;t generate an entire sort key to perform the comparison. Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string. The method then compares the key data for the corresponding text elements. The operation terminates as soon as the ultimate result of the comparison is determined. Sort key information is computed, but no SortKey object is created. This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.  </p>\n<p> The <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_Compare_\" data-linktype=\"relative-path\">Compare</a> method requires generation of a SortKey object for each string before performing the comparison. This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the SortKey objects. However, it becomes economical if the same sort keys are compared many times.  </p>\n<p> For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string. The table contains thousands of rows, and comparing the search string to the index in each row will take a long time. Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance. When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.  </p>\n<h3 class=\"accented\" id=\"security-considerations\">Security considerations</h3>\n<p> The <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_GetSortKey_System_String_System_Globalization_CompareOptions_\" data-linktype=\"relative-path\">System.Globalization.CompareInfo.GetSortKey(String, CompareOptions)</a> method returns a SortKey object with the value based on a specified string and <a class=\"xref\" href=\"system.globalization.compareoptions\" data-linktype=\"relative-path\">CompareOptions</a> value, and the culture associated with the underlying <a class=\"xref\" href=\"system.globalization.compareinfo\" data-linktype=\"relative-path\">CompareInfo</a> object. If a security decision depends on a string comparison or case change, you should use the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_GetSortKey_System_String_System_Globalization_CompareOptions_\" data-linktype=\"relative-path\">System.Globalization.CompareInfo.GetSortKey(String, CompareOptions)</a> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.  </p>\n<p> Use the following steps to obtain a sort key:  </p>\n<ol>\n<li><p>Retrieve the invariant culture from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_InvariantCulture\" data-linktype=\"relative-path\">System.Globalization.CultureInfo.InvariantCulture</a> property.  </p>\n</li>\n<li><p>Retrieve a <a class=\"xref\" href=\"system.globalization.compareinfo\" data-linktype=\"relative-path\">CompareInfo</a> object for the invariant culture from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CompareInfo_\" data-linktype=\"relative-path\">CompareInfo</a> property.  </p>\n</li>\n<li><p>Call the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_GetSortKey_System_String_System_Globalization_CompareOptions_\" data-linktype=\"relative-path\">System.Globalization.CompareInfo.GetSortKey(String, CompareOptions)</a> method.  </p>\n</li>\n</ol>\n<p> Working with the value of a SortKey object is equivalent to calling the Windows <code>LCMapString</code> method with the LCMAP_SORTKEY value specified. However, for the SortKey object, the sort keys for English characters precede the sort keys for Korean characters.  </p>\n<p> SortKey objects can be serialized, but only so that they can cross <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> objects. If an application serializes a SortKey object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.  </p>\n<p> For more information about sort keys, see Unicode Technical Standard #10, &quot;Unicode Collation Algorithm&quot; on the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Consortium website</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortKey_KeyData_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortKey_KeyData\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyData</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the byte array representing the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual byte[] KeyData { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A byte array representing the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about the use of the data returned by the KeyData property in comparing strings, see the <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> class topic.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortKey_OriginalString_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortKey_OriginalString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OriginalString</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the original string used to create the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string OriginalString { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The original string used to create the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortKey_Compare_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortKey_Compare_System_Globalization_SortKey_System_Globalization_SortKey_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Compare(SortKey, SortKey)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares two sort keys.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sortkey1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first sort key to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sortkey2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second sort key to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A signed integer that indicates the relationship between <code>sortkey1</code> and <code>sortkey2</code>.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Condition<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td><code>sortkey1</code> is less than <code>sortkey2</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td><code>sortkey1</code> is equal to <code>sortkey2</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td><code>sortkey1</code> is greater than <code>sortkey2</code>.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>sortkey1</code> or <code>sortkey2</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Compare method compares the <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_KeyData_\" data-linktype=\"relative-path\">KeyData</a> properties of the <code>sortkey1</code> and <code>sortkey2</code> parameters. The method yields the same results as the <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_Compare_\" data-linktype=\"relative-path\">Compare</a> method.  </p>\n<p> For more information about the Compare method and the comparison of sort keys, see the <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> class topic.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortKey_Equals_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortKey_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the specified object is equal to the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare with the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>value</code> parameter is equal to the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>value</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Two <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> objects are considered equal if their <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_KeyData_\" data-linktype=\"relative-path\">KeyData</a> properties are equal.  </p>\n<p> This method overrides <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortKey_GetHashCode_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortKey_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Serves as a hash function for the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object that is suitable for hashing algorithms and data structures such as a hash table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A hash code for the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method generates the same hash code for two objects that are equal according to the <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_Equals_\" data-linktype=\"relative-path\">Equals</a> method.  </p>\n<p> This method overrides <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Globalization_SortKey_ToString_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_SortKey_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a string that represents the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A string that represents the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The return value is the concatenation of the string &quot;SortKey - &quot;, the culture identifier and compare options of the current <a class=\"xref\" href=\"system.globalization.sortkey\" data-linktype=\"relative-path\">SortKey</a> object, and the value of the <a class=\"xref\" href=\"system.globalization.sortkey#System_Globalization_SortKey_OriginalString_\" data-linktype=\"relative-path\">OriginalString</a> property.  </p>\n<p> This method overrides <a class=\"xref\" href=\"system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.SortKey.yml\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortKey\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortKey.Compare\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortKey.Equals\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortKey.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortKey.KeyData\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortKey.OriginalString\">\r\n<meta name=\"APIName\" content=\"System.Globalization.SortKey.ToString\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"72a7b7d2-f0a9-11f5-c0c7-a5a9279b6456\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the result of mapping a string to its sort key.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.globalization/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Globalization.SortKey\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.SortKey.yml","open_to_public_contributors":false,"api_name":["System.Globalization.SortKey","System.Globalization.SortKey.Compare","System.Globalization.SortKey.Equals","System.Globalization.SortKey.GetHashCode","System.Globalization.SortKey.KeyData","System.Globalization.SortKey.OriginalString","System.Globalization.SortKey.ToString"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Globalization.SortKey","System::Globalization::SortKey","System.Globalization.SortKey.Compare","System::Globalization::SortKey::Compare","System.Globalization.SortKey.Equals","System::Globalization::SortKey::Equals","System.Globalization.SortKey.GetHashCode","System::Globalization::SortKey::GetHashCode","System.Globalization.SortKey.KeyData","System::Globalization::SortKey::KeyData","System.Globalization.SortKey.OriginalString","System::Globalization::SortKey::OriginalString","System.Globalization.SortKey.ToString","System::Globalization::SortKey::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"72a7b7d2-f0a9-11f5-c0c7-a5a9279b6456","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Globalization/SortKey.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SortKey class | Microsoft Docs","_op_ogTitle":"SortKey class","description":"Represents the result of mapping a string to its sort key.\n","toc_asset_id":"api/_splitted/System.Globalization/toc.json","toc_rel":"_splitted/System.Globalization/toc.json","source_url":"","ms.assetid":"System.Globalization.SortKey","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.globalization.sortkey","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.globalization.sortkey","fileRelativePath":"api/System.Globalization.SortKey.html"},"themesRelativePathToOutputRoot":"_themes/"}