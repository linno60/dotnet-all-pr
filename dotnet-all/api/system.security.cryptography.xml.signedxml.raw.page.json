{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SignedXml</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a wrapper on a core XML signature object to facilitate creating XML signatures.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class SignedXml</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">SignedXml</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows how to sign and verify an entire XML document using an enveloped signature.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1\">//\n// This example signs an XML file using an\n// envelope signature. It then verifies the \n// signed XML.\n//\nusing System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.Security.Cryptography.Xml;\nusing System.Text;\nusing System.Xml;\n\npublic class SignVerifyEnvelope\n{\n\n    public static void Main(String[] args)\n    {\n        try\n        {\n           // Generate a signing key.\n           RSACryptoServiceProvider Key = new RSACryptoServiceProvider();\n\n           // Create an XML file to sign.\n           CreateSomeXml(&quot;Example.xml&quot;);\n           Console.WriteLine(&quot;New XML file created.&quot;); \n\n           // Sign the XML that was just created and save it in a \n           // new file.\n           SignXmlFile(&quot;Example.xml&quot;, &quot;signedExample.xml&quot;, Key);\n           Console.WriteLine(&quot;XML file signed.&quot;); \n\n           // Verify the signature of the signed XML.\n           Console.WriteLine(&quot;Verifying signature...&quot;);\n           bool result = VerifyXmlFile(&quot;SignedExample.xml&quot;, Key);\n\n           // Display the results of the signature verification to \n           // the console.\n           if(result)\n           {\n               Console.WriteLine(&quot;The XML signature is valid.&quot;);\n           }\n           else\n           {\n            Console.WriteLine(&quot;The XML signature is not valid.&quot;);\n           }\n        }\n        catch(CryptographicException e)\n        {\n            Console.WriteLine(e.Message);\n        }\n    }\n\n\n    // Sign an XML file and save the signature in a new file. This method does not  \n    // save the public key within the XML file.  This file cannot be verified unless  \n    // the verifying code has the key with which it was signed.\n    public static void SignXmlFile(string FileName, string SignedFileName, RSA Key)\n    {\n        // Create a new XML document.\n        XmlDocument doc = new XmlDocument();\n\n        // Load the passed XML file using its name.\n        doc.Load(new XmlTextReader(FileName));\n\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml(doc);\n\n        // Add the key to the SignedXml document. \n        signedXml.SigningKey = Key;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n        reference.Uri = &quot;&quot;;\n\n        // Add an enveloped transformation to the reference.\n        XmlDsigEnvelopedSignatureTransform env = new XmlDsigEnvelopedSignatureTransform();\n        reference.AddTransform(env);\n\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save\n        // it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Append the element to the XML document.\n        doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, true));\n\t\t\n        if (doc.FirstChild is XmlDeclaration)  \n        {\n            doc.RemoveChild(doc.FirstChild);\n        }\n\n        // Save the signed XML document to a file specified\n        // using the passed string.\n        XmlTextWriter xmltw = new XmlTextWriter(SignedFileName, new UTF8Encoding(false));\n        doc.WriteTo(xmltw);\n        xmltw.Close();\n    }\n\n    // Verify the signature of an XML file against an asymetric \n    // algorithm and return the result.\n    public static Boolean VerifyXmlFile(String Name, RSA Key)\n    {\n        // Create a new XML document.\n        XmlDocument xmlDocument = new XmlDocument();\n\n        // Load the passed XML file into the document. \n        xmlDocument.Load(Name);\n\n        // Create a new SignedXml object and pass it\n        // the XML document class.\n        SignedXml signedXml = new SignedXml(xmlDocument);\n\n        // Find the &quot;Signature&quot; node and create a new\n        // XmlNodeList object.\n        XmlNodeList nodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;);\n\n        // Load the signature node.\n        signedXml.LoadXml((XmlElement)nodeList[0]);\n\n        // Check the signature and return the result.\n        return signedXml.CheckSignature(Key);\n    }\n\n\n    // Create example data to sign.\n    public static void CreateSomeXml(string FileName)\n    {\n        // Create a new XmlDocument object.\n        XmlDocument document = new XmlDocument();\n\n        // Create a new XmlNode object.\n        XmlNode  node = document.CreateNode(XmlNodeType.Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot;);\n\t\t\n        // Add some text to the node.\n        node.InnerText = &quot;Example text to be signed.&quot;;\n\n        // Append the node to the document.\n        document.AppendChild(node);\n\n        // Save the XML document to the file name specified.\n        XmlTextWriter xmltw = new XmlTextWriter(FileName, new UTF8Encoding(false));\n        document.WriteTo(xmltw);\n        xmltw.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1\">//\n// This example signs an XML file using an\n// envelope signature. It then verifies the \n// signed XML.\n//\n#using &lt;System.Security.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::Security::Cryptography::Xml;\nusing namespace System::Text;\nusing namespace System::Xml;\n\n// Sign an XML file and save the signature in a new file. This method does not  \n// save the public key within the XML file.  This file cannot be verified unless  \n// the verifying code has the key with which it was signed.\nvoid SignXmlFile( String^ FileName, String^ SignedFileName, RSA^ Key )\n{\n   \n   // Create a new XML document.\n   XmlDocument^ doc = gcnew XmlDocument;\n   \n   // Load the passed XML file using its name.\n   doc-&gt;Load( gcnew XmlTextReader( FileName ) );\n   \n   // Create a SignedXml object.\n   SignedXml^ signedXml = gcnew SignedXml( doc );\n   \n   // Add the key to the SignedXml document. \n   signedXml-&gt;SigningKey = Key;\n   \n   // Create a reference to be signed.\n   Reference^ reference = gcnew Reference;\n   reference-&gt;Uri = &quot;&quot;;\n   \n   // Add an enveloped transformation to the reference.\n   XmlDsigEnvelopedSignatureTransform^ env = gcnew XmlDsigEnvelopedSignatureTransform;\n   reference-&gt;AddTransform( env );\n   \n   // Add the reference to the SignedXml object.\n   signedXml-&gt;AddReference( reference );\n   \n   // Compute the signature.\n   signedXml-&gt;ComputeSignature();\n   \n   // Get the XML representation of the signature and save\n   // it to an XmlElement object.\n   XmlElement^ xmlDigitalSignature = signedXml-&gt;GetXml();\n   \n   // Append the element to the XML document.\n   doc-&gt;DocumentElement-&gt;AppendChild( doc-&gt;ImportNode( xmlDigitalSignature, true ) );\n   if ( (doc-&gt;FirstChild)-&gt;GetType() == XmlDeclaration::typeid )\n   {\n      doc-&gt;RemoveChild( doc-&gt;FirstChild );\n   }\n\n   \n   // Save the signed XML document to a file specified\n   // using the passed string.\n   XmlTextWriter^ xmltw = gcnew XmlTextWriter( SignedFileName,gcnew UTF8Encoding( false ) );\n   doc-&gt;WriteTo( xmltw );\n   xmltw-&gt;Close();\n}\n\n\n// Verify the signature of an XML file against an asymmetric \n// algorithm and return the result.\nBoolean VerifyXmlFile( String^ Name, RSA^ Key )\n{\n   \n   // Create a new XML document.\n   XmlDocument^ xmlDocument = gcnew XmlDocument;\n   \n   // Load the passed XML file into the document. \n   xmlDocument-&gt;Load( Name );\n   \n   // Create a new SignedXml object and pass it\n   // the XML document class.\n   SignedXml^ signedXml = gcnew SignedXml( xmlDocument );\n   \n   // Find the &quot;Signature&quot; node and create a new\n   // XmlNodeList object.\n   XmlNodeList^ nodeList = xmlDocument-&gt;GetElementsByTagName( &quot;Signature&quot; );\n   \n   // Load the signature node.\n   signedXml-&gt;LoadXml( safe_cast&lt;XmlElement^&gt;(nodeList-&gt;Item( 0 )) );\n   \n   // Check the signature and return the result.\n   return signedXml-&gt;CheckSignature( Key );\n}\n\n\n// Create example data to sign.\nvoid CreateSomeXml( String^ FileName )\n{\n   \n   // Create a new XmlDocument Object*.\n   XmlDocument^ document = gcnew XmlDocument;\n   \n   // Create a new XmlNode object.\n   XmlNode^ node = document-&gt;CreateNode( XmlNodeType::Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot; );\n   \n   // Add some text to the node.\n   node-&gt;InnerText = &quot;Example text to be signed.&quot;;\n   \n   // Append the node to the document.\n   document-&gt;AppendChild( node );\n   \n   // Save the XML document to the file name specified.\n   XmlTextWriter^ xmltw = gcnew XmlTextWriter( FileName,gcnew UTF8Encoding( false ) );\n   document-&gt;WriteTo( xmltw );\n   xmltw-&gt;Close();\n}\n\nint main()\n{\n   try\n   {\n      \n      // Generate a signing key.\n      RSACryptoServiceProvider^ Key = gcnew RSACryptoServiceProvider;\n      \n      // Create an XML file to sign.\n      CreateSomeXml( &quot;Example.xml&quot; );\n      Console::WriteLine( &quot;New XML file created.&quot; );\n      \n      // Sign the XML that was just created and save it in a \n      // new file.\n      SignXmlFile( &quot;Example.xml&quot;, &quot;signedExample.xml&quot;, Key );\n      Console::WriteLine( &quot;XML file signed.&quot; );\n      \n      // Verify the signature of the signed XML.\n      Console::WriteLine( &quot;Verifying signature...&quot; );\n      bool result = VerifyXmlFile( &quot;SignedExample.xml&quot;, Key );\n      \n      // Display the results of the signature verification to \n      // the console.\n      if ( result )\n      {\n         Console::WriteLine( &quot;The XML signature is valid.&quot; );\n      }\n      else\n      {\n         Console::WriteLine( &quot;The XML signature is not valid.&quot; );\n      }\n   }\n   catch ( CryptographicException^ e ) \n   {\n      Console::WriteLine( e-&gt;Message );\n   }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1\">&#39;\n&#39; This example signs an XML file using an\n&#39; envelope signature. It then verifies the \n&#39; signed XML.\n&#39;\nImports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.Security.Cryptography.Xml\nImports System.Text\nImports System.Xml\n\n\n\nPublic Class SignVerifyEnvelope\n   \n   Overloads Public Shared Sub Main(args() As [String])\n      Try\n         &#39; Generate a signing key.\n         Dim Key As New RSACryptoServiceProvider()\n         \n         &#39; Create an XML file to sign.\n         CreateSomeXml(&quot;Example.xml&quot;)\n         Console.WriteLine(&quot;New XML file created.&quot;)\n         \n         &#39; Sign the XML that was just created and save it in a \n         &#39; new file.\n         SignXmlFile(&quot;Example.xml&quot;, &quot;signedExample.xml&quot;, Key)\n         Console.WriteLine(&quot;XML file signed.&quot;)\n         \n         &#39; Verify the signature of the signed XML.\n         Console.WriteLine(&quot;Verifying signature...&quot;)\n         Dim result As Boolean = VerifyXmlFile(&quot;SignedExample.xml&quot;, Key)\n         \n         &#39; Display the results of the signature verification to \n         &#39; the console.\n         If result Then\n            Console.WriteLine(&quot;The XML signature is valid.&quot;)\n         Else\n            Console.WriteLine(&quot;The XML signature is not valid.&quot;)\n         End If\n      Catch e As CryptographicException\n         Console.WriteLine(e.Message)\n      End Try\n   End Sub \n   \n   \n   \n   &#39; Sign an XML file and save the signature in a new file. This method does not  \n   &#39; save the public key within the XML file.  This file cannot be verified unless  \n   &#39; the verifying code has the key with which it was signed.\n   Public Shared Sub SignXmlFile(FileName As String, SignedFileName As String, Key As RSA)\n      &#39; Create a new XML document.\n      Dim doc As New XmlDocument()\n      \n      &#39; Load the passed XML file using its name.\n      doc.Load(New XmlTextReader(FileName))\n      \n      &#39; Create a SignedXml object.\n      Dim signedXml As New SignedXml(doc)\n      \n      &#39; Add the key to the SignedXml document. \n      signedXml.SigningKey = Key\n      \n      &#39; Create a reference to be signed.\n      Dim reference As New Reference()\n      reference.Uri = &quot;&quot;\n      \n      &#39; Add an enveloped transformation to the reference.\n      Dim env As New XmlDsigEnvelopedSignatureTransform()\n      reference.AddTransform(env)\n      \n      &#39; Add the reference to the SignedXml object.\n      signedXml.AddReference(reference)\n      \n      &#39; Compute the signature.\n      signedXml.ComputeSignature()\n      \n      &#39; Get the XML representation of the signature and save\n      &#39; it to an XmlElement object.\n      Dim xmlDigitalSignature As XmlElement = signedXml.GetXml()\n      \n      &#39; Append the element to the XML document.\n      doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, True))\n      \n      If TypeOf doc.FirstChild Is XmlDeclaration Then\n         doc.RemoveChild(doc.FirstChild)\n      End If\n      \n      &#39; Save the signed XML document to a file specified\n      &#39; using the passed string.\n      Dim xmltw As New XmlTextWriter(SignedFileName, New UTF8Encoding(False))\n      doc.WriteTo(xmltw)\n      xmltw.Close()\n   End Sub\n   \n   \n   &#39; Verify the signature of an XML file against an asymetric \n   &#39; algorithm and return the result.\n   Public Shared Function VerifyXmlFile(Name As [String], Key As RSA) As [Boolean]\n      &#39; Create a new XML document.\n      Dim xmlDocument As New XmlDocument()\n      \n      &#39; Load the passed XML file into the document. \n      xmlDocument.Load(Name)\n      \n      &#39; Create a new SignedXml object and pass it\n      &#39; the XML document class.\n      Dim signedXml As New SignedXml(xmlDocument)\n      \n      &#39; Find the &quot;Signature&quot; node and create a new\n      &#39; XmlNodeList object.\n      Dim nodeList As XmlNodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;)\n      \n      &#39; Load the signature node.\n      signedXml.LoadXml(CType(nodeList(0), XmlElement))\n      \n      &#39; Check the signature and return the result.\n      Return signedXml.CheckSignature(Key)\n   End Function \n   \n   \n   \n   &#39; Create example data to sign.\n   Public Shared Sub CreateSomeXml(FileName As String)\n      &#39; Create a new XmlDocument object.\n      Dim document As New XmlDocument()\n      \n      &#39; Create a new XmlNode object.\n      Dim node As XmlNode = document.CreateNode(XmlNodeType.Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot;)\n      \n      &#39; Add some text to the node.\n      node.InnerText = &quot;Example text to be signed.&quot;\n      \n      &#39; Append the node to the document.\n      document.AppendChild(node)\n      \n      &#39; Save the XML document to the file name specified.\n      Dim xmltw As New XmlTextWriter(FileName, New UTF8Encoding(False))\n      document.WriteTo(xmltw)\n      xmltw.Close()\n   End Sub \nEnd Class \n</code></pre><p> The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.XML.SignVerifyEnvelope - Specify Element#1\">//\n// This example signs an XML file using an\n// envelope signature. It then verifies the \n// signed XML.\n//\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Security.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::Xml;\nusing namespace System::Text;\nusing namespace System::Xml;\n\n// Sign an XML file and save the signature in a new file.\nstatic void SignXmlFile( String^ FileName, String^ SignedFileName, RSA^ Key, array&lt;String^&gt;^ElementsToSign )\n{\n   \n   // Check the arguments.  \n   if ( FileName == nullptr )\n      throw gcnew ArgumentNullException( L&quot;FileName&quot; );\n\n   if ( SignedFileName == nullptr )\n      throw gcnew ArgumentNullException( L&quot;SignedFileName&quot; );\n\n   if ( Key == nullptr )\n      throw gcnew ArgumentNullException( L&quot;Key&quot; );\n\n   if ( ElementsToSign == nullptr )\n      throw gcnew ArgumentNullException( L&quot;ElementsToSign&quot; );\n\n   \n   // Create a new XML document.\n   XmlDocument^ doc = gcnew XmlDocument;\n   \n   // Format the document to ignore white spaces.\n   doc-&gt;PreserveWhitespace = false;\n   \n   // Load the passed XML file using it&#39;s name.\n   doc-&gt;Load( gcnew XmlTextReader( FileName ) );\n   \n   // Create a SignedXml object.\n   SignedXml^ signedXml = gcnew SignedXml( doc );\n   \n   // Add the key to the SignedXml document. \n   signedXml-&gt;SigningKey = Key;\n   \n   // Loop through each passed element to sign \n   // and create a reference.\n   System::Collections::IEnumerator^ myEnum = ElementsToSign-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      String^ s = safe_cast&lt;String^&gt;(myEnum-&gt;Current);\n      \n      // Create a reference to be signed.\n      Reference^ reference = gcnew Reference;\n      reference-&gt;Uri = s;\n      \n      // Add an enveloped transformation to the reference.\n      XmlDsigEnvelopedSignatureTransform^ env = gcnew XmlDsigEnvelopedSignatureTransform;\n      reference-&gt;AddTransform( env );\n      \n      // Add the reference to the SignedXml object.\n      signedXml-&gt;AddReference( reference );\n   }\n\n   \n   // Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n   KeyInfo^ keyInfo = gcnew KeyInfo;\n   keyInfo-&gt;AddClause( gcnew RSAKeyValue( dynamic_cast&lt;RSA^&gt;(Key) ) );\n   signedXml-&gt;KeyInfo = keyInfo;\n   \n   // Compute the signature.\n   signedXml-&gt;ComputeSignature();\n   \n   // Get the XML representation of the signature and save\n   // it to an XmlElement object.\n   XmlElement^ xmlDigitalSignature = signedXml-&gt;GetXml();\n   \n   // Append the element to the XML document.\n   doc-&gt;DocumentElement-&gt;AppendChild( doc-&gt;ImportNode( xmlDigitalSignature, true ) );\n   if ( dynamic_cast&lt;XmlDeclaration^&gt;(doc-&gt;FirstChild) )\n   {\n      doc-&gt;RemoveChild( doc-&gt;FirstChild );\n   }\n\n   \n   // Save the signed XML document to a file specified\n   // using the passed string.\n   XmlTextWriter^ xmltw = gcnew XmlTextWriter( SignedFileName,gcnew UTF8Encoding( false ) );\n   doc-&gt;WriteTo( xmltw );\n   xmltw-&gt;Close();\n}\n\n\n// Verify the signature of an XML file and return the result.\nstatic Boolean VerifyXmlFile( String^ Name )\n{\n   \n   // Check the arguments.  \n   if ( Name == nullptr )\n      throw gcnew ArgumentNullException( L&quot;Name&quot; );\n\n   \n   // Create a new XML document.\n   XmlDocument^ xmlDocument = gcnew XmlDocument;\n   \n   // Format using white spaces.\n   xmlDocument-&gt;PreserveWhitespace = true;\n   \n   // Load the passed XML file into the document. \n   xmlDocument-&gt;Load( Name );\n   \n   // Create a new SignedXml object and pass it\n   // the XML document class.\n   SignedXml^ signedXml = gcnew SignedXml( xmlDocument );\n   \n   // Find the &quot;Signature&quot; node and create a new\n   // XmlNodeList object.\n   XmlNodeList^ nodeList = xmlDocument-&gt;GetElementsByTagName( L&quot;Signature&quot; );\n   \n   // Load the signature node.\n   signedXml-&gt;LoadXml( dynamic_cast&lt;XmlElement^&gt;(nodeList-&gt;Item( 0 )) );\n   \n   // Check the signature and return the result.\n   return signedXml-&gt;CheckSignature();\n}\n\nint main()\n{\n   \n   // Generate a signing key.\n   RSACryptoServiceProvider^ Key = gcnew RSACryptoServiceProvider;\n   try\n   {\n      \n      // Specify an element to sign. \n      array&lt;String^&gt;^elements = {L&quot;#tag1&quot;};\n      \n      // Sign an XML file and save the signature to a \n      // new file.\n      SignXmlFile( L&quot;Test.xml&quot;, L&quot;SignedExample.xml&quot;, Key, elements );\n      Console::WriteLine( L&quot;XML file signed.&quot; );\n      \n      // Verify the signature of the signed XML.\n      Console::WriteLine( L&quot;Verifying signature...&quot; );\n      bool result = VerifyXmlFile( L&quot;SignedExample.xml&quot; );\n      \n      // Display the results of the signature verification to \n      // the console.\n      if ( result )\n      {\n         Console::WriteLine( L&quot;The XML signature is valid.&quot; );\n      }\n      else\n      {\n         Console::WriteLine( L&quot;The XML signature is not valid.&quot; );\n      }\n   }\n   catch ( CryptographicException^ e ) \n   {\n      Console::WriteLine( e-&gt;Message );\n   }\n   finally\n   {\n      \n      // Clear resources associated with the \n      // RSACryptoServiceProvider.\n      Key-&gt;Clear();\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.XML.SignVerifyEnvelope - Specify Element#1\">//\n// This example signs an XML file using an\n// envelope signature. It then verifies the \n// signed XML.\n//\nusing System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\nusing System.Text;\nusing System.Xml;\n\npublic class SignVerifyEnvelope\n{\n\n    public static void Main(String[] args)\n    {\n        // Generate a signing key.\n       RSACryptoServiceProvider Key = new RSACryptoServiceProvider();\n\n       try\n       {\n           // Specify an element to sign. \n           string[] elements =  { &quot;#tag1&quot; };\n\n           // Sign an XML file and save the signature to a \n           // new file.\n           SignXmlFile(&quot;Test.xml&quot;, &quot;SignedExample.xml&quot;, Key, elements);\n           Console.WriteLine(&quot;XML file signed.&quot;);\n\n           // Verify the signature of the signed XML.\n           Console.WriteLine(&quot;Verifying signature...&quot;);\n\n           bool result = VerifyXmlFile(&quot;SignedExample.xml&quot;);\n\n           // Display the results of the signature verification to \n           // the console.\n           if (result)\n           {\n               Console.WriteLine(&quot;The XML signature is valid.&quot;);\n           }\n           else\n           {\n               Console.WriteLine(&quot;The XML signature is not valid.&quot;);\n           }\n       }\n       catch (CryptographicException e)\n       {\n           Console.WriteLine(e.Message);\n       }\n       finally\n       {\n           // Clear resources associated with the \n           // RSACryptoServiceProvider.\n           Key.Clear();\n       }\n   }\n\n    // Sign an XML file and save the signature in a new file.\n    public static void SignXmlFile(string FileName, string SignedFileName, RSA Key, string[] ElementsToSign)\n    {\n        // Check the arguments.  \n        if (FileName == null)\n            throw new ArgumentNullException(&quot;FileName&quot;);\n        if (SignedFileName == null)\n            throw new ArgumentNullException(&quot;SignedFileName&quot;);\n        if (Key == null)\n            throw new ArgumentNullException(&quot;Key&quot;);\n        if (ElementsToSign == null)\n            throw new ArgumentNullException(&quot;ElementsToSign&quot;);\n\n        // Create a new XML document.\n        XmlDocument doc = new XmlDocument();\n\n        // Format the document to ignore white spaces.\n        doc.PreserveWhitespace = false;\n\n        // Load the passed XML file using it&#39;s name.\n        doc.Load(new XmlTextReader(FileName));\n\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml(doc);\n\n        // Add the key to the SignedXml document. \n        signedXml.SigningKey = Key;\n\n        // Loop through each passed element to sign \n        // and create a reference.\n        foreach (string s in ElementsToSign)\n        {\n            // Create a reference to be signed.\n            Reference reference = new Reference();\n            reference.Uri = s;\n\n            // Add an enveloped transformation to the reference.\n            XmlDsigEnvelopedSignatureTransform env = new XmlDsigEnvelopedSignatureTransform();\n            reference.AddTransform(env);\n\n            // Add the reference to the SignedXml object.\n            signedXml.AddReference(reference);\n\n        }\n\n\n\n        // Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n        KeyInfo keyInfo = new KeyInfo();\n        keyInfo.AddClause(new RSAKeyValue((RSA)Key));\n        signedXml.KeyInfo = keyInfo;\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save\n        // it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Append the element to the XML document.\n        doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, true));\n\n\n        if (doc.FirstChild is XmlDeclaration)\n        {\n            doc.RemoveChild(doc.FirstChild);\n        }\n\n        // Save the signed XML document to a file specified\n        // using the passed string.\n        XmlTextWriter xmltw = new XmlTextWriter(SignedFileName, new UTF8Encoding(false));\n        doc.WriteTo(xmltw);\n        xmltw.Close();\n    }\n    // Verify the signature of an XML file and return the result.\n    public static Boolean VerifyXmlFile(String Name)\n    {\n        // Check the arguments.  \n        if (Name == null)\n            throw new ArgumentNullException(&quot;Name&quot;);\n\n        // Create a new XML document.\n        XmlDocument xmlDocument = new XmlDocument();\n\n        // Format using white spaces.\n        xmlDocument.PreserveWhitespace = true;\n\n        // Load the passed XML file into the document. \n        xmlDocument.Load(Name);\n\n        // Create a new SignedXml object and pass it\n        // the XML document class.\n        SignedXml signedXml = new SignedXml(xmlDocument);\n\n        // Find the &quot;Signature&quot; node and create a new\n        // XmlNodeList object.\n        XmlNodeList nodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;);\n\n        // Load the signature node.\n        signedXml.LoadXml((XmlElement)nodeList[0]);\n\n        // Check the signature and return the result.\n        return signedXml.CheckSignature();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.XML.SignVerifyEnvelope - Specify Element#1\">&#39; This example signs an XML file using an\n&#39; envelope signature. It then verifies the \n&#39; signed XML.\n&#39;\nImports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\nImports System.Text\nImports System.Xml\n\n\n\nModule SignVerifyEnvelope\n\n\n\n    Sub Main(ByVal args() As String)\n        &#39; Generate a signing key.\n        Dim Key As New RSACryptoServiceProvider()\n\n        Try\n            &#39; Specify an element to sign. \n            Dim elements As String() = New String() {&quot;#tag1&quot;}\n\n            &#39; Sign an XML file and save the signature to a \n            &#39; new file.\n            SignXmlFile(&quot;Test.xml&quot;, &quot;SignedExample.xml&quot;, Key, elements)\n            Console.WriteLine(&quot;XML file signed.&quot;)\n\n            &#39; Verify the signature of the signed XML.\n            Console.WriteLine(&quot;Verifying signature...&quot;)\n\n            Dim result As Boolean = VerifyXmlFile(&quot;SignedExample.xml&quot;)\n\n            &#39; Display the results of the signature verification to \\\n            &#39; the console.\n            If result Then\n                Console.WriteLine(&quot;The XML signature is valid.&quot;)\n            Else\n                Console.WriteLine(&quot;The XML signature is not valid.&quot;)\n            End If\n        Catch e As CryptographicException\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear resources associated with the \n            &#39; RSACryptoServiceProvider.\n            Key.Clear()\n        End Try\n\n    End Sub\n\n\n    &#39; Sign an XML file and save the signature in a new file.\n    Sub SignXmlFile(ByVal FileName As String, ByVal SignedFileName As String, ByVal Key As RSA, ByVal ElementsToSign() As String)\n        &#39; Check the arguments.  \n        If FileName Is Nothing Then\n            Throw New ArgumentNullException(&quot;FileName&quot;)\n        End If\n        If SignedFileName Is Nothing Then\n            Throw New ArgumentNullException(&quot;SignedFileName&quot;)\n        End If\n        If Key Is Nothing Then\n            Throw New ArgumentNullException(&quot;Key&quot;)\n        End If\n        If ElementsToSign Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementsToSign&quot;)\n        End If\n        &#39; Create a new XML document.\n        Dim doc As New XmlDocument()\n\n        &#39; Format the document to ignore white spaces.\n        doc.PreserveWhitespace = False\n\n        &#39; Load the passed XML file using it&#39;s name.\n        doc.Load(New XmlTextReader(FileName))\n\n        &#39; Create a SignedXml object.\n        Dim signedXml As New SignedXml(doc)\n\n        &#39; Add the key to the SignedXml document. \n        signedXml.SigningKey = Key\n\n        &#39; Loop through each passed element to sign \n        &#39; and create a reference.\n        Dim s As String\n        For Each s In ElementsToSign\n            &#39; Create a reference to be signed.\n            Dim reference As New Reference()\n            reference.Uri = s\n\n            &#39; Add an enveloped transformation to the reference.\n            Dim env As New XmlDsigEnvelopedSignatureTransform()\n            reference.AddTransform(env)\n\n            &#39; Add the reference to the SignedXml object.\n            signedXml.AddReference(reference)\n        Next s\n\n        &#39; Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n        Dim keyInfo As New KeyInfo()\n        keyInfo.AddClause(New RSAKeyValue(CType(Key, RSA)))\n        signedXml.KeyInfo = keyInfo\n\n        &#39; Compute the signature.\n        signedXml.ComputeSignature()\n\n        &#39; Get the XML representation of the signature and save\n        &#39; it to an XmlElement object.\n        Dim xmlDigitalSignature As XmlElement = signedXml.GetXml()\n\n        &#39; Append the element to the XML document.\n        doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, True))\n\n\n        If TypeOf doc.FirstChild Is XmlDeclaration Then\n            doc.RemoveChild(doc.FirstChild)\n        End If\n\n        &#39; Save the signed XML document to a file specified\n        &#39; using the passed string.\n        Dim xmltw As New XmlTextWriter(SignedFileName, New UTF8Encoding(False))\n        doc.WriteTo(xmltw)\n        xmltw.Close()\n\n    End Sub\n\n    &#39; Verify the signature of an XML file and return the result.\n    Function VerifyXmlFile(ByVal Name As String) As [Boolean]\n        &#39; Check the arguments.  \n        If Name Is Nothing Then\n            Throw New ArgumentNullException(&quot;Name&quot;)\n        End If\n        &#39; Create a new XML document.\n        Dim xmlDocument As New XmlDocument()\n\n        &#39; Format using white spaces.\n        xmlDocument.PreserveWhitespace = True\n\n        &#39; Load the passed XML file into the document. \n        xmlDocument.Load(Name)\n\n        &#39; Create a new SignedXml object and pass it\n        &#39; the XML document class.\n        Dim signedXml As New SignedXml(xmlDocument)\n\n        &#39; Find the &quot;Signature&quot; node and create a new\n        &#39; XmlNodeList object.\n        Dim nodeList As XmlNodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;)\n\n        &#39; Load the signature node.\n        signedXml.LoadXml(CType(nodeList(0), XmlElement))\n\n        &#39; Check the signature and return the result.\n        Return signedXml.CheckSignature()\n\n    End Function\nEnd Module\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The SignedXml class is the .NET Framework implementation of the World Wide Web Consortium (W3C) <a href=\"http://www.w3.org/TR/xmldsig-core/\" data-linktype=\"external\">XML Signature Syntax and Processing Specification</a>, also known as XMLDSIG (XML Digital Signature).  XMLDSIG is a standards-based, interoperable way to sign and verify all or part of an XML document or other data that is addressable from a Uniform Resource Identifier (URI).  </p>\n<p> Use the SignedXml class whenever you need to share signed XML data between applications or organizations in a standard way.  Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.  </p>\n<p> The SignedXml class allows you to create the following three kinds of XML digital signatures:  </p>\n<table>\n<thead>\n<tr>\n<th>Signature Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Enveloped signature</td>\n<td>The signature is contained within the XML element being signed.</td>\n</tr>\n<tr>\n<td>Enveloping signature</td>\n<td>The signed XML is contained within the &lt;<code>Signature</code>&gt; element.</td>\n</tr>\n<tr>\n<td>Internal detached signature</td>\n<td>The signature and signed XML are in the same document, but neither element contains the other.</td>\n</tr>\n</tbody>\n</table>\n<p> There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents. External detached signatures are not supported by the SignedXml class.  </p>\n<h3 class=\"accented\" id=\"the-structure-of-an--xml-signature\">The structure of an  XML Signature</h3>\n<p> XMLDSIG creates a &lt;<code>Signature</code>&gt; element, which contains a digital signature of an XML document or other data that is addressable from a URI.  The &lt;<code>Signature</code>&gt; element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing. The basic structure is as follows:  </p>\n<pre><code class=\"lang-xml\">\n&lt;Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;  \n    &lt;SignedInfo&gt;  \n      &lt;CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;/&gt;  \n      &lt;SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;/&gt;  \n      &lt;Reference URI=&quot;&quot;&gt;  \n        &lt;Transforms&gt;  \n          &lt;Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/&gt;  \n        &lt;/Transforms&gt;  \n        &lt;DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;/&gt;  \n        &lt;DigestValue&gt;Base64EncodedValue==&lt;/DigestValue&gt;  \n      &lt;/Reference&gt;  \n    &lt;/SignedInfo&gt;  \n    &lt;SignatureValue&gt;AnotherBase64EncodedValue===&lt;/SignatureValue&gt;  \n  &lt;/Signature&gt;  \n</code></pre><p> The main parts of this structure are:  </p>\n<p> The &lt;<code>CanonicalizationMethod</code>&gt; element<br> Specifies the rules for rewriting the <code>Signature</code> element from XML/text into bytes for signature validation. The default value in the .NET Framework is <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315</a>, which identifies a trustworthy algorithm. This element is represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo#System_Security_Cryptography_Xml_SignedInfo_CanonicalizationMethod_\" data-linktype=\"relative-path\">CanonicalizationMethod</a> property.  </p>\n<p> The &lt;<code>SignatureMethod</code>&gt; element<br> Specifies the algorithm used for signature generation and validation, which was applied to the &lt;<code>Signature</code>&gt; element to produce the value in &lt;<code>SignatureValue</code>&gt;. In the example above, the value <a href=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#rsa-sha1</a> identifies an RSA PKCS1 SHA-1 signature. This element is represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SignatureMethod_\" data-linktype=\"relative-path\">SignatureMethod</a> property.  </p>\n<p> The &lt;<code>SignatureValue</code>&gt; element<br> Specifies the cryptographic signature for the &lt;<code>Signature</code>&gt; element. If this signature does not verify, then some portion of the &lt;<code>Signature</code>&gt; block was tampered with, and the document is considered invalid. As long as the &lt;<code>CanonicalizationMethod</code>&gt; value is trustworthy, this value is highly resistant to tampering. This element is represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SignatureValue_\" data-linktype=\"relative-path\">SignatureValue</a> property.  </p>\n<p> The <code>URI</code> attribute of the &lt;<code>Reference</code>&gt; element<br> Specifies a data object using a URI reference. This attribute is represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.reference#System_Security_Cryptography_Xml_Reference_Uri_\" data-linktype=\"relative-path\">Uri</a> property.  </p>\n<ul>\n<li><p>Not specifying the <code>URI</code> attribute, that is, setting the  <a class=\"xref\" href=\"system.security.cryptography.xml.reference#System_Security_Cryptography_Xml_Reference_Uri_\" data-linktype=\"relative-path\">Uri</a> property to <code>null</code>, means that the receiving application is expected to know the identity of the object. In most cases, a <code>null</code> URI will result in an exception being thrown. Do not use a <code>null</code> URI, unless your application is interoperating with a protocol which requires it.  </p>\n</li>\n<li><p>Setting the <code>URI</code> attribute to an empty string indicates that the root element of the document is being signed, a form of enveloped signature.  </p>\n</li>\n<li><p>If the value of <code>URI</code> attribute starts with #, then the value must resolve to an element in the current document. This form can be used with any of the supported signature types (enveloped signature, enveloping signature or internal detached signature).  </p>\n</li>\n<li><p>Anything else is considered an external resource detached signature and is not supported by the SignedXml class.  </p>\n</li>\n</ul>\n<p> The &lt;<code>Transforms</code>&gt; element<br> Contains an ordered list of &lt;<code>Transform</code>&gt; elements that describe how the signer obtained the data object that was digested. A transform algorithm is similar to the canonicalization method, but instead of rewriting the &lt;<code>Signature</code>&gt; element, it rewrites the content identified by the <code>URI</code> attribute of the &lt;<code>Reference</code>&gt; element. The &lt;<code>Transforms</code>&gt; element is represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.transformchain\" data-linktype=\"relative-path\">TransformChain</a> class.  </p>\n<ul>\n<li><p>Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input. If the format of the current data differs from the transform input requirements, conversion rules are applied.  </p>\n</li>\n<li><p>Each transform algorithm is defined as producing either XML or bytes as the output.  </p>\n</li>\n<li><p>If the output of the last transform algorithm is not defined in bytes (or no transforms were specified), then the canonicalization method <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315</a> is used as an implicit transform (even if a different algorithm was specified in the &lt;<code>CanonicalizationMethod</code>&gt; element).  </p>\n</li>\n<li><p>A value of <a href=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#enveloped-signature</a> for the transform algorithm encodes a rule which is interpreted as remove the &lt;<code>Signature</code>&gt; element from the document. Otherwise, a verifier of an enveloped signature will digest the document, including the signature, but the signer would have digested the document before the signature was applied, leading to different answers.  </p>\n</li>\n</ul>\n<p> The &lt;<code>DigestMethod</code>&gt; element<br> Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the <code>URI</code> attribute of the &lt;<code>Reference</code>&gt; element. This is represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.reference#System_Security_Cryptography_Xml_Reference_DigestMethod_\" data-linktype=\"relative-path\">DigestMethod</a> property.  </p>\n<h3 class=\"accented\" id=\"choosing-a-canonicalization-method\">Choosing a canonicalization method</h3>\n<p> Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default canonicalization method in the .NET Framework which is the XML-C14N 1.0 algorithm, whose value is <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315</a>. The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.  </p>\n<p> There are versions of canonicalization algorithms which support preserving comments. Comment-preserving canonicalization methods are not recommended because they violate the &quot;sign what is seen&quot; principle. That is, the comments in a &lt;<code>Signature</code>&gt; element will not alter the processing logic for how the signature is performed, merely what the signature value is. When combined with a weak signature algorithm, allowing the comments to be included gives an attacker unnecessary freedom to force a hash collision, making a tampered document appear legitimate.  In the .NET Framework, only built-in canonicalizers are supported by default. To support additional or custom canonicalizers, see the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SafeCanonicalizationMethods_\" data-linktype=\"relative-path\">SafeCanonicalizationMethods</a> property. If the document uses a canonicalization method that is not in the collection represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SafeCanonicalizationMethods_\" data-linktype=\"relative-path\">SafeCanonicalizationMethods</a> property, then the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignature_\" data-linktype=\"relative-path\">CheckSignature</a> method will return <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An extremely defensive application can remove any values it does not expect signers to use from the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SafeCanonicalizationMethods_\" data-linktype=\"relative-path\">SafeCanonicalizationMethods</a> collection.  </p>\n</div>\n<h3 class=\"accented\" id=\"are-the-reference-values-safe-from-tampering\">Are the Reference values safe from tampering?</h3>\n<p> Yes, the &lt;<code>Reference</code>&gt; values are safe from tampering.  The .NET framework verifies the &lt;<code>SignatureValue</code>&gt; computation before processing any of the &lt;<code>Reference</code>&gt; values and their associated transforms, and will abort early to avoid potentially malicious processing instructions.  </p>\n<h3 class=\"accented\" id=\"choosing-the-elements-to-sign\">Choosing the elements to sign</h3>\n<p> We recommend that you use the value of &quot;&quot; for the <code>URI</code> attribute (or set the <a class=\"xref\" href=\"system.security.cryptography.xml.reference#System_Security_Cryptography_Xml_Reference_Uri_\" data-linktype=\"relative-path\">Uri</a> property to an empty string), if possible. This means the whole document is considered for the digest computation, which means the whole document is protected from tampering.  </p>\n<p> It is very common to see <code>URI</code> values in the form of anchors such as #foo, referring to an element whose ID attribute is &quot;foo&quot;. Unfortunately, it is easy for this to be tampered with because this includes only the content of the target element, not the context. Abusing this distinction is known as XML Signature Wrapping (XSW).  </p>\n<p> If your application considers comments to be semantic (which is not common when dealing with XML), then you should use &quot;#xpointer(/)&quot; instead of &quot;&quot;, and &quot;#xpointer(id(&#39;foo&#39;))&quot; instead of &quot;#foo&quot;. The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.  </p>\n<p> If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_GetIdElement_\" data-linktype=\"relative-path\">GetIdElement</a> method.  </p>\n<h3 class=\"accented\" id=\"security-considerations-about-the-keyinfo-element\">Security considerations about the KeyInfo element</h3>\n<p> The data in the optional &lt;<code>KeyInfo</code>&gt; element (that is, the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_KeyInfo_\" data-linktype=\"relative-path\">KeyInfo</a> property), which contains a key to validate the signature,  should not be trusted.  </p>\n<p> In particular, when the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_KeyInfo_\" data-linktype=\"relative-path\">KeyInfo</a> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignature_\" data-linktype=\"relative-path\">CheckSignature</a> method reporting that the signature is valid.  This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key. So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with. This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context. For example, if the document could be understood to be issued by a known user, you&#39;d check the key against a list of known keys used by that user.  </p>\n<p> You can also verify the key after processing the document by using the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignatureReturningKey_\" data-linktype=\"relative-path\">CheckSignatureReturningKey</a> method, instead of using the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignature_\" data-linktype=\"relative-path\">CheckSignature</a> method. But, for the optimal security, you should verify the key beforehand.  </p>\n<p> Alternately, consider trying the user&#39;s registered public keys, rather than reading what&#39;s in the &lt;<code>KeyInfo</code>&gt; element.  </p>\n<h3 class=\"accented\" id=\"security-considerations-about-the-x509data-element\">Security considerations about the X509Data element</h3>\n<p> The optional &lt;<code>X509Data</code>&gt; element is a child of the &lt;<code>KeyInfo</code>&gt; element and contains one or more X509 certificates or identifiers for X509 certificates. The data in the &lt;<code>X509Data</code>&gt; element should also not be inherently trusted.  </p>\n<p> When verifying a document with the embedded &lt;<code>X509Data</code>&gt; element, the .NET Framework verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature. Unlike calling the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignature_\" data-linktype=\"relative-path\">CheckSignature</a> method with the <code>verifySignatureOnly</code> parameter set to <code>false</code>, no revocation check is performed, no chain trust is checked, and no expiration is verified. Even if your application extracts the certificate itself and passes it to the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignature_\" data-linktype=\"relative-path\">CheckSignature</a> method with the <code>verifySignatureOnly</code> parameter set to <code>false</code>, that is still not sufficient validation to prevent document tampering. The certificate still needs to be verified as being appropriate for the document being signed.  </p>\n<p> Using an embedded signing certificate can provide useful key rotation strategies, whether in the &lt;<code>X509Data</code>&gt; section or in the document content. When using this approach an application should extract the certificate manually and perform validation similar to:  </p>\n<ul>\n<li><p>The certificate was issued directly or via a chain by a Certificate Authority (CA) whose public certificate is embedded in the application.  </p>\n<p> Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in SignedXml.  </p>\n</li>\n<li><p>The certificate is verified to have not been expired at the time of document signing (or “now” for near real-time document processing).  </p>\n</li>\n<li><p>For long-lived certificates issued by a CA which supports revocation, verify the certificate was not revoked.  </p>\n</li>\n<li><p>The certificate subject is verified as being appropriate to the current document.  </p>\n</li>\n</ul>\n<h3 class=\"accented\" id=\"choosing-the-transform-algorithm\">Choosing the transform algorithm</h3>\n<p> If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.  If you have an enveloped signature (such as when signing the whole document), then you need to use <a href=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#enveloped-signature</a> (represented by the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class). You can specify the implicit XML-C14N transform as well, but it&#39;s not necessary.  For an enveloping or detached signature, no transforms are required. The implicit XML-C14N transform takes care of everything.  </p>\n<p> With the security updated introduced by the <a href=\"https://technet.microsoft.com/en-us/library/security/ms16-035.aspx\" data-linktype=\"external\">Microsoft Security Bulletin MS16-035</a>, the .NET Framework has restricted what transforms can be used in document verification by default, with untrusted transforms causing <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignature_\" data-linktype=\"relative-path\">CheckSignature</a> to always return <code>false</code>. In particular, transforms which require additional input (specified as child elements in the XML) are no longer allowed due to their susceptibility of abuse by malicious users. The W3C advises avoiding the XPath and XSLT transforms, which are the two main transforms affected by these restrictions.  </p>\n<h3 class=\"accented\" id=\"the-problem-with-external-references\">The problem with external references</h3>\n<p> If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution). Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when SignedXml reads it. Since there’s no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.  </p>\n<p> Given the risks of external references, SignedXml will throw an exception when an external reference is encountered.  For more information about this issue, see <a href=\"https://support.microsoft.com/en-us/kb/3148821\" data-linktype=\"external\">KB article 3148821</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignedXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SignedXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml__ctor_System_Xml_XmlDocument_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignedXml(XmlDocument)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> class from the specified XML document.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SignedXml (System.Xml.XmlDocument document);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>document</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object to use to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>document</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>document</code> parameter contains a null <span class=\"xref\">stem.Xml.XmlDocument.DocumentElement*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml__ctor_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignedXml(XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> class from the specified <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public SignedXml (System.Xml.XmlElement elem);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>elem</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object to use to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>elem</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_m_signature\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">m_signature</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the <a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a> object of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Security.Cryptography.Xml.Signature m_signature;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_m_strSigningKeyName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">m_strSigningKeyName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the name of the installed key to be used for signing the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected string m_strSigningKeyName;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDecryptionTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDecryptionTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDecryptionTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDecryptionTransformUrl field is &quot;<a href=\"http://www.w3.org/2002/07/decrypt#XML\" data-linktype=\"external\">http://www.w3.org/2002/07/decrypt#XML</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2002/07/decrypt#XML\" data-linktype=\"external\">http://www.w3.org/2002/07/decrypt#XML</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigBase64TransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigBase64TransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the base 64 transformation. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigBase64TransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigBase64TransformUrl field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#base64\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#base64</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform\" data-linktype=\"relative-path\">XmlDsigBase64Transform</a> class implements the transform described by the XmlDsigBase64TransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#base64\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#base64</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigC14NTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigC14NTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigC14NTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigC14NTransformUrl field is &quot;<a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> class implements the transform described by the XmlDsigC14NTransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315</a>.  </p>\n<p> This field has the same value as the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigCanonicalizationUrl\" data-linktype=\"relative-path\">XmlDsigCanonicalizationUrl</a> field.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigC14NWithCommentsTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigC14NWithCommentsTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigC14NWithCommentsTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigC14NWithCommentsTransformUrl field is &quot;<a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments</a> &quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14nwithcommentstransform\" data-linktype=\"relative-path\">XmlDsigC14NWithCommentsTransform</a> class implements the transform described by the XmlDsigC14NWithCommentsTransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments</a>.  </p>\n<p> This field has the same value as the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigCanonicalizationWithCommentsUrl\" data-linktype=\"relative-path\">XmlDsigCanonicalizationWithCommentsUrl</a> field.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigCanonicalizationUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigCanonicalizationUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigCanonicalizationUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigCanonicalizationUrl field is &quot;<a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14ntransform\" data-linktype=\"relative-path\">XmlDsigC14NTransform</a> class implements the transform described by the XmlDsigCanonicalizationUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315</a>.  </p>\n<p> This field has the same value as the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigC14NTransformUrl\" data-linktype=\"relative-path\">XmlDsigC14NTransformUrl</a> field.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigCanonicalizationWithCommentsUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigCanonicalizationWithCommentsUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigCanonicalizationWithCommentsUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigCanonicalizationWithCommentsUrl field is &quot;<a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigc14nwithcommentstransform\" data-linktype=\"relative-path\">XmlDsigC14NWithCommentsTransform</a> class implements the transform described by the XmlDsigCanonicalizationWithCommentsUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments</a>.  </p>\n<p> This field has the same value as the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigC14NWithCommentsTransformUrl\" data-linktype=\"relative-path\">XmlDsigC14NWithCommentsTransformUrl</a> field.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigDSAUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigDSAUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard <a class=\"xref\" href=\"system.security.cryptography.dsa\" data-linktype=\"relative-path\">DSA</a> algorithm for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigDSAUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigDSAUrl field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#dsa-sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#dsa-sha1</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#dsa-sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#dsa-sha1</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigEnvelopedSignatureTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigEnvelopedSignatureTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for enveloped signature transformation. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigEnvelopedSignatureTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigEnvelopedSignatureTransformUrl field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#enveloped-signature</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class implements the transform described by the XmlDsigEnvelopedSignatureTransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#enveloped-signature</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigExcC14NTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigExcC14NTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigExcC14NTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigExcC14NTransformUrl field is &quot;<a href=\"http://www.w3.org/2001/10/xml-exc-c14n#\" data-linktype=\"external\">http://www.w3.org/2001/10/xml-exc-c14n#</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigexcc14ntransform\" data-linktype=\"relative-path\">XmlDsigExcC14NTransform</a> class implements the transform described by the XmlDsigExcC14NTransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/10/xml-exc-c14n#\" data-linktype=\"external\">http://www.w3.org/2001/10/xml-exc-c14n#</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigExcC14NWithCommentsTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigExcC14NWithCommentsTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigExcC14NWithCommentsTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigExcC14NWithCommentsTransformUrl field is &quot;<a href=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\" data-linktype=\"external\">http://www.w3.org/2001/10/xml-exc-c14n#WithComments</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigexcc14nwithcommentstransform\" data-linktype=\"relative-path\">XmlDsigExcC14NWithCommentsTransform</a> class implements the transform described by the XmlDsigExcC14NWithCommentsTransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\" data-linktype=\"external\">http://www.w3.org/2001/10/xml-exc-c14n#WithComments</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigHMACSHA1Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigHMACSHA1Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard <a class=\"xref\" href=\"system.security.cryptography.hmacsha1\" data-linktype=\"relative-path\">HMACSHA1</a> algorithm for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigHMACSHA1Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigHMACSHA1Url field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#hmac-sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#hmac-sha1</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#hmac-sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#hmac-sha1</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigMinimalCanonicalizationUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigMinimalCanonicalizationUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigMinimalCanonicalizationUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigMinimalCanonicalizationUrl field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#minimal\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#minimal</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#minimal\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#minimal</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigNamespaceUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigNamespaceUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigNamespaceUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigNamespaceUrl field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigRSASHA1Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigRSASHA1Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard <a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a> signature method for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigRSASHA1Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigRSASHA1Url field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#rsa-sha1</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#rsa-sha1</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.2\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigRSASHA256Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigRSASHA256Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the  <a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a> SHA-256 signature method variation for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigRSASHA256Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigRSASHA256Url field is &quot;<a href=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#rsa-sha256</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/04/xmldsig-more\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#rsa-sha256</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.2\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigRSASHA384Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigRSASHA384Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the  <a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a> SHA-384 signature method variation for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigRSASHA384Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigRSASHA384Url field is &quot;<a href=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#rsa-sha384</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#rsa-sha384</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.2\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigRSASHA512Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigRSASHA512Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the  <a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a> SHA-512 signature method variation for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigRSASHA512Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigRSASHA512Url field is &quot;<a href=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#rsa-sha512</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#rsa-sha512</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigSHA1Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigSHA1Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard <a class=\"xref\" href=\"system.security.cryptography.sha1\" data-linktype=\"relative-path\">SHA1</a> digest method for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigSHA1Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigSHA1Url field is &quot;<a href=\"http://www.w3.org/2000/09/xmldsig#sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#sha1</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2000/09/xmldsig#sha1\" data-linktype=\"external\">http://www.w3.org/2000/09/xmldsig#sha1</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.2\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigSHA256Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigSHA256Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard <a class=\"xref\" href=\"system.security.cryptography.sha256\" data-linktype=\"relative-path\">SHA256</a> digest method for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigSHA256Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigSHA256Url field is &quot;<a href=\"http://www.w3.org/2001/04/xmlenc#sha256\" data-linktype=\"external\">http://www.w3.org/2001/04/xmlenc#sha256</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/04/xmlenc#sha256\" data-linktype=\"external\">http://www.w3.org/2001/04/xmlenc#sha256</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.2\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigSHA384Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigSHA384Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard <a class=\"xref\" href=\"system.security.cryptography.sha384\" data-linktype=\"relative-path\">SHA384</a> digest method for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigSHA384Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigSHA384Url field is &quot;<a href=\"http://www.w3.org/2001/04/xmldsig-more#sha384\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#sha384</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/04/xmldsig-more#sha384\" data-linktype=\"external\">http://www.w3.org/2001/04/xmldsig-more#sha384</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.6.2\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigSHA512Url\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigSHA512Url</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the standard <a class=\"xref\" href=\"system.security.cryptography.sha512\" data-linktype=\"relative-path\">SHA512</a> digest method for XML digital signatures. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigSHA512Url;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigSHA512Url field is &quot;<a href=\"http://www.w3.org/2001/04/xmlenc#sha512\" data-linktype=\"external\">http://www.w3.org/2001/04/xmlenc#sha512</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/2001/04/xmlenc#sha512\" data-linktype=\"external\">http://www.w3.org/2001/04/xmlenc#sha512</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigXPathTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigXPathTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath). This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigXPathTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigXPathTransformUrl field is &quot;<a href=\"http://www.w3.org/TR/1999/REC-xpath-19991116\" data-linktype=\"external\">http://www.w3.org/TR/1999/REC-xpath-19991116</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigxpathtransform\" data-linktype=\"relative-path\">XmlDsigXPathTransform</a> class implements the transform described by the XmlDsigXPathTransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/TR/1999/REC-xpath-19991116\" data-linktype=\"external\">http://www.w3.org/TR/1999/REC-xpath-19991116</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlDsigXsltTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlDsigXsltTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for XSLT transformations. This field is constant.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlDsigXsltTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlDsigXsltTransformUrl field is &quot;<a href=\"http://www.w3.org/TR/1999/REC-xslt-19991116\" data-linktype=\"external\">http://www.w3.org/TR/1999/REC-xslt-19991116</a>&quot;.  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigxslttransform\" data-linktype=\"relative-path\">XmlDsigXsltTransform</a> class implements the transform described by the XmlDsigXsltTransformUrl field.  </p>\n<p> For more information, see the World Wide Web Consortium (W3C) specification at <a href=\"http://www.w3.org/TR/1999/REC-xslt-19991116\" data-linktype=\"external\">http://www.w3.org/TR/1999/REC-xslt-19991116</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_XmlLicenseTransformUrl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlLicenseTransformUrl</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public const string XmlLicenseTransformUrl;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the XmlLicenseTransformUrl field is &quot;urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform&quot;  </p>\n<p> Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.xml.xmllicensetransform\" data-linktype=\"relative-path\">XmlLicenseTransform</a> class implements the transform described by the XmlLicenseTransformUrl field.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_EncryptedXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncryptedXml</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedxml\" data-linktype=\"relative-path\">EncryptedXml</a> object that defines the XML encryption processing rules.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedxml\" data-linktype=\"relative-path\">EncryptedXml</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedxml\" data-linktype=\"relative-path\">EncryptedXml</a> object that defines the XML encryption processing rules.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_KeyInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyInfo</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfo\" data-linktype=\"relative-path\">KeyInfo</a> object of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.keyinfo\" data-linktype=\"relative-path\">KeyInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfo\" data-linktype=\"relative-path\">KeyInfo</a> object of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The KeyInfo property represents the &lt;<code>KeyInfo</code>&gt; element of an XML digital signature using a <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfo\" data-linktype=\"relative-path\">KeyInfo</a> object contained within the property.  The &lt;<code>KeyInfo</code>&gt; element is a subelement of the &lt;<code>Signature</code>&gt; element.  </p>\n<p> Use the KeyInfo property to embed key-related information intended to help identify the key necessary for validating an XML document.  </p>\n<p> For more information about the <code>&lt;KeyInfo&gt;</code> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_Resolver\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Resolver</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the current <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlResolver Resolver { set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object. The defaults is a <a class=\"xref\" href=\"system.xml.xmlsecureresolver\" data-linktype=\"relative-path\">XmlSecureResolver</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> class resolves external XML resources named by a Uniform Resource Identifier (URI). If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI. You can use the Resolver property to control the level of access that XML files have to computer resources by specifying different <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> objects. If you do not want to allow any access, you can set this property to <code>null</code> (<code>Nothing</code> in Visual Basic).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SafeCanonicalizationMethods\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SafeCanonicalizationMethods</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Gets the names of methods whose canonicalization algorithms are explicitly allowed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.ObjectModel.Collection&lt;string&gt; SafeCanonicalizationMethods { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of the names of methods that safely produce canonical XML.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Canonicalization methods convert an XML document to its canonical form. For more information about canonical XML, see <a href=\"http://www.w3.org/TR/xml-c14n\" data-linktype=\"external\">Canonical XML</a> on the W3C website.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_Signature\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Signature</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a> object of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Cryptography.Xml.Signature Signature { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a> object of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Signature property represents the &lt;<code>Signature</code>&gt; element of an XML digital signature using a <a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a> object contained within the property.  The &lt;<code>Signature</code>&gt; element is the root element used for XML digital signature creation and verification.  </p>\n<p> Use the Signature property to retrieve the <a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a> object used by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.  </p>\n<p> For more information about the <code>&lt;Signature&gt;</code> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SignatureFormatValidator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignatureFormatValidator</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Func&lt;System.Security.Cryptography.Xml.SignedXml,bool&gt; SignatureFormatValidator { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a>,<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the format is acceptable; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be used to ensure that only certain transforms are used, or that the signature uses a certain hash algorithm, and so on.  </p>\n<p> Setting the property to <code>null</code> removes all signature format validation from the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.  </p>\n<p> You can also read the object&#39;s current delegate and chain to it if you want.  </p>\n<p> If you are setting up a format validator, the delegate you supply will receive as an input parameter the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object being verified and returns a Boolean value – <code>true</code> if the format is acceptable, <code>false</code> if it is not. If the delegate returns <code>false</code> for any reason, the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object will report that the XML signature is not valid.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SignatureLength\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignatureLength</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the length of the signature for the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string SignatureLength { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The length of the signature for the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SignatureMethod\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignatureMethod</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the signature method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string SignatureMethod { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The signature method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SignatureMethod property represents the &lt;<code>SignatureMethod</code>&gt; element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property. The &lt;<code>SignatureMethod</code>&gt; element is a subelement of the &lt;<code>SignedInfo</code>&gt; element.  </p>\n<p> Use the SignatureMethod property to retrieve the &lt;<code>SignatureMethod</code>&gt; URI used by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object. This property is read only. For more information about programmatically specifying a URI for the &lt;<code>SignatureMethod</code>&gt; element, see the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo#System_Security_Cryptography_Xml_SignedInfo_SignatureMethod_\" data-linktype=\"relative-path\">SignatureMethod</a> property.  </p>\n<p> For more information about the <code>&lt;SignatureMethod&gt;</code> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SignatureValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignatureValue</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the signature value of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] SignatureValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A byte array that contains the signature value of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SignatureValue property represents the &lt;<code>SignatureValue</code>&gt; element of an XML digital signature using an array of bytes contained within the property.  The &lt;<code>SignatureValue</code>&gt; element is a subelement of the &lt;<code>Signature&gt;</code> element.  </p>\n<p> Use the SignatureValue property to retrieve the value of the XML digital signature.  This property is automatically populated when you make a successful call to the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_ComputeSignature_\" data-linktype=\"relative-path\">ComputeSignature</a> method.  </p>\n<p> For more information about the <code>&lt;SignatureValue&gt;</code> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SignedInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignedInfo</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo\" data-linktype=\"relative-path\">SignedInfo</a> object of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo\" data-linktype=\"relative-path\">SignedInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo\" data-linktype=\"relative-path\">SignedInfo</a> object of the current <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SignedInfo property represents the &lt;<code>SignedInfo</code>&gt; element of an XML digital signature using an array of bytes contained within the property.  The &lt;<code>SignedInfo</code>&gt; element is a subelement of the &lt;<code>Signature&gt;</code> element.  </p>\n<p> Use the SignedInfo property to retrieve the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo\" data-linktype=\"relative-path\">SignedInfo</a> object that is used by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object to create an XML digital signature.  </p>\n<p> For more information about the <code>&lt;SignedInfo&gt;</code> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SigningKey\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SigningKey</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the asymmetric algorithm key used for signing a <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The asymmetric algorithm key used for signing the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the SigningKey property to specify the asymmetric key you want to use to create an XML digital signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_SigningKeyName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SigningKeyName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the installed key to be used for signing the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string SigningKeyName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the installed key to be used for signing the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_AddObject_System_Security_Cryptography_Xml_DataObject_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddObject(DataObject)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds a <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object to the list of objects to be signed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object to add to the list of objects to be signed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The AddObject method adds an &lt;<code>Object</code>&gt; element that represents an object to be signed to the &lt;<code>Signature</code>&gt; element of an XML digital signature.  </p>\n<p> The AddObject method internally calls the <a class=\"xref\" href=\"system.security.cryptography.xml.signature#System_Security_Cryptography_Xml_Signature_AddObject_\" data-linktype=\"relative-path\">AddObject</a> method of the <a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a> object encapsulated by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.  You can also add a <a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a> object by directly calling the <a class=\"xref\" href=\"system.security.cryptography.xml.signature#System_Security_Cryptography_Xml_Signature_AddObject_\" data-linktype=\"relative-path\">AddObject</a> method from the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_Signature_\" data-linktype=\"relative-path\">Signature</a> property.  </p>\n<p> For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_AddReference_System_Security_Cryptography_Xml_Reference_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddReference(Reference)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds a <a class=\"xref\" href=\"system.security.cryptography.xml.reference\" data-linktype=\"relative-path\">Reference</a> object to the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddReference (System.Security.Cryptography.Xml.Reference reference);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reference</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.reference\" data-linktype=\"relative-path\">Reference</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The  <a class=\"xref\" href=\"system.security.cryptography.xml.reference\" data-linktype=\"relative-path\">Reference</a> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The AddReference method adds a &lt;<code>Reference</code>&gt; element to the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.  The &lt;<code>Reference</code>&gt; element is a subelement of the &lt;<code>SignedInfo</code>&gt; element.  </p>\n<p> The AddReference method internally calls the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo#System_Security_Cryptography_Xml_SignedInfo_AddReference_\" data-linktype=\"relative-path\">AddReference</a> method of the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo\" data-linktype=\"relative-path\">SignedInfo</a> object encapsulated by the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.  You can also add a <a class=\"xref\" href=\"system.security.cryptography.xml.reference\" data-linktype=\"relative-path\">Reference</a> object by directly calling the <a class=\"xref\" href=\"system.security.cryptography.xml.signedinfo#System_Security_Cryptography_Xml_SignedInfo_AddReference_\" data-linktype=\"relative-path\">AddReference</a> method from the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SignedInfo_\" data-linktype=\"relative-path\">SignedInfo</a> property.  </p>\n<p> For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_CheckSignature\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckSignature()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies using the public key in the signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CheckSignature ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm*</span> property of the public key in the signature does not match the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SignatureMethod*</span> property.  </p>\n<p> -or-  </p>\n<p> The signature description could not be created.  </p>\n<p> -or  </p>\n<p> The hash algorithm could not be created.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method also computes the digest of the references and the value of the signature.  </p>\n<p> If an XML document was signed with an X.509 signature, the CheckSignature method will search the &quot;AddressBook&quot; store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_CheckSignature_\" data-linktype=\"relative-path\">CheckSignature</a> method will select certificates with this SKI and try them one after another until it can verify the certificate.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_CheckSignature_System_Security_Cryptography_AsymmetricAlgorithm_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckSignature(AsymmetricAlgorithm)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies for the specified key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The implementation of the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> property that holds the key to be used to verify the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies for the specified key; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>key</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm*</span> property of the <code>key</code> parameter does not match the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SignatureMethod*</span> property.  </p>\n<p> -or-  </p>\n<p> The signature description could not be created.  </p>\n<p> -or  </p>\n<p> The hash algorithm could not be created.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_CheckSignature_System_Security_Cryptography_KeyedHashAlgorithm_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckSignature(KeyedHashAlgorithm)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies for the specified message authentication code (MAC) algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>macAlg</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.keyedhashalgorithm\" data-linktype=\"relative-path\">KeyedHashAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The implementation of <a class=\"xref\" href=\"system.security.cryptography.keyedhashalgorithm\" data-linktype=\"relative-path\">KeyedHashAlgorithm</a> that holds the MAC to be used to verify the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies for the specified MAC; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>macAlg</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Security.Cryptography.HashAlgorithm.HashSize*</span> property of the specified <a class=\"xref\" href=\"system.security.cryptography.keyedhashalgorithm\" data-linktype=\"relative-path\">KeyedHashAlgorithm</a> object is not valid.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The cryptographic transform used to check the signature could not be created.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_CheckSignature_System_Security_Cryptography_X509Certificates_X509Certificate2_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckSignature(X509Certificate2, Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies for the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a> object and, optionally, whether the certificate is valid.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>certificate</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a> object to use to verify the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>verifySignatureOnly</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to verify the signature only; <code>false</code> to verify both the signature and certificate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the signature is valid; otherwise, <code>false</code>.  </p>\n<p> -or-  </p>\n<p> <code>true</code> if the signature and certificate are valid; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>certificate</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>A signature description could not be created for the <code>certificate</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In version 1.1 of the .NET Framework, the X.509 certificate is not verified.  In version 2.0 and later, the X.509 certificate is verified.  </p>\n<p> In version 2.0 and later of the .NET Framework, the CheckSignature method will search the &quot;AddressBook&quot; store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the CheckSignature method will select certificates with this SKI and try them one after another until it can verify the certificate.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_CheckSignatureReturningKey_System_Security_Cryptography_AsymmetricAlgorithm__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckSignatureReturningKey(AsymmetricAlgorithm)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies using the public key in the signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>signingKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>When this method returns, contains the implementation of <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> that holds the public key in the signature. This parameter is passed uninitialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property verifies using the public key in the signature; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>signingKey</code> parameter is null.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm*</span> property of the public key in the signature does not match the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SignatureMethod*</span> property.  </p>\n<p> -or-  </p>\n<p> The signature description could not be created.  </p>\n<p> -or  </p>\n<p> The hash algorithm could not be created.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_ComputeSignature\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ComputeSignature()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Computes an XML digital signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ComputeSignature ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SigningKey*</span> property is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SigningKey*</span> property is not a <a class=\"xref\" href=\"system.security.cryptography.dsa\" data-linktype=\"relative-path\">DSA</a> object or <a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a> object.  </p>\n<p> -or-  </p>\n<p> The key could not be loaded.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ComputeSignature method creates an XML digital signature and constructs many of the XML elements needed.  </p>\n<p> You must set the data to be signed and the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_SigningKey_\" data-linktype=\"relative-path\">SigningKey</a> property before calling this method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_ComputeSignature_System_Security_Cryptography_KeyedHashAlgorithm_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ComputeSignature(KeyedHashAlgorithm)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Computes an XML digital signature using the specified message authentication code (MAC) algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>macAlg</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.keyedhashalgorithm\" data-linktype=\"relative-path\">KeyedHashAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.security.cryptography.keyedhashalgorithm\" data-linktype=\"relative-path\">KeyedHashAlgorithm</a> object that holds the MAC to be used to compute the value of the <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.Signature*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>macAlg</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.keyedhashalgorithm\" data-linktype=\"relative-path\">KeyedHashAlgorithm</a> object specified by the <code>macAlg</code> parameter is not an instance of <a class=\"xref\" href=\"system.security.cryptography.hmacsha1\" data-linktype=\"relative-path\">HMACSHA1</a>.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Security.Cryptography.HashAlgorithm.HashSize*</span> property of the specified <a class=\"xref\" href=\"system.security.cryptography.keyedhashalgorithm\" data-linktype=\"relative-path\">KeyedHashAlgorithm</a> object is not valid.  </p>\n<p> -or-  </p>\n<p> The cryptographic transform used to check the signature could not be created.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ComputeSignature method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed.  </p>\n<p> You must set the data to be signed before calling this method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_GetIdElement_System_Xml_XmlDocument_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetIdElement(XmlDocument, String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object with the specified ID from the specified <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>document</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object to retrieve the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>idValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The ID of the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object to retrieve from the <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object with the specified ID from the specified <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object, or <code>null</code> if it could not be found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_GetPublicKey\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetPublicKey()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the public key of a signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> object that contains the public key of the signature, or <code>null</code> if the key cannot be found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.KeyInfo*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetPublicKey method returns an <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> object that contains a public key that can be used to verify an XML digital signature.  </p>\n<p> The key must be either a <a class=\"xref\" href=\"system.security.cryptography.dsa\" data-linktype=\"relative-path\">DSA</a> or an <a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a> key.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_GetXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the XML representation of a <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlElement GetXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The XML representation of the <a class=\"xref\" href=\"system.security.cryptography.xml.signature\" data-linktype=\"relative-path\">Signature</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SignedInfo*</span> property is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SignatureValue*</span> property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_SignedXml_LoadXml_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadXml(XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads a <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> state from an XML element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void LoadXml (System.Xml.XmlElement value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The XML element to load the <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> state from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>value</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>value</code> parameter does not contain a valid <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SignatureValue*</span> property.  </p>\n<p> -or-  </p>\n<p> The <code>value</code> parameter does not contain a valid <span class=\"xref\">stem.Security.Cryptography.Xml.SignedXml.SignedInfo*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.SignedXml.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.AddObject\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.AddReference\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.CheckSignature\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.ComputeSignature\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.EncryptedXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.GetIdElement\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.GetPublicKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.GetXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.KeyInfo\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.LoadXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.m_signature\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.Resolver\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.Signature\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SignatureLength\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SigningKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.SigningKeyName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"958d9459-2b98-02bd-c54b-25ef81890c2f\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a wrapper on a core XML signature object to facilitate creating XML signatures.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.SignedXml\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.SignedXml.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Xml.SignedXml","System.Security.Cryptography.Xml.SignedXml..ctor","System.Security.Cryptography.Xml.SignedXml.AddObject","System.Security.Cryptography.Xml.SignedXml.AddReference","System.Security.Cryptography.Xml.SignedXml.CheckSignature","System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey","System.Security.Cryptography.Xml.SignedXml.ComputeSignature","System.Security.Cryptography.Xml.SignedXml.EncryptedXml","System.Security.Cryptography.Xml.SignedXml.GetIdElement","System.Security.Cryptography.Xml.SignedXml.GetPublicKey","System.Security.Cryptography.Xml.SignedXml.GetXml","System.Security.Cryptography.Xml.SignedXml.KeyInfo","System.Security.Cryptography.Xml.SignedXml.LoadXml","System.Security.Cryptography.Xml.SignedXml.m_signature","System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName","System.Security.Cryptography.Xml.SignedXml.Resolver","System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods","System.Security.Cryptography.Xml.SignedXml.Signature","System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator","System.Security.Cryptography.Xml.SignedXml.SignatureLength","System.Security.Cryptography.Xml.SignedXml.SignatureMethod","System.Security.Cryptography.Xml.SignedXml.SignatureValue","System.Security.Cryptography.Xml.SignedXml.SignedInfo","System.Security.Cryptography.Xml.SignedXml.SigningKey","System.Security.Cryptography.Xml.SignedXml.SigningKeyName","System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.SignedXml","System::Security::Cryptography::Xml::SignedXml","System.Security.Cryptography.Xml.SignedXml.#ctor","System::Security::Cryptography::Xml::SignedXml::#ctor","System.Security.Cryptography.Xml.SignedXml.AddObject","System::Security::Cryptography::Xml::SignedXml::AddObject","System.Security.Cryptography.Xml.SignedXml.AddReference","System::Security::Cryptography::Xml::SignedXml::AddReference","System.Security.Cryptography.Xml.SignedXml.CheckSignature","System::Security::Cryptography::Xml::SignedXml::CheckSignature","System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey","System::Security::Cryptography::Xml::SignedXml::CheckSignatureReturningKey","System.Security.Cryptography.Xml.SignedXml.ComputeSignature","System::Security::Cryptography::Xml::SignedXml::ComputeSignature","System.Security.Cryptography.Xml.SignedXml.EncryptedXml","System::Security::Cryptography::Xml::SignedXml::EncryptedXml","System.Security.Cryptography.Xml.SignedXml.GetIdElement","System::Security::Cryptography::Xml::SignedXml::GetIdElement","System.Security.Cryptography.Xml.SignedXml.GetPublicKey","System::Security::Cryptography::Xml::SignedXml::GetPublicKey","System.Security.Cryptography.Xml.SignedXml.GetXml","System::Security::Cryptography::Xml::SignedXml::GetXml","System.Security.Cryptography.Xml.SignedXml.KeyInfo","System::Security::Cryptography::Xml::SignedXml::KeyInfo","System.Security.Cryptography.Xml.SignedXml.LoadXml","System::Security::Cryptography::Xml::SignedXml::LoadXml","System.Security.Cryptography.Xml.SignedXml.m_signature","System::Security::Cryptography::Xml::SignedXml::m_signature","System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName","System::Security::Cryptography::Xml::SignedXml::m_strSigningKeyName","System.Security.Cryptography.Xml.SignedXml.Resolver","System::Security::Cryptography::Xml::SignedXml::Resolver","System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods","System::Security::Cryptography::Xml::SignedXml::SafeCanonicalizationMethods","System.Security.Cryptography.Xml.SignedXml.Signature","System::Security::Cryptography::Xml::SignedXml::Signature","System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator","System::Security::Cryptography::Xml::SignedXml::SignatureFormatValidator","System.Security.Cryptography.Xml.SignedXml.SignatureLength","System::Security::Cryptography::Xml::SignedXml::SignatureLength","System.Security.Cryptography.Xml.SignedXml.SignatureMethod","System::Security::Cryptography::Xml::SignedXml::SignatureMethod","System.Security.Cryptography.Xml.SignedXml.SignatureValue","System::Security::Cryptography::Xml::SignedXml::SignatureValue","System.Security.Cryptography.Xml.SignedXml.SignedInfo","System::Security::Cryptography::Xml::SignedXml::SignedInfo","System.Security.Cryptography.Xml.SignedXml.SigningKey","System::Security::Cryptography::Xml::SignedXml::SigningKey","System.Security.Cryptography.Xml.SignedXml.SigningKeyName","System::Security::Cryptography::Xml::SignedXml::SigningKeyName","System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDecryptionTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigBase64TransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigC14NTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigC14NWithCommentsTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigCanonicalizationUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigCanonicalizationWithCommentsUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigDSAUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigEnvelopedSignatureTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigExcC14NTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigExcC14NWithCommentsTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigHMACSHA1Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigMinimalCanonicalizationUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigNamespaceUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigRSASHA1Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigRSASHA256Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigRSASHA384Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigRSASHA512Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigSHA1Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigSHA256Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigSHA384Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url","System::Security::Cryptography::Xml::SignedXml::XmlDsigSHA512Url","System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigXPathTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlDsigXsltTransformUrl","System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl","System::Security::Cryptography::Xml::SignedXml::XmlLicenseTransformUrl"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"958d9459-2b98-02bd-c54b-25ef81890c2f","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SignedXml class | Microsoft Docs","_op_ogTitle":"SignedXml class","description":"Provides a wrapper on a core XML signature object to facilitate creating XML signatures.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.SignedXml","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.signedxml","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.signedxml","fileRelativePath":"api/System.Security.Cryptography.Xml.SignedXml.html"},"themesRelativePathToOutputRoot":"_themes/"}