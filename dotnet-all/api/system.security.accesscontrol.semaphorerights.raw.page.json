{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SemaphoreRights</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the access control rights that can be applied to named system semaphore objects.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\n[System.Runtime.InteropServices.ComVisible(false)]\npublic enum SemaphoreRights</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div><span class=\"lang-csharp\">SemaphoreRights</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the use of SemaphoreRights values when creating and using <a class=\"xref\" href=\"system.security.accesscontrol.semaphoreaccessrule\" data-linktype=\"relative-path\">SemaphoreAccessRule</a> objects. The example creates a <a class=\"xref\" href=\"system.security.accesscontrol.semaphoresecurity\" data-linktype=\"relative-path\">SemaphoreSecurity</a> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">System.Security.AccessControl.AccessControlType</a>rule.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example does not attach the security object to an <a class=\"xref\" href=\"system.threading.semaphore\" data-linktype=\"relative-path\">Semaphore</a> object; see <a class=\"xref\" href=\"system.security.accesscontrol.semaphoresecurity\" data-linktype=\"relative-path\">SemaphoreSecurity</a>, <a class=\"xref\" href=\"system.threading.semaphore#System_Threading_Semaphore_GetAccessControl_\" data-linktype=\"relative-path\">GetAccessControl</a> method, and <a class=\"xref\" href=\"system.threading.semaphore#System_Threading_Semaphore_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1\">using System;\nusing System.Threading;\nusing System.Security.AccessControl;\nusing System.Security.Principal;\n\npublic class Example\n{\n    public static void Main()\n    {\n        // Create a string representing the current user.\n        string user = Environment.UserDomainName + &quot;\\\\&quot; + \n            Environment.UserName;\n\n        // Create a security object that grants no access.\n        SemaphoreSecurity mSec = new SemaphoreSecurity();\n\n        // Add a rule that grants the current user the \n        // right to enter or release the semaphore.\n        SemaphoreAccessRule rule = new SemaphoreAccessRule(user, \n            SemaphoreRights.Synchronize | SemaphoreRights.Modify, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        // Add a rule that denies the current user the \n        // right to change permissions on the semaphore.\n        rule = new SemaphoreAccessRule(user, \n            SemaphoreRights.ChangePermissions, \n            AccessControlType.Deny);\n        mSec.AddAccessRule(rule);\n\n        // Display the rules in the security object.\n        ShowSecurity(mSec);\n\n        // Add a rule that allows the current user the \n        // right to read permissions on the semaphore. This rule\n        // is merged with the existing Allow rule.\n        rule = new SemaphoreAccessRule(user, \n            SemaphoreRights.ReadPermissions, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        ShowSecurity(mSec);\n    }\n\n    private static void ShowSecurity(SemaphoreSecurity security)\n    {\n        Console.WriteLine(&quot;\\r\\nCurrent access rules:\\r\\n&quot;);\n\n        foreach(SemaphoreAccessRule ar in \n            security.GetAccessRules(true, true, typeof(NTAccount)))\n        {\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference);\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType);\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.SemaphoreRights);\n            Console.WriteLine();\n        }\n    }\n}\n\n/*This code example produces output similar to following:\n\nCurrent access rules:\n\n        User: TestDomain\\TestUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain\\TestUser\n        Type: Allow\n      Rights: Modify, Synchronize\n\n\nCurrent access rules:\n\n        User: TestDomain\\TestUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain\\TestUser\n        Type: Allow\n      Rights: Modify, ReadPermissions, Synchronize\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1\">Imports System\nImports System.Threading\nImports System.Security.AccessControl\nImports System.Security.Principal\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        &#39; Create a string representing the current user.\n        Dim user As String = Environment.UserDomainName _ \n            &amp; &quot;\\&quot; &amp; Environment.UserName\n\n        &#39; Create a security object that grants no access.\n        Dim mSec As New SemaphoreSecurity()\n\n        &#39; Add a rule that grants the current user the \n        &#39; right to enter or release the semaphore.\n        Dim rule As New SemaphoreAccessRule(user, _\n            SemaphoreRights.Synchronize _\n            Or SemaphoreRights.Modify, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        &#39; Add a rule that denies the current user the \n        &#39; right to change permissions on the semaphore.\n        rule = New SemaphoreAccessRule(user, _\n            SemaphoreRights.ChangePermissions, _\n            AccessControlType.Deny)\n        mSec.AddAccessRule(rule)\n\n        &#39; Display the rules in the security object.\n        ShowSecurity(mSec)\n\n        &#39; Add a rule that allows the current user the \n        &#39; right to read permissions on the semaphore. This \n        &#39; rule is merged with the existing Allow rule.\n        rule = New SemaphoreAccessRule(user, _\n            SemaphoreRights.ReadPermissions, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        ShowSecurity(mSec)\n\n    End Sub \n\n    Private Shared Sub ShowSecurity(ByVal security As SemaphoreSecurity)\n        Console.WriteLine(vbCrLf &amp; &quot;Current access rules:&quot; &amp; vbCrLf)\n\n        For Each ar As SemaphoreAccessRule In _\n            security.GetAccessRules(True, True, GetType(NTAccount))\n\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference)\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType)\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.SemaphoreRights)\n            Console.WriteLine()\n        Next\n\n    End Sub\nEnd Class \n\n&#39;This code example produces output similar to following:\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain\\TestUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain\\TestUser\n&#39;        Type: Allow\n&#39;      Rights: Modify, Synchronize\n&#39;\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain\\TestUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain\\TestUser\n&#39;        Type: Allow\n&#39;      Rights: Modify, ReadPermissions, Synchronize\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the SemaphoreRights enumeration to specify access control rights when you create <a class=\"xref\" href=\"system.security.accesscontrol.semaphoresecurity\" data-linktype=\"relative-path\">SemaphoreSecurity</a> objects. To apply access rights to a named system semaphore, use <a class=\"xref\" href=\"system.security.accesscontrol.semaphoresecurity\" data-linktype=\"relative-path\">SemaphoreSecurity</a> objects with the <a class=\"xref\" href=\"system.threading.semaphore#System_Threading_Semaphore__ctor_System_Int32_System_Int32_System_String_System_Boolean__System_Security_AccessControl_SemaphoreSecurity_\" data-linktype=\"relative-path\">System.Threading.Semaphore.Semaphore(Int32,Int32,String,Boolean,SemaphoreSecurity)</a> constructor and the <a class=\"xref\" href=\"system.threading.semaphore#System_Threading_Semaphore_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a> method.  </p>\n<p> For the numeric values of the underlying Windows access rights, see <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=243073\" data-linktype=\"external\">Synchronization Object Security and Access Rights (Windows)</a> in the MSDN Library.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</p>\n</div>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Security_AccessControl_SemaphoreRights_ChangePermissions\">\r\n      \t\t\t<span class=\"lang-csharp\">ChangePermissions</span>\r\n      \t</td>\r\n      \t<td><p>The right to change the security and audit rules associated with a named semaphore.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_AccessControl_SemaphoreRights_Delete\">\r\n      \t\t\t<span class=\"lang-csharp\">Delete</span>\r\n      \t</td>\r\n      \t<td><p>The right to delete a named semaphore.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_AccessControl_SemaphoreRights_FullControl\">\r\n      \t\t\t<span class=\"lang-csharp\">FullControl</span>\r\n      \t</td>\r\n      \t<td><p>The right to exert full control over a named semaphore, and to modify its access rules and audit rules.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_AccessControl_SemaphoreRights_Modify\">\r\n      \t\t\t<span class=\"lang-csharp\">Modify</span>\r\n      \t</td>\r\n      \t<td><p>The right to release a named semaphore.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_AccessControl_SemaphoreRights_ReadPermissions\">\r\n      \t\t\t<span class=\"lang-csharp\">ReadPermissions</span>\r\n      \t</td>\r\n      \t<td><p>The right to open and copy the access rules and audit rules for a named semaphore.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_AccessControl_SemaphoreRights_Synchronize\">\r\n      \t\t\t<span class=\"lang-csharp\">Synchronize</span>\r\n      \t</td>\r\n      \t<td><p>The right to wait on a named semaphore.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_AccessControl_SemaphoreRights_TakeOwnership\">\r\n      \t\t\t<span class=\"lang-csharp\">TakeOwnership</span>\r\n      \t</td>\r\n      \t<td><p>The right to change the owner of a named semaphore.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.AccessControl.SemaphoreRights.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights.ChangePermissions\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights.Delete\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights.FullControl\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights.Modify\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights.ReadPermissions\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights.Synchronize\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.SemaphoreRights.TakeOwnership\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"c3549627-3b9f-67de-4f30-7fa45848c921\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the access control rights that can be applied to named system semaphore objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.accesscontrol/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.AccessControl.SemaphoreRights\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.AccessControl.SemaphoreRights.yml","open_to_public_contributors":false,"api_name":["System.Security.AccessControl.SemaphoreRights","System.Security.AccessControl.SemaphoreRights.ChangePermissions","System.Security.AccessControl.SemaphoreRights.Delete","System.Security.AccessControl.SemaphoreRights.FullControl","System.Security.AccessControl.SemaphoreRights.Modify","System.Security.AccessControl.SemaphoreRights.ReadPermissions","System.Security.AccessControl.SemaphoreRights.Synchronize","System.Security.AccessControl.SemaphoreRights.TakeOwnership"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.AccessControl.SemaphoreRights","System::Security::AccessControl::SemaphoreRights","System.Security.AccessControl.SemaphoreRights.ChangePermissions","System::Security::AccessControl::SemaphoreRights::ChangePermissions","System.Security.AccessControl.SemaphoreRights.Delete","System::Security::AccessControl::SemaphoreRights::Delete","System.Security.AccessControl.SemaphoreRights.FullControl","System::Security::AccessControl::SemaphoreRights::FullControl","System.Security.AccessControl.SemaphoreRights.Modify","System::Security::AccessControl::SemaphoreRights::Modify","System.Security.AccessControl.SemaphoreRights.ReadPermissions","System::Security::AccessControl::SemaphoreRights::ReadPermissions","System.Security.AccessControl.SemaphoreRights.Synchronize","System::Security::AccessControl::SemaphoreRights::Synchronize","System.Security.AccessControl.SemaphoreRights.TakeOwnership","System::Security::AccessControl::SemaphoreRights::TakeOwnership"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"c3549627-3b9f-67de-4f30-7fa45848c921","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/SemaphoreRights.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SemaphoreRights enum | Microsoft Docs","_op_ogTitle":"SemaphoreRights enum","description":"Specifies the access control rights that can be applied to named system semaphore objects.\n","toc_asset_id":"api/_splitted/System.Security.AccessControl/toc.json","toc_rel":"_splitted/System.Security.AccessControl/toc.json","source_url":"","ms.assetid":"System.Security.AccessControl.SemaphoreRights","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.semaphorerights","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.semaphorerights","fileRelativePath":"api/System.Security.AccessControl.SemaphoreRights.html"},"themesRelativePathToOutputRoot":"_themes/"}