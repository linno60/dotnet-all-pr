{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EncryptionProperty</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the <code>&lt;EncryptionProperty&gt;</code> element used in XML encryption. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class EncryptionProperty</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">EncryptionProperty</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example encrypts and decrypts an XML document.  This code example creates an EncryptionProperty object that contains custom information about the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> element, and adds the EncryptionProperty object to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedxml\" data-linktype=\"relative-path\">EncryptedXml</a> class.  Finally, this code example displays information about the EncryptionProperty object and the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"Cryptography.XML.EncryptionProperty#1\">Imports System\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n        &#39; Create an XmlDocument object.\n        Dim xmlDoc As New XmlDocument()\n\n        &#39; Load an XML file into the XmlDocument object.\n        Try\n            xmlDoc.PreserveWhitespace = True\n            xmlDoc.Load(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n\n        &#39; Create a new RSA key.  This key will encrypt a symmetric key,\n        &#39; which will then be imbedded in the XML document.  \n        Dim rsaKey As New RSACryptoServiceProvider()\n\n\n        Try\n            &#39; Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Inspect the EncryptedKey element.\n            InspectElement(xmlDoc)\n\n            &#39; Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;)\n\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear the RSA key.\n            rsaKey.Clear()\n        End Try\n\n    End Sub\n\n\n    Sub Encrypt(ByVal Doc As XmlDocument, ByVal ElementToEncryptValue As String, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If ElementToEncryptValue Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementToEncrypt&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Find the specified element in the XmlDocument\n        &#39; object and create a new XmlElemnt object.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        Dim elementToEncrypt As XmlElement = Doc.GetElementsByTagName(ElementToEncryptValue)(0)\n\n        &#39; Throw an XmlException if the element was not found.\n        If elementToEncrypt Is Nothing Then\n            Throw New XmlException(&quot;The specified element was not found&quot;)\n        End If\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a new instance of the EncryptedXml class \n        &#39; and use it to encrypt the XmlElement with the \n        &#39; a new random symmetric key.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a 256 bit Rijndael key.\n        Dim sessionKey As New RijndaelManaged()\n        sessionKey.KeySize = 256\n\n        Dim eXml As New EncryptedXml()\n\n        Dim encryptedElement As Byte() = eXml.EncryptData(elementToEncrypt, sessionKey, False)\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Construct an EncryptedData object and populate\n        &#39; it with the desired encryption information.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim edElement As New EncryptedData()\n        edElement.Type = EncryptedXml.XmlEncElementUrl\n\n        &#39; Create an EncryptionMethod element so that the \n        &#39; receiver knows which algorithm to use for decryption.\n        edElement.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncAES256Url)\n\n        &#39; Encrypt the session key and add it to an EncryptedKey element.\n        Dim ek As New EncryptedKey()\n\n        Dim encryptedKey As Byte() = EncryptedXml.EncryptKey(sessionKey.Key, Alg, False)\n\n        ek.CipherData = New CipherData(encryptedKey)\n\n        ek.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncRSA15Url)\n\n        &#39; Save some more information about the key using\n        &#39; the EncryptionProperty element.  In this example,\n        &#39; we will save the value &quot;LibVersion1&quot;.  You can save\n        &#39; anything you want here.\n        &#39; Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        Dim element As XmlElement = New XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl)\n\n        &#39; Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;\n\n        &#39; Create the EncryptionProperty object using the XmlElement object. \n        Dim encProp As New EncryptionProperty(element)\n\n        &#39; Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp)\n\n        &#39; Set the KeyInfo element to specify the\n        &#39; name of the RSA key.\n        &#39; Create a new KeyInfo element.\n        edElement.KeyInfo = New KeyInfo()\n\n        &#39; Create a new KeyInfoName element.\n        Dim kin As New KeyInfoName()\n\n        &#39; Specify a name for the key.\n        kin.Value = KeyName\n\n        &#39; Add the KeyInfoName element to the \n        &#39; EncryptedKey object.\n        ek.KeyInfo.AddClause(kin)\n\n        &#39; Add the encrypted key to the \n        &#39; EncryptedData object.\n        edElement.KeyInfo.AddClause(New KeyInfoEncryptedKey(ek))\n\n        &#39; Add the encrypted element data to the \n        &#39; EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Replace the element from the original XmlDocument\n        &#39; object with the EncryptedData element.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, False)\n\n    End Sub\n\n\n    Sub Decrypt(ByVal Doc As XmlDocument, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39; Create a new EncryptedXml object.\n        Dim exml As New EncryptedXml(Doc)\n\n        &#39; Add a key-name mapping.\n        &#39; This method can only decrypt documents\n        &#39; that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg)\n\n        &#39; Decrypt the element.\n        exml.DecryptDocument()\n\n    End Sub\n\n\n    Sub InspectElement(ByVal Doc As XmlDocument)\n        &#39; Get the EncryptedData element from the XMLDocument object.\n        Dim encryptedData As XmlElement = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)(0)\n\n        &#39; Create a new EncryptedData object.\n        Dim encData As New EncryptedData()\n\n        &#39; Load the XML from the document to\n        &#39; initialize the EncryptedData object.\n        encData.LoadXml(encryptedData)\n\n        &#39; Display the properties.\n        &#39; Most values are Null by default.\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding)\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml)\n\n        Dim encPropCollection As EncryptionPropertyCollection = encData.EncryptionProperties\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count.ToString())\n        &#39;encPropCollection.\n        Dim encProp As EncryptionProperty\n        For Each encProp In encPropCollection\n            Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id)\n            Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml)\n            Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target)\n        Next encProp\n\n\n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id)\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType)\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.XML.EncryptionProperty#1\">using System;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        // Create an XmlDocument object.\n        XmlDocument xmlDoc = new XmlDocument();\n\n        // Load an XML file into the XmlDocument object.\n        try\n        {\n            xmlDoc.PreserveWhitespace = true;\n            xmlDoc.Load(&quot;test.xml&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n\n        // Create a new RSA key.  This key will encrypt a symmetric key,\n        // which will then be imbedded in the XML document.  \n        RSA rsaKey = new RSACryptoServiceProvider();\n\n\n        try\n        {\n            // Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;);\n\n            // Inspect the EncryptedKey element.\n            InspectElement(xmlDoc);\n\n            // Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;);\n\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n        finally\n        {\n            // Clear the RSA key.\n            rsaKey.Clear();\n        }\n\n    }\n\n    public static void Encrypt(XmlDocument Doc, string ElementToEncrypt, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (ElementToEncrypt == null)\n            throw new ArgumentNullException(&quot;ElementToEncrypt&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n\n        ////////////////////////////////////////////////\n        // Find the specified element in the XmlDocument\n        // object and create a new XmlElemnt object.\n        ////////////////////////////////////////////////\n\n        XmlElement elementToEncrypt = Doc.GetElementsByTagName(ElementToEncrypt)[0] as XmlElement;\n\n        // Throw an XmlException if the element was not found.\n        if (elementToEncrypt == null)\n        {\n            throw new XmlException(&quot;The specified element was not found&quot;);\n\n        }\n\n        //////////////////////////////////////////////////\n        // Create a new instance of the EncryptedXml class \n        // and use it to encrypt the XmlElement with the \n        // a new random symmetric key.\n        //////////////////////////////////////////////////\n\n        // Create a 256 bit Rijndael key.\n        RijndaelManaged sessionKey = new RijndaelManaged();\n        sessionKey.KeySize = 256;\n\n        EncryptedXml eXml = new EncryptedXml();\n\n        byte[] encryptedElement = eXml.EncryptData(elementToEncrypt, sessionKey, false);\n\n        ////////////////////////////////////////////////\n        // Construct an EncryptedData object and populate\n        // it with the desired encryption information.\n        ////////////////////////////////////////////////\n\n\n        EncryptedData edElement = new EncryptedData();\n        edElement.Type = EncryptedXml.XmlEncElementUrl;\n\n        // Create an EncryptionMethod element so that the \n        // receiver knows which algorithm to use for decryption.\n\n        edElement.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncAES256Url);\n\n        // Encrypt the session key and add it to an EncryptedKey element.\n        EncryptedKey ek = new EncryptedKey();\n\n        byte[] encryptedKey = EncryptedXml.EncryptKey(sessionKey.Key, Alg, false);\n\n        ek.CipherData = new CipherData(encryptedKey);\n\n        ek.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncRSA15Url);\n\n        // Save some more information about the key using\n        // the EncryptionProperty element.  In this example,\n        // we will save the value &quot;LibVersion1&quot;.  You can save\n        // anything you want here.\n\n        // Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        XmlElement element =  new XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl);\n\n        // Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;;\n\n        // Create the EncryptionProperty object using the XmlElement object. \n        EncryptionProperty encProp = new EncryptionProperty(element);\n\n        // Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp);\n\n        // Set the KeyInfo element to specify the\n        // name of the RSA key.\n\n        // Create a new KeyInfo element.\n        edElement.KeyInfo = new KeyInfo();\n\n        // Create a new KeyInfoName element.\n        KeyInfoName kin = new KeyInfoName();\n\n        // Specify a name for the key.\n        kin.Value = KeyName;\n\n        // Add the KeyInfoName element to the \n        // EncryptedKey object.\n        ek.KeyInfo.AddClause(kin);\n\n        // Add the encrypted key to the \n        // EncryptedData object.\n\n        edElement.KeyInfo.AddClause(new KeyInfoEncryptedKey(ek));\n\n        // Add the encrypted element data to the \n        // EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement;\n\n        ////////////////////////////////////////////////////\n        // Replace the element from the original XmlDocument\n        // object with the EncryptedData element.\n        ////////////////////////////////////////////////////\n\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, false);\n\n    }\n\n    public static void Decrypt(XmlDocument Doc, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n        if (KeyName == null)\n            throw new ArgumentNullException(&quot;KeyName&quot;);\n\n        // Create a new EncryptedXml object.\n        EncryptedXml exml = new EncryptedXml(Doc);\n\n        // Add a key-name mapping.\n        // This method can only decrypt documents\n        // that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg);\n\n        // Decrypt the element.\n        exml.DecryptDocument();\n\n    }\n\n    static void InspectElement(XmlDocument Doc)\n    {\n        // Get the EncryptedData element from the XMLDocument object.\n        XmlElement encryptedData = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)[0] as XmlElement;\n\n        // Create a new EncryptedData object.\n        EncryptedData encData = new EncryptedData();\n\n        // Load the XML from the document to\n        // initialize the EncryptedData object.\n        encData.LoadXml(encryptedData);\n\n        // Display the properties.\n        // Most values are Null by default.\n\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding);\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml);\n\n        EncryptionPropertyCollection encPropCollection = encData.EncryptionProperties;\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count);\n        //encPropCollection.\n\n        foreach(EncryptionProperty encProp in encPropCollection)\n        {\n                Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id);\n                Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml);\n                Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target);\n                 \n        }\n\n    \n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id);\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType);\n    }\n\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The EncryptionProperty class encapsulates the <code>&lt;EncryptionProperty&gt;</code> element defined by the World Wide Web Consortium XML Encryption specification located at <a href=\"http://www.w3.org/TR/xmlenc-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmlenc-core/</a>.  </p>\n<p> Use the EncryptionProperty class to provide additional encryption information related to the <a class=\"xref\" href=\"system.security.cryptography.xml.encrypteddata\" data-linktype=\"relative-path\">EncryptedData</a> and <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> elements.  For example, use this class to specify a time stamp.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_EncryptionProperty__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptionProperty__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncryptionProperty()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EncryptionProperty ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_EncryptionProperty__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptionProperty__ctor_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncryptionProperty(XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> class using an <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EncryptionProperty (System.Xml.XmlElement elementProperty);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>elementProperty</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object to use for initialization.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>elementProperty</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Xml.XmlElement.LocalName*</span> property of the <code>elementProperty</code> parameter is not &quot;EncryptionProperty&quot;.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Xml.XmlElement.NamespaceURI*</span> property of the <code>elementProperty</code> parameter is not &quot;<a href=\"http://www.w3.org/2001/04/xmlenc#\" data-linktype=\"external\">http://www.w3.org/2001/04/xmlenc#</a>&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_EncryptionProperty_Id_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptionProperty_Id\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Id</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the ID of the current <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Id { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The ID of the current <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ID is used to reference the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object from another location.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_EncryptionProperty_PropertyElement_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptionProperty_PropertyElement\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PropertyElement</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object that represents an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlElement PropertyElement { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object that represents an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The PropertyElement property was set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Xml.XmlElement.LocalName*</span> property of the value set to the PropertyElement property is not &quot;EncryptionProperty&quot;.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Xml.XmlElement.NamespaceURI*</span> property of the value set to the PropertyElement property is not &quot;<a href=\"http://www.w3.org/2001/04/xmlenc#\" data-linktype=\"external\">http://www.w3.org/2001/04/xmlenc#</a>&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_EncryptionProperty_Target_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptionProperty_Target\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Target</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the target of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Target { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The target of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_EncryptionProperty_GetXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptionProperty_GetXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object that encapsulates an instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlElement GetXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object that encapsulates an instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> class.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetXml method returns a representation of the <code>&lt;EncryptionProperty&gt;</code> element.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_EncryptionProperty_LoadXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_EncryptionProperty_LoadXml_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadXml(XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Parses the input <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> and configures the internal state of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to match.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void LoadXml (System.Xml.XmlElement value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object to parse.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>value</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Xml.XmlElement.LocalName*</span> property of the <code>value</code> parameter is not &quot;EncryptionProperty&quot;.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Xml.XmlElement.NamespaceURI*</span> property of the <code>value</code> parameter is not &quot;<a href=\"http://www.w3.org/2001/04/xmlenc#\" data-linktype=\"external\">http://www.w3.org/2001/04/xmlenc#</a>&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LoadXml method configures the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to match the state of an <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.EncryptionProperty.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionProperty\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionProperty..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionProperty.GetXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionProperty.Id\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionProperty.LoadXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionProperty.Target\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"112be5d5-b83d-6840-3b66-91383c8b1732\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the &amp;lt;EncryptionProperty&amp;gt; element used in XML encryption. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.EncryptionProperty\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.EncryptionProperty.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Xml.EncryptionProperty","System.Security.Cryptography.Xml.EncryptionProperty..ctor","System.Security.Cryptography.Xml.EncryptionProperty.GetXml","System.Security.Cryptography.Xml.EncryptionProperty.Id","System.Security.Cryptography.Xml.EncryptionProperty.LoadXml","System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement","System.Security.Cryptography.Xml.EncryptionProperty.Target"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.EncryptionProperty","System::Security::Cryptography::Xml::EncryptionProperty","System.Security.Cryptography.Xml.EncryptionProperty.#ctor","System::Security::Cryptography::Xml::EncryptionProperty::#ctor","System.Security.Cryptography.Xml.EncryptionProperty.GetXml","System::Security::Cryptography::Xml::EncryptionProperty::GetXml","System.Security.Cryptography.Xml.EncryptionProperty.Id","System::Security::Cryptography::Xml::EncryptionProperty::Id","System.Security.Cryptography.Xml.EncryptionProperty.LoadXml","System::Security::Cryptography::Xml::EncryptionProperty::LoadXml","System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement","System::Security::Cryptography::Xml::EncryptionProperty::PropertyElement","System.Security.Cryptography.Xml.EncryptionProperty.Target","System::Security::Cryptography::Xml::EncryptionProperty::Target"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"112be5d5-b83d-6840-3b66-91383c8b1732","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography.Xml/EncryptionProperty.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EncryptionProperty class | Microsoft Docs","_op_ogTitle":"EncryptionProperty class","description":"Represents the &lt;EncryptionProperty&gt; element used in XML encryption. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.EncryptionProperty","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.encryptionproperty","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.encryptionproperty","fileRelativePath":"api/System.Security.Cryptography.Xml.EncryptionProperty.html"},"themesRelativePathToOutputRoot":"_themes/"}