{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">AsymmetricAlgorithm</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class AsymmetricAlgorithm : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">AsymmetricAlgorithm</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Asymmetric cryptographic algorithms, also known as public-key algorithms, require that both sender and receiver maintain a pair of related keys: a private key and a public key. Both keys are unique to the entity. The public key can be made available to anyone; this key is used for encoding data that is sent to a receiver. The private key must be kept private by the receiver; this key is used for decoding messages encoded using the receiver&#39;s public key. The <a class=\"xref\" href=\"system.security.cryptography.rsacryptoserviceprovider\" data-linktype=\"relative-path\">RSACryptoServiceProvider</a> class is an implementation of a public-key algorithm. For an in-depth discussion of public-key encryption and algorithms, see the &quot;Public-Key Encryption&quot; section in <a href=\"../topic/cryptographic%20services\" data-linktype=\"relative-path\">Cryptographic Services</a>. For information about how to use the Strong Name tool (Sn.exe) to create key pairs, see <a href=\"../Topic/How%20to:%20Create%20a%20Public-Private%20Key%20Pair.md\" data-linktype=\"relative-path\">How to: Create a Public-Private Key Pair</a>.  </p>\n<p> You can use public-key systems to form digital signatures. Digital signatures are used to help to protect the integrity of data. For example, to use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest. The sender then encrypts the message digest with the sender&#39;s private key to create the sender&#39;s personal signature. Upon receiving the message and signature, the receiver decrypts the signature using the sender&#39;s public key to recover the message digest and hashes the message using the same hash algorithm that the sender used. If the message digest that the receiver computes matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit. Note that anyone can verify a signature, because the sender&#39;s public key is common knowledge. This technique does not retain the secrecy of the message; for the message to be secret, it must also be encrypted.  </p>\n<p> The .NET Framework provides the following classes that implement digital signature algorithms: <a class=\"xref\" href=\"system.security.cryptography.dsacryptoserviceprovider\" data-linktype=\"relative-path\">DSACryptoServiceProvider</a>, <a class=\"xref\" href=\"system.security.cryptography.rsacryptoserviceprovider\" data-linktype=\"relative-path\">RSACryptoServiceProvider</a>, <a class=\"xref\" href=\"system.security.cryptography.ecdsa\" data-linktype=\"relative-path\">ECDsa</a> (base class), and <a class=\"xref\" href=\"system.security.cryptography.ecdsacng\" data-linktype=\"relative-path\">ECDsaCng</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography\" data-linktype=\"relative-path\">System.Security.Cryptography</a> namespace provides concrete classes for <a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a> and <a class=\"xref\" href=\"system.security.cryptography.dsa\" data-linktype=\"relative-path\">DSA</a> only.  </p>\n<p> To learn how to use the RSA algorithm to encrypt and decrypt XML data, and create and verify XML digital signatures, see these articles:  </p>\n<ul>\n<li><p><a href=\"../Topic/How%20to:%20Encrypt%20XML%20Elements%20with%20Asymmetric%20Keys.md\" data-linktype=\"relative-path\">How to: Encrypt XML Elements with Asymmetric Keys</a>  </p>\n</li>\n<li><p><a href=\"../Topic/How%20to:%20Decrypt%20XML%20Elements%20with%20Asymmetric%20Keys.md\" data-linktype=\"relative-path\">How to: Decrypt XML Elements with Asymmetric Keys</a>  </p>\n</li>\n<li><p><a href=\"../Topic/How%20to:%20Sign%20XML%20Documents%20with%20Digital%20Signatures.md\" data-linktype=\"relative-path\">How to: Sign XML Documents with Digital Signatures</a>  </p>\n</li>\n<li><p><a href=\"../Topic/How%20to:%20Verify%20the%20Digital%20Signatures%20of%20XML%20Documents.md\" data-linktype=\"relative-path\">How to: Verify the Digital Signatures of XML Documents</a></p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AsymmetricAlgorithm()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected AsymmetricAlgorithm ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The implementation of the derived class is not valid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You cannot create an instance of an abstract class. Application code creates a new instance of a derived class. The <a class=\"xref\" href=\"system.security.cryptography.rsacryptoserviceprovider\" data-linktype=\"relative-path\">RSACryptoServiceProvider</a> and <a class=\"xref\" href=\"system.security.cryptography.dsacryptoserviceprovider\" data-linktype=\"relative-path\">DSACryptoServiceProvider</a> classes are the only currently supported implementations.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_KeySizeValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeySizeValue</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the size, in bits, of the key modulus used by the asymmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected int KeySizeValue;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm#System_Security_Cryptography_AsymmetricAlgorithm_LegalKeySizes_\" data-linktype=\"relative-path\">LegalKeySizes</a> property.  </p>\n<p> This field is accessed through the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm#System_Security_Cryptography_AsymmetricAlgorithm_KeySize_\" data-linktype=\"relative-path\">KeySize</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_LegalKeySizesValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LegalKeySizesValue</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the key sizes that are supported by the asymmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The asymmetric algorithm supports only key sizes that match an entry in this array.  </p>\n<p> This field is accessed through the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm#System_Security_Cryptography_AsymmetricAlgorithm_LegalKeySizes_\" data-linktype=\"relative-path\">LegalKeySizes</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_KeyExchangeAlgorithm\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyExchangeAlgorithm</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, gets the name of the key exchange algorithm. Otherwise, throws an <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string KeyExchangeAlgorithm { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the key exchange algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_KeySize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeySize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual int KeySize { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The size, in bits, of the key modulus used by the asymmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The key modulus size is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm#System_Security_Cryptography_AsymmetricAlgorithm_LegalKeySizes_\" data-linktype=\"relative-path\">LegalKeySizes</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_LegalKeySizes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LegalKeySizes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the key sizes that are supported by the asymmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.keysizes\" data-linktype=\"relative-path\">KeySizes</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array that contains the key sizes supported by the asymmetric algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The asymmetric algorithm supports only key sizes that match an entry in this array.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_SignatureAlgorithm\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SignatureAlgorithm</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When implemented in a derived class, gets the name of the signature algorithm. Otherwise, always throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string SignatureAlgorithm { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the signature algorithm.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_Clear\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clear()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases all resources used by the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Clear ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is a simple call to the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method.  </p>\n<p> Calling <code>Dispose</code> allows the resources used by the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> class to be reallocated for other purposes. For more information about <code>Dispose</code>, see <a href=\"../topic/cleaning%20up%20unmanaged%20resources\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_Create\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Create()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a default cryptographic object used to perform the asymmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Security.Cryptography.AsymmetricAlgorithm Create ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.security.cryptography.rsacryptoserviceprovider\" data-linktype=\"relative-path\">RSACryptoServiceProvider</a> instance, unless the default settings have been changed with the <a href=\"../Topic/%3CcryptoClass%3E%20Element.md\" data-linktype=\"relative-path\"><cryptoclass> element</cryptoclass></a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_Create_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Create(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an instance of the specified implementation of an asymmetric algorithm.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>algName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The asymmetric algorithm implementation to use. The following table shows the valid values for the <code>algName</code> parameter and the algorithms they map to.  </p>\n <table><thead><tr><th> Parameter value<br>\n </th><th> Implements<br>\n </th></tr></thead><tbody><tr><td> System.Security.Cryptography.AsymmetricAlgorithm<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></td></tr><tr><td> RSA<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a></td></tr><tr><td> System.Security.Cryptography.RSA<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.rsa\" data-linktype=\"relative-path\">RSA</a></td></tr><tr><td> DSA<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.dsa\" data-linktype=\"relative-path\">DSA</a></td></tr><tr><td> System.Security.Cryptography.DSA<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.dsa\" data-linktype=\"relative-path\">DSA</a></td></tr><tr><td> ECDsa<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.ecdsa\" data-linktype=\"relative-path\">ECDsa</a></td></tr><tr><td> ECDsaCng<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.ecdsacng\" data-linktype=\"relative-path\">ECDsaCng</a></td></tr><tr><td> System.Security.Cryptography.ECDsaCng<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.ecdsacng\" data-linktype=\"relative-path\">ECDsaCng</a></td></tr><tr><td> ECDH<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellman\" data-linktype=\"relative-path\">ECDiffieHellman</a></td></tr><tr><td> ECDiffieHellman<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellman\" data-linktype=\"relative-path\">ECDiffieHellman</a></td></tr><tr><td> ECDiffieHellmanCng<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellmancng\" data-linktype=\"relative-path\">ECDiffieHellmanCng</a></td></tr><tr><td> System.Security.Cryptography.ECDiffieHellmanCng<br>\n </td><td><a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellmancng\" data-linktype=\"relative-path\">ECDiffieHellmanCng</a></td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new instance of the specified asymmetric algorithm implementation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> was occupying.  </p>\n<p> For more information, see <a href=\"../topic/cleaning%20up%20unmanaged%20resources\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../topic/implementing%20a%20dispose%20method\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> class and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <code>Dispose()</code> method and the <code>Finalize</code> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <code>Finalize</code> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_FromXmlString_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromXmlString(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, reconstructs an <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> object from an XML string. Otherwise, throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void FromXmlString (string xmlString);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>xmlString</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The XML string to use to reconstruct the <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_AsymmetricAlgorithm_ToXmlString_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToXmlString(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, creates and returns an XML string representation of the current <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> object. Otherwise, throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string ToXmlString (bool includePrivateParameters);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>includePrivateParameters</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to include private parameters; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XML string encoding of the current <a class=\"xref\" href=\"system.security.cryptography.asymmetricalgorithm\" data-linktype=\"relative-path\">AsymmetricAlgorithm</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.AsymmetricAlgorithm.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.Clear\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.Create\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.KeySize\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-22 02:45 AM\">\r\n<meta name=\"document_id\" content=\"11b7d7b7-cf9a-ae9d-5c14-db46f430f1c6\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.AsymmetricAlgorithm\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.AsymmetricAlgorithm.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.AsymmetricAlgorithm","System.Security.Cryptography.AsymmetricAlgorithm..ctor","System.Security.Cryptography.AsymmetricAlgorithm.Clear","System.Security.Cryptography.AsymmetricAlgorithm.Create","System.Security.Cryptography.AsymmetricAlgorithm.Dispose","System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString","System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm","System.Security.Cryptography.AsymmetricAlgorithm.KeySize","System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue","System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes","System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue","System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm","System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.AsymmetricAlgorithm","System::Security::Cryptography::AsymmetricAlgorithm","System.Security.Cryptography.AsymmetricAlgorithm.#ctor","System::Security::Cryptography::AsymmetricAlgorithm::#ctor","System.Security.Cryptography.AsymmetricAlgorithm.Clear","System::Security::Cryptography::AsymmetricAlgorithm::Clear","System.Security.Cryptography.AsymmetricAlgorithm.Create","System::Security::Cryptography::AsymmetricAlgorithm::Create","System.Security.Cryptography.AsymmetricAlgorithm.Dispose","System::Security::Cryptography::AsymmetricAlgorithm::Dispose","System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString","System::Security::Cryptography::AsymmetricAlgorithm::FromXmlString","System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm","System::Security::Cryptography::AsymmetricAlgorithm::KeyExchangeAlgorithm","System.Security.Cryptography.AsymmetricAlgorithm.KeySize","System::Security::Cryptography::AsymmetricAlgorithm::KeySize","System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue","System::Security::Cryptography::AsymmetricAlgorithm::KeySizeValue","System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes","System::Security::Cryptography::AsymmetricAlgorithm::LegalKeySizes","System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue","System::Security::Cryptography::AsymmetricAlgorithm::LegalKeySizesValue","System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm","System::Security::Cryptography::AsymmetricAlgorithm::SignatureAlgorithm","System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString","System::Security::Cryptography::AsymmetricAlgorithm::ToXmlString"],"dev_langs":["csharp"],"updated_at":"2017-03-22 02:45 AM","document_id":"11b7d7b7-cf9a-ae9d-5c14-db46f430f1c6","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/xml/System.Security.Cryptography/AsymmetricAlgorithm.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AsymmetricAlgorithm class | Microsoft Docs","_op_ogTitle":"AsymmetricAlgorithm class","description":"Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.AsymmetricAlgorithm","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/api/system.security.cryptography.asymmetricalgorithm","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/api/system.security.cryptography.asymmetricalgorithm","fileRelativePath":"api/System.Security.Cryptography.AsymmetricAlgorithm.html"},"themesRelativePathToOutputRoot":"_themes/"}