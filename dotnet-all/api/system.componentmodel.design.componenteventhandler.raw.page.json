{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ComponentEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentAdding\" data-linktype=\"relative-path\">ComponentAdding</a>, <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentAdded\" data-linktype=\"relative-path\">ComponentAdded</a>, <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentRemoving\" data-linktype=\"relative-path\">ComponentRemoving</a>, and <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentRemoved\" data-linktype=\"relative-path\">ComponentRemoved</a> events raised for component-level events.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic delegate void ComponentEventHandler(object sender, ComponentEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">ComponentEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates registering a ComponentEventHandler and handling the <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentAdded\" data-linktype=\"relative-path\">ComponentAdded</a>, <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentAdding\" data-linktype=\"relative-path\">ComponentAdding</a>, <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentRemoved\" data-linktype=\"relative-path\">ComponentRemoved</a> and <a class=\"xref\" href=\"system.componentmodel.design.icomponentchangeservice#System_ComponentModel_Design_IComponentChangeService_ComponentRemoving\" data-linktype=\"relative-path\">ComponentRemoving</a> events.  </p>\n<pre><code class=\"lang-cpp\" name=\"ComponentEventHandlerExample#1\">public:\n   void LinkComponentEvent( IComponentChangeService^ changeService )\n   {\n      // Registers an event handler for the ComponentAdded,\n      // ComponentAdding, ComponentRemoved, and ComponentRemoving events.\n      changeService-&gt;ComponentAdded += gcnew ComponentEventHandler(\n         this, &amp;ComponentEventHandlerExample::OnComponentEvent );\n      changeService-&gt;ComponentAdding += gcnew ComponentEventHandler(\n         this, &amp;ComponentEventHandlerExample::OnComponentEvent );\n      changeService-&gt;ComponentRemoved += gcnew ComponentEventHandler(\n         this, &amp;ComponentEventHandlerExample::OnComponentEvent );\n      changeService-&gt;ComponentRemoving += gcnew ComponentEventHandler(\n         this, &amp;ComponentEventHandlerExample::OnComponentEvent );\n   }\n\nprivate:\n   void OnComponentEvent( Object^ sender, ComponentEventArgs^ e )\n   {\n      // Displays changed component information on the console.\n      if ( e-&gt;Component-&gt;Site != nullptr )\n      {\n         Console::WriteLine( &quot;Name of the component related to the event: &quot; +\n            e-&gt;Component-&gt;Site-&gt;Name );\n      }\n      Console::WriteLine( &quot;Type of the component related to the event: &quot; +\n         e-&gt;Component-&gt;GetType()-&gt;FullName );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ComponentEventHandlerExample#1\">public void LinkComponentEvent(IComponentChangeService changeService)\n{\n    // Registers an event handler for the ComponentAdded,\n    // ComponentAdding, ComponentRemoved, and ComponentRemoving events.\n    changeService.ComponentAdded += new ComponentEventHandler(this.OnComponentEvent);            \n    changeService.ComponentAdding += new ComponentEventHandler(this.OnComponentEvent);            \n    changeService.ComponentRemoved += new ComponentEventHandler(this.OnComponentEvent);            \n    changeService.ComponentRemoving += new ComponentEventHandler(this.OnComponentEvent);                        \n}\n\nprivate void OnComponentEvent(object sender, ComponentEventArgs e)\n{\n    // Displays changed component information on the console.            \n    if( e.Component.Site != null )\n        Console.WriteLine(&quot;Name of the component related to the event: &quot;+e.Component.Site.Name);      \n    Console.WriteLine(&quot;Type of the component related to the event: &quot;+e.Component.GetType().FullName);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ComponentEventHandlerExample#1\">Public Sub LinkComponentEvent(ByVal changeService As IComponentChangeService)\n    &#39; Registers an event handler for the ComponentAdded,\n    &#39; ComponentAdding, ComponentRemoved, and ComponentRemoving events.\n    AddHandler changeService.ComponentAdded, AddressOf Me.OnComponentEvent\n    AddHandler changeService.ComponentAdding, AddressOf Me.OnComponentEvent\n    AddHandler changeService.ComponentRemoved, AddressOf Me.OnComponentEvent\n    AddHandler changeService.ComponentRemoving, AddressOf Me.OnComponentEvent\nEnd Sub\n\nPrivate Sub OnComponentEvent(ByVal sender As Object, ByVal e As ComponentEventArgs)\n    &#39; Displays changed component information on the console.            \n    If (e.Component.Site IsNot Nothing) Then\n        Console.WriteLine((&quot;Name of the component related to the event: &quot; + e.Component.Site.Name))\n    End If\nEnd Sub\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a ComponentEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.ComponentEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ComponentEventHandler\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ComponentEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ComponentEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ComponentEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.ComponentEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"ec5dbcdd-9ec5-57bf-a324-c642b2322127\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the , , , and  events raised for component-level events.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.ComponentEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.ComponentEventHandler.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.ComponentEventHandler","System.ComponentModel.Design.ComponentEventHandler..ctor","System.ComponentModel.Design.ComponentEventHandler.Invoke","System.ComponentModel.Design.ComponentEventHandler.BeginInvoke","System.ComponentModel.Design.ComponentEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.ComponentEventHandler","System::ComponentModel::Design::ComponentEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"ec5dbcdd-9ec5-57bf-a324-c642b2322127","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.ComponentModel.Design/ComponentEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ComponentEventHandler delegate | Microsoft Docs","_op_ogTitle":"ComponentEventHandler delegate","description":"Represents the method that will handle the , , , and  events raised for component-level events.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.ComponentEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.componenteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.componenteventhandler","fileRelativePath":"api/System.ComponentModel.Design.ComponentEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}