{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">WindowsBuiltInRole</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies common roles to be used with <span class=\"xref\">stem.Security.Principal.WindowsPrincipal.IsInRole*</span>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic enum WindowsBuiltInRole</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">WindowsBuiltInRole</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example shows the use of the WindowsBuiltInRole enumeration.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">using System;\nusing System.Threading;\nusing System.Security.Permissions;\nusing System.Security.Principal;\n\nclass SecurityPrincipalDemo\n{\n    public static void DemonstrateWindowsBuiltInRoleEnum()\n    {\n        AppDomain myDomain = Thread.GetDomain();\n\n        myDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal);\n        WindowsPrincipal myPrincipal = (WindowsPrincipal)Thread.CurrentPrincipal;\n        Console.WriteLine(&quot;{0} belongs to: &quot;, myPrincipal.Identity.Name.ToString());\n        Array wbirFields = Enum.GetValues(typeof(WindowsBuiltInRole));\n        foreach (object roleName in wbirFields)\n        {\n            try\n            {\n                // Cast the role name to a RID represented by the WindowsBuildInRole value.\n                Console.WriteLine(&quot;{0}? {1}.&quot;, roleName,\n                    myPrincipal.IsInRole((WindowsBuiltInRole)roleName));\n                Console.WriteLine(&quot;The RID for this role is: &quot; + ((int)roleName).ToString());\n\n            }\n            catch (Exception)\n            {\n                Console.WriteLine(&quot;{0}: Could not obtain role for this RID.&quot;,\n                    roleName);\n            }\n        }\n        // Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Administrators&quot;));\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Users&quot;));\n        // Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator,\n           myPrincipal.IsInRole(WindowsBuiltInRole.Administrator));\n        // Get the role using the WellKnownSidType.\n        SecurityIdentifier sid = new SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, null);\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid));\n    }\n\n    public static void Main()\n    {\n        DemonstrateWindowsBuiltInRoleEnum();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">public:\n   static void DemonstrateWindowsBuiltInRoleEnum()\n   {\n      AppDomain^ myDomain = Thread::GetDomain();\n\n      myDomain-&gt;SetPrincipalPolicy( PrincipalPolicy::WindowsPrincipal );\n      WindowsPrincipal^ myPrincipal = dynamic_cast&lt;WindowsPrincipal^&gt;(Thread::CurrentPrincipal);\n\n      Console::WriteLine( &quot;{0} belongs to: &quot;, myPrincipal-&gt;Identity-&gt;Name );\n\n      Array^ wbirFields = Enum::GetValues( WindowsBuiltInRole::typeid );\n\n      for each ( Object^ roleName in wbirFields )\n      {\n         try\n         {\n            Console::WriteLine( &quot;{0}? {1}.&quot;, roleName,\n               myPrincipal-&gt;IsInRole(  *dynamic_cast&lt;WindowsBuiltInRole^&gt;(roleName) ) );\n         }\n         catch ( Exception^ ) \n         {\n            Console::WriteLine( &quot;{0}: Could not obtain role for this RID.&quot;,\n               roleName );\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">Imports System\nImports System.Threading\nImports System.Security.Permissions\nImports System.Security.Principal\n\nClass SecurityPrincipalDemo\n\n    Public Shared Sub DemonstrateWindowsBuiltInRoleEnum()\n        Dim myDomain As AppDomain = Thread.GetDomain()\n\n        myDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal)\n        Dim myPrincipal As WindowsPrincipal = CType(Thread.CurrentPrincipal, WindowsPrincipal)\n        Console.WriteLine(&quot;{0} belongs to: &quot;, myPrincipal.Identity.Name.ToString())\n        Dim wbirFields As Array = [Enum].GetValues(GetType(WindowsBuiltInRole))\n        Dim roleName As Object\n        For Each roleName In wbirFields\n            Try\n                &#39; Cast the role name to a RID represented by the WindowsBuildInRole value.\n                Console.WriteLine(&quot;{0}? {1}.&quot;, roleName, myPrincipal.IsInRole(CType(roleName, WindowsBuiltInRole)))\n                Console.WriteLine(&quot;The RID for this role is: &quot; + Fix(roleName).ToString())\n\n            Catch\n                Console.WriteLine(&quot;{0}: Could not obtain role for this RID.&quot;, roleName)\n            End Try\n        Next roleName\n        &#39; Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Administrators&quot;))\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Users&quot;))\n        &#39; Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator, myPrincipal.IsInRole(WindowsBuiltInRole.Administrator))\n        &#39; Get the role using the WellKnownSidType.\n        Dim sid As New SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, Nothing)\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid))\n\n    End Sub &#39;DemonstrateWindowsBuiltInRoleEnum\n\n    Public Shared Sub Main()\n        DemonstrateWindowsBuiltInRoleEnum()\n\n    End Sub &#39;Main\nEnd Class &#39;SecurityPrincipalDemo \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>These roles represent the local Windows groups common to most installations of Windows NT, Windows 2000 and Windows XP.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_AccountOperator\">\r\n      \t\t\t<span class=\"lang-csharp\">AccountOperator</span>\r\n      \t</td>\r\n      \t<td><p>Account operators manage the user accounts on a computer or domain.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_Administrator\">\r\n      \t\t\t<span class=\"lang-csharp\">Administrator</span>\r\n      \t</td>\r\n      \t<td><p>Administrators have complete and unrestricted access to the computer or domain.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_BackupOperator\">\r\n      \t\t\t<span class=\"lang-csharp\">BackupOperator</span>\r\n      \t</td>\r\n      \t<td><p>Backup operators can override security restrictions for the sole purpose of backing up or restoring files.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_Guest\">\r\n      \t\t\t<span class=\"lang-csharp\">Guest</span>\r\n      \t</td>\r\n      \t<td><p>Guests are more restricted than users.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_PowerUser\">\r\n      \t\t\t<span class=\"lang-csharp\">PowerUser</span>\r\n      \t</td>\r\n      \t<td><p>Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_PrintOperator\">\r\n      \t\t\t<span class=\"lang-csharp\">PrintOperator</span>\r\n      \t</td>\r\n      \t<td><p>Print operators can take control of a printer.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_Replicator\">\r\n      \t\t\t<span class=\"lang-csharp\">Replicator</span>\r\n      \t</td>\r\n      \t<td><p>Replicators support file replication in a domain.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_SystemOperator\">\r\n      \t\t\t<span class=\"lang-csharp\">SystemOperator</span>\r\n      \t</td>\r\n      \t<td><p>System operators manage a particular computer.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Principal_WindowsBuiltInRole_User\">\r\n      \t\t\t<span class=\"lang-csharp\">User</span>\r\n      \t</td>\r\n      \t<td><p>Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Principal.WindowsBuiltInRole.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.AccountOperator\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.Administrator\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.BackupOperator\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.Guest\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.PowerUser\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.PrintOperator\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.Replicator\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.SystemOperator\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsBuiltInRole.User\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"080f1626-1f00-86d1-7dd2-a33248e8d7d8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies common roles to be used with .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.principal/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Principal.WindowsBuiltInRole\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Principal.WindowsBuiltInRole.yml","open_to_public_contributors":false,"api_name":["System.Security.Principal.WindowsBuiltInRole","System.Security.Principal.WindowsBuiltInRole.AccountOperator","System.Security.Principal.WindowsBuiltInRole.Administrator","System.Security.Principal.WindowsBuiltInRole.BackupOperator","System.Security.Principal.WindowsBuiltInRole.Guest","System.Security.Principal.WindowsBuiltInRole.PowerUser","System.Security.Principal.WindowsBuiltInRole.PrintOperator","System.Security.Principal.WindowsBuiltInRole.Replicator","System.Security.Principal.WindowsBuiltInRole.SystemOperator","System.Security.Principal.WindowsBuiltInRole.User"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Principal.WindowsBuiltInRole","System::Security::Principal::WindowsBuiltInRole","System.Security.Principal.WindowsBuiltInRole.AccountOperator","System::Security::Principal::WindowsBuiltInRole::AccountOperator","System.Security.Principal.WindowsBuiltInRole.Administrator","System::Security::Principal::WindowsBuiltInRole::Administrator","System.Security.Principal.WindowsBuiltInRole.BackupOperator","System::Security::Principal::WindowsBuiltInRole::BackupOperator","System.Security.Principal.WindowsBuiltInRole.Guest","System::Security::Principal::WindowsBuiltInRole::Guest","System.Security.Principal.WindowsBuiltInRole.PowerUser","System::Security::Principal::WindowsBuiltInRole::PowerUser","System.Security.Principal.WindowsBuiltInRole.PrintOperator","System::Security::Principal::WindowsBuiltInRole::PrintOperator","System.Security.Principal.WindowsBuiltInRole.Replicator","System::Security::Principal::WindowsBuiltInRole::Replicator","System.Security.Principal.WindowsBuiltInRole.SystemOperator","System::Security::Principal::WindowsBuiltInRole::SystemOperator","System.Security.Principal.WindowsBuiltInRole.User","System::Security::Principal::WindowsBuiltInRole::User"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"080f1626-1f00-86d1-7dd2-a33248e8d7d8","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WindowsBuiltInRole enum | Microsoft Docs","_op_ogTitle":"WindowsBuiltInRole enum","description":"Specifies common roles to be used with .\n","toc_asset_id":"api/_splitted/System.Security.Principal/toc.json","toc_rel":"_splitted/System.Security.Principal/toc.json","source_url":"","ms.assetid":"System.Security.Principal.WindowsBuiltInRole","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsbuiltinrole","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsbuiltinrole","fileRelativePath":"api/System.Security.Principal.WindowsBuiltInRole.html"},"themesRelativePathToOutputRoot":"_themes/"}