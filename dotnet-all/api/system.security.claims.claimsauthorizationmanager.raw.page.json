{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ClaimsAuthorizationManager</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the base implementation for a claims authorization manager.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class ClaimsAuthorizationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div><span class=\"lang-csharp\">ClaimsAuthorizationManager</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ClaimsAuthorizationManager class provides the base implementation for a claims authorization manager. A claims authorization manager can be used in the following two scenarios:  </p>\n<ul>\n<li><p>In web-based applications and services, a claims authorization manager  can be added to the processing pipeline to provide an extensibility point from which you can authorize access to a resource according to the value of incoming claims before the application code that actually implements the requested resource is called.  </p>\n</li>\n<li><p>When you use the <a class=\"xref\" href=\"system.identitymodel.services.claimsprincipalpermission\" data-linktype=\"relative-path\">ClaimsPrincipalPermission</a> class or the <a class=\"xref\" href=\"system.identitymodel.services.claimsprincipalpermissionattribute\" data-linktype=\"relative-path\">ClaimsPrincipalPermissionAttribute</a> class to perform either imperative or declarative claims-based access checks in your code, the claims authorization manager that is configured for your application is called by the system to perform the check. Claims-based access checks can be performed in both web-based applications and desktop applications.  </p>\n<p>The default implementation provided by the ClaimsAuthorizationManager class authorizes access for each claim presented; however, you can derive from this class and override the <a class=\"xref\" href=\"system.security.claims.claimsauthorizationmanager#System_Security_Claims_ClaimsAuthorizationManager_CheckAccess_\" data-linktype=\"relative-path\">CheckAccess</a> method to provide your own authorization logic.  </p>\n<p>The use of a claims authorization manager is optional. You can configure your application to use a claims authorization manager either programmatically by using the <a class=\"xref\" href=\"system.identitymodel.configuration.identityconfiguration\" data-linktype=\"relative-path\">IdentityConfiguration</a> class or declaratively, by specifying the <a href=\"../Topic/%3CclaimsAuthorizationManager%3E.md\" data-linktype=\"relative-path\">&amp;lt;claimsAuthorizationManager&amp;gt;</a> element, which is a child element of the <a href=\"../Topic/%3CidentityConfiguration%3E.md\" data-linktype=\"relative-path\">&amp;lt;identityConfiguration&amp;gt;</a> element in your application configuration file. If your application is a web site or a web application hosted in Internet Information Services (IIS), you must also add the <a class=\"xref\" href=\"system.identitymodel.services.claimsauthorizationmodule\" data-linktype=\"relative-path\">ClaimsAuthorizationModule</a> in the ASP.NET HTTP Modules collection.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> When you use the <a class=\"xref\" href=\"system.identitymodel.services.claimsprincipalpermission\" data-linktype=\"relative-path\">ClaimsPrincipalPermission</a> class or the <a class=\"xref\" href=\"system.identitymodel.services.claimsprincipalpermissionattribute\" data-linktype=\"relative-path\">ClaimsPrincipalPermissionAttribute</a> class, the claims authorization manager that is used to perform the access check is the one that is specified in the identity configuration under the <a class=\"xref\" href=\"system.identitymodel.services.federatedauthentication#System_IdentityModel_Services_FederatedAuthentication_FederationConfiguration_\" data-linktype=\"relative-path\">FederationConfiguration</a> property. In a configuration file, it is the <code>&lt;identityConfiguration&gt;</code> section that is referenced from the default <code>&lt;federationConfiguration&gt;</code> element. This is true even for Windows Communication Foundation (WCF) services and desktop applications.  </p>\n</div>\n<p> The ClaimsAuthorizationManager base class does not take any additional configuration; however, you can override the <a class=\"xref\" href=\"system.security.claims.claimsauthorizationmanager#System_Security_Claims_ClaimsAuthorizationManager_LoadCustomConfiguration_\" data-linktype=\"relative-path\">LoadCustomConfiguration</a> in derived classes to provide initialization of your claims authorization manager from child elements of the <code>&lt;claimsAuthorizationElement&gt;</code>. The typical scenario is to use these child elements to specify authorization policies which determine which claim types and values are required in order to gain access to which resource. This is not a hard requirement, though you are free to define whatever usage and syntax make sense for your implementation.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Claims_ClaimsAuthorizationManager__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClaimsAuthorizationManager()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.claims.claimsauthorizationmanager\" data-linktype=\"relative-path\">ClaimsAuthorizationManager</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ClaimsAuthorizationManager ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Claims_ClaimsAuthorizationManager_CheckAccess_System_Security_Claims_AuthorizationContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckAccess(AuthorizationContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When implemented in a derived class, checks authorization for the subject in the specified context to perform the specified action on the specified resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CheckAccess (System.Security.Claims.AuthorizationContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.authorizationcontext\" data-linktype=\"relative-path\">AuthorizationContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The authorization context that contains the subject, resource, and action for which authorization is to be checked.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the subject is authorized to perform the specified action on the specified resource; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The base implementation always returns <code>true</code>, which authorizes access. You can override this method in a derived class to authorize access based on the requirements of your RP application. If this method returns <code>false</code>, Windows Identity Foundation (WIF) returns an unauthorized error to the caller; otherwise, execution is passed to the RP application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Claims_ClaimsAuthorizationManager_LoadCustomConfiguration_System_Xml_XmlNodeList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadCustomConfiguration(XmlNodeList)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, loads custom configuration from XML.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nodelist</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The custom configuration elements. Each node in the list is of type <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.claims.claimsauthenticationmanager#System_Security_Claims_ClaimsAuthenticationManager_LoadCustomConfiguration_\" data-linktype=\"relative-path\">LoadCustomConfiguration</a> method is called by the configuration infrastructure. When this method is called, the <code>nodelist</code> will contain the top-level child elements of the <a href=\"../Topic/%3CclaimsAuthorizationManager%3E.md\" data-linktype=\"relative-path\">&amp;lt;claimsAuthorizationManager&amp;gt;</a> element from the configuration file. Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class. If no child elements appear under the <code>&lt;claimsAuthorizationManager&gt;</code> element in the configuration file, this method is not called.  </p>\n<p> The default implementation throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>. Override this method in your derived class to enable initialization of your claims authorization manager from a configuration file. Typically, the configuration elements are used to express an authorization policy; however, you can define elements and use them in any way that makes sense based on the requirements of your application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Claims.ClaimsAuthorizationManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthorizationManager\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthorizationManager..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthorizationManager.CheckAccess\">\r\n<meta name=\"APIName\" content=\"System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration\">\r\n<meta name=\"APILocation\" content=\"System.IdentityModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-22 03:41 AM\">\r\n<meta name=\"document_id\" content=\"066aa68e-c495-fcf3-6e35-7f25e1545b5a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the base implementation for a claims authorization manager.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.claims/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Claims.ClaimsAuthorizationManager\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Claims.ClaimsAuthorizationManager.yml","open_to_public_contributors":false,"api_name":["System.Security.Claims.ClaimsAuthorizationManager","System.Security.Claims.ClaimsAuthorizationManager..ctor","System.Security.Claims.ClaimsAuthorizationManager.CheckAccess","System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration"],"api_location":["System.IdentityModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Claims.ClaimsAuthorizationManager","System::Security::Claims::ClaimsAuthorizationManager","System.Security.Claims.ClaimsAuthorizationManager.#ctor","System::Security::Claims::ClaimsAuthorizationManager::#ctor","System.Security.Claims.ClaimsAuthorizationManager.CheckAccess","System::Security::Claims::ClaimsAuthorizationManager::CheckAccess","System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration","System::Security::Claims::ClaimsAuthorizationManager::LoadCustomConfiguration"],"dev_langs":["csharp"],"updated_at":"2017-03-22 03:41 AM","document_id":"066aa68e-c495-fcf3-6e35-7f25e1545b5a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/xml/System.Security.Claims/ClaimsAuthorizationManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ClaimsAuthorizationManager class | Microsoft Docs","_op_ogTitle":"ClaimsAuthorizationManager class","description":"Defines the base implementation for a claims authorization manager.\n","toc_asset_id":"api/_splitted/System.Security.Claims/toc.json","toc_rel":"_splitted/System.Security.Claims/toc.json","source_url":"","ms.assetid":"System.Security.Claims.ClaimsAuthorizationManager","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/api/system.security.claims.claimsauthorizationmanager","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/api/system.security.claims.claimsauthorizationmanager","fileRelativePath":"api/System.Security.Claims.ClaimsAuthorizationManager.html"},"themesRelativePathToOutputRoot":"_themes/"}