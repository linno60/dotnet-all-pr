{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">StringAlignment</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the alignment of a text string relative to its layout rectangle.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum StringAlignment</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">StringAlignment</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_LineAlignment_\" data-linktype=\"relative-path\">LineAlignment</a> and <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_Alignment_\" data-linktype=\"relative-path\">Alignment</a> properties and the StringAlignment enumeration to align strings. This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowLineAndAlignment</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> .  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Misc2#1\">private void ShowLineAndAlignment(PaintEventArgs e)\n{\n\n    // Construct a new Rectangle .\n    Rectangle  displayRectangle = \n        new Rectangle (new Point(40, 40), new Size (80, 80));\n\n    // Construct 2 new StringFormat objects\n    StringFormat format1 = new StringFormat(StringFormatFlags.NoClip);\n    StringFormat format2 = new StringFormat(format1);\n\n    // Set the LineAlignment and Alignment properties for\n    // both StringFormat objects to different values.\n    format1.LineAlignment = StringAlignment.Near;\n    format1.Alignment = StringAlignment.Center;\n    format2.LineAlignment = StringAlignment.Center;\n    format2.Alignment = StringAlignment.Far;\n\n    // Draw the bounding rectangle and a string for each\n    // StringFormat object.\n    e.Graphics.DrawRectangle(Pens.Black, displayRectangle);\n    e.Graphics.DrawString(&quot;Showing Format1&quot;, this.Font, \n        Brushes.Red, (RectangleF)displayRectangle, format1);\n    e.Graphics.DrawString(&quot;Showing Format2&quot;, this.Font, \n        Brushes.Red, (RectangleF)displayRectangle, format2);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Misc2#1\">Private Sub ShowLineAndAlignment(ByVal e As PaintEventArgs)\n\n    &#39; Construct a new Rectangle.\n    Dim displayRectangle _\n        As New Rectangle(New Point(40, 40), New Size(80, 80))\n\n    &#39; Construct two new StringFormat objects\n    Dim format1 As New StringFormat(StringFormatFlags.NoClip)\n    Dim format2 As New StringFormat(format1)\n\n    &#39; Set the LineAlignment and Alignment properties for\n    &#39; both StringFormat objects to different values.\n    format1.LineAlignment = StringAlignment.Near\n    format1.Alignment = StringAlignment.Center\n    format2.LineAlignment = StringAlignment.Center\n    format2.Alignment = StringAlignment.Far\n\n    &#39; Draw the bounding rectangle and a string for each\n    &#39; StringFormat object.\n    e.Graphics.DrawRectangle(Pens.Black, displayRectangle)\n    e.Graphics.DrawString(&quot;Showing Format1&quot;, Me.Font, Brushes.Red, _\n        RectangleF.op_Implicit(displayRectangle), format1)\n    e.Graphics.DrawString(&quot;Showing Format2&quot;, Me.Font, Brushes.Red, _\n        RectangleF.op_Implicit(displayRectangle), format2)\nEnd Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Misc2#1\">private:\n   void ShowLineAndAlignment( PaintEventArgs^ e )\n   {\n      // Construct a new Rectangle .\n      Rectangle displayRectangle = Rectangle(Point(40,40),System::Drawing::Size( 80, 80 ));\n      \n      // Construct 2 new StringFormat objects\n      StringFormat^ format1 = gcnew StringFormat( StringFormatFlags::NoClip );\n      StringFormat^ format2 = gcnew StringFormat( format1 );\n      \n      // Set the LineAlignment and Alignment properties for\n      // both StringFormat objects to different values.\n      format1-&gt;LineAlignment = StringAlignment::Near;\n      format1-&gt;Alignment = StringAlignment::Center;\n      format2-&gt;LineAlignment = StringAlignment::Center;\n      format2-&gt;Alignment = StringAlignment::Far;\n      \n      // Draw the bounding rectangle and a string for each\n      // StringFormat object.\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, displayRectangle );\n      e-&gt;Graphics-&gt;DrawString( &quot;Showing Format1&quot;, this-&gt;Font, Brushes::Red, displayRectangle, format1 );\n      e-&gt;Graphics-&gt;DrawString( &quot;Showing Format2&quot;, this-&gt;Font, Brushes::Red, displayRectangle, format2 );\n   }\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When used with the <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_LineAlignment_\" data-linktype=\"relative-path\">LineAlignment</a> property, this enumeration sets the vertical alignment for a drawn string. When used with the <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property, this enumeration sets the horizontal alignment.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Drawing_StringAlignment_Center\">\r\n      \t\t\t<span class=\"lang-csharp\">Center</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that text is aligned in the center of the layout rectangle.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringAlignment_Far\">\r\n      \t\t\t<span class=\"lang-csharp\">Far</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that text is aligned far from the origin position of the layout rectangle. In a left-to-right layout, the far position is right. In a right-to-left layout, the far position is left.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringAlignment_Near\">\r\n      \t\t\t<span class=\"lang-csharp\">Near</span>\r\n      \t</td>\r\n      \t<td><p>Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.StringAlignment.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringAlignment\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringAlignment.Center\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringAlignment.Far\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringAlignment.Near\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"d92f906b-4864-7465-f856-f5b433e93cec\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the alignment of a text string relative to its layout rectangle.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.drawing/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.StringAlignment\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.StringAlignment.yml","open_to_public_contributors":false,"api_name":["System.Drawing.StringAlignment","System.Drawing.StringAlignment.Center","System.Drawing.StringAlignment.Far","System.Drawing.StringAlignment.Near"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.StringAlignment","System::Drawing::StringAlignment","System.Drawing.StringAlignment.Center","System::Drawing::StringAlignment::Center","System.Drawing.StringAlignment.Far","System::Drawing::StringAlignment::Far","System.Drawing.StringAlignment.Near","System::Drawing::StringAlignment::Near"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"d92f906b-4864-7465-f856-f5b433e93cec","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Drawing/StringAlignment.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StringAlignment enum | Microsoft Docs","_op_ogTitle":"StringAlignment enum","description":"Specifies the alignment of a text string relative to its layout rectangle.\n","toc_asset_id":"api/_splitted/System.Drawing/toc.json","toc_rel":"_splitted/System.Drawing/toc.json","source_url":"","ms.assetid":"System.Drawing.StringAlignment","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.stringalignment","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.stringalignment","fileRelativePath":"api/System.Drawing.StringAlignment.html"},"themesRelativePathToOutputRoot":"_themes/"}