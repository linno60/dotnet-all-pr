{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IMethodReturnMessage</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the method call return message interface.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface IMethodReturnMessage : System.Runtime.Remoting.Messaging.IMethodMessage</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example code shows a custom proxy that overrides <code>RealProxy.Invoke</code> in order to write the return message information to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"IMethodReturnMessage_ReturnValue#1\">[System::Security::Permissions::SecurityPermissionAttribute\n(System::Security::Permissions::SecurityAction::LinkDemand, \nFlags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n[System::Security::Permissions::SecurityPermissionAttribute\n(System::Security::Permissions::SecurityAction::InheritanceDemand, \nFlags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\npublic ref class MyProxy: public RealProxy\n{\nprivate:\n   String^ stringUri;\n   MarshalByRefObject^ myMarshalByRefObject;\n\npublic:\n   MyProxy( Type^ myType ) : RealProxy( myType )\n   {\n      myMarshalByRefObject = dynamic_cast&lt;MarshalByRefObject^&gt;(Activator::CreateInstance( myType ));\n      ObjRef^ myObject = RemotingServices::Marshal( myMarshalByRefObject );\n      stringUri = myObject-&gt;URI;\n   }\n\n   virtual IMessage^ Invoke( IMessage^ myMessage ) override\n   {\n      IMethodCallMessage^ myCallMessage = (IMethodCallMessage^)( myMessage );\n\n      IMethodReturnMessage^ myIMethodReturnMessage =\n         RemotingServices::ExecuteMessage( myMarshalByRefObject, myCallMessage );\n\n      Console::WriteLine( &quot;Method name : {0}&quot;, myIMethodReturnMessage-&gt;MethodName );\n      Console::WriteLine( &quot;The return value is : {0}&quot;, myIMethodReturnMessage-&gt;ReturnValue );\n\n      // Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n      int myArgOutCount = myIMethodReturnMessage-&gt;OutArgCount;\n      Console::WriteLine( &quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : {0}&quot;,\n         myIMethodReturnMessage-&gt;OutArgCount );\n      // Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n      for ( int i = 0; i &lt; myArgOutCount; i++ )\n      {\n         Console::WriteLine( &quot;Name of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage-&gt;GetOutArgName( i ) );\n         Console::WriteLine( &quot;Value of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage-&gt;GetOutArg( i ) );\n      }\n      Console::WriteLine();\n      array&lt;Object^&gt;^myObjectArray = myIMethodReturnMessage-&gt;OutArgs;\n      for ( int i = 0; i &lt; myObjectArray-&gt;Length; i++ )\n         Console::WriteLine( &quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;,\n            i, myObjectArray[ i ] );\n      return myIMethodReturnMessage;\n   }\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"IMethodReturnMessage_ReturnValue#1\">&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class MyProxy\n   Inherits RealProxy\n   Private stringUri As String\n   Private myMarshalByRefObject As MarshalByRefObject\n   \n   Public Sub New(myType As Type)\n      MyBase.New(myType)\n      myMarshalByRefObject = CType(Activator.CreateInstance(myType), MarshalByRefObject)\n      Dim myObject As ObjRef = RemotingServices.Marshal(myMarshalByRefObject)\n      stringUri = myObject.URI\n   End Sub &#39;New\n   \n   Public Overrides Function Invoke(myMessage As IMessage) As IMessage\n      Dim myCallMessage As IMethodCallMessage = CType(myMessage, IMethodCallMessage)\n\n      Dim myIMethodReturnMessage As IMethodReturnMessage = RemotingServices. _\n         ExecuteMessage(myMarshalByRefObject, myCallMessage)\n\n      Console.WriteLine(&quot;Method name : &quot; + myIMethodReturnMessage.MethodName)\n      Console.WriteLine(&quot;The return value is : &quot; + myIMethodReturnMessage.ReturnValue)\n      \n      &#39; Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n      Dim myArgOutCount As Integer = myIMethodReturnMessage.OutArgCount\n      Console.WriteLine(&quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : &quot; + _\n         myIMethodReturnMessage.OutArgCount.ToString())\n      &#39; Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n      Dim i As Integer\n      For i = 0 To myArgOutCount - 1\n         Console.WriteLine(&quot;Name of argument {0} is &#39;{1}&#39;.&quot;, i, _\n            myIMethodReturnMessage.GetOutArgName(i))\n         Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39;.&quot;, i, _\n            myIMethodReturnMessage.GetOutArg(i))\n      Next i\n      Console.WriteLine()\n      Dim myObjectArray As Object() = myIMethodReturnMessage.OutArgs\n      For i = 0 To myObjectArray.Length - 1\n         Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;, i, myObjectArray(i))\n      Next i\n      Return myIMethodReturnMessage\n   End Function &#39;Invoke\nEnd Class &#39;MyProxy\n</code></pre><pre><code class=\"lang-cs\" name=\"IMethodReturnMessage_ReturnValue#1\">[PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\npublic class MyProxy : RealProxy\n{\n   String stringUri;\n   MarshalByRefObject myMarshalByRefObject;\n\n   public MyProxy(Type myType): base(myType)\n   {\n      myMarshalByRefObject = (MarshalByRefObject)Activator.CreateInstance(myType);\n      ObjRef myObject = RemotingServices.Marshal(myMarshalByRefObject);\n      stringUri = myObject.URI;\n   }\n\n   public override IMessage Invoke(IMessage myMessage)\n   {\n      IMethodCallMessage myCallMessage = (IMethodCallMessage)myMessage;\n\n      IMethodReturnMessage myIMethodReturnMessage =\n         RemotingServices.ExecuteMessage(myMarshalByRefObject, myCallMessage);\n\n      Console.WriteLine(&quot;Method name : &quot; + myIMethodReturnMessage.MethodName);\n      Console.WriteLine(&quot;The return value is : &quot; + myIMethodReturnMessage.ReturnValue);\n\n      // Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n      int myArgOutCount = myIMethodReturnMessage.OutArgCount;\n      Console.WriteLine(&quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : &quot; +\n         myIMethodReturnMessage.OutArgCount);\n      // Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n      for(int i = 0; i &lt; myArgOutCount; i++)\n      {\n         Console.WriteLine(&quot;Name of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage.GetOutArgName(i));\n         Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage.GetOutArg(i));\n      }\n      Console.WriteLine();\n      object[] myObjectArray = myIMethodReturnMessage.OutArgs; \n      for(int i = 0; i &lt; myObjectArray.Length; i++)\n         Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;,\n            i, myObjectArray[i]);\n      return myIMethodReturnMessage;\n   }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A method call return message represents the response to a method call on an object at the end of the message sink. An IMethodReturnMessage is generated as a result of a method called on a remote object, and is used to return the results of the method call back to the caller.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_Exception_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_Exception\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Exception</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the exception thrown during the method call.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Exception Exception { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The exception object for the method call, or <code>null</code> if the method did not throw an exception.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgCount_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgCount\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OutArgCount</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of arguments in the method call marked as <code>ref</code> or <code>out</code> parameters.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int OutArgCount { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of arguments in the method call marked as <code>ref</code> or <code>out</code> parameters.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgs_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgs\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OutArgs</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object[] OutArgs { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Although the OutArgs property is redundant since the same functionality can be achieved through the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage#System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgCount_\" data-linktype=\"relative-path\">OutArgCount</a> field and <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage#System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArg_\" data-linktype=\"relative-path\">GetOutArg</a> method, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> If <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage#System_Runtime_Remoting_Messaging_IMethodReturnMessage_Exception_\" data-linktype=\"relative-path\">Exception</a> is not <code>null</code>, a <a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">System.IndexOutOfRangeException</a> exception is thrown when OutArgs is accessed.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_ReturnValue_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_ReturnValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReturnValue</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the return value of the method call.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object ReturnValue { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value of the method call.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArg_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArg_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOutArg(Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetOutArg (int argNum);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>argNum</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of the requested argument.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitycriticalattribute\" title=\"System.Security.SecurityCriticalAttribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArgName_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArgName_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetOutArgName(Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the name of the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string GetOutArgName (int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of the requested argument name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The argument name, or <code>null</code> if the current method is not implemented.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitycriticalattribute\" title=\"System.Security.SecurityCriticalAttribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Messaging.IMethodReturnMessage.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.Exception\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArg\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArgName\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgCount\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgs\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.ReturnValue\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"af88905c-671b-625e-d4bf-2a7ac6f90a13\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the method call return message interface.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.remoting.messaging/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.Remoting.Messaging.IMethodReturnMessage.yml","open_to_public_contributors":false,"api_name":["System.Runtime.Remoting.Messaging.IMethodReturnMessage","System.Runtime.Remoting.Messaging.IMethodReturnMessage.Exception","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArg","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArgName","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgCount","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgs","System.Runtime.Remoting.Messaging.IMethodReturnMessage.ReturnValue"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Messaging.IMethodReturnMessage","System::Runtime::Remoting::Messaging::IMethodReturnMessage","System.Runtime.Remoting.Messaging.IMethodReturnMessage.Exception","System::Runtime::Remoting::Messaging::IMethodReturnMessage::Exception","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArg","System::Runtime::Remoting::Messaging::IMethodReturnMessage::GetOutArg","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArgName","System::Runtime::Remoting::Messaging::IMethodReturnMessage::GetOutArgName","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgCount","System::Runtime::Remoting::Messaging::IMethodReturnMessage::OutArgCount","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgs","System::Runtime::Remoting::Messaging::IMethodReturnMessage::OutArgs","System.Runtime.Remoting.Messaging.IMethodReturnMessage.ReturnValue","System::Runtime::Remoting::Messaging::IMethodReturnMessage::ReturnValue"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"af88905c-671b-625e-d4bf-2a7ac6f90a13","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodReturnMessage.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IMethodReturnMessage interface | Microsoft Docs","_op_ogTitle":"IMethodReturnMessage interface","description":"Defines the method call return message interface.\n","toc_asset_id":"api/_splitted/System.Runtime.Remoting.Messaging/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Messaging/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Messaging.IMethodReturnMessage","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.messaging.imethodreturnmessage","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.remoting.messaging.imethodreturnmessage","fileRelativePath":"api/System.Runtime.Remoting.Messaging.IMethodReturnMessage.html"},"themesRelativePathToOutputRoot":"_themes/"}