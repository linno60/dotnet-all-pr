{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDesignerHost</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface for managing designer transactions and components.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example code demonstrates how to obtain the IDesignerHost service interface from a designer or sited component.  </p>\n<pre><code class=\"lang-cs\" name=\"DesignerHostAcquisition#1\">\t\t\t// Requests an IDesignerHost service from the design time environment using Component.Site.GetService()\n\t\t\tIDesignerHost dh = (IDesignerHost) this.Component.Site.GetService(typeof(IDesignerHost));\t\t\t\n</code></pre><pre><code class=\"lang-cpp\" name=\"DesignerHostAcquisition#1\">         // Requests an IDesignerHost service from the design time environment using Component.Site.GetService()\n         IDesignerHost^ dh = static_cast&lt;IDesignerHost^&gt;(this-&gt;Component-&gt;Site-&gt;GetService( IDesignerHost::typeid ));\n</code></pre><pre><code class=\"lang-vb\" name=\"DesignerHostAcquisition#1\">            &#39; Requests an IDesignerHost service from the design time environment using Component.Site.GetService()\n            Dim host As IDesignerHost = CType(Me.Component.Site.GetService(GetType(IDesignerHost)), IDesignerHost)\n</code></pre><p> The following example code demonstrates using the IDesignerHost interface to list project components.  </p>\n<pre><code class=\"lang-cs\" name=\"IDesignerHostExample#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Windows.Forms;\n\nnamespace IDesignerHostExample\n{\t\n    // IDesignerHostExampleComponent is a component associated \n    // with the IDesignerHostExampleDesigner that demonstrates \n    // acquisition and use of the IDesignerHost service \n    // to list project components.\n    [DesignerAttribute(typeof(IDesignerHostExampleDesigner))]\n    public class IDesignerHostExampleComponent : System.ComponentModel.Component\n    {\n        public IDesignerHostExampleComponent()\n        {}\n\n        protected override void Dispose( bool disposing )\n        {\n            base.Dispose( disposing );\n        }\n    }\n\n    // You can double-click the component of an IDesignerHostExampleDesigner \n    // to show a form containing a listbox that lists the name and type \n    // of each component or control in the current design-time project.\n    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class IDesignerHostExampleDesigner : IDesigner\n    {\n        private System.ComponentModel.IComponent component;\n\n        public IDesignerHostExampleDesigner()\n        {}\n\n        public void DoDefaultAction()\n        {\n            ListComponents();\n        }\n\n        public void Initialize(System.ComponentModel.IComponent component)\n        {\n            this.component = component;\n            MessageBox.Show(&quot;Double-click the IDesignerHostExample component to view a list of project components.&quot;);\n        }\n\n        // Displays a list of components in the current design \n        // document when the default action of the designer is invoked.\n        private void ListComponents()\n        {\n            using (DesignerHostListForm listform = new DesignerHostListForm())\n            {\n                // Obtain an IDesignerHost service from the design environment.\n                IDesignerHost host = (IDesignerHost)this.component.Site.GetService(typeof(IDesignerHost));\n                // Get the project components container (control containment depends on Controls collections)\n                IContainer container = host.Container;\n                // Add each component&#39;s type name and name to the list box.\n                foreach (IComponent component in container.Components)\n                {\n                    listform.listBox1.Items.Add(component.GetType().Name + &quot; : &quot; + component.Site.Name);\n                }\n                // Display the form.\n                listform.ShowDialog();\n            }\n        }\n\n        public System.ComponentModel.IComponent Component\n        {\n            get\n            {\n                return this.component;\n            }\n        }\n\n        public System.ComponentModel.Design.DesignerVerbCollection Verbs\n        {\n            get\n            {\n                DesignerVerbCollection dvc = new DesignerVerbCollection();\n                dvc.Add( new DesignerVerb(&quot;List Components&quot;, new EventHandler(ListHandler)) );\n                return dvc;\n            }\n        }\n\n        private void ListHandler(object sender, EventArgs e)\n        {\n            ListComponents();\n        }\n\n        public void Dispose() {\t}\n    }\n\n    // Provides a form containing a listbox that can display \n    // a list of project components.\n    public class DesignerHostListForm : System.Windows.Forms.Form\n    {\n        public System.Windows.Forms.ListBox listBox1;\n        private System.Windows.Forms.Button ok_button;\n        \n        public DesignerHostListForm()\n        {\n            this.Name = &quot;DesignerHostListForm&quot;;\n            this.Text = &quot;List of design-time project components&quot;;\n            this.SuspendLayout();\n            this.listBox1 = new System.Windows.Forms.ListBox();\t\t\t\t\t\t\n            this.listBox1.Location = new System.Drawing.Point(8, 8);\n            this.listBox1.Name = &quot;listBox1&quot;;\n            this.listBox1.Size = new System.Drawing.Size(385, 238);\n            this.listBox1.TabIndex = 0;\t\n            this.listBox1.Anchor = (((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) \n                | System.Windows.Forms.AnchorStyles.Left) \n                | System.Windows.Forms.AnchorStyles.Right);\t\t\n            this.ok_button = new System.Windows.Forms.Button();\n            this.ok_button.DialogResult = System.Windows.Forms.DialogResult.OK;\n            this.ok_button.Location = new System.Drawing.Point(232, 256);\n            this.ok_button.Name = &quot;ok_button&quot;;\n            this.ok_button.TabIndex = 1;\n            this.ok_button.Text = &quot;OK&quot;;\n            this.ok_button.Anchor = (System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right);\n            this.ClientSize = new System.Drawing.Size(400, 285);\n            this.Controls.AddRange(new System.Windows.Forms.Control[] { this.ok_button, this.listBox1 });\n            this.ResumeLayout(false);\t\n        }\n\n        protected override void Dispose( bool disposing )\n        {\t\t\t\n            base.Dispose( disposing );\n        }\t\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"IDesignerHostExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System::Security::Permissions;\n\n// Provides a form containing a listbox that can display \n// a list of project components.\npublic ref class DesignerHostListForm: public System::Windows::Forms::Form\n{\npublic:\n   System::Windows::Forms::ListBox^ listBox1;\n\nprivate:\n   System::Windows::Forms::Button^ ok_button;\n\npublic:\n   DesignerHostListForm()\n   {\n      this-&gt;Name = &quot;DesignerHostListForm&quot;;\n      this-&gt;Text = &quot;List of design-time project components&quot;;\n      this-&gt;SuspendLayout();\n      this-&gt;listBox1 = gcnew System::Windows::Forms::ListBox;\n      this-&gt;listBox1-&gt;Location = System::Drawing::Point( 8, 8 );\n      this-&gt;listBox1-&gt;Name = &quot;listBox1&quot;;\n      this-&gt;listBox1-&gt;Size = System::Drawing::Size( 385, 238 );\n      this-&gt;listBox1-&gt;TabIndex = 0;\n      this-&gt;listBox1-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(((System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Bottom) | System::Windows::Forms::AnchorStyles::Left) | System::Windows::Forms::AnchorStyles::Right);\n      this-&gt;ok_button = gcnew System::Windows::Forms::Button;\n      this-&gt;ok_button-&gt;DialogResult = System::Windows::Forms::DialogResult::OK;\n      this-&gt;ok_button-&gt;Location = System::Drawing::Point( 232, 256 );\n      this-&gt;ok_button-&gt;Name = &quot;ok_button&quot;;\n      this-&gt;ok_button-&gt;TabIndex = 1;\n      this-&gt;ok_button-&gt;Text = &quot;OK&quot;;\n      this-&gt;ok_button-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Bottom | System::Windows::Forms::AnchorStyles::Right);\n      this-&gt;ClientSize = System::Drawing::Size( 400, 285 );\n      array&lt;System::Windows::Forms::Control^&gt;^temp2 = {this-&gt;ok_button,this-&gt;listBox1};\n      this-&gt;Controls-&gt;AddRange( temp2 );\n      this-&gt;ResumeLayout( false );\n   }\n\npublic:\n   ~DesignerHostListForm()\n   {\n   }\n};\n\n\n// You can double-click the component of an IDesignerHostExampleDesigner \n// to show a form containing a listbox that lists the name and type \n// of each component or control in the current design-time project.\npublic ref class IDesignerHostExampleDesigner: public IDesigner\n{\nprivate:\n   System::ComponentModel::IComponent^ component;\n\npublic:\n   IDesignerHostExampleDesigner(){}\n\n   virtual void DoDefaultAction()\n   {\n      ListComponents();\n   }\n\n   virtual void Initialize( System::ComponentModel::IComponent^ component )\n   {\n      this-&gt;component = component;\n      MessageBox::Show( &quot;Double-click the IDesignerHostExample component to view a list of project components.&quot; );\n   }\n\n\nprivate:\n\n   // Displays a list of components in the current design \n   // document when the default action of the designer is invoked.\n   void ListComponents()\n   {\n      DesignerHostListForm^ listform = gcnew DesignerHostListForm;\n\n      // Obtain an IDesignerHost service from the design environment.\n      IDesignerHost^ host = dynamic_cast&lt;IDesignerHost^&gt;(this-&gt;component-&gt;Site-&gt;GetService( IDesignerHost::typeid ));\n\n      // Get the project components container (control containment depends on Controls collections)\n      IContainer^ container = host-&gt;Container;\n\n      // Add each component&#39;s type name and name to the list box.\n      System::Collections::IEnumerator^ myEnum = container-&gt;Components-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         IComponent^ component = safe_cast&lt;IComponent^&gt;(myEnum-&gt;Current);\n         listform-&gt;listBox1-&gt;Items-&gt;Add( String::Concat( component-&gt;GetType()-&gt;Name, &quot; : &quot;, component-&gt;Site-&gt;Name ) );\n      }\n\n      listform-&gt;ShowDialog();\n   }\n\npublic:\n\n   property System::ComponentModel::IComponent^ Component \n   {\n      virtual System::ComponentModel::IComponent^ get()\n      {\n         return this-&gt;component;\n      }\n   }\n\n   property System::ComponentModel::Design::DesignerVerbCollection^ Verbs \n   {\n      [PermissionSetAttribute(SecurityAction::Demand, Name=&quot;FullTrust&quot;)]\n      virtual System::ComponentModel::Design::DesignerVerbCollection^ get()\n      {\n         DesignerVerbCollection^ dvc = gcnew DesignerVerbCollection;\n         dvc-&gt;Add( gcnew DesignerVerb( &quot;List Components&quot;,gcnew EventHandler( this, &amp;IDesignerHostExampleDesigner::ListHandler ) ) );\n         return dvc;\n      }\n   }\n\nprivate:\n   void ListHandler( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      ListComponents();\n   }\n\npublic:\n   ~IDesignerHostExampleDesigner(){}\n};\n\n\n// IDesignerHostExampleComponent is a component associated \n// with the IDesignerHostExampleDesigner that demonstrates \n// acquisition and use of the IDesignerHost service \n// to list project components.\n\n[DesignerAttribute(IDesignerHostExampleDesigner::typeid)]\npublic ref class IDesignerHostExampleComponent: public System::ComponentModel::Component\n{\npublic:\n   IDesignerHostExampleComponent(){}\n\npublic:\n   ~IDesignerHostExampleComponent(){}\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"IDesignerHostExample#1\">Imports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Windows.Forms\n\nNamespace IDesignerHostExample\n   \n   &#39; IDesignerHostExampleComponent is a component associated \n   &#39; with the IDesignerHostExampleDesigner that demonstrates \n   &#39; acquisition and use of the IDesignerHost service \n   &#39; to list project components.\n    &lt;DesignerAttribute(GetType(IDesignerHostExampleDesigner))&gt; _\n    Public Class IDesignerHostExampleComponent\n        Inherits System.ComponentModel.Component\n\n        Public Sub New()\n        End Sub &#39;New\n\n        Protected Overloads Sub Dispose(ByVal disposing As Boolean)\n            MyBase.Dispose(disposing)\n        End Sub \n    End Class \n\n    &#39; You can double-click the component of a IDesignerHostExampleDesigner\n    &#39; to show a form containing a listbox that lists the name and type \n    &#39; of each component or control in the current design-time project.\n    &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n    Public Class IDesignerHostExampleDesigner\n        Implements IDesigner\n        Private component_ As System.ComponentModel.IComponent\n\n        Public Sub New()\n        End Sub &#39;New\n\n        Public Sub DoDefaultAction() Implements IDesigner.DoDefaultAction\n            ListComponents()\n        End Sub\n\n        Public Sub Initialize(ByVal component As System.ComponentModel.IComponent) Implements IDesigner.Initialize\n            Me.component_ = component\n            MessageBox.Show(&quot;Double-click the IDesignerHostExample component to view a list of project components.&quot;)\n        End Sub\n\n        &#39; Displays a list of components in the current design \n        &#39; document when the default action of the designer is invoked.\n        Private Sub ListComponents()\n\n            Using listform As New DesignerHostListForm()\n\n                &#39; Obtain an IDesignerHost service from the design environment.\n                Dim host As IDesignerHost = CType(Me.Component.Site.GetService(GetType(IDesignerHost)), IDesignerHost)\n                &#39; Get the project components container (control containment depends on Controls collections)\n                Dim container As IContainer = host.Container\n                &#39; Add each component&#39;s type name and name to the list box.\n                Dim comp As Component\n                For Each comp In container.Components\n                    listform.listBox1.Items.Add((comp.GetType().Name + &quot; : &quot; + Component.Site.Name))\n                Next comp\n                &#39; Display the form.\n                listform.ShowDialog()\n\n            End Using\n\n        End Sub\n\n        Public ReadOnly Property Component() As System.ComponentModel.IComponent Implements IDesigner.Component\n            Get\n                Return component_\n            End Get\n        End Property\n\n        Public ReadOnly Property Verbs() As System.ComponentModel.Design.DesignerVerbCollection Implements IDesigner.Verbs\n            Get\n                Dim dvc As New DesignerVerbCollection()\n                dvc.Add(New DesignerVerb(&quot;List Components&quot;, New EventHandler(AddressOf ListHandler)))\n                Return dvc\n            End Get\n        End Property\n\n        Private Sub ListHandler(ByVal sender As Object, ByVal e As EventArgs)\n            ListComponents()\n        End Sub\n\n        Public Sub Dispose() Implements IDisposable.Dispose\n        End Sub\n    End Class\n    _ \n\n    &#39; Provides a form containing a list box that can display \n    &#39; a list of project components.\n    Public Class DesignerHostListForm\n        Inherits System.Windows.Forms.Form\n        Public listBox1 As System.Windows.Forms.ListBox\n        Private ok_button As System.Windows.Forms.Button\n\n        Public Sub New()\n            Me.Name = &quot;DesignerHostListForm&quot;\n            Me.Text = &quot;List of design-time project components&quot;\n            Me.SuspendLayout()\n            Me.listBox1 = New System.Windows.Forms.ListBox()\n            Me.listBox1.Location = New System.Drawing.Point(8, 8)\n            Me.listBox1.Name = &quot;listBox1&quot;\n            Me.listBox1.Size = New System.Drawing.Size(385, 238)\n            Me.listBox1.TabIndex = 0\n            Me.listBox1.Anchor = (((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _\n            Or System.Windows.Forms.AnchorStyles.Left) Or System.Windows.Forms.AnchorStyles.Right)\n            Me.ok_button = New System.Windows.Forms.Button()\n            Me.ok_button.DialogResult = System.Windows.Forms.DialogResult.OK\n            Me.ok_button.Location = New System.Drawing.Point(232, 256)\n            Me.ok_button.Name = &quot;ok_button&quot;\n            Me.ok_button.TabIndex = 1\n            Me.ok_button.Text = &quot;OK&quot;\n            Me.ok_button.Anchor = (System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right)\n            Me.ClientSize = New System.Drawing.Size(400, 285)\n            Me.Controls.AddRange(New System.Windows.Forms.Control() {Me.ok_button, Me.listBox1})\n            Me.ResumeLayout(False)\n        End Sub \n\n        Protected Overloads Sub Dispose(ByVal disposing As Boolean)\n            MyBase.Dispose(disposing)\n        End Sub \n    End Class \nEnd Namespace \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>IDesignerHost is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.  </p>\n<p> The .NET Framework does not provide an implementation of this interface. The interface is implemented by development tools that support designers.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_Container\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Container</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the container for this designer host.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.IContainer Container { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a> for this host.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This <a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a> contains the components of the current design mode document. You can list or access any of the components of the current design mode document through the <a class=\"xref\" href=\"system.componentmodel.icontainer#System_ComponentModel_IContainer_Components_\" data-linktype=\"relative-path\">Components</a> member of this <a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_InTransaction\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InTransaction</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the designer host is currently in a transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool InTransaction { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if a transaction is in progress; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_Loading\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Loading</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the designer host is currently loading the document.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Loading { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the designer host is currently loading the document; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_RootComponent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RootComponent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the instance of the base class used as the root component for the current design.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.IComponent RootComponent { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The instance of the root component class.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This base class is typically a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> or <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> instance; it defines the class for which the user&#39;s derived class extends.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_RootComponentClassName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RootComponentClassName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the fully qualified name of the class being designed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string RootComponentClassName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The fully qualified name of the base component class.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_TransactionDescription\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TransactionDescription</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the description of the current transaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string TransactionDescription { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A description of the current transaction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The description is the last description specified with <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_CreateTransaction_\" data-linktype=\"relative-path\">CreateTransaction</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_Activate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Activate()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Activates the designer that this host is hosting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Activate ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Designers should be activated before they display their user interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_CreateComponent_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateComponent(Type)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a component of the specified type and adds it to the design document.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.IComponent CreateComponent (Type componentClass);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>componentClass</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the component to create.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The newly created component.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the type cannot be resolved into an object that implements <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a>, an exception is thrown.  </p>\n<p> This method does not specify a name for the component. The method creates the component and adds it to the designer container.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_CreateComponent_System_Type_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateComponent(Type,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a component of the specified type and name, and adds it to the design document.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>componentClass</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the component to create.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name for the component.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The newly created component.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the type cannot be resolved into an object that implements <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a>, an exception is thrown.  </p>\n<p> This method creates the component and adds it to the designer container.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_CreateTransaction\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateTransaction()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new instance of <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a>. When you complete the steps in your transaction, you should call <span class=\"xref\">stem.ComponentModel.Design.DesignerTransaction.Commit*</span> on this object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method creates a <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.  </p>\n<p> Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_TransactionOpening\" data-linktype=\"relative-path\">TransactionOpening</a> and <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_TransactionClosed\" data-linktype=\"relative-path\">TransactionClosed</a> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_CreateTransaction_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateTransaction(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>description</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A title or description for the newly created transaction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a>. When you have completed the steps in your transaction, you should call <span class=\"xref\">stem.ComponentModel.Design.DesignerTransaction.Commit*</span> on this object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method creates a <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.  </p>\n<p> Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_TransactionOpening\" data-linktype=\"relative-path\">TransactionOpening</a> and <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_TransactionClosed\" data-linktype=\"relative-path\">TransactionClosed</a> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <a class=\"xref\" href=\"system.componentmodel.design.designertransaction\" data-linktype=\"relative-path\">DesignerTransaction</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_DestroyComponent_System_ComponentModel_IComponent_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DestroyComponent(IComponent)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Destroys the specified component and removes it from the designer container.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DestroyComponent (System.ComponentModel.IComponent component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The component to destroy.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_GetDesigner_System_ComponentModel_IComponent_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDesigner(IComponent)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the designer instance that contains the specified component.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> to retrieve the designer for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.idesigner\" data-linktype=\"relative-path\">IDesigner</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.design.idesigner\" data-linktype=\"relative-path\">IDesigner</a>, or <code>null</code> if there is no designer for the specified component.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_GetType_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetType(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an instance of the specified, fully qualified type name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Type GetType (string typeName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>typeName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the type to load.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type object for the specified type name, or <code>null</code> if the type cannot be found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_Activated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Activated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when this designer is activated.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Activated;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A designer is activated before it is displayed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_Deactivated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Deactivated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when this designer is deactivated.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Deactivated;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A designer is deactivated just before it is no longer displayed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_LoadComplete\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadComplete</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when this designer completes loading its document.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler LoadComplete;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event occurs after a designer completes loading its document.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_TransactionClosed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TransactionClosed</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds an event handler for the TransactionClosed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event occurs after a transaction is closed.  </p>\n<p> A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_TransactionClosing\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TransactionClosing</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds an event handler for the TransactionClosing event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event occurs just before a transaction is completed.  </p>\n<p> A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_TransactionOpened\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TransactionOpened</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds an event handler for the TransactionOpened event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler TransactionOpened;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event occurs when a transaction has begun.  </p>\n<p> A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerHost_TransactionOpening\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TransactionOpening</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds an event handler for the TransactionOpening event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler TransactionOpening;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event occurs when a transaction is about to begin.  </p>\n<p> This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun. The specified handler is called only when the first call to <a class=\"xref\" href=\"system.componentmodel.design.idesignerhost#System_ComponentModel_Design_IDesignerHost_CreateTransaction_\" data-linktype=\"relative-path\">CreateTransaction</a> is made. Subsequent calls do not generate this event until all transaction objects have been disposed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesignerHost.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.Activate\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.Activated\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.add_Activated\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.remove_Activated\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.Container\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.CreateComponent\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.CreateTransaction\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.Deactivated\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.add_Deactivated\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.remove_Deactivated\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.DestroyComponent\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.GetDesigner\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.GetType\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.InTransaction\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.LoadComplete\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.add_LoadComplete\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.remove_LoadComplete\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.Loading\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.RootComponent\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.RootComponentClassName\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.TransactionClosed\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.add_TransactionClosed\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.remove_TransactionClosed\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.TransactionClosing\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.add_TransactionClosing\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.remove_TransactionClosing\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.TransactionDescription\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.TransactionOpened\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.add_TransactionOpened\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.remove_TransactionOpened\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.TransactionOpening\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.add_TransactionOpening\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerHost.remove_TransactionOpening\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"cb42951d-7518-eb87-c09b-80d149e40d54\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface for managing designer transactions and components.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.IDesignerHost\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesignerHost.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.IDesignerHost","System.ComponentModel.Design.IDesignerHost.Activate","System.ComponentModel.Design.IDesignerHost.Activated","System.ComponentModel.Design.IDesignerHost.add_Activated","System.ComponentModel.Design.IDesignerHost.remove_Activated","System.ComponentModel.Design.IDesignerHost.Container","System.ComponentModel.Design.IDesignerHost.CreateComponent","System.ComponentModel.Design.IDesignerHost.CreateTransaction","System.ComponentModel.Design.IDesignerHost.Deactivated","System.ComponentModel.Design.IDesignerHost.add_Deactivated","System.ComponentModel.Design.IDesignerHost.remove_Deactivated","System.ComponentModel.Design.IDesignerHost.DestroyComponent","System.ComponentModel.Design.IDesignerHost.GetDesigner","System.ComponentModel.Design.IDesignerHost.GetType","System.ComponentModel.Design.IDesignerHost.InTransaction","System.ComponentModel.Design.IDesignerHost.LoadComplete","System.ComponentModel.Design.IDesignerHost.add_LoadComplete","System.ComponentModel.Design.IDesignerHost.remove_LoadComplete","System.ComponentModel.Design.IDesignerHost.Loading","System.ComponentModel.Design.IDesignerHost.RootComponent","System.ComponentModel.Design.IDesignerHost.RootComponentClassName","System.ComponentModel.Design.IDesignerHost.TransactionClosed","System.ComponentModel.Design.IDesignerHost.add_TransactionClosed","System.ComponentModel.Design.IDesignerHost.remove_TransactionClosed","System.ComponentModel.Design.IDesignerHost.TransactionClosing","System.ComponentModel.Design.IDesignerHost.add_TransactionClosing","System.ComponentModel.Design.IDesignerHost.remove_TransactionClosing","System.ComponentModel.Design.IDesignerHost.TransactionDescription","System.ComponentModel.Design.IDesignerHost.TransactionOpened","System.ComponentModel.Design.IDesignerHost.add_TransactionOpened","System.ComponentModel.Design.IDesignerHost.remove_TransactionOpened","System.ComponentModel.Design.IDesignerHost.TransactionOpening","System.ComponentModel.Design.IDesignerHost.add_TransactionOpening","System.ComponentModel.Design.IDesignerHost.remove_TransactionOpening"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.IDesignerHost","System::ComponentModel::Design::IDesignerHost","System.ComponentModel.Design.IDesignerHost.Activate","System::ComponentModel::Design::IDesignerHost::Activate","System.ComponentModel.Design.IDesignerHost.Activated","System::ComponentModel::Design::IDesignerHost::Activated","System.ComponentModel.Design.IDesignerHost.Container","System::ComponentModel::Design::IDesignerHost::Container","System.ComponentModel.Design.IDesignerHost.CreateComponent","System::ComponentModel::Design::IDesignerHost::CreateComponent","System.ComponentModel.Design.IDesignerHost.CreateTransaction","System::ComponentModel::Design::IDesignerHost::CreateTransaction","System.ComponentModel.Design.IDesignerHost.Deactivated","System::ComponentModel::Design::IDesignerHost::Deactivated","System.ComponentModel.Design.IDesignerHost.DestroyComponent","System::ComponentModel::Design::IDesignerHost::DestroyComponent","System.ComponentModel.Design.IDesignerHost.GetDesigner","System::ComponentModel::Design::IDesignerHost::GetDesigner","System.ComponentModel.Design.IDesignerHost.GetType","System::ComponentModel::Design::IDesignerHost::GetType","System.ComponentModel.Design.IDesignerHost.InTransaction","System::ComponentModel::Design::IDesignerHost::InTransaction","System.ComponentModel.Design.IDesignerHost.LoadComplete","System::ComponentModel::Design::IDesignerHost::LoadComplete","System.ComponentModel.Design.IDesignerHost.Loading","System::ComponentModel::Design::IDesignerHost::Loading","System.ComponentModel.Design.IDesignerHost.RootComponent","System::ComponentModel::Design::IDesignerHost::RootComponent","System.ComponentModel.Design.IDesignerHost.RootComponentClassName","System::ComponentModel::Design::IDesignerHost::RootComponentClassName","System.ComponentModel.Design.IDesignerHost.TransactionClosed","System::ComponentModel::Design::IDesignerHost::TransactionClosed","System.ComponentModel.Design.IDesignerHost.TransactionClosing","System::ComponentModel::Design::IDesignerHost::TransactionClosing","System.ComponentModel.Design.IDesignerHost.TransactionDescription","System::ComponentModel::Design::IDesignerHost::TransactionDescription","System.ComponentModel.Design.IDesignerHost.TransactionOpened","System::ComponentModel::Design::IDesignerHost::TransactionOpened","System.ComponentModel.Design.IDesignerHost.TransactionOpening","System::ComponentModel::Design::IDesignerHost::TransactionOpening"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"cb42951d-7518-eb87-c09b-80d149e40d54","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDesignerHost interface | Microsoft Docs","_op_ogTitle":"IDesignerHost interface","description":"Provides an interface for managing designer transactions and components.\n","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.IDesignerHost","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesignerhost","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesignerhost","fileRelativePath":"api/System.ComponentModel.Design.IDesignerHost.html"},"themesRelativePathToOutputRoot":"_themes/"}