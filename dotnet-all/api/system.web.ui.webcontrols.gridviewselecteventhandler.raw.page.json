{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GridViewSelectEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void GridViewSelectEventHandler(object sender, GridViewSelectEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">GridViewSelectEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to programmatically add a GridViewSelectEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelectEventHandler#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void Page_Load(Object sender, EventArgs e)\n    {\n        \n        // Create a new GridView object.\n        GridView authorGridView = new GridView();\n         \n        // Set the GridView object&#39;s properties.\n        authorGridView.ID = &quot;AuthorGridView&quot;;\n        authorGridView.DataSourceID = &quot;AuthorsSqlDataSource&quot;; \n        authorGridView.AutoGenerateColumns = true;\n        authorGridView.AutoGenerateSelectButton = true;\n        authorGridView.AllowPaging = true; \n        authorGridView.SelectedIndex = 1;\n        authorGridView.SelectedRowStyle.BackColor = System.Drawing.Color.LightCyan;\n        authorGridView.SelectedRowStyle.ForeColor = System.Drawing.Color.DarkBlue;\n        authorGridView.SelectedRowStyle.Font.Bold = true;\n        \n        // Programmatically register the event-handling methods.\n        authorGridView.SelectedIndexChanged += new EventHandler(this.AuthorsGridView_SelectedIndexChanged);\n        authorGridView.SelectedIndexChanging += new GridViewSelectEventHandler(this.AuthorsGridView_SelectedIndexChanging);\n        \n        // Add the GridView object to the Controls collection\n        // of the PlaceHolder control.\n        GridViewPlaceHolder.Controls.Add(authorGridView);\n        \n    }\n    \n    void AuthorsGridView_SelectedIndexChanged(Object sender, EventArgs e)\n    {\n    \n        // Get the currently selected row using the SelectedRow property.\n        GridView AuthorsGridView = (GridView)sender;\n        GridViewRow row = AuthorsGridView.SelectedRow;\n        \n        // Display the author&#39;s name from the selected row.\n        // In this example, the second and third columns contain\n        // the author&#39;s last and first name, respectively.\n        Message.Text = &quot;You selected &quot; + row.Cells[2].Text +\n            &quot; &quot; + row.Cells[1].Text + &quot;.&quot;;\n    \n    }\n    \n    void AuthorsGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n    {\n        \n        // Get the currently selected row. Because the SelectedIndexChanging event\n        // occurs before the select operation in the GridView control, the\n        // SelectedRow property cannot be used. Instead, use the Rows collection\n        // and the NewSelectedIndex property of the e argument passed to this \n        // event handler.\n        GridView AuthorsGridView = (GridView)sender;\n        GridViewRow row = AuthorsGridView.Rows[e.NewSelectedIndex];\n        \n        // If the user selects an author with the last name White,\n        // cancel the selection operation and display an error message.\n        if(row.Cells[1].Text == &quot;White&quot;)\n        {\n        \n            e.Cancel = true;\n            Message.Text = &quot;You cannot select &quot; + row.Cells[2].Text +\n            &quot; &quot; + row.Cells[1].Text + &quot;.&quot;;\n        \n        }\n    \n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n    &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewSelectEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewSelectEventHandler Example&lt;/h3&gt;\n            \n            &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n                runat=&quot;Server&quot;/&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Pubs sample database.                         --&gt;\n            &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [au_lname], [au_fname], [address], [city], [state], [zip], [contract] FROM [authors]&quot;\n                connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n                runat=&quot;server&quot;&gt;\n            &lt;/asp:sqldatasource&gt;\n            \n            &lt;br/&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                runat=&quot;server&quot;/&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelectEventHandler#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n        &#39; Create a new GridView object.\n        Dim authorGridView As GridView = New GridView\n         \n        &#39; Set the GridView object&#39;s properties.\n        authorGridView.ID = &quot;AuthorGridView&quot;\n        authorGridView.DataSourceID = &quot;AuthorsSqlDataSource&quot;\n        authorGridView.AutoGenerateColumns = True\n        authorGridView.AutoGenerateSelectButton = True\n        authorGridView.AllowPaging = True\n        authorGridView.SelectedIndex = 1\n        authorGridView.SelectedRowStyle.BackColor = System.Drawing.Color.LightCyan\n        authorGridView.SelectedRowStyle.ForeColor = System.Drawing.Color.DarkBlue\n        authorGridView.SelectedRowStyle.Font.Bold = True\n        \n        &#39; Programmatically register the event-handling methods.\n        AddHandler authorGridView.SelectedIndexChanged, AddressOf AuthorsGridView_SelectedIndexChanged\n        AddHandler authorGridView.SelectedIndexChanging, AddressOf AuthorsGridView_SelectedIndexChanging\n        \n        &#39; Add the GridView object to the Controls collection\n        &#39; of the PlaceHolder control.\n        GridViewPlaceHolder.Controls.Add(authorGridView)\n        \n    End Sub\n    \n    Sub AuthorsGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n\n        &#39; Get the currently selected row using the SelectedRow property.\n        Dim AuthorsGridView As GridView = CType(sender, GridView)\n        Dim row As GridViewRow = AuthorsGridView.SelectedRow\n        \n        &#39; Display the author&#39;s name from the selected row.\n        &#39; In this example, the second and third columns contain\n        &#39; the author&#39;s last and first name, respectively.\n        Message.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; _\n            &quot; &quot; &amp; row.Cells(1).Text &amp; &quot;.&quot;\n    \n    End Sub\n    \n    Sub AuthorsGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n        &#39; Get the currently selected row. Because the SelectedIndexChanging event\n        &#39; occurs before the select operation in the GridView control, the\n        &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n        &#39; and the NewSelectedIndex property of the e argument passed to this \n        &#39; event handler.\n        Dim AuthorsGridView As GridView = CType(sender, GridView)\n        Dim row As GridViewRow = AuthorsGridView.Rows(e.NewSelectedIndex)\n        \n        &#39; If the user selects an author with the last name White,\n        &#39; cancel the selection operation and display an error message.\n        If row.Cells(1).Text = &quot;White&quot;\n        \n            e.Cancel = true\n            Message.Text = &quot;You cannot select &quot; &amp; row.Cells(2).Text &amp; _\n            &quot; &quot; &amp; row.Cells(1).Text &amp; &quot;.&quot;\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n    &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewSelectEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewSelectEventHandler Example&lt;/h3&gt;\n            \n            &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n                runat=&quot;Server&quot;/&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Pubs sample database.                         --&gt;\n            &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [au_lname], [au_fname], [address], [city], [state], [zip], [contract] FROM [authors]&quot;\n                connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n                runat=&quot;server&quot;&gt;\n            &lt;/asp:sqldatasource&gt;\n            \n            &lt;br/&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                runat=&quot;server&quot;/&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to declaratively add a GridViewSelectEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    // Get the currently selected row using the SelectedRow property.\n    GridViewRow row = CustomersGridView.SelectedRow;\n        \n    // Display the first name from the selected row.\n    // In this example, the third column (index 2) contains\n    // the first name.\n    MessageLabel.Text = &quot;You selected &quot; + row.Cells[2].Text + &quot;.&quot;;\n  }\n\n  void CustomersGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n  {\n    // Get the currently selected row. Because the SelectedIndexChanging event\n    // occurs before the select operation in the GridView control, the\n    // SelectedRow property cannot be used. Instead, use the Rows collection\n    // and the NewSelectedIndex property of the e argument passed to this \n    // event handler.\n    GridViewRow row = CustomersGridView.Rows[e.NewSelectedIndex];\n\n    // You can cancel the select operation by using the Cancel\n    // property. For this example, if the user selects a customer with \n    // the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    // is displayed.\n    if (row.Cells[1].Text == &quot;ANATR&quot;)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot select &quot; + row.Cells[2].Text + &quot;.&quot;; \n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Get the currently selected row using the SelectedRow property.\n    Dim row As GridViewRow = CustomersGridView.SelectedRow\n        \n    &#39; Display the first name from the selected row.\n    &#39; In this example, the third column (index 2) contains\n    &#39; the first name.\n    MessageLabel.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; &quot;.&quot;\n  End Sub\n\n  Sub CustomersGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n    &#39; Get the currently selected row. Because the SelectedIndexChanging event\n    &#39; occurs before the select operation in the GridView control, the\n    &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n    &#39; and the NewSelectedIndex property of the e argument passed to this \n    &#39; event handler.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.NewSelectedIndex)\n\n    &#39; You can cancel the select operation by using the Cancel\n    &#39; property. For this example, if the user selects a customer with \n    &#39; the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    &#39; is displayed.\n    If row.Cells(1).Text = &quot;ANATR&quot; Then\n        e.Cancel = True\n        MessageLabel.Text = &quot;You cannot select &quot; + row.Cells(2).Text &amp; &quot;.&quot;\n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> event is raised when a Select button (a button with its <code>CommandName</code> property set to &quot;Select&quot;) is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation. This allows you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.  </p>\n<p> When you create a GridViewSelectEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewSelectEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSelectEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSelectEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSelectEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSelectEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSelectEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"b991d28a-0e5f-d3a8-2bc1-7b2d525f86c0\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.GridViewSelectEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewSelectEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.GridViewSelectEventHandler","System.Web.UI.WebControls.GridViewSelectEventHandler..ctor","System.Web.UI.WebControls.GridViewSelectEventHandler.Invoke","System.Web.UI.WebControls.GridViewSelectEventHandler.BeginInvoke","System.Web.UI.WebControls.GridViewSelectEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.GridViewSelectEventHandler","System::Web::UI::WebControls::GridViewSelectEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"b991d28a-0e5f-d3a8-2bc1-7b2d525f86c0","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewSelectEventHandler.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridViewSelectEventHandler delegate | Microsoft Docs","_op_ogTitle":"GridViewSelectEventHandler delegate","description":"Represents the method that handles the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.GridViewSelectEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewselecteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewselecteventhandler","fileRelativePath":"api/System.Web.UI.WebControls.GridViewSelectEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}