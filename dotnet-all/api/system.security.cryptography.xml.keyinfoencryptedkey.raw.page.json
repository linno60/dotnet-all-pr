{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">KeyInfoEncryptedKey</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Wraps the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class, it to be placed as a subelement of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfo\" data-linktype=\"relative-path\">KeyInfo</a> class.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class KeyInfoEncryptedKey : System.Security.Cryptography.Xml.KeyInfoClause</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoclause\" data-linktype=\"relative-path\">KeyInfoClause</a></span></div><span class=\"lang-csharp\">KeyInfoEncryptedKey</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.XML.XMLEncImbedKey#1\">using System;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        // Create an XmlDocument object.\n        XmlDocument xmlDoc = new XmlDocument();\n\n        // Load an XML file into the XmlDocument object.\n        try\n        {\n            xmlDoc.PreserveWhitespace = true;\n            xmlDoc.Load(&quot;test.xml&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n            return;\n        }\n\n        // Create a new RSA key.  This key will encrypt a symmetric key,\n        // which will then be imbedded in the XML document.  \n        RSA rsaKey = new RSACryptoServiceProvider();\n\n\n        try\n        {\n            // Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;);\n\n            // Display the encrypted XML to the console.\n            Console.WriteLine(&quot;Encrypted XML:&quot;);\n            Console.WriteLine();\n            Console.WriteLine(xmlDoc.OuterXml);\n            xmlDoc.Save(&quot;test.xml&quot;);\n\n            // Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;);\n            xmlDoc.Save(&quot;test.xml&quot;);\n\n            // Display the encrypted XML to the console.\n            Console.WriteLine();\n            Console.WriteLine(&quot;Decrypted XML:&quot;);\n            Console.WriteLine();\n            Console.WriteLine(xmlDoc.OuterXml);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n        finally\n        {\n            // Clear the RSA key.\n            rsaKey.Clear();\n        }\n\n    }\n\n    public static void Encrypt(XmlDocument Doc, string ElementToEncrypt, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (ElementToEncrypt == null)\n            throw new ArgumentNullException(&quot;ElementToEncrypt&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n\n        ////////////////////////////////////////////////\n        // Find the specified element in the XmlDocument\n        // object and create a new XmlElemnt object.\n        ////////////////////////////////////////////////\n\n        XmlElement elementToEncrypt = Doc.GetElementsByTagName(ElementToEncrypt)[0] as XmlElement;\n\n        // Throw an XmlException if the element was not found.\n        if (elementToEncrypt == null)\n        {\n            throw new XmlException(&quot;The specified element was not found&quot;);\n\n        }\n\n        //////////////////////////////////////////////////\n        // Create a new instance of the EncryptedXml class \n        // and use it to encrypt the XmlElement with the \n        // a new random symmetric key.\n        //////////////////////////////////////////////////\n\n        // Create a 256 bit Rijndael key.\n        RijndaelManaged sessionKey = new RijndaelManaged();\n        sessionKey.KeySize = 256;\n\n        EncryptedXml eXml = new EncryptedXml();\n\n        byte[] encryptedElement = eXml.EncryptData(elementToEncrypt, sessionKey, false);\n\n        ////////////////////////////////////////////////\n        // Construct an EncryptedData object and populate\n        // it with the desired encryption information.\n        ////////////////////////////////////////////////\n\n\n        EncryptedData edElement = new EncryptedData();\n        edElement.Type = EncryptedXml.XmlEncElementUrl;\n\n        // Create an EncryptionMethod element so that the \n        // receiver knows which algorithm to use for decryption.\n\n        edElement.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncAES256Url);\n\n        // Encrypt the session key and add it to an EncryptedKey element.\n        EncryptedKey ek = new EncryptedKey();\n\n        byte[] encryptedKey = EncryptedXml.EncryptKey(sessionKey.Key, Alg, false);\n\n        ek.CipherData = new CipherData(encryptedKey);\n\n        ek.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncRSA15Url);\n\n        // Set the KeyInfo element to specify the\n        // name of the RSA key.\n\n        // Create a new KeyInfo element.\n        edElement.KeyInfo = new KeyInfo();\n\n        // Create a new KeyInfoName element.\n        KeyInfoName kin = new KeyInfoName();\n\n        // Specify a name for the key.\n        kin.Value = KeyName;\n\n        // Add the KeyInfoName element to the \n        // EncryptedKey object.\n        ek.KeyInfo.AddClause(kin);\n\n        // Add the encrypted key to the \n        // EncryptedData object.\n\n        edElement.KeyInfo.AddClause(new KeyInfoEncryptedKey(ek));\n\n        // Add the encrypted element data to the \n        // EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement;\n\n        ////////////////////////////////////////////////////\n        // Replace the element from the original XmlDocument\n        // object with the EncryptedData element.\n        ////////////////////////////////////////////////////\n\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, false);\n\n    }\n\n    public static void Decrypt(XmlDocument Doc, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n        if (KeyName == null)\n            throw new ArgumentNullException(&quot;KeyName&quot;);\n\n        // Create a new EncryptedXml object.\n        EncryptedXml exml = new EncryptedXml(Doc);\n\n        // Add a key-name mapping.\n        // This method can only decrypt documents\n        // that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg);\n\n        // Decrypt the element.\n        exml.DecryptDocument();\n\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.XML.XMLEncImbedKey#1\">Imports System\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n        &#39; Create an XmlDocument object.\n        Dim xmlDoc As New XmlDocument()\n\n        &#39; Load an XML file into the XmlDocument object.\n        Try\n            xmlDoc.PreserveWhitespace = True\n            xmlDoc.Load(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n            Return\n        End Try\n\n        &#39; Create a new RSA key.  This key will encrypt a symmetric key,\n        &#39; which will then be imbedded in the XML document.  \n        Dim rsaKey = New RSACryptoServiceProvider()\n\n\n        Try\n            &#39; Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Display the encrypted XML to the console.\n            Console.WriteLine(&quot;Encrypted XML:&quot;)\n            Console.WriteLine()\n            Console.WriteLine(xmlDoc.OuterXml)\n            xmlDoc.Save(&quot;test.xml&quot;)\n\n            &#39; Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Display the encrypted XML to the console.\n            Console.WriteLine()\n            Console.WriteLine(&quot;Decrypted XML:&quot;)\n            Console.WriteLine()\n            Console.WriteLine(xmlDoc.OuterXml)\n            xmlDoc.Save(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear the RSA key.\n            rsaKey.Clear()\n        End Try\n\n    End Sub\n\n\n    Sub Encrypt(ByVal Doc As XmlDocument, ByVal ElementToEncrypt As String, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If ElementToEncrypt Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementToEncrypt&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Find the specified element in the XmlDocument\n        &#39; object and create a new XmlElemnt object.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        Dim elementEncrypt As XmlElement = Doc.GetElementsByTagName(ElementToEncrypt)(0)\n\n        &#39; Throw an XmlException if the element was not found.\n        If elementToEncrypt Is Nothing Then\n            Throw New XmlException(&quot;The specified element was not found&quot;)\n        End If\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a new instance of the EncryptedXml class \n        &#39; and use it to encrypt the XmlElement with the \n        &#39; a new random symmetric key.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a 256 bit Rijndael key.\n        Dim sessionKey As New RijndaelManaged()\n        sessionKey.KeySize = 256\n\n        Dim eXml As New EncryptedXml()\n\n        Dim encryptedElement As Byte() = eXml.EncryptData(elementEncrypt, sessionKey, False)\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Construct an EncryptedData object and populate\n        &#39; it with the desired encryption information.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim edElement As New EncryptedData()\n        edElement.Type = EncryptedXml.XmlEncElementUrl\n\n        &#39; Create an EncryptionMethod element so that the \n        &#39; receiver knows which algorithm to use for decryption.\n        edElement.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncAES256Url)\n\n        &#39; Encrypt the session key and add it to an EncryptedKey element.\n        Dim ek As New EncryptedKey()\n\n        Dim encryptedKey As Byte() = EncryptedXml.EncryptKey(sessionKey.Key, Alg, False)\n\n        ek.CipherData = New CipherData(encryptedKey)\n\n        ek.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncRSA15Url)\n\n        &#39; Set the KeyInfo element to specify the\n        &#39; name of the RSA key.\n        &#39; Create a new KeyInfo element.\n        edElement.KeyInfo = New KeyInfo()\n\n        &#39; Create a new KeyInfoName element.\n        Dim kin As New KeyInfoName()\n\n        &#39; Specify a name for the key.\n        kin.Value = KeyName\n\n        &#39; Add the KeyInfoName element to the \n        &#39; EncryptedKey object.\n        ek.KeyInfo.AddClause(kin)\n\n        &#39; Add the encrypted key to the \n        &#39; EncryptedData object.\n        edElement.KeyInfo.AddClause(New KeyInfoEncryptedKey(ek))\n\n        &#39; Add the encrypted element data to the \n        &#39; EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Replace the element from the original XmlDocument\n        &#39; object with the EncryptedData element.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        EncryptedXml.ReplaceElement(elementEncrypt, edElement, False)\n\n    End Sub\n\n\n    Sub Decrypt(ByVal Doc As XmlDocument, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39; Create a new EncryptedXml object.\n        Dim exml As New EncryptedXml(Doc)\n\n        &#39; Add a key-name mapping.\n        &#39; This method can only decrypt documents\n        &#39; that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg)\n\n        &#39; Decrypt the element.\n        exml.DecryptDocument()\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.XML.XMLEncImbedKey#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.Security.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Xml;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::Xml;\nstatic void Encrypt( XmlDocument^ Doc, String^ ElementToEncrypt, RSA^ Alg, String^ KeyName )\n{\n\n   // Check the arguments.\n   if ( Doc == nullptr )\n      throw gcnew ArgumentNullException( L&quot;Doc&quot; );\n\n   if ( ElementToEncrypt == nullptr )\n      throw gcnew ArgumentNullException( L&quot;ElementToEncrypt&quot; );\n\n   if ( Alg == nullptr )\n      throw gcnew ArgumentNullException( L&quot;Alg&quot; );\n\n\n   ////////////////////////////////////////////////\n   // Find the specified element in the XmlDocument\n   // object and create a new XmlElemnt object.\n   ////////////////////////////////////////////////\n   XmlElement^ elementToEncrypt = dynamic_cast&lt;XmlElement^&gt;(Doc-&gt;GetElementsByTagName( ElementToEncrypt )-&gt;Item( 0 ));\n\n   // Throw an XmlException if the element was not found.\n   if ( elementToEncrypt == nullptr )\n   {\n      throw gcnew XmlException( L&quot;The specified element was not found&quot; );\n   }\n\n\n   //////////////////////////////////////////////////\n   // Create a new instance of the EncryptedXml class\n   // and use it to encrypt the XmlElement with the\n   // a new random symmetric key.\n   //////////////////////////////////////////////////\n   // Create a 256 bit Rijndael key.\n   RijndaelManaged^ sessionKey = gcnew RijndaelManaged;\n   sessionKey-&gt;KeySize = 256;\n   EncryptedXml^ eXml = gcnew EncryptedXml;\n   array&lt;Byte&gt;^encryptedElement = eXml-&gt;EncryptData( elementToEncrypt, sessionKey, false );\n\n   ////////////////////////////////////////////////\n   // Construct an EncryptedData object and populate\n   // it with the desired encryption information.\n   ////////////////////////////////////////////////\n   EncryptedData^ edElement = gcnew EncryptedData;\n   edElement-&gt;Type = EncryptedXml::XmlEncElementUrl;\n\n   // Create an EncryptionMethod element so that the\n   // receiver knows which algorithm to use for decryption.\n   edElement-&gt;EncryptionMethod = gcnew EncryptionMethod( EncryptedXml::XmlEncAES256Url );\n\n   // Encrypt the session key and add it to an EncryptedKey element.\n   EncryptedKey^ ek = gcnew EncryptedKey;\n   array&lt;Byte&gt;^encryptedKey = EncryptedXml::EncryptKey( sessionKey-&gt;Key, Alg, false );\n   ek-&gt;CipherData = gcnew CipherData( encryptedKey );\n   ek-&gt;EncryptionMethod = gcnew EncryptionMethod( EncryptedXml::XmlEncRSA15Url );\n\n   // Set the KeyInfo element to specify the\n   // name of the RSA key.\n   // Create a new KeyInfo element.\n   edElement-&gt;KeyInfo = gcnew KeyInfo;\n\n   // Create a new KeyInfoName element.\n   KeyInfoName^ kin = gcnew KeyInfoName;\n\n   // Specify a name for the key.\n   kin-&gt;Value = KeyName;\n\n   // Add the KeyInfoName element to the\n   // EncryptedKey object.\n   ek-&gt;KeyInfo-&gt;AddClause( kin );\n\n   // Add the encrypted key to the\n   // EncryptedData object.\n   edElement-&gt;KeyInfo-&gt;AddClause( gcnew KeyInfoEncryptedKey( ek ) );\n\n   // Add the encrypted element data to the\n   // EncryptedData object.\n   edElement-&gt;CipherData-&gt;CipherValue = encryptedElement;\n\n   ////////////////////////////////////////////////////\n   // Replace the element from the original XmlDocument\n   // object with the EncryptedData element.\n   ////////////////////////////////////////////////////\n   EncryptedXml::ReplaceElement( elementToEncrypt, edElement, false );\n}\n\nstatic void Decrypt( XmlDocument^ Doc, RSA^ Alg, String^ KeyName )\n{\n\n   // Check the arguments.\n   if ( Doc == nullptr )\n      throw gcnew ArgumentNullException( L&quot;Doc&quot; );\n\n   if ( Alg == nullptr )\n      throw gcnew ArgumentNullException( L&quot;Alg&quot; );\n\n   if ( KeyName == nullptr )\n      throw gcnew ArgumentNullException( L&quot;KeyName&quot; );\n\n\n   // Create a new EncryptedXml object.\n   EncryptedXml^ exml = gcnew EncryptedXml( Doc );\n\n   // Add a key-name mapping.\n   // This method can only decrypt documents\n   // that present the specified key name.\n   exml-&gt;AddKeyNameMapping( KeyName, Alg );\n\n   // Decrypt the element.\n   exml-&gt;DecryptDocument();\n}\n\nint main()\n{\n\n   // Create an XmlDocument object.\n   XmlDocument^ xmlDoc = gcnew XmlDocument;\n\n   // Load an XML file into the XmlDocument object.\n   try\n   {\n      xmlDoc-&gt;PreserveWhitespace = true;\n      xmlDoc-&gt;Load( L&quot;test.xml&quot; );\n   }\n   catch ( Exception^ e )\n   {\n      Console::WriteLine( e-&gt;Message );\n      return 0;\n   }\n\n\n   // Create a new RSA key.  This key will encrypt a symmetric key,\n   // which will then be imbedded in the XML document.\n   RSA^ rsaKey = gcnew RSACryptoServiceProvider;\n   try\n   {\n\n      // Encrypt the &quot;creditcard&quot; element.\n      Encrypt( xmlDoc, L&quot;creditcard&quot;, rsaKey, L&quot;rsaKey&quot; );\n\n      // Display the encrypted XML to the console.\n      Console::WriteLine( L&quot;Encrypted XML:&quot; );\n      Console::WriteLine();\n      Console::WriteLine( xmlDoc-&gt;OuterXml );\n\t  xmlDoc-&gt;Save( L&quot;test.xml&quot; );\n\n      // Decrypt the &quot;creditcard&quot; element.\n      Decrypt( xmlDoc, rsaKey, L&quot;rsaKey&quot; );\n\n      // Display the encrypted XML to the console.\n      Console::WriteLine();\n      Console::WriteLine( L&quot;Decrypted XML:&quot; );\n      Console::WriteLine();\n      Console::WriteLine( xmlDoc-&gt;OuterXml );\n\t  xmlDoc-&gt;Save( L&quot;test.xml&quot; );\n   }\n   catch ( Exception^ e )\n   {\n      Console::WriteLine( e-&gt;Message );\n   }\n   finally\n   {\n\n      // Clear the RSA key.\n      rsaKey-&gt;Clear();\n   }\n\n   return 1;\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The KeyInfoEncryptedKey class wraps the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class, which allows you to add the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class as a subelement of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfo\" data-linktype=\"relative-path\">KeyInfo</a> class.  Initialize the KeyInfoEncryptedKey class to an instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class when you need to add an encrypted session key to your encrypted XML document.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyInfoEncryptedKey()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public KeyInfoEncryptedKey ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor does not initialize the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> class using an instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class.  Use the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey#System_Security_Cryptography_Xml_KeyInfoEncryptedKey_EncryptedKey_\" data-linktype=\"relative-path\">EncryptedKey</a> property to specify an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> object when you use this constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey__ctor_System_Security_Cryptography_Xml_EncryptedKey_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyInfoEncryptedKey(EncryptedKey)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> class using an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public KeyInfoEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>encryptedKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> object that encapsulates an encrypted key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey_EncryptedKey_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey_EncryptedKey\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncryptedKey</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> object that encapsulates an encrypted key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Security.Cryptography.Xml.EncryptedKey EncryptedKey { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> object that encapsulates an encrypted key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The EncryptedKey property is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> class wraps the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class, which allows you to add the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class as a subelement of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfo\" data-linktype=\"relative-path\">KeyInfo</a> class.  Use the EncryptedKey property to access the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> class contained within the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey_GetXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey_GetXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetXml()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an XML representation of a <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Xml.XmlElement GetXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An XML representation of a <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The encrypted key is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey_LoadXml_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Security_Cryptography_Xml_KeyInfoEncryptedKey_LoadXml_System_Xml_XmlElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadXml(XmlElement)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Parses the input <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object and configures the internal state of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> object to match.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void LoadXml (System.Xml.XmlElement value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object that specifies the state of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoencryptedkey\" data-linktype=\"relative-path\">KeyInfoEncryptedKey</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.KeyInfoEncryptedKey.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoEncryptedKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoEncryptedKey..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoEncryptedKey.LoadXml\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"9ebf7690-47d7-dee0-5488-c2675b697be8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Wraps the  class, it to be placed as a subelement of the  class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.security.cryptography.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.KeyInfoEncryptedKey\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Security.Cryptography.Xml.KeyInfoEncryptedKey.yml","open_to_public_contributors":false,"api_name":["System.Security.Cryptography.Xml.KeyInfoEncryptedKey","System.Security.Cryptography.Xml.KeyInfoEncryptedKey..ctor","System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey","System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml","System.Security.Cryptography.Xml.KeyInfoEncryptedKey.LoadXml"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.KeyInfoEncryptedKey","System::Security::Cryptography::Xml::KeyInfoEncryptedKey","System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor","System::Security::Cryptography::Xml::KeyInfoEncryptedKey::#ctor","System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey","System::Security::Cryptography::Xml::KeyInfoEncryptedKey::EncryptedKey","System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml","System::Security::Cryptography::Xml::KeyInfoEncryptedKey::GetXml","System.Security.Cryptography.Xml.KeyInfoEncryptedKey.LoadXml","System::Security::Cryptography::Xml::KeyInfoEncryptedKey::LoadXml"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"9ebf7690-47d7-dee0-5488-c2675b697be8","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoEncryptedKey.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"KeyInfoEncryptedKey class | Microsoft Docs","_op_ogTitle":"KeyInfoEncryptedKey class","description":"Wraps the  class, it to be placed as a subelement of the  class.\n","toc_asset_id":"api/_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.KeyInfoEncryptedKey","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.keyinfoencryptedkey","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.xml.keyinfoencryptedkey","fileRelativePath":"api/System.Security.Cryptography.Xml.KeyInfoEncryptedKey.html"},"themesRelativePathToOutputRoot":"_themes/"}