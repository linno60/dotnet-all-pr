{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CharUnicodeInfo</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Retrieves information about a Unicode character. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public static class CharUnicodeInfo</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">CharUnicodeInfo</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example shows the values returned by each method for different types of characters.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.CharUnicodeInfo_Char#1\">using System;\nusing System.Globalization;\n\npublic class SamplesCharUnicodeInfo  {\n\n   public static void Main()  {\n\n      Console.WriteLine( &quot;                                        c  Num   Dig   Dec   UnicodeCategory&quot; );\n\n      Console.Write( &quot;U+0061 LATIN SMALL LETTER A            &quot; );\n      PrintProperties( &#39;a&#39; );\n\n      Console.Write( &quot;U+0393 GREEK CAPITAL LETTER GAMMA      &quot; );\n      PrintProperties( &#39;\\u0393&#39; );\n\n      Console.Write( &quot;U+0039 DIGIT NINE                      &quot; );\n      PrintProperties( &#39;9&#39; );\n\n      Console.Write( &quot;U+00B2 SUPERSCRIPT TWO                 &quot; );\n      PrintProperties( &#39;\\u00B2&#39; );\n\n      Console.Write( &quot;U+00BC VULGAR FRACTION ONE QUARTER     &quot; );\n      PrintProperties( &#39;\\u00BC&#39; );\n\n      Console.Write( &quot;U+0BEF TAMIL DIGIT NINE                &quot; );\n      PrintProperties( &#39;\\u0BEF&#39; );\n\n      Console.Write( &quot;U+0BF0 TAMIL NUMBER TEN                &quot; );\n      PrintProperties( &#39;\\u0BF0&#39; );\n\n      Console.Write( &quot;U+0F33 TIBETAN DIGIT HALF ZERO         &quot; );\n      PrintProperties( &#39;\\u0F33&#39; );\n\n      Console.Write( &quot;U+2788 CIRCLED SANS-SERIF DIGIT NINE   &quot; );\n      PrintProperties( &#39;\\u2788&#39; );\n\n   }\n\n   public static void PrintProperties( char c )  {\n      Console.Write( &quot; {0,-3}&quot;, c );\n      Console.Write( &quot; {0,-5}&quot;, CharUnicodeInfo.GetNumericValue( c ) );\n      Console.Write( &quot; {0,-5}&quot;, CharUnicodeInfo.GetDigitValue( c ) );\n      Console.Write( &quot; {0,-5}&quot;, CharUnicodeInfo.GetDecimalDigitValue( c ) );\n      Console.WriteLine( &quot;{0}&quot;, CharUnicodeInfo.GetUnicodeCategory( c ) );\n   }\n\n}\n\n\n/*\nThis code produces the following output.  Some characters might not display at the console.\n\n                                        c  Num   Dig   Dec   UnicodeCategory\nU+0061 LATIN SMALL LETTER A             a   -1    -1    -1   LowercaseLetter\nU+0393 GREEK CAPITAL LETTER GAMMA       \\u0393   -1    -1    -1   UppercaseLetter\nU+0039 DIGIT NINE                       9   9     9     9    DecimalDigitNumber\nU+00B2 SUPERSCRIPT TWO                  \\u00B2   2     2     2    OtherNumber\nU+00BC VULGAR FRACTION ONE QUARTER      \\u00BC   0.25  -1    -1   OtherNumber\nU+0BEF TAMIL DIGIT NINE                 \\u0BEF   9     9     9    DecimalDigitNumber\nU+0BF0 TAMIL NUMBER TEN                 \\u0BF0   10    -1    -1   OtherNumber\nU+0F33 TIBETAN DIGIT HALF ZERO          \\u0F33   -0.5  -1    -1   OtherNumber\nU+2788 CIRCLED SANS-SERIF DIGIT NINE    \\u2788   9     9     -1   OtherNumber\n\n*/\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Globalization.CharUnicodeInfo_Char#1\">using namespace System;\nusing namespace System::Globalization;\nvoid PrintProperties( Char c );\nint main()\n{\n   Console::WriteLine( &quot;                                        c  Num   Dig   Dec   UnicodeCategory&quot; );\n   Console::Write( &quot;U+0061 LATIN SMALL LETTER A            &quot; );\n   PrintProperties( L&#39;a&#39; );\n   Console::Write( &quot;U+0393 GREEK CAPITAL LETTER GAMMA      &quot; );\n   PrintProperties( L&#39;\\u0393&#39; );\n   Console::Write( &quot;U+0039 DIGIT NINE                      &quot; );\n   PrintProperties( L&#39;9&#39; );\n   Console::Write( &quot;U+00B2 SUPERSCRIPT TWO                 &quot; );\n   PrintProperties( L&#39;\\u00B2&#39; );\n   Console::Write( &quot;U+00BC VULGAR FRACTION ONE QUARTER     &quot; );\n   PrintProperties( L&#39;\\u00BC&#39; );\n   Console::Write( &quot;U+0BEF TAMIL DIGIT NINE                &quot; );\n   PrintProperties( L&#39;\\u0BEF&#39; );\n   Console::Write( &quot;U+0BF0 TAMIL NUMBER TEN                &quot; );\n   PrintProperties( L&#39;\\u0BF0&#39; );\n   Console::Write( &quot;U+0F33 TIBETAN DIGIT HALF ZERO         &quot; );\n   PrintProperties( L&#39;\\u0F33&#39; );\n   Console::Write( &quot;U+2788 CIRCLED SANS-SERIF DIGIT NINE   &quot; );\n   PrintProperties( L&#39;\\u2788&#39; );\n}\n\nvoid PrintProperties( Char c )\n{\n   Console::Write( &quot; {0,-3}&quot;, c );\n   Console::Write( &quot; {0,-5}&quot;, CharUnicodeInfo::GetNumericValue( c ) );\n   Console::Write( &quot; {0,-5}&quot;, CharUnicodeInfo::GetDigitValue( c ) );\n   Console::Write( &quot; {0,-5}&quot;, CharUnicodeInfo::GetDecimalDigitValue( c ) );\n   Console::WriteLine( &quot;{0}&quot;, CharUnicodeInfo::GetUnicodeCategory( c ) );\n}\n\n/*\nThis code produces the following output.  Some characters might not display at the console.\n\n                                        c  Num   Dig   Dec   UnicodeCategory\nU+0061 LATIN SMALL LETTER A             a   -1    -1    -1   LowercaseLetter\nU+0393 GREEK CAPITAL LETTER GAMMA       \\u0393   -1    -1    -1   UppercaseLetter\nU+0039 DIGIT NINE                       9   9     9     9    DecimalDigitNumber\nU+00B2 SUPERSCRIPT TWO                  \\u00B2   2     2     2    OtherNumber\nU+00BC VULGAR FRACTION ONE QUARTER      \\u00BC   0.25  -1    -1   OtherNumber\nU+0BEF TAMIL DIGIT NINE                 \\u0BEF   9     9     9    DecimalDigitNumber\nU+0BF0 TAMIL NUMBER TEN                 \\u0BF0   10    -1    -1   OtherNumber\nU+0F33 TIBETAN DIGIT HALF ZERO          \\u0F33   -0.5  -1    -1   OtherNumber\nU+2788 CIRCLED SANS-SERIF DIGIT NINE    \\u2788   9     9     -1   OtherNumber\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.CharUnicodeInfo_Char#1\">Imports System\nImports System.Globalization\nImports Microsoft.VisualBasic\n\nPublic Class SamplesCharUnicodeInfo   \n\n   Public Shared Sub Main()\n\n      Console.WriteLine(&quot;                                        c  Num   Dig   Dec   UnicodeCategory&quot;)\n\n      Console.Write(&quot;U+0061 LATIN SMALL LETTER A            &quot;)\n      PrintProperties(&quot;a&quot;c)\n\n      Console.Write(&quot;U+0393 GREEK CAPITAL LETTER GAMMA      &quot;)\n      PrintProperties(ChrW(&amp;H0393))\n\n      Console.Write(&quot;U+0039 DIGIT NINE                      &quot;)\n      PrintProperties(&quot;9&quot;c)\n\n      Console.Write(&quot;U+00B2 SUPERSCRIPT TWO                 &quot;)\n      PrintProperties(ChrW(&amp;H00B2))\n\n      Console.Write(&quot;U+00BC VULGAR FRACTION ONE QUARTER     &quot;)\n      PrintProperties(ChrW(&amp;H00BC))\n\n      Console.Write(&quot;U+0BEF TAMIL DIGIT NINE                &quot;)\n      PrintProperties(ChrW(&amp;H0BEF))\n\n      Console.Write(&quot;U+0BF0 TAMIL NUMBER TEN                &quot;)\n      PrintProperties(ChrW(&amp;H0BF0))\n\n      Console.Write(&quot;U+0F33 TIBETAN DIGIT HALF ZERO         &quot;)\n      PrintProperties(ChrW(&amp;H0F33))\n\n      Console.Write(&quot;U+2788 CIRCLED SANS-SERIF DIGIT NINE   &quot;)\n      PrintProperties(ChrW(&amp;H2788))\n\n   End Sub &#39;Main\n\n   Public Shared Sub PrintProperties(c As Char)\n      Console.Write(&quot; {0,-3}&quot;, c)\n      Console.Write(&quot; {0,-5}&quot;, CharUnicodeInfo.GetNumericValue(c))\n      Console.Write(&quot; {0,-5}&quot;, CharUnicodeInfo.GetDigitValue(c))\n      Console.Write(&quot; {0,-5}&quot;, CharUnicodeInfo.GetDecimalDigitValue(c))\n      Console.WriteLine(&quot;{0}&quot;, CharUnicodeInfo.GetUnicodeCategory(c))\n   End Sub &#39;PrintProperties\n\nEnd Class &#39;SamplesCharUnicodeInfo \n\n\n&#39;This code produces the following output.  Some characters might not display at the console.\n&#39;\n&#39;                                        c  Num   Dig   Dec   UnicodeCategory\n&#39;U+0061 LATIN SMALL LETTER A             a   -1    -1    -1   LowercaseLetter\n&#39;U+0393 GREEK CAPITAL LETTER GAMMA       \\u0393   -1    -1    -1   UppercaseLetter\n&#39;U+0039 DIGIT NINE                       9   9     9     9    DecimalDigitNumber\n&#39;U+00B2 SUPERSCRIPT TWO                  \\u00B2   2     2     2    OtherNumber\n&#39;U+00BC VULGAR FRACTION ONE QUARTER      \\u00BC   0.25  -1    -1   OtherNumber\n&#39;U+0BEF TAMIL DIGIT NINE                 \\u0BEF   9     9     9    DecimalDigitNumber\n&#39;U+0BF0 TAMIL NUMBER TEN                 \\u0BF0   10    -1    -1   OtherNumber\n&#39;U+0F33 TIBETAN DIGIT HALF ZERO          \\u0F33   -0.5  -1    -1   OtherNumber\n&#39;U+2788 CIRCLED SANS-SERIF DIGIT NINE    \\u2788   9     9     -1   OtherNumber\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a> defines a number of Unicode character categories. For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol. Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions. The <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> enumeration defines the possible character categories.  </p>\n<p> You use the CharUnicodeInfo class to obtain the <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> value for a specific character. The CharUnicodeInfo class defines methods that return the following Unicode character values:  </p>\n<ul>\n<li><p>The specific category to which a character or surrogate pair belongs. The value returned is a member of the <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> enumeration.  </p>\n</li>\n<li><p>Numeric value. Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.  </p>\n</li>\n<li><p>Digit value. Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.  </p>\n</li>\n<li><p>Decimal digit value. Applies only to characters that represent decimal digits in the decimal (base 10) system. A decimal digit can be one of ten digits, from zero through nine. These characters are members of the <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">System.Globalization.UnicodeCategory</a> category.  </p>\n</li>\n</ul>\n<p> In addition, the CharUnicodeInfo class is used internally by a number of other .NET Framework types and methods that rely on character classification. These include:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.globalization.stringinfo\" data-linktype=\"relative-path\">StringInfo</a> class, which works with textual elements instead of single characters in a string.  </p>\n</li>\n<li><p>The overloads of the <a class=\"xref\" href=\"system.char#System_Char_GetUnicodeCategory_\" data-linktype=\"relative-path\">GetUnicodeCategory</a> method, which determine the category to which a character or surrogate pair belongs.  </p>\n</li>\n<li><p>The <a href=\"../topic/character%20classes%20in%20regular%20expressions\" data-linktype=\"relative-path\">character classes</a> recognized by <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a>, the .NET Framework&#39;s regular expression engine.  </p>\n</li>\n</ul>\n<p> When using this class in your applications, keep in mind the following programming considerations for using the <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> type. The type can be difficult to use, and strings are generally preferable for representing linguistic content.  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> object does not always correspond to a single character. Although the <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units. For more information, see &quot;Char Objects and Unicode Characters&quot; in the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> class.  </p>\n</li>\n<li><p>The notion of a &quot;character&quot; is also flexible. A character is often thought of as a glyph, but many glyphs require multiple code points. For example, ä can be represented either by two code points (&quot;a&quot; plus U+0308, which is the combining diaeresis), or by a single code point (&quot;ä&quot; or U+00A4). Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation. For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter. Uppercasing such a value simply retrieves the original value.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetDecimalDigitValue_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDecimalDigitValue(Char)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the decimal digit value of the specified numeric character.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int GetDecimalDigitValue (char ch);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ch</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Unicode character for which to get the decimal digit value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The decimal digit value of the specified numeric character.  </p>\n<p> -or-  </p>\n<p> -1, if the specified character is not a decimal digit.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method converts characters that represent decimal digits to their equivalent integral values. Decimal digits are characters in the <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine. It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).  </p>\n<p> For more information about Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetDecimalDigitValue_System_String_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDecimalDigitValue(String, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the decimal digit value of the numeric character at the specified index of the specified string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int GetDecimalDigitValue (string s, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the Unicode character for which to get the decimal digit value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the Unicode character for which to get the decimal digit value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The decimal digit value of the numeric character at the specified index of the specified string.  </p>\n<p> -or-  </p>\n<p> -1, if the character at the specified index of the specified string is not a decimal digit.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> is outside the range of valid indexes in <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method converts characters that represent decimal digits to their equivalent integral values. Decimal digits are characters in the <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine. It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).  </p>\n<p> For more information about Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetDigitValue_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDigitValue(Char)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the digit value of the specified numeric character.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int GetDigitValue (char ch);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ch</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Unicode character for which to get the digit value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The digit value of the specified numeric character.  </p>\n<p> -or-  </p>\n<p> -1, if the specified character is not a digit.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Digit value is a property that applies only to numeric characters that can be used as digits. A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.  </p>\n<p> For more information on Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetDigitValue_System_String_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDigitValue(String, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the digit value of the numeric character at the specified index of the specified string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int GetDigitValue (string s, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the Unicode character for which to get the digit value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the Unicode character for which to get the digit value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The digit value of the numeric character at the specified index of the specified string.  </p>\n<p> -or-  </p>\n<p> -1, if the character at the specified index of the specified string is not a digit.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> is outside the range of valid indexes in <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Digit value is a property that applies only to numeric characters that can be used as digits. A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.  </p>\n<p> For more information on Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetNumericValue_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetNumericValue(Char)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the numeric value associated with the specified character.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static double GetNumericValue (char ch);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ch</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Unicode character for which to get the numeric value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The numeric value associated with the specified character.  </p>\n<p> -or-  </p>\n<p> -1, if the specified character is not a numeric character.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits. For more information on Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.  </p>\n<p> The GetNumericValue method assumes that <code>ch</code> corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit. However, some numbers in the Unicode standard are represented by two <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <a class=\"xref\" href=\"system.char#System_Char_ConvertFromUtf32_\" data-linktype=\"relative-path\">ConvertFromUtf32</a> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the GetNumericValue method returns -1 if it is passed either a high surrogate or a low surrogate of this character.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Globalization.CharUnicodeInfo.GetNumericValue#2\">Dim utf32 As Integer = &amp;h10107       &#39; AEGEAN NUMBER ONE\nDim surrogate As String = Char.ConvertFromUtf32(utf32)\nFor Each ch In surrogate\n   Console.WriteLine(&quot;U+{0:X4}: {1}    &quot;, Convert.ToUInt16(ch), \n                     System.Globalization.CharUnicodeInfo.GetNumericValue(ch))\nNext\n&#39; The example displays the following output:\n&#39;       U+D800: -1\n&#39;       U+DD07: -1\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Globalization.CharUnicodeInfo.GetNumericValue#2\">int utf32 = 0x10107;       // AEGEAN NUMBER ONE\nstring surrogate = Char.ConvertFromUtf32(utf32);\nforeach (var ch in surrogate)\n   Console.WriteLine(&quot;U+{0:X4}: {1}    &quot;, Convert.ToUInt16(ch), \n                     System.Globalization.CharUnicodeInfo.GetNumericValue(ch));\n\n// The example displays the following output:\n//       U+D800: -1\n//       U+DD07: -1\n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetNumericValue_System_String_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetNumericValue(String, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the numeric value associated with the character at the specified index of the specified string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static double GetNumericValue (string s, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the Unicode character for which to get the numeric value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the Unicode character for which to get the numeric value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>The numeric value associated with the character at the specified index of the specified string.  </p>\n<p> -or-  </p>\n<p> -1, if the character at the specified index of the specified string is not a numeric character.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> is outside the range of valid indexes in <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits. For more information on Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.  </p>\n<p> If the <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> object at position <code>index</code> is the first character of a valid surrogate pair, the GetNumericValue method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <a class=\"xref\" href=\"system.char#System_Char_ConvertFromUtf32_\" data-linktype=\"relative-path\">ConvertFromUtf32</a> method to instantiate a string that represents each Aegean number. As the output from the example shows, the GetNumericValue method returns the correct numeric value if it is passed the high surrogate of an Aegean number. However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Globalization.CharUnicodeInfo.GetNumericValue#3\">&#39; Define a UTF32 value for each character in the \n&#39; Aegean numbering system.\nFor utf32 As Integer = &amp;h10107 To &amp;h10133\n   Dim surrogate As String = Char.ConvertFromUtf32(utf32)\n   For ctr As Integer = 0 To surrogate.Length - 1\n      Console.Write(&quot;U+{0:X4} at position {1}: {2}     &quot;, \n                    Convert.ToUInt16(surrogate(ctr)), ctr,  \n                    System.Globalization.CharUnicodeInfo.GetNumericValue(surrogate, ctr))\n   Next\n   Console.WriteLine()\nNext    \n&#39; The example displays the following output:\n&#39;       U+D800 at position 0: 1     U+DD07 at position 1: -1\n&#39;       U+D800 at position 0: 2     U+DD08 at position 1: -1\n&#39;       U+D800 at position 0: 3     U+DD09 at position 1: -1\n&#39;       U+D800 at position 0: 4     U+DD0A at position 1: -1\n&#39;       U+D800 at position 0: 5     U+DD0B at position 1: -1\n&#39;       U+D800 at position 0: 6     U+DD0C at position 1: -1\n&#39;       U+D800 at position 0: 7     U+DD0D at position 1: -1\n&#39;       U+D800 at position 0: 8     U+DD0E at position 1: -1\n&#39;       U+D800 at position 0: 9     U+DD0F at position 1: -1\n&#39;       U+D800 at position 0: 10     U+DD10 at position 1: -1\n&#39;       U+D800 at position 0: 20     U+DD11 at position 1: -1\n&#39;       U+D800 at position 0: 30     U+DD12 at position 1: -1\n&#39;       U+D800 at position 0: 40     U+DD13 at position 1: -1\n&#39;       U+D800 at position 0: 50     U+DD14 at position 1: -1\n&#39;       U+D800 at position 0: 60     U+DD15 at position 1: -1\n&#39;       U+D800 at position 0: 70     U+DD16 at position 1: -1\n&#39;       U+D800 at position 0: 80     U+DD17 at position 1: -1\n&#39;       U+D800 at position 0: 90     U+DD18 at position 1: -1\n&#39;       U+D800 at position 0: 100     U+DD19 at position 1: -1\n&#39;       U+D800 at position 0: 200     U+DD1A at position 1: -1\n&#39;       U+D800 at position 0: 300     U+DD1B at position 1: -1\n&#39;       U+D800 at position 0: 400     U+DD1C at position 1: -1\n&#39;       U+D800 at position 0: 500     U+DD1D at position 1: -1\n&#39;       U+D800 at position 0: 600     U+DD1E at position 1: -1\n&#39;       U+D800 at position 0: 700     U+DD1F at position 1: -1\n&#39;       U+D800 at position 0: 800     U+DD20 at position 1: -1\n&#39;       U+D800 at position 0: 900     U+DD21 at position 1: -1\n&#39;       U+D800 at position 0: 1000     U+DD22 at position 1: -1\n&#39;       U+D800 at position 0: 2000     U+DD23 at position 1: -1\n&#39;       U+D800 at position 0: 3000     U+DD24 at position 1: -1\n&#39;       U+D800 at position 0: 4000     U+DD25 at position 1: -1\n&#39;       U+D800 at position 0: 5000     U+DD26 at position 1: -1\n&#39;       U+D800 at position 0: 6000     U+DD27 at position 1: -1\n&#39;       U+D800 at position 0: 7000     U+DD28 at position 1: -1\n&#39;       U+D800 at position 0: 8000     U+DD29 at position 1: -1\n&#39;       U+D800 at position 0: 9000     U+DD2A at position 1: -1\n&#39;       U+D800 at position 0: 10000     U+DD2B at position 1: -1\n&#39;       U+D800 at position 0: 20000     U+DD2C at position 1: -1\n&#39;       U+D800 at position 0: 30000     U+DD2D at position 1: -1\n&#39;       U+D800 at position 0: 40000     U+DD2E at position 1: -1\n&#39;       U+D800 at position 0: 50000     U+DD2F at position 1: -1\n&#39;       U+D800 at position 0: 60000     U+DD30 at position 1: -1\n&#39;       U+D800 at position 0: 70000     U+DD31 at position 1: -1\n&#39;       U+D800 at position 0: 80000     U+DD32 at position 1: -1\n&#39;       U+D800 at position 0: 90000     U+DD33 at position 1: -1\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Globalization.CharUnicodeInfo.GetNumericValue#3\">// Define a UTF32 value for each character in the \n// Aegean numbering system.\nfor (int utf32 = 0x10107; utf32 &lt;= 0x10133; utf32++) {\n   string surrogate = Char.ConvertFromUtf32(utf32);\n   for (int ctr = 0; ctr &lt; surrogate.Length; ctr++) \n      Console.Write(&quot;U+{0:X4} at position {1}: {2}     &quot;, \n                    Convert.ToUInt16(surrogate[ctr]), ctr,  \n                    System.Globalization.CharUnicodeInfo.GetNumericValue(surrogate, ctr));\n\n   Console.WriteLine();\n}    \n// The example displays the following output:\n//       U+D800 at position 0: 1     U+DD07 at position 1: -1\n//       U+D800 at position 0: 2     U+DD08 at position 1: -1\n//       U+D800 at position 0: 3     U+DD09 at position 1: -1\n//       U+D800 at position 0: 4     U+DD0A at position 1: -1\n//       U+D800 at position 0: 5     U+DD0B at position 1: -1\n//       U+D800 at position 0: 6     U+DD0C at position 1: -1\n//       U+D800 at position 0: 7     U+DD0D at position 1: -1\n//       U+D800 at position 0: 8     U+DD0E at position 1: -1\n//       U+D800 at position 0: 9     U+DD0F at position 1: -1\n//       U+D800 at position 0: 10     U+DD10 at position 1: -1\n//       U+D800 at position 0: 20     U+DD11 at position 1: -1\n//       U+D800 at position 0: 30     U+DD12 at position 1: -1\n//       U+D800 at position 0: 40     U+DD13 at position 1: -1\n//       U+D800 at position 0: 50     U+DD14 at position 1: -1\n//       U+D800 at position 0: 60     U+DD15 at position 1: -1\n//       U+D800 at position 0: 70     U+DD16 at position 1: -1\n//       U+D800 at position 0: 80     U+DD17 at position 1: -1\n//       U+D800 at position 0: 90     U+DD18 at position 1: -1\n//       U+D800 at position 0: 100     U+DD19 at position 1: -1\n//       U+D800 at position 0: 200     U+DD1A at position 1: -1\n//       U+D800 at position 0: 300     U+DD1B at position 1: -1\n//       U+D800 at position 0: 400     U+DD1C at position 1: -1\n//       U+D800 at position 0: 500     U+DD1D at position 1: -1\n//       U+D800 at position 0: 600     U+DD1E at position 1: -1\n//       U+D800 at position 0: 700     U+DD1F at position 1: -1\n//       U+D800 at position 0: 800     U+DD20 at position 1: -1\n//       U+D800 at position 0: 900     U+DD21 at position 1: -1\n//       U+D800 at position 0: 1000     U+DD22 at position 1: -1\n//       U+D800 at position 0: 2000     U+DD23 at position 1: -1\n//       U+D800 at position 0: 3000     U+DD24 at position 1: -1\n//       U+D800 at position 0: 4000     U+DD25 at position 1: -1\n//       U+D800 at position 0: 5000     U+DD26 at position 1: -1\n//       U+D800 at position 0: 6000     U+DD27 at position 1: -1\n//       U+D800 at position 0: 7000     U+DD28 at position 1: -1\n//       U+D800 at position 0: 8000     U+DD29 at position 1: -1\n//       U+D800 at position 0: 9000     U+DD2A at position 1: -1\n//       U+D800 at position 0: 10000     U+DD2B at position 1: -1\n//       U+D800 at position 0: 20000     U+DD2C at position 1: -1\n//       U+D800 at position 0: 30000     U+DD2D at position 1: -1\n//       U+D800 at position 0: 40000     U+DD2E at position 1: -1\n//       U+D800 at position 0: 50000     U+DD2F at position 1: -1\n//       U+D800 at position 0: 60000     U+DD30 at position 1: -1\n//       U+D800 at position 0: 70000     U+DD31 at position 1: -1\n//       U+D800 at position 0: 80000     U+DD32 at position 1: -1\n//       U+D800 at position 0: 90000     U+DD33 at position 1: -1\n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetUnicodeCategory_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetUnicodeCategory(Char)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the Unicode category of the specified character.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ch</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Unicode character for which to get the Unicode category.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> value indicating the category of the specified character.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Unicode characters are divided into categories. A character&#39;s category is one of its properties. For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol. The <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> class returns the category of a Unicode character. For more information on Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.  </p>\n<p> The GetUnicodeCategory method assumes that <code>ch</code> corresponds to a single linguistic character and returns its category. This means that, for surrogate pairs, it returns <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">System.Globalization.UnicodeCategory</a> instead of the category to which the surrogate belongs. For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F. The following example uses the <a class=\"xref\" href=\"system.char#System_Char_ConvertFromUtf32_\" data-linktype=\"relative-path\">ConvertFromUtf32</a> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet. As the output from the example shows, the <a class=\"xref\" href=\"system.char#System_Char_IsNumber_System_Char_\" data-linktype=\"relative-path\">IsNumber(Char)</a> method returns <code>false</code> if it is passed either the high surrogate or the low surrogate of this character.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1\">int utf32 = 0x10380;       // UGARITIC LETTER ALPA\nstring surrogate = Char.ConvertFromUtf32(utf32);\nforeach (var ch in surrogate)\n   Console.WriteLine(&quot;U+{0:X4}: {1:G}&quot;, \n                     Convert.ToUInt16(ch), \n                     System.Globalization.CharUnicodeInfo.GetUnicodeCategory(ch));\n// The example displays the following output:\n//       U+D800: Surrogate\n//       U+DF80: Surrogate\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1\">Dim utf32 As Integer = &amp;h10380       &#39; UGARITIC LETTER ALPA\nDim surrogate As String = Char.ConvertFromUtf32(utf32)\nFor Each ch In surrogate\n   Console.WriteLine(&quot;U+{0:X4}: {1:G}&quot;, \n                     Convert.ToUInt16(ch), \n                     System.Globalization.CharUnicodeInfo.GetUnicodeCategory(ch))\nNext\n&#39; The example displays the following output:\n&#39;       U+D800: Surrogate\n&#39;       U+DF80: Surrogate\n</code></pre><p> Note that GetUnicodeCategory does not always return the same <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> value as the <a class=\"xref\" href=\"system.char#System_Char_GetUnicodeCategory_\" data-linktype=\"relative-path\">GetUnicodeCategory</a> method when passed a particular character as a parameter. The GetUnicodeCategory method is designed to reflect the current version of the Unicode standard. In contrast, although the <a class=\"xref\" href=\"system.char#System_Char_GetUnicodeCategory_\" data-linktype=\"relative-path\">GetUnicodeCategory</a> method usually reflects the current version of the Unicode standard, it might return a character&#39;s category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_CharUnicodeInfo_GetUnicodeCategory_System_String_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetUnicodeCategory(String, Int32)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the Unicode category of the character at the specified index of the specified string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the Unicode character for which to get the Unicode category.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index of the Unicode character for which to get the Unicode category.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> value indicating the category of the character at the specified index of the specified string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>index</code> is outside the range of valid indexes in <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Unicode characters are divided into categories. A character&#39;s category is one of its properties. For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol. The <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> class returns the category of a Unicode character. For more information on Unicode characters, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>.  </p>\n<p> If the <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> object at position <code>index</code> is the first character of a valid surrogate pair, the GetUnicodeCategory method returns the Unicode category of the surrogate pair instead of returning <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">System.Globalization.UnicodeCategory</a>. For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F. The following example uses the <a class=\"xref\" href=\"system.char#System_Char_ConvertFromUtf32_\" data-linktype=\"relative-path\">ConvertFromUtf32</a> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet. As the output from the example shows, the GetUnicodeCategory method returns <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">System.Globalization.UnicodeCategory</a> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair. However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">System.Globalization.UnicodeCategory</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2\">int utf32 = 0x10380;       // UGARITIC LETTER ALPA\nstring surrogate = Char.ConvertFromUtf32(utf32);\nfor (int ctr = 0; ctr &lt; surrogate.Length; ctr++)\n   Console.WriteLine(&quot;U+{0:X4}: {1:G}&quot;, \n                     Convert.ToUInt16(surrogate[ctr]), \n                     System.Globalization.CharUnicodeInfo.GetUnicodeCategory(surrogate, ctr));\n// The example displays the following output:\n//       U+D800: OtherLetter\n//       U+DF80: Surrogate      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2\">Dim utf32 As Integer = &amp;h10380       &#39; UGARITIC LETTER ALPA\nDim surrogate As String = Char.ConvertFromUtf32(utf32)\nFor ctr As Integer = 0 To surrogate.Length - 1\n   Console.WriteLine(&quot;U+{0:X4}: {1:G}&quot;, \n                     Convert.ToUInt16(surrogate(ctr)), \n                     System.Globalization.CharUnicodeInfo.GetUnicodeCategory(surrogate, ctr))\nNext\n&#39; The example displays the following output:\n&#39;       U+D800: OtherLetter\n&#39;       U+DF80: Surrogate      \n</code></pre><p> Note that GetUnicodeCategory method does not always return the same <a class=\"xref\" href=\"system.globalization.unicodecategory\" data-linktype=\"relative-path\">UnicodeCategory</a> value as the <a class=\"xref\" href=\"system.char#System_Char_GetUnicodeCategory_\" data-linktype=\"relative-path\">GetUnicodeCategory</a> method when passed a particular character as a parameter. The GetUnicodeCategory method is designed to reflect the current version of the Unicode standard. In contrast, although the <a class=\"xref\" href=\"system.char#System_Char_GetUnicodeCategory_\" data-linktype=\"relative-path\">GetUnicodeCategory</a> method usually reflects the current version of the Unicode standard, it might return a character&#39;s category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.CharUnicodeInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CharUnicodeInfo\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CharUnicodeInfo.GetDecimalDigitValue\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CharUnicodeInfo.GetDigitValue\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CharUnicodeInfo.GetNumericValue\">\r\n<meta name=\"APIName\" content=\"System.Globalization.CharUnicodeInfo.GetUnicodeCategory\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"8a5fe565-a1fa-40e3-08f5-a57907604cbe\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Retrieves information about a Unicode character. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.globalization/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Globalization.CharUnicodeInfo\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Globalization.CharUnicodeInfo.yml","open_to_public_contributors":false,"api_name":["System.Globalization.CharUnicodeInfo","System.Globalization.CharUnicodeInfo.GetDecimalDigitValue","System.Globalization.CharUnicodeInfo.GetDigitValue","System.Globalization.CharUnicodeInfo.GetNumericValue","System.Globalization.CharUnicodeInfo.GetUnicodeCategory"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Globalization.CharUnicodeInfo","System::Globalization::CharUnicodeInfo","System.Globalization.CharUnicodeInfo.GetDecimalDigitValue","System::Globalization::CharUnicodeInfo::GetDecimalDigitValue","System.Globalization.CharUnicodeInfo.GetDigitValue","System::Globalization::CharUnicodeInfo::GetDigitValue","System.Globalization.CharUnicodeInfo.GetNumericValue","System::Globalization::CharUnicodeInfo::GetNumericValue","System.Globalization.CharUnicodeInfo.GetUnicodeCategory","System::Globalization::CharUnicodeInfo::GetUnicodeCategory"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"8a5fe565-a1fa-40e3-08f5-a57907604cbe","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Globalization/CharUnicodeInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CharUnicodeInfo class | Microsoft Docs","_op_ogTitle":"CharUnicodeInfo class","description":"Retrieves information about a Unicode character. This class cannot be inherited.\n","toc_asset_id":"api/_splitted/System.Globalization/toc.json","toc_rel":"_splitted/System.Globalization/toc.json","source_url":"","ms.assetid":"System.Globalization.CharUnicodeInfo","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.globalization.charunicodeinfo","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.globalization.charunicodeinfo","fileRelativePath":"api/System.Globalization.CharUnicodeInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}