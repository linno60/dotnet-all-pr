{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EntityCollectionChangedParams</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Encapsulates the arguments of a <a class=\"xref\" href=\"system.collections.specialized.inotifycollectionchanged#System_Collections_Specialized_INotifyCollectionChanged_CollectionChanged\" data-linktype=\"relative-path\">CollectionChanged</a> delegate.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class EntityCollectionChangedParams</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">EntityCollectionChangedParams</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code-behind page for the XAML file creates a <a class=\"xref\" href=\"system.data.services.client.dataservicecollection-1\" data-linktype=\"relative-path\">DataServiceCollection&lt;T&gt;</a> with custom methods that are called when changes occur to data that is bound to the binding collection. When the <a class=\"xref\" href=\"system.collections.objectmodel.observablecollection-1#System_Collections_ObjectModel_ObservableCollection_1_CollectionChanged\" data-linktype=\"relative-path\">CollectionChanged</a> event occurs, the supplied method prevents an item that has been removed from the binding collection from being deleted from the data service. When the <a class=\"xref\" href=\"system.collections.objectmodel.observablecollection-1#System_Collections_ObjectModel_ObservableCollection_1_PropertyChanged\" data-linktype=\"relative-path\">PropertyChanged</a> event occurs, the <code>ShipDate</code> value is validated to ensure that changes are not made to orders that have already shipped.  </p>\n<pre><code class=\"lang-vb\" name=\"Astoria Northwind Client#WpfDataBindingCustom\">Imports System\nImports System.Collections.Generic\nImports System.Linq\nImports System.Text\nImports System.Windows\nImports System.Windows.Controls\nImports System.Windows.Data\nImports System.Windows.Documents\nImports System.Windows.Input\nImports System.Windows.Media\nImports System.Windows.Media.Imaging\nImports System.Windows.Navigation\nImports System.Windows.Shapes\nImports System.Data.Services.Client\nImports NorthwindClient.Northwind\nImports System.Collections.Specialized\n\nPartial Public Class CustomerOrdersCustom\n    Inherits Window\n    Private context As NorthwindEntities\n    Private trackedCustomers As DataServiceCollection(Of Customer)\n    Private Const customerCountry As String = &quot;Germany&quot;\n    Private Const svcUri As String = &quot;http://localhost:12345/Northwind.svc/&quot;\n    Private Sub Window_Loaded(ByVal sender As Object, ByVal e As RoutedEventArgs)\n        Try\n            &#39; Initialize the context for the data service.\n            context = New NorthwindEntities(New Uri(svcUri))\n\n            &#39; Create a LINQ query that returns customers with related orders.\n            Dim customerQuery = From cust In context.Customers.Expand(&quot;Orders&quot;) _\n                                    Where cust.Country = customerCountry _\n                                    Select cust\n\n            &#39; Create a new collection for binding based on the LINQ query.\n            trackedCustomers = New DataServiceCollection(Of Customer)(customerQuery, _\n                    TrackingMode.AutoChangeTracking, &quot;Customers&quot;, _\n                    AddressOf OnMyPropertyChanged, AddressOf OnMyCollectionChanged)\n\n            &#39; Bind the root StackPanel element to the collection\n            &#39; related object binding paths are defined in the XAML.\n            Me.LayoutRoot.DataContext = trackedCustomers\n        Catch ex As DataServiceQueryException\n            MessageBox.Show(&quot;The query could not be completed:\\n&quot; + ex.ToString())\n        Catch ex As InvalidOperationException\n            MessageBox.Show(&quot;The following error occurred:\\n&quot; + ex.ToString())\n        End Try\n    End Sub\n    &#39; Method that is called when the CollectionChanged event is handled.\n    Private Function OnMyCollectionChanged( _\n        ByVal entityCollectionChangedinfo As EntityCollectionChangedParams) As Boolean\n        If entityCollectionChangedinfo.Action = _\n            NotifyCollectionChangedAction.Remove Then\n\n            &#39; Delete the related items when an order is deleted.\n            If entityCollectionChangedinfo.TargetEntity.GetType() Is GetType(Order) Then\n\n                &#39; Get the context and object from the supplied parameter.\n                Dim context = entityCollectionChangedinfo.Context\n                Dim deletedOrder As Order = _\n                CType(entityCollectionChangedinfo.TargetEntity, Order)\n\n                If deletedOrder.Order_Details.Count = 0 Then\n                    &#39; Load the related OrderDetails.\n                    context.LoadProperty(deletedOrder, &quot;Order_Details&quot;)\n                End If\n\n                &#39; Delete the order and its related items\n                For Each item As Order_Detail In deletedOrder.Order_Details\n                    context.DeleteObject(item)\n                Next\n\n                &#39; Delete the order and then return false since the object is already deleted.\n                context.DeleteObject(deletedOrder)\n\n                Return True\n            Else\n                Return False\n            End If\n        Else\n            &#39; Use the default behavior.\n            Return False\n        End If\n    End Function\n    &#39; Method that is called when the PropertyChanged event is handled.\n    Private Function OnMyPropertyChanged( _\n    ByVal entityChangedInfo As EntityChangedParams) As Boolean\n        &#39; Validate a changed order to ensure that changes are not made \n        &#39; after the order ships.\n        If entityChangedInfo.Entity.GetType() Is GetType(Order) AndAlso _\n            (CType(entityChangedInfo.Entity, Order).ShippedDate &lt; DateTime.Today) Then\n            Throw New ApplicationException(String.Format( _\n                &quot;The order {0} cannot be changed because it shipped on {1}.&quot;, _\n                CType(entityChangedInfo.Entity, Order).OrderID, _\n                CType(entityChangedInfo.Entity, Order).ShippedDate))\n            Return False\n        Else\n            Return True\n        End If\n    End Function\n    Private Sub deleteButton_Click(ByVal sender As Object, ByVal e As RoutedEventArgs)\n        &#39; Get the Orders binding collection.\n        If customerIDComboBox.SelectedItem IsNot Nothing Then\n            Dim trackedOrders As DataServiceCollection(Of Order) = _\n                (CType(customerIDComboBox.SelectedItem, Customer)).Orders\n\n            &#39; Remove the currently selected order.\n            trackedOrders.Remove(CType(ordersDataGrid.SelectedItem, Order))\n        End If\n    End Sub\n    Private Sub saveChangesButton_Click(ByVal sender As Object, ByVal e As RoutedEventArgs)\n        Try\n            &#39; Save changes to the data service.\n            context.SaveChanges()\n        Catch ex As Exception\n            MessageBox.Show(ex.ToString())\n        End Try\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-vb\" name=\"Astoria Northwind Client#WpfDataBindingCustom\">Imports System\nImports System.Collections.Generic\nImports System.Linq\nImports System.Text\nImports System.Windows\nImports System.Windows.Controls\nImports System.Windows.Data\nImports System.Windows.Documents\nImports System.Windows.Input\nImports System.Windows.Media\nImports System.Windows.Media.Imaging\nImports System.Windows.Navigation\nImports System.Windows.Shapes\nImports System.Data.Services.Client\nImports NorthwindClient.NorthwindModel\nImports System.Collections.Specialized\n\nPartial Public Class CustomerOrdersCustom\n    Inherits Window\n    Private context As NorthwindEntities\n    Private trackedCustomers As DataServiceCollection(Of Customers)\n    Private Const customerCountry As String = &quot;Germany&quot;\n    Private Const svcUri As String = &quot;http://localhost:12345/Northwind.svc/&quot;\n    Private Sub Window_Loaded(ByVal sender As Object, ByVal e As RoutedEventArgs)\n        Try\n            &#39; Initialize the context for the data service.\n            context = New NorthwindEntities(New Uri(svcUri))\n\n            &#39; Create a LINQ query that returns customers with related orders.\n            Dim customerQuery = From cust In context.Customers.Expand(&quot;Orders&quot;) _\n                                    Where cust.Country = customerCountry _\n                                    Select cust\n\n            &#39; Create a new collection for binding based on the LINQ query.\n            trackedCustomers = New DataServiceCollection(Of Customers)(customerQuery, _\n                    TrackingMode.AutoChangeTracking, &quot;Customers&quot;, _\n                    AddressOf OnMyPropertyChanged, AddressOf OnMyCollectionChanged)\n\n                &#39; Bind the root StackPanel element to the collection\n                &#39; related object binding paths are defined in the XAML.\n                Me.LayoutRoot.DataContext = trackedCustomers\n                Me.LayoutRoot.UpdateLayout()\n        Catch ex As DataServiceQueryException\n            MessageBox.Show(&quot;The query could not be completed:\\n&quot; + ex.ToString())\n        Catch ex As InvalidOperationException\n            MessageBox.Show(&quot;The following error occured:\\n&quot; + ex.ToString())\n        End Try\n    End Sub\n    &#39; Method that is called when the CollectionChanged event is handled.\n    Private Function OnMyCollectionChanged( _\n        ByVal entityCollectionChangedinfo As EntityCollectionChangedParams) As Boolean\n        If entityCollectionChangedinfo.Action = _\n            NotifyCollectionChangedAction.Remove Then\n\n            &#39; Delete the related items when an order is deleted.\n            If entityCollectionChangedinfo.TargetEntity.GetType() Is GetType(Orders) Then\n\n                &#39; Get the context and object from the supplied parameter.\n                Dim context = entityCollectionChangedinfo.Context\n                Dim deletedOrder As Orders = _\n                CType(entityCollectionChangedinfo.TargetEntity, Orders)\n\n                &#39; Load the related OrderDetails.\n                context.LoadProperty(deletedOrder, &quot;Order_Details&quot;)\n\n                &#39; Delete the order and its related items\n                For Each item As Order_Details In deletedOrder.Order_Details\n                    &#39;context.DeleteLink(deletedOrder, &quot;Order_Details&quot;, item)\n                    context.DeleteObject(item)\n                Next\n\n                &#39; Delete the order and then return false since the object is already deleted.\n                context.DeleteObject(deletedOrder)\n\n                Return False\n            Else\n                Return True\n            End If\n        Else\n            &#39; Use the default behavior.\n            Return True\n        End If\n    End Function\n    &#39; Method that is called when the PropertyChanged event is handled.\n    Private Function OnMyPropertyChanged( _\n    ByVal entityChangedInfo As EntityChangedParams) As Boolean\n        &#39; Validate a changed order to ensure that changes are not made \n        &#39; after the order ships.\n        If entityChangedInfo.Entity.GetType() Is GetType(Orders) AndAlso _\n            (CType(entityChangedInfo.Entity, Orders).ShippedDate &lt; DateTime.Today) Then\n            Throw New ApplicationException(String.Format( _\n                &quot;The order {0} cannot be changed because it shipped on {1}.&quot;, _\n                CType(entityChangedInfo.Entity, Orders).OrderID, _\n                CType(entityChangedInfo.Entity, Orders).ShippedDate))\n            Return True\n        End If\n    End Function\n    Private Sub deleteButton_Click(ByVal sender As Object, ByVal e As RoutedEventArgs)\n        &#39; Get the Orders binding collection.\n        Dim trackedOrders As DataServiceCollection(Of Orders) = _\n            (CType(customerIDComboBox.SelectedItem, Customers)).Orders\n\n        &#39; Remove the currently selected order.\n        trackedOrders.Remove(CType(ordersDataGrid.SelectedItem, Orders))\n    End Sub\n    Private Sub saveChangesButton_Click(ByVal sender As Object, ByVal e As RoutedEventArgs)\n        Try\n            &#39; Save changes to the data service.\n            context.SaveChanges()\n        Catch ex As Exception\n            MessageBox.Show(ex.ToString())\n        End Try\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Astoria Northwind Client#WpfDataBindingCustom\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Data;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Navigation;\nusing System.Windows.Shapes;\nusing System.Data.Services.Client;\nusing NorthwindClient.Northwind;\nusing System.Collections.Specialized;\n\nnamespace NorthwindClient\n{\n    public partial class CustomerOrdersCustom : Window\n    {\n        private NorthwindEntities context;\n        private DataServiceCollection&lt;Customer&gt; trackedCustomers;\n        private const string customerCountry = &quot;Germany&quot;;\n        private const string svcUri = &quot;http://localhost:12345/Northwind.svc/&quot;;\n\n        public CustomerOrdersCustom()\n        {\n            InitializeComponent();\n        }\n\n        private void Window_Loaded(object sender, RoutedEventArgs e)\n        {\n            try\n            {\n                // Initialize the context for the data service.\n                context = new NorthwindEntities(new Uri(svcUri));\n\n                // Create a LINQ query that returns customers with related orders.\n                var customerQuery = from cust in context.Customers.Expand(&quot;Orders&quot;)\n                                    where cust.Country == customerCountry\n                                    select cust;\n\n                // Create a new collection for binding based on the LINQ query.\n                trackedCustomers = new DataServiceCollection&lt;Customer&gt;(customerQuery, \n                    TrackingMode.AutoChangeTracking,&quot;Customers&quot;, \n                    OnPropertyChanged, OnCollectionChanged);\n\n                // Bind the root StackPanel element to the collection;\n                // related object binding paths are defined in the XAML.\n                this.LayoutRoot.DataContext = trackedCustomers;\n            }\n            catch (DataServiceQueryException ex)\n            {\n                MessageBox.Show(&quot;The query could not be completed:\\n&quot; + ex.ToString());\n            }\n            catch (InvalidOperationException ex)\n            {\n                MessageBox.Show(&quot;The following error occurred:\\n&quot; + ex.ToString());\n            }\n        }\n\n        // Method that is called when the CollectionChanged event is handled.\n        private bool OnCollectionChanged(\n            EntityCollectionChangedParams entityCollectionChangedinfo)\n        {\n            if (entityCollectionChangedinfo.Action ==\n                NotifyCollectionChangedAction.Remove)\n            {\n                // Delete the related items when an order is deleted.\n                if (entityCollectionChangedinfo.TargetEntity.GetType() == typeof(Order))\n                {\n                    // Get the context and object from the supplied parameter.\n                    DataServiceContext context = entityCollectionChangedinfo.Context;\n                    Order deletedOrder = entityCollectionChangedinfo.TargetEntity as Order;\n\n                    if (deletedOrder.Order_Details.Count == 0)\n                    {\n                        // Load the related OrderDetails.\n                        context.LoadProperty(deletedOrder, &quot;Order_Details&quot;);\n                    }\n\n                    // Delete the order and its related items;\n                    foreach (Order_Detail item in deletedOrder.Order_Details)\n                    {\n                        context.DeleteObject(item);\n                    }\n\n                    // Delete the order and then return true since the object is already deleted.\n                    context.DeleteObject(deletedOrder);\n\n                    return true;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else \n            {\n                // Use the default behavior.\n                return false;\n            }\n        }\n\n        // Method that is called when the PropertyChanged event is handled.\n        private bool OnPropertyChanged(EntityChangedParams entityChangedInfo)\n        {\n            // Validate a changed order to ensure that changes are not made \n            // after the order ships.\n            if ((entityChangedInfo.Entity.GetType() == typeof(Order)) &amp;&amp; \n                ((Order)(entityChangedInfo.Entity)).ShippedDate &lt; DateTime.Today)\n            {\n                throw new ApplicationException(string.Format(\n                    &quot;The order {0} cannot be changed because it shipped on {1}.&quot;,\n                    ((Order)(entityChangedInfo.Entity)).OrderID, \n                    ((Order)(entityChangedInfo.Entity)).ShippedDate));\n            }\n            return false;\n        }\n        \n        private void deleteButton_Click(object sender, RoutedEventArgs e)\n        {\n            if (customerIDComboBox.SelectedItem != null)\n            {\n                // Get the Orders binding collection.\n                DataServiceCollection&lt;Order&gt; trackedOrders =\n                    ((Customer)(customerIDComboBox.SelectedItem)).Orders;\n\n                // Remove the currently selected order.\n                trackedOrders.Remove((Order)(ordersDataGrid.SelectedItem));\n            }\n        }\n\n        private void saveChangesButton_Click(object sender, RoutedEventArgs e)\n        {\n            try\n            {\n                // Save changes to the data service.\n                context.SaveChanges();\n            }\n            catch (Exception ex)\n            {\n                MessageBox.Show(ex.ToString());\n            }\n        }\n    }\n}\n</code></pre><p> The following XAML code defines the window for the previous example.  </p>\n<pre><code class=\"lang-xml\" name=\"Astoria Northwind Client#WpfDataBindingCustomXaml\">&lt;Window x:Class=&quot;CustomerOrdersCustom&quot;\n             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; \n             Height=&quot;423&quot; Width=&quot;679&quot; Loaded=&quot;Window_Loaded&quot; &gt;\n    &lt;StackPanel Orientation=&quot;Vertical&quot; Height=&quot;Auto&quot; Name=&quot;LayoutRoot&quot; Width=&quot;Auto&quot;&gt;\n        &lt;Label Content=&quot;Customer ID&quot; Margin=&quot;20,0,0,0&quot; /&gt;\n        &lt;ComboBox Name=&quot;customerIDComboBox&quot; DisplayMemberPath=&quot;CustomerID&quot; ItemsSource=&quot;{Binding}&quot; \n                  IsSynchronizedWithCurrentItem=&quot;True&quot; SelectedIndex=&quot;0&quot; Height=&quot;23&quot; Width=&quot;120&quot; \n                  HorizontalAlignment=&quot;Left&quot; Margin=&quot;20,0,0,0&quot; VerticalAlignment=&quot;Center&quot; /&gt;\n        &lt;ListView ItemsSource=&quot;{Binding Path=Orders}&quot; Name=&quot;ordersDataGrid&quot; Margin=&quot;34,46,34,50&quot;&gt;\n            &lt;ListView.View&gt;\n                &lt;GridView AllowsColumnReorder=&quot;False&quot; ColumnHeaderToolTip=&quot;Line Items&quot;&gt;\n                    &lt;GridViewColumn DisplayMemberBinding=&quot;{Binding Path=OrderID, Mode=OneWay}&quot; \n                        Header=&quot;Order ID&quot; Width=&quot;50&quot;/&gt;\n                    &lt;GridViewColumn DisplayMemberBinding=&quot;{Binding Path=OrderDate, Mode=TwoWay}&quot; \n                        Header=&quot;Order Date&quot; Width=&quot;50&quot;/&gt;\n                    &lt;GridViewColumn DisplayMemberBinding=&quot;{Binding Path=Freight, Mode=TwoWay}&quot; \n                        Header=&quot;Freight Cost&quot; Width=&quot;50&quot;/&gt;\n                &lt;/GridView&gt;\n            &lt;/ListView.View&gt;\n        &lt;/ListView&gt;\n        &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;\n            &lt;Button Name=&quot;deleteButton&quot; Content=&quot;Delete Order&quot; Click=&quot;deleteButton_Click&quot; \n                Width=&quot;80&quot; Height=&quot;30&quot; Margin=&quot;450,0,10,0&quot;/&gt;\n            &lt;Button Name=&quot;saveChangesButton&quot; Content=&quot;Save Changes&quot; Click=&quot;saveChangesButton_Click&quot; \n                Width=&quot;80&quot; Height=&quot;30&quot; Margin=&quot;10,0,0,0&quot;/&gt;\n        &lt;/StackPanel&gt;\n    &lt;/StackPanel&gt;\n&lt;/Window&gt;\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_Action\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Action</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.specialized.notifycollectionchangedaction\" data-linktype=\"relative-path\">NotifyCollectionChangedAction</a> value that indicates how the collection was changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Specialized.NotifyCollectionChangedAction Action { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.notifycollectionchangedaction\" data-linktype=\"relative-path\">NotifyCollectionChangedAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value that indicates how the collection was changed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Only the values <a class=\"xref\" href=\"system.collections.specialized.notifycollectionchangedaction\" data-linktype=\"relative-path\">NotifyCollectionChangedAction</a> and <a class=\"xref\" href=\"system.collections.specialized.notifycollectionchangedaction\" data-linktype=\"relative-path\">NotifyCollectionChangedAction</a> are supported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_Collection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Collection</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The <span class=\"xref\">stem.Data.Services.Client.DataServiceCollection`1</span> that has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.ICollection Collection { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A reference to the collection that has changed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_Context\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Context</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.services.client.dataservicecontext\" data-linktype=\"relative-path\">DataServiceContext</a> associated with the <span class=\"xref\">stem.Data.Services.Client.DataServiceCollection`1</span> that has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.Services.Client.DataServiceContext Context { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.services.client.dataservicecontext\" data-linktype=\"relative-path\">DataServiceContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The context associated with the collection that has changed</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_PropertyName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PropertyName</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The navigation property on the source object that references the collection that has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PropertyName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The navigation property name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_SourceEntity\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SourceEntity</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The source object that references the target object in the collection by using a navigation property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object SourceEntity { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_SourceEntitySet\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SourceEntitySet</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The entity set of the source object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string SourceEntitySet { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An entity set name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_TargetEntity\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetEntity</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The entity object in the collection that has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object TargetEntity { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The changed entity object in the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Services_Client_EntityCollectionChangedParams_TargetEntitySet\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetEntitySet</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The entity set name of the object in the collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string TargetEntitySet { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An entity set name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Services.Client.EntityCollectionChangedParams.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.Action\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.Collection\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.Context\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.PropertyName\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.SourceEntity\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.SourceEntitySet\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.TargetEntity\">\r\n<meta name=\"APIName\" content=\"System.Data.Services.Client.EntityCollectionChangedParams.TargetEntitySet\">\r\n<meta name=\"APILocation\" content=\"System.Data.Services.Client.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-29 05:54 AM\">\r\n<meta name=\"document_id\" content=\"de54cd66-b819-14bc-a92e-324fb2e656f4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates the arguments of a  delegate.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data.services.client/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Services.Client.EntityCollectionChangedParams\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Services.Client.EntityCollectionChangedParams.yml","open_to_public_contributors":false,"api_name":["System.Data.Services.Client.EntityCollectionChangedParams","System.Data.Services.Client.EntityCollectionChangedParams.Action","System.Data.Services.Client.EntityCollectionChangedParams.Collection","System.Data.Services.Client.EntityCollectionChangedParams.Context","System.Data.Services.Client.EntityCollectionChangedParams.PropertyName","System.Data.Services.Client.EntityCollectionChangedParams.SourceEntity","System.Data.Services.Client.EntityCollectionChangedParams.SourceEntitySet","System.Data.Services.Client.EntityCollectionChangedParams.TargetEntity","System.Data.Services.Client.EntityCollectionChangedParams.TargetEntitySet"],"api_location":["System.Data.Services.Client.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Services.Client.EntityCollectionChangedParams","System::Data::Services::Client::EntityCollectionChangedParams","System.Data.Services.Client.EntityCollectionChangedParams.Action","System::Data::Services::Client::EntityCollectionChangedParams::Action","System.Data.Services.Client.EntityCollectionChangedParams.Collection","System::Data::Services::Client::EntityCollectionChangedParams::Collection","System.Data.Services.Client.EntityCollectionChangedParams.Context","System::Data::Services::Client::EntityCollectionChangedParams::Context","System.Data.Services.Client.EntityCollectionChangedParams.PropertyName","System::Data::Services::Client::EntityCollectionChangedParams::PropertyName","System.Data.Services.Client.EntityCollectionChangedParams.SourceEntity","System::Data::Services::Client::EntityCollectionChangedParams::SourceEntity","System.Data.Services.Client.EntityCollectionChangedParams.SourceEntitySet","System::Data::Services::Client::EntityCollectionChangedParams::SourceEntitySet","System.Data.Services.Client.EntityCollectionChangedParams.TargetEntity","System::Data::Services::Client::EntityCollectionChangedParams::TargetEntity","System.Data.Services.Client.EntityCollectionChangedParams.TargetEntitySet","System::Data::Services::Client::EntityCollectionChangedParams::TargetEntitySet"],"dev_langs":["csharp"],"updated_at":"2017-03-29 05:54 AM","document_id":"de54cd66-b819-14bc-a92e-324fb2e656f4","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data.Services.Client/EntityCollectionChangedParams.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EntityCollectionChangedParams class | Microsoft Docs","_op_ogTitle":"EntityCollectionChangedParams class","description":"Encapsulates the arguments of a  delegate.\n","toc_asset_id":"api/_splitted/System.Data.Services.Client/toc.json","toc_rel":"_splitted/System.Data.Services.Client/toc.json","source_url":"","ms.assetid":"System.Data.Services.Client.EntityCollectionChangedParams","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.services.client.entitycollectionchangedparams","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.services.client.entitycollectionchangedparams","fileRelativePath":"api/System.Data.Services.Client.EntityCollectionChangedParams.html"},"themesRelativePathToOutputRoot":"_themes/"}