{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IXmlLineInfo</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface to enable a class to return line and position information.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IXmlLineInfo</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example parses an XML fragment. Each node is displayed, including its depth, line number, and line position.  </p>\n<pre><code class=\"lang-cpp\" name=\"IXmlLineInfo#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create the XML fragment to be parsed.\n   String^ xmlFrag = &quot;&lt;book&gt;\\n&quot;\n   &quot;&lt;misc&gt;\\n&quot;\n   &quot;&lt;style&gt;paperback&lt;/style&gt;\\n&quot;\n   &quot;&lt;pages&gt;240&lt;/pages&gt;\\n&quot;\n   &quot;&lt;/misc&gt;\\n&quot;\n   &quot;&lt;/book&gt;\\n&quot;;\n   \n   // Create the XmlNamespaceManager.\n   XmlNamespaceManager^ nsmgr = gcnew XmlNamespaceManager( gcnew NameTable );\n   \n   // Create the XmlParserContext.\n   XmlParserContext^ context = gcnew XmlParserContext( nullptr,nsmgr,nullptr,XmlSpace::None );\n   \n   // Create the reader.\n   XmlValidatingReader^ reader = gcnew XmlValidatingReader( xmlFrag,XmlNodeType::Element,context );\n   IXmlLineInfo^ lineInfo = (dynamic_cast&lt;IXmlLineInfo^&gt;(reader));\n   if ( lineInfo-&gt;HasLineInfo() )\n   {\n      \n      // Parse the XML and display each node.\n      while ( reader-&gt;Read() )\n      {\n         switch ( reader-&gt;NodeType )\n         {\n            case XmlNodeType::Element:\n               Console::Write( &quot; {0} {1}, {2}  &quot;, reader-&gt;Depth, lineInfo-&gt;LineNumber, lineInfo-&gt;LinePosition );\n               Console::WriteLine( &quot;&lt; {0}&gt;&quot;, reader-&gt;Name );\n               break;\n\n            case XmlNodeType::Text:\n               Console::Write( &quot; {0} {1}, {2}  &quot;, reader-&gt;Depth, lineInfo-&gt;LineNumber, lineInfo-&gt;LinePosition );\n               Console::WriteLine( &quot; {0}&quot;, reader-&gt;Value );\n               break;\n\n            case XmlNodeType::EndElement:\n               Console::Write( &quot; {0} {1}, {2}  &quot;, reader-&gt;Depth, lineInfo-&gt;LineNumber, lineInfo-&gt;LinePosition );\n               Console::WriteLine( &quot;&lt;/ {0}&gt;&quot;, reader-&gt;Name );\n               break;\n         }\n      }\n   }\n\n   \n   // Close the reader.\n   reader-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IXmlLineInfo#1\">Imports System\nImports System.IO\nImports System.Xml\nImports Microsoft.VisualBasic\n\npublic class Sample\n\n  public shared sub Main()\n\n    &#39; Create the XML fragment to be parsed.\n    Dim xmlFrag as string = &quot;&lt;book&gt;&quot; + Chr(10) &amp; _\n                            &quot;  &lt;misc&gt;&quot;  + Chr(10) &amp; _\n                            &quot;    &lt;style&gt;paperback&lt;/style&gt;&quot;  + Chr(10) &amp; _\n                            &quot;    &lt;pages&gt;240&lt;/pages&gt;&quot; + Chr(10) &amp; _\n                            &quot;  &lt;/misc&gt;&quot; + Chr(10) &amp; _\n                            &quot;&lt;/book&gt;&quot;\n\n    &#39; Create the XmlNamespaceManager.\n    Dim nsmgr as XmlNamespaceManager = new XmlNamespaceManager(new NameTable())\n\n    &#39; Create the XmlParserContext.\n    Dim context as XmlParserContext = new XmlParserContext(nothing, nsmgr, nothing, XmlSpace.None)\n\n    &#39; Create the reader.\n    Dim reader as XmlValidatingReader = new XmlValidatingReader(xmlFrag, XmlNodeType.Element, context)\n\n    Dim lineInfo as IXmlLineInfo = CType(reader, IXmlLineInfo)\n    if (lineInfo.HasLineInfo())\n       \n      &#39; Parse the XML and display each node.\n      while (reader.Read())\n       select case reader.NodeType\n         case XmlNodeType.Element:\n           Console.Write(&quot;{0} {1},{2}  &quot;, reader.Depth, lineInfo.LineNumber, lineInfo.LinePosition)\n           Console.WriteLine(&quot;&lt;{0}&gt;&quot;, reader.Name)\n         case XmlNodeType.Text:\n           Console.Write(&quot;{0} {1},{2}  &quot;, reader.Depth, lineInfo.LineNumber, lineInfo.LinePosition)\n           Console.WriteLine(&quot;  {0}&quot;, reader.Value)\n         case XmlNodeType.EndElement:\n           Console.Write(&quot;{0} {1},{2}  &quot;, reader.Depth, lineInfo.LineNumber, lineInfo.LinePosition)\n           Console.WriteLine(&quot;&lt;/{0}&gt;&quot;, reader.Name)\n       end select       \n      end while           \n    end if\n\n    &#39; Close the reader.\n    reader.Close()     \n  \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"IXmlLineInfo#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample{\n\n  public static void Main(){\n\n    // Create the XML fragment to be parsed.\n    string xmlFrag  = \n    @&quot;&lt;book&gt;\n           &lt;misc&gt;\n              &lt;style&gt;paperback&lt;/style&gt;\n              &lt;pages&gt;240&lt;/pages&gt;\n           &lt;/misc&gt;\n        &lt;/book&gt;\n    &quot;;\n\n    // Create the XmlNamespaceManager.\n    XmlNamespaceManager nsmgr = new XmlNamespaceManager(new NameTable());\n\n    // Create the XmlParserContext.\n    XmlParserContext context = new XmlParserContext(null, nsmgr, null, XmlSpace.None);\n\n    // Create the reader.\n    XmlValidatingReader reader = new XmlValidatingReader(xmlFrag, XmlNodeType.Element, context);\n\n    IXmlLineInfo lineInfo = ((IXmlLineInfo)reader);\n    if (lineInfo.HasLineInfo()){\n       \n      // Parse the XML and display each node.\n      while (reader.Read()){\n       switch (reader.NodeType){\n         case XmlNodeType.Element:\n           Console.Write(&quot;{0} {1},{2}  &quot;, reader.Depth, lineInfo.LineNumber, lineInfo.LinePosition);\n           Console.WriteLine(&quot;&lt;{0}&gt;&quot;, reader.Name);\n           break;\n         case XmlNodeType.Text:\n           Console.Write(&quot;{0} {1},{2}  &quot;, reader.Depth, lineInfo.LineNumber, lineInfo.LinePosition);\n           Console.WriteLine(&quot;  {0}&quot;, reader.Value);\n           break;\n         case XmlNodeType.EndElement:\n           Console.Write(&quot;{0} {1},{2}  &quot;, reader.Depth, lineInfo.LineNumber, lineInfo.LinePosition);\n           Console.WriteLine(&quot;&lt;/{0}&gt;&quot;, reader.Name);\n           break;\n       }       \n     }           \n    }\n\n    // Close the reader.\n    reader.Close();       \n  }\n}\n</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Xml_IXmlLineInfo_LineNumber_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_IXmlLineInfo_LineNumber\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LineNumber</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the current line number.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int LineNumber { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current line number or 0 if no line information is available (for example, <span class=\"xref\">stem.Xml.IXmlLineInfo.HasLineInfo*</span> returns <code>false</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is used primarily for error reporting, but can be called at any time. The starting value is 1. Combined with <a class=\"xref\" href=\"system.xml.ixmllineinfo#System_Xml_IXmlLineInfo_LinePosition_\" data-linktype=\"relative-path\">LinePosition</a>, a value of 1,1 indicates the start of a document.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Xml_IXmlLineInfo_LinePosition_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_IXmlLineInfo_LinePosition\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LinePosition</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the current line position.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int LinePosition { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current line position or 0 if no line information is available (for example, <span class=\"xref\">stem.Xml.IXmlLineInfo.HasLineInfo*</span> returns <code>false</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is used primarily for error reporting, but can be called at any time. The starting value is 1. Combined with <a class=\"xref\" href=\"system.xml.ixmllineinfo#System_Xml_IXmlLineInfo_LineNumber_\" data-linktype=\"relative-path\">LineNumber</a>, a value of 1,1 indicates the start of a document.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Xml_IXmlLineInfo_HasLineInfo_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_IXmlLineInfo_HasLineInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasLineInfo()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the class can return line information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasLineInfo ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <span class=\"xref\">stem.Xml.IXmlLineInfo.LineNumber*</span> and <span class=\"xref\">stem.Xml.IXmlLineInfo.LinePosition*</span> can be provided; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Xml.IXmlLineInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.IXmlLineInfo\">\r\n<meta name=\"APIName\" content=\"System.Xml.IXmlLineInfo.HasLineInfo\">\r\n<meta name=\"APIName\" content=\"System.Xml.IXmlLineInfo.LineNumber\">\r\n<meta name=\"APIName\" content=\"System.Xml.IXmlLineInfo.LinePosition\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"bc49a8ff-9001-9fdf-1b08-bbbd454c2184\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface to enable a class to return line and position information.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.xml/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.IXmlLineInfo\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Xml.IXmlLineInfo.yml","open_to_public_contributors":false,"api_name":["System.Xml.IXmlLineInfo","System.Xml.IXmlLineInfo.HasLineInfo","System.Xml.IXmlLineInfo.LineNumber","System.Xml.IXmlLineInfo.LinePosition"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.IXmlLineInfo","System::Xml::IXmlLineInfo","System.Xml.IXmlLineInfo.HasLineInfo","System::Xml::IXmlLineInfo::HasLineInfo","System.Xml.IXmlLineInfo.LineNumber","System::Xml::IXmlLineInfo::LineNumber","System.Xml.IXmlLineInfo.LinePosition","System::Xml::IXmlLineInfo::LinePosition"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"bc49a8ff-9001-9fdf-1b08-bbbd454c2184","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Xml/IXmlLineInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IXmlLineInfo interface | Microsoft Docs","_op_ogTitle":"IXmlLineInfo interface","description":"Provides an interface to enable a class to return line and position information.\n","toc_asset_id":"api/_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.IXmlLineInfo","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.xml.ixmllineinfo","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.xml.ixmllineinfo","fileRelativePath":"api/System.Xml.IXmlLineInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}