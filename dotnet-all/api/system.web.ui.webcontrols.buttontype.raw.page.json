{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ButtonType</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the different types of buttons that can be rendered in a Web Forms page.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum ButtonType</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">ButtonType</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to use the ButtonType enumeration to specify that link buttons are displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> field column of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType_\" data-linktype=\"relative-path\">ButtonType</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object is declaratively set to <code>ButtonType.Link</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"ButtonType#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void AuthorsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n  \n    // If multiple ButtonField column fields are used, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Select&quot;)\n    {\n    \n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);    \n    \n      // Get the last name of the selected author from the appropriate\n      // cell in the GridView control.\n      GridViewRow selectedRow = AuthorsGridView.Rows[index];\n      TableCell lastNameCell = selectedRow.Cells[1];\n      string lastName = lastNameCell.Text;  \n    \n      // Display the selected author.\n      Message.Text = &quot;You selected &quot; + lastName + &quot;.&quot;;\n      \n    }\n    \n  }\n  \n  void AuthorsGridView_RowCreated(Object sender, GridViewRowEventArgs e)\n  {\n    \n    // The GridViewCommandEventArgs class does not contain a \n    // property that indicates which row&#39;s command button was\n    // clicked. To identify which row contains the button \n    // clicked, use the button&#39;s CommandArgument property by \n    // setting it to the row&#39;s index.\n    if(e.Row.RowType == DataControlRowType.DataRow)\n    {\n    \n      // Retrieve the button control from the first column.\n      // Because the ButtonType property of the column field\n      // is set to ButtonType.Link, the button control must be\n      // cast to a LinkButton. If you specify a different button\n      // type, you must cast the button control to the appropriate\n      // button type.\n      LinkButton selectButton = (LinkButton)e.Row.Cells[0].Controls[0];\n            \n      // Set the LinkButton&#39;s CommandArgument property with the\n      // row&#39;s index.\n      selectButton.CommandArgument = e.Row.RowIndex.ToString();\n      \n    }\n\n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonType Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonType Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;AuthorsGridView&quot;/&gt;\n                    \n      &lt;!-- Populate the Fields collection declaratively. --&gt;\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        datasourceid=&quot;AuthorsSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;AuthorsGridView_RowCommand&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Link&quot; commandname=&quot;Select&quot; text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_lname&quot; headertext=&quot;au_lname&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_fname&quot; headertext=&quot;au_fname&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n      &lt;!-- to the Pubs sample database.                        --&gt;\n      &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n        selectcommand=&quot;SELECT [au_lname], [au_fname] FROM [authors]&quot;\n        connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"ButtonType#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub AuthorsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n    &#39; If multiple ButtonField column fields are used, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Select&quot; Then\n    \n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)    \n    \n      &#39; Get the last name of the selected author from the appropriate\n      &#39; cell in the GridView control.\n      Dim selectedRow As GridViewRow = AuthorsGridView.Rows(index)\n      Dim lastNameCell As TableCell = selectedRow.Cells(1)\n      Dim lastName As String = lastNameCell.Text  \n    \n      &#39; Display the selected author.\n      Message.Text = &quot;You selected &quot; &amp; lastName &amp; &quot;.&quot;\n      \n    End If\n    \n  End Sub\n  \n  Sub AuthorsGridView_RowCreated(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n    \n    &#39; The GridViewCommandEventArgs class does not contain a \n    &#39; property that indicates which row&#39;s command button was\n    &#39; clicked. To identify which row contains the button \n    &#39; clicked, use the button&#39;s CommandArgument property by \n    &#39; setting it to the row&#39;s index.\n    If e.Row.RowType = DataControlRowType.DataRow Then\n    \n      &#39; Retrieve the button control from the first column.\n      &#39; Because the ButtonType property of the column field\n      &#39; is set to ButtonType.Link, the button control must be\n      &#39; cast to a LinkButton. If you specify a different button\n      &#39; type, you must cast the button control to the appropriate\n      &#39; button type.\n      Dim selectButton As LinkButton = CType(e.Row.Cells(0).Controls(0), LinkButton)\n            \n      &#39; Set the LinkButton&#39;s CommandArgument property with the\n      &#39; row&#39;s index.\n      selectButton.CommandArgument = e.Row.RowIndex.ToString()\n      \n    End If\n\n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonType Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonType Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;AuthorsGridView&quot;/&gt;\n                    \n      &lt;!-- Populate the Columns collection declaratively. --&gt;\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        datasourceid=&quot;AuthorsSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;AuthorsGridView_RowCommand&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Link&quot; commandname=&quot;Select&quot; text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_lname&quot; headertext=&quot;au_lname&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_fname&quot; headertext=&quot;au_fname&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n      &lt;!-- to the Pubs sample database.                        --&gt;\n      &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n        selectcommand=&quot;SELECT [au_lname], [au_fname] FROM [authors]&quot;\n        connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ButtonType enumeration is used to represent the different types of buttons (such as command button, image button, link button, and so on) that can be rendered on an ASP.NET page. It is commonly used by properties such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType_\" data-linktype=\"relative-path\">ButtonType</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase\" data-linktype=\"relative-path\">ButtonFieldBase</a> class to indicate which button type is being used by the parent control.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Web_UI_WebControls_ButtonType_Button\">\r\n      \t\t\t<span class=\"lang-csharp\">Button</span>\r\n      \t</td>\r\n      \t<td><p>A command button.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_UI_WebControls_ButtonType_Image\">\r\n      \t\t\t<span class=\"lang-csharp\">Image</span>\r\n      \t</td>\r\n      \t<td><p>A button that displays an image.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_UI_WebControls_ButtonType_Link\">\r\n      \t\t\t<span class=\"lang-csharp\">Link</span>\r\n      \t</td>\r\n      \t<td><p>A hyperlink-style button.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.ButtonType.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonType\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonType.Button\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonType.Image\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonType.Link\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"9a2d4d66-37e0-4b07-3969-47a0a1380e3c\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the different types of buttons that can be rendered in a Web Forms page.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.ButtonType\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.ButtonType.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.ButtonType","System.Web.UI.WebControls.ButtonType.Button","System.Web.UI.WebControls.ButtonType.Image","System.Web.UI.WebControls.ButtonType.Link"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.ButtonType","System::Web::UI::WebControls::ButtonType","System.Web.UI.WebControls.ButtonType.Button","System::Web::UI::WebControls::ButtonType::Button","System.Web.UI.WebControls.ButtonType.Image","System::Web::UI::WebControls::ButtonType::Image","System.Web.UI.WebControls.ButtonType.Link","System::Web::UI::WebControls::ButtonType::Link"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"9a2d4d66-37e0-4b07-3969-47a0a1380e3c","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ButtonType.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ButtonType enum | Microsoft Docs","_op_ogTitle":"ButtonType enum","description":"Specifies the different types of buttons that can be rendered in a Web Forms page.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.ButtonType","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.buttontype","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.buttontype","fileRelativePath":"api/System.Web.UI.WebControls.ButtonType.html"},"themesRelativePathToOutputRoot":"_themes/"}