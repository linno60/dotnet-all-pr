{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CorrelationManager</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Correlates traces that are part of a logical transaction.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class CorrelationManager</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">CorrelationManager</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the use of the CorrelationManager class by identifying the logical operation associated with a traced event. Two logical operations are started, one in the main thread and the other in a worker thread. An error event is logged in both logical operations.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Diagnostics.CorrelationManager#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Text;\nusing namespace System::Diagnostics;\nusing namespace System::Threading;\n\nvoid ThreadProc()\n{\n    TraceSource^ ts = gcnew TraceSource(&quot;MyApp&quot;);\n    int i = ts-&gt;Listeners-&gt;Add(gcnew ConsoleTraceListener());\n    ts-&gt;Listeners[i]-&gt;TraceOutputOptions = TraceOptions::LogicalOperationStack;\n    ts-&gt;Switch = gcnew SourceSwitch(&quot;MyAPP&quot;, &quot;Verbose&quot;);\n    // Add another logical operation.\n    Trace::CorrelationManager-&gt;StartLogicalOperation(&quot;WorkerThread&quot;);\n\n    ts-&gt;TraceEvent(TraceEventType::Error, 1, &quot;Trace an error event.&quot;);\n    Trace::CorrelationManager-&gt;StopLogicalOperation();\n}\n\nvoid main()\n{\n    TraceSource^ ts = gcnew TraceSource(&quot;MyApp&quot;);\n    int i = ts-&gt;Listeners-&gt;Add(gcnew ConsoleTraceListener());\n    ts-&gt;Listeners[i]-&gt;TraceOutputOptions = TraceOptions::LogicalOperationStack;\n    ts-&gt;Switch = gcnew SourceSwitch(&quot;MyAPP&quot;, &quot;Verbose&quot;);\n    // Start the logical operation on the Main thread.\n    Trace::CorrelationManager-&gt;StartLogicalOperation(&quot;MainThread&quot;);\n\n    ts-&gt;TraceEvent(TraceEventType::Error, 1, &quot;Trace an error event.&quot;);\n    Thread^ t = gcnew Thread(gcnew ThreadStart(ThreadProc));\n//   Start the worker thread.\n    t-&gt;Start();\n//  Give the worker thread a chance to execute.\n    Thread::Sleep(1000);\n    Trace::CorrelationManager-&gt;StopLogicalOperation();}\n\n\n\n// This sample generates the following output:\n//MyApp Error: 1 : Trace an error event.\n//    LogicalOperationStack=MainThread\n//MyApp Error: 1 : Trace an error event.\n//    LogicalOperationStack=WorkerThread, MainThread\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.CorrelationManager#1\">using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Diagnostics;\nusing System.Threading;\n\nnamespace CorrlationManager\n{\n    class Program\n    {\n        //private static TraceSource ts;\n        static void Main(string[] args)\n        {\n            TraceSource ts = new TraceSource(&quot;MyApp&quot;);\n            int i = ts.Listeners.Add(new ConsoleTraceListener());\n            ts.Listeners[i].TraceOutputOptions = TraceOptions.LogicalOperationStack;\n            ts.Switch = new SourceSwitch(&quot;MyAPP&quot;, &quot;Verbose&quot;);\n            // Start the logical operation on the Main thread.\n            Trace.CorrelationManager.StartLogicalOperation(&quot;MainThread&quot;);\n            ts.TraceEvent(TraceEventType.Error, 1, &quot;Trace an error event.&quot;);\n            Thread t = new Thread(new ThreadStart(ThreadProc));\n            // Start the worker thread.\n            t.Start();\n            // Give the worker thread a chance to execute.\n            Thread.Sleep(1000);\n            Trace.CorrelationManager.StopLogicalOperation();\n        }\n        public static void ThreadProc()\n        {\n            TraceSource ts = new TraceSource(&quot;MyApp&quot;);\n            int i = ts.Listeners.Add(new ConsoleTraceListener());\n            ts.Listeners[i].TraceOutputOptions = TraceOptions.LogicalOperationStack;\n            ts.Switch = new SourceSwitch(&quot;MyAPP&quot;, &quot;Verbose&quot;);\n            // Add another logical operation.\n            Trace.CorrelationManager.StartLogicalOperation(&quot;WorkerThread&quot;);\n            ts.TraceEvent(TraceEventType.Error, 1, &quot;Trace an error event.&quot;);\n            Trace.CorrelationManager.StopLogicalOperation();\n        }\n    }\n}\n// This sample generates the following output:\n//MyApp Error: 1 : Trace an error event.\n//    LogicalOperationStack=MainThread\n//MyApp Error: 1 : Trace an error event.\n//    LogicalOperationStack=WorkerThread, MainThread\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.CorrelationManager#1\">Imports System\nImports System.Collections.Generic\nImports System.Text\nImports System.Diagnostics\nImports System.Threading\n\n\n\nClass Program\n    \n    &#39;private static TraceSource ts;\n    Shared Sub Main(ByVal args() As String) \n        Dim ts As New TraceSource(&quot;MyApp&quot;)\n        Dim i As Integer = ts.Listeners.Add(New ConsoleTraceListener())\n        ts.Listeners(i).TraceOutputOptions = TraceOptions.LogicalOperationStack\n        ts.Switch = New SourceSwitch(&quot;MyAPP&quot;, &quot;Verbose&quot;)\n        &#39; Start the logical operation on the Main thread.\n        Trace.CorrelationManager.StartLogicalOperation(&quot;MainThread&quot;)\n        ts.TraceEvent(TraceEventType.Error, 1, &quot;Trace an error event.&quot;)\n        Dim t As New Thread(New ThreadStart(AddressOf ThreadProc))\n        &#39; Start the worker thread.\n        t.Start()\n        &#39; Give the worker thread a chance to execute.\n        Thread.Sleep(1000)\n        Trace.CorrelationManager.StopLogicalOperation()\n    \n    End Sub &#39;Main\n    \n    Public Shared Sub ThreadProc() \n        Dim ts As New TraceSource(&quot;MyApp&quot;)\n        Dim i As Integer = ts.Listeners.Add(New ConsoleTraceListener())\n        ts.Listeners(i).TraceOutputOptions = TraceOptions.LogicalOperationStack\n        ts.Switch = New SourceSwitch(&quot;MyAPP&quot;, &quot;Verbose&quot;)\n        &#39; Add another logical operation.\n        Trace.CorrelationManager.StartLogicalOperation(&quot;WorkerThread&quot;)\n        ts.TraceEvent(TraceEventType.Error, 1, &quot;Trace an error event.&quot;)\n        Trace.CorrelationManager.StopLogicalOperation()\n    \n    End Sub &#39;ThreadProc\nEnd Class &#39;Program\n&#39; This sample generates the following output:\n&#39;MyApp Error: 1 : Trace an error event.\n&#39;    LogicalOperationStack=MainThread\n&#39;MyApp Error: 1 : Trace an error event.\n&#39;    LogicalOperationStack=WorkerThread, MainThread\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Traces generated from a single logical operation can be tagged with an operation-unique identity, in order to distinguish them from traces from a different logical operation. For example, it may be useful to group correlated traces by ASP.NET request. The CorrelationManager class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.  </p>\n<p> Logical operations can also be nested. The <a class=\"xref\" href=\"system.diagnostics.correlationmanager#System_Diagnostics_CorrelationManager_LogicalOperationStack_\" data-linktype=\"relative-path\">LogicalOperationStack</a> property exposes the stack of nested logical operation identities. Each call to the <a class=\"xref\" href=\"system.diagnostics.correlationmanager#System_Diagnostics_CorrelationManager_StartLogicalOperation_\" data-linktype=\"relative-path\">StartLogicalOperation</a> method pushes a new logical operation identity onto the stack. Each call to the <a class=\"xref\" href=\"system.diagnostics.correlationmanager#System_Diagnostics_CorrelationManager_StopLogicalOperation_\" data-linktype=\"relative-path\">StopLogicalOperation</a> method pops a logical operation identity off the stack.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Logical operation identities are objects, allowing the use of a type for a logical operation identity.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_CorrelationManager_ActivityId\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ActivityId</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the identity for a global activity.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Guid ActivityId { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure that identifies the global activity.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ActivityId property gets and sets the global activity identity in the <a class=\"xref\" href=\"system.runtime.remoting.messaging.callcontext\" data-linktype=\"relative-path\">CallContext</a> for the thread. The ActivityId is used for trace transfer operations in trace listeners that override the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceTransfer_\" data-linktype=\"relative-path\">TraceTransfer</a> method, such as the <a class=\"xref\" href=\"system.diagnostics.xmlwritertracelistener\" data-linktype=\"relative-path\">XmlWriterTraceListener</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_CorrelationManager_LogicalOperationStack\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LogicalOperationStack</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the logical operation stack from the call context.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Stack LogicalOperationStack { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.stack\" data-linktype=\"relative-path\">Stack</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.stack\" data-linktype=\"relative-path\">Stack</a> object that represents the logical operation stack for the call context.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Each call to the <a class=\"xref\" href=\"system.diagnostics.correlationmanager#System_Diagnostics_CorrelationManager_StartLogicalOperation_\" data-linktype=\"relative-path\">StartLogicalOperation</a> method pushes a new logical operation identity onto the LogicalOperationStack property&#39;s stack. Each call to the <a class=\"xref\" href=\"system.diagnostics.correlationmanager#System_Diagnostics_CorrelationManager_StopLogicalOperation_\" data-linktype=\"relative-path\">StopLogicalOperation</a> method pops a logical operation identity from the stack.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_CorrelationManager_StartLogicalOperation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StartLogicalOperation()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Starts a logical operation on a thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void StartLogicalOperation ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The logical operation is started using an automatically generated GUID for a logical operation identifier.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_CorrelationManager_StartLogicalOperation_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StartLogicalOperation(Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Starts a logical operation with the specified identity on a thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void StartLogicalOperation (object operationId);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>operationId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object identifying the operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>operationId</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>operationId</code> parameter can be any object, such as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that allows the operation to be identified for tracing purposes. The object represented by <code>operationId</code> is added to the <a class=\"xref\" href=\"system.diagnostics.correlationmanager#System_Diagnostics_CorrelationManager_LogicalOperationStack_\" data-linktype=\"relative-path\">LogicalOperationStack</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_CorrelationManager_StopLogicalOperation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StopLogicalOperation()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Stops the current logical operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void StopLogicalOperation ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.CorrelationManager.LogicalOperationStack*</span> property is an empty stack.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The logical operation is halted and the logical operation identity is removed from the <a class=\"xref\" href=\"system.diagnostics.correlationmanager#System_Diagnostics_CorrelationManager_LogicalOperationStack_\" data-linktype=\"relative-path\">LogicalOperationStack</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.CorrelationManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CorrelationManager\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CorrelationManager.ActivityId\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CorrelationManager.LogicalOperationStack\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CorrelationManager.StartLogicalOperation\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CorrelationManager.StopLogicalOperation\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"5bb7c90b-9b39-b841-64a1-4a8d92025c8c\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Correlates traces that are part of a logical transaction.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.diagnostics/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.CorrelationManager\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.CorrelationManager.yml","open_to_public_contributors":false,"api_name":["System.Diagnostics.CorrelationManager","System.Diagnostics.CorrelationManager.ActivityId","System.Diagnostics.CorrelationManager.LogicalOperationStack","System.Diagnostics.CorrelationManager.StartLogicalOperation","System.Diagnostics.CorrelationManager.StopLogicalOperation"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.CorrelationManager","System::Diagnostics::CorrelationManager","System.Diagnostics.CorrelationManager.ActivityId","System::Diagnostics::CorrelationManager::ActivityId","System.Diagnostics.CorrelationManager.LogicalOperationStack","System::Diagnostics::CorrelationManager::LogicalOperationStack","System.Diagnostics.CorrelationManager.StartLogicalOperation","System::Diagnostics::CorrelationManager::StartLogicalOperation","System.Diagnostics.CorrelationManager.StopLogicalOperation","System::Diagnostics::CorrelationManager::StopLogicalOperation"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"5bb7c90b-9b39-b841-64a1-4a8d92025c8c","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CorrelationManager class | Microsoft Docs","_op_ogTitle":"CorrelationManager class","description":"Correlates traces that are part of a logical transaction.\n","toc_asset_id":"api/_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.CorrelationManager","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.correlationmanager","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.correlationmanager","fileRelativePath":"api/System.Diagnostics.CorrelationManager.html"},"themesRelativePathToOutputRoot":"_themes/"}