{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SocketFlags</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies socket send and receive behaviors.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic enum SocketFlags</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">SocketFlags</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.flagsattribute\" title=\"System.FlagsAttribute\" data-linktype=\"relative-path\">FlagsAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example sends data and specifies None for SocketFlags.  </p>\n<pre><code class=\"lang-vb\" name=\"Socket_Sync_Send_Receive#3\">&#39; Displays sending with a connected socket\n&#39; using the overload that takes a buffer, message size, and socket flags.\nPublic Shared Function SendReceiveTest3(ByVal server As Socket) As Integer \n    Dim msg As Byte() = Encoding.UTF8.GetBytes(&quot;This is a test&quot;)\n    Dim bytes(255) As Byte\n    Try\n        &#39; Blocks until send returns.\n        Dim i As Integer = server.Send(msg, msg.Length, SocketFlags.None)\n        Console.WriteLine(&quot;Sent {0} bytes.&quot;, i)\n        \n        &#39; Get reply from the server.\n        Dim byteCount As Integer = server.Receive(bytes, server.Available, SocketFlags.None)\n        If byteCount &gt; 0 Then\n            Console.WriteLine(Encoding.UTF8.GetString(bytes))\n        End If\n    Catch e As SocketException\n        Console.WriteLine(&quot;{0} Error code: {1}.&quot;, e.Message, e.ErrorCode)\n        Return e.ErrorCode\n    End Try\n    Return 0\n\nEnd Function &#39;SendReceiveTest3\n\n</code></pre><pre><code class=\"lang-cs\" name=\"Socket_Sync_Send_Receive#3\">// Displays sending with a connected socket\n// using the overload that takes a buffer, message size, and socket flags.\npublic static int SendReceiveTest3(Socket server)\n{\n    byte[] msg = Encoding.UTF8.GetBytes(&quot;This is a test&quot;);\n    byte[] bytes = new byte[256];\n    try \n    {\n        // Blocks until send returns.\n        int i = server.Send(msg, msg.Length, SocketFlags.None);\n        Console.WriteLine(&quot;Sent {0} bytes.&quot;, i);\n        \n        // Get reply from the server.\n        int byteCount = server.Receive(bytes, server.Available, \n                                           SocketFlags.None);\n        if (byteCount &gt; 0)\n            Console.WriteLine(Encoding.UTF8.GetString(bytes));\n    }\n    catch (SocketException e)\n    {\n        Console.WriteLine(&quot;{0} Error code: {1}.&quot;, e.Message, e.ErrorCode);\n        return (e.ErrorCode);\n    }\n    return 0;\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Socket_Sync_Send_Receive#3\">// Displays sending with a connected socket\n// using the overload that takes a buffer, message size, and socket flags.\nint SendReceiveTest3( Socket^ server )\n{\n   array&lt;Byte&gt;^ msg = Encoding::UTF8-&gt;GetBytes( &quot;This is a test&quot; );\n   array&lt;Byte&gt;^ bytes = gcnew array&lt;Byte&gt;(256);\n   try\n   {\n      // Blocks until send returns.\n      int i = server-&gt;Send( msg, msg-&gt;Length, SocketFlags::None );\n      Console::WriteLine( &quot;Sent {0} bytes.&quot;, i.ToString() );\n      \n      // Get reply from the server.\n      int byteCount = server-&gt;Receive( bytes, server-&gt;Available,\n         SocketFlags::None );\n      if ( byteCount &gt; 0 )\n      {\n         Console::WriteLine( Encoding::UTF8-&gt;GetString( bytes ) );\n      }\n   }\n   catch ( SocketException^ e ) \n   {\n      Console::WriteLine( &quot;{0} Error code: {1}.&quot;, e-&gt;Message, e-&gt;ErrorCode.ToString() );\n      return (e-&gt;ErrorCode);\n   }\n   return 0;\n}\n</code></pre>\r\n  \r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_Broadcast\">\r\n      \t\t\t<span class=\"lang-csharp\">Broadcast</span>\r\n      \t</td>\r\n      \t<td><p>Indicates a broadcast packet.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_ControlDataTruncated\">\r\n      \t\t\t<span class=\"lang-csharp\">ControlDataTruncated</span>\r\n      \t</td>\r\n      \t<td><p>Indicates that the control data did not fit into an internal 64-KB buffer and was truncated.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_DontRoute\">\r\n      \t\t\t<span class=\"lang-csharp\">DontRoute</span>\r\n      \t</td>\r\n      \t<td><p>Send without using routing tables.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_MaxIOVectorLength\">\r\n      \t\t\t<span class=\"lang-csharp\">MaxIOVectorLength</span>\r\n      \t</td>\r\n      \t<td><p>Provides a standard value for the number of WSABUF structures that are used to send and receive data. This value is not used or supported on .NET Framework 4.5.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_Multicast\">\r\n      \t\t\t<span class=\"lang-csharp\">Multicast</span>\r\n      \t</td>\r\n      \t<td><p>Indicates a multicast packet.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>Use no flags for this call.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_OutOfBand\">\r\n      \t\t\t<span class=\"lang-csharp\">OutOfBand</span>\r\n      \t</td>\r\n      \t<td><p>Process out-of-band data.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_Partial\">\r\n      \t\t\t<span class=\"lang-csharp\">Partial</span>\r\n      \t</td>\r\n      \t<td><p>Partial send or receive for message.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_Peek\">\r\n      \t\t\t<span class=\"lang-csharp\">Peek</span>\r\n      \t</td>\r\n      \t<td><p>Peek at the incoming message.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Net_Sockets_SocketFlags_Truncated\">\r\n      \t\t\t<span class=\"lang-csharp\">Truncated</span>\r\n      \t</td>\r\n      \t<td><p>The message was too large to fit into the specified buffer and was truncated.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Sockets.SocketFlags.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.Broadcast\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.ControlDataTruncated\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.DontRoute\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.MaxIOVectorLength\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.Multicast\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.None\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.OutOfBand\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.Partial\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.Peek\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.SocketFlags.Truncated\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"6658012e-28bd-099e-7916-d2400a90bbb4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies socket send and receive behaviors.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net.sockets/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Sockets.SocketFlags\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Sockets.SocketFlags.yml","open_to_public_contributors":false,"api_name":["System.Net.Sockets.SocketFlags","System.Net.Sockets.SocketFlags.Broadcast","System.Net.Sockets.SocketFlags.ControlDataTruncated","System.Net.Sockets.SocketFlags.DontRoute","System.Net.Sockets.SocketFlags.MaxIOVectorLength","System.Net.Sockets.SocketFlags.Multicast","System.Net.Sockets.SocketFlags.None","System.Net.Sockets.SocketFlags.OutOfBand","System.Net.Sockets.SocketFlags.Partial","System.Net.Sockets.SocketFlags.Peek","System.Net.Sockets.SocketFlags.Truncated"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Sockets.SocketFlags","System::Net::Sockets::SocketFlags","System.Net.Sockets.SocketFlags.Broadcast","System::Net::Sockets::SocketFlags::Broadcast","System.Net.Sockets.SocketFlags.ControlDataTruncated","System::Net::Sockets::SocketFlags::ControlDataTruncated","System.Net.Sockets.SocketFlags.DontRoute","System::Net::Sockets::SocketFlags::DontRoute","System.Net.Sockets.SocketFlags.MaxIOVectorLength","System::Net::Sockets::SocketFlags::MaxIOVectorLength","System.Net.Sockets.SocketFlags.Multicast","System::Net::Sockets::SocketFlags::Multicast","System.Net.Sockets.SocketFlags.None","System::Net::Sockets::SocketFlags::None","System.Net.Sockets.SocketFlags.OutOfBand","System::Net::Sockets::SocketFlags::OutOfBand","System.Net.Sockets.SocketFlags.Partial","System::Net::Sockets::SocketFlags::Partial","System.Net.Sockets.SocketFlags.Peek","System::Net::Sockets::SocketFlags::Peek","System.Net.Sockets.SocketFlags.Truncated","System::Net::Sockets::SocketFlags::Truncated"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"6658012e-28bd-099e-7916-d2400a90bbb4","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Net.Sockets/SocketFlags.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SocketFlags enum | Microsoft Docs","_op_ogTitle":"SocketFlags enum","description":"Specifies socket send and receive behaviors.\n","toc_asset_id":"api/_splitted/System.Net.Sockets/toc.json","toc_rel":"_splitted/System.Net.Sockets/toc.json","source_url":"","ms.assetid":"System.Net.Sockets.SocketFlags","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.socketflags","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.socketflags","fileRelativePath":"api/System.Net.Sockets.SocketFlags.html"},"themesRelativePathToOutputRoot":"_themes/"}