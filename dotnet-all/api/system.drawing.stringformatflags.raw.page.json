{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">StringFormatFlags</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the display and layout information for text strings.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic enum StringFormatFlags</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">StringFormatFlags</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.flagsattribute\" title=\"System.FlagsAttribute\" data-linktype=\"relative-path\">FlagsAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates the following members:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.drawing.rectangle#System_Drawing_Rectangle__ctor_\" data-linktype=\"relative-path\">Rectangle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat__ctor_\" data-linktype=\"relative-path\">StringFormat</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat__ctor_\" data-linktype=\"relative-path\">StringFormat</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_Alignment_\" data-linktype=\"relative-path\">Alignment</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_LineAlignment_\" data-linktype=\"relative-path\">LineAlignment</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.stringalignment\" data-linktype=\"relative-path\">StringAlignment</a>  \n</li>\n<li><p>StringFormatFlags  </p>\n</li>\n</ul>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowLineAndAlignment</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Misc2#1\">private void ShowLineAndAlignment(PaintEventArgs e)\n{\n\n    // Construct a new Rectangle .\n    Rectangle  displayRectangle = \n        new Rectangle (new Point(40, 40), new Size (80, 80));\n\n    // Construct 2 new StringFormat objects\n    StringFormat format1 = new StringFormat(StringFormatFlags.NoClip);\n    StringFormat format2 = new StringFormat(format1);\n\n    // Set the LineAlignment and Alignment properties for\n    // both StringFormat objects to different values.\n    format1.LineAlignment = StringAlignment.Near;\n    format1.Alignment = StringAlignment.Center;\n    format2.LineAlignment = StringAlignment.Center;\n    format2.Alignment = StringAlignment.Far;\n\n    // Draw the bounding rectangle and a string for each\n    // StringFormat object.\n    e.Graphics.DrawRectangle(Pens.Black, displayRectangle);\n    e.Graphics.DrawString(&quot;Showing Format1&quot;, this.Font, \n        Brushes.Red, (RectangleF)displayRectangle, format1);\n    e.Graphics.DrawString(&quot;Showing Format2&quot;, this.Font, \n        Brushes.Red, (RectangleF)displayRectangle, format2);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Misc2#1\">Private Sub ShowLineAndAlignment(ByVal e As PaintEventArgs)\n\n    &#39; Construct a new Rectangle.\n    Dim displayRectangle _\n        As New Rectangle(New Point(40, 40), New Size(80, 80))\n\n    &#39; Construct two new StringFormat objects\n    Dim format1 As New StringFormat(StringFormatFlags.NoClip)\n    Dim format2 As New StringFormat(format1)\n\n    &#39; Set the LineAlignment and Alignment properties for\n    &#39; both StringFormat objects to different values.\n    format1.LineAlignment = StringAlignment.Near\n    format1.Alignment = StringAlignment.Center\n    format2.LineAlignment = StringAlignment.Center\n    format2.Alignment = StringAlignment.Far\n\n    &#39; Draw the bounding rectangle and a string for each\n    &#39; StringFormat object.\n    e.Graphics.DrawRectangle(Pens.Black, displayRectangle)\n    e.Graphics.DrawString(&quot;Showing Format1&quot;, Me.Font, Brushes.Red, _\n        RectangleF.op_Implicit(displayRectangle), format1)\n    e.Graphics.DrawString(&quot;Showing Format2&quot;, Me.Font, Brushes.Red, _\n        RectangleF.op_Implicit(displayRectangle), format2)\nEnd Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Misc2#1\">private:\n   void ShowLineAndAlignment( PaintEventArgs^ e )\n   {\n      // Construct a new Rectangle .\n      Rectangle displayRectangle = Rectangle(Point(40,40),System::Drawing::Size( 80, 80 ));\n      \n      // Construct 2 new StringFormat objects\n      StringFormat^ format1 = gcnew StringFormat( StringFormatFlags::NoClip );\n      StringFormat^ format2 = gcnew StringFormat( format1 );\n      \n      // Set the LineAlignment and Alignment properties for\n      // both StringFormat objects to different values.\n      format1-&gt;LineAlignment = StringAlignment::Near;\n      format1-&gt;Alignment = StringAlignment::Center;\n      format2-&gt;LineAlignment = StringAlignment::Center;\n      format2-&gt;Alignment = StringAlignment::Far;\n      \n      // Draw the bounding rectangle and a string for each\n      // StringFormat object.\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, displayRectangle );\n      e-&gt;Graphics-&gt;DrawString( &quot;Showing Format1&quot;, this-&gt;Font, Brushes::Red, displayRectangle, format1 );\n      e-&gt;Graphics-&gt;DrawString( &quot;Showing Format2&quot;, this-&gt;Font, Brushes::Red, displayRectangle, format2 );\n   }\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>StringFormatFlags is used by the <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The FitBlackBox field was misnamed and its behavior is similar to the <code>NoFitBlackBox</code> field in the original GDI+ implementation.</p>\n</div>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_DirectionRightToLeft\">\r\n      \t\t\t<span class=\"lang-csharp\">DirectionRightToLeft</span>\r\n      \t</td>\r\n      \t<td><p>Text is displayed from right to left.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_DirectionVertical\">\r\n      \t\t\t<span class=\"lang-csharp\">DirectionVertical</span>\r\n      \t</td>\r\n      \t<td><p>Text is vertically aligned.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_DisplayFormatControl\">\r\n      \t\t\t<span class=\"lang-csharp\">DisplayFormatControl</span>\r\n      \t</td>\r\n      \t<td><p>Control characters such as the left-to-right mark are shown in the output with a representative glyph.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_FitBlackBox\">\r\n      \t\t\t<span class=\"lang-csharp\">FitBlackBox</span>\r\n      \t</td>\r\n      \t<td><p>Parts of characters are allowed to overhang the string&#39;s layout rectangle. By default, characters are repositioned to avoid any overhang.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_LineLimit\">\r\n      \t\t\t<span class=\"lang-csharp\">LineLimit</span>\r\n      \t</td>\r\n      \t<td><p>Only entire lines are laid out in the formatting rectangle. By default layout continues until the end of the text, or until no more lines are visible as a result of clipping, whichever comes first. Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height. To ensure that only whole lines are seen, specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_MeasureTrailingSpaces\">\r\n      \t\t\t<span class=\"lang-csharp\">MeasureTrailingSpaces</span>\r\n      \t</td>\r\n      \t<td><p>Includes the trailing space at the end of each line. By default the boundary rectangle returned by the <span class=\"xref\">stem.Drawing.Graphics.MeasureString*</span> method excludes the space at the end of each line. Set this flag to include that space in measurement.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_NoClip\">\r\n      \t\t\t<span class=\"lang-csharp\">NoClip</span>\r\n      \t</td>\r\n      \t<td><p>Overhanging parts of glyphs, and unwrapped text reaching outside the formatting rectangle are allowed to show. By default all text and glyph parts reaching outside the formatting rectangle are clipped.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_NoFontFallback\">\r\n      \t\t\t<span class=\"lang-csharp\">NoFontFallback</span>\r\n      \t</td>\r\n      \t<td><p>Fallback to alternate fonts for characters not supported in the requested font is disabled. Any missing characters are displayed with the fonts missing glyph, usually an open square.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_StringFormatFlags_NoWrap\">\r\n      \t\t\t<span class=\"lang-csharp\">NoWrap</span>\r\n      \t</td>\r\n      \t<td><p>Text wrapping between lines when formatting within a rectangle is disabled. This flag is implied when a point is passed instead of a rectangle, or when the specified rectangle has a zero line length.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.StringFormatFlags.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.DirectionRightToLeft\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.DirectionVertical\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.DisplayFormatControl\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.FitBlackBox\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.LineLimit\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.MeasureTrailingSpaces\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.NoClip\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.NoFontFallback\">\r\n<meta name=\"APIName\" content=\"System.Drawing.StringFormatFlags.NoWrap\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"6e7d86b8-3018-2b46-39ca-4dd5cf84b398\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the display and layout information for text strings.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.drawing/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.StringFormatFlags\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.StringFormatFlags.yml","open_to_public_contributors":false,"api_name":["System.Drawing.StringFormatFlags","System.Drawing.StringFormatFlags.DirectionRightToLeft","System.Drawing.StringFormatFlags.DirectionVertical","System.Drawing.StringFormatFlags.DisplayFormatControl","System.Drawing.StringFormatFlags.FitBlackBox","System.Drawing.StringFormatFlags.LineLimit","System.Drawing.StringFormatFlags.MeasureTrailingSpaces","System.Drawing.StringFormatFlags.NoClip","System.Drawing.StringFormatFlags.NoFontFallback","System.Drawing.StringFormatFlags.NoWrap"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.StringFormatFlags","System::Drawing::StringFormatFlags","System.Drawing.StringFormatFlags.DirectionRightToLeft","System::Drawing::StringFormatFlags::DirectionRightToLeft","System.Drawing.StringFormatFlags.DirectionVertical","System::Drawing::StringFormatFlags::DirectionVertical","System.Drawing.StringFormatFlags.DisplayFormatControl","System::Drawing::StringFormatFlags::DisplayFormatControl","System.Drawing.StringFormatFlags.FitBlackBox","System::Drawing::StringFormatFlags::FitBlackBox","System.Drawing.StringFormatFlags.LineLimit","System::Drawing::StringFormatFlags::LineLimit","System.Drawing.StringFormatFlags.MeasureTrailingSpaces","System::Drawing::StringFormatFlags::MeasureTrailingSpaces","System.Drawing.StringFormatFlags.NoClip","System::Drawing::StringFormatFlags::NoClip","System.Drawing.StringFormatFlags.NoFontFallback","System::Drawing::StringFormatFlags::NoFontFallback","System.Drawing.StringFormatFlags.NoWrap","System::Drawing::StringFormatFlags::NoWrap"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"6e7d86b8-3018-2b46-39ca-4dd5cf84b398","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Drawing/StringFormatFlags.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StringFormatFlags enum | Microsoft Docs","_op_ogTitle":"StringFormatFlags enum","description":"Specifies the display and layout information for text strings.\n","toc_asset_id":"api/_splitted/System.Drawing/toc.json","toc_rel":"_splitted/System.Drawing/toc.json","source_url":"","ms.assetid":"System.Drawing.StringFormatFlags","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.stringformatflags","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.stringformatflags","fileRelativePath":"api/System.Drawing.StringFormatFlags.html"},"themesRelativePathToOutputRoot":"_themes/"}