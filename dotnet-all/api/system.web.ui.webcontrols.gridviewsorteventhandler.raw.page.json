{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GridViewSortEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void GridViewSortEventHandler(object sender, GridViewSortEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">GridViewSortEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to programmatically add a GridViewSortEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSortEventHandler#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void Page_Load(Object sender, EventArgs e)\n    {\n        \n        // Create a new GridView object.\n        GridView authorGridView = new GridView();\n         \n        // Set the GridView object&#39;s properties.\n        authorGridView.ID = &quot;AuthorGridView&quot;;\n        authorGridView.DataSourceID = &quot;AuthorsSqlDataSource&quot;; \n        authorGridView.AutoGenerateColumns = true;\n        authorGridView.AllowSorting = true;\n        \n        // Programmatically register the event-handling methods.\n        authorGridView.Sorting += new GridViewSortEventHandler(this.AuthorsGridView_Sorting);\n        \n        // Add the GridView object to the Controls collection\n        // of the PlaceHolder control.\n        GridViewPlaceHolder.Controls.Add(authorGridView);\n        \n    }\n    \n    void AuthorsGridView_Sorting(Object sender, GridViewSortEventArgs e)\n    {\n    \n        // Cancel the sorting operation if the user attempts to sort\n        // the Contract column.\n        if(e.SortExpression == &quot;contract&quot;)\n        {\n            e.Cancel = true;\n            Message.Text = &quot;You cannot sort the Contract column.&quot;;\n        }\n        else\n        {\n            // Clear the message label.\n            Message.Text = &quot;&quot;;\n        }\n    \n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n    &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewSortEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewSortEventHandler Example&lt;/h3&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                forecolor=&quot;Red&quot;\n                runat=&quot;server&quot;/&gt;\n                \n            &lt;br/&gt;\n            \n            &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n                runat=&quot;Server&quot;/&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Pubs sample database.                         --&gt;\n            &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [au_id], [au_lname], [au_fname], [address], [city], [state], [zip], [contract] FROM [authors]&quot;\n                updatecommand=&quot;UPDATE authors SET au_lname=@au_lname, au_fname=@au_fname, address=@address, city=@city, state=@state, zip=@zip, contract=@contract WHERE (authors.au_id = @au_id)&quot;\n                connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n                runat=&quot;server&quot;&gt;\n            &lt;/asp:sqldatasource&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSortEventHandler#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n        &#39; Create a new GridView object.\n        Dim authorGridView As GridView = New GridView\n         \n        &#39; Set the GridView object&#39;s properties.\n        authorGridView.ID = &quot;AuthorGridView&quot;\n        authorGridView.DataSourceID = &quot;AuthorsSqlDataSource&quot;\n        authorGridView.AutoGenerateColumns = True\n        authorGridView.AllowSorting = True\n        \n        &#39; Programmatically register the event-handling methods.\n        AddHandler authorGridView.Sorting, AddressOf AuthorsGridView_Sorting\n        \n        &#39; Add the GridView object to the Controls collection\n        &#39; of the PlaceHolder control.\n        GridViewPlaceHolder.Controls.Add(authorGridView)\n        \n    End Sub\n    \n    Sub AuthorsGridView_Sorting(ByVal sender As Object, ByVal e As GridViewSortEventArgs)\n    \n        &#39; Cancel the sorting operation if the user attempts to sort\n        &#39; the Contract column.\n        If e.SortExpression = &quot;contract&quot; Then\n\n            e.Cancel = True\n            Message.Text = &quot;You cannot sort the Contract column.&quot;\n        \n        Else\n      \n            &#39; Clear the message label.\n            Message.Text = &quot;&quot;\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n    &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewSortEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewSortEventHandler Example&lt;/h3&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                forecolor=&quot;Red&quot;\n                runat=&quot;server&quot;/&gt;\n                \n            &lt;br/&gt;\n            \n            &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n                runat=&quot;Server&quot;/&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Pubs sample database.                         --&gt;\n            &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [au_id], [au_lname], [au_fname], [address], [city], [state], [zip], [contract] FROM [authors]&quot;\n                updatecommand=&quot;UPDATE authors SET au_lname=@au_lname, au_fname=@au_fname, address=@address, city=@city, state=@state, zip=@zip, contract=@contract WHERE (authors.au_id = @au_id)&quot;\n                connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n                runat=&quot;server&quot;&gt;\n            &lt;/asp:sqldatasource&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to declaratively add a GridViewSortEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewSorting#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomersGridView_Sorting(sender As Object, e As GridViewSortEventArgs)\n  \n    &#39; Cancel the sorting operation if the user attempts\n    &#39; to sort by address.\n    If e.SortExpression = &quot;Address&quot; Then\n    \n      e.Cancel = True\n      Message.Text = &quot;You cannot sort by address.&quot;\n      SortInformationLabel.Text = &quot;&quot;\n    \n    Else\n    \n      Message.Text = &quot;&quot;\n      \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_Sorted(ByVal sender As Object, ByVal e As EventArgs)\n \n    &#39; Display the sort expression and sort direction.\n    SortInformationLabel.Text = &quot;Sorting by &quot; &amp; _\n      CustomersGridView.SortExpression.ToString() &amp; _\n      &quot; in &quot; &amp; CustomersGridView.SortDirection.ToString() &amp; _\n      &quot; order.&quot;\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sorted and Sorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sorted and Sorting Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n        \n      &lt;br/&gt;\n        \n      &lt;asp:label id=&quot;SortInformationLabel&quot;\n        forecolor=&quot;Navy&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onsorting=&quot;CustomersGridView_Sorting&quot;\n        onsorted=&quot;CustomersGridView_Sorted&quot;  \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewSorting#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_Sorting(Object sender, GridViewSortEventArgs e)\n  {\n    // Cancel the sorting operation if the user attempts\n    // to sort by address.\n    if (e.SortExpression == &quot;Address&quot;)\n    {\n      e.Cancel = true;\n      Message.Text = &quot;You cannot sort by address.&quot;;\n      SortInformationLabel.Text = &quot;&quot;;\n    }\n    else\n    {\n      Message.Text = &quot;&quot;;\n    }\n  }\n\n  void CustomersGridView_Sorted(Object sender, EventArgs e)\n  {\n    // Display the sort expression and sort direction.\n    SortInformationLabel.Text = &quot;Sorting by &quot; +\n      CustomersGridView.SortExpression.ToString() +\n      &quot; in &quot; + CustomersGridView.SortDirection.ToString() +\n      &quot; order.&quot;;\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sorting Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n        \n      &lt;br/&gt;\n        \n      &lt;asp:label id=&quot;SortInformationLabel&quot;\n        forecolor=&quot;Navy&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onsorting=&quot;CustomersGridView_Sorting&quot;\n        onsorted=&quot;CustomersGridView_Sorted&quot;  \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event is raised when the hyperlink to sort a column is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation. This allows you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.  </p>\n<p> When you create a GridViewSortEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewSortEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSortEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSortEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSortEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSortEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewSortEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"2c4e21ec-900a-e539-70e1-d44a264a282a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.GridViewSortEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewSortEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.GridViewSortEventHandler","System.Web.UI.WebControls.GridViewSortEventHandler..ctor","System.Web.UI.WebControls.GridViewSortEventHandler.Invoke","System.Web.UI.WebControls.GridViewSortEventHandler.BeginInvoke","System.Web.UI.WebControls.GridViewSortEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.GridViewSortEventHandler","System::Web::UI::WebControls::GridViewSortEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"2c4e21ec-900a-e539-70e1-d44a264a282a","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/GridViewSortEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridViewSortEventHandler delegate | Microsoft Docs","_op_ogTitle":"GridViewSortEventHandler delegate","description":"Represents the method that handles the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.GridViewSortEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewsorteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewsorteventhandler","fileRelativePath":"api/System.Web.UI.WebControls.GridViewSortEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}