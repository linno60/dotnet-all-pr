{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">MethodImplOptions</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the details of how a method is implemented.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic enum MethodImplOptions</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div><span class=\"lang-csharp\">MethodImplOptions</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This enumeration is used with the <a class=\"xref\" href=\"system.runtime.compilerservices.methodimplattribute\" data-linktype=\"relative-path\">MethodImplAttribute</a> attribute.  </p>\n<p> You can specify multiple MethodImplOptions values by using the bitwise OR operator.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances. This might cause deadlocks or other synchronization problems.</p>\n</div>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_AggressiveInlining\">\r\n      \t\t\t<span class=\"lang-csharp\">AggressiveInlining</span>\r\n      \t</td>\r\n      \t<td><p>The method should be inlined if possible.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_ForwardRef\">\r\n      \t\t\t<span class=\"lang-csharp\">ForwardRef</span>\r\n      \t</td>\r\n      \t<td><p>The method is declared, but its implementation is provided elsewhere.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_InternalCall\">\r\n      \t\t\t<span class=\"lang-csharp\">InternalCall</span>\r\n      \t</td>\r\n      \t<td><p>The call is internal, that is, it calls a method that is implemented within the common language runtime.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_NoInlining\">\r\n      \t\t\t<span class=\"lang-csharp\">NoInlining</span>\r\n      \t</td>\r\n      \t<td><p>The method cannot be inlined. Inlining is an optimization by which a method call is replaced with the method body.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_NoOptimization\">\r\n      \t\t\t<span class=\"lang-csharp\">NoOptimization</span>\r\n      \t</td>\r\n      \t<td><p>The method is not optimized by the just-in-time (JIT) compiler or by native code generation (see <a href=\"../topic/ngen.exe%20(native%20image%20generator)\" data-linktype=\"relative-path\">Ngen.exe</a>) when debugging possible code generation problems.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_PreserveSig\">\r\n      \t\t\t<span class=\"lang-csharp\">PreserveSig</span>\r\n      \t</td>\r\n      \t<td><p>The method signature is exported exactly as declared.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_Synchronized\">\r\n      \t\t\t<span class=\"lang-csharp\">Synchronized</span>\r\n      \t</td>\r\n      \t<td><p>The method can be executed by only one thread at a time. Static methods lock on the type, whereas instance methods lock on the instance. Only one thread can execute in any of the instance functions, and only one thread can execute in any of a class&#39;s static functions.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Runtime_CompilerServices_MethodImplOptions_Unmanaged\">\r\n      \t\t\t<span class=\"lang-csharp\">Unmanaged</span>\r\n      \t</td>\r\n      \t<td><p>The method is implemented in unmanaged code.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.CompilerServices.MethodImplOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.ForwardRef\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.InternalCall\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.NoInlining\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.NoOptimization\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.PreserveSig\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.Synchronized\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.MethodImplOptions.Unmanaged\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-23 06:04 AM\">\r\n<meta name=\"document_id\" content=\"6fa6d41d-8bda-f2ad-ffca-e05c7f890bb1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the details of how a method is implemented.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.compilerservices/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.CompilerServices.MethodImplOptions\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.CompilerServices.MethodImplOptions.yml","open_to_public_contributors":false,"api_name":["System.Runtime.CompilerServices.MethodImplOptions","System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining","System.Runtime.CompilerServices.MethodImplOptions.ForwardRef","System.Runtime.CompilerServices.MethodImplOptions.InternalCall","System.Runtime.CompilerServices.MethodImplOptions.NoInlining","System.Runtime.CompilerServices.MethodImplOptions.NoOptimization","System.Runtime.CompilerServices.MethodImplOptions.PreserveSig","System.Runtime.CompilerServices.MethodImplOptions.Synchronized","System.Runtime.CompilerServices.MethodImplOptions.Unmanaged"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.CompilerServices.MethodImplOptions","System::Runtime::CompilerServices::MethodImplOptions","System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining","System::Runtime::CompilerServices::MethodImplOptions::AggressiveInlining","System.Runtime.CompilerServices.MethodImplOptions.ForwardRef","System::Runtime::CompilerServices::MethodImplOptions::ForwardRef","System.Runtime.CompilerServices.MethodImplOptions.InternalCall","System::Runtime::CompilerServices::MethodImplOptions::InternalCall","System.Runtime.CompilerServices.MethodImplOptions.NoInlining","System::Runtime::CompilerServices::MethodImplOptions::NoInlining","System.Runtime.CompilerServices.MethodImplOptions.NoOptimization","System::Runtime::CompilerServices::MethodImplOptions::NoOptimization","System.Runtime.CompilerServices.MethodImplOptions.PreserveSig","System::Runtime::CompilerServices::MethodImplOptions::PreserveSig","System.Runtime.CompilerServices.MethodImplOptions.Synchronized","System::Runtime::CompilerServices::MethodImplOptions::Synchronized","System.Runtime.CompilerServices.MethodImplOptions.Unmanaged","System::Runtime::CompilerServices::MethodImplOptions::Unmanaged"],"dev_langs":["csharp"],"updated_at":"2017-03-23 06:04 AM","document_id":"6fa6d41d-8bda-f2ad-ffca-e05c7f890bb1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/xml/System.Runtime.CompilerServices/MethodImplOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MethodImplOptions enum | Microsoft Docs","_op_ogTitle":"MethodImplOptions enum","description":"Defines the details of how a method is implemented.\n","toc_asset_id":"api/_splitted/System.Runtime.CompilerServices/toc.json","toc_rel":"_splitted/System.Runtime.CompilerServices/toc.json","source_url":"","ms.assetid":"System.Runtime.CompilerServices.MethodImplOptions","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/api/system.runtime.compilerservices.methodimploptions","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/api/system.runtime.compilerservices.methodimploptions","fileRelativePath":"api/System.Runtime.CompilerServices.MethodImplOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}