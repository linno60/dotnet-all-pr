{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ImageLockMode</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies flags that are passed to the flags parameter of the <span class=\"xref\">stem.Drawing.Bitmap.LockBits*</span> method. The <span class=\"xref\">stem.Drawing.Bitmap.LockBits*</span> method locks a portion of an image so that you can read or write the pixel data.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum ImageLockMode</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">ImageLockMode</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.image#System_Drawing_Image_PixelFormat_\" data-linktype=\"relative-path\">PixelFormat</a>, <a class=\"xref\" href=\"system.drawing.image#System_Drawing_Image_Height_\" data-linktype=\"relative-path\">Height</a>, <a class=\"xref\" href=\"system.drawing.image#System_Drawing_Image_Width_\" data-linktype=\"relative-path\">Width</a>, and <a class=\"xref\" href=\"system.drawing.imaging.bitmapdata#System_Drawing_Imaging_BitmapData_Scan0_\" data-linktype=\"relative-path\">Scan0</a> properties; the <a class=\"xref\" href=\"system.drawing.bitmap#System_Drawing_Bitmap_LockBits_\" data-linktype=\"relative-path\">LockBits</a> and <a class=\"xref\" href=\"system.drawing.bitmap#System_Drawing_Bitmap_UnlockBits_\" data-linktype=\"relative-path\">UnlockBits</a> methods; and the ImageLockMode enumeration. This example is designed to be used with Windows Forms. To run this example, paste it into a form and handle the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event by calling the <code>LockUnlockBitsExample</code> method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.BitmapMembers#5\">    private void LockUnlockBitsExample(PaintEventArgs e)\n        {\n\n            // Create a new bitmap.\n            Bitmap bmp = new Bitmap(&quot;c:\\\\fakePhoto.jpg&quot;);\n\n            // Lock the bitmap&#39;s bits.  \n            Rectangle rect = new Rectangle(0, 0, bmp.Width, bmp.Height);\n            System.Drawing.Imaging.BitmapData bmpData =\n                bmp.LockBits(rect, System.Drawing.Imaging.ImageLockMode.ReadWrite,\n                bmp.PixelFormat);\n\n            // Get the address of the first line.\n            IntPtr ptr = bmpData.Scan0;\n\n            // Declare an array to hold the bytes of the bitmap.\n            int bytes  = Math.Abs(bmpData.Stride) * bmp.Height;\n���         byte[] rgbValues = new byte[bytes];\n\n            // Copy the RGB values into the array.\n            System.Runtime.InteropServices.Marshal.Copy(ptr, rgbValues, 0, bytes);\n\n            // Set every third value to 255. A 24bpp bitmap will look red.  \n            for (int counter = 2; counter &lt; rgbValues.Length; counter += 3)\n                rgbValues[counter] = 255;\n\n            // Copy the RGB values back to the bitmap\n            System.Runtime.InteropServices.Marshal.Copy(rgbValues, 0, ptr, bytes);\n\n            // Unlock the bits.\n            bmp.UnlockBits(bmpData);\n\n            // Draw the modified image.\n            e.Graphics.DrawImage(bmp, 0, 150);\n\n        }\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.BitmapMembers#5\">Private Sub LockUnlockBitsExample(ByVal e As PaintEventArgs)\n\n    &#39; Create a new bitmap.\n    Dim bmp As New Bitmap(&quot;c:\\fakePhoto.jpg&quot;)\n\n    &#39; Lock the bitmap&#39;s bits.  \n    Dim rect As New Rectangle(0, 0, bmp.Width, bmp.Height)\n    Dim bmpData As System.Drawing.Imaging.BitmapData = bmp.LockBits(rect, _\n        Drawing.Imaging.ImageLockMode.ReadWrite, bmp.PixelFormat)\n\n    &#39; Get the address of the first line.\n    Dim ptr As IntPtr = bmpData.Scan0\n\n    &#39; Declare an array to hold the bytes of the bitmap.\n    &#39; This code is specific to a bitmap with 24 bits per pixels.\n    Dim bytes As Integer = Math.Abs(bmpData.Stride) * bmp.Height\n    Dim rgbValues(bytes - 1) As Byte\n\n    &#39; Copy the RGB values into the array.\n    System.Runtime.InteropServices.Marshal.Copy(ptr, rgbValues, 0, bytes)\n\n    &#39; Set every third value to 255. A 24bpp image will look red.\n    For counter As Integer = 2 To rgbValues.Length - 1 Step 3\n        rgbValues(counter) = 255\n    Next\n\n    &#39; Copy the RGB values back to the bitmap\n    System.Runtime.InteropServices.Marshal.Copy(rgbValues, 0, ptr, bytes)\n\n    &#39; Unlock the bits.\n    bmp.UnlockBits(bmpData)\n\n    &#39; Draw the modified image.\n    e.Graphics.DrawImage(bmp, 0, 150)\n\nEnd Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.BitmapMembers#5\">void LockUnlockBitsExample( PaintEventArgs^ e )\n{\n   // Create a new bitmap.\n   Bitmap^ bmp = gcnew Bitmap( &quot;c:\\\\fakePhoto.jpg&quot; );\n\n   // Lock the bitmap&#39;s bits.  \n   Rectangle rect = Rectangle(0,0,bmp-&gt;Width,bmp-&gt;Height);\n   System::Drawing::Imaging::BitmapData^ bmpData = bmp-&gt;LockBits( rect, System::Drawing::Imaging::ImageLockMode::ReadWrite, bmp-&gt;PixelFormat );\n\n   // Get the address of the first line.\n   IntPtr ptr = bmpData-&gt;Scan0;\n\n   // Declare an array to hold the bytes of the bitmap.\n   // This code is specific to a bitmap with 24 bits per pixels.\n   int bytes = Math::Abs(bmpData-&gt;Stride) * bmp-&gt;Height;\n   array&lt;Byte&gt;^rgbValues = gcnew array&lt;Byte&gt;(bytes);\n\n   // Copy the RGB values into the array.\n   System::Runtime::InteropServices::Marshal::Copy( ptr, rgbValues, 0, bytes );\n\n   // Set every third value to 255.  \n   for ( int counter = 2; counter &lt; rgbValues-&gt;Length; counter += 3 )\n      rgbValues[ counter ] = 255;\n\n   // Copy the RGB values back to the bitmap\n   System::Runtime::InteropServices::Marshal::Copy( rgbValues, 0, ptr, bytes );\n\n   // Unlock the bits.\n   bmp-&gt;UnlockBits( bmpData );\n\n   // Draw the modified image.\n   e-&gt;Graphics-&gt;DrawImage( bmp, 0, 150 );\n}\n</code></pre>\r\n  \r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Drawing_Imaging_ImageLockMode_ReadOnly\">\r\n      \t\t\t<span class=\"lang-csharp\">ReadOnly</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that a portion of the image is locked for reading.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_Imaging_ImageLockMode_ReadWrite\">\r\n      \t\t\t<span class=\"lang-csharp\">ReadWrite</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that a portion of the image is locked for reading or writing.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_Imaging_ImageLockMode_UserInputBuffer\">\r\n      \t\t\t<span class=\"lang-csharp\">UserInputBuffer</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that the buffer used for reading or writing pixel data is allocated by the user. If this flag is set, the <code>flags</code> parameter of the <span class=\"xref\">stem.Drawing.Bitmap.LockBits*</span> method serves as an input parameter (and possibly as an output parameter). If this flag is cleared, then the <code>flags</code> parameter serves only as an output parameter.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Drawing_Imaging_ImageLockMode_WriteOnly\">\r\n      \t\t\t<span class=\"lang-csharp\">WriteOnly</span>\r\n      \t</td>\r\n      \t<td><p>Specifies that a portion of the image is locked for writing.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.Imaging.ImageLockMode.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageLockMode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageLockMode.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageLockMode.ReadWrite\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageLockMode.UserInputBuffer\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageLockMode.WriteOnly\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"60bdcbd7-60f3-032e-7123-52af3905fd37\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies flags that are passed to the flags parameter of the  method. The  method locks a portion of an image so that you can read or write the pixel data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.drawing.imaging/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Imaging.ImageLockMode\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Drawing.Imaging.ImageLockMode.yml","open_to_public_contributors":false,"api_name":["System.Drawing.Imaging.ImageLockMode","System.Drawing.Imaging.ImageLockMode.ReadOnly","System.Drawing.Imaging.ImageLockMode.ReadWrite","System.Drawing.Imaging.ImageLockMode.UserInputBuffer","System.Drawing.Imaging.ImageLockMode.WriteOnly"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Imaging.ImageLockMode","System::Drawing::Imaging::ImageLockMode","System.Drawing.Imaging.ImageLockMode.ReadOnly","System::Drawing::Imaging::ImageLockMode::ReadOnly","System.Drawing.Imaging.ImageLockMode.ReadWrite","System::Drawing::Imaging::ImageLockMode::ReadWrite","System.Drawing.Imaging.ImageLockMode.UserInputBuffer","System::Drawing::Imaging::ImageLockMode::UserInputBuffer","System.Drawing.Imaging.ImageLockMode.WriteOnly","System::Drawing::Imaging::ImageLockMode::WriteOnly"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"60bdcbd7-60f3-032e-7123-52af3905fd37","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Drawing.Imaging/ImageLockMode.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ImageLockMode enum | Microsoft Docs","_op_ogTitle":"ImageLockMode enum","description":"Specifies flags that are passed to the flags parameter of the  method. The  method locks a portion of an image so that you can read or write the pixel data.\n","toc_asset_id":"api/_splitted/System.Drawing.Imaging/toc.json","toc_rel":"_splitted/System.Drawing.Imaging/toc.json","source_url":"","ms.assetid":"System.Drawing.Imaging.ImageLockMode","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.imaging.imagelockmode","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.imaging.imagelockmode","fileRelativePath":"api/System.Drawing.Imaging.ImageLockMode.html"},"themesRelativePathToOutputRoot":"_themes/"}