{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ModuleResolveEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.reflection.assembly#System_Reflection_Assembly_ModuleResolve\" data-linktype=\"relative-path\">ModuleResolve</a> event of an <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[ECMA2Yaml.Models.ECMAAttribute]\npublic delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">ModuleResolveEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates the sequence of execution in which an event handler is called. In this example, Server1 is an external module of the MySample class.  </p>\n<h3 id=\"to-compile-and-run-the-example\">To compile and run the example</h3>\n<ol>\n<li><p>Open a Command Prompt window and navigate to the directory that contains MySample.cs.  </p>\n</li>\n<li><p>Compile Server1 using the following command:  </p>\n<pre><code>csc /out:subfolder\\Server1.netmodule /t:module Server1.cs  \n</code></pre></li>\n<li><p>Compile MySample using the following command:  </p>\n<pre><code>csc /out:MySample.exe /t:exe /addmodule:subfolder\\Server1.netmodule MySample.cs  \n</code></pre></li>\n<li><p>Run MySample.exe.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The module file Server1.netmodule must be in a subdirectory named &quot;subfolder&quot; for this example to work properly.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Reflection.ModuleResolveEventHandler#1\">using System;\nusing System.IO;\nusing System.Reflection;\n\nclass MySample\n{\n    public static int Main(String[] args)\n    {\n        Assembly asm1 = typeof(MySample).Assembly;\n        asm1.ModuleResolve += new ModuleResolveEventHandler(evModuleResolve);\n        Console.WriteLine(&quot;Calling MySample.Test...&quot;);\n        Test();\n        return 0;\n    }\n    private static Module evModuleResolve(object sender, ResolveEventArgs e)\n    {\n        Console.WriteLine();\n        Console.WriteLine(&quot;******************************************************&quot;);\n        Console.WriteLine(&quot;* MySample.evModuleResolve() in module: {0:s} *&quot;,\n            Type.GetType(&quot;MySample&quot;).Module.ScopeName);\n        Console.WriteLine(&quot;******************************************************&quot;);\n        FileStream fs = File.Open(&quot;subfolder\\\\Server1.netmodule&quot;, FileMode.Open);\n        long len = fs.Length;\n        byte[] rgFileBytes = new byte[len];\n        fs.Read(rgFileBytes, 0, (int)len);\n        Assembly a = typeof(MySample).Assembly;\n        Module m = a.LoadModule(&quot;Server1.netmodule&quot;, rgFileBytes);\n        return m;\n    }\n    private static void Test()\n    {\n        Console.WriteLine(&quot;Instantiating Server1...&quot;);\n        Server1 s = new Server1();\n        Console.WriteLine(&quot;Calling Server1.trivial...&quot;);\n        s.trivial();\n    }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Reflection.ModuleResolveEventHandler#2\">// Server1 module\n\nusing System;\nusing System.Reflection;\n\npublic class Server1 : MarshalByRefObject\n{\n    public int trivial()\n    {\n        Console.WriteLine();\n        Console.WriteLine(&quot;******************************************************&quot;);\n        Console.WriteLine(&quot;*   Server1.trivial() in module: {0:s}   *&quot;, this.GetType().Module.ScopeName);\n        Console.WriteLine(&quot;******************************************************&quot;);\n        Console.WriteLine(&quot;Returning from Server1.trivial...&quot;);\n        return 1;\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.ModuleResolveEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ModuleResolveEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ModuleResolveEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ModuleResolveEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ModuleResolveEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ModuleResolveEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"4e161633-e4ce-dfa0-3a08-2c3b6aca2ebd\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  event of an .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.reflection/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.ModuleResolveEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Reflection.ModuleResolveEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Reflection.ModuleResolveEventHandler","System.Reflection.ModuleResolveEventHandler..ctor","System.Reflection.ModuleResolveEventHandler.Invoke","System.Reflection.ModuleResolveEventHandler.BeginInvoke","System.Reflection.ModuleResolveEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.ModuleResolveEventHandler","System::Reflection::ModuleResolveEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"4e161633-e4ce-dfa0-3a08-2c3b6aca2ebd","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Reflection/ModuleResolveEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ModuleResolveEventHandler delegate | Microsoft Docs","_op_ogTitle":"ModuleResolveEventHandler delegate","description":"Represents the method that will handle the  event of an .\n","toc_asset_id":"api/_splitted/System.Reflection/toc.json","toc_rel":"_splitted/System.Reflection/toc.json","source_url":"","ms.assetid":"System.Reflection.ModuleResolveEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.moduleresolveeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.moduleresolveeventhandler","fileRelativePath":"api/System.Reflection.ModuleResolveEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}