{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ConsoleTraceListener</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Directs tracing or debugging output to either the standard output or the standard error stream.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.textwritertracelistener\" data-linktype=\"relative-path\">TextWriterTraceListener</a></span></div><span class=\"lang-csharp\">ConsoleTraceListener</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.textwritertracelistener#System_Diagnostics_TextWriterTraceListener_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.textwritertracelistener#System_Diagnostics_TextWriterTraceListener_Flush\" data-linktype=\"relative-path\">Flush()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.textwritertracelistener#System_Diagnostics_TextWriterTraceListener_Write_System_String_\" data-linktype=\"relative-path\">Write(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.textwritertracelistener#System_Diagnostics_TextWriterTraceListener_WriteLine_System_String_\" data-linktype=\"relative-path\">WriteLine(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.textwritertracelistener#System_Diagnostics_TextWriterTraceListener_Writer\" data-linktype=\"relative-path\">Writer</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Attributes\" data-linktype=\"relative-path\">Attributes</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Fail_System_String_\" data-linktype=\"relative-path\">Fail(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Fail_System_String_System_String_\" data-linktype=\"relative-path\">Fail(String, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Filter\" data-linktype=\"relative-path\">Filter</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_GetSupportedAttributes\" data-linktype=\"relative-path\">GetSupportedAttributes()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IndentLevel\" data-linktype=\"relative-path\">IndentLevel</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IndentSize\" data-linktype=\"relative-path\">IndentSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IsThreadSafe\" data-linktype=\"relative-path\">IsThreadSafe</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_NeedIndent\" data-linktype=\"relative-path\">NeedIndent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceData_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_Object_\" data-linktype=\"relative-path\">TraceData(TraceEventCache, String, TraceEventType, Int32, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceData_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_Object___\" data-linktype=\"relative-path\">TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache, String, TraceEventType, Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_String_\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_String_System_Object___\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceOutputOptions\" data-linktype=\"relative-path\">TraceOutputOptions</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceTransfer_System_Diagnostics_TraceEventCache_System_String_System_Int32_System_String_System_Guid_\" data-linktype=\"relative-path\">TraceTransfer(TraceEventCache, String, Int32, String, Guid)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_Object_\" data-linktype=\"relative-path\">Write(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_Object_System_String_\" data-linktype=\"relative-path\">Write(Object, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_String_System_String_\" data-linktype=\"relative-path\">Write(String, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteIndent\" data-linktype=\"relative-path\">WriteIndent()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_Object_\" data-linktype=\"relative-path\">WriteLine(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_Object_System_String_\" data-linktype=\"relative-path\">WriteLine(Object, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_String_System_String_\" data-linktype=\"relative-path\">WriteLine(String, String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example implements a console application consisting of a class with two public methods.  </p>\n<p> The <code>Main</code> method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream. <code>Main</code> creates and initializes a ConsoleTraceListener object for the specified <a class=\"xref\" href=\"system.console\" data-linktype=\"relative-path\">Console</a> output stream, and adds this object to the trace listener collection. It then calls the <code>WriteEnvironmentInfoToTrace</code> method, which writes details about the executing environment and the trace listener configuration to the trace output.  </p>\n<p> When the example application runs, the environment and trace configuration details are written to the specified console output stream through the ConsoleTraceListener object.  </p>\n<pre><code class=\"lang-cs\" name=\"Diagnostics_ConsoleTraceListener#1\">// Define the TRACE directive, which enables trace output to the \n// Trace.Listeners collection. Typically, this directive is defined\n// as a compilation argument.\n#define TRACE\nusing System;\nusing System.Diagnostics;\n\npublic class ConsoleTraceSample\n{\n\n    // Define a simple method to write details about the current executing \n    // environment to the trace listener collection.\n    public static void WriteEnvironmentInfoToTrace()\n    {\n\n        string methodName = &quot;WriteEnvironmentInfoToTrace&quot;;\n\n        Trace.Indent();\n        Trace.WriteLine(DateTime.Now.ToString() + &quot; - Start of &quot; + methodName);\n        Trace.Indent();\n\n        // Write details on the executing environment to the trace output.\n        Trace.WriteLine(&quot;Operating system: &quot; + System.Environment.OSVersion.ToString());\n        Trace.WriteLine(&quot;Computer name: &quot; + System.Environment.MachineName);\n        Trace.WriteLine(&quot;User name: &quot; + System.Environment.UserName);\n        Trace.WriteLine(&quot;CLR runtime version: &quot; + System.Environment.Version.ToString());\n        Trace.WriteLine(&quot;Command line: &quot; + System.Environment.CommandLine);\n\n        // Enumerate the trace listener collection and \n        // display details about each configured trace listener.\n        Trace.WriteLine(&quot;Number of configured trace listeners = &quot; + Trace.Listeners.Count.ToString());\n\n        foreach (TraceListener tl in Trace.Listeners)\n        {\n            Trace.WriteLine(&quot;Trace listener name = &quot; + tl.Name);\n            Trace.WriteLine(&quot;               type = &quot; + tl.GetType().ToString());\n        }\n\n        Trace.Unindent();\n        Trace.WriteLine(DateTime.Now.ToString() + &quot; - End of &quot; + methodName);\n        Trace.Unindent();\n\n    }\n\n    // Define the main entry point of this class.\n    // The main method adds a console trace listener to the collection\n    // of configured trace listeners, then writes details on the current\n    // executing environment.\n    public static void Main(string[] CmdArgs)\n    {\n\n        // Write a trace message to all configured trace listeners.\n        Trace.WriteLine(DateTime.Now.ToString()+&quot; - Start of Main&quot;);\n\n        // Define a trace listener to direct trace output from this method\n        // to the console.\n        ConsoleTraceListener consoleTracer;\n\n        // Check the command line arguments to determine which\n        // console stream should be used for trace output.\n        if ((CmdArgs.Length&gt;0)&amp;&amp;(CmdArgs[0].ToString().ToLower().Equals(&quot;/stderr&quot;)))\n            // Initialize the console trace listener to write\n            // trace output to the standard error stream.\n        {\n            consoleTracer = new ConsoleTraceListener(true);\n        }\n        else\n        {\n            // Initialize the console trace listener to write\n            // trace output to the standard output stream.\n            consoleTracer = new ConsoleTraceListener();\n        }\n        // Set the name of the trace listener, which helps identify this \n        // particular instance within the trace listener collection.\n        consoleTracer.Name = &quot;mainConsoleTracer&quot;;\n\n        // Write the initial trace message to the console trace listener.\n        consoleTracer.WriteLine(DateTime.Now.ToString()+&quot; [&quot;+consoleTracer.Name+&quot;] - Starting output to trace listener.&quot;);\n\n        // Add the new console trace listener to \n        // the collection of trace listeners.\n        Trace.Listeners.Add(consoleTracer);\n\n        // Call a local method, which writes information about the current \n        // execution environment to the configured trace listeners.\n        WriteEnvironmentInfoToTrace();\n\n        // Write the final trace message to the console trace listener.\n        consoleTracer.WriteLine(DateTime.Now.ToString()+&quot; [&quot;+consoleTracer.Name+&quot;] - Ending output to trace listener.&quot;);\n\n        // Flush any pending trace messages, remove the \n        // console trace listener from the collection,\n        // and close the console trace listener.\n        Trace.Flush();\n        Trace.Listeners.Remove(consoleTracer);\n        consoleTracer.Close();\n\n        // Write a final trace message to all trace listeners.\n        Trace.WriteLine(DateTime.Now.ToString()+&quot; - End of Main&quot;);\n\n        // Close all other configured trace listeners.\n        Trace.Close();\n\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Diagnostics_ConsoleTraceListener#1\">&#39; Define the TRACE constant, which enables trace output to the \n&#39; Trace.Listeners collection. Typically, this constant is defined\n&#39; as a compilation argument.\n#Const TRACE = True\n\nImports System\nImports System.Diagnostics\n\nPublic Class ConsoleTraceSample\n\n    &#39; Define a simple method to write details about the current executing \n    &#39; environment to the trace listener collection.\n    Public Shared Sub WriteEnvironmentInfoToTrace()\n\n        Dim methodName As String = &quot;WriteEnvironmentInfoToTrace&quot;\n\n        Trace.Indent()\n        Trace.WriteLine(DateTime.Now.ToString() &amp; &quot; - Start of &quot; &amp; methodName)\n        Trace.Indent()\n\n        &#39; Write details on the executing environment to the trace output.\n        Trace.WriteLine(&quot;Operating system: &quot; &amp; _\n            System.Environment.OSVersion.ToString())\n        Trace.WriteLine(&quot;Computer name: &quot; &amp; System.Environment.MachineName)\n        Trace.WriteLine(&quot;User name: &quot; &amp; System.Environment.UserName)\n        Trace.WriteLine(&quot;CLR version: &quot; &amp; System.Environment.Version.ToString)\n        Trace.WriteLine(&quot;Command line: &quot; &amp; System.Environment.CommandLine)\n\n        &#39; Enumerate the trace listener collection and \n        &#39; display details about each configured trace listener.\n        Trace.WriteLine(&quot;Number of configured trace listeners = &quot; &amp; _\n            Trace.Listeners.Count.ToString())\n\n        Dim tl As TraceListener\n        For Each tl In Trace.Listeners\n            Trace.WriteLine(&quot;Trace listener name = &quot; &amp; tl.Name)\n            Trace.WriteLine(&quot;               type = &quot; &amp; tl.GetType().ToString())\n        Next tl\n\n        Trace.Unindent()\n        Trace.WriteLine(DateTime.Now.ToString() &amp; &quot; - End of &quot; &amp; methodName)\n        Trace.Unindent()\n\n    End Sub\n\n    &#39; Define the main entry point of this class.\n    &#39; The main method adds a console trace listener to the collection\n    &#39; of configured trace listeners, then writes details on the current\n    &#39; executing environment.\n    Public Shared Sub Main(ByVal CmdArgs() As String)\n\n        &#39; Write a trace message to all configured trace listeners.\n        Trace.WriteLine(DateTime.Now.ToString() &amp; &quot; - Start of Main&quot;)\n\n        &#39; Define a trace listener to direct trace output from this method\n        &#39; to the console.\n        Dim consoleTracer As ConsoleTraceListener\n\n        &#39; Check the command line arguments to determine which\n        &#39; console stream should be used for trace output.\n        If (CmdArgs.Length &gt; 0) AndAlso _\n           (CmdArgs(0).ToLower.Equals(&quot;/stderr&quot;)) Then\n            &#39; Initialize the console trace listener to write\n            &#39; trace output to the standard error stream.\n            consoleTracer = New ConsoleTraceListener(True)\n        Else\n            &#39; Initialize the console trace listener to write\n            &#39; trace output to the standard output stream.\n            consoleTracer = New ConsoleTraceListener\n        End If\n        &#39; Set the name of the trace listener, which helps identify this \n        &#39; particular instance within the trace listener collection.\n        consoleTracer.Name = &quot;mainConsoleTracer&quot;\n\n        &#39; Write the initial trace message to the console trace listener.\n        consoleTracer.WriteLine(DateTime.Now.ToString() &amp; &quot; [&quot; &amp; _\n             consoleTracer.Name &amp; &quot;] - Starting output to trace listener.&quot;)\n\n        &#39; Add the new console trace listener to \n        &#39; the collection of trace listeners.\n        Trace.Listeners.Add(consoleTracer)\n\n        &#39; Call a local method, which writes information about the current \n        &#39; execution environment to the configured trace listeners.\n        WriteEnvironmentInfoToTrace()\n\n        &#39; Write the final trace message to the console trace listener.\n        consoleTracer.WriteLine(DateTime.Now.ToString() &amp; &quot; [&quot; &amp; _\n            consoleTracer.Name &amp; &quot;] - Ending output to trace listener.&quot;)\n\n        &#39; Flush any pending trace messages, remove the \n        &#39; console trace listener from the collection,\n        &#39; and close the console trace listener.\n        Trace.Flush()\n        Trace.Listeners.Remove(consoleTracer)\n        consoleTracer.Close()\n\n        &#39; Write a final trace message to all trace listeners.\n        Trace.WriteLine(DateTime.Now.ToString() + &quot; - End of Main&quot;)\n\n        &#39; Close all other configured trace listeners.\n        Trace.Close()\n\n    End Sub\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the ConsoleTraceListener class to write trace and debugging messages to the console. You can initialize a ConsoleTraceListener object to write trace messages to the <a class=\"xref\" href=\"system.console#System_Console_Out_\" data-linktype=\"relative-path\">Out</a> stream or to the <a class=\"xref\" href=\"system.console#System_Console_Error_\" data-linktype=\"relative-path\">Error</a> stream.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a<code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n</div>\n<p> When trace and debugging output is enabled, the ConsoleTraceListener messages are written to the specified <a class=\"xref\" href=\"system.console\" data-linktype=\"relative-path\">System.Console</a> stream, which is similar to the way messages are written with the <a class=\"xref\" href=\"system.console#System_Console_Write_\" data-linktype=\"relative-path\">Write</a> or <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods. In a console application, the <a class=\"xref\" href=\"system.console\" data-linktype=\"relative-path\">System.Console</a> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a> instance.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.  </p>\n</div>\n<p> Add a ConsoleTraceListener object to the appropriate <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection if you want messages written through <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a>, <a class=\"xref\" href=\"system.diagnostics.tracesource\" data-linktype=\"relative-path\">TraceSource</a>, or <a class=\"xref\" href=\"system.diagnostics.debug\" data-linktype=\"relative-path\">Debug</a> to be written to the console. In addition, you can write messages directly to the console using the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Write_\" data-linktype=\"relative-path\">Write</a> or <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.diagnostics.debug\" data-linktype=\"relative-path\">Debug</a> and <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a> classes share the same <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> collection, accessed through their respective <code>Listeners</code> properties. If you add a ConsoleTraceListener object to the collection using one of these classes, the other class automatically uses the same listener.  </p>\n</div>\n<p> Most compilers enable trace and debug output through conditional compilation flags. If you do not enable tracing or debugging, the messages written through the <a class=\"xref\" href=\"system.diagnostics.debug\" data-linktype=\"relative-path\">System.Diagnostics.Debug</a> and <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">System.Diagnostics.Trace</a> classes are effectively ignored. The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  </p>\n<ul>\n<li><p>To enable debugging in C#, add the <strong>/d:DEBUG</strong>flag to the compiler command line when you compile your code, or you can add <strong>#define DEBUG</strong> to the top of your file. In Visual Basic, add the <strong>/d:DEBUG=True</strong> flag to the compiler command line.  </p>\n</li>\n<li><p>To enable tracing in C#, add the <strong>/d:TRACE</strong> flag to the compiler command line when you compile your code, or add <strong>#define TRACE</strong> to the top of your file. In Visual Basic, add the <strong>/d:TRACE=True</strong> flag to the compiler command line.  </p>\n</li>\n</ul>\n<p> You can add a ConsoleTraceListener object to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection in your code, or you can add a ConsoleTraceListener object to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection through the application configuration file. Add the ConsoleTraceListener object in your code to write messages for a specific code section or execution path. Add the ConsoleTraceListener object in your application configuration file to direct all trace and debug messages to the console while the application executes.  </p>\n<p> To write trace and debug messages to the console for a specific section of code, initialize a ConsoleTraceListener object and add it to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection. Instrument the section of code that contains messages using the <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a> or <a class=\"xref\" href=\"system.diagnostics.debug\" data-linktype=\"relative-path\">Debug</a> classes. At the end of the code section, remove the ConsoleTraceListener object from the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, and call the <a class=\"xref\" href=\"system.diagnostics.textwritertracelistener#System_Diagnostics_TextWriterTraceListener_Close_\" data-linktype=\"relative-path\">Close</a> method on the ConsoleTraceListener.  </p>\n<p> To direct all trace and debug messages to the console while the application executes, add a ConsoleTraceListener object to the application configuration file. Edit the configuration file that corresponds to the name of your application, or the app.config file in a Visual Studio 2005 project. In this file, insert an element for a ConsoleTraceListener.  </p>\n<p> The following example adds a ConsoleTraceListener object named <code>configConsoleListener</code> to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;&gt;  \n      &lt;listeners&gt;  \n        &lt;add name=&quot;configConsoleListener&quot;            type=&quot;System.Diagnostics.ConsoleTraceListener&quot; /&gt;  \n      &lt;/listeners&gt;  \n    &lt;/trace&gt;  \n  &lt;/system.diagnostics&gt;  \n &lt;/configuration&gt;  \n</code></pre><p> For details about adding trace listeners in the application configuration file, see <a href=\"../Topic/%3Clisteners%3E%20Element%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;listeners&amp;gt;</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_ConsoleTraceListener__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConsoleTraceListener()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.consoletracelistener\" data-linktype=\"relative-path\">ConsoleTraceListener</a> class with trace output written to the standard output stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ConsoleTraceListener ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes a <a class=\"xref\" href=\"system.diagnostics.consoletracelistener\" data-linktype=\"relative-path\">ConsoleTraceListener</a> object to write messages to the <a class=\"xref\" href=\"system.console#System_Console_Out_\" data-linktype=\"relative-path\">Out</a> stream. Its <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Name_\" data-linktype=\"relative-path\">Name</a> property is initialized to an empty string (&quot;&quot;).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_ConsoleTraceListener__ctor_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ConsoleTraceListener(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.consoletracelistener\" data-linktype=\"relative-path\">ConsoleTraceListener</a> class with an option to write trace output to the standard output stream or the standard error stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ConsoleTraceListener (bool useErrorStream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>useErrorStream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to write tracing and debugging output to the standard error stream; <code>false</code> to write tracing and debugging output to the standard output stream.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes a <a class=\"xref\" href=\"system.diagnostics.consoletracelistener\" data-linktype=\"relative-path\">ConsoleTraceListener</a> object to write messages to either the <a class=\"xref\" href=\"system.console#System_Console_Out_\" data-linktype=\"relative-path\">Out</a> or the <a class=\"xref\" href=\"system.console#System_Console_Error_\" data-linktype=\"relative-path\">Error</a> stream. Its <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Name_\" data-linktype=\"relative-path\">Name</a> property is initialized to an empty string (&quot;&quot;).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_ConsoleTraceListener_Close\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Close()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Closes the output to the stream specified for this trace listener.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Close ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The stream specified for this <a class=\"xref\" href=\"system.diagnostics.consoletracelistener\" data-linktype=\"relative-path\">ConsoleTraceListener</a> instance (either the <a class=\"xref\" href=\"system.console#System_Console_Out_\" data-linktype=\"relative-path\">Out</a> stream or the <a class=\"xref\" href=\"system.console#System_Console_Error_\" data-linktype=\"relative-path\">Error</a> stream) is closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.ConsoleTraceListener.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.ConsoleTraceListener\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.ConsoleTraceListener..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.ConsoleTraceListener.Close\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"967d94e6-4e66-64a9-5453-0dbff3a5557d\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Directs tracing or debugging output to either the standard output or the standard error stream.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.diagnostics/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.ConsoleTraceListener\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Diagnostics.ConsoleTraceListener.yml","open_to_public_contributors":false,"api_name":["System.Diagnostics.ConsoleTraceListener","System.Diagnostics.ConsoleTraceListener..ctor","System.Diagnostics.ConsoleTraceListener.Close"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.ConsoleTraceListener","System::Diagnostics::ConsoleTraceListener","System.Diagnostics.ConsoleTraceListener.#ctor","System::Diagnostics::ConsoleTraceListener::#ctor","System.Diagnostics.ConsoleTraceListener.Close","System::Diagnostics::ConsoleTraceListener::Close"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"967d94e6-4e66-64a9-5453-0dbff3a5557d","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ConsoleTraceListener.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConsoleTraceListener class | Microsoft Docs","_op_ogTitle":"ConsoleTraceListener class","description":"Directs tracing or debugging output to either the standard output or the standard error stream.\n","toc_asset_id":"api/_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.ConsoleTraceListener","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.consoletracelistener","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.consoletracelistener","fileRelativePath":"api/System.Diagnostics.ConsoleTraceListener.html"},"themesRelativePathToOutputRoot":"_themes/"}