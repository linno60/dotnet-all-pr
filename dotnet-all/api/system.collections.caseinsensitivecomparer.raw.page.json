{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CaseInsensitiveComparer</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Compares two objects for equivalence, ignoring the case of strings.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class CaseInsensitiveComparer : System.Collections.IComparer</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">CaseInsensitiveComparer</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Attributes</dt><dd>\r\n  \t\t<div class=\"cdlHolder\">\r\n  \t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.CaseInsensitive#1\">using namespace System;\nusing namespace System::Collections;\nusing namespace System::Globalization;\nint main()\n{\n   \n   // Create a Hashtable using the default hash code provider and the default comparer.\n   Hashtable^ myHT1 = gcnew Hashtable;\n   myHT1-&gt;Add( &quot;FIRST&quot;, &quot;Hello&quot; );\n   myHT1-&gt;Add( &quot;SECOND&quot;, &quot;World&quot; );\n   myHT1-&gt;Add( &quot;THIRD&quot;, &quot;!&quot; );\n   \n   // Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n   // based on the culture of the current thread.\n   Hashtable^ myHT2 = gcnew Hashtable( gcnew CaseInsensitiveHashCodeProvider,gcnew CaseInsensitiveComparer );\n   myHT2-&gt;Add( &quot;FIRST&quot;, &quot;Hello&quot; );\n   myHT2-&gt;Add( &quot;SECOND&quot;, &quot;World&quot; );\n   myHT2-&gt;Add( &quot;THIRD&quot;, &quot;!&quot; );\n   \n   // Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n   // based on the InvariantCulture.\n   Hashtable^ myHT3 = gcnew Hashtable( CaseInsensitiveHashCodeProvider::DefaultInvariant,CaseInsensitiveComparer::DefaultInvariant );\n   myHT3-&gt;Add( &quot;FIRST&quot;, &quot;Hello&quot; );\n   myHT3-&gt;Add( &quot;SECOND&quot;, &quot;World&quot; );\n   myHT3-&gt;Add( &quot;THIRD&quot;, &quot;!&quot; );\n   \n   // Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n   // based on the Turkish culture (tr-TR), where &quot;I&quot; is not the uppercase version of &quot;i&quot;.\n   CultureInfo^ myCul = gcnew CultureInfo( &quot;tr-TR&quot; );\n   Hashtable^ myHT4 = gcnew Hashtable( gcnew CaseInsensitiveHashCodeProvider( myCul ),gcnew CaseInsensitiveComparer( myCul ) );\n   myHT4-&gt;Add( &quot;FIRST&quot;, &quot;Hello&quot; );\n   myHT4-&gt;Add( &quot;SECOND&quot;, &quot;World&quot; );\n   myHT4-&gt;Add( &quot;THIRD&quot;, &quot;!&quot; );\n   \n   // Search for a key in each hashtable.\n   Console::WriteLine( &quot;first is in myHT1: {0}&quot;, myHT1-&gt;ContainsKey( &quot;first&quot; ) );\n   Console::WriteLine( &quot;first is in myHT2: {0}&quot;, myHT2-&gt;ContainsKey( &quot;first&quot; ) );\n   Console::WriteLine( &quot;first is in myHT3: {0}&quot;, myHT3-&gt;ContainsKey( &quot;first&quot; ) );\n   Console::WriteLine( &quot;first is in myHT4: {0}&quot;, myHT4-&gt;ContainsKey( &quot;first&quot; ) );\n}\n\n/* \nThis code produces the following output.  Results vary depending on the system&#39;s culture settings.\n\nfirst is in myHT1: False\nfirst is in myHT2: True\nfirst is in myHT3: True\nfirst is in myHT4: False\n\n*/\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.CaseInsensitive#1\">using System;\nusing System.Collections;\nusing System.Globalization;\n\npublic class SamplesHashtable  {\n\n   public static void Main()  {\n\n      // Create a Hashtable using the default hash code provider and the default comparer.\n      Hashtable myHT1 = new Hashtable();\n      myHT1.Add(&quot;FIRST&quot;, &quot;Hello&quot;);\n      myHT1.Add(&quot;SECOND&quot;, &quot;World&quot;);\n      myHT1.Add(&quot;THIRD&quot;, &quot;!&quot;);\n\n      // Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n      // based on the culture of the current thread.\n      Hashtable myHT2 = new Hashtable( new CaseInsensitiveHashCodeProvider(), new CaseInsensitiveComparer() );\n      myHT2.Add(&quot;FIRST&quot;, &quot;Hello&quot;);\n      myHT2.Add(&quot;SECOND&quot;, &quot;World&quot;);\n      myHT2.Add(&quot;THIRD&quot;, &quot;!&quot;);\n\n      // Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n      // based on the InvariantCulture.\n      Hashtable myHT3 = new Hashtable( CaseInsensitiveHashCodeProvider.DefaultInvariant, CaseInsensitiveComparer.DefaultInvariant );\n      myHT3.Add(&quot;FIRST&quot;, &quot;Hello&quot;);\n      myHT3.Add(&quot;SECOND&quot;, &quot;World&quot;);\n      myHT3.Add(&quot;THIRD&quot;, &quot;!&quot;);\n\n      // Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n      // based on the Turkish culture (tr-TR), where &quot;I&quot; is not the uppercase version of &quot;i&quot;.\n      CultureInfo myCul = new CultureInfo( &quot;tr-TR&quot; );\n      Hashtable myHT4 = new Hashtable( new CaseInsensitiveHashCodeProvider( myCul ), new CaseInsensitiveComparer( myCul ) );\n      myHT4.Add(&quot;FIRST&quot;, &quot;Hello&quot;);\n      myHT4.Add(&quot;SECOND&quot;, &quot;World&quot;);\n      myHT4.Add(&quot;THIRD&quot;, &quot;!&quot;);\n\n      // Search for a key in each hashtable.\n      Console.WriteLine( &quot;first is in myHT1: {0}&quot;, myHT1.ContainsKey( &quot;first&quot; ) );\n      Console.WriteLine( &quot;first is in myHT2: {0}&quot;, myHT2.ContainsKey( &quot;first&quot; ) );\n      Console.WriteLine( &quot;first is in myHT3: {0}&quot;, myHT3.ContainsKey( &quot;first&quot; ) );\n      Console.WriteLine( &quot;first is in myHT4: {0}&quot;, myHT4.ContainsKey( &quot;first&quot; ) );\n\n   }\n\n}\n\n\n/* \nThis code produces the following output.  Results vary depending on the system&#39;s culture settings.\n\nfirst is in myHT1: False\nfirst is in myHT2: True\nfirst is in myHT3: True\nfirst is in myHT4: False\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.CaseInsensitive#1\">Imports System\nImports System.Collections\nImports System.Globalization\n\nPublic Class SamplesHashtable\n\n   Public Shared Sub Main()\n\n      &#39; Create a Hashtable using the default hash code provider and the default comparer.\n      Dim myHT1 As New Hashtable()\n      myHT1.Add(&quot;FIRST&quot;, &quot;Hello&quot;)\n      myHT1.Add(&quot;SECOND&quot;, &quot;World&quot;)\n      myHT1.Add(&quot;THIRD&quot;, &quot;!&quot;)\n\n      &#39; Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n      &#39; based on the culture of the current thread.\n      Dim myHT2 As New Hashtable(New CaseInsensitiveHashCodeProvider(), New CaseInsensitiveComparer())\n      myHT2.Add(&quot;FIRST&quot;, &quot;Hello&quot;)\n      myHT2.Add(&quot;SECOND&quot;, &quot;World&quot;)\n      myHT2.Add(&quot;THIRD&quot;, &quot;!&quot;)\n\n      &#39; Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n      &#39; based on the InvariantCulture.\n      Dim myHT3 As New Hashtable(CaseInsensitiveHashCodeProvider.DefaultInvariant, CaseInsensitiveComparer.DefaultInvariant)\n      myHT3.Add(&quot;FIRST&quot;, &quot;Hello&quot;)\n      myHT3.Add(&quot;SECOND&quot;, &quot;World&quot;)\n      myHT3.Add(&quot;THIRD&quot;, &quot;!&quot;)\n\n      &#39; Create a Hashtable using a case-insensitive code provider and a case-insensitive comparer,\n      &#39; based on the Turkish culture (tr-TR), where &quot;I&quot; is not the uppercase version of &quot;i&quot;.\n      Dim myCul As New CultureInfo(&quot;tr-TR&quot;)\n      Dim myHT4 As New Hashtable(New CaseInsensitiveHashCodeProvider(myCul), New CaseInsensitiveComparer(myCul))\n      myHT4.Add(&quot;FIRST&quot;, &quot;Hello&quot;)\n      myHT4.Add(&quot;SECOND&quot;, &quot;World&quot;)\n      myHT4.Add(&quot;THIRD&quot;, &quot;!&quot;)\n\n      &#39; Search for a key in each hashtable.\n      Console.WriteLine(&quot;first is in myHT1: {0}&quot;, myHT1.ContainsKey(&quot;first&quot;))\n      Console.WriteLine(&quot;first is in myHT2: {0}&quot;, myHT2.ContainsKey(&quot;first&quot;))\n      Console.WriteLine(&quot;first is in myHT3: {0}&quot;, myHT3.ContainsKey(&quot;first&quot;))\n      Console.WriteLine(&quot;first is in myHT4: {0}&quot;, myHT4.ContainsKey(&quot;first&quot;))\n\n   End Sub &#39;Main \n\nEnd Class &#39;SamplesHashtable\n\n\n&#39;This code produces the following output.  Results vary depending on the system&#39;s culture settings.\n&#39;\n&#39;first is in myHT1: False\n&#39;first is in myHT2: True\n&#39;first is in myHT3: True\n&#39;first is in myHT4: False\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>CaseInsensitiveComparer implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface supporting case-insensitive comparisons on strings, just as <a class=\"xref\" href=\"system.collections.caseinsensitivehashcodeprovider\" data-linktype=\"relative-path\">CaseInsensitiveHashCodeProvider</a> implements the <a class=\"xref\" href=\"system.collections.ihashcodeprovider\" data-linktype=\"relative-path\">IHashCodeProvider</a> interface supporting case-insensitive comparisons on strings.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.comparer\" data-linktype=\"relative-path\">Comparer</a> class is the default implementation of the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface and performs case-sensitive string comparisons.  </p>\n<p> The objects used as keys by a <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a> are required to override the <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> method (or the <a class=\"xref\" href=\"system.collections.ihashcodeprovider\" data-linktype=\"relative-path\">IHashCodeProvider</a> interface) and the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> method (or the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface). The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a> might behave incorrectly. For example, when creating a <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a>, you must use this class with the <a class=\"xref\" href=\"system.collections.caseinsensitivehashcodeprovider\" data-linktype=\"relative-path\">CaseInsensitiveHashCodeProvider</a> class or any case-insensitive <a class=\"xref\" href=\"system.collections.ihashcodeprovider\" data-linktype=\"relative-path\">IHashCodeProvider</a> implementation.  </p>\n<p> String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace and <a href=\"../topic/globalizing%20and%20localizing%20.net%20framework%20applications\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_CaseInsensitiveComparer__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_CaseInsensitiveComparer__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CaseInsensitiveComparer()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> class using the <span class=\"xref\">stem.Threading.Thread.CurrentCulture*</span> of the current thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CaseInsensitiveComparer ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> instance is created using this constructor, the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> of the current thread is saved. Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace and <a href=\"../topic/globalizing%20and%20localizing%20.net%20framework%20applications\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_CaseInsensitiveComparer__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_CaseInsensitiveComparer__ctor_System_Globalization_CultureInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CaseInsensitiveComparer(CultureInfo)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> class using the specified <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>culture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> to use for the new <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>culture</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Comparison procedures use the specified <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">System.Globalization.CultureInfo</a> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace and <a href=\"../topic/globalizing%20and%20localizing%20.net%20framework%20applications\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_CaseInsensitiveComparer_Default_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_CaseInsensitiveComparer_Default\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Default</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an instance of <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> that is associated with the <span class=\"xref\">stem.Threading.Thread.CurrentCulture*</span> of the current thread and that is always available.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Collections.CaseInsensitiveComparer Default { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance of <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> that is associated with the <span class=\"xref\">stem.Threading.Thread.CurrentCulture*</span> of the current thread.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> instance is created using the parameterless constructor, the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> of the current thread is saved. Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace and <a href=\"../topic/globalizing%20and%20localizing%20.net%20framework%20applications\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_CaseInsensitiveComparer_DefaultInvariant_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_CaseInsensitiveComparer_DefaultInvariant\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultInvariant</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an instance of <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> that is associated with <span class=\"xref\">stem.Globalization.CultureInfo.InvariantCulture*</span> and that is always available.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance of <a class=\"xref\" href=\"system.collections.caseinsensitivecomparer\" data-linktype=\"relative-path\">CaseInsensitiveComparer</a> that is associated with <span class=\"xref\">stem.Globalization.CultureInfo.InvariantCulture*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Comparison procedures use the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_InvariantCulture_\" data-linktype=\"relative-path\">InvariantCulture</a> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace and <a href=\"../topic/globalizing%20and%20localizing%20.net%20framework%20applications\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Collections_CaseInsensitiveComparer_Compare_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_CaseInsensitiveComparer_Compare_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Compare(Object, Object)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Compare (object a, object b);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>a</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>b</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A signed integer that indicates the relative values of <code>a</code> and <code>b</code>, as shown in the following table.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Meaning<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td><code>a</code> is less than <code>b</code>, with casing ignored.<br>\n </td></tr><tr><td> Zero<br>\n </td><td><code>a</code> equals <code>b</code>, with casing ignored.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td><code>a</code> is greater than <code>b</code>, with casing ignored.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.runtime.interopservices.comvisibleattribute\" title=\"System.Runtime.InteropServices.ComVisibleAttribute\" data-linktype=\"relative-path\">ComVisibleAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Neither <code>a</code> nor <code>b</code> implements the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">IComparable</a> interface.  </p>\n<p> -or-  </p>\n<p> <code>a</code> and <code>b</code> are of different types.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If <code>a</code> and <code>b</code> are both strings, this method uses <a class=\"xref\" href=\"system.globalization.compareinfo#System_Globalization_CompareInfo_Compare_\" data-linktype=\"relative-path\">Compare</a> to compare the strings with the casing ignored; otherwise, it uses the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">IComparable</a> implementation of either object. That is, if <code>a</code> implements <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">IComparable</a>, then this method returns the result of <code>a</code>. <code>CompareTo</code> (<code>b</code>); otherwise, if <code>b</code> implements <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">IComparable</a>, then it returns the negated result of <code>b</code>. <code>CompareTo</code> (<code>a</code>).  </p>\n<p> Comparing <code>null</code> with any type is allowed and does not generate an exception when using <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">IComparable</a>. When sorting, <code>null</code> is considered to be less than any other object.  </p>\n<p> String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace and <a href=\"../topic/globalizing%20and%20localizing%20.net%20framework%20applications\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.CaseInsensitiveComparer.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.CaseInsensitiveComparer\">\r\n<meta name=\"APIName\" content=\"System.Collections.CaseInsensitiveComparer..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.CaseInsensitiveComparer.Compare\">\r\n<meta name=\"APIName\" content=\"System.Collections.CaseInsensitiveComparer.Default\">\r\n<meta name=\"APIName\" content=\"System.Collections.CaseInsensitiveComparer.DefaultInvariant\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"4917716d-1f76-a5ef-7b31-3007b8aac76e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Compares two objects for equivalence, ignoring the case of strings.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.collections/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.CaseInsensitiveComparer\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Collections.CaseInsensitiveComparer.yml","open_to_public_contributors":false,"api_name":["System.Collections.CaseInsensitiveComparer","System.Collections.CaseInsensitiveComparer..ctor","System.Collections.CaseInsensitiveComparer.Compare","System.Collections.CaseInsensitiveComparer.Default","System.Collections.CaseInsensitiveComparer.DefaultInvariant"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.CaseInsensitiveComparer","System::Collections::CaseInsensitiveComparer","System.Collections.CaseInsensitiveComparer.#ctor","System::Collections::CaseInsensitiveComparer::#ctor","System.Collections.CaseInsensitiveComparer.Compare","System::Collections::CaseInsensitiveComparer::Compare","System.Collections.CaseInsensitiveComparer.Default","System::Collections::CaseInsensitiveComparer::Default","System.Collections.CaseInsensitiveComparer.DefaultInvariant","System::Collections::CaseInsensitiveComparer::DefaultInvariant"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"4917716d-1f76-a5ef-7b31-3007b8aac76e","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CaseInsensitiveComparer class | Microsoft Docs","_op_ogTitle":"CaseInsensitiveComparer class","description":"Compares two objects for equivalence, ignoring the case of strings.\n","toc_asset_id":"api/_splitted/System.Collections/toc.json","toc_rel":"_splitted/System.Collections/toc.json","source_url":"","ms.assetid":"System.Collections.CaseInsensitiveComparer","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.caseinsensitivecomparer","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.collections.caseinsensitivecomparer","fileRelativePath":"api/System.Collections.CaseInsensitiveComparer.html"},"themesRelativePathToOutputRoot":"_themes/"}