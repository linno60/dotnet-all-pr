{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">WindowInteropHelper</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class WindowInteropHelper</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><span class=\"lang-csharp\">WindowInteropHelper</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Members of this class allows the caller to have internal access to the Win32 HWND and the parent HWND of a WPF <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a>.  The proper security checks are performed by those members.  </p>\n<p> Use this class whenever you need a more specific object based on its HWND.  </p>\n<p> An example scenario is if you need to host a WPF dialog box in a Win32 application. Initialize the WindowInteropHelper with a WPF window object for the dialog box. You can then get the WPF window&#39;s handle (HWND) from the <a class=\"xref\" href=\"system.windows.interop.windowinterophelper#System_Windows_Interop_WindowInteropHelper_Handle_\" data-linktype=\"relative-path\">Handle</a> property and specify the owner for the WPF window with the <a class=\"xref\" href=\"system.windows.interop.windowinterophelper#System_Windows_Interop_WindowInteropHelper_Owner_\" data-linktype=\"relative-path\">Owner</a> property. The following code example shows how to use WindowInteropHelper when hosting a WPF dialog box in a Win32 application.  </p>\n<pre><code class=\"lang-cs\" name=\"CorePseudocode#WindowInteropHelper\">WindowInteropHelper wih = new WindowInteropHelper(myDialog);\nwih.Owner = ownerHwnd;\nmyDialog.ShowDialog();\n</code></pre><pre><code class=\"lang-vb\" name=\"CorePseudocode#WindowInteropHelper\">Dim wih As New WindowInteropHelper(myDialog)\nwih.Owner = ownerHwnd\nmyDialog.ShowDialog()\n</code></pre><p> Another scenario supported by this class is to obtain a <a class=\"xref\" href=\"system.windows.interop.hwndsource\" data-linktype=\"relative-path\">HwndSource</a> object from a WPF <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a> object. The <a class=\"xref\" href=\"system.windows.interop.hwndsource\" data-linktype=\"relative-path\">HwndSource</a> enables direct processing of Win32 messages through the <a class=\"xref\" href=\"system.windows.interop.hwndsource#System_Windows_Interop_HwndSource_AddHook_\" data-linktype=\"relative-path\">AddHook</a> method. By using <a class=\"xref\" href=\"system.windows.interop.hwndsource\" data-linktype=\"relative-path\">HwndSource</a> and <a class=\"xref\" href=\"system.windows.interop.hwndsource#System_Windows_Interop_HwndSource_AddHook_\" data-linktype=\"relative-path\">AddHook</a> in place of a <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a> you can still handle messages that have no equivalent or handling in WPF. Create a WindowInteropHelper with the <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a> source, then call <a class=\"xref\" href=\"system.windows.interop.windowinterophelper#System_Windows_Interop_WindowInteropHelper_Handle_\" data-linktype=\"relative-path\">Handle</a> on the WindowInteropHelper to get from HWND to <a class=\"xref\" href=\"system.windows.interop.hwndsource\" data-linktype=\"relative-path\">HwndSource</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Interop_WindowInteropHelper__ctor_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Interop_WindowInteropHelper__ctor_System_Windows_Window_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WindowInteropHelper(Window)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.interop.windowinterophelper\" data-linktype=\"relative-path\">WindowInteropHelper</a> class for a specified Windows Presentation Foundation (WPF) window.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public WindowInteropHelper (System.Windows.Window window);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>window</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A WPF window object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a Win32 application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Interop_WindowInteropHelper_Handle_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Interop_WindowInteropHelper_Handle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Handle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the window handle for a Windows Presentation Foundation (WPF) window that is used to create this <a class=\"xref\" href=\"system.windows.interop.windowinterophelper\" data-linktype=\"relative-path\">WindowInteropHelper</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IntPtr Handle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Windows Presentation Foundation (WPF) window handle (HWND).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Interop_WindowInteropHelper_Owner_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Interop_WindowInteropHelper_Owner\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Owner</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the handle of the Windows Presentation Foundation (WPF) owner window.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IntPtr Owner { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The owner window handle (HWND).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">get: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><span class=\"xref\">set: System.Security.SecurityCritical</span></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can reparent windows by setting this property. As is true for general Win32 programming, do not reparent windows that are already in use.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Windows_Interop_WindowInteropHelper_EnsureHandle_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Interop_WindowInteropHelper_EnsureHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EnsureHandle()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates the HWND of the window if the HWND has not been created yet.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IntPtr EnsureHandle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> that represents the HWND.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Attributes</dt><dd>\r\n  \t\t\t\t\t\t\t\t<div class=\"cdlHolder\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"cdl\"><a class=\"xref\" href=\"system.security.securitycriticalattribute\" title=\"System.Security.SecurityCriticalAttribute\" data-linktype=\"relative-path\">SecurityCriticalAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the EnsureHandle method when you want to separate window handle (HWND) creation from the actual showing of the managed <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a>. This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.  </p>\n<p> If the native window has not yet been created, this method creates the native window, sets the <a class=\"xref\" href=\"system.windows.interop.windowinterophelper#System_Windows_Interop_WindowInteropHelper_Handle_\" data-linktype=\"relative-path\">Handle</a> property, and returns the HWND. If the native window has been created already, the handle of the existing native window is returned.  </p>\n<p> If the native window is created as a result of calling this method, the <a class=\"xref\" href=\"system.windows.window#System_Windows_Window_SourceInitialized\" data-linktype=\"relative-path\">SourceInitialized</a> event is raised.  </p>\n<p> Querying the <a class=\"xref\" href=\"system.windows.interop.windowinterophelper#System_Windows_Interop_WindowInteropHelper_Handle_\" data-linktype=\"relative-path\">Handle</a> property after the EnsureHandle method is called returns the existing window handle. The visual tree is not attached to the window until after the <a class=\"xref\" href=\"system.windows.window#System_Windows_Window_Show_\" data-linktype=\"relative-path\">Show</a> method is called.  </p>\n<p> Calling the EnsureHandle method more than one time does not create new window handles. Calling the EnsureHandle method when the handle has already been created by a call to the <a class=\"xref\" href=\"system.windows.window#System_Windows_Window_Show_\" data-linktype=\"relative-path\">Show</a> method does not create a new window handle. A native window is only created when no handle exists when the EnsureHandle method is called.  </p>\n<p> Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs. For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the EnsureHandle method is called, the <a class=\"xref\" href=\"system.windows.window#System_Windows_Window_Topmost_\" data-linktype=\"relative-path\">Topmost</a> property is not guaranteed to reflect the native setting.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Interop.WindowInteropHelper.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.WindowInteropHelper\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.WindowInteropHelper..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.WindowInteropHelper.EnsureHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.WindowInteropHelper.Handle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.WindowInteropHelper.Owner\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"a9569656-e3ac-96d7-3a9c-f1618e383bf6\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.interop/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Interop.WindowInteropHelper\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Interop.WindowInteropHelper.yml","open_to_public_contributors":false,"api_name":["System.Windows.Interop.WindowInteropHelper","System.Windows.Interop.WindowInteropHelper..ctor","System.Windows.Interop.WindowInteropHelper.EnsureHandle","System.Windows.Interop.WindowInteropHelper.Handle","System.Windows.Interop.WindowInteropHelper.Owner"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Interop.WindowInteropHelper","System::Windows::Interop::WindowInteropHelper","System.Windows.Interop.WindowInteropHelper.#ctor","System::Windows::Interop::WindowInteropHelper::#ctor","System.Windows.Interop.WindowInteropHelper.EnsureHandle","System::Windows::Interop::WindowInteropHelper::EnsureHandle","System.Windows.Interop.WindowInteropHelper.Handle","System::Windows::Interop::WindowInteropHelper::Handle","System.Windows.Interop.WindowInteropHelper.Owner","System::Windows::Interop::WindowInteropHelper::Owner"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"a9569656-e3ac-96d7-3a9c-f1618e383bf6","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Interop/WindowInteropHelper.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WindowInteropHelper class | Microsoft Docs","_op_ogTitle":"WindowInteropHelper class","description":"Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.\n","toc_asset_id":"api/_splitted/System.Windows.Interop/toc.json","toc_rel":"_splitted/System.Windows.Interop/toc.json","source_url":"","ms.assetid":"System.Windows.Interop.WindowInteropHelper","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.interop.windowinterophelper","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.interop.windowinterophelper","fileRelativePath":"api/System.Windows.Interop.WindowInteropHelper.html"},"themesRelativePathToOutputRoot":"_themes/"}