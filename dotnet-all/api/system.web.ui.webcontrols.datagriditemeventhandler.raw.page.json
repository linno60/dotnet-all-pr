{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridItemEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_ItemDataBound\" data-linktype=\"relative-path\">ItemDataBound</a> events of a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DataGridItemEventHandler(object sender, DataGridItemEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DataGridItemEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to specify and code a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event to display the order in which items are created in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic DataGridItemEventArgs Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n    Dim Cart As DataTable\n    Dim CartView As DataView\n \n    Function CreateDataSource() As ICollection\n        Dim dt As New DataTable()\n        Dim dr As DataRow\n        \n        dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n        dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n        dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n        \n        Dim i As Integer\n        For i = 0 To 9\n            dr = dt.NewRow()\n            \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 *(i + 1)\n            \n            dt.Rows.Add(dr)\n        Next i\n        \n        Dim dv As New DataView(dt)\n        Return dv\n    End Function &#39;CreateDataSource\n\n\n    Sub Page_Load(sender As Object, e As EventArgs)\n        \n        If Not IsPostBack Then\n            &#39; Need to load this data only once.\n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n        End If\n    End Sub &#39;Page_Load\n     \n\n    Sub Item_Created(sender As Object, e As DataGridItemEventArgs)\n        \n        Label1.Text = Label1.Text &amp; &quot; &quot; &amp; e.Item.ItemIndex\n    End Sub &#39;Item_Created \n \n&lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridItemEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataGridItemEventArgs Example&lt;/h3&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;true&quot;\n           OnItemCreated=&quot;Item_Created&quot;\n           AutoGenerateColumns=&quot;true&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n   \n      &lt;/asp:DataGrid&gt;\n \n      &lt;br /&gt;\n \n      &lt;asp:Label id=&quot;Label1&quot; \n           Text=&quot;Order of items created: &quot; \n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label2&quot; \n           Text=&quot;Note: The -1&#39;s refer to the header and footer.&quot; \n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridItemEventArgs Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n   DataTable Cart;\n   DataView CartView;\n \n   ICollection CreateDataSource() \n   {\n      DataTable dt = new DataTable();\n      DataRow dr;\n \n      dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n      dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n      dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n      for (int i = 0; i &lt; 10; i++) \n      {\n         dr = dt.NewRow();\n \n         dr[0] = i;\n         dr[1] = &quot;Item &quot; + i.ToString();\n         dr[2] = 1.23 * (i+1);\n \n         dt.Rows.Add(dr);\n      }\n \n      DataView dv = new DataView(dt);\n      return dv;\n   }\n \n   void Page_Load(Object sender, EventArgs e) \n   {\n \n      if (!IsPostBack) \n      {\n         // Need to load this data only once.\n         ItemsGrid.DataSource = CreateDataSource();\n         ItemsGrid.DataBind();\n      }\n \n   }\n \n   void Item_Created(Object sender, DataGridItemEventArgs e) \n   {\n \n      Label1.Text = Label1.Text + &quot; &quot; + e.Item.ItemIndex;\n \n   }\n \n&lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridItemEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataGridItemEventArgs Example&lt;/h3&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;true&quot;\n           OnItemCreated=&quot;Item_Created&quot;\n           AutoGenerateColumns=&quot;true&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n   \n      &lt;/asp:DataGrid&gt;\n \n      &lt;br /&gt;\n \n      &lt;asp:Label id=&quot;Label1&quot; \n           Text=&quot;Order of items created: &quot; \n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label2&quot; \n           Text=&quot;Note: The -1&#39;s refer to the header and footer.&quot; \n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridItemDataBound#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; Debug=&quot;true&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource()\n      {\n\n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(Double)));\n \n         // Populate the table with sample values.\n         for (int i=0; i&lt;=10; i++) \n         {\n\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         \n         }\n \n         DataView dv = new DataView(dt);\n\n         return dv;\n      \n      }\n \n      void Page_Load(Object sender, EventArgs e)\n      { \n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack)\n         { \n         \n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         \n         }\n\n      }\n \n      void Item_Bound(Object sender, DataGridItemEventArgs e) \n      {\n \n         // Use the ItemDataBound event to customize the DataGrid control. \n         // The ItemDataBound event allows you to access the data before \n         // the item is displayed in the control. In this example, the \n         // ItemDataBound event is used to format the items in the \n         // CurrencyColumn in currency format.\n         if((e.Item.ItemType == ListItemType.Item) || \n             (e.Item.ItemType == ListItemType.AlternatingItem))\n         {\n \n            // Retrieve the text of the CurrencyColumn from the DataGridItem\n            // and convert the value to a Double.\n            Double Price = Convert.ToDouble(e.Item.Cells[2].Text);\n\n            // Format the value as currency and redisplay it in the DataGrid.\n            e.Item.Cells[2].Text = Price.ToString(&quot;c&quot;);\n        \n         }         \n \n      }\n \n&lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataGrid ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;true&quot;\n           OnItemDataBound=&quot;Item_Bound&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridItemDataBound#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection\n\n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow \n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer         \n\n         For i=0 To 10 \n\n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n         \n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n\n         return dv\n      \n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs)\n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then\n         \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n         \n         End If\n\n      End Sub\n \n      Sub Item_Bound(sender As Object, e As DataGridItemEventArgs) \n \n         &#39; Use the ItemDataBound event to customize the DataGrid control. \n         &#39; The ItemDataBound event allows you to access the data before \n         &#39; the item is displayed in the control. In this example, the \n         &#39; ItemDataBound event is used to format the items in the \n         &#39; CurrencyColumn in currency format.\n         If e.Item.ItemType = ListItemType.Item Or _\n             e.Item.ItemType = ListItemType.AlternatingItem Then\n \n            &#39; Retrieve the text of the CurrencyColumn from the DataGridItem\n            &#39; and convert the value to a Double.\n            Dim Price As Double = Convert.ToDouble(e.Item.Cells(2).Text)\n\n            &#39; Format the value as currency and redisplay it in the DataGrid.\n            e.Item.Cells(2).Text = Price.ToString(&quot;c&quot;)\n        \n         End If         \n \n      End Sub\n \n&lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataGrid ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;true&quot;\n           OnItemDataBound=&quot;Item_Bound&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridItemDataBound2#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection\n\n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow \n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer         \n\n         For i=0 To 10 \n\n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n         \n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n\n         return dv\n      \n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs)\n\n         &#39; Manually register the event-handling method for the  \n         &#39; ItemDataBound event of the DataGrid control.\n         AddHandler ItemsGrid.ItemDataBound, AddressOf Item_Bound\n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then\n         \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n         \n         End If\n\n      End Sub\n \n      Sub Item_Bound(sender As Object, e As DataGridItemEventArgs) \n \n         &#39; Use the ItemDataBound event to customize the DataGrid control. \n         &#39; The ItemDataBound event allows you to access the data before \n         &#39; the item is displayed in the control. In this example, the \n         &#39; ItemDataBound event is used to format the items in the \n         &#39; CurrencyColumn in currency format.\n         If e.Item.ItemType = ListItemType.Item Or _\n             e.Item.ItemType = ListItemType.AlternatingItem Then\n \n            &#39; Retrieve the text of the CurrencyColumn from the DataGridItem\n            &#39; and convert the value to a Double.\n            Dim Price As Double = Convert.ToDouble(e.Item.Cells(2).Text)\n\n            &#39; Format the value as currency and redisplay it in the DataGrid.\n            e.Item.Cells(2).Text = Price.ToString(&quot;c&quot;)\n        \n         End If         \n \n      End Sub\n \n&lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataGrid ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;true&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridItemDataBound2#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource()\n      {\n\n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(Double)));\n \n         // Populate the table with sample values.\n         for (int i=0; i&lt;=10; i++) \n         {\n\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         \n         }\n \n         DataView dv = new DataView(dt);\n\n         return dv;\n      \n      }\n \n      void Page_Load(Object sender, EventArgs e)\n      { \n \n         // Manually register the event-handling method for the  \n         // ItemDataBound event of the DataGrid control.\n         ItemsGrid.ItemDataBound += \n             new DataGridItemEventHandler(this.Item_Bound);\n\n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack)\n         { \n         \n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         \n         }\n\n      }\n \n      void Item_Bound(Object sender, DataGridItemEventArgs e) \n      {\n \n         // Use the ItemDataBound event to customize the DataGrid control. \n         // The ItemDataBound event allows you to access the data before \n         // the item is displayed in the control. In this example, the \n         // ItemDataBound event is used to format the items in the \n         // CurrencyColumn in currency format.\n         if((e.Item.ItemType == ListItemType.Item) ||\n             (e.Item.ItemType == ListItemType.AlternatingItem))\n         {\n \n            // Retrieve the text of the CurrencyColumn from the DataGridItem\n            // and convert the value to a Double.\n            Double Price = Convert.ToDouble(e.Item.Cells[2].Text);\n\n            // Format the value as currency and redisplay it in the DataGrid.\n            e.Item.Cells[2].Text = Price.ToString(&quot;c&quot;);\n        \n         }         \n \n      }\n \n&lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid ItemDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataGrid ItemDataBound Example&lt;/h3&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;true&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event is raised when an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is created.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_ItemDataBound\" data-linktype=\"relative-path\">ItemDataBound</a> event is raised when an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is bound to a data source.  </p>\n<p> When you create a DataGridItemEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataGridItemEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridItemEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridItemEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridItemEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridItemEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridItemEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"7a3cd5b6-83c9-708b-206a-8d1a1667d0e0\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  and  events of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DataGridItemEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.DataGridItemEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.DataGridItemEventHandler","System.Web.UI.WebControls.DataGridItemEventHandler..ctor","System.Web.UI.WebControls.DataGridItemEventHandler.Invoke","System.Web.UI.WebControls.DataGridItemEventHandler.BeginInvoke","System.Web.UI.WebControls.DataGridItemEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DataGridItemEventHandler","System::Web::UI::WebControls::DataGridItemEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"7a3cd5b6-83c9-708b-206a-8d1a1667d0e0","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/DataGridItemEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridItemEventHandler delegate | Microsoft Docs","_op_ogTitle":"DataGridItemEventHandler delegate","description":"Represents the method that handles the  and  events of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DataGridItemEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datagriditemeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.datagriditemeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.DataGridItemEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}