{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">RefreshMode</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines how the <span class=\"xref\">stem.Data.Linq.DataContext.Refresh*</span> method handles optimistic concurrency conflicts.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum RefreshMode</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">RefreshMode</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example overwrites current values with values from the database.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Data.Linq.RefreshMode#1\">Northwnd db = new Northwnd(&quot;...&quot;);\ntry\n{\n    db.SubmitChanges(ConflictMode.ContinueOnConflict);\n}\n\ncatch (ChangeConflictException e)\n{\n    Console.WriteLine(e.Message);\n    foreach (ObjectChangeConflict occ in db.ChangeConflicts)\n    {\n        // All database values overwrite current values.\n        occ.Resolve(RefreshMode.OverwriteCurrentValues);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Data.Linq.RefreshMode#1\">Dim db As New Northwnd(&quot;...&quot;)\n\nTry\n    db.SubmitChanges(ConflictMode.ContinueOnConflict)\n\nCatch ex As ChangeConflictException\n    Console.WriteLine(ex.Message)\n\n    For Each occ As ObjectChangeConflict In db.ChangeConflicts\n        &#39; All database values overwrite current values.\n        occ.Resolve(Data.Linq.RefreshMode.OverwriteCurrentValues)\n    Next\n\nEnd Try\n</code></pre><p> The following example shows how to swap the original value with the values retrieved from the database. No current value is modified.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Data.Linq.RefreshMode#2\">try\n{\n    db.SubmitChanges(ConflictMode.ContinueOnConflict);\n}\n\ncatch (ChangeConflictException e)\n{\n    Console.WriteLine(e.Message);\n    foreach (ObjectChangeConflict occ in db.ChangeConflicts)\n    {\n        //No database values are merged into current.\n        occ.Resolve(RefreshMode.KeepCurrentValues);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Data.Linq.RefreshMode#2\">Try\n    db.SubmitChanges(ConflictMode.ContinueOnConflict)\n\nCatch ex As ChangeConflictException\n    Console.WriteLine(ex.Message)\n\n    For Each occ As ObjectChangeConflict In db.ChangeConflicts\n        &#39; No database values are merged into current.\n        occ.Resolve(Data.Linq.RefreshMode.KeepCurrentValues)\n    Next\n\nEnd Try\n</code></pre><p> The following example keeps the current values that have been changed, but updates the other values with database values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Data.Linq.RefreshMode#3\">try\n{\n    db.SubmitChanges(ConflictMode.ContinueOnConflict);\n}\n\ncatch (ChangeConflictException e)\n{\n    Console.WriteLine(e.Message);\n    // Automerge database values for members that client\n    // has not modified.\n    foreach (ObjectChangeConflict occ in db.ChangeConflicts)\n    {\n        occ.Resolve(RefreshMode.KeepChanges);\n    }\n}\n\n// Submit succeeds on second try.\ndb.SubmitChanges(ConflictMode.FailOnFirstConflict);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Data.Linq.RefreshMode#3\">Try\n    db.SubmitChanges(ConflictMode.ContinueOnConflict)\n\nCatch ex As ChangeConflictException\n    Console.WriteLine(ex.Message)\n\n    For Each occ As ObjectChangeConflict In db.ChangeConflicts\n        &#39; Automerge database values into current for members\n        &#39; that client has not modified.\n        occ.Resolve(Data.Linq.RefreshMode.KeepChanges)\n    Next\n\nEnd Try\n\n&#39; Submit succeeds on second try.\ndb.SubmitChanges(ConflictMode.FailOnFirstConflict)\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This enumeration applies to all <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_Refresh_\" data-linktype=\"relative-path\">Refresh</a> overloads.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Data_Linq_RefreshMode_KeepChanges\">\r\n      \t\t\t<span class=\"lang-csharp\">KeepChanges</span>\r\n      \t</td>\r\n      \t<td><p>Forces the <span class=\"xref\">stem.Data.Linq.DataContext.Refresh*</span> method to keep the current value that has been changed, but updates the other values with the database values.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Data_Linq_RefreshMode_KeepCurrentValues\">\r\n      \t\t\t<span class=\"lang-csharp\">KeepCurrentValues</span>\r\n      \t</td>\r\n      \t<td><p>Forces the <span class=\"xref\">stem.Data.Linq.DataContext.Refresh*</span> method to swap the original value with the values retrieved from the database. No current value is modified.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Data_Linq_RefreshMode_OverwriteCurrentValues\">\r\n      \t\t\t<span class=\"lang-csharp\">OverwriteCurrentValues</span>\r\n      \t</td>\r\n      \t<td><p>Forces the <span class=\"xref\">stem.Data.Linq.DataContext.Refresh*</span> method to override all the current values with the values from the database.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Linq.RefreshMode.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.RefreshMode\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.RefreshMode.KeepChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.RefreshMode.KeepCurrentValues\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.RefreshMode.OverwriteCurrentValues\">\r\n<meta name=\"APILocation\" content=\"System.Data.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"ac1c82e6-ecaf-1dc6-c55a-db4e5ff56850\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines how the  method handles optimistic concurrency conflicts.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data.linq/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Linq.RefreshMode\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Linq.RefreshMode.yml","open_to_public_contributors":false,"api_name":["System.Data.Linq.RefreshMode","System.Data.Linq.RefreshMode.KeepChanges","System.Data.Linq.RefreshMode.KeepCurrentValues","System.Data.Linq.RefreshMode.OverwriteCurrentValues"],"api_location":["System.Data.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Linq.RefreshMode","System::Data::Linq::RefreshMode","System.Data.Linq.RefreshMode.KeepChanges","System::Data::Linq::RefreshMode::KeepChanges","System.Data.Linq.RefreshMode.KeepCurrentValues","System::Data::Linq::RefreshMode::KeepCurrentValues","System.Data.Linq.RefreshMode.OverwriteCurrentValues","System::Data::Linq::RefreshMode::OverwriteCurrentValues"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"ac1c82e6-ecaf-1dc6-c55a-db4e5ff56850","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data.Linq/RefreshMode.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RefreshMode enum | Microsoft Docs","_op_ogTitle":"RefreshMode enum","description":"Defines how the  method handles optimistic concurrency conflicts.\n","toc_asset_id":"api/_splitted/System.Data.Linq/toc.json","toc_rel":"_splitted/System.Data.Linq/toc.json","source_url":"","ms.assetid":"System.Data.Linq.RefreshMode","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.linq.refreshmode","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.linq.refreshmode","fileRelativePath":"api/System.Data.Linq.RefreshMode.html"},"themesRelativePathToOutputRoot":"_themes/"}