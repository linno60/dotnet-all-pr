{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">MessagePriority</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the priority Message Queuing applies to a message while it is en route to a queue, and when inserting the message into the destination queue.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum MessagePriority</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div><span class=\"lang-csharp\">MessagePriority</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example sends two messages of different priorities to the queue, and retrieves them subsequently.  </p>\n<pre><code class=\"lang-cpp\" name=\"Message.DefaultPropertiesToSend#1\">\n#using &lt;system.dll&gt;\n#using &lt;system.messaging.dll&gt;\n\nusing namespace System;\nusing namespace System::Messaging;\n\n/// &lt;summary&gt;\n/// Provides a container class for the example.\n/// &lt;/summary&gt;\nref class MyNewQueue\n{\n   //**************************************************\n   // Sends a string message to a queue.\n   //**************************************************\npublic:\n   void SendMessage( MessagePriority priority, String^ messageBody )\n   {\n      // Connect to a queue on the local computer.\n      MessageQueue^ myQueue = gcnew MessageQueue( &quot;.\\\\myQueue&quot; );\n\n      // Create a new message.\n      Message^ myMessage = gcnew Message;\n      if ( priority &gt; MessagePriority::Normal )\n      {\n         myMessage-&gt;Body = &quot;High Priority: {0}&quot;,messageBody;\n      }\n      else\n      {\n         myMessage-&gt;Body = messageBody;\n      }\n\n      // Set the priority of the message.\n      myMessage-&gt;Priority = priority;\n\n      // Send the Order to the queue.\n      myQueue-&gt;Send( myMessage );\n\n      return;\n   }\n\n   //**************************************************\n   // Receives a message.\n   //**************************************************\n   void ReceiveMessage()\n   {\n      // Connect to the a queue on the local computer.\n      MessageQueue^ myQueue = gcnew MessageQueue( &quot;.\\\\myQueue&quot; );\n\n      // Set the queue to read the priority. By default, it\n      // is not read.\n      myQueue-&gt;MessageReadPropertyFilter-&gt;Priority = true;\n\n      // Set the formatter to indicate body contains a String^.\n      array&lt;Type^&gt;^ p = gcnew array&lt;Type^&gt;(1);\n      p[ 0 ] = String::typeid;\n      myQueue-&gt;Formatter = gcnew XmlMessageFormatter( p );\n      try\n      {\n         // Receive and format the message. \n         Message^ myMessage = myQueue-&gt;Receive();\n\n         // Display message information.\n         Console::WriteLine( &quot;Priority: {0}&quot;,\n            myMessage-&gt;Priority );\n         Console::WriteLine( &quot;Body: {0}&quot;,\n            myMessage-&gt;Body );\n      }\n      catch ( MessageQueueException^ ) \n      {\n         // Handle Message Queuing exceptions.\n      }\n      // Handle invalid serialization format.\n      catch ( InvalidOperationException^ e ) \n      {\n         Console::WriteLine( e-&gt;Message );\n      }\n\n      // Catch other exceptions as necessary.\n\n      return;\n   }\n};\n\n//**************************************************\n// Provides an entry point into the application.\n//\t\t \n// This example sends and receives a message from\n// a queue.\n//**************************************************\nint main()\n{\n   // Create a new instance of the class.\n   MyNewQueue^ myNewQueue = gcnew MyNewQueue;\n\n   // Send messages to a queue.\n   myNewQueue-&gt;SendMessage( MessagePriority::Normal, &quot;First Message Body.&quot; );\n   myNewQueue-&gt;SendMessage( MessagePriority::Highest, &quot;Second Message Body.&quot; );\n\n   // Receive messages from a queue.\n   myNewQueue-&gt;ReceiveMessage();\n   myNewQueue-&gt;ReceiveMessage();\n\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Message.DefaultPropertiesToSend#1\">Imports System\nImports System.Messaging\n\n\n&#39;Provides a container class for the example.\nPublic Class MyNewQueue\n      \n      \n\n      &#39; Provides an entry point into the application.\n      &#39;\t\t \n      &#39; This example sends and receives a message from\n      &#39; a queue.\n\n      Public Shared Sub Main()\n         &#39; Create a new instance of the class.\n         Dim myNewQueue As New MyNewQueue()\n         \n         &#39; Send messages to a queue.\n         myNewQueue.SendMessage(MessagePriority.Normal, &quot;First Message Body.&quot;)\n         myNewQueue.SendMessage(MessagePriority.Highest, &quot;Second Message Body.&quot;)\n         \n         &#39; Receive messages from a queue.\n         myNewQueue.ReceiveMessage()\n         myNewQueue.ReceiveMessage()\n         \n         Return\n      End Sub &#39;Main\n      \n      \n      \n\n      &#39; Sends a string message to a queue.\n\n      Public Sub SendMessage(priority As MessagePriority, messageBody As String)\n         \n         &#39; Connect to a queue on the local computer.\n         Dim myQueue As New MessageQueue(&quot;.\\myQueue&quot;)\n         \n         &#39; Create a new message.\n         Dim myMessage As New Message()\n         \n         If priority &gt; MessagePriority.Normal Then\n            myMessage.Body = &quot;High Priority: &quot; + messageBody\n         Else\n            myMessage.Body = messageBody\n         End If \n         &#39; Set the priority of the message.\n         myMessage.Priority = priority\n         \n         \n         &#39; Send the Order to the queue.\n         myQueue.Send(myMessage)\n         \n         Return\n      End Sub &#39;SendMessage\n      \n      \n      \n\n      &#39; Receives a message.\n\n      Public Sub ReceiveMessage()\n         &#39; Connect to the a queue on the local computer.\n         Dim myQueue As New MessageQueue(&quot;.\\myQueue&quot;)\n         \n         &#39; Set the queue to read the priority. By default, it\n         &#39; is not read.\n         myQueue.MessageReadPropertyFilter.Priority = True\n         \n         &#39; Set the formatter to indicate body contains a string.\n         myQueue.Formatter = New XmlMessageFormatter(New Type() {GetType(String)})\n         \n         Try\n            &#39; Receive and format the message. \n            Dim myMessage As Message = myQueue.Receive()\n            \n            &#39; Display message information.\n            Console.WriteLine((&quot;Priority: &quot; + myMessage.Priority.ToString()))\n            Console.WriteLine((&quot;Body: &quot; + myMessage.Body.ToString()))\n         \n         \n         \n         &#39; Handle invalid serialization format.\n         Catch e As InvalidOperationException\n            Console.WriteLine(e.Message)\n         End Try\n         \n         &#39; Catch other exceptions as necessary.\n         Return\n      End Sub &#39;ReceiveMessage\n   End Class &#39;MyNewQueue\n</code></pre><pre><code class=\"lang-cs\" name=\"Message.DefaultPropertiesToSend#1\">using System;\nusing System.Messaging;\n\nnamespace MyProject\n{\n\n\t/// &lt;summary&gt;\n\t/// Provides a container class for the example.\n\t/// &lt;/summary&gt;\n\tpublic class MyNewQueue\n\t{\n\n\t\t//**************************************************\n\t\t// Provides an entry point into the application.\n\t\t//\t\t \n\t\t// This example sends and receives a message from\n\t\t// a queue.\n\t\t//**************************************************\n\n\t\tpublic static void Main()\n\t\t{\n\t\t\t// Create a new instance of the class.\n\t\t\tMyNewQueue myNewQueue = new MyNewQueue();\n\n\t\t\t// Send messages to a queue.\n\t\t\tmyNewQueue.SendMessage(MessagePriority.Normal, &quot;First Message Body.&quot;);\n\t\t\tmyNewQueue.SendMessage(MessagePriority.Highest, &quot;Second Message Body.&quot;);\n\n\t\t\t// Receive messages from a queue.\n\t\t\tmyNewQueue.ReceiveMessage(); \n\t\t\tmyNewQueue.ReceiveMessage();\n\n\t\t\treturn;\n\t\t}\n\n\n\t\t//**************************************************\n\t\t// Sends a string message to a queue.\n\t\t//**************************************************\n\t\t\n\t\tpublic void SendMessage(MessagePriority priority, string messageBody)\n\t\t{\n\n\t\t\t// Connect to a queue on the local computer.\n\t\t\tMessageQueue myQueue = new MessageQueue(&quot;.\\\\myQueue&quot;);\n\n\t\t\t// Create a new message.\n\t\t\tMessage myMessage = new Message();\n\n\t\t\tif(priority &gt; MessagePriority.Normal)\n\t\t\t{\n\t\t\t\tmyMessage.Body = &quot;High Priority: &quot; + messageBody;\n\t\t\t}\n\t\t\telse myMessage.Body = messageBody;\n\n\t\t\t// Set the priority of the message.\n\t\t\tmyMessage.Priority = priority;\n\n\n\t\t\t// Send the Order to the queue.\n\t\t\tmyQueue.Send(myMessage);\n\n\t\t\treturn;\n\t\t}\n\n\n\t\t//**************************************************\n\t\t// Receives a message.\n\t\t//**************************************************\n\t\t\n\t\tpublic  void ReceiveMessage()\n\t\t{\n\t\t\t// Connect to the a queue on the local computer.\n\t\t\tMessageQueue myQueue = new MessageQueue(&quot;.\\\\myQueue&quot;);\n\n\t\t\t// Set the queue to read the priority. By default, it\n\t\t\t// is not read.\n\t\t\tmyQueue.MessageReadPropertyFilter.Priority = true;\n\n\t\t\t// Set the formatter to indicate body contains a string.\n\t\t\tmyQueue.Formatter = new XmlMessageFormatter(new Type[]\n\t\t\t\t{typeof(string)});\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// Receive and format the message. \n\t\t\t\tMessage myMessage =\tmyQueue.Receive(); \n\n\t\t\t\t// Display message information.\n\t\t\t\tConsole.WriteLine(&quot;Priority: &quot; + \n\t\t\t\t\tmyMessage.Priority.ToString());\n\t\t\t\tConsole.WriteLine(&quot;Body: &quot; + \n\t\t\t\t\tmyMessage.Body.ToString());\n\t\t\t}\n\t\t\t\n\t\t\tcatch (MessageQueueException)\n\t\t\t{\n\t\t\t\t// Handle Message Queuing exceptions.\n\t\t\t}\n\n\t\t\t// Handle invalid serialization format.\n\t\t\tcatch (InvalidOperationException e)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(e.Message);\n\t\t\t}\n\t\t\t\n\t\t\t// Catch other exceptions as necessary.\n\n\t\t\treturn;\n\t\t}\n\t}\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The MessagePriority enumeration is used by the <a class=\"xref\" href=\"system.messaging.message\" data-linktype=\"relative-path\">Message</a> class&#39;s <a class=\"xref\" href=\"system.messaging.message#System_Messaging_Message_Priority_\" data-linktype=\"relative-path\">Priority</a> property. This property affects how Message Queuing handles the message both while it is en route and once it reaches its destination. Higher-priority messages are given preference during routing and inserted toward the front of the destination queue. Messages with the same priority are placed in the queue according to their arrival time.  </p>\n<p> When Message Queuing routes a message to a public queue, the priority level of the message is added to the priority level of the public queue (which you can access through the <a class=\"xref\" href=\"system.messaging.messagequeue\" data-linktype=\"relative-path\">MessageQueue</a> class&#39;s <a class=\"xref\" href=\"system.messaging.messagequeue#System_Messaging_MessageQueue_BasePriority_\" data-linktype=\"relative-path\">BasePriority</a> property). The priority level of the queue has no effect on how messages are placed in the queue, only on how Message Queuing handles the message while en route.  </p>\n<p> Base priority applies only to public queues. For a private queue, the base priority is always zero.  </p>\n<p> You can set a meaningful priority only for non-transactional messages. Message Queuing automatically sets the priority for transactional messages to <code>Lowest</code>, which causes transactional message priority to be ignored.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_AboveNormal\">\r\n      \t\t\t<span class=\"lang-csharp\">AboveNormal</span>\r\n      \t</td>\r\n      \t<td><p>Between High and Normal message priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_High\">\r\n      \t\t\t<span class=\"lang-csharp\">High</span>\r\n      \t</td>\r\n      \t<td><p>High message priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_Highest\">\r\n      \t\t\t<span class=\"lang-csharp\">Highest</span>\r\n      \t</td>\r\n      \t<td><p>Highest message priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_Low\">\r\n      \t\t\t<span class=\"lang-csharp\">Low</span>\r\n      \t</td>\r\n      \t<td><p>Low message priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_Lowest\">\r\n      \t\t\t<span class=\"lang-csharp\">Lowest</span>\r\n      \t</td>\r\n      \t<td><p>Lowest message priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_Normal\">\r\n      \t\t\t<span class=\"lang-csharp\">Normal</span>\r\n      \t</td>\r\n      \t<td><p>Normal message priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_VeryHigh\">\r\n      \t\t\t<span class=\"lang-csharp\">VeryHigh</span>\r\n      \t</td>\r\n      \t<td><p>Between <code>Highest</code> and <code>High</code> message priority.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Messaging_MessagePriority_VeryLow\">\r\n      \t\t\t<span class=\"lang-csharp\">VeryLow</span>\r\n      \t</td>\r\n      \t<td><p>Between <code>Low</code> and <code>Lowest</code> message priority.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Messaging.MessagePriority.yml\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.AboveNormal\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.High\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.Highest\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.Low\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.Lowest\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.Normal\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.VeryHigh\">\r\n<meta name=\"APIName\" content=\"System.Messaging.MessagePriority.VeryLow\">\r\n<meta name=\"APILocation\" content=\"System.Messaging.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"5a950a85-13ad-1844-0d1e-7bb6d70de59f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the priority Message Queuing applies to a message while it is en route to a queue, and when inserting the message into the destination queue.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.messaging/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Messaging.MessagePriority\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Messaging.MessagePriority.yml","open_to_public_contributors":false,"api_name":["System.Messaging.MessagePriority","System.Messaging.MessagePriority.AboveNormal","System.Messaging.MessagePriority.High","System.Messaging.MessagePriority.Highest","System.Messaging.MessagePriority.Low","System.Messaging.MessagePriority.Lowest","System.Messaging.MessagePriority.Normal","System.Messaging.MessagePriority.VeryHigh","System.Messaging.MessagePriority.VeryLow"],"api_location":["System.Messaging.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Messaging.MessagePriority","System::Messaging::MessagePriority","System.Messaging.MessagePriority.AboveNormal","System::Messaging::MessagePriority::AboveNormal","System.Messaging.MessagePriority.High","System::Messaging::MessagePriority::High","System.Messaging.MessagePriority.Highest","System::Messaging::MessagePriority::Highest","System.Messaging.MessagePriority.Low","System::Messaging::MessagePriority::Low","System.Messaging.MessagePriority.Lowest","System::Messaging::MessagePriority::Lowest","System.Messaging.MessagePriority.Normal","System::Messaging::MessagePriority::Normal","System.Messaging.MessagePriority.VeryHigh","System::Messaging::MessagePriority::VeryHigh","System.Messaging.MessagePriority.VeryLow","System::Messaging::MessagePriority::VeryLow"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"5a950a85-13ad-1844-0d1e-7bb6d70de59f","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessagePriority.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MessagePriority enum | Microsoft Docs","_op_ogTitle":"MessagePriority enum","description":"Specifies the priority Message Queuing applies to a message while it is en route to a queue, and when inserting the message into the destination queue.\n","toc_asset_id":"api/_splitted/System.Messaging/toc.json","toc_rel":"_splitted/System.Messaging/toc.json","source_url":"","ms.assetid":"System.Messaging.MessagePriority","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.messaging.messagepriority","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.messaging.messagepriority","fileRelativePath":"api/System.Messaging.MessagePriority.html"},"themesRelativePathToOutputRoot":"_themes/"}