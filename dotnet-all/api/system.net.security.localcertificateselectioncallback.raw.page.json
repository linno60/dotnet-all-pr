{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">LocalCertificateSelectionCallback</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Selects the local Secure Sockets Layer (SSL) certificate used for authentication.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificateSelectionCallback(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, string[] acceptableIssuers);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">LocalCertificateSelectionCallback</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates a method implementation for this delegate.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientAsync#2\"> static X509Certificate^ SelectLocalCertificate(\n         Object^ sender, \nString^ targetHost, \nX509CertificateCollection^ localCertificates, \nX509Certificate^ remoteCertificate, \narray&lt;String^&gt;^ acceptableIssuers\n )\n {\t\n     Console::WriteLine(&quot;Client is selecting a local certificate.&quot;);\n     if (acceptableIssuers != nullptr &amp;&amp; \n             acceptableIssuers-&gt;Length &gt; 0 &amp;&amp;\n             localCertificates != nullptr &amp;&amp;\n             localCertificates-&gt;Count &gt; 0)\n     {\n         // Use the first certificate that is from an acceptable issuer.\n         IEnumerator^ myEnum1 = localCertificates-&gt;GetEnumerator();\n         while ( myEnum1-&gt;MoveNext() )\n         {\n\tX509Certificate^ certificate = safe_cast&lt;X509Certificate^&gt;(myEnum1-&gt;Current);\n\tString^ issuer = certificate-&gt;Issuer;\n\tif ( Array::IndexOf( acceptableIssuers, issuer ) != -1 )\n\t\treturn certificate;\n         }\n     }\n     if (localCertificates != nullptr &amp;&amp;\n             localCertificates-&gt;Count &gt; 0)\nreturn localCertificates[0];\n             \n     return nullptr;\n  }\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientAsync#2\">public static X509Certificate SelectLocalCertificate(\n    object sender,\n    string targetHost, \n    X509CertificateCollection localCertificates, \n    X509Certificate remoteCertificate, \n    string[] acceptableIssuers)\n{\t\n    Console.WriteLine(&quot;Client is selecting a local certificate.&quot;);\n    if (acceptableIssuers != null &amp;&amp; \n        acceptableIssuers.Length &gt; 0 &amp;&amp;\n        localCertificates != null &amp;&amp;\n        localCertificates.Count &gt; 0)\n    {\n        // Use the first certificate that is from an acceptable issuer.\n        foreach (X509Certificate certificate in localCertificates)\n        {\n            string issuer = certificate.Issuer;\n            if (Array.IndexOf(acceptableIssuers, issuer) != -1)\n                return certificate;\n        }\n    }\n    if (localCertificates != null &amp;&amp;\n        localCertificates.Count &gt; 0)\n        return localCertificates[0];\n        \n    return null;\n}\n</code></pre><p> The following code example demonstrates creating an instance of this delegate.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientAsync#6\">// Server name must match the host name and the name on the host&#39;s certificate. \nserverName = args[ 1 ];\n\n// Create a TCP/IP client socket.\nTcpClient^ client = gcnew TcpClient( serverName,80 );\nConsole::WriteLine( L&quot;Client connected.&quot; );\n\n// Create an SSL stream that will close the client&#39;s stream.\nSslStream^ sslStream = gcnew SslStream( \n    client-&gt;GetStream(),\n    false,\n    gcnew RemoteCertificateValidationCallback( ValidateServerCertificate ),\n    gcnew LocalCertificateSelectionCallback( SelectLocalCertificate ) );\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientAsync#6\">// Server name must match the host name and the name on the host&#39;s certificate. \nserverName = args[0];\n// Create a TCP/IP client socket.\nTcpClient client = new TcpClient(serverName,80);\nConsole.WriteLine(&quot;Client connected.&quot;);\n// Create an SSL stream that will close the client&#39;s stream.\nSslStream sslStream = new SslStream(\n    client.GetStream(), \n    false, \n    new RemoteCertificateValidationCallback (ValidateServerCertificate), \n    new LocalCertificateSelectionCallback(SelectLocalCertificate)\n    );\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This delegate is used to construct instances of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class. The <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class is used to help secure information exchanged between a client and server. The client and server use this delegate to select a certificate to be used for authentication.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Security.LocalCertificateSelectionCallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.LocalCertificateSelectionCallback\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.LocalCertificateSelectionCallback..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.LocalCertificateSelectionCallback.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.LocalCertificateSelectionCallback.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.LocalCertificateSelectionCallback.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"7ce23a92-b3e3-ab2f-2919-4c867d66ac51\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Selects the local Secure Sockets Layer (SSL) certificate used for authentication.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.net.security/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Security.LocalCertificateSelectionCallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Net.Security.LocalCertificateSelectionCallback.yml","open_to_public_contributors":false,"api_name":["System.Net.Security.LocalCertificateSelectionCallback","System.Net.Security.LocalCertificateSelectionCallback..ctor","System.Net.Security.LocalCertificateSelectionCallback.Invoke","System.Net.Security.LocalCertificateSelectionCallback.BeginInvoke","System.Net.Security.LocalCertificateSelectionCallback.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Security.LocalCertificateSelectionCallback","System::Net::Security::LocalCertificateSelectionCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"7ce23a92-b3e3-ab2f-2919-4c867d66ac51","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Net.Security/LocalCertificateSelectionCallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LocalCertificateSelectionCallback delegate | Microsoft Docs","_op_ogTitle":"LocalCertificateSelectionCallback delegate","description":"Selects the local Secure Sockets Layer (SSL) certificate used for authentication.\n","toc_asset_id":"api/_splitted/System.Net.Security/toc.json","toc_rel":"_splitted/System.Net.Security/toc.json","source_url":"","ms.assetid":"System.Net.Security.LocalCertificateSelectionCallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.net.security.localcertificateselectioncallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.net.security.localcertificateselectioncallback","fileRelativePath":"api/System.Net.Security.LocalCertificateSelectionCallback.html"},"themesRelativePathToOutputRoot":"_themes/"}