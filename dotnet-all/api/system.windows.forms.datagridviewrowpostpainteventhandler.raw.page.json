{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridViewRowPostPaintEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> event of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DataGridViewRowPostPaintEventHandler(object sender, DataGridViewRowPostPaintEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DataGridViewRowPostPaintEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example presents a DataGridViewRowPostPaintEventHandler delegate that paints textual content that spans the entire row below the normal cell values. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">&#39; Paints the content that spans multiple columns and the focus rectangle.\nSub dataGridView1_RowPostPaint(ByVal sender As Object, _\n    ByVal e As DataGridViewRowPostPaintEventArgs) _\n    Handles dataGridView1.RowPostPaint\n\n    &#39; Calculate the bounds of the row.\n    Dim rowBounds As New Rectangle(Me.dataGridView1.RowHeadersWidth, _\n        e.RowBounds.Top, Me.dataGridView1.Columns.GetColumnsWidth( _\n        DataGridViewElementStates.Visible) - _\n        Me.dataGridView1.HorizontalScrollingOffset + 1, e.RowBounds.Height)\n\n    Dim forebrush As SolidBrush = Nothing\n    Try\n        &#39; Determine the foreground color.\n        If (e.State And DataGridViewElementStates.Selected) = _\n            DataGridViewElementStates.Selected Then\n\n            forebrush = New SolidBrush(e.InheritedRowStyle.SelectionForeColor)\n        Else\n            forebrush = New SolidBrush(e.InheritedRowStyle.ForeColor)\n        End If\n\n        &#39; Get the content that spans multiple columns.\n        Dim recipe As Object = _\n            Me.dataGridView1.Rows.SharedRow(e.RowIndex).Cells(2).Value\n\n        If (recipe IsNot Nothing) Then\n            Dim text As String = recipe.ToString()\n\n            &#39; Calculate the bounds for the content that spans multiple \n            &#39; columns, adjusting for the horizontal scrolling position \n            &#39; and the current row height, and displaying only whole\n            &#39; lines of text.\n            Dim textArea As Rectangle = rowBounds\n            textArea.X -= Me.dataGridView1.HorizontalScrollingOffset\n            textArea.Width += Me.dataGridView1.HorizontalScrollingOffset\n            textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n            textArea.Height -= rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n            textArea.Height = (textArea.Height \\ e.InheritedRowStyle.Font.Height) * _\n                e.InheritedRowStyle.Font.Height\n\n            &#39; Calculate the portion of the text area that needs painting.\n            Dim clip As RectangleF = textArea\n            clip.Width -= Me.dataGridView1.RowHeadersWidth + 1 - clip.X\n            clip.X = Me.dataGridView1.RowHeadersWidth + 1\n            Dim oldClip As RectangleF = e.Graphics.ClipBounds\n            e.Graphics.SetClip(clip)\n\n            &#39; Draw the content that spans multiple columns.\n            e.Graphics.DrawString(text, e.InheritedRowStyle.Font, forebrush, _\n                textArea)\n\n            e.Graphics.SetClip(oldClip)\n        End If\n    Finally\n        forebrush.Dispose()\n    End Try\n\n    If Me.dataGridView1.CurrentCellAddress.Y = e.RowIndex Then\n        &#39; Paint the focus rectangle.\n        e.DrawFocus(rowBounds, True)\n    End If\n\nEnd Sub &#39;dataGridView1_RowPostPaint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">// Paints the content that spans multiple columns and the focus rectangle.\nvoid dataGridView1_RowPostPaint(object sender,\n    DataGridViewRowPostPaintEventArgs e)\n{\n    // Calculate the bounds of the row.\n    Rectangle rowBounds = new Rectangle(\n        this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n        this.dataGridView1.Columns.GetColumnsWidth(\n            DataGridViewElementStates.Visible) -\n        this.dataGridView1.HorizontalScrollingOffset + 1,\n        e.RowBounds.Height);\n\n    SolidBrush forebrush = null;\n    try\n    {\n        // Determine the foreground color.\n        if ((e.State &amp; DataGridViewElementStates.Selected) ==\n            DataGridViewElementStates.Selected)\n        {\n            forebrush = new SolidBrush(e.InheritedRowStyle.SelectionForeColor);\n        }\n        else\n        {\n            forebrush = new SolidBrush(e.InheritedRowStyle.ForeColor);\n        }\n\n        // Get the content that spans multiple columns.\n        object recipe =\n            this.dataGridView1.Rows.SharedRow(e.RowIndex).Cells[2].Value;\n\n        if (recipe != null)\n        {\n            String text = recipe.ToString();\n\n            // Calculate the bounds for the content that spans multiple \n            // columns, adjusting for the horizontal scrolling position \n            // and the current row height, and displaying only whole\n            // lines of text.\n            Rectangle textArea = rowBounds;\n            textArea.X -= this.dataGridView1.HorizontalScrollingOffset;\n            textArea.Width += this.dataGridView1.HorizontalScrollingOffset;\n            textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom;\n            textArea.Height -= rowBounds.Height -\n                e.InheritedRowStyle.Padding.Bottom;\n            textArea.Height = (textArea.Height / e.InheritedRowStyle.Font.Height) *\n                e.InheritedRowStyle.Font.Height;\n\n            // Calculate the portion of the text area that needs painting.\n            RectangleF clip = textArea;\n            clip.Width -= this.dataGridView1.RowHeadersWidth + 1 - clip.X;\n            clip.X = this.dataGridView1.RowHeadersWidth + 1;\n            RectangleF oldClip = e.Graphics.ClipBounds;\n            e.Graphics.SetClip(clip);\n\n            // Draw the content that spans multiple columns.\n            e.Graphics.DrawString(\n                text, e.InheritedRowStyle.Font, forebrush, textArea);\n\n            e.Graphics.SetClip(oldClip);\n        }\n    }\n    finally\n    {\n        forebrush.Dispose();\n    }\n\n    if (this.dataGridView1.CurrentCellAddress.Y == e.RowIndex)\n    {\n        // Paint the focus rectangle.\n        e.DrawFocus(rowBounds, true);\n    }\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a DataGridViewRowPostPaintEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewRowPostPaintEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"9b9bd5cd-c75b-723d-1de4-c23502050c77\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  event of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewRowPostPaintEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DataGridViewRowPostPaintEventHandler","System.Windows.Forms.DataGridViewRowPostPaintEventHandler..ctor","System.Windows.Forms.DataGridViewRowPostPaintEventHandler.Invoke","System.Windows.Forms.DataGridViewRowPostPaintEventHandler.BeginInvoke","System.Windows.Forms.DataGridViewRowPostPaintEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewRowPostPaintEventHandler","System::Windows::Forms::DataGridViewRowPostPaintEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"9b9bd5cd-c75b-723d-1de4-c23502050c77","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewRowPostPaintEventHandler.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewRowPostPaintEventHandler delegate | Microsoft Docs","_op_ogTitle":"DataGridViewRowPostPaintEventHandler delegate","description":"Represents the method that will handle the  event of a .\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewRowPostPaintEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewrowpostpainteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewrowpostpainteventhandler","fileRelativePath":"api/System.Windows.Forms.DataGridViewRowPostPaintEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}