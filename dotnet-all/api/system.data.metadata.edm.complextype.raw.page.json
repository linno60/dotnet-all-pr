{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ComplexType</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a complex type in a conceptual model.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class ComplexType : System.Data.Metadata.Edm.StructuralType</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.metadataitem\" data-linktype=\"relative-path\">MetadataItem</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.globalitem\" data-linktype=\"relative-path\">GlobalItem</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype\" data-linktype=\"relative-path\">EdmType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.structuraltype\" data-linktype=\"relative-path\">StructuralType</a></span></div><span class=\"lang-csharp\">ComplexType</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype#System_Data_Metadata_Edm_EdmType_Abstract\" data-linktype=\"relative-path\">Abstract</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype#System_Data_Metadata_Edm_EdmType_BaseType\" data-linktype=\"relative-path\">BaseType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype#System_Data_Metadata_Edm_EdmType_FullName\" data-linktype=\"relative-path\">FullName</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype#System_Data_Metadata_Edm_EdmType_GetCollectionType\" data-linktype=\"relative-path\">GetCollectionType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype#System_Data_Metadata_Edm_EdmType_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype#System_Data_Metadata_Edm_EdmType_NamespaceName\" data-linktype=\"relative-path\">NamespaceName</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.edmtype#System_Data_Metadata_Edm_EdmType_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.metadataitem#System_Data_Metadata_Edm_MetadataItem_Documentation\" data-linktype=\"relative-path\">Documentation</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.metadataitem#System_Data_Metadata_Edm_MetadataItem_GetBuiltInType_System_Data_Metadata_Edm_BuiltInTypeKind_\" data-linktype=\"relative-path\">GetBuiltInType(BuiltInTypeKind)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.metadataitem#System_Data_Metadata_Edm_MetadataItem_GetGeneralFacetDescriptions\" data-linktype=\"relative-path\">GetGeneralFacetDescriptions()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.metadataitem#System_Data_Metadata_Edm_MetadataItem_MetadataProperties\" data-linktype=\"relative-path\">MetadataProperties</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.structuraltype#System_Data_Metadata_Edm_StructuralType_Members\" data-linktype=\"relative-path\">Members</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code sample gets a metadata workspace from the connection and uses that metadata workspace to retrieve information about the properties of the complex types in the specified model. Note that the metadata workspace is a runtime service component that provides support for retrieving metadata.  </p>\n<p> The code sample uses a <a class=\"xref\" href=\"system.data.metadata.edm.dataspace\" data-linktype=\"relative-path\">DataSpace</a> to specify the model. The <a class=\"xref\" href=\"system.data.metadata.edm.dataspace\" data-linktype=\"relative-path\">DataSpace</a> represents the default name for the conceptual model. The code sample uses the CustomerComplexAddr model that is provided in <a href=\"http://msdn.microsoft.com/en-us/b13b24d5-05d1-4746-b0d2-5472796240c6\" data-linktype=\"external\">How to: Define a Model with Complex Types (Entity Framework)</a> topic. For an example of the application config file, see <a href=\"http://msdn.microsoft.com/en-us/82f7fc69-808c-40ff-a23f-ee3fb8dbd9e2\" data-linktype=\"external\">Implementing Complex Type (EDM)</a> topic.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Data;  \nusing System.Collections.ObjectModel;  \nusing System.Data.EntityClient;  \nusing System.Data.Metadata.Edm;  \n\nclass GetComplexTypeMembersExample  \n{  \n  static void Main()  \n  {  \n    try  \n    {  \n      // Establish a connection to the underlying data provider by   \n      // using the connection string specified in the config file.  \n      using (EntityConnection connection =  \n        new EntityConnection(&quot;Name=CustomerWComplexAddrEntities&quot;))  \n      {  \n         // Open the connection.  \n         connection.Open();  \n\n         // Access the metadata workspace.  \n         MetadataWorkspace workspace =   \n            connection.GetMetadataWorkspace();  \n\n         // Get properties of complex types.  \n         GetProperties(workspace, DataSpace.CSpace);  \n      }  \n    }  \n    catch (MetadataException exceptionMetadata)  \n    {  \n       Console.WriteLine(&quot;MetadataException: {0}&quot;,  \n              exceptionMetadata.Message);  \n    }  \n    catch (System.Data.MappingException exceptionMapping)  \n    {  \n       Console.WriteLine(&quot;MappingException: {0}&quot;,  \n               exceptionMapping.Message);  \n    }  \n  }  \n\n  public static void GetProperties(MetadataWorkspace workspace,   \n      DataSpace model)  \n  {  \n    // Get a collection of complex types.  \n    ReadOnlyCollection&lt;ComplexType&gt; complexTypes =  \n       workspace.GetItems&lt;ComplexType&gt;(model);  \n\n    // Iterate through the collection to get each complex type.  \n    foreach (ComplexType complexType in complexTypes)  \n    {  \n       Console.WriteLine(  \n         &quot;\\n\\n***ComplexType Name: {0}, Namespace: {1}&quot;,  \n         complexType.Name,  \n         complexType.NamespaceName);  \n\n       Console.WriteLine(  \n          &quot;\\nGet the properties of this &quot; +  \n          &quot;ComplexType object ==&gt;&quot;);  \n          // Iterate through the collection to get each property of the   \n          // current ComplexType object.  \n          foreach (EdmProperty property in complexType.Properties)  \n          {  \n            Console.Write(&quot;   Property Name: {0} &quot;, property.Name);  \n\n            Console.WriteLine(  \n               &quot;   Property declaring Type: {0}, edmtype: {1},&quot; +  \n               &quot; default: {2}, nullable: {3} &quot;,  \n               property.DeclaringType, property.TypeUsage.EdmType,  \n               property.Default, property.Nullable);  \n          }  \n      }  \n  }  \n}  \n</code></pre><pre><code class=\"lang-vb\">Imports System  \nImports System.Collections.ObjectModel  \nImports System.Data  \nImports System.Data.EntityClient  \nImports System.Data.Metadata.Edm  \n\nClass GetComplexTypeMembersExample  \n  Public Shared Sub Main()  \n    Try  \n      &#39; Establish a connection to the underlying data provider by   \n      &#39; using the connection string specified in the config file.  \n      Using connection As EntityConnection = _  \n         New EntityConnection(&quot;Name=CustomerWComplexAddrEntities&quot;)  \n\n         &#39; Open the conection.  \n         connection.Open()  \n\n         &#39; Access the metadata workspace.  \n         Dim workspace As MetadataWorkspace = _  \n            connection.GetMetadataWorkspace  \n\n         &#39; Get properties of complex types.  \n         GetProperties(workspace, DataSpace.CSpace)  \n      End Using  \n    Catch exceptionMetadata As MetadataException  \n       Console.WriteLine(&quot;MetadataException: {0}&quot;, _  \n           exceptionMetadata.Message)  \n    Catch exceptionMapping As MappingException  \n       Console.WriteLine(&quot;MappingException: {0}&quot;, _  \n           exceptionMapping.Message)  \n     End Try  \n  End Sub  \n\n  Public Shared Sub GetProperties( _  \n    ByVal workspace As MetadataWorkspace, ByVal model As DataSpace)  \n\n    &#39; Get a collection of complex types.  \n    Dim complexTypes As ReadOnlyCollection(Of ComplexType) = _  \n       workspace.GetItems(Of ComplexType)(model)  \n\n    &#39; Iterate through the collection to get each complex type.  \n    Dim complexType As ComplexType  \n    For Each complexType In complexTypes  \n       Console.WriteLine( _  \n          ControlChars.Lf &amp; ControlChars.Lf &amp; _  \n          &quot;***ComplexType Name: {0}, Namespace: {1}&quot;, _  \n          complexType.Name, complexType.NamespaceName)  \n\n       Console.WriteLine(ControlChars.Lf &amp; _  \n          &quot;Get the properties of this ComplexType object ==&gt;&quot;)  \n\n          &#39; Iterate through the collection to get each property of the   \n          &#39; current ComplexType object.  \n          Dim property1 As EdmProperty  \n          For Each property1 In complexType.Properties  \n            Console.Write(&quot;   Property Name: {0} &quot;, property1.Name)  \n            Console.WriteLine( _  \n              &quot;   Property declaring Type: {0}, edmtype: {1}, &quot; + _  \n              &quot;default: {2}, nullable: {3} &quot;, _  \n              New Object() {property1.DeclaringType, _  \n              property1.TypeUsage.EdmType, _  \n              property1.Default, property1.Nullable})  \n          Next  \n        Next  \n    End Sub  \nEnd Class  \n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ComplexType in a conceptual model represents a type that includes a set of properties like an entity type but does not include a key property. For more information about the complex types in a conceptual model, see <a href=\"http://msdn.microsoft.com/en-us/271d59a2-990e-4d24-b427-27a1c3e99b42\" data-linktype=\"external\">Complex Type</a> and <a href=\"http://msdn.microsoft.com/en-us/b13b24d5-05d1-4746-b0d2-5472796240c6\" data-linktype=\"external\">How to: Define a Model with Complex Types (Entity Framework)</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Metadata_Edm_ComplexType_BuiltInTypeKind_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Metadata_Edm_ComplexType_BuiltInTypeKind\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BuiltInTypeKind</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the built-in type kind for this <a class=\"xref\" href=\"system.data.metadata.edm.complextype\" data-linktype=\"relative-path\">ComplexType</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.builtintypekind\" data-linktype=\"relative-path\">BuiltInTypeKind</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.metadata.edm.builtintypekind\" data-linktype=\"relative-path\">BuiltInTypeKind</a> object that represents the built-in type kind for this <a class=\"xref\" href=\"system.data.metadata.edm.complextype\" data-linktype=\"relative-path\">ComplexType</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"System_Data_Metadata_Edm_ComplexType_Properties_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_Metadata_Edm_ComplexType_Properties\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Properties</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the list of properties for this <a class=\"xref\" href=\"system.data.metadata.edm.complextype\" data-linktype=\"relative-path\">ComplexType</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmProperty&gt; Properties { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.metadata.edm.readonlymetadatacollection-1\" data-linktype=\"relative-path\">ReadOnlyMetadataCollection</a>&lt;<a class=\"xref\" href=\"system.data.metadata.edm.edmproperty\" data-linktype=\"relative-path\">EdmProperty</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of type <span class=\"xref\">stem.Data.Metadata.Edm.ReadOnlyMetadataCollection`1</span> that contains the list of properties for this <a class=\"xref\" href=\"system.data.metadata.edm.complextype\" data-linktype=\"relative-path\">ComplexType</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Metadata.Edm.ComplexType.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Metadata.Edm.ComplexType\">\r\n<meta name=\"APIName\" content=\"System.Data.Metadata.Edm.ComplexType.BuiltInTypeKind\">\r\n<meta name=\"APIName\" content=\"System.Data.Metadata.Edm.ComplexType.Properties\">\r\n<meta name=\"APILocation\" content=\"System.Data.Entity.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:59 PM\">\r\n<meta name=\"document_id\" content=\"ccb6b757-758d-c7f7-e583-87de41ee4874\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a complex type in a conceptual model.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.data.metadata.edm/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Metadata.Edm.ComplexType\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","uhfHeaderId":"MSDocsHeader-DotNet","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Data.Metadata.Edm.ComplexType.yml","open_to_public_contributors":false,"api_name":["System.Data.Metadata.Edm.ComplexType","System.Data.Metadata.Edm.ComplexType.BuiltInTypeKind","System.Data.Metadata.Edm.ComplexType.Properties"],"api_location":["System.Data.Entity.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Metadata.Edm.ComplexType","System::Data::Metadata::Edm::ComplexType","System.Data.Metadata.Edm.ComplexType.BuiltInTypeKind","System::Data::Metadata::Edm::ComplexType::BuiltInTypeKind","System.Data.Metadata.Edm.ComplexType.Properties","System::Data::Metadata::Edm::ComplexType::Properties"],"dev_langs":["csharp"],"updated_at":"2017-04-01 05:59 PM","document_id":"ccb6b757-758d-c7f7-e583-87de41ee4874","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Data.Metadata.Edm/ComplexType.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ComplexType class | Microsoft Docs","_op_ogTitle":"ComplexType class","description":"Represents a complex type in a conceptual model.\n","toc_asset_id":"api/_splitted/System.Data.Metadata.Edm/toc.json","toc_rel":"_splitted/System.Data.Metadata.Edm/toc.json","source_url":"","ms.assetid":"System.Data.Metadata.Edm.ComplexType","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.data.metadata.edm.complextype","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.data.metadata.edm.complextype","fileRelativePath":"api/System.Data.Metadata.Edm.ComplexType.html"},"themesRelativePathToOutputRoot":"_themes/"}