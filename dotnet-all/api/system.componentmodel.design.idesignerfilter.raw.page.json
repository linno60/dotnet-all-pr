{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDesignerFilter</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface that enables a designer to access and filter the dictionaries of a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDesignerFilter</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates an override of <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PreFilterProperties_\" data-linktype=\"relative-path\">PreFilterProperties</a> that adds a property of the designer to the Properties window when the designer&#39;s control is selected at design time. See the example for the <a class=\"xref\" href=\"system.windows.forms.design.controldesigner\" data-linktype=\"relative-path\">ControlDesigner</a> class for a complete designer example that uses the IDesignerFilter interface.  </p>\n<pre><code class=\"lang-cpp\" name=\"ControlDesignerExample#2\">protected:\n   [ReflectionPermission(SecurityAction::Demand, Flags=ReflectionPermissionFlag::MemberAccess)]\n   virtual void PreFilterProperties( System::Collections::IDictionary^ properties ) override\n   {\n      properties-&gt;Add( &quot;OutlineColor&quot;, TypeDescriptor::CreateProperty( TestControlDesigner::typeid, &quot;OutlineColor&quot;, System::Drawing::Color::typeid, nullptr ) );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"ControlDesignerExample#2\">&#39; Adds a property to this designer&#39;s control at design time \n&#39; that indicates the outline color to use.\n&#39; The DesignOnlyAttribute ensures that the OutlineColor\n&#39; property is not serialized by the designer.\nProtected Overrides Sub PreFilterProperties(ByVal properties As System.Collections.IDictionary)\n    Dim pd As PropertyDescriptor = TypeDescriptor.CreateProperty( _\n    GetType(ExampleControlDesigner), _\n    &quot;OutlineColor&quot;, _\n    GetType(System.Drawing.Color), _\n    New Attribute() {New DesignOnlyAttribute(True)})\n\n    properties.Add(&quot;OutlineColor&quot;, pd)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"ControlDesignerExample#2\">// Adds a property to this designer&#39;s control at design time \n// that indicates the outline color to use. \n// The DesignOnlyAttribute ensures that the OutlineColor\n// property is not serialized by the designer.\nprotected override void PreFilterProperties(System.Collections.IDictionary properties)\n{\n    PropertyDescriptor pd = TypeDescriptor.CreateProperty(\n        typeof(ExampleControlDesigner), \n        &quot;OutlineColor&quot;,\n        typeof(System.Drawing.Color),\n        new Attribute[] { new DesignOnlyAttribute(true) });\n\n    properties.Add(&quot;OutlineColor&quot;, pd);\n}\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>IDesignerFilter enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>. The methods of this interface whose names begin with <code>Pre</code> are called immediately before the methods whose names begin with <code>Post</code>.  </p>\n<p> If you want to add attribute, event, or property descriptors, use a <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PreFilterAttributes_\" data-linktype=\"relative-path\">PreFilterAttributes</a>, <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PreFilterEvents_\" data-linktype=\"relative-path\">PreFilterEvents</a>, or <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PreFilterProperties_\" data-linktype=\"relative-path\">PreFilterProperties</a> method.  </p>\n<p> If you want to change or remove attribute, event, or property descriptors, use a <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PostFilterAttributes_\" data-linktype=\"relative-path\">PostFilterAttributes</a>, <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PostFilterEvents_\" data-linktype=\"relative-path\">PostFilterEvents</a>, or <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PostFilterProperties_\" data-linktype=\"relative-path\">PostFilterProperties</a> method.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerFilter_PostFilterAttributes_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PostFilterAttributes(IDictionary)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PostFilterAttributes (System.Collections.IDictionary attributes);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attributes</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> objects for the class of the component. The keys in the dictionary of attributes are the <span class=\"xref\">stem.Attribute.TypeId*</span> values of the attributes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.  </p>\n<p> The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>. This method is called immediately after <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PreFilterAttributes_\" data-linktype=\"relative-path\">PreFilterAttributes</a>.  </p>\n<p> The type ID of an attribute can be any object. By default, <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> returns its <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> as the value of its <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> property. You can check the <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> of an attribute in the dictionary for equivalence with a known <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> for an attribute to identify it, or use <a class=\"xref\" href=\"system.reflection\" data-linktype=\"relative-path\">System.Reflection</a> to identify the attribute object itself.  </p>\n<p> When an attribute that has the same <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <a class=\"xref\" href=\"system.componentmodel.design.irootdesigner\" data-linktype=\"relative-path\">IRootDesigner</a> and an <a class=\"xref\" href=\"system.componentmodel.design.idesigner\" data-linktype=\"relative-path\">IDesigner</a>, the <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> class returns a <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> that uniquely identifies both the attribute and the base designer type. The <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> returns a <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> that reflects this. Therefore when you add a new <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> with a base designer type of the same type as the base designer type of an existing <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a>, the old attribute is replaced with the new attribute.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerFilter_PostFilterEvents_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PostFilterEvents(IDictionary)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PostFilterEvents (System.Collections.IDictionary events);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>events</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.eventdescriptor\" data-linktype=\"relative-path\">EventDescriptor</a> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method provides a way to change or remove items within the dictionary of events that are exposed through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.  </p>\n<p> The keys in the dictionary of events are the names of the events. The objects are of type <a class=\"xref\" href=\"system.componentmodel.eventdescriptor\" data-linktype=\"relative-path\">EventDescriptor</a>. This method is called immediately after <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PreFilterEvents_\" data-linktype=\"relative-path\">PreFilterEvents</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerFilter_PostFilterProperties_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PostFilterProperties(IDictionary)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PostFilterProperties (System.Collections.IDictionary properties);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>properties</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method provides a way to change or remove items within the dictionary of properties that are exposed through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.  </p>\n<p> The keys in the dictionary of properties are the names of the properties. The objects are of type <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a>. This method is called immediately after <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PreFilterProperties_\" data-linktype=\"relative-path\">PreFilterProperties</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerFilter_PreFilterAttributes_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreFilterAttributes(IDictionary)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PreFilterAttributes (System.Collections.IDictionary attributes);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attributes</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> objects for the class of the component. The keys in the dictionary of attributes are the <span class=\"xref\">stem.Attribute.TypeId*</span> values of the attributes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.  </p>\n<p> The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>. This method is called immediately before <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PostFilterAttributes_\" data-linktype=\"relative-path\">PostFilterAttributes</a>.  </p>\n<p> The type ID of an attribute can be any object. By default, <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> returns its <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> as the value of its <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> property. You can check the <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> of an attribute in the dictionary for equivalence with a known <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> for an attribute to identify it, or use <a class=\"xref\" href=\"system.reflection\" data-linktype=\"relative-path\">System.Reflection</a> to identify the attribute object itself.  </p>\n<p> When an attribute that has the same <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <a class=\"xref\" href=\"system.componentmodel.design.irootdesigner\" data-linktype=\"relative-path\">IRootDesigner</a> and an <a class=\"xref\" href=\"system.componentmodel.design.idesigner\" data-linktype=\"relative-path\">IDesigner</a>, the <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> class returns a <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> that uniquely identifies both the attribute and the base designer type. The <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> returns a <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId_\" data-linktype=\"relative-path\">TypeId</a> that reflects this. Therefore when you add a new <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> with a base designer type of the same type as the base designer type of an existing <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a>, the old attribute is replaced with the new attribute.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerFilter_PreFilterEvents_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreFilterEvents(IDictionary)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PreFilterEvents (System.Collections.IDictionary events);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>events</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.eventdescriptor\" data-linktype=\"relative-path\">EventDescriptor</a> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method provides a way to add items to the dictionary of events that a designer exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.  </p>\n<p> The keys in the dictionary of events are the names of the events. The objects are of type <a class=\"xref\" href=\"system.componentmodel.eventdescriptor\" data-linktype=\"relative-path\">EventDescriptor</a>. This method is called immediately before <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PostFilterEvents_\" data-linktype=\"relative-path\">PostFilterEvents</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_IDesignerFilter_PreFilterProperties_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreFilterProperties(IDictionary)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PreFilterProperties (System.Collections.IDictionary properties);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>properties</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method provides a way to add items to the dictionary of properties that a designer exposes through a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>.  </p>\n<p> The keys in the dictionary of properties are the names of the properties. The objects are of type <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a>. This method is called immediately before <a class=\"xref\" href=\"system.componentmodel.design.idesignerfilter#System_ComponentModel_Design_IDesignerFilter_PostFilterProperties_\" data-linktype=\"relative-path\">PostFilterProperties</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesignerFilter.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerFilter\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerFilter.PostFilterEvents\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerFilter.PostFilterProperties\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerFilter.PreFilterEvents\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.IDesignerFilter.PreFilterProperties\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"82d5cdb1-cc2c-2956-767c-6db5635ec656\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface that enables a designer to access and filter the dictionaries of a  that stores the property, attribute, and event descriptors that a component designer can expose to the design…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.componentmodel.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.IDesignerFilter\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.ComponentModel.Design.IDesignerFilter.yml","open_to_public_contributors":false,"api_name":["System.ComponentModel.Design.IDesignerFilter","System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes","System.ComponentModel.Design.IDesignerFilter.PostFilterEvents","System.ComponentModel.Design.IDesignerFilter.PostFilterProperties","System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes","System.ComponentModel.Design.IDesignerFilter.PreFilterEvents","System.ComponentModel.Design.IDesignerFilter.PreFilterProperties"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.IDesignerFilter","System::ComponentModel::Design::IDesignerFilter","System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes","System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes","System.ComponentModel.Design.IDesignerFilter.PostFilterEvents","System::ComponentModel::Design::IDesignerFilter::PostFilterEvents","System.ComponentModel.Design.IDesignerFilter.PostFilterProperties","System::ComponentModel::Design::IDesignerFilter::PostFilterProperties","System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes","System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes","System.ComponentModel.Design.IDesignerFilter.PreFilterEvents","System::ComponentModel::Design::IDesignerFilter::PreFilterEvents","System.ComponentModel.Design.IDesignerFilter.PreFilterProperties","System::ComponentModel::Design::IDesignerFilter::PreFilterProperties"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"82d5cdb1-cc2c-2956-767c-6db5635ec656","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDesignerFilter interface | Microsoft Docs","_op_ogTitle":"IDesignerFilter interface","description":"Provides an interface that enables a designer to access and filter the dictionaries of a  that stores the property, attribute, and event descriptors that a component designer can expose to the design…","toc_asset_id":"api/_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.IDesignerFilter","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesignerfilter","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.idesignerfilter","fileRelativePath":"api/System.ComponentModel.Design.IDesignerFilter.html"},"themesRelativePathToOutputRoot":"_themes/"}