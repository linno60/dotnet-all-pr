{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridViewCellCancelEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that will handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBeginEdit\" data-linktype=\"relative-path\">CellBeginEdit</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowValidating\" data-linktype=\"relative-path\">RowValidating</a> events of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void DataGridViewCellCancelEventHandler(object sender, DataGridViewCellCancelEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">DataGridViewCellCancelEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example uses a DataGridViewCellCancelEventHandler delegate to check if valid track and release dates are entered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.RowOperations#5\">Private Sub ValidateByRow(ByVal sender As Object, _\n    ByVal data As DataGridViewCellCancelEventArgs) _\n    Handles songsDataGridView.RowValidating\n\n    Dim row As DataGridViewRow = _\n        songsDataGridView.Rows(data.RowIndex)\n    Dim trackCell As DataGridViewCell = _\n        row.Cells(songsDataGridView.Columns(&quot;Track&quot;).Index)\n    Dim dateCell As DataGridViewCell = _\n        row.Cells(songsDataGridView.Columns(&quot;Release Date&quot;).Index)\n    data.Cancel = Not (IsTrackGood(trackCell) _\n        AndAlso IsDateGood(dateCell))\nEnd Sub\n\nPrivate Function IsTrackGood(ByRef cell As DataGridViewCell) As Boolean\n\n    If cell.Value.ToString().Length = 0 Then\n        cell.ErrorText = &quot;Please enter a track&quot;\n        songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n            &quot;Please enter a track&quot;\n        Return False\n    ElseIf cell.Value.ToString().Equals(&quot;0&quot;) Then\n        cell.ErrorText = &quot;Zero is not a valid track&quot;\n        songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n            &quot;Zero is not a valid track&quot;\n        Return False\n    ElseIf Not Integer.TryParse( _\n        cell.Value.ToString(), New Integer()) Then\n        cell.ErrorText = &quot;A Track must be a number&quot;\n        songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n            &quot;A Track must be a number&quot;\n        Return False\n    End If\n    Return True\nEnd Function\n\nPrivate Function IsDateGood(ByRef cell As DataGridViewCell) As Boolean\n\n    If cell.Value Is Nothing Then\n        cell.ErrorText = &quot;Missing date&quot;\n        songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n            &quot;Missing date&quot;\n        Return False\n    Else\n        Try\n            DateTime.Parse(cell.Value.ToString())\n        Catch ex As FormatException\n\n            cell.ErrorText = &quot;Invalid format&quot;\n            songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n                &quot;Invalid format&quot;\n\n            Return False\n        End Try\n    End If\n    Return True\nEnd Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.RowOperations#5\">  private void ValidateByRow(Object sender, \n      DataGridViewCellCancelEventArgs data) \n  {\n      DataGridViewRow row = \n          songsDataGridView.Rows[data.RowIndex];\n      DataGridViewCell trackCell = \n          row.Cells[songsDataGridView.Columns[&quot;Track&quot;].Index];\n      DataGridViewCell dateCell = \n          row.Cells[songsDataGridView.Columns[&quot;Release Date&quot;].Index];\n      data.Cancel = !(IsTrackGood(trackCell) &amp;&amp; IsDateGood(dateCell));\n  }\n\n  private Boolean IsTrackGood(DataGridViewCell cell)\n  {\n      Int32 cellValueAsInt;\n      if (cell.Value.ToString().Length == 0)\n{\n          cell.ErrorText = &quot;Please enter a track&quot;;\n          songsDataGridView.Rows[cell.RowIndex].ErrorText = \n              &quot;Please enter a track&quot;;\n          return false;\n      }\n      else if (cell.Value.ToString().Equals(&quot;0&quot;))\n      {\n          cell.ErrorText = &quot;Zero is not a valid track&quot;;\n          songsDataGridView.Rows[cell.RowIndex].ErrorText =\n              &quot;Zero is not a valid track&quot;;\n          return false;\n      }\n      else if (!Int32.TryParse(cell.Value.ToString(), out cellValueAsInt))\n      {\n          cell.ErrorText = &quot;A Track must be a number&quot;;\n          songsDataGridView.Rows[cell.RowIndex].ErrorText =\n              &quot;A Track must be a number&quot;;\n          return false;\n      }\n      return true;\n  }\n\n  private Boolean IsDateGood(DataGridViewCell cell) \n  {\n      if (cell.Value == null)\n{\n          cell.ErrorText = &quot;Missing date&quot;;\n          songsDataGridView.Rows[cell.RowIndex].ErrorText = \n              &quot;Missing date&quot;;\n          return false;\n      }\n      else\n      {\n          try\n          {\n              DateTime.Parse(cell.Value.ToString());\n          }\n          catch (FormatException)\n          {\n              cell.ErrorText = &quot;Invalid format&quot;;\n              songsDataGridView.Rows[cell.RowIndex].ErrorText = \n                  &quot;Invalid format&quot;;\n\n              return false;\n          }\n      }\n      return true;\n  }\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When you create a DataGridViewCellCancelEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewCellCancelEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellCancelEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellCancelEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellCancelEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellCancelEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellCancelEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"b2ac4f33-e584-8f0a-708d-27eaad5d6f50\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that will handle the  and  events of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewCellCancelEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewCellCancelEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DataGridViewCellCancelEventHandler","System.Windows.Forms.DataGridViewCellCancelEventHandler..ctor","System.Windows.Forms.DataGridViewCellCancelEventHandler.Invoke","System.Windows.Forms.DataGridViewCellCancelEventHandler.BeginInvoke","System.Windows.Forms.DataGridViewCellCancelEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewCellCancelEventHandler","System::Windows::Forms::DataGridViewCellCancelEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"b2ac4f33-e584-8f0a-708d-27eaad5d6f50","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Windows.Forms/DataGridViewCellCancelEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewCellCancelEventHandler delegate | Microsoft Docs","_op_ogTitle":"DataGridViewCellCancelEventHandler delegate","description":"Represents the method that will handle the  and  events of a .\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewCellCancelEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewcellcanceleventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewcellcanceleventhandler","fileRelativePath":"api/System.Windows.Forms.DataGridViewCellCancelEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}