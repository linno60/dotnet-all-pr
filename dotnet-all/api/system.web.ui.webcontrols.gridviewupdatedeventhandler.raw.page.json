{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GridViewUpdatedEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void GridViewUpdatedEventHandler(object sender, GridViewUpdatedEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">GridViewUpdatedEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to programmatically add a GridViewUpdatedEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewUpdatedEventHandler#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n\n    &#39; Create a new GridView control.\n    Dim customersGridView As New GridView()\n    \n    &#39; Set the GridView control&#39;s properties.\n    customersGridView.ID = &quot;CustomersGridView&quot;\n    customersGridView.DataSourceID = &quot;CustomersSqlDataSource&quot;\n    customersGridView.AutoGenerateColumns = True\n    customersGridView.AutoGenerateEditButton = True\n    customersGridView.AllowPaging = True\n    \n    Dim keyArray() As String = {&quot;CustomerID&quot;}\n    customersGridView.DataKeyNames = keyArray\n\n    &#39; Programmatically register the event-handling method\n    &#39; for the RowDeleted event of the GridView control.\n    AddHandler customersGridView.RowUpdated, AddressOf CustomersGridView_RowUpdated\n    AddHandler customersGridView.RowCancelingEdit, AddressOf CustomersGridView_RowCancelingEdit\n    AddHandler customersGridView.RowEditing, AddressOf CustomersGridView_RowEditing\n    \n    &#39; Add the GridView control to the Controls collection\n    &#39; of the PlaceHolder control.\n    GridViewPlaceHolder.Controls.Add(customersGridView)\n    \n  End Sub\n\n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n    \n    &#39; Indicate whether the update operation succeeded.\n    If e.Exception Is Nothing Then\n    \n      Message.Text = &quot;Row updated successfully.&quot;\n    \n    Else\n    \n      e.ExceptionHandled = True\n      Message.Text = &quot;An error occurred while attempting to update the row.&quot;\n    \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n        \n    &#39; The update operation was canceled. Clear the message label.\n    Message.Text = &quot;&quot;\n    \n  End Sub\n\n  Sub CustomersGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n  \n    &#39; The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;\n    \n  End Sub\n    \n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView GridViewUpdatedEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView GridViewUpdatedEventHandler Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewUpdatedEventHandler#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void Page_Load(Object sender, EventArgs e)\n  {\n\n    // Create a new GridView control.\n    GridView customersGridView = new GridView();\n\n    // Set the GridView control&#39;s properties.\n    customersGridView.ID = &quot;CustomersGridView&quot;;\n    customersGridView.DataSourceID = &quot;CustomersSqlDataSource&quot;;\n    customersGridView.AutoGenerateColumns = true;\n    customersGridView.AutoGenerateEditButton = true;\n    customersGridView.AllowPaging = true;\n    customersGridView.DataKeyNames = new String[1] { &quot;CustomerID&quot; };\n\n    // Programmatically register the event-handling method\n    // for the RowDeleted event of the GridView control.\n    customersGridView.RowUpdated += new GridViewUpdatedEventHandler(this.CustomersGridView_RowUpdated);\n    customersGridView.RowCancelingEdit += new GridViewCancelEditEventHandler(this.CustomersGridView_RowCancelingEdit);\n    customersGridView.RowEditing += new GridViewEditEventHandler(this.CustomersGridView_RowEditing);\n    \n    // Add the GridView control to the Controls collection\n    // of the PlaceHolder control.\n    GridViewPlaceHolder.Controls.Add(customersGridView);\n    \n  }\n\n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n  {\n    \n    // Indicate whether the update operation succeeded.\n    if(e.Exception == null)\n    {\n      Message.Text = &quot;Row updated successfully.&quot;;\n    }\n    else\n    {\n      e.ExceptionHandled = true;\n      Message.Text = &quot;An error occurred while attempting to update the row.&quot;;\n    }\n    \n  }\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n  {\n        \n    // The update operation was canceled. Clear the message label.\n    Message.Text = &quot;&quot;;\n    \n  }\n\n  void CustomersGridView_RowEditing(Object sender, GridViewEditEventArgs e)\n  {\n    // The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;;\n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewUpdatedEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridViewUpdatedEventHandler Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to declaratively add a GridViewUpdatedEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowUpdated#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n    \n    &#39; Indicate whether the update operation succeeded.\n    If e.Exception Is Nothing Then\n    \n      Message.Text = &quot;Row updated successfully.&quot;\n    \n    Else\n    \n      e.ExceptionHandled = True\n      Message.Text = &quot;An error occurred while attempting to update the row.&quot;\n    \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n        \n    &#39; The update operation was canceled. Clear the message label.\n    Message.Text = &quot;&quot;\n    \n  End Sub\n\n  Sub CustomersGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n  \n    &#39; The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;\n    \n  End Sub\n    \n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowUpdated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowUpdated Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowUpdated#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n  {\n    \n    // Indicate whether the update operation succeeded.\n    if(e.Exception == null)\n    {\n      Message.Text = &quot;Row updated successfully.&quot;;\n    }\n    else\n    {\n      e.ExceptionHandled = true;\n      Message.Text = &quot;An error occurred while attempting to update the row.&quot;;\n    }\n    \n  }\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n  {\n        \n    // The update operation was canceled. Clear the message label.\n    Message.Text = &quot;&quot;;\n    \n  }\n\n  void CustomersGridView_RowEditing(Object sender, GridViewEditEventArgs e)\n  {\n    // The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;;\n  }\n    \n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowUpdated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowUpdated Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event when an Update button (a button with its <code>CommandName</code> property set to &quot;Update&quot;) within the control is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the record. This allows you to provide an event-handling method that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.  </p>\n<p> When you create a GridViewUpdatedEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewUpdatedEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdatedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdatedEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdatedEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdatedEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdatedEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"97c437b3-72ae-3a52-a3fb-cc8280dd51e8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.GridViewUpdatedEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewUpdatedEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.GridViewUpdatedEventHandler","System.Web.UI.WebControls.GridViewUpdatedEventHandler..ctor","System.Web.UI.WebControls.GridViewUpdatedEventHandler.Invoke","System.Web.UI.WebControls.GridViewUpdatedEventHandler.BeginInvoke","System.Web.UI.WebControls.GridViewUpdatedEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.GridViewUpdatedEventHandler","System::Web::UI::WebControls::GridViewUpdatedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"97c437b3-72ae-3a52-a3fb-cc8280dd51e8","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridViewUpdatedEventHandler delegate | Microsoft Docs","_op_ogTitle":"GridViewUpdatedEventHandler delegate","description":"Represents the method that handles the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.GridViewUpdatedEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewupdatedeventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewupdatedeventhandler","fileRelativePath":"api/System.Web.UI.WebControls.GridViewUpdatedEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}