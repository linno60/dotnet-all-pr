{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a method that creates a non-default value to add as part of a key/value pair to a <span class=\"xref\">stem.Runtime.CompilerServices.ConditionalWeakTable`2</span> object.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue stack\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TKey</td>\r\n  \t\t\t<td><p>To be added.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TValue</td>\r\n  \t\t\t<td><p>To be added.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example defines a <code>MainClass</code> class and a <code>MainInfo</code> class. <code>MainInfo</code> provides information about the <code>MainClass</code> instance. It also defines a static (<code>Shared</code> in Visual Basic) <code>CreateAttachedValue</code> method that can be assigned to the ConditionalWeakTable(TKey, delegate and passed to the <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_GetValue_\" data-linktype=\"relative-path\">GetValue</a> method. The example calls the <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_GetValue_\" data-linktype=\"relative-path\">GetValue</a> method to add a <code>MainClass</code> object and its corresponding <code>MainInfo</code> object to a <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2\" data-linktype=\"relative-path\">ConditionalWeakTable&lt;TKey,TValue&gt;</a> table. The example also illustrates calls to the <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_Add_\" data-linktype=\"relative-path\">Add</a> and <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_GetOrCreateValue_\" data-linktype=\"relative-path\">GetOrCreateValue</a> methods to add key/value pairs to the table, and a call to the <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_TryGetValue_\" data-linktype=\"relative-path\">TryGetValue</a> method to retrieve the value that belongs to an existing key.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1\">Imports System.Reflection\nImports System.Runtime.CompilerServices\n\nPublic Class Example\n   Public Name As String\n   \n   Public Sub New(name As String)\n      Me.Name = name\n   End Sub\n   \n   Public Overrides Function ToString() As String\n      Return Me.Name\n   End Function\nEnd Class\n\n&#39; Define a class to contain information about each Example instance.\nPublic Class ExampleInfo\n   Public Name As String\n   Public Methods As Integer\n   Public Properties As Integer\n   \n   Public Overrides Function ToString() As String\n      Return String.Format(&quot;{0}: {1} Methods, {2} Properties&quot;, _\n                           Me.Name, Me.Methods, Me.Properties)\n   End Function\nEnd Class\n\nModule TestExample\n\n   Private flags As BindingFlags = BindingFlags.Public Or BindingFlags.Instance\n\n   Public Sub Main()\n      Dim ex1 As New Example(&quot;ex1&quot;)\n      Dim ex2 As New Example(&quot;ex2&quot;)\n      Dim ex3 As New Example(&quot;ex3&quot;)\n      \n      Dim exInfo1 As New ExampleInfo() \n      exInfo1.Name = ex1.ToString()\n      exInfo1.Methods = ex1.GetType().GetMethods(flags).Count\n      exInfo1.Properties = ex1.GetType().GetProperties(flags).Count\n      \n      Dim exInfo3 As New ExampleInfo() \n      exInfo3.Name = ex3.ToString()\n      exInfo3.Methods = ex3.GetType().GetMethods(flags).Count\n      exInfo3.Properties = ex3.GetType().GetProperties(flags).Count\n\n      Dim attached As New ConditionalWeakTable(Of Example, ExampleInfo)\n      Dim value As ExampleInfo = Nothing\n\n      &#39; Attach a property to ex1 using the Add method, then retrieve it.\n      attached.Add(ex1, exInfo1)\n      If attached.TryGetValue(ex1, value) Then\n         Console.WriteLine(&quot;{0}, {1}&quot;, ex1, value)\n      Else\n         Console.WriteLine(&quot;{0} does not have an attached property.&quot;, ex1)\n      End If\n\n      &#39; Attempt to retrieve the value attached to ex2.\n      value = attached.GetValue(ex2, AddressOf TestExample.CreateAttachedValue)      \n      If attached.TryGetValue(ex2, value) Then\n         Console.WriteLine(&quot;{0}, {1}&quot;, ex2, value)\n      Else \n         Console.WriteLine(&quot;{0} does not have an attached property.&quot;, ex2)\n      End If\n      \n      &#39; Atttempt to retrieve the value attached to ex3.\n      value = attached.GetOrCreateValue(ex3)\n      Console.WriteLine(&quot;{0}, {1}&quot;, ex3, value)\n   End Sub\n   \n   Public Function CreateAttachedValue(ex As Example) As ExampleInfo\n      Dim info As New ExampleInfo()\n      info.Name = ex.ToString()\n      info.Methods = ex.GetType().GetMethods(flags).Count\n      info.Properties = ex.GetType().GetProperties(flags).Count\n      Return info\n   End Function\nEnd Module\n&#39; The example displays the following output:\n&#39;       ex1, ex1: 4 Methods, 0 Properties\n&#39;       ex2, ex2: 4 Methods, 0 Properties\n&#39;       ex3, : 0 Methods, 0 Properties\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1\">using System;\nusing System.Reflection;\nusing System.Runtime.CompilerServices;\n\npublic class Example\n{\n   string Name; \n   \n   public Example(string name)\n   {\n      this.Name = name;\n   }\n   \n   public override string ToString()\n   {\n      return this.Name;\n   }\n}\n\n// Define a class to contain information about each Example instance.\npublic class ExampleInfo\n{\n   public string Name;\n   public int Methods;\n   public int Properties;\n   \n   public override string ToString()\n   {\n      return String.Format(&quot;{0}: {1} Methods, {2} Properties&quot;, \n                           this.Name, this.Methods, this.Properties);\n   }\n}\n\npublic class ExampleTest\n{\n   private static BindingFlags flags = BindingFlags.Public | BindingFlags.Instance;\n\n   public static void Main()\n   {\n      Example ex1 = new Example(&quot;ex1&quot;);\n      Example ex2 = new Example(&quot;ex2&quot;);\n      Example ex3 = new Example(&quot;ex3&quot;);\n      \n      ExampleInfo exInfo1 = new ExampleInfo(); \n      exInfo1.Name = ex1.ToString();\n      exInfo1.Methods = ex1.GetType().GetMethods(flags).Length;\n      exInfo1.Properties = ex1.GetType().GetProperties(flags).Length;\n      \n      ExampleInfo exInfo3 = new ExampleInfo(); \n      exInfo3.Name = ex3.ToString();\n      exInfo3.Methods = ex3.GetType().GetMethods(flags).Length;\n      exInfo3.Properties = ex3.GetType().GetProperties(flags).Length;\n\n      var attached = new ConditionalWeakTable&lt;Example, ExampleInfo&gt;();\n      ExampleInfo value = null;\n\n      // Attach a property to ex1 using the Add method, then retrieve it.\n      attached.Add(ex1, exInfo1);\n      if (attached.TryGetValue(ex1, out value))\n         Console.WriteLine(&quot;{0}, {1}&quot;, ex1, value);\n      else\n         Console.WriteLine(&quot;{0} does not have an attached property.&quot;, ex1);\n\n      // Attempt to retrieve the value attached to ex2.\n      value = attached.GetValue(ex2, ExampleTest.CreateAttachedValue);      \n      if (attached.TryGetValue(ex2, out value))\n         Console.WriteLine(&quot;{0}, {1}&quot;, ex2, value);\n      else \n         Console.WriteLine(&quot;{0} does not have an attached property.&quot;, ex2);\n      \n      // Attempt to retrieve the value attached to ex3.\n      value = attached.GetOrCreateValue(ex3);\n      Console.WriteLine(&quot;{0}, {1}&quot;, ex3, value);\n   }\n\n   public static ExampleInfo CreateAttachedValue(Example ex)\n   {\n      ExampleInfo info = new ExampleInfo();\n      info.Name = ex.ToString();\n      info.Methods = ex.GetType().GetMethods(flags).Length;\n      info.Properties = ex.GetType().GetProperties(flags).Length;\n      return info;\n   }\n}\n// The example displays the following output:\n//       ex1, ex1: 4 Methods, 0 Properties\n//       ex2, ex2: 4 Methods, 0 Properties\n//       ex3, : 0 Methods, 0 Properties\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ConditionalWeakTable(TKey, delegate encapsulates a callback method that is invoked by the <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_GetValue_\" data-linktype=\"relative-path\">GetValue</a> method when the key passed to the method is not found in the <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2\" data-linktype=\"relative-path\">ConditionalWeakTable&lt;TKey,TValue&gt;</a> object. The <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_GetValue_\" data-linktype=\"relative-path\">GetValue</a> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached. The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.  </p>\n<p> The ConditionalWeakTable(TKey, method is used to return an instance of a reference type that can be attached to the specified key. It enables that instance to be initialized using non-default values. If the key is not found in the table, the <a class=\"xref\" href=\"system.runtime.compilerservices.conditionalweaktable-2#System_Runtime_CompilerServices_ConditionalWeakTable_2_GetOrCreateValue_\" data-linktype=\"relative-path\">GetOrCreateValue</a> method adds a key/value pair in which the value is initialized using default values.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.CompilerServices.ConditionalWeakTable-2.CreateValueCallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"b1f76af4-dd73-0b50-02d8-f3db59bbf125\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a method that creates a non-default value to add as part of a key/value pair to a  object.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.runtime.compilerservices/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Runtime.CompilerServices.ConditionalWeakTable-2.CreateValueCallback.yml","open_to_public_contributors":false,"api_name":["System.Runtime.CompilerServices.ConditionalWeakTable<TKey,TValue>.CreateValueCallback","System.Runtime.CompilerServices.ConditionalWeakTable<TKey,TValue>.CreateValueCallback..ctor","System.Runtime.CompilerServices.ConditionalWeakTable<TKey,TValue>.CreateValueCallback.Invoke","System.Runtime.CompilerServices.ConditionalWeakTable<TKey,TValue>.CreateValueCallback.BeginInvoke","System.Runtime.CompilerServices.ConditionalWeakTable<TKey,TValue>.CreateValueCallback.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback","System::Runtime::CompilerServices::ConditionalWeakTable`2::CreateValueCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"b1f76af4-dd73-0b50-02d8-f3db59bbf125","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Runtime.CompilerServices/ConditionalWeakTable`2+CreateValueCallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConditionalWeakTable<TKey,TValue>.CreateValueCallback delegate | Microsoft Docs","_op_ogTitle":"ConditionalWeakTable<TKey,TValue>.CreateValueCallback delegate","description":"Represents a method that creates a non-default value to add as part of a key/value pair to a  object.\n","toc_asset_id":"api/_splitted/System.Runtime.CompilerServices/toc.json","toc_rel":"_splitted/System.Runtime.CompilerServices/toc.json","source_url":"","ms.assetid":"System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2.createvaluecallback","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2.createvaluecallback","fileRelativePath":"api/System.Runtime.CompilerServices.ConditionalWeakTable-2.CreateValueCallback.html"},"themesRelativePathToOutputRoot":"_themes/"}