{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataGridViewBand</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a linear collection of elements in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class DataGridViewBand : System.Windows.Forms.DataGridViewElement, ICloneable, IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement\" data-linktype=\"relative-path\">DataGridViewElement</a></span></div><span class=\"lang-csharp\">DataGridViewBand</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object, Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_DataGridView\" data-linktype=\"relative-path\">DataGridView</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentDoubleClick(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellValueChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellValueChanged(DataGridViewCellEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseDataError_System_Windows_Forms_DataGridViewDataErrorEventArgs_\" data-linktype=\"relative-path\">RaiseDataError(DataGridViewDataErrorEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseWheel(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_State\" data-linktype=\"relative-path\">State</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example uses a DataGridViewBand to manipulate properties of groups of cells in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#0\">#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;system.windows.forms.dll&gt;\n#using &lt;system.drawing.dll&gt;\n\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System;\nusing namespace System::Collections;\npublic ref class DataGridViewBandDemo: public Form\n{\nprivate:\n\n#pragma region S &quot; form setup &quot; \n\npublic:\n   DataGridViewBandDemo()\n   {\n      Button1 = gcnew Button;\n      Button2 = gcnew Button;\n      Button3 = gcnew Button;\n      Button4 = gcnew Button;\n      Button5 = gcnew Button;\n      Button6 = gcnew Button;\n      Button7 = gcnew Button;\n      Button8 = gcnew Button;\n      Button9 = gcnew Button;\n      Button10 = gcnew Button;\n      FlowLayoutPanel1 = gcnew FlowLayoutPanel;\n      InitializeComponent();\n      thirdColumnHeader = L&quot;Main Ingredients&quot;;\n      boringMeatloaf = L&quot;ground beef&quot;;\n      boringMeatloafRanking = L&quot;*&quot;;\n      AddButton( Button1, L&quot;Reset&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button1_Click ) );\n      AddButton( Button2, L&quot;Change Column 3 Header&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button2_Click ) );\n      AddButton( Button3, L&quot;Change Meatloaf Recipe&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button3_Click ) );\n      AddAdditionalButtons();\n      InitializeDataGridView();\n   }\n\n   DataGridView^ dataGridView;\n   Button^ Button1;\n   Button^ Button2;\n   Button^ Button3;\n   Button^ Button4;\n   Button^ Button5;\n   Button^ Button6;\n   Button^ Button7;\n   Button^ Button8;\n   Button^ Button9;\n   Button^ Button10;\n   FlowLayoutPanel^ FlowLayoutPanel1;\n\nprivate:\n   void InitializeComponent()\n   {\n      FlowLayoutPanel1-&gt;Location = Point(454,0);\n      FlowLayoutPanel1-&gt;AutoSize = true;\n      FlowLayoutPanel1-&gt;FlowDirection = FlowDirection::TopDown;\n      AutoSize = true;\n      ClientSize = System::Drawing::Size( 614, 360 );\n      FlowLayoutPanel1-&gt;Name = L&quot;flowlayoutpanel&quot;;\n      Controls-&gt;Add( this-&gt;FlowLayoutPanel1 );\n      Text = this-&gt;GetType()-&gt;Name;\n   }\n\n\n#pragma endregion \n#pragma region S &quot; setup DataGridView &quot; \n   String^ thirdColumnHeader;\n   String^ boringMeatloaf;\n   String^ boringMeatloafRanking;\n   bool boringRecipe;\n   Boolean shortMode;\n   void InitializeDataGridView()\n   {\n      dataGridView = gcnew System::Windows::Forms::DataGridView;\n      Controls-&gt;Add( dataGridView );\n      dataGridView-&gt;Size = System::Drawing::Size( 300, 200 );\n      \n      // Create an unbound DataGridView by declaring a\n      // column count.\n      dataGridView-&gt;ColumnCount = 4;\n      AdjustDataGridViewSizing();\n      \n      // Set the column header style.\n      DataGridViewCellStyle^ columnHeaderStyle = gcnew DataGridViewCellStyle;\n      columnHeaderStyle-&gt;BackColor = Color::Aqua;\n      columnHeaderStyle-&gt;Font = gcnew System::Drawing::Font( L&quot;Verdana&quot;,10,FontStyle::Bold );\n      dataGridView-&gt;ColumnHeadersDefaultCellStyle = columnHeaderStyle;\n      \n      // Set the column header names.\n      dataGridView-&gt;Columns[ 0 ]-&gt;Name = L&quot;Recipe&quot;;\n      dataGridView-&gt;Columns[ 1 ]-&gt;Name = L&quot;Category&quot;;\n      dataGridView-&gt;Columns[ 2 ]-&gt;Name = thirdColumnHeader;\n      dataGridView-&gt;Columns[ 3 ]-&gt;Name = L&quot;Rating&quot;;\n      \n      // Populate the rows.\n      array&lt;String^&gt;^row1 = gcnew array&lt;String^&gt;{\n         L&quot;Meatloaf&quot;,L&quot;Main Dish&quot;,boringMeatloaf,boringMeatloafRanking\n      };\n      array&lt;String^&gt;^row2 = gcnew array&lt;String^&gt;{\n         L&quot;Key Lime Pie&quot;,L&quot;Dessert&quot;,L&quot;lime juice, evaporated milk&quot;,L&quot;****&quot;\n      };\n      array&lt;String^&gt;^row3 = gcnew array&lt;String^&gt;{\n         L&quot;Orange-Salsa Pork Chops&quot;,L&quot;Main Dish&quot;,L&quot;pork chops, salsa, orange juice&quot;,L&quot;****&quot;\n      };\n      array&lt;String^&gt;^row4 = gcnew array&lt;String^&gt;{\n         L&quot;Black Bean and Rice Salad&quot;,L&quot;Salad&quot;,L&quot;black beans, brown rice&quot;,L&quot;****&quot;\n      };\n      array&lt;String^&gt;^row5 = gcnew array&lt;String^&gt;{\n         L&quot;Chocolate Cheesecake&quot;,L&quot;Dessert&quot;,L&quot;cream cheese&quot;,L&quot;***&quot;\n      };\n      array&lt;String^&gt;^row6 = gcnew array&lt;String^&gt;{\n         L&quot;Black Bean Dip&quot;,L&quot;Appetizer&quot;,L&quot;black beans, sour cream&quot;,L&quot;***&quot;\n      };\n      array&lt;Object^&gt;^rows = gcnew array&lt;Object^&gt;{\n         row1,row2,row3,row4,row5,row6\n      };\n      System::Collections::IEnumerator^ myEnum = rows-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         array&lt;String^&gt;^rowArray = safe_cast&lt;array&lt;String^&gt;^&gt;(myEnum-&gt;Current);\n         dataGridView-&gt;Rows-&gt;Add( rowArray );\n      }\n\n      PostRowCreation();\n      shortMode = false;\n      boringRecipe = true;\n   }\n\n   void AddButton( Button^ button, String^ buttonLabel, EventHandler^ handler )\n   {\n      FlowLayoutPanel1-&gt;Controls-&gt;Add( button );\n      button-&gt;TabIndex = FlowLayoutPanel1-&gt;Controls-&gt;Count;\n      button-&gt;Text = buttonLabel;\n      button-&gt;AutoSize = true;\n      button-&gt;Click += handler;\n   }\n\n\n   // Reset columns to initial disorderly arrangement.\n   void Button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Controls-&gt;Remove( dataGridView );\n      dataGridView-&gt;~DataGridView();\n      InitializeDataGridView();\n   }\n\n\n   // Change the header in column three.\n   void Button2_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Toggle(  &amp;shortMode );\n      if ( shortMode )\n      {\n         dataGridView-&gt;Columns[ 2 ]-&gt;HeaderText = L&quot;S&quot;;\n      }\n      else\n      {\n         dataGridView-&gt;Columns[ 2 ]-&gt;HeaderText = thirdColumnHeader;\n      }\n   }\n\n   void Toggle( interior_ptr&lt;Boolean&gt; toggleThis )\n   {\n       *toggleThis =  ! *toggleThis;\n   }\n\n\n   // Change the meatloaf recipe.\n   void Button3_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Toggle(  &amp;boringRecipe );\n      if ( boringRecipe )\n      {\n         SetMeatloaf( boringMeatloaf, boringMeatloafRanking );\n      }\n      else\n      {\n         String^ greatMeatloafRecipe = L&quot;1 lb. lean ground beef, &quot;\n         L&quot;1/2 cup bread crumbs, 1/4 cup ketchup,&quot;\n         L&quot;1/3 tsp onion powder, &quot;\n         L&quot;1 clove of garlic, 1/2 pack onion soup mix &quot;\n         L&quot; dash of your favorite BBQ Sauce&quot;;\n         SetMeatloaf( greatMeatloafRecipe, L&quot;***&quot; );\n      }\n   }\n\n   void SetMeatloaf( String^ recipe, String^ rating )\n   {\n      dataGridView-&gt;Rows[ 0 ]-&gt;Cells[ 2 ]-&gt;Value = recipe;\n      dataGridView-&gt;Rows[ 0 ]-&gt;Cells[ 3 ]-&gt;Value = rating;\n   }\n\n\n#pragma endregion \n#pragma region S &quot; demonstration code &quot; \n   void AddAdditionalButtons()\n   {\n      AddButton( Button4, L&quot;Freeze First Row&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button4_Click ) );\n      AddButton( Button5, L&quot;Freeze Second Column&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button5_Click ) );\n      AddButton( Button6, L&quot;Hide Salad Row&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button6_Click ) );\n      AddButton( Button7, L&quot;Disable First Column Resizing&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button7_Click ) );\n      AddButton( Button8, L&quot;Make ReadOnly&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button8_Click ) );\n      AddButton( Button9, L&quot;Style Using Tag&quot;, gcnew EventHandler( this, &amp;DataGridViewBandDemo::Button9_Click ) );\n   }\n\n   void AdjustDataGridViewSizing()\n   {\n      dataGridView-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::AllCells;\n      dataGridView-&gt;ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode::AutoSize;\n   }\n\n\n   // Freeze the first row.\n   void Button4_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      FreezeBand( dataGridView-&gt;Rows[ 0 ] );\n   }\n\n   void Button5_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      FreezeBand( dataGridView-&gt;Columns[ 1 ] );\n   }\n\n   void FreezeBand( DataGridViewBand^ band )\n   {\n      band-&gt;Frozen = true;\n      DataGridViewCellStyle^ style = gcnew DataGridViewCellStyle;\n      style-&gt;BackColor = Color::WhiteSmoke;\n      band-&gt;DefaultCellStyle = style;\n   }\n\n\n   // Hide a band of cells.\n   void Button6_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      DataGridViewBand^ band = dataGridView-&gt;Rows[ 3 ];\n      band-&gt;Visible = false;\n   }\n\n\n   // Turn off user&#39;s ability to resize a column.\n   void Button7_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      DataGridViewBand^ band = dataGridView-&gt;Columns[ 0 ];\n      band-&gt;Resizable = DataGridViewTriState::False;\n   }\n\n\n   // Make the the entire DataGridView read only.\n   void Button8_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      System::Collections::IEnumerator^ myEnum = dataGridView-&gt;Columns-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         DataGridViewBand^ band = safe_cast&lt;DataGridViewBand^&gt;(myEnum-&gt;Current);\n         band-&gt;ReadOnly = true;\n      }\n   }\n\n\n   void PostRowCreation()\n   {\n      SetBandColor( dataGridView-&gt;Columns[ 0 ], Color::CadetBlue );\n      SetBandColor( dataGridView-&gt;Rows[ 1 ], Color::Coral );\n      SetBandColor( dataGridView-&gt;Columns[ 2 ], Color::DodgerBlue );\n   }\n\n   void SetBandColor( DataGridViewBand^ band, Color color )\n   {\n      band-&gt;Tag = color;\n   }\n\n\n   // Color the bands by the value stored in their tag.\n   void Button9_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      IEnumerator^ myEnum1 = dataGridView-&gt;Columns-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DataGridViewBand^ band = static_cast&lt;DataGridViewBand^&gt;(myEnum1-&gt;Current);\n         if ( band-&gt;Tag != nullptr )\n         {\n            band-&gt;DefaultCellStyle-&gt;BackColor =  *dynamic_cast&lt;Color^&gt;(band-&gt;Tag);\n         }\n      }\n\n      IEnumerator^ myEnum2 = safe_cast&lt;IEnumerable^&gt;(dataGridView-&gt;Rows)-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         DataGridViewBand^ band = safe_cast&lt;DataGridViewBand^&gt;(myEnum2-&gt;Current);\n         if ( band-&gt;Tag != nullptr )\n         {\n            band-&gt;DefaultCellStyle-&gt;BackColor =  *dynamic_cast&lt;Color^&gt;(band-&gt;Tag);\n         }\n      }\n   }\n\n\n#pragma endregion \n\npublic:\n   static void Main()\n   {\n      Application::Run( gcnew DataGridViewBandDemo );\n   }\n};\n\nint main()\n{\n   DataGridViewBandDemo::Main();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#0\">using System.Drawing;\nusing System.Windows.Forms;\nusing System;\n\npublic class DataGridViewBandDemo : Form\n{\n    #region &quot;form setup&quot;\n    public DataGridViewBandDemo()\n    {\n        InitializeComponent();\n\n        AddButton(Button1, &quot;Reset&quot;,\n            new EventHandler(Button1_Click));\n        AddButton(Button2, &quot;Change Column 3 Header&quot;,\n            new EventHandler(Button2_Click));\n        AddButton(Button3, &quot;Change Meatloaf Recipe&quot;,\n            new EventHandler(Button3_Click));\n        AddAdditionalButtons();\n\n        InitializeDataGridView();\n    }\n\n    DataGridView dataGridView;\n    Button Button1 = new Button();\n    Button Button2 = new Button();\n    Button Button3 = new Button();\n    Button Button4 = new Button();\n    Button Button5 = new Button();\n    Button Button6 = new Button();\n    Button Button7 = new Button();\n    Button Button8 = new Button();\n    Button Button9 = new Button();\n    Button Button10 = new Button();\n    FlowLayoutPanel FlowLayoutPanel1 = new FlowLayoutPanel();\n\n    private void InitializeComponent()\n    {\n        FlowLayoutPanel1.Location = new Point(454, 0);\n        FlowLayoutPanel1.AutoSize = true;\n        FlowLayoutPanel1.FlowDirection = FlowDirection.TopDown;\n        AutoSize = true;\n        ClientSize = new System.Drawing.Size(614, 360);\n        FlowLayoutPanel1.Name = &quot;flowlayoutpanel&quot;;\n        Controls.Add(this.FlowLayoutPanel1);\n        Text = this.GetType().Name;\n    }\n    #endregion\n\n    #region &quot;setup DataGridView&quot;\n\n    private string thirdColumnHeader = &quot;Main Ingredients&quot;;\n    private string boringMeatloaf = &quot;ground beef&quot;;\n    private string boringMeatloafRanking = &quot;*&quot;;\n    private bool boringRecipe;\n    private bool shortMode;\n\n    private void InitializeDataGridView()\n    {\n        dataGridView = new System.Windows.Forms.DataGridView();\n        Controls.Add(dataGridView);\n        dataGridView.Size = new Size(300, 200);\n\n        // Create an unbound DataGridView by declaring a\n        // column count.\n        dataGridView.ColumnCount = 4;\n        AdjustDataGridViewSizing();\n\n        // Set the column header style.\n        DataGridViewCellStyle columnHeaderStyle =\n            new DataGridViewCellStyle();\n        columnHeaderStyle.BackColor = Color.Aqua;\n        columnHeaderStyle.Font =\n            new Font(&quot;Verdana&quot;, 10, FontStyle.Bold);\n        dataGridView.ColumnHeadersDefaultCellStyle =\n            columnHeaderStyle;\n\n        // Set the column header names.\n        dataGridView.Columns[0].Name = &quot;Recipe&quot;;\n        dataGridView.Columns[1].Name = &quot;Category&quot;;\n        dataGridView.Columns[2].Name = thirdColumnHeader;\n        dataGridView.Columns[3].Name = &quot;Rating&quot;;\n\n        // Populate the rows.\n        string[] row1 = new string[]{&quot;Meatloaf&quot;, \n                                        &quot;Main Dish&quot;, boringMeatloaf, boringMeatloafRanking};\n        string[] row2 = new string[]{&quot;Key Lime Pie&quot;, \n                                        &quot;Dessert&quot;, &quot;lime juice, evaporated milk&quot;, &quot;****&quot;};\n        string[] row3 = new string[]{&quot;Orange-Salsa Pork Chops&quot;, \n                                        &quot;Main Dish&quot;, &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot;};\n        string[] row4 = new string[]{&quot;Black Bean and Rice Salad&quot;, \n                                        &quot;Salad&quot;, &quot;black beans, brown rice&quot;, &quot;****&quot;};\n        string[] row5 = new string[]{&quot;Chocolate Cheesecake&quot;, \n                                        &quot;Dessert&quot;, &quot;cream cheese&quot;, &quot;***&quot;};\n        string[] row6 = new string[]{&quot;Black Bean Dip&quot;, &quot;Appetizer&quot;,\n                                        &quot;black beans, sour cream&quot;, &quot;***&quot;};\n        object[] rows = new object[] { row1, row2, row3, row4, row5, row6 };\n\n        foreach (string[] rowArray in rows)\n        {\n            dataGridView.Rows.Add(rowArray);\n        }\n\n        PostRowCreation();\n\n        shortMode = false;\n        boringRecipe = true;\n    }\n\n\n    void AddButton(Button button, string buttonLabel,\n        EventHandler handler)\n    {\n        FlowLayoutPanel1.Controls.Add(button);\n        button.TabIndex = FlowLayoutPanel1.Controls.Count;\n        button.Text = buttonLabel;\n        button.AutoSize = true;\n        button.Click += handler;\n    }\n\n    // Reset columns to initial disorderly arrangement.\n    private void Button1_Click(object sender, System.EventArgs e)\n    {\n        Controls.Remove(dataGridView);\n        dataGridView.Dispose();\n        InitializeDataGridView();\n    }\n\n    // Change the header in column three.\n    private void Button2_Click(object sender,\n        System.EventArgs e)\n    {\n        Toggle(ref shortMode);\n        if (shortMode)\n        { dataGridView.Columns[2].HeaderText = &quot;S&quot;; }\n        else\n        { dataGridView.Columns[2].HeaderText = thirdColumnHeader; }\n    }\n\n    private static void Toggle(ref bool toggleThis)\n    {\n        toggleThis = !toggleThis;\n    }\n\n    // Change the meatloaf recipe.\n    private void Button3_Click(object sender,\n        System.EventArgs e)\n    {\n        Toggle(ref boringRecipe);\n        if (boringRecipe)\n        {\n            SetMeatloaf(boringMeatloaf, boringMeatloafRanking);\n        }\n        else\n        {\n            string greatMeatloafRecipe =\n                &quot;1 lb. lean ground beef, &quot; +\n                &quot;1/2 cup bread crumbs, 1/4 cup ketchup,&quot; +\n                &quot;1/3 tsp onion powder, &quot; +\n                &quot;1 clove of garlic, 1/2 pack onion soup mix &quot; +\n                &quot; dash of your favorite BBQ Sauce&quot;;\n            SetMeatloaf(greatMeatloafRecipe, &quot;***&quot;);\n        }\n    }\n\n    private void SetMeatloaf(string recipe, string rating)\n    {\n        dataGridView.Rows[0].Cells[2].Value = recipe;\n        dataGridView.Rows[0].Cells[3].Value = rating;\n    }\n    #endregion\n\n    #region &quot;demonstration code&quot;\n    private void AddAdditionalButtons()\n    {\n        AddButton(Button4, &quot;Freeze First Row&quot;,\n            new EventHandler(Button4_Click));\n        AddButton(Button5, &quot;Freeze Second Column&quot;,\n            new EventHandler(Button5_Click));\n        AddButton(Button6, &quot;Hide Salad Row&quot;,\n            new EventHandler(Button6_Click));\n        AddButton(Button7, &quot;Disable First Column Resizing&quot;,\n            new EventHandler(Button7_Click));\n        AddButton(Button8, &quot;Make ReadOnly&quot;,\n            new EventHandler(Button8_Click));\n        AddButton(Button9, &quot;Style Using Tag&quot;,\n            new EventHandler(Button9_Click));\n    }\n\n    private void AdjustDataGridViewSizing()\n    {\n        dataGridView.AutoSizeRowsMode =\n            DataGridViewAutoSizeRowsMode.AllCells;\n        dataGridView.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.AutoSize;\n    }\n\n    // Freeze the first row.\n    private void Button4_Click(object sender, System.EventArgs e)\n    {\n\n        FreezeBand(dataGridView.Rows[0]);\n    }\n\n    private void Button5_Click(object sender, System.EventArgs e)\n    {\n\n        FreezeBand(dataGridView.Columns[1]);\n    }\n\n    private static void FreezeBand(DataGridViewBand band)\n    {\n        band.Frozen = true;\n        DataGridViewCellStyle style = new DataGridViewCellStyle();\n        style.BackColor = Color.WhiteSmoke;\n        band.DefaultCellStyle = style;\n    }\n\n    // Hide a band of cells.\n    private void Button6_Click(object sender, System.EventArgs e)\n    {\n\n        DataGridViewBand band = dataGridView.Rows[3];\n        band.Visible = false;\n    }\n\n    // Turn off user&#39;s ability to resize a column.\n    private void Button7_Click(object sender, EventArgs e)\n    {\n\n        DataGridViewBand band = dataGridView.Columns[0];\n        band.Resizable = DataGridViewTriState.False;\n    }\n\n    // Make the the entire DataGridView read only.\n    private void Button8_Click(object sender, System.EventArgs e)\n    {\n        foreach (DataGridViewBand band in dataGridView.Columns)\n        {\n            band.ReadOnly = true;\n        }\n    }\n\n    private void PostRowCreation()\n    {\n        SetBandColor(dataGridView.Columns[0], Color.CadetBlue);\n        SetBandColor(dataGridView.Rows[1], Color.Coral);\n        SetBandColor(dataGridView.Columns[2], Color.DodgerBlue);\n    }\n\n    private static void SetBandColor(DataGridViewBand band, Color color)\n    {\n        band.Tag = color;\n    }\n\n    // Color the bands by the value stored in their tag.\n    private void Button9_Click(object sender, System.EventArgs e)\n    {\n\n        foreach (DataGridViewBand band in dataGridView.Columns)\n        {\n            if (band.Tag != null)\n            {\n                band.DefaultCellStyle.BackColor = (Color)band.Tag;\n            }\n        }\n\n        foreach (DataGridViewBand band in dataGridView.Rows)\n        {\n            if (band.Tag != null)\n            {\n                band.DefaultCellStyle.BackColor = (Color)band.Tag;\n            }\n        }\n    }\n    #endregion\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new DataGridViewBandDemo());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#0\">Imports System.Windows.Forms\nImports System.Drawing\n\nPublic Class DataGridViewBandDemo\n    Inherits Form\n\n#Region &quot;Form setup&quot;\n    Public Sub New()\n        MyBase.New()\n        InitializeComponent()\n\n        AddButton(Button1, &quot;Reset&quot;)\n        AddButton(Button2, &quot;Change Column 3 Header&quot;)\n        AddButton(Button3, &quot;Change Meatloaf Recipe&quot;)\n        AddAdditionalButtons()\n    End Sub\n\n    Friend WithEvents dataGridView As DataGridView\n    Friend WithEvents Button1 As Button = New Button()\n    Friend WithEvents Button2 As Button = New Button()\n    Friend WithEvents Button3 As Button = New Button()\n    Friend WithEvents Button4 As Button = New Button()\n    Friend WithEvents Button5 As Button = New Button()\n    Friend WithEvents Button6 As Button = New Button()\n    Friend WithEvents Button7 As Button = New Button()\n    Friend WithEvents Button8 As Button = New Button()\n    Friend WithEvents Button9 As Button = New Button()\n    Friend WithEvents Button10 As Button = New Button()\n    Friend WithEvents FlowLayoutPanel1 As FlowLayoutPanel _\n        = New FlowLayoutPanel()\n\n    Private Sub InitializeComponent()\n        FlowLayoutPanel1.Location = New Point(454, 0)\n        FlowLayoutPanel1.AutoSize = True\n        FlowLayoutPanel1.FlowDirection = FlowDirection.TopDown\n        FlowLayoutPanel1.Name = &quot;flowlayoutpanel&quot;\n        ClientSize = New System.Drawing.Size(614, 360)\n        Controls.Add(FlowLayoutPanel1)\n        Text = Me.GetType.Name\n        AutoSize = True\n    End Sub\n#End Region\n\n#Region &quot;setup DataGridView&quot;\n    Private thirdColumnHeader As String = &quot;Main Ingredients&quot;\n    Private boringMeatloaf As String = &quot;ground beef&quot;\n    Private boringMeatloafRanking As String = &quot;*&quot;\n    Private boringRecipe As Boolean\n    Private shortMode As Boolean\n\n    Private Sub InitializeDataGridView(ByVal ignored As Object, _\n    ByVal ignoredToo As EventArgs) Handles Me.Load\n\n        dataGridView = New System.Windows.Forms.DataGridView\n        Controls.Add(dataGridView)\n        dataGridView.Size = New Size(300, 200)\n\n        &#39; Create an unbound DataGridView by declaring a\n        &#39; column count.\n        dataGridView.ColumnCount = 4\n        AdjustDataGridViewSizing()\n\n        &#39; Set the column header style.\n        Dim columnHeaderStyle As New DataGridViewCellStyle\n        columnHeaderStyle.BackColor = Color.Aqua\n        columnHeaderStyle.Font = _\n            New Font(&quot;Verdana&quot;, 10, FontStyle.Bold)\n        dataGridView.ColumnHeadersDefaultCellStyle = _\n            columnHeaderStyle\n\n        &#39; Set the column header names.\n        dataGridView.Columns(0).Name = &quot;Recipe&quot;\n        dataGridView.Columns(1).Name = &quot;Category&quot;\n        dataGridView.Columns(2).Name = thirdColumnHeader\n        dataGridView.Columns(3).Name = &quot;Rating&quot;\n\n        &#39; Populate the rows.\n        Dim row1 As String() = New String() _\n            {&quot;Meatloaf&quot;, &quot;Main Dish&quot;, boringMeatloaf, _\n            boringMeatloafRanking}\n        Dim row2 As String() = New String() _\n            {&quot;Key Lime Pie&quot;, &quot;Dessert&quot;, _\n            &quot;lime juice, evaporated milk&quot;, _\n            &quot;****&quot;}\n        Dim row3 As String() = New String() _\n            {&quot;Orange-Salsa Pork Chops&quot;, &quot;Main Dish&quot;, _\n            &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot;}\n        Dim row4 As String() = New String() _\n            {&quot;Black Bean and Rice Salad&quot;, &quot;Salad&quot;, _\n            &quot;black beans, brown rice&quot;, _\n            &quot;****&quot;}\n        Dim row5 As String() = New String() _\n            {&quot;Chocolate Cheesecake&quot;, &quot;Dessert&quot;, &quot;cream cheese&quot;, _\n            &quot;***&quot;}\n        Dim row6 As String() = New String() _\n            {&quot;Black Bean Dip&quot;, &quot;Appetizer&quot;, _\n            &quot;black beans, sour cream&quot;, _\n                &quot;***&quot;}\n        Dim rows As Object() = New Object() {row1, row2, _\n            row3, row4, row5, row6}\n\n        Dim rowArray As String()\n        For Each rowArray In rows\n            dataGridView.Rows.Add(rowArray)\n        Next\n\n        PostRowCreation()\n\n        shortMode = False\n        boringRecipe = True\n    End Sub\n\n    Protected Sub AddButton(ByVal button As Button, _\n        ByVal buttonLabel As String)\n\n        FlowLayoutPanel1.Controls.Add(button)\n        button.TabIndex = FlowLayoutPanel1.Controls.Count\n        button.Text = buttonLabel\n        button.AutoSize = True\n    End Sub\n\n    &#39; Reset columns to initial disorderly arrangement.\n    Private Sub ResetToDisorder(ByVal sender As Object, _\n        ByVal e As System.EventArgs) _\n        Handles Button1.Click\n        Controls.Remove(dataGridview)\n        dataGridView.Dispose()\n        InitializeDataGridView(Nothing, Nothing)\n    End Sub\n\n    &#39; Change the header in column three.\n    Private Sub Button2_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) _\n        Handles Button2.Click\n\n        Toggle(shortMode)\n        If shortMode Then dataGridView.Columns(2).HeaderText = _\n            &quot;S&quot; _\n            Else dataGridView.Columns(2).HeaderText = _\n                thirdColumnHeader\n    End Sub\n\n    Private Shared Sub Toggle(ByRef toggleThis As Boolean)\n        toggleThis = Not toggleThis\n    End Sub\n\n    &#39; Change the meatloaf recipe.\n    Private Sub Button3_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) _\n        Handles Button3.Click\n\n        Toggle(boringRecipe)\n        If boringRecipe Then\n            SetMeatloaf(boringMeatloaf, boringMeatloafRanking)\n        Else\n            Dim greatMeatloafRecipe As String = &quot;1 lb. lean ground beef, &quot; _\n                &amp; &quot;1/2 cup bread crumbs, 1/4 cup ketchup,&quot; _\n                &amp; &quot;1/3 tsp onion powder, &quot; _\n                &amp; &quot;1 clove of garlic, 1/2 pack onion soup mix &quot; _\n                &amp; &quot; dash of your favorite BBQ Sauce&quot;\n            SetMeatloaf(greatMeatloafRecipe, &quot;***&quot;)\n        End If\n    End Sub\n\n    Private Sub SetMeatloaf(ByVal recipe As String, _\n        ByVal rating As String)\n\n        dataGridView.Rows(0).Cells(2).Value = recipe\n        dataGridView.Rows(0).Cells(3).Value = rating\n    End Sub\n#End Region\n\n#Region &quot;demonstration code&quot;\n    Private Sub AddAdditionalButtons()\n        AddButton(Button4, &quot;Freeze First Row&quot;)\n        AddButton(Button5, &quot;Freeze Second Column&quot;)\n        AddButton(Button6, &quot;Hide Salad Row&quot;)\n        AddButton(Button7, &quot;Disable First Column Resizing&quot;)\n        AddButton(Button8, &quot;Make ReadOnly&quot;)\n        AddButton(Button9, &quot;Style Using Tag&quot;)\n    End Sub\n\n    Private Sub AdjustDataGridViewSizing()\n        dataGridView.AutoSizeRowsMode = _\n            DataGridViewAutoSizeRowsMode.AllCells\n        dataGridView.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.AutoSize\n    End Sub\n\n    &#39; Freeze the first row.\n    Private Sub Button4_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button4.Click\n\n        FreezeBand(dataGridView.Rows(0))\n    End Sub\n\n    Private Sub FreezeColumn(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button5.Click\n\n        FreezeBand(dataGridView.Columns(1))\n    End Sub\n\n    Private Shared Sub FreezeBand(ByVal band As DataGridViewBand)\n\n        band.Frozen = True\n        Dim style As DataGridViewCellStyle = New DataGridViewCellStyle()\n        style.BackColor = Color.WhiteSmoke\n        band.DefaultCellStyle = style\n\n    End Sub\n\n    &#39; Hide a band of cells.\n    Private Sub Button6_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button6.Click\n\n        Dim band As DataGridViewBand = dataGridView.Rows(3)\n        band.Visible = False\n    End Sub\n\n    &#39; Turn off user&#39;s ability to resize a column.\n    Private Sub Button7_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button7.Click\n\n        Dim band As DataGridViewBand = dataGridView.Columns(0)\n        band.Resizable = DataGridViewTriState.False\n    End Sub\n\n    &#39; Make the the entire DataGridView read only.\n    Private Sub Button8_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button8.Click\n\n        For Each band As DataGridViewBand In dataGridView.Columns\n            band.ReadOnly = True\n        Next\n    End Sub\n\n    Private Sub PostRowCreation()\n        SetBandColor(dataGridView.Columns(0), Color.CadetBlue)\n        SetBandColor(dataGridView.Rows(1), Color.Coral)\n        SetBandColor(dataGridView.Columns(2), Color.DodgerBlue)\n    End Sub\n\n    Private Shared Sub SetBandColor(ByVal band As DataGridViewBand, _\n        ByVal color As Color)\n        band.Tag = color\n    End Sub\n\n    &#39; Color the bands by the value stored in their tag.\n    Private Sub Button9_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button9.Click\n\n        For Each band As DataGridViewBand In dataGridView.Columns\n            If band.Tag IsNot Nothing Then\n                band.DefaultCellStyle.BackColor = _\n                    CType(band.Tag, Color)\n            End If\n        Next\n\n        For Each band As DataGridViewBand In dataGridView.Rows\n            If band.Tag IsNot Nothing Then\n                band.DefaultCellStyle.BackColor = _\n                    CType(band.Tag, Color)\n            End If\n        Next\n    End Sub\n#End Region\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New DataGridViewBandDemo())\n    End Sub\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The DataGridViewBand class represents <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> elements joined together in a band that can be manipulated as a group. Each element is typically an instance of <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> or one of its derived classes. Although a <a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a> is associated with each band, header cells are not considered elements of the band.  </p>\n<p> DataGridViewBand is the base class of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> classes. There are no public constructors for the DataGridViewBand type, so the only way to access a band is through columns and rows in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_ContextMenuStrip\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuStrip</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the shortcut menu for the band.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> associated with the current <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The shortcut menu appears when a user clicks the right mouse button in the band&#39;s display area. The display area is a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_DefaultCellStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultCellStyle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the default cell style of the band.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> associated with the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default cell style is applied to cells that do not have an associated style. When getting this property, a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with default values will be created if the default cell style does not exist.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_DefaultHeaderCellType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultHeaderCellType</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the run-time type of the default header cell.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Type DefaultHeaderCellType { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that describes the run-time class of the object used as the default header cell.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified value when setting this property is not a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> representing <a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a> or a derived type.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property must get or set an instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a> class or one of its derived types. For example, the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> class uses a <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheadercell\" data-linktype=\"relative-path\">DataGridViewRowHeaderCell</a> as the default header cell type. Similarly, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> class uses a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell\" data-linktype=\"relative-path\">DataGridViewColumnHeaderCell</a>.  </p>\n<p> If you are using a custom type derived from <a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a> in a row or column, the DefaultHeaderCellType property must be set to the custom type.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Displayed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Displayed</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the band is currently displayed onscreen.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool Displayed { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the band is currently onscreen; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Frozen\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Frozen</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the band will move when a user scrolls through the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool Frozen { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the band cannot be scrolled from view; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property can hold a band of important information in place when a user scrolls through the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. Bands adjacent to the frozen band will move over the frozen band.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_HasDefaultCellStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasDefaultCellStyle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.DataGridViewBand.DefaultCellStyle*</span> property has been set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasDefaultCellStyle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Windows.Forms.DataGridViewBand.DefaultCellStyle*</span> property has been set; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Getting the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property automatically instantiates a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> if the property has not previously been accessed. You must, therefore, use the HasDefaultCellStyle property to determine whether the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property is currently set to a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> instance. This is useful to determine which properties of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property represent styles set specifically for the band.  </p>\n<p> For more information about cell style inheritance, see <a href=\"../topic/cell%20styles%20in%20the%20windows%20forms%20datagridview%20control\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_HeaderCellCore\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HeaderCellCore</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the header cell of the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.Forms.DataGridViewHeaderCell HeaderCellCore { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a> representing the header cell of the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified value when setting this property is not a <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheadercell\" data-linktype=\"relative-path\">DataGridViewRowHeaderCell</a> and this <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> instance is of type <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.  </p>\n<p> -or-  </p>\n<p> The specified value when setting this property is not a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell\" data-linktype=\"relative-path\">DataGridViewColumnHeaderCell</a> and this <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> instance is of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Index\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Index</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the relative position of the band within the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Index { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The zero-based position of the band in the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a> that it is contained within. The default is -1, indicating that there is no associated <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of this property does not necessarily correspond to the current visual position of the band within the collection. For example, if the user reorders columns in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> at run time (assuming the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToOrderColumns_\" data-linktype=\"relative-path\">AllowUserToOrderColumns</a> property is set to <code>true</code>), the value of the Index property of each column will not change. Instead, the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DisplayIndex_\" data-linktype=\"relative-path\">DisplayIndex</a> values change. Sorting rows, however, does change their Index values.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_InheritedStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InheritedStyle</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the cell style in effect for the current band, taking into account style inheritance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> associated with the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The implementation of this property in the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> class always returns <code>null</code> because this base class cannot contain elements.  </p>\n<p> For more information about style inheritance, see <a href=\"../topic/cell%20styles%20in%20the%20windows%20forms%20datagridview%20control\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_IsRow\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsRow</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the band represents a row.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool IsRow { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the band represents a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_ReadOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadOnly</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the user can edit the band&#39;s cells.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool ReadOnly { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the user cannot edit the band&#39;s cells; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>When setting this property, this <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> instance is a shared <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ReadOnly property affects the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> property of each cell in the band. For example, if the ReadOnly property of a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> changes, then the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> property of all cells in the row will change.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Resizable\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Resizable</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the band can be resized in the user interface (UI).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.DataGridViewTriState Resizable { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can prevent users from resizing individual rows or columns by setting their Resizable properties. By default, the Resizable property value is based on the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeColumns_\" data-linktype=\"relative-path\">AllowUserToResizeColumns</a> property value for columns and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeRows_\" data-linktype=\"relative-path\">AllowUserToResizeRows</a> property value for rows. If you explicitly set Resizable to <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>, however, the control value is ignored. Set Resizable to <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a> to restore the inheritance.  </p>\n<p> Because <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a> restores the value inheritance, the Resizable property will never return a <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a> value unless the row or column has not been added to a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. If you need to determine whether the Resizable property value of a row or column is inherited, check its <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_State_\" data-linktype=\"relative-path\">State</a> property. If the <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_State_\" data-linktype=\"relative-path\">State</a> value includes the <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> flag, the Resizable property value is not inherited. If the Resizable property value is <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>, the user will not be able to manually adjust band size.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Selected\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Selected</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the band is in a selected user interface (UI) state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool Selected { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the band is selected; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified value when setting this property is <code>true</code>, but the band has not been added to a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> -or-  </p>\n<p> This property is being set on a shared <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property can be set only if a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property enabled is associated with the band.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Tag\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Tag</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the object that contains data to associate with the band.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Tag { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains information associated with the band. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Tag property can store any object that you want to associate with a band. This property is typically used to store identifying information, such as a string name, a unique identifier (for example, a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>), or the index of the band&#39;s data in a database.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Visible\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Visible</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the band is visible to the user.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool Visible { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the band is visible; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified value when setting this property is <code>false</code> and the band is the row for new records.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property can be used to hide extraneous columns or rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an exact copy of this band.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the cloned <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to duplicate a row or column of cells.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases all resources used by the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> was occupying. For more information, see <a href=\"../topic/cleaning%20up%20unmanaged%20resources\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../topic/implementing%20a%20dispose%20method\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_Finalize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Finalize()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the resources associated with the band.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">~DataGridViewBand ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a>. Application code should not call this method; an object&#39;s <code>Finalize</code> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <a class=\"xref\" href=\"system.gc#System_GC_SuppressFinalize_\" data-linktype=\"relative-path\">SuppressFinalize</a> method.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70\" data-linktype=\"external\">Finalize Methods and Destructors</a>, <a href=\"../topic/cleaning%20up%20unmanaged%20resources\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>, and <a href=\"http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3\" data-linktype=\"external\">Overriding the Finalize Method</a>.  </p>\n<p> When called by the garbage collector, this method calls the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_OnDataGridViewChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDataGridViewChanged()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Called when the band is associated with a different <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void OnDataGridViewChanged ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_DataGridViewBand_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a string that represents the current band.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that represents the current <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides the <a class=\"xref\" href=\"system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a> method. The returned string contains the class&#39;s name and <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Index_\" data-linktype=\"relative-path\">Index</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewBand.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.ContextMenuStrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.DefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.DefaultHeaderCellType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Displayed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Frozen\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.HasDefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.HeaderCellCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Index\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.InheritedStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.IsRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.OnDataGridViewChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Resizable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Selected\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Tag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewBand.Visible\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-28 03:03 AM\">\r\n<meta name=\"document_id\" content=\"5c33aa2f-35c3-4c7a-f96c-52f180aa9b53\">\r\n<meta name=\"internalonly\" content=\"false\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a linear collection of elements in a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewBand\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.DataGridViewBand.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.DataGridViewBand","System.Windows.Forms.DataGridViewBand.Clone","System.Windows.Forms.DataGridViewBand.ContextMenuStrip","System.Windows.Forms.DataGridViewBand.DefaultCellStyle","System.Windows.Forms.DataGridViewBand.DefaultHeaderCellType","System.Windows.Forms.DataGridViewBand.Displayed","System.Windows.Forms.DataGridViewBand.Dispose","System.Windows.Forms.DataGridViewBand.Finalize","System.Windows.Forms.DataGridViewBand.Frozen","System.Windows.Forms.DataGridViewBand.HasDefaultCellStyle","System.Windows.Forms.DataGridViewBand.HeaderCellCore","System.Windows.Forms.DataGridViewBand.Index","System.Windows.Forms.DataGridViewBand.InheritedStyle","System.Windows.Forms.DataGridViewBand.IsRow","System.Windows.Forms.DataGridViewBand.OnDataGridViewChanged","System.Windows.Forms.DataGridViewBand.ReadOnly","System.Windows.Forms.DataGridViewBand.Resizable","System.Windows.Forms.DataGridViewBand.Selected","System.Windows.Forms.DataGridViewBand.Tag","System.Windows.Forms.DataGridViewBand.ToString","System.Windows.Forms.DataGridViewBand.Visible"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewBand","System::Windows::Forms::DataGridViewBand","System.Windows.Forms.DataGridViewBand.Clone","System::Windows::Forms::DataGridViewBand::Clone","System.Windows.Forms.DataGridViewBand.ContextMenuStrip","System::Windows::Forms::DataGridViewBand::ContextMenuStrip","System.Windows.Forms.DataGridViewBand.DefaultCellStyle","System::Windows::Forms::DataGridViewBand::DefaultCellStyle","System.Windows.Forms.DataGridViewBand.DefaultHeaderCellType","System::Windows::Forms::DataGridViewBand::DefaultHeaderCellType","System.Windows.Forms.DataGridViewBand.Displayed","System::Windows::Forms::DataGridViewBand::Displayed","System.Windows.Forms.DataGridViewBand.Dispose","System::Windows::Forms::DataGridViewBand::Dispose","System.Windows.Forms.DataGridViewBand.Finalize","System::Windows::Forms::DataGridViewBand::Finalize","System.Windows.Forms.DataGridViewBand.Frozen","System::Windows::Forms::DataGridViewBand::Frozen","System.Windows.Forms.DataGridViewBand.HasDefaultCellStyle","System::Windows::Forms::DataGridViewBand::HasDefaultCellStyle","System.Windows.Forms.DataGridViewBand.HeaderCellCore","System::Windows::Forms::DataGridViewBand::HeaderCellCore","System.Windows.Forms.DataGridViewBand.Index","System::Windows::Forms::DataGridViewBand::Index","System.Windows.Forms.DataGridViewBand.InheritedStyle","System::Windows::Forms::DataGridViewBand::InheritedStyle","System.Windows.Forms.DataGridViewBand.IsRow","System::Windows::Forms::DataGridViewBand::IsRow","System.Windows.Forms.DataGridViewBand.OnDataGridViewChanged","System::Windows::Forms::DataGridViewBand::OnDataGridViewChanged","System.Windows.Forms.DataGridViewBand.ReadOnly","System::Windows::Forms::DataGridViewBand::ReadOnly","System.Windows.Forms.DataGridViewBand.Resizable","System::Windows::Forms::DataGridViewBand::Resizable","System.Windows.Forms.DataGridViewBand.Selected","System::Windows::Forms::DataGridViewBand::Selected","System.Windows.Forms.DataGridViewBand.Tag","System::Windows::Forms::DataGridViewBand::Tag","System.Windows.Forms.DataGridViewBand.ToString","System::Windows::Forms::DataGridViewBand::ToString","System.Windows.Forms.DataGridViewBand.Visible","System::Windows::Forms::DataGridViewBand::Visible"],"dev_langs":["csharp"],"updated_at":"2017-03-28 03:03 AM","document_id":"5c33aa2f-35c3-4c7a-f96c-52f180aa9b53","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewBand.xml","internalonly":false,"layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewBand class | Microsoft Docs","_op_ogTitle":"DataGridViewBand class","description":"Represents a linear collection of elements in a  control.\n","toc_asset_id":"api/_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewBand","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewband","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewband","fileRelativePath":"api/System.Windows.Forms.DataGridViewBand.html"},"themesRelativePathToOutputRoot":"_themes/"}