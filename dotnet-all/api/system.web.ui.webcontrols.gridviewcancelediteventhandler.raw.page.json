{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">GridViewCancelEditEventHandler</span>\r\n      Delegate\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the method that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public delegate void GridViewCancelEditEventHandler(object sender, GridViewCancelEditEventArgs e);</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span></div><span class=\"lang-csharp\">GridViewCancelEditEventHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example demonstrates how to programmatically add a GridViewCancelEditEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewCancelEditEventHandler#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void Page_Load(Object sender, EventArgs e)\n  {\n        \n    // Create a new GridView object.\n    GridView customerGridView = new GridView();\n         \n    // Set the GridView object&#39;s properties.\n    customerGridView.ID = &quot;CustomersGridView&quot;;\n    customerGridView.DataSourceID = &quot;CustomersSqlDataSource&quot;;\n    customerGridView.AutoGenerateColumns = true;\n    customerGridView.AutoGenerateEditButton = true;\n    customerGridView.DataKeyNames = new String[] { &quot;CustomerID&quot; };\n        \n    // Programmatically register the event-handling methods.\n    customerGridView.RowCancelingEdit += new GridViewCancelEditEventHandler(this.CustomersGridView_RowCancelingEdit);\n    customerGridView.RowUpdated += new GridViewUpdatedEventHandler(this.CustomersGridView_RowUpdated);\n        \n    // Add the GridView object to the Controls collection\n    // of the PlaceHolder control.\n    GridViewPlaceHolder.Controls.Add(customerGridView);\n        \n  }\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n  {\n    \n    // Display a message indicating that the update operation was canceled.\n    Message.Text = &quot;Update for row &quot; + e.RowIndex.ToString() + &quot; canceled.&quot;; \n    \n  }\n\n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n  {\n\n    // The update operation was successful. Clear the message label.\n    Message.Text = &quot;&quot;;\n\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewCancelEditEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridViewCancelEditEventHandler Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;Server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewCancelEditEventHandler#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Create a new GridView object.\n    Dim customerGridView As New GridView()\n         \n    &#39; Set the GridView object&#39;s properties.\n    customerGridView.ID = &quot;CustomersGridView&quot;\n    customerGridView.DataSourceID = &quot;CustomersSqlDataSource&quot;\n    customerGridView.AutoGenerateColumns = True\n    customerGridView.AutoGenerateEditButton = True\n    customerGridView.DataKeyNames = New [String]() {&quot;CustomerID&quot;}\n        \n    &#39; Programmatically register the event-handling methods.\n    AddHandler customerGridView.RowCancelingEdit, AddressOf CustomersGridView_RowCancelingEdit\n    AddHandler customerGridView.RowUpdated, AddressOf CustomersGridView_RowUpdated\n        \n    &#39; Add the GridView object to the Controls collection\n    &#39; of the PlaceHolder control.\n    GridViewPlaceHolder.Controls.Add(customerGridView)\n        \n  End Sub\n    \n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n    \n    &#39; Display a message indicating that the update operation was canceled.\n    Message.Text = &quot;Update for row &quot; + e.RowIndex.ToString() + &quot; canceled.&quot;\n    \n  End Sub\n    \n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n\n    &#39; The update operation was successful. Clear the message label.\n    Message.Text = &quot;&quot;\n\n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewCancelEditEventHandler Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridViewCancelEditEventHandler Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;Server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to declaratively add a GridViewCancelEditEventHandler delegate to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowCancellingEdit#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n  {\n    \n    // Retrieve the row that raised the event from the Rows\n    // collection of the GridView control.\n    GridViewRow row = CustomersGridView.Rows[e.RowIndex];\n    \n    // The update operation was canceled. Display the \n    // primary key of the row. In this example, the primary\n    // key is displayed in the second column of the GridView\n    // control. To access the text of the column, use the Cells\n    // collection of the row.\n    Message.Text = &quot;Update for item &quot; + row.Cells[1].Text + &quot; Canceled.&quot;; \n    \n  }\n\n  void CustomersGridView_RowEditing(Object sender, GridViewEditEventArgs e)\n  {\n\n    // The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;;\n\n  }\n  \n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n  {\n\n    // The update operation was successful. Clear the message label.\n    Message.Text = &quot;&quot;;\n\n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCancelingEdit Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowCancelingEdit Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n      \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot; \n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;    \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowCancellingEdit#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n    \n    &#39; Retrieve the row that raised the event from the Rows\n    &#39; collection of the GridView control.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.RowIndex)\n    \n    &#39; The update operation was canceled. Display the \n    &#39; primary key of the row. In this example, the primary\n    &#39; key is displayed in the second column of the GridView\n    &#39; control. To access the text of the column, use the Cells\n    &#39; collection of the row.\n    Message.Text = &quot;Update for item &quot; &amp; row.Cells(1).Text &amp; &quot; Canceled.&quot;\n    \n  End Sub\n\n  Sub CustomersGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n\n    &#39; The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;\n\n  End Sub\n  \n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n    \n    &#39; The update operation was successful. Clear the message label.\n    Message.Text = &quot;&quot;\n\n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCancelingEdit Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowCancelingEdit Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n      \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot; \n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;    \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This allows you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.  </p>\n<p> When you create a GridViewCancelEditEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a>.</p>\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewCancelEditEventHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewCancelEditEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewCancelEditEventHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewCancelEditEventHandler.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewCancelEditEventHandler.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewCancelEditEventHandler.EndInvoke\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 02:21 PM\">\r\n<meta name=\"document_id\" content=\"a67c49e8-b08e-6bf8-7a0a-eb2470178170\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the method that handles the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.GridViewCancelEditEventHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.GridViewCancelEditEventHandler.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.GridViewCancelEditEventHandler","System.Web.UI.WebControls.GridViewCancelEditEventHandler..ctor","System.Web.UI.WebControls.GridViewCancelEditEventHandler.Invoke","System.Web.UI.WebControls.GridViewCancelEditEventHandler.BeginInvoke","System.Web.UI.WebControls.GridViewCancelEditEventHandler.EndInvoke"],"api_location":[],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.GridViewCancelEditEventHandler","System::Web::UI::WebControls::GridViewCancelEditEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-31 02:21 PM","document_id":"a67c49e8-b08e-6bf8-7a0a-eb2470178170","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/GridViewCancelEditEventHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridViewCancelEditEventHandler delegate | Microsoft Docs","_op_ogTitle":"GridViewCancelEditEventHandler delegate","description":"Represents the method that handles the  event of a  control.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.GridViewCancelEditEventHandler","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewcancelediteventhandler","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.gridviewcancelediteventhandler","fileRelativePath":"api/System.Web.UI.WebControls.GridViewCancelEditEventHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}