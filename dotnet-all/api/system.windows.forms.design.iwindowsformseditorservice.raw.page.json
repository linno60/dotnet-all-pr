{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IWindowsFormsEditorService</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface for a <a class=\"xref\" href=\"system.drawing.design.uitypeeditor\" data-linktype=\"relative-path\">UITypeEditor</a> to display Windows Forms or to display a control in a drop-down area from a property grid control in design mode.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IWindowsFormsEditorService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following example provides an example <a class=\"xref\" href=\"system.drawing.design.uitypeeditor\" data-linktype=\"relative-path\">UITypeEditor</a> that uses an IWindowsFormsEditorService to display a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> for user input.  </p>\n<pre><code class=\"lang-cs\" name=\"WinFormsEditorServiceDialogExample#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Drawing.Design;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\nnamespace IWindowsFormsEditorServiceExample\n{\t\n    // Example UITypeEditor that uses the IWindowsFormsEditorService \n    // to display a Form.\n    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \n    public class TestDialogEditor : UITypeEditor\n    {\n        public TestDialogEditor()\n        {\n        }\n\n        public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context)\n        {\n            // Indicates that this editor can display a Form-based interface.\n            return UITypeEditorEditStyle.Modal;\n        }\n\n        public override object EditValue(\n            ITypeDescriptorContext context, \n            IServiceProvider provider, \n            object value)\n        {\n            // Attempts to obtain an IWindowsFormsEditorService.\n            IWindowsFormsEditorService edSvc = \n                (IWindowsFormsEditorService)provider.GetService(typeof(IWindowsFormsEditorService));\n            if (edSvc == null)\n            {\n                return null;\n            }\n            \n            // Displays a StringInputDialog Form to get a user-adjustable \n            // string value.\n            using (StringInputDialog form = new StringInputDialog((string)value))\n            {\n                if (edSvc.ShowDialog(form) == DialogResult.OK)\n                {\n                    return form.inputTextBox.Text;\n                }\n            }\n\n            // If OK was not pressed, return the original value\n            return value;\n        }        \n    }\n\n    // Example Form for entering a string.\n    internal class StringInputDialog : Form\n    {\n        private System.Windows.Forms.Button ok_button;\n        private System.Windows.Forms.Button cancel_button;\n        public System.Windows.Forms.TextBox inputTextBox;\n\n        public StringInputDialog(string text)\n        {\n            InitializeComponent();\n            inputTextBox.Text = text;\n        }\n\n        private void InitializeComponent()\n        {\n            this.ok_button = new System.Windows.Forms.Button();\n            this.cancel_button = new System.Windows.Forms.Button();\n            this.inputTextBox = new System.Windows.Forms.TextBox();\n            this.SuspendLayout();\n            this.ok_button.Anchor = (System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right);\n            this.ok_button.Location = new System.Drawing.Point(180, 43);\n            this.ok_button.Name = &quot;ok_button&quot;;\n            this.ok_button.TabIndex = 1;\n            this.ok_button.Text = &quot;OK&quot;;      \n            this.ok_button.DialogResult = System.Windows.Forms.DialogResult.OK;            \n            this.cancel_button.Anchor = (System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right);\n            this.cancel_button.Location = new System.Drawing.Point(260, 43);\n            this.cancel_button.Name = &quot;cancel_button&quot;;\n            this.cancel_button.TabIndex = 2;\n            this.cancel_button.Text = &quot;Cancel&quot;;            \n            this.cancel_button.DialogResult = System.Windows.Forms.DialogResult.Cancel;\n            this.inputTextBox.Location = new System.Drawing.Point(6, 9);\n            this.inputTextBox.Name = &quot;inputTextBox&quot;;\n            this.inputTextBox.Size = new System.Drawing.Size(327, 20);\n            this.inputTextBox.TabIndex = 0;\n            this.inputTextBox.Text = &quot;&quot;;            \n            this.inputTextBox.Anchor = ((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) \n                | System.Windows.Forms.AnchorStyles.Right);\n            this.ClientSize = new System.Drawing.Size(342, 73);\n            this.Controls.AddRange(new System.Windows.Forms.Control[] {\n                                                                          this.inputTextBox,\n                                                                          this.cancel_button,\n                                                                          this.ok_button});\n            this.MinimumSize = new System.Drawing.Size(350, 100);\n            this.Name = &quot;StringInputDialog&quot;;\n            this.Text = &quot;String Input Dialog&quot;;\n            this.ResumeLayout(false);\n        }\n    }\n\n    // Provides an example control that displays instructions in design mode,\n    // with which the example UITypeEditor is associated.\n    public class WinFormsEdServiceDialogExampleControl : UserControl\n    {\n        [EditorAttribute(typeof(TestDialogEditor), typeof(UITypeEditor))]\n        public string TestDialogString\n        {\n            get\n            {\n                return localDialogTestString;\n            }\n            set\n            {\n                localDialogTestString = value;\n            }\n        }\n        private string localDialogTestString;\n      \n        public WinFormsEdServiceDialogExampleControl()\n        {\n            localDialogTestString = &quot;Test String&quot;; \n            this.Size = new Size(210, 74);\n            this.BackColor = Color.Beige;\n        }\n\n        protected override void OnPaint(PaintEventArgs e)\n        {\n            if( this.DesignMode )\n            {\n                e.Graphics.DrawString(&quot;Use the Properties window to show&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 5);\n                e.Graphics.DrawString(&quot;a Form dialog box, using the&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 17);\n                e.Graphics.DrawString(&quot;IWindowsFormsEditorService, for&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 29);\n                e.Graphics.DrawString(&quot;configuring this control&#39;s&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 41);\n                e.Graphics.DrawString(&quot;TestDialogString property.&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 53);\n            }\n            else\n            {\n                e.Graphics.DrawString(&quot;This example requires design mode.&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 5);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"WinFormsEditorServiceDialogExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Drawing::Design;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\nusing namespace System::Security::Permissions;\n\nnamespace IWindowsFormsEditorServiceExample\n{\n   // Example Form for entering a string.\n   private ref class StringInputDialog: public System::Windows::Forms::Form\n   {\n   private:\n      System::Windows::Forms::Button^ ok_button;\n      System::Windows::Forms::Button^ cancel_button;\n\n   public:\n      System::Windows::Forms::TextBox^ inputTextBox;\n      StringInputDialog( String^ text )\n      {\n         InitializeComponent();\n         inputTextBox-&gt;Text = text;\n      }\n\n   private:\n      void InitializeComponent()\n      {\n         this-&gt;ok_button = gcnew System::Windows::Forms::Button;\n         this-&gt;cancel_button = gcnew System::Windows::Forms::Button;\n         this-&gt;inputTextBox = gcnew System::Windows::Forms::TextBox;\n         this-&gt;SuspendLayout();\n         this-&gt;ok_button-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Bottom | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;ok_button-&gt;Location = System::Drawing::Point( 180, 43 );\n         this-&gt;ok_button-&gt;Name = &quot;ok_button&quot;;\n         this-&gt;ok_button-&gt;TabIndex = 1;\n         this-&gt;ok_button-&gt;Text = &quot;OK&quot;;\n         this-&gt;ok_button-&gt;DialogResult = System::Windows::Forms::DialogResult::OK;\n         this-&gt;cancel_button-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Bottom | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;cancel_button-&gt;Location = System::Drawing::Point( 260, 43 );\n         this-&gt;cancel_button-&gt;Name = &quot;cancel_button&quot;;\n         this-&gt;cancel_button-&gt;TabIndex = 2;\n         this-&gt;cancel_button-&gt;Text = &quot;Cancel&quot;;\n         this-&gt;cancel_button-&gt;DialogResult = System::Windows::Forms::DialogResult::Cancel;\n         this-&gt;inputTextBox-&gt;Location = System::Drawing::Point( 6, 9 );\n         this-&gt;inputTextBox-&gt;Name = &quot;inputTextBox&quot;;\n         this-&gt;inputTextBox-&gt;Size = System::Drawing::Size( 327, 20 );\n         this-&gt;inputTextBox-&gt;TabIndex = 0;\n         this-&gt;inputTextBox-&gt;Text = &quot;&quot;;\n         this-&gt;inputTextBox-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Left | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;ClientSize = System::Drawing::Size( 342, 73 );\n         array&lt;System::Windows::Forms::Control^&gt;^temp0 = {this-&gt;inputTextBox,this-&gt;cancel_button,this-&gt;ok_button};\n         this-&gt;Controls-&gt;AddRange( temp0 );\n         this-&gt;MinimumSize = System::Drawing::Size( 350, 100 );\n         this-&gt;Name = &quot;StringInputDialog&quot;;\n         this-&gt;Text = &quot;String Input Dialog&quot;;\n         this-&gt;ResumeLayout( false );\n      }\n   };\n\n   // Example UITypeEditor that uses the IWindowsFormsEditorService\n   // to display a Form.\n   [PermissionSet(SecurityAction::Demand, Name = &quot;FullTrust&quot;)]\n   public ref class TestDialogEditor: public System::Drawing::Design::UITypeEditor\n   {\n   public:\n      TestDialogEditor(){}\n\n      virtual System::Drawing::Design::UITypeEditorEditStyle GetEditStyle( System::ComponentModel::ITypeDescriptorContext^ context ) override\n      {\n         // Indicates that this editor can display a Form-based interface.\n         return UITypeEditorEditStyle::Modal;\n      }\n\n      virtual Object^ EditValue( System::ComponentModel::ITypeDescriptorContext^ context, System::IServiceProvider^ provider, Object^ value ) override\n      {\n         // Attempts to obtain an IWindowsFormsEditorService.\n         IWindowsFormsEditorService^ edSvc = dynamic_cast&lt;IWindowsFormsEditorService^&gt;(provider-&gt;GetService( IWindowsFormsEditorService::typeid ));\n         if ( edSvc == nullptr )\n                  return nullptr;\n         \n         // Displays a StringInputDialog Form to get a user-adjustable\n         // string value.\n         StringInputDialog^ form = gcnew StringInputDialog( dynamic_cast&lt;String^&gt;(value) );\n         if ( edSvc-&gt;ShowDialog( form ) == DialogResult::OK )\n                  return form-&gt;inputTextBox-&gt;Text;\n\n         // If OK was not pressed, return the original value\n         return value;\n      }\n   };\n\n   // Provides an example control that displays instructions in design mode,\n   // with which the example UITypeEditor is associated.\n   public ref class WinFormsEdServiceDialogExampleControl: public UserControl\n   {\n   public:\n\n      property String^ TestDialogString \n      {\n         [EditorAttribute(IWindowsFormsEditorServiceExample::TestDialogEditor::typeid,UITypeEditor::typeid)]\n         String^ get()\n         {\n            return localDialogTestString;\n         }\n\n         void set( String^ value )\n         {\n            localDialogTestString = value;\n         }\n      }\n\n   private:\n      String^ localDialogTestString;\n\n   public:\n      WinFormsEdServiceDialogExampleControl()\n      {\n         localDialogTestString = &quot;Test String&quot;;\n         this-&gt;Size = System::Drawing::Size( 210, 74 );\n         this-&gt;BackColor = Color::Beige;\n      }\n\n   protected:\n      virtual void OnPaint( System::Windows::Forms::PaintEventArgs^ e ) override\n      {\n         if ( this-&gt;DesignMode )\n         {\n            e-&gt;Graphics-&gt;DrawString( &quot;Use the Properties window to show&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 5 );\n            e-&gt;Graphics-&gt;DrawString( &quot;a Form dialog box, using the&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 17 );\n            e-&gt;Graphics-&gt;DrawString( &quot;IWindowsFormsEditorService, for&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 29 );\n            e-&gt;Graphics-&gt;DrawString( &quot;configuring this control&#39;s&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 41 );\n            e-&gt;Graphics-&gt;DrawString( &quot;TestDialogString property.&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 53 );\n         }\n         else\n         {\n            e-&gt;Graphics-&gt;DrawString( &quot;This example requires design mode.&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 5 );\n         }\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WinFormsEditorServiceDialogExample#1\">Imports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Drawing.Design\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n&#39; Example UITypeEditor that uses the IWindowsFormsEditorService \n&#39; to display a Form.\n&lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; Public Class TestDialogEditor\n   Inherits System.Drawing.Design.UITypeEditor\n   \n   Public Sub New()\n    End Sub\n\n    Public Overloads Overrides Function GetEditStyle(ByVal context As ITypeDescriptorContext) As UITypeEditorEditStyle\n        &#39; Indicates that this editor can display a Form-based interface.\n        Return UITypeEditorEditStyle.Modal\n    End Function\n\n    Public Overloads Overrides Function EditValue(ByVal context As ITypeDescriptorContext, ByVal provider As IServiceProvider, ByVal value As Object) As Object\n\n        &#39; Attempts to obtain an IWindowsFormsEditorService.\n        Dim edSvc As IWindowsFormsEditorService = CType(provider.GetService( _\n        GetType(IWindowsFormsEditorService)), IWindowsFormsEditorService)\n        If edSvc Is Nothing Then\n            Return Nothing\n        End If\n\n        &#39; Displays a StringInputDialog Form to get a user-adjustable \n        &#39; string value.\n        Using form As New StringInputDialog(CStr(value))\n            If edSvc.ShowDialog(form) = DialogResult.OK Then\n                Return form.inputTextBox.Text\n            End If\n        End Using\n\n        &#39; If OK was not pressed, return the original value\n        Return value\n\n    End Function\nEnd Class\n\n&#39; Example Form for entering a string.\nFriend Class StringInputDialog\n    Inherits System.Windows.Forms.Form\n\n    Private ok_button As System.Windows.Forms.Button\n    Private cancel_button As System.Windows.Forms.Button\n    Public inputTextBox As System.Windows.Forms.TextBox\n\n    Public Sub New(ByVal [text] As String)\n        InitializeComponent()\n        inputTextBox.Text = [text]\n    End Sub\n\n    Private Sub InitializeComponent()\n        Me.ok_button = New System.Windows.Forms.Button()\n        Me.cancel_button = New System.Windows.Forms.Button()\n        Me.inputTextBox = New System.Windows.Forms.TextBox()\n        Me.SuspendLayout()\n        Me.ok_button.Anchor = System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right\n        Me.ok_button.Location = New System.Drawing.Point(180, 43)\n        Me.ok_button.Name = &quot;ok_button&quot;\n        Me.ok_button.TabIndex = 1\n        Me.ok_button.Text = &quot;OK&quot;\n        Me.ok_button.DialogResult = System.Windows.Forms.DialogResult.OK\n        Me.cancel_button.Anchor = System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right\n        Me.cancel_button.Location = New System.Drawing.Point(260, 43)\n        Me.cancel_button.Name = &quot;cancel_button&quot;\n        Me.cancel_button.TabIndex = 2\n        Me.cancel_button.Text = &quot;Cancel&quot;\n        Me.cancel_button.DialogResult = System.Windows.Forms.DialogResult.Cancel\n        Me.inputTextBox.Location = New System.Drawing.Point(6, 9)\n        Me.inputTextBox.Name = &quot;inputTextBox&quot;\n        Me.inputTextBox.Size = New System.Drawing.Size(327, 20)\n        Me.inputTextBox.TabIndex = 0\n        Me.inputTextBox.Text = &quot;&quot;\n        Me.inputTextBox.Anchor = System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right\n        Me.ClientSize = New System.Drawing.Size(342, 73)\n        Me.Controls.AddRange(New System.Windows.Forms.Control() {Me.inputTextBox, Me.cancel_button, Me.ok_button})\n        Me.MinimumSize = New System.Drawing.Size(350, 100)\n        Me.Name = &quot;StringInputDialog&quot;\n        Me.Text = &quot;String Input Dialog&quot;\n        Me.ResumeLayout(False)\n    End Sub\n\nEnd Class\n\n&#39; Provides an example control that displays instructions in design mode,\n&#39; with which the example UITypeEditor is associated.\nPublic Class WinFormsEdServiceDialogExampleControl\n    Inherits UserControl\n\n    &lt;EditorAttribute(GetType(TestDialogEditor), GetType(UITypeEditor))&gt; _\n    Public Property TestDialogString() As String\n        Get\n            Return localDialogTestString\n        End Get\n        Set(ByVal Value As String)\n            localDialogTestString = Value\n        End Set\n    End Property\n    Private localDialogTestString As String\n\n    Public Sub New()\n        localDialogTestString = &quot;Test String&quot;\n        Me.Size = New Size(210, 74)\n        Me.BackColor = Color.Beige\n    End Sub\n\n    Protected Overrides Sub OnPaint(ByVal e As System.Windows.Forms.PaintEventArgs)\n        If Me.DesignMode Then\n            e.Graphics.DrawString(&quot;Use the Properties window to show&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 5)\n            e.Graphics.DrawString(&quot;a Form dialog box, using the&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 17)\n            e.Graphics.DrawString(&quot;IWindowsFormsEditorService, for&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 29)\n            e.Graphics.DrawString(&quot;configuring this control&#39;s&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 41)\n            e.Graphics.DrawString(&quot;TestDialogString property.&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 53)\n        Else\n            e.Graphics.DrawString(&quot;This example requires design mode.&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 5)\n        End If\n    End Sub\n\nEnd Class\n</code></pre><p> The following example provides an example <a class=\"xref\" href=\"system.drawing.design.uitypeeditor\" data-linktype=\"relative-path\">UITypeEditor</a> that uses an IWindowsFormsEditorService to display a drop-down <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> for user input.  </p>\n<pre><code class=\"lang-cpp\" name=\"WinFormsEditorServiceDropDownExample#1\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::ComponentModel::Design;\nusing namespace System::Drawing;\nusing namespace System::Drawing::Design;\nusing namespace System::Windows::Forms;\nusing namespace System::Windows::Forms::Design;\nusing namespace System::Security::Permissions;\n\nnamespace IWindowsFormsEditorServiceExample\n{\n   // Example control for entering a string.\n   private ref class StringInputControl: public UserControl\n   {\n   public:\n      System::Windows::Forms::TextBox^ inputTextBox;\n\n   private:\n      System::Windows::Forms::Button^ ok_button;\n      System::Windows::Forms::Button^ cancel_button;\n      IWindowsFormsEditorService^ edSvc;\n\n   public:\n      StringInputControl( String^ text, IWindowsFormsEditorService^ edSvc )\n      {\n         InitializeComponent();\n         inputTextBox-&gt;Text = text;\n         \n         // Stores IWindowsFormsEditorService reference to use to\n         // close the control.\n         this-&gt;edSvc = edSvc;\n      }\n\n   private:\n      void InitializeComponent()\n      {\n         this-&gt;inputTextBox = gcnew System::Windows::Forms::TextBox;\n         this-&gt;ok_button = gcnew System::Windows::Forms::Button;\n         this-&gt;cancel_button = gcnew System::Windows::Forms::Button;\n         this-&gt;SuspendLayout();\n         this-&gt;inputTextBox-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Left | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;inputTextBox-&gt;Location = System::Drawing::Point( 6, 7 );\n         this-&gt;inputTextBox-&gt;Name = &quot;inputTextBox&quot;;\n         this-&gt;inputTextBox-&gt;Size = System::Drawing::Size( 336, 20 );\n         this-&gt;inputTextBox-&gt;TabIndex = 0;\n         this-&gt;inputTextBox-&gt;Text = &quot;&quot;;\n         this-&gt;ok_button-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Bottom | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;ok_button-&gt;DialogResult = System::Windows::Forms::DialogResult::OK;\n         this-&gt;ok_button-&gt;Location = System::Drawing::Point( 186, 38 );\n         this-&gt;ok_button-&gt;Name = &quot;ok_button&quot;;\n         this-&gt;ok_button-&gt;TabIndex = 1;\n         this-&gt;ok_button-&gt;Text = &quot;OK&quot;;\n         this-&gt;ok_button-&gt;Click += gcnew EventHandler( this, &amp;StringInputControl::CloseControl );\n         this-&gt;cancel_button-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Bottom | System::Windows::Forms::AnchorStyles::Right);\n         this-&gt;cancel_button-&gt;DialogResult = System::Windows::Forms::DialogResult::Cancel;\n         this-&gt;cancel_button-&gt;Location = System::Drawing::Point( 267, 38 );\n         this-&gt;cancel_button-&gt;Name = &quot;cancel_button&quot;;\n         this-&gt;cancel_button-&gt;TabIndex = 2;\n         this-&gt;cancel_button-&gt;Text = &quot;Cancel&quot;;\n         this-&gt;cancel_button-&gt;Click += gcnew EventHandler( this, &amp;StringInputControl::CloseControl );\n         array&lt;System::Windows::Forms::Control^&gt;^temp0 = {this-&gt;cancel_button,this-&gt;ok_button,this-&gt;inputTextBox};\n         this-&gt;Controls-&gt;AddRange( temp0 );\n         this-&gt;Name = &quot;StringInputControl&quot;;\n         this-&gt;Size = System::Drawing::Size( 350, 70 );\n         this-&gt;ResumeLayout( false );\n      }\n\n      void CloseControl( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         edSvc-&gt;CloseDropDown();\n      }\n   };\n\n   // Example UITypeEditor that uses the IWindowsFormsEditorService to\n   // display a drop-down control.\n   [PermissionSet(SecurityAction::Demand, Name = &quot;FullTrust&quot;)]\n   public ref class TestDropDownEditor: public System::Drawing::Design::UITypeEditor\n   {\n   public:\n      TestDropDownEditor(){}\n\n      virtual System::Drawing::Design::UITypeEditorEditStyle GetEditStyle( System::ComponentModel::ITypeDescriptorContext^ /*context*/ ) override\n      {\n         // Indicates that this editor can display a control-based\n         // drop-down interface.\n         return UITypeEditorEditStyle::DropDown;\n      }\n\n      virtual Object^ EditValue( System::ComponentModel::ITypeDescriptorContext^ /*context*/, System::IServiceProvider^ provider, Object^ value ) override\n      {\n         // Attempts to obtain an IWindowsFormsEditorService.\n         IWindowsFormsEditorService^ edSvc = dynamic_cast&lt;IWindowsFormsEditorService^&gt;(provider-&gt;GetService( IWindowsFormsEditorService::typeid ));\n         if ( edSvc == nullptr )\n                  return value;\n\n         // Displays a drop-down control.\n         StringInputControl^ inputControl = gcnew StringInputControl( dynamic_cast&lt;String^&gt;(value),edSvc );\n         edSvc-&gt;DropDownControl( inputControl );\n         return inputControl-&gt;inputTextBox-&gt;Text;\n      }\n   };\n\n   // Provides an example control that displays instructions in design mode,\n   // with which the example UITypeEditor is associated.\n   public ref class WinFormsEdServiceDropDownExampleControl: public UserControl\n   {\n   public:\n\n      property String^ TestDropDownString \n      {\n         [EditorAttribute(IWindowsFormsEditorServiceExample::TestDropDownEditor::typeid,UITypeEditor::typeid)]\n         String^ get()\n         {\n            return localDropDownTestString;\n         }\n\n         void set( String^ value )\n         {\n            localDropDownTestString = value;\n         }\n      }\n\n   private:\n      String^ localDropDownTestString;\n\n   public:\n      WinFormsEdServiceDropDownExampleControl()\n      {\n         localDropDownTestString = &quot;Test String&quot;;\n         this-&gt;Size = System::Drawing::Size( 210, 74 );\n         this-&gt;BackColor = Color::Beige;\n      }\n\n   protected:\n      virtual void OnPaint( System::Windows::Forms::PaintEventArgs^ e ) override\n      {\n         if ( this-&gt;DesignMode )\n         {\n            e-&gt;Graphics-&gt;DrawString( &quot;Use the Properties window to show&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 5 );\n            e-&gt;Graphics-&gt;DrawString( &quot;a drop-down control, using the&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 17 );\n            e-&gt;Graphics-&gt;DrawString( &quot;IWindowsFormsEditorService, for&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 29 );\n            e-&gt;Graphics-&gt;DrawString( &quot;configuring this control&#39;s&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 41 );\n            e-&gt;Graphics-&gt;DrawString( &quot;TestDropDownString property.&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 53 );\n         }\n         else\n         {\n            e-&gt;Graphics-&gt;DrawString( &quot;This example requires design mode.&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), gcnew SolidBrush( Color::Black ), 5, 5 );\n         }\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WinFormsEditorServiceDropDownExample#1\">using System;\nusing System.ComponentModel;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Drawing.Design;\nusing System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\nnamespace IWindowsFormsEditorServiceExample\n{\t\n    // Example UITypeEditor that uses the IWindowsFormsEditorService to \n    // display a drop-down control.\n    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class TestDropDownEditor : System.Drawing.Design.UITypeEditor\n    {\n        public TestDropDownEditor()\n        {\n        }\n\t\n        public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context)\n        {\n            // Indicates that this editor can display a control-based \n            // drop-down interface.\n            return UITypeEditorEditStyle.DropDown;\n        }\n\t\n        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value)\n        {\n            // Attempts to obtain an IWindowsFormsEditorService.\n            IWindowsFormsEditorService edSvc = (IWindowsFormsEditorService)provider.GetService(typeof(IWindowsFormsEditorService));\n            if( edSvc == null )\n                return value;       \n            \n            // Displays a drop-down control.\n            StringInputControl inputControl = new StringInputControl((string)value, edSvc);\n            edSvc.DropDownControl(inputControl);\n            return inputControl.inputTextBox.Text;\n        }\n    }\n\n    // Example control for entering a string.\n    internal class StringInputControl : System.Windows.Forms.UserControl\n    {\n        public System.Windows.Forms.TextBox inputTextBox;\n        private System.Windows.Forms.Button ok_button;\n        private System.Windows.Forms.Button cancel_button;\n        private IWindowsFormsEditorService edSvc;\n\n        public StringInputControl(string text, IWindowsFormsEditorService edSvc)\n        {\n            InitializeComponent();\n            inputTextBox.Text = text;\n            // Stores IWindowsFormsEditorService reference to use to \n            // close the control.\n            this.edSvc = edSvc;\n        }\n\n        private void InitializeComponent()\n        {\n            this.inputTextBox = new System.Windows.Forms.TextBox();\n            this.ok_button = new System.Windows.Forms.Button();\n            this.cancel_button = new System.Windows.Forms.Button();\n            this.SuspendLayout();\n            this.inputTextBox.Anchor = ((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) \n                | System.Windows.Forms.AnchorStyles.Right);\n            this.inputTextBox.Location = new System.Drawing.Point(6, 7);\n            this.inputTextBox.Name = &quot;inputTextBox&quot;;\n            this.inputTextBox.Size = new System.Drawing.Size(336, 20);\n            this.inputTextBox.TabIndex = 0;\n            this.inputTextBox.Text = &quot;&quot;;\n            this.ok_button.Anchor = (System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right);\n            this.ok_button.DialogResult = System.Windows.Forms.DialogResult.OK;\n            this.ok_button.Location = new System.Drawing.Point(186, 38);\n            this.ok_button.Name = &quot;ok_button&quot;;\n            this.ok_button.TabIndex = 1;\n            this.ok_button.Text = &quot;OK&quot;;\n            this.ok_button.Click += new EventHandler(this.CloseControl);\n            this.cancel_button.Anchor = (System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right);\n            this.cancel_button.DialogResult = System.Windows.Forms.DialogResult.Cancel;            \n            this.cancel_button.Location = new System.Drawing.Point(267, 38);\n            this.cancel_button.Name = &quot;cancel_button&quot;;\n            this.cancel_button.TabIndex = 2;\n            this.cancel_button.Text = &quot;Cancel&quot;;\n            this.cancel_button.Click += new EventHandler(this.CloseControl);\n            this.Controls.AddRange(new System.Windows.Forms.Control[] {\n                                                                          this.cancel_button,\n                                                                          this.ok_button,\n                                                                          this.inputTextBox});\n            this.Name = &quot;StringInputControl&quot;;\n            this.Size = new System.Drawing.Size(350, 70);\n            this.ResumeLayout(false);\n        }\n\n        private void CloseControl(object sender, EventArgs e)\n        {\n            edSvc.CloseDropDown();\n        }\n    }\n    \n    // Provides an example control that displays instructions in design mode,\n    // with which the example UITypeEditor is associated.\n    public class WinFormsEdServiceDropDownExampleControl : UserControl\n    {\n        [EditorAttribute(typeof(TestDropDownEditor), typeof(UITypeEditor))]\n        public string TestDropDownString\n        {\n            get\n            {\n                return localDropDownTestString;\n            }\n            set\n            {       \n                localDropDownTestString = value;\n            }\n        }\n        \n        private string localDropDownTestString;\n\n        public WinFormsEdServiceDropDownExampleControl()\n        {\n            localDropDownTestString = &quot;Test String&quot;;\n            this.Size = new Size(210, 74);\n            this.BackColor = Color.Beige;\n        }\n\n        protected override void OnPaint(System.Windows.Forms.PaintEventArgs e)\n        {\n            if( this.DesignMode )\n            {\n                e.Graphics.DrawString(&quot;Use the Properties window to show&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 5);\n                e.Graphics.DrawString(&quot;a drop-down control, using the&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 17);\n                e.Graphics.DrawString(&quot;IWindowsFormsEditorService, for&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 29);\n                e.Graphics.DrawString(&quot;configuring this control&#39;s&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 41);\n                e.Graphics.DrawString(&quot;TestDropDownString property.&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 53);\n            }\n            else\n            {\n                e.Graphics.DrawString(&quot;This example requires design mode.&quot;, new Font(&quot;Arial&quot;, 8), new SolidBrush(Color.Black), 5, 5);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WinFormsEditorServiceDropDownExample#1\">Imports System\nImports System.ComponentModel\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Drawing.Design\nImports System.Windows.Forms\nImports System.Windows.Forms.Design\n\n&#39; Example UITypeEditor that uses the IWindowsFormsEditorService to \n&#39; display a drop-down control.\n&lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class TestDropDownEditor\n   Inherits System.Drawing.Design.UITypeEditor\n   \n   Public Sub New()\n    End Sub\n   \n    Public Overloads Overrides Function GetEditStyle(ByVal context As System.ComponentModel.ITypeDescriptorContext) As System.Drawing.Design.UITypeEditorEditStyle\n        &#39; Indicates that this editor can display a control-based \n        &#39; drop-down interface.\n        Return UITypeEditorEditStyle.DropDown\n    End Function\n    \n    Public Overloads Overrides Function EditValue(ByVal context As System.ComponentModel.ITypeDescriptorContext, ByVal provider As System.IServiceProvider, ByVal value As Object) As Object\n\n        &#39; Attempts to obtain an IWindowsFormsEditorService.\n        Dim edSvc As IWindowsFormsEditorService = CType(provider.GetService(GetType(IWindowsFormsEditorService)), IWindowsFormsEditorService)\n        If edSvc Is Nothing Then\n            Return value\n        End If\n\n        &#39; Displays a drop-down control.\n        Dim inputControl As New StringInputControl(CStr(value), edSvc)\n        edSvc.DropDownControl(inputControl)\n        Return inputControl.inputTextBox.Text\n    End Function\n\nEnd Class\n\n&#39; Example control for entering a string.\nFriend Class StringInputControl\n    Inherits System.Windows.Forms.UserControl\n\n    Public inputTextBox As System.Windows.Forms.TextBox\n    Private WithEvents ok_button As System.Windows.Forms.Button\n    Private WithEvents cancel_button As System.Windows.Forms.Button\n    Private edSvc As IWindowsFormsEditorService\n\n    Public Sub New(ByVal [text] As String, ByVal edSvc As IWindowsFormsEditorService)\n        InitializeComponent()\n        inputTextBox.Text = [text]\n        &#39; Stores IWindowsFormsEditorService reference to use to \n        &#39; close the control.\n        Me.edSvc = edSvc\n    End Sub\n\n    Private Sub InitializeComponent()\n        Me.inputTextBox = New System.Windows.Forms.TextBox()\n        Me.ok_button = New System.Windows.Forms.Button()\n        Me.cancel_button = New System.Windows.Forms.Button()\n        Me.SuspendLayout()\n        Me.inputTextBox.Anchor = System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right\n        Me.inputTextBox.Location = New System.Drawing.Point(6, 7)\n        Me.inputTextBox.Name = &quot;inputTextBox&quot;\n        Me.inputTextBox.Size = New System.Drawing.Size(336, 20)\n        Me.inputTextBox.TabIndex = 0\n        Me.inputTextBox.Text = &quot;&quot;\n        Me.ok_button.Anchor = System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right\n        Me.ok_button.DialogResult = System.Windows.Forms.DialogResult.OK\n        Me.ok_button.Location = New System.Drawing.Point(186, 38)\n        Me.ok_button.Name = &quot;ok_button&quot;\n        Me.ok_button.TabIndex = 1\n        Me.ok_button.Text = &quot;OK&quot;\n        Me.cancel_button.Anchor = System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right\n        Me.cancel_button.DialogResult = System.Windows.Forms.DialogResult.Cancel\n        Me.cancel_button.Location = New System.Drawing.Point(267, 38)\n        Me.cancel_button.Name = &quot;cancel_button&quot;\n        Me.cancel_button.TabIndex = 2\n        Me.cancel_button.Text = &quot;Cancel&quot;\n        Me.Controls.AddRange(New System.Windows.Forms.Control() {Me.cancel_button, Me.ok_button, Me.inputTextBox})\n        Me.Name = &quot;StringInputControl&quot;\n        Me.Size = New System.Drawing.Size(350, 70)\n        Me.ResumeLayout(False)\n    End Sub\n\n    Private Sub CloseControl(ByVal sender As Object, ByVal e As EventArgs) Handles ok_button.Click, cancel_button.Click\n        edSvc.CloseDropDown()\n    End Sub\n\nEnd Class\n\n&#39; Provides an example control that displays instructions in design mode,\n&#39; with which the example UITypeEditor is associated.\nPublic Class WinFormsEdServiceDropDownExampleControl\n    Inherits UserControl\n\n    &lt;EditorAttribute(GetType(TestDropDownEditor), GetType(UITypeEditor))&gt; _\n    Public Property TestDropDownString() As String\n        Get\n            Return localDropDownTestString\n        End Get\n        Set(ByVal Value As String)\n            localDropDownTestString = Value\n        End Set\n    End Property\n    Private localDropDownTestString As String\n\n    Public Sub New()\n        localDropDownTestString = &quot;Test String&quot;\n        Me.Size = New Size(210, 74)\n        Me.BackColor = Color.Beige\n    End Sub\n\n    Protected Overrides Sub OnPaint(ByVal e As System.Windows.Forms.PaintEventArgs)\n        If Me.DesignMode Then\n            e.Graphics.DrawString(&quot;Use the Properties window to show&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 5)\n            e.Graphics.DrawString(&quot;a drop-down control, using the&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 17)\n            e.Graphics.DrawString(&quot;IWindowsFormsEditorService, for&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 29)\n            e.Graphics.DrawString(&quot;configuring this control&#39;s&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 41)\n            e.Graphics.DrawString(&quot;TestDropDownString property.&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 53)\n        Else\n            e.Graphics.DrawString(&quot;This example requires design mode.&quot;, New Font(&quot;Arial&quot;, 8), New SolidBrush(Color.Black), 5, 5)\n        End If\n    End Sub\n\nEnd Class\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The IWindowsFormsEditorService is only available through the <a class=\"xref\" href=\"system.iserviceprovider#System_IServiceProvider_GetService_\" data-linktype=\"relative-path\">GetService</a> method of the <a class=\"xref\" href=\"system.windows.forms.propertygrid\" data-linktype=\"relative-path\">PropertyGrid</a> control.  </p>\n<p> This service is typically used to display a form from the <a class=\"xref\" href=\"system.drawing.design.uitypeeditor#System_Drawing_Design_UITypeEditor_EditValue_\" data-linktype=\"relative-path\">EditValue</a> method of a <a class=\"xref\" href=\"system.drawing.design.uitypeeditor\" data-linktype=\"relative-path\">UITypeEditor</a>. When a <a class=\"xref\" href=\"system.windows.forms.propertygrid\" data-linktype=\"relative-path\">PropertyGrid</a> invokes the <a class=\"xref\" href=\"system.drawing.design.uitypeeditor#System_Drawing_Design_UITypeEditor_EditValue_\" data-linktype=\"relative-path\">EditValue</a> method of a <a class=\"xref\" href=\"system.drawing.design.uitypeeditor\" data-linktype=\"relative-path\">UITypeEditor</a> to provide a user interface for editing the value of a property, the <a class=\"xref\" href=\"system.drawing.design.uitypeeditor#System_Drawing_Design_UITypeEditor_EditValue_\" data-linktype=\"relative-path\">EditValue</a> method is passed a reference to an <a class=\"xref\" href=\"system.iserviceprovider\" data-linktype=\"relative-path\">IServiceProvider</a> that can typically provide an instance of the IWindowsFormsEditorService. The methods of this service can be used to display dialog boxes and forms, or to show a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> within a drop down container that is shown on top of the property grid near the area of the value field whose value is being edited.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Design_IWindowsFormsEditorService_CloseDropDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CloseDropDown()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Closes any previously opened drop down control area.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CloseDropDown ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method closes the drop down container area for a control that has been shown using the <a class=\"xref\" href=\"system.windows.forms.design.iwindowsformseditorservice#System_Windows_Forms_Design_IWindowsFormsEditorService_DropDownControl_\" data-linktype=\"relative-path\">DropDownControl</a> method, and releases the drop down container&#39;s reference to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Design_IWindowsFormsEditorService_DropDownControl_System_Windows_Forms_Control_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DropDownControl(Control)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Displays the specified control in a drop down area below a value field of the property grid that provides this service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DropDownControl (System.Windows.Forms.Control control);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>control</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The drop down list <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to open.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.design.uitypeeditor#System_Drawing_Design_UITypeEditor_EditValue_\" data-linktype=\"relative-path\">EditValue</a> method of a <a class=\"xref\" href=\"system.drawing.design.uitypeeditor\" data-linktype=\"relative-path\">UITypeEditor</a> can call this method to display a specified control in a drop down area over the property grid hosting the editor which uses this service.  </p>\n<p> When possible, the dimensions of the control will be maintained. If this is not possible due to the screen layout, the control may be resized. To ensure that the control resizes neatly, you should implement docking and anchoring, and possibly any resize event-handler update code. If the user performs an action that causes the drop down to close, the control will be hidden and disposed by garbage collection if there is no other stored reference to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" netframework-3.0 netframework-3.5-client netframework-3.5 netframework-4.0-client netframework-4.0 netframework-4.5.1 netframework-4.5.2 netframework-4.5 netframework-4.6.1 netframework-4.6.2 netframework-4.6\">\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Design_IWindowsFormsEditorService_ShowDialog_System_Windows_Forms_Form_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShowDialog(Form)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Shows the specified <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.Form dialog);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dialog</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> to display.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> indicating the result code returned by the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method displays the specified form.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.Design.IWindowsFormsEditorService.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Design.IWindowsFormsEditorService\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Design.IWindowsFormsEditorService.CloseDropDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Design.IWindowsFormsEditorService.DropDownControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Design.IWindowsFormsEditorService.ShowDialog\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-24 01:41 AM\">\r\n<meta name=\"document_id\" content=\"268e59a9-70c7-138e-d5f4-6c7c02e8b883\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface for a  to display Windows Forms or to display a control in a drop-down area from a property grid control in design mode.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.windows.forms.design/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.Design.IWindowsFormsEditorService\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Windows.Forms.Design.IWindowsFormsEditorService.yml","open_to_public_contributors":false,"api_name":["System.Windows.Forms.Design.IWindowsFormsEditorService","System.Windows.Forms.Design.IWindowsFormsEditorService.CloseDropDown","System.Windows.Forms.Design.IWindowsFormsEditorService.DropDownControl","System.Windows.Forms.Design.IWindowsFormsEditorService.ShowDialog"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.Design.IWindowsFormsEditorService","System::Windows::Forms::Design::IWindowsFormsEditorService","System.Windows.Forms.Design.IWindowsFormsEditorService.CloseDropDown","System::Windows::Forms::Design::IWindowsFormsEditorService::CloseDropDown","System.Windows.Forms.Design.IWindowsFormsEditorService.DropDownControl","System::Windows::Forms::Design::IWindowsFormsEditorService::DropDownControl","System.Windows.Forms.Design.IWindowsFormsEditorService.ShowDialog","System::Windows::Forms::Design::IWindowsFormsEditorService::ShowDialog"],"dev_langs":["csharp"],"updated_at":"2017-03-24 01:41 AM","document_id":"268e59a9-70c7-138e-d5f4-6c7c02e8b883","content_git_url":"https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.Design/IWindowsFormsEditorService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IWindowsFormsEditorService interface | Microsoft Docs","_op_ogTitle":"IWindowsFormsEditorService interface","description":"Provides an interface for a  to display Windows Forms or to display a control in a drop-down area from a property grid control in design mode.\n","toc_asset_id":"api/_splitted/System.Windows.Forms.Design/toc.json","toc_rel":"_splitted/System.Windows.Forms.Design/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.Design.IWindowsFormsEditorService","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.design.iwindowsformseditorservice","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.design.iwindowsformseditorservice","fileRelativePath":"api/System.Windows.Forms.Design.IWindowsFormsEditorService.html"},"themesRelativePathToOutputRoot":"_themes/"}