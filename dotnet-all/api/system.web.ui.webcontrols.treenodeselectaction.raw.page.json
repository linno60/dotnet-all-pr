{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">TreeNodeSelectAction</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents the event or events to raise when a node in the <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview\" data-linktype=\"relative-path\">TreeView</a> control is selected.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum TreeNodeSelectAction</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div><div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">Enum</a></span></div><span class=\"lang-csharp\">TreeNodeSelectAction</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Examples</h2>\r\n  \t<p>The following code example demonstrates how to use the TreeNodeSelectAction enumeration to represent the event that is raised when a node is clicked in the <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview\" data-linktype=\"relative-path\">TreeView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"TreeViewPopulateNodesFromClient#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data.SqlClient&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void PopulateNode(Object sender, TreeNodeEventArgs e)\n  {\n\n    // Call the appropriate method to populate a node at a particular level.\n    switch(e.Node.Depth)\n    {\n      case 0:\n        // Populate the first-level nodes.\n        PopulateCategories(e.Node);\n        break;\n      case 1:\n        // Populate the second-level nodes.\n        PopulateProducts(e.Node);\n        break;\n      default:\n        // Do nothing.\n        break;\n    }\n    \n  }\n\n  void PopulateCategories(TreeNode node)\n  {\n    \n    // Query for the product categories. These are the values\n    // for the second-level nodes.\n    DataSet ResultSet = RunQuery(&quot;Select CategoryID, CategoryName From Categories&quot;);\n\n    // Create the second-level nodes.\n    if(ResultSet.Tables.Count &gt; 0)\n    {\n    \n      // Iterate through and create a new node for each row in the query results.\n      // Notice that the query results are stored in the table of the DataSet.\n      foreach (DataRow row in ResultSet.Tables[0].Rows)\n      {\n        \n        // Create the new node. Notice that the CategoryId is stored in the Value property \n        // of the node. This will make querying for items in a specific category easier when\n        // the third-level nodes are created. \n        TreeNode newNode = new TreeNode();\n        newNode.Text = row[&quot;CategoryName&quot;].ToString(); \n        newNode.Value = row[&quot;CategoryID&quot;].ToString();        \n\n        // Set the PopulateOnDemand property to true so that the child nodes can be \n        // dynamically populated.\n        newNode.PopulateOnDemand = true;\n        \n        // Set additional properties for the node.\n        newNode.SelectAction = TreeNodeSelectAction.Expand;\n        \n        // Add the new node to the ChildNodes collection of the parent node.\n        node.ChildNodes.Add(newNode);\n        \n      }\n      \n    }\n    \n  }\n\n  void PopulateProducts(TreeNode node)\n  {\n\n    // Query for the products of the current category. These are the values\n    // for the third-level nodes.\n    DataSet ResultSet = RunQuery(&quot;Select ProductName From Products Where CategoryID=&quot; + node.Value);\n\n    // Create the third-level nodes.\n    if(ResultSet.Tables.Count &gt; 0)\n    {\n    \n      // Iterate through and create a new node for each row in the query results.\n      // Notice that the query results are stored in the table of the DataSet.\n      foreach (DataRow row in ResultSet.Tables[0].Rows)\n      {\n      \n        // Create the new node.\n        TreeNode NewNode = new TreeNode(row[&quot;ProductName&quot;].ToString());\n        \n        // Set the PopulateOnDemand property to false, because these are leaf nodes and\n        // do not need to be populated.\n        NewNode.PopulateOnDemand = false;\n        \n        // Set additional properties for the node.\n        NewNode.SelectAction = TreeNodeSelectAction.None;\n        \n        // Add the new node to the ChildNodes collection of the parent node.\n        node.ChildNodes.Add(NewNode);\n        \n      }\n      \n    }\n\n  }\n\n  DataSet RunQuery(String QueryString)\n  {\n\n    // Declare the connection string. This example uses Microsoft SQL Server \n    // and connects to the Northwind sample database.\n    String ConnectionString = &quot;server=localhost;database=NorthWind;Integrated Security=SSPI&quot;; \n\n    SqlConnection DBConnection = new SqlConnection(ConnectionString);\n    SqlDataAdapter DBAdapter;\n    DataSet ResultsDataSet = new DataSet();\n\n    try\n    {\n\n      // Run the query and create a DataSet.\n      DBAdapter = new SqlDataAdapter(QueryString, DBConnection);\n      DBAdapter.Fill(ResultsDataSet);\n\n      // Close the database connection.\n      DBConnection.Close();\n\n    }\n    catch(Exception ex)\n    {\n\n      // Close the database connection if it is still open.\n      if(DBConnection.State == ConnectionState.Open)\n      {\n        DBConnection.Close();\n      }\n      \n      Message.Text = &quot;Unable to connect to the database.&quot;;\n\n    }\n\n    return ResultsDataSet;\n\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;TreeView PopulateNodesFromClient Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    \n      &lt;h3&gt;TreeView PopulateNodesFromClient Example&lt;/h3&gt;\n    \n      &lt;asp:TreeView id=&quot;LinksTreeView&quot;\n        Font-Names= &quot;Arial&quot;\n        ForeColor=&quot;Blue&quot;\n        EnableClientScript=&quot;true&quot;\n        PopulateNodesFromClient=&quot;true&quot;  \n        OnTreeNodePopulate=&quot;PopulateNode&quot;\n        runat=&quot;server&quot;&gt;\n         \n        &lt;Nodes&gt;\n        \n          &lt;asp:TreeNode Text=&quot;Inventory&quot; \n            SelectAction=&quot;Expand&quot;  \n            PopulateOnDemand=&quot;true&quot;/&gt;\n        \n        &lt;/Nodes&gt;\n        \n      &lt;/asp:TreeView&gt;\n      \n      &lt;br /&gt;&lt;br /&gt;\n      \n      &lt;asp:Label id=&quot;Message&quot; runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"TreeViewPopulateNodesFromClient#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data.SqlClient&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub PopulateNode(ByVal sender As Object, ByVal e As TreeNodeEventArgs)\n\n    &#39; Call the appropriate method to populate a node at a particular level.\n    Select Case e.Node.Depth\n\n      Case 0\n        &#39; Populate the first-level nodes.\n        PopulateCategories(e.Node)\n\n      Case 1\n        &#39; Populate the second-level nodes.\n        PopulateProducts(e.Node)\n\n      Case Else\n        &#39; Do nothing.\n\n    End Select\n\n  End Sub\n\n  Sub PopulateCategories(ByVal node As TreeNode)\n\n    &#39; Query for the product categories. These are the values\n    &#39; for the second-level nodes.\n    Dim ResultSet As DataSet = RunQuery(&quot;Select CategoryID, CategoryName From Categories&quot;)\n\n    &#39; Create the second-level nodes.\n    If ResultSet.Tables.Count &gt; 0 Then\n\n      &#39; Iterate through and create a new node for each row in the query results.\n      &#39; Notice that the query results are stored in the table of the DataSet.\n      Dim row As DataRow\n\n      For Each row In ResultSet.Tables(0).Rows\n\n        &#39; Create the new node. Notice that the CategoryId is stored in the Value property \n        &#39; of the node. This will make querying for items in a specific category easier when\n        &#39; the third-level nodes are created. \n        Dim newNode As TreeNode = New TreeNode()\n        Newnode.Text = row(&quot;CategoryName&quot;).ToString() \n        Newnode.Value = row(&quot;CategoryID&quot;).ToString()\n\n        &#39; Set the PopulateOnDemand property to true so that the child nodes can be \n        &#39; dynamically populated.\n        newNode.PopulateOnDemand = True\n\n        &#39; Set additional properties for the node.\n        newNode.SelectAction = TreeNodeSelectAction.Expand\n\n        &#39; Add the new node to the ChildNodes collection of the parent node.\n        node.ChildNodes.Add(newNode)\n\n      Next\n\n    End If\n\n  End Sub\n\n  Sub PopulateProducts(ByVal node As TreeNode)\n\n    &#39; Query for the products of the current category. These are the values\n    &#39; for the third-level nodes.\n    Dim ResultSet As DataSet = RunQuery(&quot;Select ProductName From Products Where CategoryID=&quot; &amp; node.Value)\n\n    &#39; Create the third-level nodes.\n    If ResultSet.Tables.Count &gt; 0 Then\n\n      &#39; Iterate through and create a new node for each row in the query results.\n      &#39; Notice that the query results are stored in the table of the DataSet.\n      Dim row As DataRow\n\n      For Each row In ResultSet.Tables(0).Rows\n\n        &#39; Create the new node.\n        Dim NewNode As TreeNode = New TreeNode(row(&quot;ProductName&quot;).ToString())\n\n        &#39; Set the PopulateOnDemand property to false, because these are leaf nodes and\n        &#39; do not need to be populated.\n        NewNode.PopulateOnDemand = False\n\n        &#39; Set additional properties for the node.\n        NewNode.SelectAction = TreeNodeSelectAction.None\n\n        &#39; Add the new node to the ChildNodes collection of the parent node.\n        node.ChildNodes.Add(NewNode)\n\n      Next\n\n    End If\n\n  End Sub\n\n  Function RunQuery(ByVal QueryString As String) As DataSet\n\n    &#39; Declare the connection string. This example uses Microsoft SQL Server \n    &#39; and connects to the Northwind sample database.\n    Dim ConnectionString As String = &quot;server=localhost;database=NorthWind;Integrated Security=SSPI&quot;\n\n    Dim DBConnection As SqlConnection = New SqlConnection(ConnectionString)\n    Dim DBAdapter As SqlDataAdapter\n    Dim ResultsDataSet As DataSet = New DataSet\n\n    Try\n\n      &#39; Run the query and create a DataSet.\n      DBAdapter = New SqlDataAdapter(QueryString, DBConnection)\n      DBAdapter.Fill(ResultsDataSet)\n\n      &#39; Close the database connection.\n      DBConnection.Close()\n\n    Catch ex As Exception\n\n      &#39; Close the database connection if it is still open.\n      If DBConnection.State = ConnectionState.Open Then\n\n        DBConnection.Close()\n\n      End If\n\n      Message.Text = &quot;Unable to connect to the database.&quot;\n\n    End Try\n\n    Return ResultsDataSet\n\n  End Function\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;TreeView PopulateNodesFromClient Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    \n      &lt;h3&gt;TreeView PopulateNodesFromClient Example&lt;/h3&gt;\n    \n      &lt;asp:TreeView id=&quot;LinksTreeView&quot;\n        Font-Names= &quot;Arial&quot;\n        ForeColor=&quot;Blue&quot;\n        EnableClientScript=&quot;true&quot;\n        PopulateNodesFromClient=&quot;true&quot;  \n        OnTreeNodePopulate=&quot;PopulateNode&quot;\n        runat=&quot;server&quot;&gt;\n         \n        &lt;Nodes&gt;\n        \n          &lt;asp:TreeNode Text=&quot;Inventory&quot; \n            SelectAction=&quot;Expand&quot;  \n            PopulateOnDemand=&quot;true&quot;/&gt;\n        \n        &lt;/Nodes&gt;\n        \n      &lt;/asp:TreeView&gt;\n      \n      &lt;br /&gt;&lt;br /&gt;\n      \n      &lt;asp:Label id=&quot;Message&quot; runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.treenode#System_Web_UI_WebControls_TreeNode_NavigateUrl_\" data-linktype=\"relative-path\">NavigateUrl</a> property for a <a class=\"xref\" href=\"system.web.ui.webcontrols.treenode\" data-linktype=\"relative-path\">TreeNode</a> control is set to a value other than an empty string (&quot;&quot;), clicking the node navigates to the specified URL. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.treenode#System_Web_UI_WebControls_TreeNode_NavigateUrl_\" data-linktype=\"relative-path\">NavigateUrl</a> property is set to an empty string, clicking the node causes a postback. The <a class=\"xref\" href=\"system.web.ui.webcontrols.treenode#System_Web_UI_WebControls_TreeNode_SelectAction_\" data-linktype=\"relative-path\">SelectAction</a> property determines the events to raise on the postback. By default, the <a class=\"xref\" href=\"system.web.ui.webcontrols.treenode#System_Web_UI_WebControls_TreeNode_Select_\" data-linktype=\"relative-path\">Select</a> event is raised. No events are raised if the <a class=\"xref\" href=\"system.web.ui.webcontrols.treenode#System_Web_UI_WebControls_TreeNode_NavigateUrl_\" data-linktype=\"relative-path\">NavigateUrl</a> property is set.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview#System_Web_UI_WebControls_TreeView_HoverNodeStyle_\" data-linktype=\"relative-path\">HoverNodeStyle</a> property is not rendered for a node with its <a class=\"xref\" href=\"system.web.ui.webcontrols.treenode#System_Web_UI_WebControls_TreeNode_SelectAction_\" data-linktype=\"relative-path\">SelectAction</a> property set to the None value.</p>\n</div>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Web_UI_WebControls_TreeNodeSelectAction_Expand\">\r\n      \t\t\t<span class=\"lang-csharp\">Expand</span>\r\n      \t</td>\r\n      \t<td><p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview#System_Web_UI_WebControls_TreeView_TreeNodeExpanded\" data-linktype=\"relative-path\">TreeNodeExpanded</a> event when a node is selected.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_UI_WebControls_TreeNodeSelectAction_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p>Raises no events when a node is selected.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_UI_WebControls_TreeNodeSelectAction_Select\">\r\n      \t\t\t<span class=\"lang-csharp\">Select</span>\r\n      \t</td>\r\n      \t<td><p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview#System_Web_UI_WebControls_TreeView_SelectedNodeChanged\" data-linktype=\"relative-path\">SelectedNodeChanged</a> event when a node is selected.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Web_UI_WebControls_TreeNodeSelectAction_SelectExpand\">\r\n      \t\t\t<span class=\"lang-csharp\">SelectExpand</span>\r\n      \t</td>\r\n      \t<td><p>Raises both the <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview#System_Web_UI_WebControls_TreeView_SelectedNodeChanged\" data-linktype=\"relative-path\">SelectedNodeChanged</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.treeview#System_Web_UI_WebControls_TreeView_TreeNodeExpanded\" data-linktype=\"relative-path\">TreeNodeExpanded</a> events when a node is selected.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"../","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"ms.author\" content=\"dotnetcontent\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.topic\" content=\"managed-reference\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.TreeNodeSelectAction.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.TreeNodeSelectAction\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.TreeNodeSelectAction.Expand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.TreeNodeSelectAction.None\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.TreeNodeSelectAction.Select\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-31 05:47 AM\">\r\n<meta name=\"document_id\" content=\"f4e4d28c-a77e-0234-f639-5bdbe556d4c5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the event or events to raise when a node in the  control is selected.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/system.web.ui.webcontrols/toc2.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.TreeNodeSelectAction\">\r\n","rawMetadata":{"author":"dotnet-bot","ms.author":"dotnetcontent","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","ms.topic":"managed-reference","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/dotnet/docs-internal/blob/master/api/System.Web.UI.WebControls.TreeNodeSelectAction.yml","open_to_public_contributors":false,"api_name":["System.Web.UI.WebControls.TreeNodeSelectAction","System.Web.UI.WebControls.TreeNodeSelectAction.Expand","System.Web.UI.WebControls.TreeNodeSelectAction.None","System.Web.UI.WebControls.TreeNodeSelectAction.Select","System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.TreeNodeSelectAction","System::Web::UI::WebControls::TreeNodeSelectAction","System.Web.UI.WebControls.TreeNodeSelectAction.Expand","System::Web::UI::WebControls::TreeNodeSelectAction::Expand","System.Web.UI.WebControls.TreeNodeSelectAction.None","System::Web::UI::WebControls::TreeNodeSelectAction::None","System.Web.UI.WebControls.TreeNodeSelectAction.Select","System::Web::UI::WebControls::TreeNodeSelectAction::Select","System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand","System::Web::UI::WebControls::TreeNodeSelectAction::SelectExpand"],"dev_langs":["csharp"],"updated_at":"2017-03-31 05:47 AM","document_id":"f4e4d28c-a77e-0234-f639-5bdbe556d4c5","content_git_url":"https://github.com/dotnet/docs-internal/blob/master/xml/System.Web.UI.WebControls/TreeNodeSelectAction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TreeNodeSelectAction enum | Microsoft Docs","_op_ogTitle":"TreeNodeSelectAction enum","description":"Represents the event or events to raise when a node in the  control is selected.\n","toc_asset_id":"api/_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.TreeNodeSelectAction","canonical_url":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.treenodeselectaction","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.webcontrols.treenodeselectaction","fileRelativePath":"api/System.Web.UI.WebControls.TreeNodeSelectAction.html"},"themesRelativePathToOutputRoot":"_themes/"}