{"content":"<div><div class=\"content\">\n<p>This document provides a tour of the steps and workflow to create a .NET\nCore Solution using <a href=\"http://code.visualstudio.com\" data-linktype=\"external\">Visual Studio Code</a>.\nYou&#39;ll learn how to create projects, create unit tests, use the debugging\ntools, and incorporate third-party libraries via <a href=\"http://nuget.org\" data-linktype=\"external\">NuGet</a>.</p>\n<p>This article uses Visual Studio Code on Mac OS. Where there are differences,\nit points out the differences for the Windows platform.</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>Before starting, you&#39;ll need to install the <a href=\"https://www.microsoft.com/net/core\" data-linktype=\"external\">.NET Core SDK</a>. The .NET Core SDK includes the latest release\nof the .NET Core framework and runtime.</p>\n<p>You&#39;ll also need to install <a href=\"http://code.visualstudio.com\" data-linktype=\"external\">Visual Studio Code</a>.\nDuring the course of this article, you&#39;ll also install extensions\nthat will improve the .NET Core development experience.</p>\n<h2 id=\"getting-started\">Getting Started</h2>\n<p>The source for this tutorial is available on\n<a href=\"https://github.com/dotnet/docs/tree/master/samples/core/getting-started/golden\" data-linktype=\"external\">GitHub</a>.</p>\n<p>Start Visual Studio Code. Press Ctrl + &#39;`&#39; (the back-quote character) to open\nan embedded terminal in VS Code. (Alternatively, you can use a separate\nterminal window, if you prefer).</p>\n<p>By the time we&#39;re done, you&#39;ll create three projects: a library project,\ntests for that library project, and a console application that makes\nuse of the library. </p>\n<p>Let&#39;s start by creating those folders. In the terminal, create a &#39;golden&#39;\ndirectory. In VS Code, open the <em>golden</em> directory. This directory is the root of your solution. Run the <a href=\"../tools/dotnet-new\" data-linktype=\"relative-path\"><code>dotnet new</code></a> command to create a new solution:</p>\n<pre class=\"loading\"><code>dotnet new sln\n</code></pre><p>This command creates a <em>golden.sln</em> file for the entire solution.</p>\n<p>Your next task is to create the library. In the terminal window\n(either the embedded terminal in VS code, or another terminal),\ncd to <em>golden/</em> and type the command:</p>\n<pre class=\"loading\"><code>dotnet new classlib -o library\n</code></pre><p>This creates a library project, with two files: <em>library.csproj</em> and\n<em>Class1.cs</em> in the <em>library</em> directory. You want that library project\nincluded in your solution. Run the <a href=\"../tools/dotnet-sln\" data-linktype=\"relative-path\"><code>dotnet sln</code></a> command to add the newly\ncreated <em>library.csproj</em> project to the solution:</p>\n<pre class=\"loading\"><code>dotnet sln add library/library.csproj\n</code></pre><p>Let&#39;s examine the project that you&#39;ve created. The <em>library.csproj</em> file \ncontains the following information:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;netstandard1.4&lt;/TargetFramework&gt;\n  &lt;/PropertyGroup&gt;\n\n&lt;/Project&gt;\n</code></pre><p>This library project will make use of JSON representation of objects, so you&#39;ll want to\nadd a reference to the <code>Newtonsoft.Json</code> NuGet package. The <code>dotnet add</code> command\nadds new items to a project. To add a reference to a NuGet package, you use the \n<code>package</code> command and specify the name of the package. </p>\n<pre class=\"loading\"><code>dotnet add library package Newtonsoft.Json\n</code></pre><p>This adds <code>Newtonsoft.Json</code> and its dependencies to the Library\nproject. Alternatively, you could manually edit the <em>library.csproj</em>\nfile and add the following node:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;PackageReference Include=&quot;Newtonsoft.Json&quot;&gt;\n    &lt;Version&gt;9.0.1&lt;/Version&gt;\n  &lt;/PackageReference&gt;\n&lt;/ItemGroup&gt;\n</code></pre><p>After you&#39;ve finished adding those dependencies, you need to install those\npackages into workspace. Run the <code>dotnet restore</code> command to updates all dependencies,\nand write a <em>obj/project.assets.json</em> file under the project directory. This\nfile contains the full dependency tree of all the dependencies in your\nproject. You don&#39;t need to read this file, it&#39;s used by tools in the .NET\nCore SDK.</p>\n<p>Now, let&#39;s update the C# code. Let&#39;s create a <code>Thing</code> class that contains\none public method. This method will return the sum of two numbers,\nbut will do so by converting that number to a JSON string, and then\ndeserializing it. Rename the file <em>Class1.cs</em> to <em>Thing.cs</em>. Then, replace\nthe existing code (for the template-generated Class1) with the following:</p>\n<pre class=\"loading\"><code class=\"lang-csharp\">using static Newtonsoft.Json.JsonConvert;\n\nnamespace Library\n{\n    public class Thing\n    {\n        public int Get(int left, int right) =&gt;\n            DeserializeObject&lt;int&gt;($&quot;{left + right}&quot;);\n    }\n}\n</code></pre><p>This makes use of a number of modern C# features, such as \nstatic usings, expression-bodied members, and interpolated strings,\nthat you can learn\nabout in the <a href=\"../../csharp/index\" data-linktype=\"relative-path\">Learn C#</a> section.</p>\n<p>Now that you&#39;ve updated the code, you can build the library using\n<code>dotnet build</code>.</p>\n<p>You now have a built <em>library.dll</em> file under <em>golden/library/bin/Debug/netstandard1.4</em>.</p>\n<h3 id=\"writing-the-test-project\">Writing the test project</h3>\n<p>Let&#39;s build a test project for this library that you&#39;ve build. Change to the <em>golden</em>\ndirectory. Run <code>dotnet new xunit -o test-library</code> to create a new test project. \nYou&#39;ll want to add this project to the solution as well by running\n<code>dotnet sln add test-library/test-library.csproj</code>.</p>\n<p>You&#39;ll need to add a dependency node for the library you wrote in the steps\nabove. The <code>dotnet add reference</code> command does that:</p>\n<pre class=\"loading\"><code>dotnet add test-library/test-library.csproj reference library/library.csproj\n</code></pre><p>Or, you can manually edit the <em>test-library.csproj</em> file and add the\nfollowing node:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;ProjectReference Include=&quot;..\\library\\library.csproj&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><p>The <code>library</code> node specifies that this dependency should resolve to a project\nin the current workspace. Without explicitly specifying this, it&#39;s possible\nthat the test project would build against a NuGet package of the same name.</p>\n<p>Now that the dependencies have been properly configured, let&#39;s create\nthe tests for your library. Open <em>UnitTest1.cs</em> and\nreplace its contents with the following code:</p>\n<pre class=\"loading\"><code class=\"lang-csharp\">using Library;\nusing Xunit;\n\nnamespace TestApp\n{\n    public class LibraryTests\n    {\n        [Fact]\n        public void TestThing() {\n            Assert.Equal(42, new Thing().Get(19, 23));\n        }\n    }\n}\n</code></pre><p>Now, run <code>dotnet restore</code> and <code>dotnet build</code>. These commands will\nrecursively find all projects to restore dependencies and build them.\nFinally, run <code>dotnet test test-library/test-library.csproj</code> to\nrun the tests.\nThe xUnit console test runner will run the one test, and report\nthat it is passing. </p>\n<h3 id=\"writing-the-console-app\">Writing the console app</h3>\n<p>In your terminal run <code>dotnet new console -o app</code>\nto create a new console application. This project is also\npart of the solution, so run <code>dotnet sln add app/app.csproj</code>\nto add the project to the solution.</p>\n<p>Your console application depends on the library you built and tested\nin the previous steps. You need to indicate that by running <code>dotnet add reference</code>\nagain:</p>\n<pre class=\"loading\"><code>dotnet add app/app.csproj reference library/library.csproj\n</code></pre><p>Run <code>dotnet restore</code> to restore all dependencies. Open <em>program.cs</em>\nand replace the contents of the <code>Main</code> method with this line:</p>\n<pre class=\"loading\"><code class=\"lang-csharp\">WriteLine($&quot;The answer is {new Thing().Get(19, 23)}&quot;);\n</code></pre><p>You&#39;ll need to add a couple <code>using</code> directives to the top of the file:</p>\n<pre class=\"loading\"><code class=\"lang-csharp\">using static System.Console;\nusing Library;\n</code></pre><p>Then, run <code>dotnet build</code>. That creates the assemblies, and you\ncan type <code>dotnet run -p app/app.csproj</code> to run the executable.\nThe <code>-p</code> argument to <code>dotnet run</code> specifies the project for the\nmain application.</p>\n<h3 id=\"debugging-your-application\">Debugging your application</h3>\n<p>You can debug your code in VS Code using the C# extension.\nYou install this extension by pressing <code>F1</code> to open the VS Code\npalette. Type <code>ext install</code> to see the list of extensions. Select the C#\nextension. (More details are available on the <a href=\"https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger.md\" data-linktype=\"external\">Visual Studio\nCode C# Extension documentation</a>\npage.)</p>\n<p>After you install the extension, VS Code will ask that you restart the application\nto load the new extension. Once the extension is installed, you can open the\ndebugger tab (see figure).</p>\n<p><img src=\"media/using-on-macos/vscodedebugger.png\" alt=\"VS Code Debugger\" data-linktype=\"relative-path\"></p>\n<p>Set a breakpoint at the <code>WriteLine</code> statement in <code>Main</code>. You do this\nby pressing the <code>F9</code> key, or by clicking the mouse in the left margin\non the line you want the breakpoint. \nOpen the debugger by pressing the debug\nicon on the left of the VS Code screen (see figure). Then,\npress the Play button to start the application under the debugger.</p>\n<p>You should hit the breakpoint. Step into the <code>Get</code> method and make sure that you\nhave passed in the correct arguments. Make sure that the answer is actually 42.</p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"bleroy\">\r\n<meta name=\"ms.author\" content=\"mairaw\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"8ad82148-dac8-4b31-9128-b0e9610f4d9b\">\r\n<meta name=\"description\" content=\"Getting started with .NET Core on macOS, using Visual Studio Code\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"02/08/2017\">\r\n<meta name=\"ms.prod\" content=\".net-core\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/08ae421b292d5807d49a7e98be546cb3771ad396/docs/core/tutorials/using-on-macos.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/core/tutorials/using-on-macos.md\">\r\n<meta name=\"document_id\" content=\"0eca18b5-7e69-e5d6-6eab-a91da1894e49\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"bleroy","ms.author":"mairaw","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Getting started with .NET Core on macOS | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"8ad82148-dac8-4b31-9128-b0e9610f4d9b","description":"Getting started with .NET Core on macOS, using Visual Studio Code","keywords":".NET, .NET Core","ms.topic":"article","ms.date":"02/08/2017","ms.prod":".net-core","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"John Lian","author_email":"jlian@users.noreply.github.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Fixed error with classlib","commit_sha":"08ae421b292d5807d49a7e98be546cb3771ad396","commit_date":"2017-03-10 21:23:42 -0800"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Update getting started on macos (#1560)","commit_sha":"b973eb687da56bd657847f82e34edabf3c7c13bd","commit_date":"2017-03-07 08:09:12 -0500"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":":boom: removing preview3 folder (#1650)","commit_sha":"c2722327c3ca213309cae5e0d0417b0f0e9ea514","commit_date":"2017-03-07 03:26:34 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"fix typo","commit_sha":"1660112e9de49ad8b5326665a6a0b8db766a4e5f","commit_date":"2017-02-27 12:18:19 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Revert \"update getting started for csproj build system.\"","commit_sha":"8fba5c76375763abf90e2e17d3bcc9d0039089f0","commit_date":"2017-02-14 16:56:09 -0800"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"update getting started for csproj build system. (#1541)","commit_sha":"e616713ca82b83807daac4a33a92f26dbe27de91","commit_date":"2017-02-14 12:05:18 -0500"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"expression-bodied should be hyphenated (#1384)","commit_sha":"7ac95fa4b2aac81b2e8d33cedf2faf36a0bbf210","commit_date":"2017-01-05 10:03:42 -0500"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Duncan Mackenzie","author_email":"duncanma@microsoft.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Updating languages used in sample article (#1199)","commit_sha":"2339be6aef7e2ff942f1f1999a12f48ee4a77ee8","commit_date":"2016-11-01 18:54:22 -0700"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"renamed repo/fixed headings (#1186)","commit_sha":"15c55a87beb64f265a164db918c7721c7690fadf","commit_date":"2016-10-29 15:23:17 -0400"},{"author_name":"Bader Nasser","author_email":"badersur@users.noreply.github.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Change Library to library (#1072)","commit_sha":"4a8a0db2f4f971495b75f6504bfb3af65400bd7f","commit_date":"2016-10-03 15:58:20 -0700"},{"author_name":"Timothy McGrath","author_email":"timothy.mcgrath@gmail.com","committer_name":"Phillip Carter","comitter_email":"phillip.carter@outlook.com","message":"Fixes project.json dependencies node mistake (#901)","commit_sha":"405947314b9760b5c132210a0e916776d123677c","commit_date":"2016-08-13 10:08:22 -0700"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Update ci build for ubuntu (#891)","commit_sha":"ce52ada663c2ed9b8b3d10bc3d4dcb453abb79f7","commit_date":"2016-08-09 16:02:13 -0400"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"Fixed typos and other small things (#883)","commit_sha":"bb15293c569fa92f1acf6315c5fe7f2cd9cb6f68","commit_date":"2016-08-08 21:27:46 -0400"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"moving images to media folder (#777)","commit_sha":"a90e173972bec5eb60325c2285af569727b3cc4d","commit_date":"2016-07-12 10:34:34 -0700"},{"author_name":"heyalistair","author_email":"alistairj@gmail.com","committer_name":"Rich Lander","comitter_email":"rlander@microsoft.com","message":"fixing small mistake in the directory tree layout (#729)","commit_sha":"f67f0bc964388c68e2650c352da46a0b890a2676","commit_date":"2016-07-01 16:13:40 -0700"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Rich Lander","comitter_email":"rlander@microsoft.com","message":"fixing broken links (#734)","commit_sha":"948d1d3d6b85bfbbb3f12dd128716b2ad1ec22df","commit_date":"2016-07-01 16:12:49 -0700"},{"author_name":"Darren Fuller","author_email":"daz.fuller@gmail.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"Corrected folder path for library output (#708)","commit_sha":"c080f1200e13adccad25ce088534567be4416fd5","commit_date":"2016-06-29 17:34:45 -0400"},{"author_name":"Jack Barclay","author_email":"jackbarclay@users.noreply.github.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Update using-on-macos.md","commit_sha":"ae6bfda8c9a77c9c84b70439091c53160eb369d6","commit_date":"2016-06-28 16:16:35 +0100"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"Rich Lander","comitter_email":"rlander@microsoft.com","message":"Promote csharp from languages (#644)","commit_sha":"2d44b7e04c0fe2ca136ba6dfa9fc3a4368365ec8","commit_date":"2016-06-26 08:30:56 -0700"},{"author_name":"Tom Dykstra","author_email":"tdykstra@microsoft.com","committer_name":"Rich Lander","comitter_email":"rlander@microsoft.com","message":"coordinate titles between toc and articles for core guide (#640)","commit_sha":"c3b0ba6f62d0a7ee740d3f552e3e405a5e33d985","commit_date":"2016-06-25 15:30:01 -0700"},{"author_name":"Tom Dykstra","author_email":"tdykstra@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"toc changes for .net core guide section (#609)","commit_sha":"a77454a141ed46eaeeda25dc723476fdb4e542e9","commit_date":"2016-06-24 15:15:55 -0400"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/bleroy","display_name":"Bertrand Le Roy","id":"1165609"},"contributors":[{"profile_url":"https://github.com/bleroy","display_name":"Bertrand Le Roy"},{"profile_url":"https://github.com/jlian","display_name":"John Lian","id":"2320572"},{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"},{"profile_url":"https://github.com/DuncanmaMSFT","display_name":"Duncan Mackenzie","id":"18338424"},{"profile_url":"https://github.com/badersur","display_name":"Bader Nasser","id":"1686391"},{"profile_url":"https://github.com/timothymcgrath","display_name":"Timothy McGrath","id":"12926843"},{"profile_url":"https://github.com/heyalistair","display_name":"heyalistair","id":"1237855"},{"profile_url":"https://github.com/dazfuller","display_name":"Darren Fuller","id":"204848"},{"profile_url":"https://github.com/jackbarclay","display_name":"Jack Barclay","id":"4572940"},{"profile_url":"https://github.com/tdykstra","display_name":"Tom Dykstra","id":"1569635"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/08ae421b292d5807d49a7e98be546cb3771ad396/docs/core/tutorials/using-on-macos.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/core/tutorials/using-on-macos.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/core/tutorials/using-on-macos.md","document_id":"0eca18b5-7e69-e5d6-6eab-a91da1894e49","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/core/tutorials/using-on-macos","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Getting started with .NET Core on macOS","_op_displayDate":"2017-2-8","_op_displayDate_source":"2017-02-08T00:00:00Z","_op_wordCount":1162,"_op_rawTitle":"<h1 id=\"getting-started-with-net-core-on-macos-using-visual-studio-code\" sourcefile=\"docs/core/tutorials/using-on-macos.md\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\">Getting started with .NET Core on macOS, using Visual Studio Code</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/core/tutorials/using-on-macos","fileRelativePath":"articles/core/tutorials/using-on-macos.html"},"themesRelativePathToOutputRoot":"_themes/"}