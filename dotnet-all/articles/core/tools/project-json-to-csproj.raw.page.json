{"content":"<div><div class=\"content\">\n<p>By <a href=\"http://github.com/natemcmaster\" data-linktype=\"external\">Nate McMaster</a></p>\n<p>During the development of the .NET Core tooling, an important design change was made to \nno longer support <em>project.json</em> files and instead move the .NET Core projects to the MSBuild/csproj \nformat.</p>\n<p>This article shows how the settings in <em>project.json</em> are represented in the MSBuild/csproj format so you\ncan learn how to use the new format and understand the changes made by the migration tools when you&#39;re\nupgrading your project to the latest version of the tooling. </p>\n<h2 id=\"the-csproj-format\">The csproj format</h2>\n<p>The new format, *.csproj, is an XML-based format. The following example shows the root node of a \n.NET Core project using the <code>Microsoft.NET.Sdk</code>. For web projects, the SDK used is \n<code>Microsoft.NET.Sdk.Web</code>.</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;\n...\n&lt;/Project&gt;\n</code></pre><h2 id=\"common-top-level-properties\">Common top-level properties</h2>\n<h3 id=\"name\">name</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;name&quot;: &quot;MyProjectName&quot;\n}\n</code></pre><p>No longer supported. In csproj, this is determined by the project filename, which is defined by the directory name. For example, <code>MyProjectName.csproj</code>.</p>\n<p>By default, the project filename also specifies the value of the <code>&lt;AssemblyName&gt;</code> and <code>&lt;PackageId&gt;</code> properties. </p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;AssemblyName&gt;MyProjectName&lt;/AssemblyName&gt;\n  &lt;PackageId&gt;MyProjectName&lt;/PackageId&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><p>The <code>&lt;AssemblyName&gt;</code> will have a different value then <code>&lt;PackageId&gt;</code> if <code>buildOptions\\outputName</code> property was defined in project.json. \nFor more information, see <a href=\"#other-common-build-options\" data-linktype=\"self-bookmark\">Other common build options</a>.</p>\n<h3 id=\"version\">version</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;version&quot;: &quot;1.0.0-alpha-*&quot;\n}\n</code></pre><p>Use the <code>VersionPrefix</code> and <code>VersionSuffix</code> properties:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;VersionPrefix&gt;1.0.0&lt;/VersionPrefix&gt;\n  &lt;VersionSuffix&gt;alpha&lt;/VersionSuffix&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><p>You can also use the <code>Version</code> property, but this may override version settings during packaging:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;Version&gt;1.0.0-alpha&lt;/Version&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h3 id=\"other-common-root-level-options\">Other common root-level options</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;authors&quot;: [ &quot;Anne&quot;, &quot;Bob&quot; ],\n  &quot;company&quot;: &quot;Contoso&quot;,\n  &quot;language&quot;: &quot;en-US&quot;,\n  &quot;title&quot;: &quot;My library&quot;,\n  &quot;description&quot;: &quot;This is my library.\\r\\nAnd it&#39;s really great!&quot;,\n  &quot;copyright&quot;: &quot;Nugetizer 3000&quot;,\n  &quot;userSecretsId&quot;: &quot;xyz123&quot;\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;Authors&gt;Anne;Bob&lt;/Authors&gt;\n  &lt;Company&gt;Contoso&lt;/Company&gt;\n  &lt;NeutralLanguage&gt;en-US&lt;/NeutralLanguage&gt;\n  &lt;AssemblyTitle&gt;My library&lt;/AssemblyTitle&gt;\n  &lt;Description&gt;This is my library.\nAnd it&#39;s really great!&lt;/Description&gt;\n  &lt;Copyright&gt;Nugetizer 3000&lt;/Copyright&gt;\n  &lt;UserSecretsId&gt;xyz123&lt;/UserSecretsId&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h2 id=\"frameworks\">frameworks</h2>\n<h3 id=\"one-target-framework\">One target framework</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;frameworks&quot;: {\n    &quot;netcoreapp1.0&quot;: {}\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;TargetFramework&gt;netcoreapp1.0&lt;/TargetFramework&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h3 id=\"multiple-target-frameworks\">Multiple target frameworks</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;frameworks&quot;: {\n    &quot;netcoreapp1.0&quot;: {},\n    &quot;net451&quot;: {}\n  }\n}\n</code></pre><p>Use the <code>TargetFrameworks</code> property to define your list of target frameworks. Use semi-colon to separate multiple framework values. </p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;TargetFrameworks&gt;netcoreapp1.0;net451&lt;/TargetFrameworks&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h2 id=\"dependencies\">dependencies</h2>\n<div class=\"IMPORTANT\"><h5>Important</h5><p>If the dependency is a <strong>project</strong> and not a package, the format is different. \nFor more information, see the <a href=\"#dependency-type\" data-linktype=\"self-bookmark\">dependency type</a> section.</p>\n</div>\n<h3 id=\"netstandardlibrary-metapackage\">NETStandard.Library metapackage</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;dependencies&quot;: {\n    &quot;NETStandard.Library&quot;: &quot;1.6.0&quot;\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;NetStandardImplicitPackageVersion&gt;1.6.0&lt;/NetStandardImplicitPackageVersion&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h3 id=\"microsoftnetcoreapp-metapackage\">Microsoft.NETCore.App metapackage</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;dependencies&quot;: {\n    &quot;Microsoft.NETCore.App&quot;: &quot;1.0.0&quot;\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;RuntimeFrameworkVersion&gt;1.0.3&lt;/RuntimeFrameworkVersion&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><p>Note that the <code>&lt;RuntimeFrameworkVersion&gt;</code> value in the migrated project is determined by the version of the SDK you have installed.</p>\n<h3 id=\"top-level-dependencies\">Top-level dependencies</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;dependencies&quot;: {\n    &quot;Microsoft.AspNetCore&quot;: &quot;1.1.0&quot;\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;PackageReference Include=&quot;Microsoft.AspNetCore&quot; Version=&quot;1.1.0&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><h3 id=\"per-framework-dependencies\">Per-framework dependencies</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;framework&quot;: {\n    &quot;net451&quot;: {\n      &quot;dependencies&quot;: {\n        &quot;System.Collections.Immutable&quot;: &quot;1.3.1&quot;\n      }\n    },\n    &quot;netstandard1.5&quot;: {\n      &quot;dependencies&quot;: {\n        &quot;Newtonsoft.Json&quot;: &quot;9.0.1&quot;\n      }\n    }\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup Condition=&quot;&#39;$(TargetFramework)&#39;==&#39;net451&#39;&quot;&gt;\n  &lt;PackageReference Include=&quot;System.Collections.Immutable&quot; Version=&quot;1.3.1&quot; /&gt;\n&lt;/ItemGroup&gt;\n\n&lt;ItemGroup Condition=&quot;&#39;$(TargetFramework)&#39;==&#39;netstandard1.5&#39;&quot;&gt;\n  &lt;PackageReference Include=&quot;Newtonsoft.Json&quot; Version=&quot;9.0.1&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><h3 id=\"imports\">imports</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;dependencies&quot;: {\n    &quot;YamlDotNet&quot;: &quot;4.0.1-pre309&quot;\n  },\n  &quot;frameworks&quot;: {\n    &quot;netcoreapp1.0&quot;: {\n      &quot;imports&quot;: [\n        &quot;dnxcore50&quot;,\n        &quot;dotnet&quot;\n      ]\n    }\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;PackageTargetFallback&gt;dnxcore50;dotnet&lt;/PackageTargetFallback&gt;\n&lt;/PropertyGroup&gt;\n&lt;ItemGroup&gt;\n  &lt;PackageReference Include=&quot;YamlDotNet&quot; Version=&quot;4.0.1-pre309&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><h3 id=\"dependency-type\">dependency type</h3>\n<h4 id=\"type-project\">type: project</h4>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;dependencies&quot;: {\n    &quot;MyOtherProject&quot;: &quot;1.0.0-*&quot;,\n    &quot;AnotherProject&quot;: {\n      &quot;type&quot;: &quot;project&quot;\n    }\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;ProjectReference Include=&quot;..\\MyOtherProject\\MyOtherProject.csproj&quot; /&gt;\n  &lt;ProjectReference Include=&quot;..\\AnotherProject\\AnotherProject.csproj&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><div class=\"NOTE\"><h5>Note</h5><p>This will break the way that <code>dotnet pack --version-suffix $suffix</code> determines the \ndependency version of a project reference.</p>\n</div>\n<h4 id=\"type-build\">type: build</h4>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;dependencies&quot;: {\n    &quot;Microsoft.EntityFrameworkCore.Design&quot;: {\n      &quot;version&quot;: &quot;1.1.0&quot;,\n      &quot;type&quot;: &quot;build&quot;\n    }\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;PackageReference Include=&quot;Microsoft.EntityFrameworkCore.Design&quot; Version=&quot;1.1.0&quot; PrivateAssets=&quot;All&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><h4 id=\"type-platform\">type: platform</h4>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;dependencies&quot;: {\n    &quot;Microsoft.NETCore.App&quot;: {\n      &quot;version&quot;: &quot;1.1.0&quot;,\n      &quot;type&quot;: &quot;platform&quot;\n    }\n  }\n}\n</code></pre><p>There is no equivalent in csproj. </p>\n<h2 id=\"runtimes\">runtimes</h2>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;runtimes&quot;: {\n    &quot;win7-x64&quot;: {},\n    &quot;osx.10.11-x64&quot;: {},\n    &quot;ubuntu.16.04-x64&quot;: {}\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;RuntimeIdentifiers&gt;win7-x64;osx.10-11-x64;ubuntu.16.04-x64&lt;/RuntimeIdentifiers&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h3 id=\"standalone-apps-self-contained-deployment\">Standalone apps (self-contained deployment)</h3>\n<p>In project.json, defining a <code>runtimes</code> section means the app was standalone during\nbuild and publish.\nIn MSBuild, all projects are <em>portable</em> during build, but can be published as\nstandalone.</p>\n<p><code>dotnet publish --framework netcoreapp1.0 --runtime osx.10.11-x64</code></p>\n<p>For more information, see <a href=\"../deploying/index#self-contained-deployments-scd\" data-linktype=\"relative-path\">Self-contained deployments (SCD)</a>.</p>\n<h2 id=\"tools\">tools</h2>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;tools&quot;: {\n    &quot;Microsoft.EntityFrameworkCore.Tools.DotNet&quot;: &quot;1.0.0-*&quot;\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;DotNetCliToolReference Include=&quot;Microsoft.EntityFrameworkCore.Tools.DotNet&quot; Version=&quot;1.0.0&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><div class=\"NOTE\"><h5>Note</h5><p><code>imports</code> on tools are not supported in csproj. Tools that need imports will not work with\nthe new <code>Microsoft.NET.Sdk</code>.</p>\n</div>\n<h2 id=\"buildoptions\">buildOptions</h2>\n<p>See also <a href=\"#files\" data-linktype=\"self-bookmark\">Files</a>.</p>\n<h3 id=\"emitentrypoint\">emitEntryPoint</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;buildOptions&quot;: {\n    &quot;emitEntryPoint&quot;: true\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;OutputType&gt;Exe&lt;/OutputType&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><p>If <code>emitEntryPoint</code> was <code>false</code>, the value of <code>OutputType</code> is converted to <code>Library</code>, which is the default value:</p>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;buildOptions&quot;: {\n    &quot;emitEntryPoint&quot;: false\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;OutputType&gt;Library&lt;/OutputType&gt;\n  &lt;!-- or, omit altogether. It defaults to &#39;Library&#39; --&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h3 id=\"keyfile\">keyFile</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;buildOptions&quot;: {\n    &quot;keyFile&quot;: &quot;MyKey.snk&quot;\n  }\n}\n</code></pre><p>The <code>keyFile</code> element expands to three properties in MSBuild:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;AssemblyOriginatorKeyFile&gt;MyKey.snk&lt;/AssemblyOriginatorKeyFile&gt;\n  &lt;SignAssembly&gt;true&lt;/SignAssembly&gt;\n  &lt;PublicSign Condition=&quot;&#39;$(OS)&#39; != &#39;Windows_NT&#39;&quot;&gt;true&lt;/PublicSign&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h3 id=\"other-common-build-options\">Other common build options</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;buildOptions&quot;: {\n    &quot;warningsAsErrors&quot;: true,\n    &quot;nowarn&quot;: [&quot;CS0168&quot;, &quot;CS0219&quot;],\n    &quot;xmlDoc&quot;: true,\n    &quot;preserveCompilationContext&quot;: true,\n    &quot;outputName&quot;: &quot;Different.AssemblyName&quot;,\n    &quot;debugType&quot;: &quot;portable&quot;,\n    &quot;allowUnsafe&quot;: true,\n    &quot;define&quot;: [&quot;TEST&quot;, &quot;OTHERCONDITION&quot;]\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;TreatWarningsAsErrors&gt;true&lt;/TreatWarningsAsErrors&gt;\n  &lt;NoWarn&gt;$(NoWarn);CS0168;CS0219&lt;/NoWarn&gt;\n  &lt;GenerateDocumentationFile&gt;true&lt;/GenerateDocumentationFile&gt;\n  &lt;PreserveCompilationContext&gt;true&lt;/PreserveCompilationContext&gt;\n  &lt;AssemblyName&gt;Different.AssemblyName&lt;/AssemblyName&gt;\n  &lt;DebugType&gt;portable&lt;/DebugType&gt;\n  &lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;\n  &lt;DefineConstants&gt;$(DefineConstants);TEST;OTHERCONDITION&lt;/DefineConstants&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h2 id=\"packoptions\">packOptions</h2>\n<p>See also <a href=\"#files\" data-linktype=\"self-bookmark\">Files</a>.</p>\n<h3 id=\"common-pack-options\">Common pack options</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;packOptions&quot;: {    \n    &quot;summary&quot;: &quot;numl is a machine learning library intended to ease the use of using standard modeling techniques for both prediction and clustering.&quot;,\n    &quot;tags&quot;: [&quot;machine learning&quot;, &quot;framework&quot;],\n    &quot;releaseNotes&quot;: &quot;Version 0.9.12-beta&quot;,\n    &quot;iconUrl&quot;: &quot;http://numl.net/images/ico.png&quot;,\n    &quot;projectUrl&quot;: &quot;http://numl.net&quot;,\n    &quot;licenseUrl&quot;: &quot;https://raw.githubusercontent.com/sethjuarez/numl/master/LICENSE.md&quot;,\n    &quot;requireLicenseAcceptance&quot;: false,\n    &quot;repository&quot;: {\n      &quot;type&quot;: &quot;git&quot;,\n      &quot;url&quot;: &quot;https://raw.githubusercontent.com/sethjuarez/numl&quot;\n    },\n    &quot;owners&quot;: [&quot;Seth Juarez&quot;]\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;!-- summary is not migrated from project.json, but you can use the &lt;Description&gt; property for that if needed. --&gt;\n  &lt;PackageTags&gt;machine learning;framework&lt;/PackageTags&gt;\n  &lt;PackageReleaseNotes&gt;Version 0.9.12-beta&lt;/PackageReleaseNotes&gt;\n  &lt;PackageIconUrl&gt;http://numl.net/images/ico.png&lt;/PackageIconUrl&gt;\n  &lt;PackageProjectUrl&gt;http://numl.net&lt;/PackageProjectUrl&gt;\n  &lt;PackageLicenseUrl&gt;https://raw.githubusercontent.com/sethjuarez/numl/master/LICENSE.md&lt;/PackageLicenseUrl&gt;\n  &lt;PackageRequireLicenseAcceptance&gt;false&lt;/PackageRequireLicenseAcceptance&gt;\n  &lt;RepositoryType&gt;git&lt;/RepositoryType&gt;\n  &lt;RepositoryUrl&gt;https://raw.githubusercontent.com/sethjuarez/numl&lt;/RepositoryUrl&gt;\n  &lt;!-- owners is not supported in MSBuild --&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><p>There is no equivalent for the <code>owners</code> element in MSBuild. \nFor <code>summary</code>, you can use the MSBuild <code>&lt;Description&gt;</code> property, even though the value of <code>summary</code> is not migrated automatically to that property, since that \nproperty is mapped to the <a href=\"#-other-common-root-level-options\" data-linktype=\"self-bookmark\"><code>description</code></a> element.</p>\n<h2 id=\"scripts\">scripts</h2>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;scripts&quot;: {\n    &quot;precompile&quot;: &quot;generateCode.cmd&quot;,\n    &quot;postpublish&quot;: [ &quot;obfuscate.cmd&quot;, &quot;removeTempFiles.cmd&quot; ]\n  }\n}\n</code></pre><p>Their equivalent in MSBuild are <a href=\"https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets\" data-linktype=\"external\">targets</a>:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;Target Name=&quot;MyPreCompileTarget&quot; BeforeTargets=&quot;Build&quot;&gt;\n  &lt;Exec Command=&quot;generateCode.cmd&quot; /&gt;\n&lt;/Target&gt;\n\n&lt;Target Name=&quot;MyPostCompileTarget&quot; AfterTargets=&quot;Publish&quot;&gt;\n  &lt;Exec Command=&quot;obfuscate.cmd&quot; /&gt;\n  &lt;Exec Command=&quot;removeTempFiles.cmd&quot; /&gt;\n&lt;/Target&gt;\n</code></pre><h2 id=\"runtimeoptions\">runtimeOptions</h2>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;runtimeOptions&quot;: {\n    &quot;configProperties&quot;: {\n      &quot;System.GC.Server&quot;: true,\n      &quot;System.GC.Concurrent&quot;: true,\n      &quot;System.GC.RetainVM&quot;: true,\n      &quot;System.Threading.ThreadPool.MinThreads&quot;: 4,\n      &quot;System.Threading.ThreadPool.MaxThreads&quot;: 25\n    }\n  }\n}\n</code></pre><p>All settings in this group, except for the &quot;System.GC.Server&quot; property, are placed into a file called\n<em>runtimeconfig.template.json</em> in the project folder, with options lifted to the root object during the migration process:</p>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;configProperties&quot;: {\n    &quot;System.GC.Concurrent&quot;: true,\n    &quot;System.GC.RetainVM&quot;: true,\n    &quot;System.Threading.ThreadPool.MinThreads&quot;: 4,\n    &quot;System.Threading.ThreadPool.MaxThreads&quot;: 25\n  }\n}\n</code></pre><p>The &quot;System.GC.Server&quot; property is migrated into the csproj file:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;ServerGarbageCollection&gt;true&lt;/ServerGarbageCollection&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><p>However, you can set all those values in the csproj as well as MSBuild properties:</p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;PropertyGroup&gt;\n  &lt;ServerGarbageCollection&gt;true&lt;/ServerGarbageCollection&gt;\n  &lt;ConcurrentGarbageCollection&gt;true&lt;/ConcurrentGarbageCollection&gt;\n  &lt;RetainVMGarbageCollection&gt;true&lt;/RetainVMGarbageCollection&gt;\n  &lt;ThreadPoolMinThreads&gt;4&lt;/ThreadPoolMinThreads&gt;\n  &lt;ThreadPoolMaxThreads&gt;25&lt;/ThreadPoolMaxThreads&gt;\n&lt;/PropertyGroup&gt;\n</code></pre><h2 id=\"shared\">shared</h2>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;shared&quot;: &quot;shared/**/*.cs&quot;\n}\n</code></pre><p>Not supported in csproj. You must instead create include content files in your <em>.nuspec</em> file. \nFor more information, see <a href=\"https://docs.microsoft.com/nuget/schema/nuspec#including-content-files\" data-linktype=\"external\">Including content files</a>.</p>\n<h2 id=\"files\">files</h2>\n<p>In <em>project.json</em>, build and pack could be extended to compile and embed from different folders.\nIn MSBuild, this is done using <a href=\"https://docs.microsoft.com/visualstudio/msbuild/common-msbuild-project-items\" data-linktype=\"external\">items</a>. The following example is a common conversion:</p>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;buildOptions&quot;: {\n    &quot;compile&quot;: {\n      &quot;copyToOutput&quot;: &quot;notes.txt&quot;,\n      &quot;include&quot;: &quot;../Shared/*.cs&quot;,\n      &quot;exclude&quot;: &quot;../Shared/Not/*.cs&quot;\n    },\n    &quot;embed&quot;: {\n      &quot;include&quot;: &quot;../Shared/*.resx&quot;\n    }\n  },\n  &quot;packOptions&quot;: {\n    &quot;include&quot;: &quot;Views/&quot;,\n    &quot;mappings&quot;: {\n      &quot;some/path/in/project.txt&quot;: &quot;in/package.txt&quot;\n    }\n  },\n  &quot;publishOptions&quot;: {\n    &quot;include&quot;: [\n      &quot;files/&quot;,\n      &quot;publishnotes.txt&quot;\n    ]\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;Compile Include=&quot;..\\Shared\\*.cs&quot; Exclude=&quot;..\\Shared\\Not\\*.cs&quot; /&gt;\n  &lt;EmbeddedResource Include=&quot;..\\Shared\\*.resx&quot; /&gt;\n  &lt;Content Include=&quot;Views\\**\\*&quot; PackagePath=&quot;%(Identity)&quot; /&gt;\n  &lt;None Include=&quot;some/path/in/project.txt&quot; Pack=&quot;true&quot; PackagePath=&quot;in/package.txt&quot; /&gt;\n\n  &lt;None Include=&quot;notes.txt&quot; CopyToOutputDirectory=&quot;Always&quot; /&gt;\n  &lt;!-- CopyToOutputDirectory = { Always, PreserveNewest, Never } --&gt;\n\n  &lt;Content Include=&quot;files\\**\\*&quot; CopyToPublishDirectory=&quot;PreserveNewest&quot; /&gt;\n  &lt;None Include=&quot;publishnotes.txt&quot; CopyToPublishDirectory=&quot;Always&quot; /&gt;\n  &lt;!-- CopyToPublishDirectory = { Always, PreserveNewest, Never } --&gt;\n&lt;/ItemGroup&gt;\n</code></pre><div class=\"NOTE\"><h5>Note</h5><p>Many of the default <a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\" data-linktype=\"external\">globbing patterns</a> are added automatically by the .NET Core SDK.\nFor more information, see <a href=\"https://aka.ms/sdkimplicititems\" data-linktype=\"external\">Default Compile Item Values</a>.</p>\n</div>\n<p>All MSBuild <code>ItemGroup</code> elements support <code>Include</code>, <code>Exclude</code>, and <code>Remove</code>.</p>\n<p>Package layout inside the .nupkg can be modified with <code>PackagePath=&quot;path&quot;</code>.</p>\n<p>Except for <code>Content</code>, most item groups require explicitly adding <code>Pack=&quot;true&quot;</code> to \nbe included in the package. <code>Content</code> will be put in the <em>content</em> folder\nin a package since the MSBuild <code>&lt;IncludeContentInPack&gt;</code> property is set to <code>true</code> by default. \nFor more information, see <a href=\"https://docs.microsoft.com/nuget/schema/msbuild-targets#including-content-in-a-package\" data-linktype=\"external\">Including content in a package</a>.</p>\n<p><code>PackagePath=&quot;%(Identity)&quot;</code> is a short way of setting package path\nto the project-relative file path.</p>\n<h2 id=\"testrunner\">testRunner</h2>\n<h3 id=\"xunit\">xUnit</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;testRunner&quot;: &quot;xunit&quot;,\n  &quot;dependencies&quot;: {\n    &quot;dotnet-test-xunit&quot;: &quot;&lt;any&gt;&quot;\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;PackageReference Include=&quot;Microsoft.NET.Test.Sdk&quot; Version=&quot;15.0.0-*&quot; /&gt;\n  &lt;PackageReference Include=&quot;xunit&quot; Version=&quot;2.2.0-*&quot; /&gt;\n  &lt;PackageReference Include=&quot;xunit.runner.visualstudio&quot; Version=&quot;2.2.0-*&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><h3 id=\"mstest\">MSTest</h3>\n<pre class=\"loading\"><code class=\"lang-json\">{\n  &quot;testRunner&quot;: &quot;mstest&quot;,\n  &quot;dependencies&quot;: {\n    &quot;dotnet-test-mstest&quot;: &quot;&lt;any&gt;&quot;\n  }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-xml\">&lt;ItemGroup&gt;\n  &lt;PackageReference Include=&quot;Microsoft.NET.Test.Sdk&quot; Version=&quot;15.0.0-*&quot; /&gt;\n  &lt;PackageReference Include=&quot;MSTest.TestAdapter&quot; Version=&quot;1.1.12-*&quot; /&gt;\n  &lt;PackageReference Include=&quot;MSTest.TestFramework&quot; Version=&quot;1.1.11-*&quot; /&gt;\n&lt;/ItemGroup&gt;\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p><a href=\"project-json\" data-linktype=\"relative-path\">project.json reference</a></p>\n<p><a href=\"cli-msbuild-architecture\" data-linktype=\"relative-path\">High-level overview of changes in CLI</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"natemcmaster\">\r\n<meta name=\"ms.author\" content=\"mairaw\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"79c50621-a24a-4e64-bbb9-b953113e841c\">\r\n<meta name=\"description\" content=\"See a mapping between project.json and csproj elements.\">\r\n<meta name=\"keywords\" content=\"project.json, csproj, .NET Core, MSBuild\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"03/13/2017\">\r\n<meta name=\"ms.technology\" content=\"dotnet-cli\">\r\n<meta name=\"ms.prod\" content=\".net-core\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/b4fb772973607b94e120377879a5dbdde2a25271/docs/core/tools/project-json-to-csproj.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/core/tools/project-json-to-csproj.md\">\r\n<meta name=\"document_id\" content=\"626f8100-0d2d-d5fb-1092-7392531eb2fc\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"natemcmaster","ms.author":"mairaw","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"project.json and csproj comparison - .NET Core | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"79c50621-a24a-4e64-bbb9-b953113e841c","description":"See a mapping between project.json and csproj elements.","keywords":"project.json, csproj, .NET Core, MSBuild","ms.topic":"article","ms.date":"03/13/2017","ms.technology":"dotnet-cli","ms.prod":".net-core","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"tompratt-AQ","author_email":"v-thprat@microsoft.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Added link to help define globs per issue 1610. (#1708)","commit_sha":"b4fb772973607b94e120377879a5dbdde2a25271","commit_date":"2017-03-14 16:31:17 -0700"},{"author_name":"Jonathan Kuleff","author_email":"jonathankuleff@gmail.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"some tags were not closed","commit_sha":"adcf00e0be6a398c78d88e575469d1fba9f76f7b","commit_date":"2017-03-15 07:54:46 +1100"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":":boom: removing preview3 folder (#1650)","commit_sha":"c2722327c3ca213309cae5e0d0417b0f0e9ea514","commit_date":"2017-03-07 03:26:34 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"fixing terminology (#1606)","commit_sha":"d49daa0bc8de1aca41cce032764cea29e147af06","commit_date":"2017-03-02 15:57:12 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"adding link to MSBuild targets docs","commit_sha":"40cb18f650ac59d3c817c12dca06ec558a3b791b","commit_date":"2017-02-24 23:28:48 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"pj to csproj mapping (#1581)","commit_sha":"166dc5d2f22d5ada11dfe59e26cbf2afeb4e4ffb","commit_date":"2017-02-24 21:46:48 -0800"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/natemcmaster","display_name":"Nate McMaster","id":"2696087"},"contributors":[{"profile_url":"https://github.com/natemcmaster","display_name":"Nate McMaster"},{"profile_url":"https://github.com/tompratt-AQ","display_name":"tompratt-AQ","id":"26311438"},{"profile_url":"https://github.com/JonCubed","display_name":"Jonathan Kuleff","id":"2541500"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/b4fb772973607b94e120377879a5dbdde2a25271/docs/core/tools/project-json-to-csproj.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/core/tools/project-json-to-csproj.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/core/tools/project-json-to-csproj.md","document_id":"626f8100-0d2d-d5fb-1092-7392531eb2fc","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/core/tools/project-json-to-csproj","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"project.json and csproj comparison - .NET Core","_op_displayDate":"2017-3-13","_op_displayDate_source":"2017-03-13T00:00:00Z","_op_wordCount":1327,"_op_rawTitle":"<h1 id=\"a-mapping-between-projectjson-and-csproj-properties\" sourcefile=\"docs/core/tools/project-json-to-csproj.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">A mapping between project.json and csproj properties</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/core/tools/project-json-to-csproj","fileRelativePath":"articles/core/tools/project-json-to-csproj.html"},"themesRelativePathToOutputRoot":"_themes/"}