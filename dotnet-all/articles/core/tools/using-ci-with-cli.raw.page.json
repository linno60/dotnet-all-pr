{"content":"<div><div class=\"content\">\n<h2 id=\"overview\">Overview</h2>\n<p>This document outlines the usage of .NET Core SDK and its tools on the build server. In general, on a CI build server, \nyou want to automate the installation in some way. The automation, ideally, should not require administrative \nprivileges if at all possible. </p>\n<p>For SaaS CI solutions, there are several options. This document will cover two very popular ones, <a href=\"https://travis-ci.org/\" data-linktype=\"external\">TravisCI</a> and \n<a href=\"https://www.appveyor.com/\" data-linktype=\"external\">AppVeyor</a>. There are, of course, many other services out there, but the installation and \nusage mechanisms should be similar.</p>\n<h2 id=\"installation-options-for-ci-build-servers\">Installation options for CI build servers</h2>\n<h2 id=\"using-the-native-installers\">Using the native installers</h2>\n<p>If using installers that require administrative privileges is not something that presents a problem, native installers for \neach platform can be used to set up the build server. This approach, especially in the case of Linux build servers, has \none advantage which is automatic installing of dependencies needed for the SDK to run. The native installers will also \ninstall a system-wide version of the SDK, which may be desired; if it&#39;s not, you should look into the \n<a href=\"#using-the-installer-script\" data-linktype=\"self-bookmark\">installer script usage</a> outlined below. </p>\n<p>Using this approach is simple. For Linux, there is a choice of using a feed-based package manager, such as <code>apt-get</code> for \nUbuntu or <code>yum</code> for CentOS, or using the packages themselves (that is, DEB or RPM). The former would require setting up the \nfeed that contains the packages.</p>\n<p>For Windows platforms, you can use the MSI. </p>\n<p>All of the binaries can be found on the <a href=\"https://aka.ms/dotnetcoregs\" data-linktype=\"external\">.NET Core getting started page</a> which points to the \nlatest stable releases. If you wish to use newer (and potentially unstable) releases or the latest, you can use the \nlinks from the <a href=\"https://github.com/dotnet/cli\" data-linktype=\"external\">CLI repo</a>. </p>\n<h2 id=\"using-the-installer-script\">Using the installer script</h2>\n<p>Using the installer script allows for non-administrative installation on your build server. It also allows a very easy \nautomation. The script itself will download the ZIP/tarball files needed and will unpack them; it will also add the \ninstall location on the local machine to the PATH so that the tools become available for invocation immediately \npost-install. </p>\n<p>The installer script can easily be automated at the start of the build to fetch and install the needed version of the SDK. \nThe &quot;needed version&quot; is whatever version application being built requires. You can choose the installation path so you \ncan install the SDK locally and then clean up after the build completes. This brings additional encapsulation and \natomicity to the build process. </p>\n<p>The installation script reference can be found in the <a href=\"dotnet-install-script\" data-linktype=\"relative-path\">dotnet-install</a> document. </p>\n<h3 id=\"dealing-with-the-dependencies\">Dealing with the dependencies</h3>\n<p>Using the installer script means that the native dependencies are not installed automatically and that you have to \ninstall them if the operating system you are installing on already doesn&#39;t have them. You can see the list of prerequisites \nin the <a href=\"https://github.com/dotnet/core/blob/master/Documentation/prereqs.md\" data-linktype=\"external\">CLI repo</a>. </p>\n<h2 id=\"ci-services-setup-examples\">CI services setup examples</h2>\n<p>The below sections show examples of configurations using the mentioned CI SaaS offerings. </p>\n<h3 id=\"travisci\">TravisCI</h3>\n<p>The <a href=\"https://travis-ci.org/\" data-linktype=\"external\">travis-ci</a> can be configured to install the .NET Core SDK using the <code>csharp</code> language and the <code>dotnet</code> key.</p>\n<p>Just use:</p>\n<pre class=\"loading\"><code class=\"lang-yaml\">dotnet: 1.0.0-preview2-003121\n</code></pre><p>Travis can run both <code>osx</code> (OS X 10.11) and <code>linux</code> ( Ubuntu 14.04 ) job in a build matrix, see <a href=\"https://github.com/dotnet/docs/blob/master/.travis.yml\" data-linktype=\"external\">example .travis.yml</a> \nfor more information.</p>\n<h3 id=\"appveyor\">AppVeyor</h3>\n<p>The <a href=\"https://www.appveyor.com/\" data-linktype=\"external\">appveyor.com ci</a> has .NET Core SDK preview2 already installed in the build worker image <code>Visual Studio 2015</code>.</p>\n<p>Just use:</p>\n<pre class=\"loading\"><code class=\"lang-yaml\">os: Visual Studio 2015\n</code></pre><p>It&#39;s possible to install a specific version of .NET Core SDK, see <a href=\"https://github.com/dotnet/docs/blob/master/appveyor.yml\" data-linktype=\"external\">example appveyor.yml</a> \nfor more info. </p>\n<p>In the example, the .NET Core SDK binaries are downloaded, unzipped in a subdirectory and added to <code>PATH</code> env var.</p>\n<p>A build matrix can be added to run integration tests with multiple version of \nthe .NET Core SDK.</p>\n<pre class=\"loading\"><code class=\"lang-yaml\">environment:\n  matrix:\n    - CLI_VERSION: 1.0.0-preview2-003121\n    - CLI_VERSION: Latest\n\ninstall:\n  # .NET Core SDK binaries\n  - ps: $url = &quot;https://dotnetcli.blob.core.windows.net/dotnet/preview/Binaries/$($env:CLI_VERSION)/dotnet-dev-win-x64.$($env:CLI_VERSION.ToLower()).zip&quot;\n  # follow normal installation from binaries\n</code></pre></div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"blackdwarf\">\r\n<meta name=\"ms.author\" content=\"mairaw\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc.json\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"0d6e1e34-277c-4aaf-9880-3ebf81023857\">\r\n<meta name=\"description\" content=\"Using .NET Core SDK and tools in Continuous Integration (CI)\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"06/20/2016\">\r\n<meta name=\"ms.technology\" content=\"dotnet-cli\">\r\n<meta name=\"ms.prod\" content=\".net-core\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/c2722327c3ca213309cae5e0d0417b0f0e9ea514/docs/core/tools/using-ci-with-cli.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/core/tools/using-ci-with-cli.md\">\r\n<meta name=\"document_id\" content=\"fe2fc953-fb44-b071-8973-b92e6c2df758\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc.json\">\r\n","rawMetadata":{"author":"blackdwarf","ms.author":"mairaw","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Using .NET Core SDK and tools in Continuous Integration (CI) | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"0d6e1e34-277c-4aaf-9880-3ebf81023857","description":"Using .NET Core SDK and tools in Continuous Integration (CI)","keywords":".NET, .NET Core","ms.topic":"article","ms.date":"06/20/2016","ms.technology":"dotnet-cli","ms.prod":".net-core","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":":boom: removing preview3 folder (#1650)","commit_sha":"c2722327c3ca213309cae5e0d0417b0f0e9ea514","commit_date":"2017-03-07 03:26:34 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"change version label (#1526)","commit_sha":"796df1549a7553aa93158598d62338c02d4df73e","commit_date":"2017-02-09 23:56:10 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"preparing changes for RC3 release","commit_sha":"d9ef9b8388bc854e087e0beccdb4785ed7e0f804","commit_date":"2017-01-27 11:43:14 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"added links between versions (#1424)","commit_sha":"2ad428dcda9ef213a8487c35a48b33929259abba","commit_date":"2017-01-20 23:55:05 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"renamed repo/fixed headings (#1186)","commit_sha":"15c55a87beb64f265a164db918c7721c7690fadf","commit_date":"2016-10-29 15:23:17 -0400"},{"author_name":"Enrico Sada","author_email":"enrico@sada.io","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"add travisci example (Ubuntu 14.04 and Mac OS X 10.11) (#460)","commit_sha":"966ef0a1a444ea7e4483c8e572e83a2437eeb533","commit_date":"2016-09-08 23:55:49 -0700"},{"author_name":"Robert McLaws (Microsoft .NET MVP)","author_email":"robert@advancedrei.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Update SDK version to latest public release. (#816)","commit_sha":"6428732eeabfb00b7937aeedb4858dade07605e1","commit_date":"2016-07-18 11:01:46 -0700"},{"author_name":"Enrico Sada","author_email":"enrico@sada.io","committer_name":"Phillip Carter","comitter_email":"phillip.carter@outlook.com","message":"add appveyor (#461)","commit_sha":"7a82ec31eb94285db4b767fffd1d3714ecc7f467","commit_date":"2016-06-27 13:47:29 -0700"},{"author_name":"Tom Dykstra","author_email":"tdykstra@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"toc changes for .net core guide section (#609)","commit_sha":"a77454a141ed46eaeeda25dc723476fdb4e542e9","commit_date":"2016-06-24 15:15:55 -0400"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/blackdwarf","display_name":"blackdwarf","id":"3115004"},"contributors":[{"profile_url":"https://github.com/blackdwarf","display_name":"blackdwarf"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"},{"profile_url":"https://github.com/enricosada","display_name":"Enrico Sada","id":"147243"},{"profile_url":"https://github.com/robertmclaws","display_name":"Robert McLaws (Microsoft .NET MVP)","id":"1657085"},{"profile_url":"https://github.com/tdykstra","display_name":"Tom Dykstra","id":"1569635"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/c2722327c3ca213309cae5e0d0417b0f0e9ea514/docs/core/tools/using-ci-with-cli.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/core/tools/using-ci-with-cli.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/core/tools/using-ci-with-cli.md","document_id":"fe2fc953-fb44-b071-8973-b92e6c2df758","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/core/tools/using-ci-with-cli","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Using .NET Core SDK and tools in Continuous Integration (CI)","_op_displayDate":"2016-6-20","_op_displayDate_source":"2016-06-20T00:00:00Z","_op_wordCount":624,"_op_rawTitle":"<h1 id=\"using-net-core-sdk-and-tools-in-continuous-integration-ci\" sourcefile=\"docs/core/tools/using-ci-with-cli.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Using .NET Core SDK and tools in Continuous Integration (CI)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/core/tools/using-ci-with-cli","fileRelativePath":"articles/core/tools/using-ci-with-cli.html"},"themesRelativePathToOutputRoot":"_themes/"}