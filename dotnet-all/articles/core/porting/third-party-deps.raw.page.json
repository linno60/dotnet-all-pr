{"content":"<div><div class=\"content\">\n<p>The first step in the porting process is to understand your third party dependencies.  You need to figure out which of them, if any, don&#39;t yet run on .NET Core, and develop a contingency plan for those which don&#39;t run on .NET Core.</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>This article will assume you are using Windows and Visual Studio, and that you have code which runs on the .NET Framework today.</p>\n<h2 id=\"analyzing-nuget-packages\">Analyzing NuGet Packages</h2>\n<p>Analyzing NuGet packages for portability is very easy.  Because a NuGet package is itself a set of folders which contain platform-specific assemblies, all you have to do is check to see if there is a folder which contains a .NET Core assembly.</p>\n<p>Inspecting NuGet Package folders is easiest with the <a href=\"https://github.com/NuGetPackageExplorer/NuGetPackageExplorer\" data-linktype=\"external\">NuGet Package Explorer</a> tool.  Here&#39;s how to do it.</p>\n<ol>\n<li>Download and open the NuGet Package Explorer.</li>\n<li>Click &quot;Open package from online feed&quot;.</li>\n<li>Search for the name of the package.</li>\n<li>Expand the &quot;lib&quot; folder on the right-hand side and look at folder names.</li>\n</ol>\n<p>You can also see what a package supports on <a href=\"https://www.nuget.org/\" data-linktype=\"external\">nuget.org</a> under the <strong>Dependencies</strong> section of the page for that package.</p>\n<p>In either case, you&#39;ll need to look for a folder or entry on <a href=\"https://www.nuget.org/\" data-linktype=\"external\">nuget.org</a> with any of the following names:</p>\n<pre class=\"loading\"><code>netstandard1.0\nnetstandard1.1\nnetstandard1.2\nnetstandard1.3\nnetstandard1.4\nnetstandard1.5\nnetstandard1.6\nnetcoreapp1.0\nportable-net45-win8\nportable-win8-wpa8\nportable-net451-win81\nportable-net45-win8-wpa8-wpa81\n</code></pre><p>These are the Target Framework Monikers (TFM) which map to versions of <a href=\"../../standard/library\" data-linktype=\"relative-path\">The .NET Standard Library</a> and traditional Portable Class Library (PCL) profiles which are compatible with .NET Core.  Note that <code>netcoreapp1.0</code>, while compatible, is for applications and not libraries.  Although there&#39;s nothing wrong with using a library which is <code>netcoreapp1.0</code>-based, that library may not be intended for anything <em>other</em> than consumption by other <code>netcoreapp1.0</code> applications.</p>\n<p>There are also some legacy TFMs used in pre-release versions of .NET Core that may also be compatible:</p>\n<pre class=\"loading\"><code>dnxcore50\ndotnet5.0\ndotnet5.1\ndotnet5.2\ndotnet5.3\ndotnet5.4\ndotnet5.5\n</code></pre><p><strong>While these will likely work with your code, there is no guarantee of compatibility</strong>.  Packages with these TFMs were built with pre-release .NET Core packages.  Take note of when (or if) packages like this are updated to be <code>netstandard</code>-based.</p>\n<div class=\"NOTE\"><h5>Note</h5><p>To use a package targeting a traditional PCL or pre-release .NET Core target, you must use the <code>imports</code> directive in your <code>project.json</code> file.</p>\n</div>\n<h3 id=\"what-to-do-when-your-nuget-package-dependency-doesnt-run-on-net-core\">What to do when your NuGet package dependency doesn&#39;t run on .NET Core</h3>\n<p>There are a few things you can do if a NuGet package you depend on won&#39;t run on .NET Core.</p>\n<ol>\n<li>If the project is open source and hosted somewhere like GitHub, you can engage the developer(s) directly.</li>\n<li>You can contact the author directly on <a href=\"https://www.nuget.org/\" data-linktype=\"external\">nuget.org</a> by searching for the package and clicking &quot;Contact Owners&quot; on the left hand side of the package&#39;s page.</li>\n<li>You can look for another package that runs on .NET Core which accomplishes the same task as the package you were using.</li>\n<li>You can attempt to write the code the package was doing yourself.</li>\n<li>You could eliminate the dependency on the package by changing the functionality of your app, at least until a compatible version of the package becomes available.</li>\n</ol>\n<p>Please remember that open source project maintainers and NuGet package publishers are often volunteers who contribute because they care about a given domain, do it for free, and often have a different daytime job. If you do reach out, you might start with a positive statement about the library before asking about .NET Core support.</p>\n<p>If you&#39;re unable to resolve your issue with any of the above, you may have to port to .NET Core at a later date.</p>\n<p>The .NET Team would like to know which libraries are the most important to support next with .NET Core. You can also send us mail at dotnet@microsoft.com about the libraries you&#39;d like to use.</p>\n<h2 id=\"analyzing-dependencies-which-arent-nuget-packages\">Analyzing Dependencies which aren&#39;t NuGet Packages</h2>\n<p>You may have a dependency that isn&#39;t a NuGet package, such as a DLL in the filesystem.  The only way to determine the portability of that dependency is to run the <a href=\"https://github.com/Microsoft/dotnet-apiport/blob/master/docs/HowTo/\" data-linktype=\"external\">ApiPort tool</a>.</p>\n<h2 id=\"next-steps\">Next steps</h2>\n<p>If you&#39;re porting a library, check out <a href=\"libraries\" data-linktype=\"relative-path\">Porting your Libraries</a>.</p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"mairaw\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"b446e9e0-72f6-48f6-92c6-70ad0ce3f86a\">\r\n<meta name=\"description\" content=\"Porting to .NET Core - Analyzing your Third-Party Dependencies\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"06/20/2016\">\r\n<meta name=\"ms.prod\" content=\".net-core\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/core/porting/third-party-deps.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/core/porting/third-party-deps.md\">\r\n<meta name=\"document_id\" content=\"ba4b26f3-7235-28fe-1caa-dbd8034d5de9\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"mairaw","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Porting to .NET Core - Analyzing your Third-Party Party Dependencies | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"b446e9e0-72f6-48f6-92c6-70ad0ce3f86a","description":"Porting to .NET Core - Analyzing your Third-Party Dependencies","keywords":".NET, .NET Core","ms.topic":"article","ms.date":"06/20/2016","ms.prod":".net-core","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"fix broken link (#1166)","commit_sha":"46061efa8e33c6a73befa5181eb33b8deb2fa637","commit_date":"2016-10-21 17:18:39 -0700"},{"author_name":"Maira Wenzel","author_email":"mairaw@users.noreply.github.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Broken link fixes and other issues (#724)","commit_sha":"cfe65fcba1b3fdc09ffcac704a760d8ce29ea60b","commit_date":"2016-06-30 23:16:40 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"Rich Lander","comitter_email":"rlander@microsoft.com","message":"Porting articles: 3rd party dependencies (#316)","commit_sha":"d96ac040f152a0ca1dc4bf756bf85d973d99705c","commit_date":"2016-06-26 12:36:59 -0700"},{"author_name":"Tom Dykstra","author_email":"tdykstra@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"bring porting docs to core guide (#642)","commit_sha":"027d550b109bd089d0c9785cb0b1e46817622288","commit_date":"2016-06-25 16:39:30 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"},{"profile_url":"https://github.com/tdykstra","display_name":"Tom Dykstra","id":"1569635"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/core/porting/third-party-deps.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/core/porting/third-party-deps.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/core/porting/third-party-deps.md","document_id":"ba4b26f3-7235-28fe-1caa-dbd8034d5de9","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/core/porting/third-party-deps","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Porting to .NET Core - Analyzing your Third-Party Party Dependencies","_op_displayDate":"2016-6-20","_op_displayDate_source":"2016-06-20T00:00:00Z","_op_wordCount":670,"_op_rawTitle":"<h1 id=\"porting-to-net-core---analyzing-your-third-party-party-dependencies\" sourcefile=\"docs/core/porting/third-party-deps.md\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\">Porting to .NET Core - Analyzing your Third-Party Party Dependencies</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/core/porting/third-party-deps","fileRelativePath":"articles/core/porting/third-party-deps.html"},"themesRelativePathToOutputRoot":"_themes/"}