{"content":"<div><div class=\"content\">\n<div class=\"NOTE\"><h5>Note</h5><p>The API reference links in this article will take you to MSDN.  The docs.microsoft.com API reference is not complete.</p>\n</div>\n<p>The <code>string</code> type represents immutable text as a sequence of Unicode characters. <code>string</code> is an alias for <code>System.String</code> in the .NET Framework.</p>\n<h2 id=\"remarks\">Remarks</h2>\n<p>String literals are delimited by the quotation mark (&quot;) character. The backslash character () is used to encode certain special characters. The backslash and the next character together are known as an <em>escape sequence</em>. Escape sequences supported in F# string literals are shown in the following table.</p>\n<table>\n<thead>\n<tr>\n<th>Character</th>\n<th>Escape sequence</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Backspace</td>\n<td>\\b</td>\n</tr>\n<tr>\n<td>Newline</td>\n<td>\\n</td>\n</tr>\n<tr>\n<td>Carriage return</td>\n<td>\\r</td>\n</tr>\n<tr>\n<td>Tab</td>\n<td>\\t</td>\n</tr>\n<tr>\n<td>Backslash</td>\n<td>\\</td>\n</tr>\n<tr>\n<td>Quotation mark</td>\n<td>\\&quot;</td>\n</tr>\n<tr>\n<td>Apostrophe</td>\n<td>\\&#39;</td>\n</tr>\n<tr>\n<td>Unicode character</td>\n<td>\\u<em>XXXX</em> or \\U<em>XXXXXXXX</em> (where <em>X</em> indicates a hexadecimal digit)</td>\n</tr>\n</tbody>\n</table>\n<p>If preceded by the @ symbol, the literal is a verbatim string. This means that any escape sequences are ignored, except that two quotation mark characters are interpreted as one quotation mark character.</p>\n<p>Additionally, a string may be enclosed by triple quotes. In this case, all escape sequences are ignored, including double quotation mark characters. To specify a string that contains an embedded quoted string, you can either use a verbatim string or a triple-quoted string. If you use a verbatim string, you  must specify two quotation mark characters to indicate a single quotation mark character. If you use a triple-quoted string, you can use the single quotation mark characters without them being parsed as the end of the string. This technique can be useful when you work with XML or other structures that include embedded quotation marks.</p>\n<pre class=\"loading\"><code class=\"lang-fsharp\">// Using a verbatim string\nlet xmlFragment1 = @&quot;&lt;book author=&quot;&quot;Milton, John&quot;&quot; title=&quot;&quot;Paradise Lost&quot;&quot;&gt;&quot;\n\n// Using a triple-quoted string\nlet xmlFragment2 = &quot;&quot;&quot;&lt;book author=&quot;Milton, John&quot; title=&quot;Paradise Lost&quot;&gt;&quot;&quot;&quot;\n</code></pre><p>In code, strings that have line breaks are accepted and the line breaks are interpreted literally as newlines, unless a backslash character is the last character before the line break. Leading whitespace on the next line is ignored when the backslash character is used. The following code produces a string <code>str1</code> that has value <code>&quot;abc\\n     def&quot;</code> and a string <code>str2</code> that has value <code>&quot;abcdef&quot;</code>.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let str1 = &quot;abc\n     def&quot;\nlet str2 = &quot;abc\\\n     def&quot;\n</code></pre><p>You can access individual characters in a string by using array-like syntax, as follows.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">printfn &quot;%c&quot; str1.[1]\n</code></pre><p>The output is <code>b</code>.</p>\n<p>Or you can extract substrings by using array slice syntax, as shown in the following code.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">printfn &quot;%s&quot; (str1.[0..2])\nprintfn &quot;%s&quot; (str2.[3..5])\n</code></pre><p>The output is as follows.</p>\n<pre class=\"loading\"><code>abc\ndef\n</code></pre><p>You can represent ASCII strings by arrays of unsigned bytes, type <code>byte[]</code>. You add the suffix <code>B</code> to a string literal to indicate that it is an ASCII string. ASCII string literals used with byte arrays support the same escape sequences as Unicode strings, except for the Unicode escape sequences.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">// &quot;abc&quot; interpreted as a Unicode string.\nlet str1 : string = &quot;abc&quot;\n// &quot;abc&quot; interpreted as an ASCII byte array.\nlet bytearray : byte[] = &quot;abc&quot;B\n</code></pre><h2 id=\"string-operators\">String Operators</h2>\n<p>There are two ways to concatenate strings: by using the <code>+</code> operator or by using the <code>^</code> operator. The <code>+</code> operator maintains compatibility with the .NET Framework string handling features.</p>\n<p>The following example illustrates string concatenation.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let string1 = &quot;Hello, &quot; + &quot;world&quot;\n</code></pre><h2 id=\"string-class\">String Class</h2>\n<p>Because the string type in F# is actually a .NET Framework <code>System.String</code> type, all the <code>System.String</code> members are available. This includes the <code>+</code> operator, which is used to concatenate strings, the <code>Length</code> property, and the <code>Chars</code> property, which returns the string as an array of Unicode characters. For more information about strings, see <code>System.String</code>.</p>\n<p>By using the <code>Chars</code> property of <code>System.String</code>, you can access the individual characters in a string by specifying an index, as is shown in the following code.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let printChar (str : string) (index : int) =\n    printfn &quot;First character: %c&quot; (str.Chars(index))\n</code></pre><h2 id=\"string-module\">String Module</h2>\n<p>Additional functionality for string handling is included in the <code>String</code> module in the <code>FSharp.Core</code> namespace. For more information, see <a href=\"https://msdn.microsoft.com/visualfsharpdocs/conceptual/core.string-module-%5bfsharp%5d\" data-linktype=\"external\">Core.String Module</a>.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">F# Language Reference</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"df7624e5-ca6c-4e77-9e2b-87ca7e5e6f52\">\r\n<meta name=\"description\" content=\"Strings (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/strings.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/strings.md\">\r\n<meta name=\"document_id\" content=\"ac80486e-8864-4e1d-b185-06a9d63a0bac\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Strings (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"df7624e5-ca6c-4e77-9e2b-87ca7e5e6f52","description":"Strings (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"fixed absolute and msdn links (#1001)","commit_sha":"de0dab146fc811e895dc32f98f877db5e757f82b","commit_date":"2016-09-06 10:59:39 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/strings.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/strings.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/strings.md","document_id":"ac80486e-8864-4e1d-b185-06a9d63a0bac","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/strings","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Strings (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":650,"_op_rawTitle":"<h1 id=\"strings\" sourcefile=\"docs/fsharp/language-reference/strings.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Strings</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/strings","fileRelativePath":"articles/fsharp/language-reference/strings.html"},"themesRelativePathToOutputRoot":"_themes/"}