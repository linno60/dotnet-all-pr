{"content":"<div><div class=\"content\">\n<p>The <code>unit</code> type is a type that indicates the absence of a specific value; the <code>unit</code> type has only a single value, which acts as a placeholder when no other value exists or is needed.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code class=\"lang-fsharp\">// The value of the unit type.\n()\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p>Every F# expression must evaluate to a value. For expressions that do not generate a value that is of interest, the value of type <code>unit</code> is used. The <code>unit</code> type resembles the <code>void</code> type in languages such as C# and C++.</p>\n<p>The <code>unit</code> type has a single value, and that value is indicated by the token <code>()</code>.</p>\n<p>The value of the <code>unit</code> type is often used in F# programming to hold the place where a value is required by the language syntax, but when no value is needed or desired. An example might be the return value of a <code>printf</code> function. Because the important actions of the <code>printf</code> operation occur in the function, the function does not have to return an actual value. Therefore, the return value is of type <code>unit</code>.</p>\n<p>Some constructs expect a <code>unit</code> value. For example, a <code>do</code> binding or any code at the top level of a module is expected to evaluate to a <code>unit</code> value. The compiler reports a warning when a <code>do</code> binding or code at the top level of a module produces a result other than the <code>unit</code> value that is not used, as shown in the following example.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let function1 x y = x + y\n// The next line results in a compiler warning.\nfunction1 10 20\n// Changing the code to one of the following eliminates the warning.\n// Use this when you do want the return value.\nlet result = function1 10 20\n// Use this if you are only calling the function for its side effects,\n// and do not want the return value.\nfunction1 10 20 |&gt; ignore\n</code></pre><p>This warning is a characteristic of functional programming; it does not appear in other .NET programming languages. In a purely functional program, in which functions do not have any side effects, the final return value is the only result of a function call. Therefore, when the result is ignored, it is a possible programming error. Although F# is not a purely functional programming language, it is a good practice to follow functional programming style whenever possible.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p><a href=\"primitive-types\" data-linktype=\"relative-path\">Primitive</a></p>\n<p><a href=\"index\" data-linktype=\"relative-path\">F# Language Reference</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc.json\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"eabbb6d7-80f3-4fa5-80b4-0f48982466a7\">\r\n<meta name=\"description\" content=\"Unit Type (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/unit-type.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/fsharp/language-reference/unit-type.md\">\r\n<meta name=\"document_id\" content=\"b03a8345-218a-0271-430f-199c62e6032a\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Unit Type (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"eabbb6d7-80f3-4fa5-80b4-0f48982466a7","description":"Unit Type (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/unit-type.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/fsharp/language-reference/unit-type.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/unit-type.md","document_id":"b03a8345-218a-0271-430f-199c62e6032a","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/fsharp/language-reference/unit-type","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Unit Type (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":396,"_op_rawTitle":"<h1 id=\"unit-type\" sourcefile=\"docs/fsharp/language-reference/unit-type.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Unit Type</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/fsharp/language-reference/unit-type","fileRelativePath":"articles/fsharp/language-reference/unit-type.html"},"themesRelativePathToOutputRoot":"_themes/"}