{"content":"<div><div class=\"content\">\n<p>A <code>do</code> binding in a class definition performs actions when the object is constructed or, for a static <code>do</code> binding, when the type is first used.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code class=\"lang-fsharp\">[static] do expression\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p>A <code>do</code> binding appears together with or after <code>let</code> bindings but before member definitions in a class definition. Although the <code>do</code> keyword is optional for <code>do</code> bindings at the module level, it is not optional for <code>do</code> bindings in a class definition.</p>\n<p>For the construction of every object of any given type, non-static <code>do</code> bindings and non-static <code>let</code> bindings are executed in the order in which they appear in the class definition. Multiple <code>do</code> bindings can occur in one type. The non-static <code>let</code> bindings and the non-static <code>do</code> bindings become the body of the primary constructor. The code in the non-static <code>do</code> bindings section can reference the primary constructor parameters and any values or functions that are defined in the <code>let</code> bindings section.</p>\n<p>Non-static <code>do</code> bindings can access members of the class as long as the class has a self identifier that is defined by an <code>as</code> keyword in the class heading, and as long as all uses of those members are qualified with the self identifier for the class.</p>\n<p>Because <code>let</code> bindings initialize the private fields of a class, which is often necessary to guarantee that members behave as expected, <code>do</code> bindings are usually put after <code>let</code> bindings so that code in the <code>do</code> binding can execute with a fully initialized object. If your code attempts to use a member before the initialization is complete, an InvalidOperationException is raised.</p>\n<p>Static <code>do</code> bindings can reference static members or fields of the enclosing class but not instance members or fields. Static <code>do</code> bindings become part of the static initializer for the class, which is guaranteed to execute before the class is first used.</p>\n<p>Attributes are ignored for <code>do</code> bindings in types. If an attribute is required for code that executes in a <code>do</code> binding, it must be applied to the primary constructor.</p>\n<p>In the following code, a class has a static <code>do</code> binding and a non-static <code>do</code> binding. The object has a constructor that has two parameters, <code>a</code> and <code>b</code>, and two private fields are defined in the <code>let</code> bindings for the class. Two properties are also defined. All of these are in scope in the non-static <code>do</code> bindings section, as is illustrated by the line that prints all those values.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">open System\n\ntype MyType(a:int, b:int) as this =\n    inherit Object()\n    let x = 2*a\n    let y = 2*b\n    do printfn &quot;Initializing object %d %d %d %d %d %d&quot;\n               a b x y (this.Prop1) (this.Prop2)\n    static do printfn &quot;Initializing MyType.&quot;\n    member this.Prop1 = 4*x\n    member this.Prop2 = 4*y\n    override this.ToString() = System.String.Format(&quot;{0} {1}&quot;, this.Prop1, this.Prop2)\n\nlet obj1 = new MyType(1, 2)\n</code></pre><p>The output is as follows.</p>\n<pre class=\"loading\"><code class=\"lang-text\">Initializing MyType.\nInitializing object 1 2 2 4 8 16\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">Members</a></p>\n<p><a href=\"../classes\" data-linktype=\"relative-path\">Classes</a></p>\n<p><a href=\"constructors\" data-linktype=\"relative-path\">Constructors</a></p>\n<p><a href=\"let-bindings-in-classes\" data-linktype=\"relative-path\"><code>let</code> Bindings in Classes</a></p>\n<p><a href=\"../functions/do-bindings\" data-linktype=\"relative-path\"><code>do</code> Bindings</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"78987cb8-bdba-46e2-b5b2-994c83fe42c4\">\r\n<meta name=\"description\" content=\"do Bindings in Classes (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/members/do-bindings-in-classes.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/members/do-bindings-in-classes.md\">\r\n<meta name=\"document_id\" content=\"a42b815e-9728-a0eb-ec12-ce9496e16ef1\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc1.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"do Bindings in Classes (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"78987cb8-bdba-46e2-b5b2-994c83fe42c4","description":"do Bindings in Classes (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/members/do-bindings-in-classes.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/members/do-bindings-in-classes.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/members/do-bindings-in-classes.md","document_id":"a42b815e-9728-a0eb-ec12-ce9496e16ef1","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/members/do-bindings-in-classes","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"do Bindings in Classes (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":487,"_op_rawTitle":"<h1 id=\"do-bindings-in-classes\" sourcefile=\"docs/fsharp/language-reference/members/do-bindings-in-classes.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">do Bindings in Classes</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/members/do-bindings-in-classes","fileRelativePath":"articles/fsharp/language-reference/members/do-bindings-in-classes.html"},"themesRelativePathToOutputRoot":"_themes/"}