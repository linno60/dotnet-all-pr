{"content":"<div><div class=\"content\">\n<p>You can define private fields and private functions for F# classes by using <code>let</code> bindings in the class definition.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code class=\"lang-fsharp\">// Field.\n[static] let [ mutable ] binding1 [ and ... binding-n ]\n\n// Function.\n[static] let [ rec ] binding1 [ and ... binding-n ]\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p>The previous syntax appears after the class heading and inheritance declarations but before any member definitions. The syntax is like that of <code>let</code> bindings outside of classes, but the names defined in a class have a scope that is limited to the class. A <code>let</code> binding creates a private field or function; to expose data or functions publicly, declare a property or a member method.</p>\n<p>A <code>let</code> binding that is not static is called an instance <code>let</code> binding. Instance <code>let</code> bindings execute when objects are created. Static <code>let</code> bindings are part of the static initializer for the class, which is guaranteed to execute before the type is first used.</p>\n<p>The code within instance <code>let</code> bindings can use the primary constructor&#39;s parameters.</p>\n<p>Attributes and accessibility modifiers are not permitted on <code>let</code> bindings in classes.</p>\n<p>The following code examples illustrate several types of <code>let</code> bindings in classes.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">type PointWithCounter(a: int, b: int) =\n    // A variable i.\n    let mutable i = 0\n\n    // A let binding that uses a pattern.\n    let (x, y) = (a, b)\n\n    // A private function binding.\n    let privateFunction x y = x * x + 2*y\n\n    // A static let binding.\n    static let mutable count = 0\n\n    // A do binding.\n    do\n       count &lt;- count + 1\n\n    member this.Prop1 = x\n    member this.Prop2 = y\n    member this.CreatedCount = count\n    member this.FunctionValue = privateFunction x y\n\nlet point1 = PointWithCounter(10, 52)\n\nprintfn &quot;%d %d %d %d&quot; (point1.Prop1) (point1.Prop2) (point1.CreatedCount) (point1.FunctionValue)\n</code></pre><p>The output is as follows.</p>\n<pre class=\"loading\"><code>10 52 1 204\n</code></pre><h2 id=\"alternative-ways-to-create-fields\">Alternative Ways to Create Fields</h2>\n<p>You can also use the <code>val</code> keyword to create a private field. When using the <code>val</code> keyword, the field is not given a value when the object is created, but instead is initialized with a default value. For more information, see <a href=\"explicit-fields-the-val-keyword\" data-linktype=\"relative-path\">Explicit Fields: The val Keyword</a>.</p>\n<p>You can also define private fields in a class by using a member definition and adding the keyword <code>private</code> to the definition. This can be useful if you expect to change the accessibility of a member without rewriting your code. For more information, see <a href=\"../access-control\" data-linktype=\"relative-path\">Access Control</a>.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">Members</a></p>\n<p><a href=\"do-bindings-in-classes\" data-linktype=\"relative-path\"><code>do</code> Bindings in Classes</a></p>\n<p><a href=\"../functions/let-bindings\" data-linktype=\"relative-path\"><code>let</code> Bindings</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"9d3710f5-68b1-4e4c-b02b-27fe018f20e8\">\r\n<meta name=\"description\" content=\"let Bindings in Classes (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/members/let-bindings-in-classes.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/members/let-bindings-in-classes.md\">\r\n<meta name=\"document_id\" content=\"a1127cd2-4f01-4224-d8db-8f75683262d0\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc1.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"let Bindings in Classes (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"9d3710f5-68b1-4e4c-b02b-27fe018f20e8","description":"let Bindings in Classes (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/members/let-bindings-in-classes.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/members/let-bindings-in-classes.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/members/let-bindings-in-classes.md","document_id":"a1127cd2-4f01-4224-d8db-8f75683262d0","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/members/let-bindings-in-classes","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"let Bindings in Classes (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":394,"_op_rawTitle":"<h1 id=\"let-bindings-in-classes\" sourcefile=\"docs/fsharp/language-reference/members/let-bindings-in-classes.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">let Bindings in Classes</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/members/let-bindings-in-classes","fileRelativePath":"articles/fsharp/language-reference/members/let-bindings-in-classes.html"},"themesRelativePathToOutputRoot":"_themes/"}