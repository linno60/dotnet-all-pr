{"content":"<div><div class=\"content\">\n<p>The <code>try...finally</code> expression enables you to execute clean-up code even if a block of code throws an exception.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code class=\"lang-fsharp\">try\n    expression1\nfinally\n    expression2\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p>The <code>try...finally</code> expression can be used to execute the code in <em>expression2</em> in the preceding syntax regardless of whether an exception is generated during the execution of <em>expression1</em>.</p>\n<p>The type of <em>expression2</em> does not contribute to the value of the whole expression; the type returned when an exception does not occur is the last value in <em>expression1</em>. When an exception does occur, no value is returned and the flow of control transfers to the next matching exception handler up the call stack. If no exception handler is found, the program terminates. Before the code in a matching handler is executed or the program terminates, the code in the <code>finally</code> branch is executed.</p>\n<p>The following code demonstrates the use of the <code>try...finally</code> expression.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let divide x y =\n   let stream : System.IO.FileStream = System.IO.File.Create(&quot;test.txt&quot;)\n   let writer : System.IO.StreamWriter = new System.IO.StreamWriter(stream)\n   try\n      writer.WriteLine(&quot;test1&quot;);\n      Some( x / y )\n   finally\n      writer.Flush()\n      printfn &quot;Closing stream&quot;\n      stream.Close()\n\nlet result =\n  try\n     divide 100 0\n  with\n     | :? System.DivideByZeroException -&gt; printfn &quot;Exception handled.&quot;; None\n</code></pre><p>The output to the console is as follows.</p>\n<pre class=\"loading\"><code>Closing stream\nException handled.\n</code></pre><p>As you can see from the output, the stream was closed before the outer exception was handled, and the file <code>test.txt</code> contains the text <code>test1</code>, which indicates that the buffers were flushed and written to disk even though the exception transferred control to the outer exception handler.</p>\n<p>Note that the <code>try...with</code> construct is a separate construct from the <code>try...finally</code> construct. Therefore, if your code requires both a <code>with</code> block and a <code>finally</code> block, you have to nest the two constructs, as in the following code example.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">exception InnerError of string\nexception OuterError of string\n\nlet function1 x y =\n   try\n     try\n        if x = y then raise (InnerError(&quot;inner&quot;))\n        else raise (OuterError(&quot;outer&quot;))\n     with\n      | InnerError(str) -&gt; printfn &quot;Error1 %s&quot; str\n   finally\n      printfn &quot;Always print this.&quot;\n\n\nlet function2 x y =\n  try\n     function1 x y\n  with\n     | OuterError(str) -&gt; printfn &quot;Error2 %s&quot; str\n\nfunction2 100 100\nfunction2 100 10\n</code></pre><p>In the context of computation expressions, including sequence expressions and asynchronous workflows, <strong>try...finally</strong> expressions can have a custom implementation. For more information, see <a href=\"../computation-expressions\" data-linktype=\"relative-path\">Computation Expressions</a>.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">Exception Handling</a></p>\n<p><a href=\"the-try-with-expression\" data-linktype=\"relative-path\">Exceptions: The <code>try...with</code> Expression</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"af06b20c-8d87-4496-a0aa-6fdfe8b3a786\">\r\n<meta name=\"description\" content=\"Exceptions: The try...finally Expression (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/exception-handling/the-try-finally-expression.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/exception-handling/the-try-finally-expression.md\">\r\n<meta name=\"document_id\" content=\"0acbd972-db1d-00b2-093a-555e51161ef0\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"Exceptions: The try...finally Expression (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"af06b20c-8d87-4496-a0aa-6fdfe8b3a786","description":"Exceptions: The try...finally Expression (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Petr Onderka","author_email":"gsvick@gmail.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Improve titles of some F# articles (#1003)","commit_sha":"d18cfd736f1dbd61ab9e209de4aaa878a88162cd","commit_date":"2016-09-03 11:22:59 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"},{"profile_url":"https://github.com/svick","display_name":"Petr Onderka","id":"287848"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/exception-handling/the-try-finally-expression.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/exception-handling/the-try-finally-expression.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/exception-handling/the-try-finally-expression.md","document_id":"0acbd972-db1d-00b2-093a-555e51161ef0","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/exception-handling/the-try-finally-expression","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"Exceptions: The try...finally Expression (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":381,"_op_rawTitle":"<h1 id=\"exceptions-the-tryfinally-expression\" sourcefile=\"docs/fsharp/language-reference/exception-handling/the-try-finally-expression.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Exceptions: The try...finally Expression</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/exception-handling/the-try-finally-expression","fileRelativePath":"articles/fsharp/language-reference/exception-handling/the-try-finally-expression.html"},"themesRelativePathToOutputRoot":"_themes/"}