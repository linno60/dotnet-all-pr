{"content":"<div><div class=\"content\">\n<p>An <em>object expression</em> is an expression that creates a new instance of a dynamically created, anonymous object type that is based on an existing base type, interface, or set of interfaces.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code class=\"lang-fsharp\">// When typename is a class:\n{ new typename [type-params]arguments with\n    member-definitions\n    [ additional-interface-definitions ]\n}\n// When typename is not a class:\n{ new typename [generic-type-args] with\n    member-definitions\n    [ additional-interface-definitions ]\n}\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p>In the previous syntax, the <em>typename</em> represents an existing class type or interface type. <em>type-params</em> describes the optional generic type parameters. The <em>arguments</em> are used only for class types, which require constructor parameters. The <em>member-definitions</em> are overrides of base class methods, or implementations of abstract methods from either a base class or an interface.</p>\n<p>The following example illustrates several different types of object expressions.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">// This object expression specifies a System.Object but overrides the\n// ToString method.\nlet obj1 = { new System.Object() with member x.ToString() = &quot;F#&quot; }\nprintfn &quot;%A&quot; obj1\n\n// This object expression implements the IFormattable interface.\nlet Delimiter(delim1 : string, delim2 : string ) = { new System.IFormattable with\n                member x.ToString(format : string, provider : System.IFormatProvider) =\n                  if format = &quot;D&quot; then delim1 + x.ToString() + delim2\n                  else x.ToString()\n           }\n\nlet obj2 = Delimiter(&quot;{&quot;,&quot;}&quot;);\n\nprintfn &quot;%A&quot; (System.String.Format(&quot;{0:D}&quot;, obj2))\n\n// This object expression implements multiple interfaces.\ntype IFirst =\n  abstract F : unit -&gt; unit\n  abstract G : unit -&gt; unit\n\ntype ISecond =\n  inherit IFirst\n  abstract H : unit -&gt; unit\n  abstract J : unit -&gt; unit\n\n// This object expression implements an interface chain.\nlet Implementer() = { new ISecond with\n                         member this.H() = ()\n                         member this.J() = ()\n                       interface IFirst with\n                         member this.F() = ()\n                         member this.G() = ()\n                    }\n</code></pre><h2 id=\"using-object-expressions\">Using Object Expressions</h2>\n<p>You use object expressions when you want to avoid the extra code and overhead that is required to create a new, named type. If you use object expressions to minimize the number of types created in a program, you can reduce the number of lines of code and prevent the unnecessary proliferation of types. Instead of creating many types just to handle specific situations, you can use an object expression that customizes an existing type or provides an appropriate implementation of an interface for the specific case at hand.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">F# Language Reference</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"c6dcf4c9-e7fd-4eee-9e4e-1176f4c27f57\">\r\n<meta name=\"description\" content=\"Object Expressions (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/object-expressions.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/object-expressions.md\">\r\n<meta name=\"document_id\" content=\"879c2001-dbd1-0661-2851-685249290a3a\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc1.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Object Expressions (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"c6dcf4c9-e7fd-4eee-9e4e-1176f4c27f57","description":"Object Expressions (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/object-expressions.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/object-expressions.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/object-expressions.md","document_id":"879c2001-dbd1-0661-2851-685249290a3a","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/object-expressions","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Object Expressions (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":362,"_op_rawTitle":"<h1 id=\"object-expressions\" sourcefile=\"docs/fsharp/language-reference/object-expressions.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Object Expressions</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/object-expressions","fileRelativePath":"articles/fsharp/language-reference/object-expressions.html"},"themesRelativePathToOutputRoot":"_themes/"}