{"content":"<div><div class=\"content\">\n<p>You can produce documentation from triple-slash (///) code comments in F#. XML comments can precede declarations in code files (.fs) or signature (.fsi) files.</p>\n<h2 id=\"generating-documentation-from-comments\">Generating Documentation from Comments</h2>\n<p>The support in F# for generating documentation from comments is the same as that in other .NET Framework languages. As in other .NET Framework languages, the <a href=\"https://msdn.microsoft.com/library/434394ae-0d4a-459c-a684-bffede519a04\" data-linktype=\"external\">-doc compiler option</a> enables you to produce an XML file that contains information that you can convert into documentation by using a tool such as Sandcastle. The documentation generated by using tools that are designed for use with assemblies that are written in other .NET Framework languages generally produce a view of the APIs that is based on the compiled form of F# constructs. Unless tools specifically support F#, documentation generated by these tools does not match the F# view of an API.</p>\n<p>For more information about how to generate documentation from XML, see <a href=\"https://msdn.microsoft.com/library/b2s063f7\" data-linktype=\"external\">XML Documentation Comments &#40;C&#35; Programming Guide&#41;</a>.</p>\n<h2 id=\"recommended-tags\">Recommended Tags</h2>\n<p>There are two ways to write XML documentation comments. One is to just write the documentation directly in a triple-slash comment, without using XML tags. If you do this, the entire comment text is taken as the summary documentation for the code construct that immediately follows. Use this method when you want to write only a brief summary for each construct. The other method is to use XML tags to provide more structured documentation. The second method enables you to specify separate notes for a short summary, additional remarks, documentation for each parameter and type parameter and exceptions thrown, and a description of the return value. The following table describes XML tags that are recognized in F# XML code comments.</p>\n<table>\n<thead>\n<tr>\n<th>Tag syntax</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>&lt;c&gt;</strong><em>text</em><strong>&lt;/c&gt;</strong></td>\n<td>Specifies that <em>text</em> is code. This tag can be used by documentation generators to display text in a font that is appropriate for code.</td>\n</tr>\n<tr>\n<td><strong>&lt;summary&gt;</strong><em>text</em><strong>&lt;/summary&gt;</strong></td>\n<td>Specifies that <em>text</em> is a brief description of the program element. The description is usually one or two sentences.</td>\n</tr>\n<tr>\n<td><strong>&lt;remarks&gt;</strong><em>text</em><strong>&lt;/remarks&gt;</strong></td>\n<td>Specifies that <em>text</em> contains supplementary information about the program element.</td>\n</tr>\n<tr>\n<td><strong>&lt;param name=&quot;</strong><em>name</em><strong>&quot;&gt;</strong><em>description</em><strong>&lt;/param&gt;</strong></td>\n<td>Specifies the name and description for a function or method parameter.</td>\n</tr>\n<tr>\n<td><strong>&lt;typeparam name=&quot;</strong><em>name</em><strong>&quot;&gt;</strong><em>description</em><strong>&lt;/typeparam&gt;</strong></td>\n<td>Specifies the name and description for a type parameter.</td>\n</tr>\n<tr>\n<td><strong>&lt;returns&gt;</strong><em>text</em><strong>&lt;/returns&gt;</strong></td>\n<td>Specifies that <em>text</em> describes the return value of a function or method.</td>\n</tr>\n<tr>\n<td><strong>&lt;exception cref=&quot;</strong><em>type</em><strong>&quot;&gt;</strong><em>description</em><strong>&lt;/exception&gt;</strong></td>\n<td>Specifies the type of exception that can be generated and the circumstances under which it is thrown.</td>\n</tr>\n<tr>\n<td><strong>&lt;see cref=&quot;</strong><em>reference</em><strong>&quot;&gt;</strong><em>text</em><strong>&lt;/see&gt;</strong></td>\n<td>Specifies an inline link to another program element. The <em>reference</em> is the name as it appears in the XML documentation file. The <em>text</em> is the text shown in the link.</td>\n</tr>\n<tr>\n<td><strong>&lt;seealso cref=&quot;</strong><em>reference</em><strong>&quot;/&gt;</strong></td>\n<td>Specifies a See Also link to the documentation for another type. The <em>reference</em> is the name as it appears in the XML documentation file. See Also links usually appear at the bottom of a documentation page.</td>\n</tr>\n<tr>\n<td><strong>&lt;para&gt;</strong><em>text</em><strong>&lt;/para&gt;</strong></td>\n<td>Specifies a paragraph of text. This is used to separate text inside the <strong>remarks</strong> tag.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"example\">Example</h2>\n<h3 id=\"description\">Description</h3>\n<p>The following is a typical XML documentation comment in a signature file.</p>\n<h3 id=\"code\">Code</h3>\n<pre><code class=\"lang-fsharp\" name=\"Main\">/// &lt;summary&gt;Builds a new string whose characters are the results of applying the function &lt;c&gt;mapping&lt;/c&gt;\n/// to each of the characters of the input string and concatenating the resulting\n/// strings.&lt;/summary&gt;\n/// &lt;param name=&quot;mapping&quot;&gt;The function to produce a string from each character of the input string.&lt;/param&gt;\n///&lt;param name=&quot;str&quot;&gt;The input string.&lt;/param&gt;\n///&lt;returns&gt;The concatenated string.&lt;/returns&gt;\n///&lt;exception cref=&quot;System.ArgumentNullException&quot;&gt;Thrown when the input string is null.&lt;/exception&gt;\nval collect : (char -&gt; string) -&gt; string -&gt; string\n</code></pre><h2 id=\"example-1\">Example</h2>\n<h3 id=\"description-1\">Description</h3>\n<p>The following example shows the alternative method, without XML tags. In this example, the entire text in the comment is considered a summary. Note that if you do not specify a summary tag explicitly, you should not specify other tags, such as <strong>param</strong> or <strong>returns</strong> tags.</p>\n<h3 id=\"code-1\">Code</h3>\n<pre><code class=\"lang-fsharp\" name=\"Main\">/// Creates a new string whose characters are the result of applying\n/// the function mapping to each of the characters of the input string\n/// and concatenating the resulting strings.\nval collect : (char -&gt; string) -&gt; string -&gt; string\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">F# Language Reference</a></p>\n<p><a href=\"compiler-options\" data-linktype=\"relative-path\">Compiler Options</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"d99ab1b6-e170-4ec2-a543-43ea7ab15bb2\">\r\n<meta name=\"description\" content=\"XML Documentation (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/9f7071000956541b0ca32253758a5a1ab98ae874/docs/fsharp/language-reference/xml-documentation.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/fsharp/language-reference/xml-documentation.md\">\r\n<meta name=\"document_id\" content=\"e2e28483-5936-eea6-6761-81d264b29527\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"XML Documentation (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"d99ab1b6-e170-4ec2-a543-43ea7ab15bb2","description":"XML Documentation (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Saul Rennison","author_email":"saul.rennison@gmail.com","committer_name":"Phillip Carter","comitter_email":"phillip.carter@outlook.com","message":"Update F# XML documentation (#1357)","commit_sha":"9f7071000956541b0ca32253758a5a1ab98ae874","commit_date":"2016-12-26 09:26:52 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/saul","display_name":"Saul Rennison","id":"64654"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/9f7071000956541b0ca32253758a5a1ab98ae874/docs/fsharp/language-reference/xml-documentation.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/fsharp/language-reference/xml-documentation.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/xml-documentation.md","document_id":"e2e28483-5936-eea6-6761-81d264b29527","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/fsharp/language-reference/xml-documentation","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"XML Documentation (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":686,"_op_rawTitle":"<h1 id=\"xml-documentation\" sourcefile=\"docs/fsharp/language-reference/xml-documentation.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">XML Documentation</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/fsharp/language-reference/xml-documentation","fileRelativePath":"articles/fsharp/language-reference/xml-documentation.html"},"themesRelativePathToOutputRoot":"_themes/"}