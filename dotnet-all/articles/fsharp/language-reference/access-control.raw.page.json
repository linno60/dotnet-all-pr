{"content":"<div><div class=\"content\">\n<p><em>Access control</em> refers to declaring which clients can use certain program elements, such as types, methods, and functions.</p>\n<h2 id=\"basics-of-access-control\">Basics of Access Control</h2>\n<p>In F#, the access control specifiers <code>public</code>, <code>internal</code>, and <code>private</code> can be applied to modules, types, methods, value definitions, functions, properties, and explicit fields.</p>\n<ul>\n<li><p><code>public</code> indicates that the entity can be accessed by all callers.</p>\n</li>\n<li><p><code>internal</code> indicates that the entity can be accessed only from the same assembly.</p>\n</li>\n<li><p><code>private</code> indicates that the entity can be accessed only from the enclosing type or module.</p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p>The access specifier <code>protected</code> is not used in F#, although it is acceptable if you are using types authored in languages that do support <code>protected</code> access. Therefore, if you override a protected method, your method remains accessible only within the class and its descendents.</p>\n</div>\n<p>In general, the specifier is put in front of the name of the entity, except when a <code>mutable</code> or <code>inline</code> specifier is used, which appear after the access control specifier.</p>\n<p>If no access specifier is used, the default is <code>public</code>, except for <code>let</code> bindings in a type, which are always <code>private</code> to the type.</p>\n<p>Signatures in F# provide another mechanism for controlling access to F# program elements. Signatures are not required for access control. For more information, see <a href=\"signatures\" data-linktype=\"relative-path\">Signatures</a>.</p>\n<h2 id=\"rules-for-access-control\">Rules for Access Control</h2>\n<p>Access control is subject to the following rules:</p>\n<ul>\n<li><p>Inheritance declarations (that is, the use of <code>inherit</code> to specify a base class for a class), interface declarations (that is, specifying that a class implements an interface), and abstract members always have the same accessibility as the enclosing type. Therefore, an access control specifier cannot be used on these constructs.</p>\n</li>\n<li><p>Individual cases in a discriminated union cannot have their own access control modifiers separate from the union type.</p>\n</li>\n<li><p>Individual fields of a record type cannot have their own access control modifiers separate from the record type.</p>\n</li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<p>The following code illustrates the use of access control specifiers. There are two files in the project, <code>Module1.fs</code> and <code>Module2.fs</code>. Each file is implicitly a module. Therefore, there are two modules, <code>Module1</code> and <code>Module2</code>. A private type and an internal type are defined in <code>Module1</code>. The private type cannot be accessed from <code>Module2</code>, but the internal type can.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">// Module1.fs\n\nmodule Module1\n\n// This type is not usable outside of this file\ntype private MyPrivateType() =\n   // x is private since this is an internal let binding\n   let x = 5\n   // X is private and does not appear in the QuickInfo window\n   // when viewing this type in the Visual Studio editor\n   member private this.X() = 10\n   member this.Z() = x * 100\n\ntype internal MyInternalType() =\n   let x = 5\n   member private this.X() = 10\n   member this.Z() = x * 100\n\n// Top-level let bindings are public by default,\n// so &quot;private&quot; and &quot;internal&quot; are needed here since a\n// value cannot be more accessible than its type.\nlet private myPrivateObj = new MyPrivateType()\nlet internal myInternalObj = new MyInternalType()\n\n// let bindings at the top level are public by default,\n// so result1 and result2 are public.\nlet result1 = myPrivateObj.Z\nlet result2 = myInternalObj.Z\n</code></pre><p>The following code tests the accessibility of the types created in <code>Module1.fs</code>.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">// Module2.fs\nmodule Module2\n\nopen Module1\n\n// The following line is an error because private means\n// that it cannot be accessed from another file or module\n// let private myPrivateObj = new MyPrivateType()\nlet internal myInternalObj = new MyInternalType()\n\nlet result = myInternalObj.Z\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">F# Language Reference</a></p>\n<p><a href=\"signatures\" data-linktype=\"relative-path\">Signatures</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"955b06fe-d1cd-431d-8db6-93e83b697453\">\r\n<meta name=\"description\" content=\"Access Control (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/access-control.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/access-control.md\">\r\n<meta name=\"document_id\" content=\"6365ce69-a151-4f65-779d-74986e1c3ef1\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Access Control (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"955b06fe-d1cd-431d-8db6-93e83b697453","description":"Access Control (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/access-control.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/access-control.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/access-control.md","document_id":"6365ce69-a151-4f65-779d-74986e1c3ef1","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/access-control","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Access Control (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":578,"_op_rawTitle":"<h1 id=\"access-control\" sourcefile=\"docs/fsharp/language-reference/access-control.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Access Control</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/access-control","fileRelativePath":"articles/fsharp/language-reference/access-control.html"},"themesRelativePathToOutputRoot":"_themes/"}