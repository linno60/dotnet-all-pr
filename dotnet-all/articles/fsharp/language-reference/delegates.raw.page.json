{"content":"<div><div class=\"content\">\n<p>A delegate represents a function call as an object. In F#, you ordinarily should use function values to represent functions as first-class values; however, delegates are used in the .NET Framework and so are needed when you interoperate with APIs that expect them. They may also be used when authoring libraries designed for use from other .NET Framework languages.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code class=\"lang-fsharp\">type delegate-typename = delegate of type1 -&gt; type2\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p>In the previous syntax, <code>type1</code> represents the argument type or types and <code>type2</code> represents the return type. The argument types that are represented by <code>type1</code> are automatically curried. This suggests that for this type you use a tuple form if the arguments of the target function are curried, and a parenthesized tuple for arguments that are already in the tuple form. The automatic currying removes a set of parentheses, leaving a tuple argument that matches the target method. Refer to the code example for the syntax you should use in each case.</p>\n<p>Delegates can be attached to F# function values, and static or instance methods. F# function values can be passed directly as arguments to delegate constructors. For a static method, you construct the delegate by using the name of the class and the method. For an instance method, you provide the object instance and method in one argument. In both cases, the member access operator (<code>.</code>) is used.</p>\n<p>The <code>Invoke</code> method on the delegate type calls the encapsulated function. Also, delegates can be passed as function values by referencing the Invoke method name without the parentheses.</p>\n<p>The following code shows the syntax for creating delegates that represent various methods in a class. Depending on whether the method is a static method or an instance method, and whether it has arguments in the tuple form or the curried form, the syntax for declaring and assigning the delegate is a little different.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">type Test1() =\n  static member add(a : int, b : int) =\n     a + b\n  static member add2 (a : int) (b : int) =\n     a + b\n\n  member x.Add(a : int, b : int) =\n     a + b\n  member x.Add2 (a : int) (b : int) =\n     a + b\n\n\n// Delegate1 works with tuple arguments.\ntype Delegate1 = delegate of (int * int) -&gt; int\n// Delegate2 works with curried arguments.\ntype Delegate2 = delegate of int * int -&gt; int\n\nlet InvokeDelegate1 (dlg : Delegate1) (a : int) (b: int) =\n   dlg.Invoke(a, b)\nlet InvokeDelegate2 (dlg : Delegate2) (a : int) (b: int) =\n   dlg.Invoke(a, b)\n\n// For static methods, use the class name, the dot operator, and the\n// name of the static method.\nlet del1 : Delegate1 = new Delegate1( Test1.add )\nlet del2 : Delegate2 = new Delegate2( Test1.add2 )\n\nlet testObject = Test1()\n\n// For instance methods, use the instance value name, the dot operator, and the instance method name.\nlet del3 : Delegate1 = new Delegate1( testObject.Add )\nlet del4 : Delegate2 = new Delegate2( testObject.Add2 )\n\nfor (a, b) in [ (100, 200); (10, 20) ] do\n  printfn &quot;%d + %d = %d&quot; a b (InvokeDelegate1 del1 a b)\n  printfn &quot;%d + %d = %d&quot; a b (InvokeDelegate2 del2 a b)\n  printfn &quot;%d + %d = %d&quot; a b (InvokeDelegate1 del3 a b)\n  printfn &quot;%d + %d = %d&quot; a b (InvokeDelegate2 del4 a b)\n</code></pre><p>The following code shows some of the different ways you can work with delegates.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">type Delegate1 = delegate of int * char -&gt; string\n\nlet replicate n c = String.replicate n (string c)\n\n// An F# function value constructed from an unapplied let-bound function\nlet function1 = replicate\n\n// A delegate object constructed from an F# function value\nlet delObject = new Delegate1(function1)\n\n// An F# function value constructed from an unapplied .NET member\nlet functionValue = delObject.Invoke\n\nList.map (fun c -&gt; functionValue(5,c)) [&#39;a&#39;; &#39;b&#39;; &#39;c&#39;]\n|&gt; List.iter (printfn &quot;%s&quot;)\n\n// Or if you want to get back the same curried signature\nlet replicate&#39; n c =  delObject.Invoke(n,c)\n\n// You can pass a lambda expression as an argument to a function expecting a compatible delegate type\n// System.Array.ConvertAll takes an array and a converter delegate that transforms an element from\n// one type to another according to a specified function.\nlet stringArray = System.Array.ConvertAll([|&#39;a&#39;;&#39;b&#39;|], fun c -&gt; replicate&#39; 3 c)\nprintfn &quot;%A&quot; stringArray\n</code></pre><p>The output of the previous code example is as follows.</p>\n<pre class=\"loading\"><code class=\"lang-text\">aaaaa\nbbbbb\nccccc\n[|&quot;aaa&quot;; &quot;bbb&quot;|]\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">F# Language Reference</a></p>\n<p><a href=\"parameters-and-arguments\" data-linktype=\"relative-path\">Parameters and Arguments</a></p>\n<p><a href=\"members/events\" data-linktype=\"relative-path\">Events</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"719948a3-83ba-4618-82d6-a22945c3f4b0\">\r\n<meta name=\"description\" content=\"Delegates (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/delegates.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/delegates.md\">\r\n<meta name=\"document_id\" content=\"00e71f91-6041-a0b2-311d-c542cff1432b\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Delegates (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"719948a3-83ba-4618-82d6-a22945c3f4b0","description":"Delegates (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/delegates.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/delegates.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/delegates.md","document_id":"00e71f91-6041-a0b2-311d-c542cff1432b","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/delegates","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Delegates (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":718,"_op_rawTitle":"<h1 id=\"delegates\" sourcefile=\"docs/fsharp/language-reference/delegates.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Delegates</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/delegates","fileRelativePath":"articles/fsharp/language-reference/delegates.html"},"themesRelativePathToOutputRoot":"_themes/"}