{"content":"<div><div class=\"content\">\n<p>This looping construct is used to iterate over the matches of a pattern in an enumerable collection such as a range expression, sequence, list, array, or other construct that supports enumeration.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code class=\"lang-fsharp\">for pattern in enumerable-expression do\n    body-expression\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p>The <code>for...in</code> expression can be compared to the <code>for each</code> statement in other .NET languages because it is used to loop over the values in an enumerable collection. However, <code>for...in</code> also supports pattern matching over the collection instead of just iteration over the whole collection.</p>\n<p>The enumerable expression can be specified as an enumerable collection or, by using the <code>..</code> operator, as a range on an integral type. Enumerable collections include lists, sequences, arrays, sets, maps, and so on. Any type that implements <code>System.Collections.IEnumerable</code> can be used.</p>\n<p>When you express a range by using the <code>..</code> operator, you can use the following syntax.</p>\n<p><em>start</em> .. <em>finish</em></p>\n<p>You can also use a version that includes an increment called the <em>skip</em>, as in the following code.</p>\n<p><em>start</em> .. <em>skip</em> .. <em>finish</em></p>\n<p>When you use integral ranges and a simple counter variable as a pattern, the typical behavior is to increment the counter variable by 1 on each iteration, but if the range includes a skip value, the counter is incremented by the skip value instead.</p>\n<p>Values matched in the pattern can also be used in the body expression.</p>\n<p>The following code examples illustrate the use of the <code>for...in</code> expression.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">// Looping over a list.\nlet list1 = [ 1; 5; 100; 450; 788 ]\nfor i in list1 do\n   printfn &quot;%d&quot; i\n</code></pre><p>The output is as follows.</p>\n<pre class=\"loading\"><code>1\n5\n100\n450\n788\n</code></pre><p>The following example shows how to loop over a sequence, and how to use a tuple pattern instead of a simple variable.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let seq1 = seq { for i in 1 .. 10 -&gt; (i, i*i) }\nfor (a, asqr) in seq1 do\n  printfn &quot;%d squared is %d&quot; a asqr\n</code></pre><p>The output is as follows.</p>\n<pre class=\"loading\"><code>1 squared is 1\n2 squared is 4\n3 squared is 9\n4 squared is 16\n5 squared is 25\n6 squared is 36\n7 squared is 49\n8 squared is 64\n9 squared is 81\n10 squared is 100\n</code></pre><p>The following example shows how to loop over a simple integer range.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let function1() =\n  for i in 1 .. 10 do\n    printf &quot;%d &quot; i\n  printfn &quot;&quot;\nfunction1()\n</code></pre><p>The output of function1 is as follows.</p>\n<pre class=\"loading\"><code>1 2 3 4 5 6 7 8 9 10\n</code></pre><p>The following example shows how to loop over a range with a skip of 2, which includes every other element of the range.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let function2() =\n  for i in 1 .. 2 .. 10 do\n     printf &quot;%d &quot; i\n  printfn &quot;&quot;\nfunction2()\n</code></pre><p>The output of <code>function2</code> is as follows.</p>\n<pre class=\"loading\"><code>1 3 5 7 9\n</code></pre><p>The following example shows how to use a character range.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let function3() =\n  for c in &#39;a&#39; .. &#39;z&#39; do\n    printf &quot;%c &quot; c\n  printfn &quot;&quot;\nfunction3()\n</code></pre><p>The output of <code>function3</code> is as follows.</p>\n<pre class=\"loading\"><code>a b c d e f g h i j k l m n o p q r s t u v w x y z\n</code></pre><p>The following example shows how to use a negative skip value for a reverse iteration.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let function4() =\n    for i in 10 .. -1 .. 1 do\n        printf &quot;%d &quot; i\n    printfn &quot; ... Lift off!&quot;\nfunction4()\n</code></pre><p>The output of <code>function4</code> is as follows.</p>\n<pre class=\"loading\"><code>10 9 8 7 6 5 4 3 2 1 ... Lift off!\n</code></pre><p>The beginning and ending of the range can also be expressions, such as functions, as in the following code.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let beginning x y = x - 2*y\nlet ending x y = x + 2*y\n\nlet function5 x y =\n  for i in (beginning x y) .. (ending x y) do\n     printf &quot;%d &quot; i\n  printfn &quot;&quot;\n\nfunction5 10 4\n</code></pre><p>The output of <code>function5</code> with this input is as follows.</p>\n<pre class=\"loading\"><code>2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n</code></pre><p>The next example shows the use of a wildcard character (_) when the element is not needed in the loop.</p>\n<pre><code class=\"lang-fsharp\" name=\"Main\">let mutable count = 0\nfor _ in list1 do\n   count &lt;- count + 1\nprintfn &quot;Number of elements in list1: %d&quot; count\n</code></pre><p>The output is as follows.</p>\n<pre class=\"loading\"><code>Number of elements in list1: 5\n</code></pre><p><code>Note</code> You can use <code>for...in</code> in sequence expressions and other computation expressions, in which case a customized version of the <code>for...in</code> expression is used. For more information, see <a href=\"sequences\" data-linktype=\"relative-path\">Sequences</a>, <a href=\"asynchronous-workflows\" data-linktype=\"relative-path\">Asynchronous Workflows</a>, and <a href=\"computation-expressions\" data-linktype=\"relative-path\">Computation Expressions</a>.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p><a href=\"index\" data-linktype=\"relative-path\">F# Language Reference</a></p>\n<p><a href=\"loops-for-to-expression\" data-linktype=\"relative-path\">Loops: <code>for...to</code> Expression</a></p>\n<p><a href=\"loops-while-do-expression\" data-linktype=\"relative-path\">Loops: <code>while...do</code> Expression</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"cartermp\">\r\n<meta name=\"ms.author\" content=\"phcart\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"fsharp\">\r\n<meta name=\"ms.assetid\" content=\"f54e3228-4aec-4d0a-ae37-bc3376508284\">\r\n<meta name=\"description\" content=\"Loops: for...in Expression (F#)\">\r\n<meta name=\"keywords\" content=\"visual f#, f#, functional programming\">\r\n<meta name=\"ms.topic\" content=\"language-reference\">\r\n<meta name=\"ms.date\" content=\"05/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-fsharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/loops-for-in-expression.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/loops-for-in-expression.md\">\r\n<meta name=\"document_id\" content=\"a0f4c993-8ef1-3b44-efb4-3366faa213b6\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"cartermp","ms.author":"phcart","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Loops: for...in Expression (F#) | Microsoft Docs","ms.devlang":"fsharp","ms.assetid":"f54e3228-4aec-4d0a-ae37-bc3376508284","description":"Loops: for...in Expression (F#)","keywords":"visual f#, f#, functional programming","ms.topic":"language-reference","ms.date":"05/16/2016","ms.technology":"devlang-fsharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Petr Onderka","author_email":"gsvick@gmail.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Improve titles of some F# articles (#1003)","commit_sha":"d18cfd736f1dbd61ab9e209de4aaa878a88162cd","commit_date":"2016-09-03 11:22:59 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Move snippets to snippets folder, now with some F# (#904)","commit_sha":"37fe2b89d590509e8eb14342da988f15862a9e2b","commit_date":"2016-08-13 16:40:56 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize F# snippets (#903)","commit_sha":"6ea1cf8f3779532a9ed8fbdac32592fbb809443c","commit_date":"2016-08-13 15:14:41 -0700"},{"author_name":"Phillip Carter","author_email":"phillip.carter@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"F# Docs: Update intro, move files, rename language reference for better URLS (#902)","commit_sha":"70a10b9c3e21291c96d927d13f8710d9e0738d4c","commit_date":"2016-08-13 11:22:39 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter","id":"6309070"},"contributors":[{"profile_url":"https://github.com/cartermp","display_name":"Phillip Carter"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"},{"profile_url":"https://github.com/svick","display_name":"Petr Onderka","id":"287848"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/fsharp/language-reference/loops-for-in-expression.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/fsharp/language-reference/loops-for-in-expression.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/fsharp/language-reference/loops-for-in-expression.md","document_id":"a0f4c993-8ef1-3b44-efb4-3366faa213b6","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/fsharp/language-reference/loops-for-in-expression","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"Loops: for...in Expression (F#)","_op_displayDate":"2016-5-16","_op_displayDate_source":"2016-05-16T00:00:00Z","_op_wordCount":750,"_op_rawTitle":"<h1 id=\"loops-forin-expression\" sourcefile=\"docs/fsharp/language-reference/loops-for-in-expression.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Loops: for...in Expression</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/fsharp/language-reference/loops-for-in-expression","fileRelativePath":"articles/fsharp/language-reference/loops-for-in-expression.html"},"themesRelativePathToOutputRoot":"_themes/"}