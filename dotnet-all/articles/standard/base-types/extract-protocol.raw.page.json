{"content":"<div><div class=\"content\">\n<p>The following example extracts a protocol and port number from a URL. </p>\n<h2 id=\"example\">Example</h2>\n<p>The example uses the <a class=\"xref\" href=\"../../../api/system.text.regularexpressions.match#System_Text_RegularExpressions_Match_Result_System_String_\" data-linktype=\"relative-path\">Match.Result</a> method to return the protocol followed by a colon followed by the port number. </p>\n<pre class=\"loading\"><code class=\"lang-csharp\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string url = &quot;http://www.contoso.com:8080/letters/readme&quot;;\n\n      Regex r = new Regex(@&quot;^(?&lt;proto&gt;\\w+)://[^/]+?(?&lt;port&gt;:\\d+)?/&quot;,\n                          RegexOptions.None, TimeSpan.FromMilliseconds(150));\n      Match m = r.Match(url);\n      if (m.Success)\n         Console.WriteLine(r.Match(url).Result(&quot;${proto}${port}&quot;)); \n   }\n}\n// The example displays the following output:\n//       http:8080\n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">Imports System.Text.RegularExpressions\n\nModule Example\n   Public Sub Main()\n      Dim url As String = &quot;http://www.contoso.com:8080/letters/readme.html&quot; \n      Dim r As New Regex(&quot;^(?&lt;proto&gt;\\w+)://[^/]+?(?&lt;port&gt;:\\d+)?/&quot;,\n                         RegexOptions.None, TimeSpan.FromMilliseconds(150))\n\n      Dim m As Match = r.Match(url)\n      If m.Success Then\n         Console.WriteLine(r.Match(url).Result(&quot;${proto}${port}&quot;))\n      End If   \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       http:8080\n</code></pre><p>The regular expression pattern <code>^(?&lt;proto&gt;\\w+)://[^/]+?(?&lt;port&gt;:\\d+)?/</code> can be interpreted as shown in the following table.</p>\n<table>\n<thead>\n<tr>\n<th>Pattern</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>^</code></td>\n<td>Begin the match at the start of the string.</td>\n</tr>\n<tr>\n<td><code>(?&lt;proto&gt;\\w+)</code></td>\n<td>Match one or more word characters. Name this group proto.</td>\n</tr>\n<tr>\n<td><code>://</code></td>\n<td>Match a colon followed by two slash marks.</td>\n</tr>\n<tr>\n<td><code>[^/]+?</code></td>\n<td>Match one or more occurrences (but as few as possible) of any character other than a slash mark.</td>\n</tr>\n<tr>\n<td><code>(?&lt;port&gt;:\\d+)?</code></td>\n<td>Match zero or one occurrence of a colon followed by one or more digit characters. Name this group port.</td>\n</tr>\n<tr>\n<td><code>/</code></td>\n<td>Match a slash mark.</td>\n</tr>\n</tbody>\n</table>\n<p>The <a class=\"xref\" href=\"../../../api/system.text.regularexpressions.match#System_Text_RegularExpressions_Match_Result_System_String_\" data-linktype=\"relative-path\">Match.Result</a> method expands the <code>${proto}${port}</code> replacement sequence, which concatenates the value of the two named groups captured in the regular expression pattern. It is a convenient alternative to explicitly concatenating the strings retrieved from the collection object returned by the <a class=\"xref\" href=\"../../../api/system.text.regularexpressions.match#System_Text_RegularExpressions_Match_Groups\" data-linktype=\"relative-path\">Match.Groups</a> property.</p>\n<p>The example uses the <a class=\"xref\" href=\"../../../api/system.text.regularexpressions.match#System_Text_RegularExpressions_Match_Result_System_String_\" data-linktype=\"relative-path\">Match.Result</a> method with two substitutions, <code>${proto}</code> and <code>${port}</code>, to include the captured groups in the output string. You can retrieve the captured groups from the match&#39;s <a class=\"xref\" href=\"../../../api/system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> object instead, as the following code shows.</p>\n<pre class=\"loading\"><code class=\"lang-csharp\">Console.WriteLine(m.Groups[&quot;proto&quot;].Value + m.Groups[&quot;port&quot;].Value); \n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">Console.WriteLine(m.Groups(&quot;proto&quot;).Value + m.Groups(&quot;port&quot;).Value)\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p><a href=\"regular-expressions\" data-linktype=\"relative-path\">.NET regular expressions</a></p>\n<p><a href=\"regex-examples\" data-linktype=\"relative-path\">Regular expression examples</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"d2462fb4-6d61-44ab-8466-73f1f06c3058\">\r\n<meta name=\"description\" content=\"How to extract a protocol and port number from a URL\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"07/28/2016\">\r\n<meta name=\"ms.technology\" content=\"dotnet-standard\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/standard/base-types/extract-protocol.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/standard/base-types/extract-protocol.md\">\r\n<meta name=\"document_id\" content=\"d20ddd28-7c57-5a16-1c16-68d9d0a151ec\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: extract a protocol and port number from a URL | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"d2462fb4-6d61-44ab-8466-73f1f06c3058","description":"How to extract a protocol and port number from a URL","keywords":".NET, .NET Core","ms.topic":"article","ms.date":"07/28/2016","ms.technology":"dotnet-standard","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Porting base type docs take 4 (#1053)","commit_sha":"fb00da6505c9edb6a49d2003ae9bcb8e74c11d6c","commit_date":"2016-10-06 10:32:59 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/standard/base-types/extract-protocol.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/standard/base-types/extract-protocol.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/standard/base-types/extract-protocol.md","document_id":"d20ddd28-7c57-5a16-1c16-68d9d0a151ec","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/standard/base-types/extract-protocol","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"How to: extract a protocol and port number from a URL","_op_displayDate":"2016-7-28","_op_displayDate_source":"2016-07-28T00:00:00Z","_op_wordCount":304,"_op_rawTitle":"<h1 id=\"how-to-extract-a-protocol-and-port-number-from-a-url\" sourcefile=\"docs/standard/base-types/extract-protocol.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">How to: extract a protocol and port number from a URL</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/standard/base-types/extract-protocol","fileRelativePath":"articles/standard/base-types/extract-protocol.html"},"themesRelativePathToOutputRoot":"_themes/"}