{"content":"<div><div class=\"content\">\n<p>The following example uses the static <a class=\"xref\" href=\"../../../api/system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Replace_System_String_System_String_System_String_System_Text_RegularExpressions_RegexOptions_System_TimeSpan_\" data-linktype=\"relative-path\">Regex.Replace</a> method to strip invalid characters from a string. </p>\n<h2 id=\"example\">Example</h2>\n<p>You can use the <code>CleanInput</code> method defined in this example to strip potentially harmful characters that have been entered into a text field that accepts user input. In this case, <code>CleanInput</code> strips out all nonalphanumeric characters except periods (.), at symbols (@), and hyphens (-), and returns the remaining string. However, you can modify the regular expression pattern so that it strips out any characters that should not be included in an input string.</p>\n<pre class=\"loading\"><code class=\"lang-csharp\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n    static string CleanInput(string strIn)\n    {\n        // Replace invalid characters with empty strings.\n        try {\n           return Regex.Replace(strIn, @&quot;[^\\w\\.@-]&quot;, &quot;&quot;, \n                                RegexOptions.None, TimeSpan.FromSeconds(1.5)); \n        }\n        // If we timeout when replacing invalid characters, \n        // we should return Empty.\n        catch (RegexMatchTimeoutException) {\n           return String.Empty;   \n        }\n    }\n}\n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">Imports System.Text.RegularExpressions\n\nModule Example\n    Function CleanInput(strIn As String) As String\n        &#39; Replace invalid characters with empty strings.\n        Try\n           Return Regex.Replace(strIn, &quot;[^\\w\\.@-]&quot;, &quot;&quot;)\n        &#39; If we timeout when replacing invalid characters, \n        &#39; we should return String.Empty.\n        Catch e As RegexMatchTimeoutException\n           Return String.Empty         \n        End Try\n    End Function\nEnd Module\n</code></pre><p>The regular expression pattern <code>[^\\w\\.@-]</code> matches any character that is not a word character, a period, an @ symbol, or a hyphen. A word character is any letter, decimal digit, or punctuation connector such as an underscore. Any character that matches this pattern is replaced by <a class=\"xref\" href=\"../../../api/system.string#System_String_Empty\" data-linktype=\"relative-path\">String.Empty</a>, which is the string defined by the replacement pattern. To allow additional characters in user input, add those characters to the character class in the regular expression pattern. For example, the regular expression pattern <code>[^\\w\\.@-\\\\%]</code>also allows a percentage symbol and a backslash in an input string.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p><a href=\"regular-expressions\" data-linktype=\"relative-path\">.NET regular expressions</a></p>\n<p><a href=\"regex-examples\" data-linktype=\"relative-path\">Regular expression examples</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"f1df4967-7887-41d2-b60f-0da9be67c8fa\">\r\n<meta name=\"description\" content=\"How to strip invalid characters from a string\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"07/28/2016\">\r\n<meta name=\"ms.technology\" content=\"dotnet-standard\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/standard/base-types/strip-characters.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/standard/base-types/strip-characters.md\">\r\n<meta name=\"document_id\" content=\"f6e69b0c-eae0-e208-fce5-87810ed54f97\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"How to: strip invalid characters from a string | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"f1df4967-7887-41d2-b60f-0da9be67c8fa","description":"How to strip invalid characters from a string","keywords":".NET, .NET Core","ms.topic":"article","ms.date":"07/28/2016","ms.technology":"dotnet-standard","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Porting base type docs take 4 (#1053)","commit_sha":"fb00da6505c9edb6a49d2003ae9bcb8e74c11d6c","commit_date":"2016-10-06 10:32:59 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/standard/base-types/strip-characters.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/standard/base-types/strip-characters.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/standard/base-types/strip-characters.md","document_id":"f6e69b0c-eae0-e208-fce5-87810ed54f97","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/standard/base-types/strip-characters","toc_asset_id":"articles/toc.json","toc_rel":"../../toc.json","_op_ogTitle":"How to: strip invalid characters from a string","_op_displayDate":"2016-7-28","_op_displayDate_source":"2016-07-28T00:00:00Z","_op_wordCount":288,"_op_rawTitle":"<h1 id=\"how-to-strip-invalid-characters-from-a-string\" sourcefile=\"docs/standard/base-types/strip-characters.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">How to: strip invalid characters from a string</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/standard/base-types/strip-characters","fileRelativePath":"articles/standard/base-types/strip-characters.html"},"themesRelativePathToOutputRoot":"_themes/"}