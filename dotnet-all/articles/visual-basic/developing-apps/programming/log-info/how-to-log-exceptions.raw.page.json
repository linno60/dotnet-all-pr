{"content":"<div><div class=\"content\">\n<p>You can use the <code>My.Application.Log</code> and <code>My.Log</code> objects to log information about exceptions that occur in your application. These examples show how to use the <code>My.Application.Log.WriteException</code> method to log exceptions that you catch explicitly and exceptions that are unhandled.  </p>\n<p> For logging tracing information, use the <code>My.Application.Log.WriteEntry</code> method. For more information, see <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.logging.log#Microsoft_VisualBasic_Logging_Log_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>  </p>\n<h3 id=\"to-log-a-handled-exception\">To log a handled exception</h3>\n<ol>\n<li><p>Create the method that will generate the exception information.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#9\">    Public Sub ExceptionLogTest(ByVal fileName As String)\n    End Sub\n</code></pre></li>\n<li><p>Use a <code>Try...Catch</code> block to catch the exception.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#6\">        Try\n        Catch ex As Exception\n        End Try\n</code></pre></li>\n<li><p>Put the code that could generate an exception in the <code>Try</code> block.  </p>\n<p> Uncomment the <code>Dim</code> and <code>MsgBox</code> lines to cause a <a class=\"xref\" href=\"../../../../../api/system.nullreferenceexception\" data-linktype=\"relative-path\">NullReferenceException</a> exception.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#7\">            &#39; Code that might generate an exception goes here.\n            &#39; For example:\n            &#39;    Dim x As Object\n            &#39;    MsgBox(x.ToString)\n</code></pre></li>\n<li><p>In the <code>Catch</code> block, use the <code>My.Application.Log.WriteException</code> method to write the exception information.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#8\">            My.Application.Log.WriteException(ex, \n                TraceEventType.Error, \n                &quot;Exception in ExceptionLogTest &quot; &amp; \n                &quot;with argument &quot; &amp; fileName &amp; &quot;.&quot;)\n</code></pre><p> The following example shows the complete code for logging a handled exception.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#10\">    Public Sub ExceptionLogTest(ByVal fileName As String)\n        Try\n            &#39; Code that might generate an exception goes here.\n            &#39; For example:\n            &#39;    Dim x As Object\n            &#39;    MsgBox(x.ToString)\n        Catch ex As Exception\n            My.Application.Log.WriteException(ex, \n                TraceEventType.Error, \n                &quot;Exception in ExceptionLogTest &quot; &amp; \n                &quot;with argument &quot; &amp; fileName &amp; &quot;.&quot;)\n        End Try\n    End Sub\n</code></pre></li>\n</ol>\n<h3 id=\"to-log-an-unhandled-exception\">To log an unhandled exception</h3>\n<ol>\n<li><p>Have a project selected in <strong>Solution Explorer</strong>. On the <strong>Project</strong> menu, choose <strong>Properties</strong>.  </p>\n</li>\n<li><p>Click the <strong>Application</strong> tab.  </p>\n</li>\n<li><p>Click the <strong>View Application Events</strong> button to open the Code Editor.  </p>\n<p> This opens the ApplicationEvents.vb file.  </p>\n</li>\n<li><p>Have the ApplicationEvents.vb file open in the Code Editor. On the <strong>General</strong> menu, choose <strong>MyApplication Events</strong>.  </p>\n</li>\n<li><p>On the <strong>Declarations</strong> menu, choose <strong>UnhandledException</strong>.  </p>\n<p> The application raises the <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.applicationservices.windowsformsapplicationbase#Microsoft_VisualBasic_ApplicationServices_WindowsFormsApplicationBase_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> event before the main application runs.  </p>\n</li>\n<li><p>Add the <code>My.Application.Log.WriteException</code> method to the <code>UnhandledException</code> event handler.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#4\">            My.Application.Log.WriteException(e.Exception,\n                TraceEventType.Critical,\n                &quot;Application shut down at &quot; &amp;\n                My.Computer.Clock.GmtTime.ToString)\n</code></pre><p> The following example shows the complete code for logging an unhandled exception.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#5\">        Private Sub MyApplication_UnhandledException(\n            ByVal sender As Object,\n            ByVal e As ApplicationServices.UnhandledExceptionEventArgs\n        ) Handles Me.UnhandledException\n            My.Application.Log.WriteException(e.Exception,\n                TraceEventType.Critical,\n                &quot;Application shut down at &quot; &amp;\n                My.Computer.Clock.GmtTime.ToString)\n        End Sub\n</code></pre></li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.logging.log\" data-linktype=\"relative-path\">Microsoft.VisualBasic.Logging.Log</a><br> <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.logging.log#Microsoft_VisualBasic_Logging_Log_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a><br> <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.logging.log#Microsoft_VisualBasic_Logging_Log_WriteException_\" data-linktype=\"relative-path\">WriteException</a><br> <a href=\"working-with-application-logs\" data-linktype=\"relative-path\">Working with Application Logs</a><br> <a href=\"how-to-write-log-messages\" data-linktype=\"relative-path\">How to: Write Log Messages</a><br> <a href=\"walkthrough-determining-where-my-application-log-writes-information\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a><br> <a href=\"walkthrough-changing-where-my-application-log-writes-information\" data-linktype=\"relative-path\">Walkthrough: Changing Where My.Application.Log Writes Information</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"a26c60e2-ae39-444a-aebb-33eccadc0eeb\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"19\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md\">\r\n<meta name=\"document_id\" content=\"228923e0-2f59-47fe-67f2-8fca7054e6ed\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Log Exceptions in Visual Basic | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"a26c60e2-ae39-444a-aebb-33eccadc0eeb","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":19,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["exceptions, logging","exceptions, tracking"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md","document_id":"228923e0-2f59-47fe-67f2-8fca7054e6ed","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions","toc_asset_id":"articles/visual-basic/developing-apps/programming/log-info/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Log Exceptions in Visual Basic","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":363,"_op_rawTitle":"<h1 id=\"how-to-log-exceptions-in-visual-basic\" sourcefile=\"docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">How to: Log Exceptions in Visual Basic</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions","fileRelativePath":"articles/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.html"},"themesRelativePathToOutputRoot":"_themes/"}