{"content":"<div><div class=\"content\">\n<p>This walkthrough demonstrates how to create a custom log listener and configure it to listen to the output of the <code>My.Application.Log</code> object.  </p>\n<h2 id=\"getting-started\">Getting Started</h2>\n<p> Log listeners must inherit from the <a class=\"xref\" href=\"../../../../../api/system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> class.  </p>\n<h4 id=\"to-create-the-listener\">To create the listener</h4>\n<ul>\n<li><p>In your application, create a class named <code>SimpleListener</code> that inherits from <a class=\"xref\" href=\"../../../../../api/system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#16\">Public Class SimpleListener\n    Inherits System.Diagnostics.TraceListener\n\n    &lt;Security.Permissions.HostProtection(Synchronization:=True)&gt; \n    Public Overloads Overrides Sub Write(ByVal message As String)\n        MsgBox(&quot;Write: &quot; &amp; message)\n    End Sub\n\n    &lt;Security.Permissions.HostProtection(Synchronization:=True)&gt; \n    Public Overloads Overrides Sub WriteLine(ByVal message As String)\n        MsgBox(&quot;WriteLine: &quot; &amp; message)\n    End Sub\nEnd Class\n</code></pre><p> The <a class=\"xref\" href=\"../../../../../api/system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> and <a class=\"xref\" href=\"../../../../../api/system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods, required by the base class, call <code>MsgBox</code> to display their input.  </p>\n<p> The <a class=\"xref\" href=\"../../../../../api/system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> attribute is applied to the <a class=\"xref\" href=\"../../../../../api/system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> and <a class=\"xref\" href=\"../../../../../api/system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods so that their attributes match the base class methods. The <a class=\"xref\" href=\"../../../../../api/system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> attribute allows the host that runs the code to determine that the code exposes host-protection synchronization.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"../../../../../api/system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> attribute is effective only on unmanaged applications that host the common language runtime and that implement host protection, such as SQL Server.  </p>\n</div>\n</li>\n</ul>\n<p> To ensure that <code>My.Application.Log</code> uses your log listener, you should strongly name the assembly that contains your log listener.  </p>\n<p> The next procedure provides some simple steps for creating a strongly named log-listener assembly. For more information, see <a href=\"https://msdn.microsoft.com/library/xwb8f617\" data-linktype=\"external\">Creating and Using Strong-Named Assemblies</a>.  </p>\n<h4 id=\"to-strongly-name-the-log-listener-assembly\">To strongly name the log-listener assembly</h4>\n<ol>\n<li><p>Have a project selected in <strong>Solution Explorer</strong>. On the <strong>Project</strong> menu, choose <strong>Properties</strong>. For more information, see <a href=\"http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7\" data-linktype=\"external\">Introduction to the Project Designer</a>.  </p>\n</li>\n<li><p>Click the <strong>Signing</strong> tab.  </p>\n</li>\n<li><p>Select the <strong>Sign the assembly</strong> box.  </p>\n</li>\n<li><p>Select <strong>&lt;New&gt;</strong> from the <strong>Choose a strong name key file</strong> drop-down list.  </p>\n<p> The <strong>Create Strong Name Key</strong> dialog box opens.  </p>\n</li>\n<li><p>Provide a name for the key file in the <strong>Key file name</strong> box.  </p>\n</li>\n<li><p>Enter a password in the <strong>Enter password</strong> and <strong>Confirm password</strong> boxes.  </p>\n</li>\n<li><p>Click <strong>OK</strong>.  </p>\n</li>\n<li><p>Rebuild the application.  </p>\n</li>\n</ol>\n<h2 id=\"adding-the-listener\">Adding the Listener</h2>\n<p> Now that the assembly has a strong name, you need to determine the strong name of the listener so that <code>My.Application.Log</code> uses your log listener.  </p>\n<p> The format of a strongly named type is as follows.  </p>\n<p> &lt;type name&gt;, &lt;assembly name&gt;, &lt;version number&gt;, &lt;culture&gt;, &lt;strong name&gt;  </p>\n<h4 id=\"to-determine-the-strong-name-of-the-listener\">To determine the strong name of the listener</h4>\n<ul>\n<li><p>The following code shows how to determine the strongly named type name for <code>SimpleListener</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMyApplicationLog#17\">Public Sub DisplaySimpleListenerStrongName()\n    Dim t As Type = GetType(SimpleListener)\n    MsgBox(t.FullName &amp; &quot;, &quot; &amp; t.Assembly.FullName)\nEnd Sub\n</code></pre><p> The strong name of the type depends on your project.  </p>\n</li>\n</ul>\n<p> With the strong name, you can add the listener to the <code>My.Application.Log</code> log-listener collection.  </p>\n<h4 id=\"to-add-the-listener-to-myapplicationlog\">To add the listener to My.Application.Log</h4>\n<ol>\n<li><p>Right-click on app.config in the <strong>Solution Explorer</strong> and choose <strong>Open</strong>.  </p>\n<p> -or-  </p>\n<p> If there is an app.config file:  </p>\n<ol>\n<li><p>On the <strong>Project</strong> menu, choose <strong>Add New Item</strong>.  </p>\n</li>\n<li><p>From the <strong>Add New Item</strong> dialog box, choose <strong>Application Configuration File</strong>.  </p>\n</li>\n<li><p>Click <strong>Add</strong>.  </p>\n</li>\n</ol>\n</li>\n<li><p>Locate the <code>&lt;listeners&gt;</code> section, in the <code>&lt;source&gt;</code> section with the <code>name</code> attribute &quot;DefaultSource&quot;, located in the <code>&lt;sources&gt;</code> section. The <code>&lt;sources&gt;</code> section is located in the <code>&lt;system.diagnostics&gt;</code> section, in the top-level <code>&lt;configuration&gt;</code> section.  </p>\n</li>\n<li><p>Add this element to the <code>&lt;listeners&gt;</code> section:  </p>\n<pre class=\"loading\"><code>&lt;add name=&quot;SimpleLog&quot; /&gt;  \n</code></pre></li>\n<li><p>Locate the <code>&lt;sharedListeners&gt;</code> section, in the <code>&lt;system.diagnostics&gt;</code> section, in the top-level <code>&lt;configuration&gt;</code> section.  </p>\n</li>\n<li><p>Add this element to that <code>&lt;sharedListeners&gt;</code> section:  </p>\n<pre class=\"loading\"><code>&lt;add name=&quot;SimpleLog&quot; type=&quot;SimpleLogStrongName&quot; /&gt;  \n</code></pre><p> Change the value of <code>SimpleLogStrongName</code> to be the strong name of the listener.  </p>\n</li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.logging.log\" data-linktype=\"relative-path\">Microsoft.VisualBasic.Logging.Log</a><br> <a href=\"working-with-application-logs\" data-linktype=\"relative-path\">Working with Application Logs</a><br> <a href=\"how-to-log-exceptions\" data-linktype=\"relative-path\">How to: Log Exceptions</a><br> <a href=\"how-to-write-log-messages\" data-linktype=\"relative-path\">How to: Write Log Messages</a><br> <a href=\"walkthrough-changing-where-my-application-log-writes-information\" data-linktype=\"relative-path\">Walkthrough: Changing Where My.Application.Log Writes Information</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"0e019115-4b25-4820-afb1-af8c6e391698\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"19\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md\">\r\n<meta name=\"document_id\" content=\"63aafcc7-e638-5ceb-2792-72e90804d13f\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Creating Custom Log Listeners (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"0e019115-4b25-4820-afb1-af8c6e391698","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":19,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["custom log listeners","My.Application.Log object, custom log listeners"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganizing the VB TOC (#1348)","commit_sha":"0a5d76c154aeb9b749c9c3fc5ad0962e93754a62","commit_date":"2017-02-14 10:22:48 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md","document_id":"63aafcc7-e638-5ceb-2792-72e90804d13f","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners","toc_asset_id":"articles/visual-basic/developing-apps/programming/log-info/toc.json","toc_rel":"toc.json","_op_ogTitle":"Creating Custom Log Listeners (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":538,"_op_rawTitle":"<h1 id=\"walkthrough-creating-custom-log-listeners-visual-basic\" sourcefile=\"docs/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Walkthrough: Creating Custom Log Listeners (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners","fileRelativePath":"articles/visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.html"},"themesRelativePathToOutputRoot":"_themes/"}