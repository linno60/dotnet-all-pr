{"content":"<div><div class=\"content\">\n<p>When you want to display large quantities of tabular data in a <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeater(v=vs.110).aspx\" data-linktype=\"external\">DataRepeater</a> control, you can improve performance by setting the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403141(v=vs.110).aspx\" data-linktype=\"external\">VirtualMode</a> property to <code>True</code> and explicitly managing the control&#39;s interaction with its data source. The <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeater(v=vs.110).aspx\" data-linktype=\"external\">DataRepeater</a> control provides several events that you can handle to interact with your data source and display the data as needed at run time.  </p>\n<h2 id=\"how-virtual-mode-works\">How Virtual Mode Works</h2>\n<p> The most common scenario for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeater(v=vs.110).aspx\" data-linktype=\"external\">DataRepeater</a> control is to bind the child controls of the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb894825(v=vs.110).aspx\" data-linktype=\"external\">ItemTemplate</a> to a data source at design time and allow the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.windows.forms.bindingsource(v=vs.110).aspx\" data-linktype=\"external\">BindingSource</a> to pass data back and forth as needed. When you use virtual mode, the controls are not bound to a data source, and data is passed back and forth to the underlying data source at run time.  </p>\n<p> When the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403141(v=vs.110).aspx\" data-linktype=\"external\">VirtualMode</a> property is set to <code>True</code>, you create the user interface by adding controls from the <strong>Toolbox</strong> instead of adding bound controls from the <strong>Data Sources</strong> window.  </p>\n<p> Events are raised on a control-by-control basis, and you must add code to handle the display of data. When a new <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeateritem(v=vs.110).aspx\" data-linktype=\"external\">DataRepeaterItem</a> is scrolled into view, the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403105(v=vs.140).aspx\" data-linktype=\"external\">ItemValueNeeded</a> event is raised one time for each control and you must supply the values for each control in the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403105(v=vs.140).aspx\" data-linktype=\"external\">ItemValueNeeded</a> event handler.  </p>\n<p> If data in one of the controls is changed by the user, the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403148(v=vs.140).aspx\" data-linktype=\"external\">ItemValuePushed</a> event is raised and you must validate the data and save it to your data source.  </p>\n<p> If the user adds a new item, the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc425025(v=vs.140).aspx\" data-linktype=\"external\">NewItemNeeded</a> event is raised. Use this event&#39;s handler to create a new record in your data source. To prevent unintended changes, you must also monitor the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/wxasd33h(v=vs.110).aspx\" data-linktype=\"external\">KeyDown</a> event for each control and call <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403144(v=vs.110).aspx\" data-linktype=\"external\">CancelEdit</a> if the user presses the ESC key.  </p>\n<p> If your data source changes, you can refresh the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeater(v=vs.110).aspx\" data-linktype=\"external\">DataRepeater</a> control by calling the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403166(v=vs.110).aspx\" data-linktype=\"external\">BeginResetItemTemplate</a> and <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403130(v=vs.110).aspx\" data-linktype=\"external\">EndResetItemTemplate</a> methods. Both methods must be called in order.  </p>\n<p> Finally, you must implement event handlers for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403195(v=vs.140).aspx\" data-linktype=\"external\">ItemsRemoved</a> event, which occurs when an item is deleted, and optionally for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403194(v=vs.140).aspx\" data-linktype=\"external\">UserDeletingItems</a> and <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403208(v=vs.140).aspx\" data-linktype=\"external\">UserDeletedItems</a> events, which occur whenever a user deletes an item by pressing the DELETE key.  </p>\n<h2 id=\"implementing-virtual-mode\">Implementing Virtual Mode</h2>\n<p> Following are the steps that are required to implement virtual mode.  </p>\n<h4 id=\"to-implement-virtual-mode\">To implement virtual mode</h4>\n<ol>\n<li><p>Drag a <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeater(v=vs.110).aspx\" data-linktype=\"external\">DataRepeater</a> control from the <strong>Visual Basic PowerPacks</strong> tab in the <strong>Toolbox</strong> to a form or container control. Set the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403141(v=vs.110).aspx\" data-linktype=\"external\">VirtualMode</a> property to <code>True</code>.  </p>\n</li>\n<li><p>Drag controls from the <strong>Toolbox</strong> onto the item template region (the upper region) of the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeater(v=vs.110).aspx\" data-linktype=\"external\">DataRepeater</a> control. You will need one control for each field in your data source that you want to display.  </p>\n</li>\n<li><p>Implement a handler for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403105(v=vs.140).aspx\" data-linktype=\"external\">ItemValueNeeded</a> event to provide values for each control. This event is raised when a new <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeateritem(v=vs.110).aspx\" data-linktype=\"external\">DataRepeaterItem</a> is scrolled into view. The code will resemble the following example, which is for a data source named <code>Employees</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbPowerPacksDataRepeaterVirtualMode#1\">    Private Sub DataRepeater1_ItemValueNeeded(\n        ByVal sender As Object, \n        ByVal e As Microsoft.VisualBasic.PowerPacks.DataRepeaterItemValueEventArgs\n      ) Handles DataRepeater1.ItemValueNeeded\n        If e.ItemIndex &lt; Employees.Count Then\n            Select Case e.Control.Name\n                Case &quot;txtFirstName&quot;\n                    e.Value = Employees.Item(e.ItemIndex + 1).firstName\n                Case &quot;txtLastName&quot;\n                    e.Value = Employees.Item(e.ItemIndex + 1).lastName\n            End Select\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"VbPowerPacksDataRepeaterVirtualMode#1\">        private void dataRepeater1_ItemValueNeeded(object sender, Microsoft.VisualBasic.PowerPacks.DataRepeaterItemValueEventArgs e)\n        {\n            if (e.ItemIndex &lt; Employees.Count)\n            {\n                switch (e.Control.Name)\n                {\n                    case &quot;txtFirstName&quot;:\n                        e.Value = Employees[e.ItemIndex + 1].firstName;\n                        break;\n                    case &quot;txtLastName&quot;:\n                        e.Value = Employees[e.ItemIndex + 1].lastName;\n                        break;\n                }\n            }\n        }\n</code></pre></li>\n<li><p>Implement a handler for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403148(v=vs.140).aspx\" data-linktype=\"external\">ItemValuePushed</a> event to store the data. This event is raised when the user commits changes to a child control of the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeateritem(v=vs.110).aspx\" data-linktype=\"external\">DataRepeaterItem</a>. The code will resemble the following example, which is for a data source named <code>Employees</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbPowerPacksDataRepeaterVirtualMode#2\">    Private Sub DataRepeater1_ItemValuePushed(\n        ByVal sender As Object, \n        ByVal e As Microsoft.VisualBasic.PowerPacks.DataRepeaterItemValueEventArgs\n      ) Handles DataRepeater1.ItemValuePushed\n\n        Dim emp As Employee = Employees.Item(e.ItemIndex)\n        Select Case e.Control.Name\n            Case &quot;txtFirstName&quot;\n                emp.firstName = e.Control.Text\n            Case &quot;txtLastName&quot;\n                emp.lastName = e.Control.Text\n            Case Else\n                MsgBox(&quot;Error during ItemValuePushed unexpected control: &quot; &amp; \n                    e.Control.Name)\n        End Select\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"VbPowerPacksDataRepeaterVirtualMode#2\">        private void dataRepeater1_ItemValuePushed(object sender, Microsoft.VisualBasic.PowerPacks.DataRepeaterItemValueEventArgs e)\n        {\n            Employee emp = Employees[e.ItemIndex];\n            switch (e.Control.Name)\n            {\n                case &quot;txtFirstName&quot;:\n                    emp.firstName = e.Control.Text;\n                    break;\n                case &quot;txtLastName&quot;:\n                    emp.lastName = e.Control.Text;\n                    break;\n                default:\n                    MessageBox.Show(&quot;Error during ItemValuePushed unexpected control: &quot; + e.Control.Name);\n                    break;\n            }\n        }\n</code></pre></li>\n<li><p>Implement a handler for each child control&#39;s <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/wxasd33h(v=vs.110).aspx\" data-linktype=\"external\">KeyDown</a> event and monitor the ESC key. Call the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403144(v=vs.110).aspx\" data-linktype=\"external\">CancelEdit</a> method to prevent the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403148(v=vs.140).aspx\" data-linktype=\"external\">ItemValuePushed</a> event from being raised. The code will resemble the following example.  </p>\n<pre><code class=\"lang-vb\" name=\"VbPowerPacksDataRepeaterVirtualMode#3\">    Private Sub Child_KeyDown(\n        ByVal sender As Object, \n        ByVal e As System.Windows.Forms.KeyEventArgs\n      ) Handles txtFirstName.KeyDown, txtLastName.KeyDown\n\n        If e.KeyCode = Keys.Escape Then\n            Datarepeater1.CancelEdit()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"VbPowerPacksDataRepeaterVirtualMode#3\">        private void child_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)\n        {\n            if (e.KeyCode == Keys.Escape)\n            {\n                this.dataRepeater1.CancelEdit();\n            }\n        }\n</code></pre></li>\n<li><p>Implement a handler for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc425025(v=vs.140).aspx\" data-linktype=\"external\">NewItemNeeded</a> event. This event is raised when the user adds a new item to the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.powerpacks.datarepeater(v=vs.110).aspx\" data-linktype=\"external\">DataRepeater</a> control. The code will resemble the following example, which is for a data source named <code>Employees</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbPowerPacksDataRepeaterVirtualMode#4\">    Private Sub DataRepeater1_NewItemNeeded(\n      ) Handles DataRepeater1.NewItemNeeded\n\n        Dim newEmployee As New Employee\n        Employees.Add(newEmployee)\n        blnNewItemNeedEventFired = True\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"VbPowerPacksDataRepeaterVirtualMode#4\">        private void dataRepeater1_NewItemNeeded(object sender, System.EventArgs e)\n        {\n            Employee newEmployee = new Employee();\n            Employees.Add(newEmployee);\n            blnNewItemNeedEventFired = true;\n        }\n</code></pre></li>\n<li><p>Implement a handler for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403195(v=vs.140).aspx\" data-linktype=\"external\">ItemsRemoved</a> event. This event occurs when a user deletes an existing item. The code will resemble the following example, which is for a data source named <code>Employees</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbPowerPacksDataRepeaterVirtualMode#5\">    Private Sub DataRepeater1_ItemsRemoved(\n        ByVal sender As Object, \n        ByVal e As Microsoft.VisualBasic.PowerPacks.DataRepeaterAddRemoveItemsEventArgs\n      ) Handles DataRepeater1.ItemsRemoved\n\n        Employees.RemoveAt(e.ItemIndex)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"VbPowerPacksDataRepeaterVirtualMode#5\">        private void dataRepeater1_ItemsRemoved(object sender, Microsoft.VisualBasic.PowerPacks.DataRepeaterAddRemoveItemsEventArgs e)\n        {\n            Employees.RemoveAt(e.ItemIndex);\n        }\n</code></pre></li>\n<li><p>For control-level validation, optionally implement handlers for the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/35htw7by(v=vs.110).aspx\" data-linktype=\"external\">Validating</a> events of the child controls. The code will resemble the following example.  </p>\n<pre><code class=\"lang-vb\" name=\"VbPowerPacksDataRepeaterVirtualMode#6\">    Private Sub Text_Validating(\n        ByVal sender As Object, \n        ByVal e As System.ComponentModel.CancelEventArgs\n      ) Handles txtFirstName.Validating, txtLastName.Validating\n\n        If txtFirstName.Text = &quot;&quot; Then\n            MsgBox(&quot;Please enter a name.&quot;)\n            e.Cancel = True\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"VbPowerPacksDataRepeaterVirtualMode#6\">        private void Text_Validating(object sender, System.ComponentModel.CancelEventArgs e)\n        {\n            if (txtFirstName.Text == &quot;&quot;)\n            {\n                MessageBox.Show(&quot;Please enter a name.&quot;);\n                e.Cancel = true;\n            }\n        }\n</code></pre></li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403148(v=vs.140).aspx\" data-linktype=\"external\">ItemValuePushed</a><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc425025(v=vs.140).aspx\" data-linktype=\"external\">NewItemNeeded</a><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/cc403105(v=vs.140).aspx\" data-linktype=\"external\">ItemValueNeeded</a><br> <a href=\"introduction-to-the-datarepeater-control-visual-studio\" data-linktype=\"relative-path\">Introduction to the DataRepeater Control</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"5fb805dc-2d8b-4139-b1e3-86e4c2667221\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"13\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio.md\">\r\n<meta name=\"document_id\" content=\"b6f5f67e-89a7-55c9-dda0-be44508cda8c\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Virtual Mode in the DataRepeater Control (Visual Studio) | Microsoft Docs","ms.suite":"","ms.assetid":"5fb805dc-2d8b-4139-b1e3-86e4c2667221","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":13,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["virtual data binding","DataRepeater","DataRepeater, virtual mode"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"fixing broken links (#1263)","commit_sha":"c84a19c01b6bf6e6bdce1327b5ff798db6ce979e","commit_date":"2016-11-18 17:35:13 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio.md","document_id":"b6f5f67e-89a7-55c9-dda0-be44508cda8c","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"Virtual Mode in the DataRepeater Control (Visual Studio)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":912,"_op_rawTitle":"<h1 id=\"virtual-mode-in-the-datarepeater-control-visual-studio\" sourcefile=\"docs/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio.md\" sourcestartlinenumber=\"38\" sourceendlinenumber=\"38\">Virtual Mode in the DataRepeater Control (Visual Studio)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio","fileRelativePath":"articles/visual-basic/developing-apps/windows-forms/virtual-mode-in-the-datarepeater-control-visual-studio.html"},"themesRelativePathToOutputRoot":"_themes/"}