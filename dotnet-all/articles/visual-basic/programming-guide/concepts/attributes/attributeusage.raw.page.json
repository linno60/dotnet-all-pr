{"content":"<div><div class=\"content\">\n<p>Determines how a custom attribute class can be used. <code>AttributeUsage</code> is an attribute that can be applied to custom attribute definitions to control how the new attribute can be applied. The default settings look like this when applied explicitly:  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">&lt;System.AttributeUsage(System.AttributeTargets.All,   \n                   AllowMultiple:=False,   \n                   Inherited:=True)&gt;   \nClass NewAttribute  \n    Inherits System.Attribute  \nEnd Class  \n</code></pre><p> In this example, the <code>NewAttribute</code> class can be applied to any attribute-able code entity, but can be applied only once to each entity. It is inherited by derived classes when applied to a base class.  </p>\n<p> The <code>AllowMultiple</code> and <code>Inherited</code> arguments are optional, so this code has the same effect:  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">&lt;System.AttributeUsage(System.AttributeTargets.All)&gt;   \nClass NewAttribute  \n    Inherits System.Attribute  \nEnd Class  \n</code></pre><p> The first <code>AttributeUsage</code> argument must be one or more elements of the <a class=\"xref\" href=\"../../../../../api/system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a> enumeration. Multiple target types can be linked together with the OR operator, like this:  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports System  \n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">&lt;AttributeUsage(AttributeTargets.Property Or AttributeTargets.Field)&gt;   \nClass NewPropertyOrFieldAttribute  \n    Inherits Attribute  \nEnd Class  \n</code></pre><p> If the <code>AllowMultiple</code> argument is set to <code>true</code>, then the resulting attribute can be applied more than once to a single entity, like this:  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports System  \n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">&lt;AttributeUsage(AttributeTargets.Class, AllowMultiple:=True)&gt;   \nClass MultiUseAttr  \n    Inherits Attribute  \nEnd Class  \n\n&lt;MultiUseAttr(), MultiUseAttr()&gt;   \nClass Class1  \nEnd Class  \n</code></pre><p> In this case <code>MultiUseAttr</code> can be applied repeatedly because <code>AllowMultiple</code> is set to <code>true</code>. Both formats shown for applying multiple attributes are valid.  </p>\n<p> If <code>Inherited</code> is set to <code>false</code>, then the attribute is not inherited by classes that are derived from a class that is attributed. For example:  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports System  \n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">&lt;AttributeUsage(AttributeTargets.Class, Inherited:=False)&gt;   \nClass Attr1  \n    Inherits Attribute  \nEnd Class  \n\n&lt;Attr1()&gt;   \nClass BClass  \n\nEnd Class    \n\nClass DClass  \n    Inherits BClass  \nEnd Class  \n</code></pre><p> In this case <code>Attr1</code> is not applied to <code>DClass</code> via inheritance.  </p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> The <code>AttributeUsage</code> attribute is a single-use attribute--it cannot be applied more than once to the same class. <code>AttributeUsage</code> is an alias for <a class=\"xref\" href=\"../../../../../api/system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a>.  </p>\n<p> For more information, see <a href=\"accessing-attributes-by-using-reflection\" data-linktype=\"relative-path\">Accessing Attributes by Using Reflection (Visual Basic)</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example demonstrates the effect of the <code>Inherited</code> and <code>AllowMultiple</code> arguments to the <code>AttributeUsage</code> attribute, and how the custom attributes applied to a class can be enumerated.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports System  \n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">&#39; Create some custom attributes:  \n&lt;AttributeUsage(System.AttributeTargets.Class, Inherited:=False)&gt;   \nClass A1  \n    Inherits System.Attribute  \nEnd Class  \n\n&lt;AttributeUsage(System.AttributeTargets.Class)&gt;   \nClass A2  \n    Inherits System.Attribute  \nEnd Class      \n\n&lt;AttributeUsage(System.AttributeTargets.Class, AllowMultiple:=True)&gt;   \nClass A3  \n    Inherits System.Attribute  \nEnd Class  \n\n&#39; Apply custom attributes to classes:  \n&lt;A1(), A2()&gt;   \nClass BaseClass  \n\nEnd Class  \n\n&lt;A3(), A3()&gt;   \nClass DerivedClass  \n    Inherits BaseClass  \nEnd Class  \n\nPublic Class TestAttributeUsage  \n    Sub Main()  \n        Dim b As New BaseClass  \n        Dim d As New DerivedClass  \n        &#39; Display custom attributes for each class.  \n        Console.WriteLine(&quot;Attributes on Base Class:&quot;)  \n        Dim attrs() As Object = b.GetType().GetCustomAttributes(True)  \n\n        For Each attr In attrs  \n            Console.WriteLine(attr)  \n        Next  \n\n        Console.WriteLine(&quot;Attributes on Derived Class:&quot;)  \n        attrs = d.GetType().GetCustomAttributes(True)  \n        For Each attr In attrs  \n            Console.WriteLine(attr)  \n        Next              \n    End Sub  \nEnd Class  \n</code></pre><h2 id=\"sample-output\">Sample Output</h2>\n<pre class=\"loading\"><code>Attributes on Base Class:  \nA1  \nA2  \nAttributes on Derived Class:  \nA3  \nA3  \nA2  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.attribute\" data-linktype=\"relative-path\">Attribute</a><br> <a class=\"xref\" href=\"../../../../../api/system.reflection\" data-linktype=\"relative-path\">System.Reflection</a><br> <a href=\"../../index\" data-linktype=\"relative-path\">Visual Basic Programming Guide</a><br> <a href=\"https://msdn.microsoft.com/library/5x6cd29c\" data-linktype=\"external\">Attributes</a><br> <a href=\"../reflection\" data-linktype=\"relative-path\">Reflection (Visual Basic)</a><br> <a href=\"../../../language-reference/attributes\" data-linktype=\"relative-path\">Attributes (Visual Basic)</a><br> <a href=\"creating-custom-attributes\" data-linktype=\"relative-path\">Creating Custom Attributes (Visual Basic)</a><br> <a href=\"accessing-attributes-by-using-reflection\" data-linktype=\"relative-path\">Accessing Attributes by Using Reflection (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"48757216-c21d-4051-86d5-8a3e03c39d2c\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/attributes/attributeusage.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/attributes/attributeusage.md\">\r\n<meta name=\"document_id\" content=\"274848b2-2976-6867-9047-71ef009de9b6\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"AttributeUsage (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"48757216-c21d-4051-86d5-8a3e03c39d2c","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/attributes/attributeusage.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/attributes/attributeusage.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/attributes/attributeusage.md","document_id":"274848b2-2976-6867-9047-71ef009de9b6","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/attributes/attributeusage","toc_asset_id":"articles/visual-basic/programming-guide/concepts/attributes/toc.json","toc_rel":"toc.json","_op_ogTitle":"AttributeUsage (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":471,"_op_rawTitle":"<h1 id=\"attributeusage-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/attributes/attributeusage.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">AttributeUsage (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/attributes/attributeusage","fileRelativePath":"articles/visual-basic/programming-guide/concepts/attributes/attributeusage.html"},"themesRelativePathToOutputRoot":"_themes/"}