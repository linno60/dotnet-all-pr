{"content":"<div><div class=\"content\">\n<p>With Visual Basic, you can write applications that perform multiple tasks at the same time. Tasks with the potential of holding up other tasks can execute on separate threads, a process known as <em>multithreading</em> or <em>free threading</em>.  </p>\n<p> Applications that use multithreading are more responsive to user input because the user interface stays active as processor-intensive tasks execute on separate threads. Multithreading is also useful when you create scalable applications, because you can add threads as the workload increases.  </p>\n<h2 id=\"creating-and-using-threads\">Creating and Using Threads</h2>\n<p> If you need more control over the behavior of your application&#39;s threads, you can manage the threads yourself. However, realize that writing correct multithreaded applications can be difficult: Your application may stop responding or experience transient errors caused by race conditions. For more information, see <a href=\"http://msdn.microsoft.com/library/4f7c7377-a782-4bd0-aaa3-9db8c12945ee\" data-linktype=\"external\">Thread-Safe Components</a>.  </p>\n<p> You create a new thread by declaring a variable of type <a class=\"xref\" href=\"../../../../../api/system.threading.thread\" data-linktype=\"relative-path\">Thread</a> and calling the constructor, providing the name of the procedure or method that you want to execute on the new thread. The following code provides an example.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Dim newThread As New System.Threading.Thread(AddressOf AMethod)  \n</code></pre><h3 id=\"starting-and-stopping-threads\">Starting and Stopping Threads</h3>\n<p> To start the execution of a new thread, use the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Start_\" data-linktype=\"relative-path\">Start</a> method, as shown in the following code.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">newThread.Start()  \n</code></pre><p> To stop the execution of a thread, use the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> method, as shown in the following code.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">newThread.Abort()  \n</code></pre><p> Besides starting and stopping threads, you can also pause threads by calling the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Sleep_\" data-linktype=\"relative-path\">Sleep</a> or <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Suspend_\" data-linktype=\"relative-path\">Suspend</a> method, resume a suspended thread by using the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Resume_\" data-linktype=\"relative-path\">Resume</a> method, and destroy a thread by using the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> method  </p>\n<h3 id=\"thread-methods\">Thread Methods</h3>\n<p> The following table shows some of the methods that you can use to control individual threads.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Start_\" data-linktype=\"relative-path\">Start</a></td>\n<td>Causes a thread to start to run.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Sleep_\" data-linktype=\"relative-path\">Sleep</a></td>\n<td>Pauses a thread for a specified time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Suspend_\" data-linktype=\"relative-path\">Suspend</a></td>\n<td>Pauses a thread when it reaches a safe point.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a></td>\n<td>Stops a thread when it reaches a safe point.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Resume_\" data-linktype=\"relative-path\">Resume</a></td>\n<td>Restarts a suspended thread</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Join_\" data-linktype=\"relative-path\">Join</a></td>\n<td>Causes the current thread to wait for another thread to finish. If used with a time-out value, this method returns <code>True</code> if the thread finishes in the allocated time.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"safe-points\">Safe Points</h3>\n<p> Most of these methods are self-explanatory, but the concept of <em>safe points</em> may be new to you. Safe points are locations in code where it is safe for the common language runtime to perform automatic <em>garbage collection</em>, the process of releasing unused variables and reclaiming memory. When you call the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> or <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Suspend_\" data-linktype=\"relative-path\">Suspend</a> method of a thread, the common language runtime analyzes the code and determines the location of an appropriate location for the thread to stop running.  </p>\n<h3 id=\"thread-properties\">Thread Properties</h3>\n<p> Threads also contain several useful properties, as shown in the following table:  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_IsAlive_\" data-linktype=\"relative-path\">IsAlive</a></td>\n<td>Contains the value <code>True</code> if a thread is active.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_IsBackground_\" data-linktype=\"relative-path\">IsBackground</a></td>\n<td>Gets or sets a Boolean that indicates if a thread is or should be a background thread. Background threads are like foreground threads, but a background thread does not prevent a process from stopping. Once all foreground threads that belong to a process have stopped, the common language runtime ends the process by calling the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> method on background threads that are still alive.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Name_\" data-linktype=\"relative-path\">Name</a></td>\n<td>Gets or sets the name of a thread. Most frequently used to discover individual threads when you debug.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Priority_\" data-linktype=\"relative-path\">Priority</a></td>\n<td>Gets or sets a value that is used by the operating system to prioritize thread scheduling.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_ThreadState_\" data-linktype=\"relative-path\">ThreadState</a></td>\n<td>Contains a value that describes a thread&#39;s state or states.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"thread-priorities\">Thread Priorities</h2>\n<p> Every thread has a priority property that determines how big or small a slice of processor time it has to execute. The operating system allocates longer time slices to high-priority threads and shorter time slices to low-priority threads. New threads are created with the value of <code>Normal</code>, but you can change the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_Priority_\" data-linktype=\"relative-path\">Priority</a> property to any value in the <a class=\"xref\" href=\"../../../../../api/system.threading.threadpriority\" data-linktype=\"relative-path\">ThreadPriority</a> enumeration.  </p>\n<p> See <a class=\"xref\" href=\"../../../../../api/system.threading.threadpriority\" data-linktype=\"relative-path\">ThreadPriority</a> for a detailed description of the various thread priorities.  </p>\n<h2 id=\"foreground-and-background-threads\">Foreground and Background Threads</h2>\n<p> A <em>foreground thread</em> runs indefinitely, whereas a <em>background thread</em> stops as soon as the last foreground thread has stopped. You can use the <a class=\"xref\" href=\"../../../../../api/system.threading.thread#System_Threading_Thread_IsBackground_\" data-linktype=\"relative-path\">IsBackground</a> property to determine or change the background status of a thread.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.threading.thread\" data-linktype=\"relative-path\">Thread</a><br> <a href=\"thread-synchronization\" data-linktype=\"relative-path\">Thread Synchronization (Visual Basic)</a><br> <a href=\"parameters-and-return-values-for-multithreaded-procedures\" data-linktype=\"relative-path\">Parameters and Return Values for Multithreaded Procedures (Visual Basic)</a><br> <a href=\"index\" data-linktype=\"relative-path\">Threading (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"02b0444b-2e68-4f2c-bc28-28c046004017\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/threading/multithreaded-applications.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/threading/multithreaded-applications.md\">\r\n<meta name=\"document_id\" content=\"f8420ab7-1b80-5a9a-167d-4d0652841f0b\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Multithreaded Applications (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"02b0444b-2e68-4f2c-bc28-28c046004017","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/threading/multithreaded-applications.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/threading/multithreaded-applications.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/threading/multithreaded-applications.md","document_id":"f8420ab7-1b80-5a9a-167d-4d0652841f0b","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/threading/multithreaded-applications","toc_asset_id":"articles/visual-basic/programming-guide/concepts/threading/toc.json","toc_rel":"toc.json","_op_ogTitle":"Multithreaded Applications (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":665,"_op_rawTitle":"<h1 id=\"multithreaded-applications-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/threading/multithreaded-applications.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">Multithreaded Applications (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/threading/multithreaded-applications","fileRelativePath":"articles/visual-basic/programming-guide/concepts/threading/multithreaded-applications.html"},"themesRelativePathToOutputRoot":"_themes/"}