{"content":"<div><div class=\"content\">\n<p>This example shows how to find sentences in a text file that contain matches for each of a specified set of words. Although the array of search terms is hard-coded in this example, it could also be populated dynamically at runtime. In this example, the query returns the sentences that contain the words &quot;Historically,&quot; &quot;data,&quot; and &quot;integrated.&quot;  </p>\n<h2 id=\"example\">Example</h2>\n<pre class=\"loading\"><code class=\"lang-vb\">Class FindSentences  \n\n    Shared Sub Main()  \n        Dim text As String = &quot;Historically, the world of data and the world of objects &quot; &amp;   \n        &quot;have not been well integrated. Programmers work in C# or Visual Basic &quot; &amp;   \n        &quot;and also in SQL or XQuery. On the one side are concepts such as classes, &quot; &amp;   \n        &quot;objects, fields, inheritance, and .NET Framework APIs. On the other side &quot; &amp;   \n        &quot;are tables, columns, rows, nodes, and separate languages for dealing with &quot; &amp;   \n        &quot;them. Data types often require translation between the two worlds; there are &quot; &amp;   \n        &quot;different standard functions. Because the object world has no notion of query, a &quot; &amp;   \n        &quot;query can only be represented as a string without compile-time type checking or &quot; &amp;   \n        &quot;IntelliSense support in the IDE. Transferring data from SQL tables or XML trees to &quot; &amp;   \n        &quot;objects in memory is often tedious and error-prone.&quot;  \n\n        &#39; Split the text block into an array of sentences.  \n        Dim sentences As String() = text.Split(New Char() {&quot;.&quot;, &quot;?&quot;, &quot;!&quot;})  \n\n        &#39; Define the search terms. This list could also be dynamically populated at runtime  \n        Dim wordsToMatch As String() = {&quot;Historically&quot;, &quot;data&quot;, &quot;integrated&quot;}  \n\n        &#39; Find sentences that contain all the terms in the wordsToMatch array  \n        &#39; Note that the number of terms to match is not specified at compile time  \n        Dim sentenceQuery = From sentence In sentences   \n                            Let w = sentence.Split(New Char() {&quot; &quot;, &quot;,&quot;, &quot;.&quot;, &quot;;&quot;, &quot;:&quot;},   \n                                                   StringSplitOptions.RemoveEmptyEntries)   \n                            Where w.Distinct().Intersect(wordsToMatch).Count = wordsToMatch.Count()   \n                            Select sentence  \n\n        &#39; Execute the query  \n        For Each str As String In sentenceQuery  \n            Console.WriteLine(str)  \n        Next  \n\n        &#39; Keep console window open in debug mode.  \n        Console.WriteLine(&quot;Press any key to exit.&quot;)  \n        Console.ReadKey()  \n    End Sub  \n\nEnd Class  \n&#39; Output:  \n&#39; Historically, the world of data and the world of objects have not been well integrated  \n</code></pre><p> The query works by first splitting the text into sentences, and then splitting the sentences into an array of strings that hold each word. For each of these arrays, the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb299412(v=vs.110).aspx\" data-linktype=\"external\">Distinct</a> method removes all duplicate words, and then the query performs an <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb302032(v=vs.110).aspx\" data-linktype=\"external\">Intersect</a> operation on the word array and the <code>wordsToMatch</code> array. If the count of the intersection is the same as the count of the <code>wordsToMatch</code> array, all words were found in the words and the original sentence is returned.  </p>\n<p> In the call to <a class=\"xref\" href=\"../../../../../api/system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a>, the punctuation marks are used as separators in order to remove them from the string. If you did not do this, for example you could have a string &quot;Historically,&quot; that would not match &quot;Historically&quot; in the <code>wordsToMatch</code> array. You may have to use additional separators, depending on the types of punctuation found in the source text.  </p>\n<h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <code>Imports</code> statement for the System.Linq namespace.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-and-strings\" data-linktype=\"relative-path\">LINQ and Strings (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"a5ae8ced-61fe-4c10-bb8a-95630e50f603\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md\">\r\n<meta name=\"document_id\" content=\"1faefd85-4cf4-8ecc-a891-82f22dbbd808\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"a5ae8ced-61fe-4c10-bb8a-95630e50f603","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md","document_id":"1faefd85-4cf4-8ecc-a891-82f22dbbd808","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":522,"_op_rawTitle":"<h1 id=\"how-to-query-for-sentences-that-contain-a-specified-set-of-words-linq-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.html"},"themesRelativePathToOutputRoot":"_themes/"}