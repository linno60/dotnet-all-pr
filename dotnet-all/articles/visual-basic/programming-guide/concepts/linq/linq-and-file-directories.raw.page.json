{"content":"<div><div class=\"content\">\n<p>Many file system operations are essentially queries and are therefore well-suited to the LINQ approach.  </p>\n<p> Note that the queries in this section are non-destructive. They are not used to change the contents of the original files or folders. This follows the rule that queries should not cause any side-effects. In general, any code (including queries that perform create / update / delete operators) that modifies source data should be kept separate from the code that just queries the data.  </p>\n<p> This section contains the following topics:  </p>\n<p> <a href=\"how-to-query-for-files-with-a-specified-attribute-or-name\" data-linktype=\"relative-path\">How to: Query for Files with a Specified Attribute or Name (Visual Basic)</a><br> Shows how to search for files by examining one or more properties of its <a class=\"xref\" href=\"../../../../../api/system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> object.  </p>\n<p> <a href=\"how-to-group-files-by-extension-linq\" data-linktype=\"relative-path\">How to: Group Files by Extension (LINQ) (Visual Basic)</a><br> Shows how to return groups of <a class=\"xref\" href=\"../../../../../api/system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> object based on their file name extension.  </p>\n<p> <a href=\"how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders\" data-linktype=\"relative-path\">How to: Query for the Total Number of Bytes in a Set of Folders (LINQ) (Visual Basic)</a><br> Shows how to return the total number of bytes in all the files in a specified directory tree.  </p>\n<p> <a href=\"how-to-compare-the-contents-of-two-folders-linq\" data-linktype=\"relative-path\">How to: Compare the Contents of Two Folders (LINQ) (Visual Basic)</a>s<br> Shows how to return all the files that are present in two specified folders, and also all the files that are present in one folder but not the other.  </p>\n<p> <a href=\"how-to-query-for-the-largest-file-or-files-in-a-directory-tree\" data-linktype=\"relative-path\">How to: Query for the Largest File or Files in a Directory Tree (LINQ) (Visual Basic)</a><br> Shows how to return the largest or smallest file, or a specified number of files, in a directory tree.  </p>\n<p> <a href=\"how-to-query-for-duplicate-files-in-a-directory-tree-linq\" data-linktype=\"relative-path\">How to: Query for Duplicate Files in a Directory Tree (LINQ) (Visual Basic)</a><br> Shows how to group for all file names that occur in more than one location in a specified directory tree. Also shows how to perform more complex comparisons based on a custom comparer.  </p>\n<p> <a href=\"how-to-query-the-contents-of-files-in-a-folder-linq\" data-linktype=\"relative-path\">How to: Query the Contents of Files in a Folder (LINQ) (Visual Basic)</a><br> Shows how to iterate through folders in a tree, open each file, and query the file&#39;s contents.  </p>\n<h2 id=\"comments\">Comments</h2>\n<p> There is some complexity involved in creating a data source that accurately represents the contents of the file system and handles exceptions gracefully. The examples in this section create a snapshot collection of <a class=\"xref\" href=\"../../../../../api/system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> objects that represents all the files under a specified root folder and all its subfolders. The actual state of each <a class=\"xref\" href=\"../../../../../api/system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> may change in the time between when you begin and end executing a query. For example, you can create a list of <a class=\"xref\" href=\"../../../../../api/system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> objects to use as a data source. If you try to access the <code>Length</code> property in a query, the <a class=\"xref\" href=\"../../../../../api/system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> object will try to access the file system to update the value of <code>Length</code>. If the file no longer exists, you will get a <a class=\"xref\" href=\"../../../../../api/system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a> in your query, even though you are not querying the file system directly. Some queries in this section use a separate method that consumes these particular exceptions in certain cases. Another option is to keep your data source updated dynamically by using the <a class=\"xref\" href=\"../../../../../api/system.io.filesystemwatcher\" data-linktype=\"relative-path\">FileSystemWatcher</a>.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-to-objects\" data-linktype=\"relative-path\">LINQ to Objects (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"159fd5c3-3926-4071-ae78-d8e423287eb7\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md\">\r\n<meta name=\"document_id\" content=\"522ae0d1-fdaa-527e-e737-682a4fc3257e\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"LINQ and File Directories (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"159fd5c3-3926-4071-ae78-d8e423287eb7","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md","document_id":"522ae0d1-fdaa-527e-e737-682a4fc3257e","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/linq-and-file-directories","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"LINQ and File Directories (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":491,"_op_rawTitle":"<h1 id=\"linq-and-file-directories-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">LINQ and File Directories (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/linq-and-file-directories","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/linq-and-file-directories.html"},"themesRelativePathToOutputRoot":"_themes/"}