{"content":"<div><div class=\"content\">\n<p>XPath expressions can find nodes in a particular namespace. XPath expressions use namespace prefixes for specifying namespaces. To parse an XPath expression that contains namespace prefixes, you must pass an object to the XPath methods that implements <a class=\"xref\" href=\"../../../../../api/system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a>. This example uses <a class=\"xref\" href=\"../../../../../api/system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a>.  </p>\n<p> The XPath expression is:  </p>\n<p> <code>./aw:*</code>  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example reads an XML tree that contains two namespaces. It uses an <a class=\"xref\" href=\"../../../../../api/system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> to read the XML document. It then gets an <a class=\"xref\" href=\"../../../../../api/system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> from the <a class=\"xref\" href=\"../../../../../api/system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>, and an <a class=\"xref\" href=\"../../../../../api/system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> from the <a class=\"xref\" href=\"../../../../../api/system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a>. It uses the <a class=\"xref\" href=\"../../../../../api/system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> when selecting elements.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Dim reader As XmlReader = _  \n        XmlReader.Create(&quot;ConsolidatedPurchaseOrders.xml&quot;)  \nDim root As XElement = XElement.Load(reader)  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(&quot;aw&quot;, &quot;http://www.adventure-works.com&quot;)  \n\nDim list1 As IEnumerable(Of XElement) = _  \n        root.XPathSelectElements(&quot;./aw:*&quot;, namespaceManager)  \nDim list2 As IEnumerable(Of XElement) = _  \n    From el In root.Elements() _  \n    Where el.Name.Namespace = &quot;http://www.adventure-works.com&quot; _  \n    Select el  \n\nIf list1.Count() = list2.Count() And _  \n        list1.Intersect(list2).Count() = list1.Count() Then  \n    Console.WriteLine(&quot;Results are identical&quot;)  \nElse  \n    Console.WriteLine(&quot;Results differ&quot;)  \nEnd If  \nFor Each el As XElement In list2  \n    Console.WriteLine(el)  \nNext  \n</code></pre><p> This example produces the following output:  </p>\n<pre class=\"loading\"><code>Results are identical  \n&lt;aw:PurchaseOrder PONumber=&quot;11223&quot; Date=&quot;2000-01-15&quot; xmlns:aw=&quot;http://www.adventure-works.com&quot;&gt;  \n    &lt;aw:ShippingAddress&gt;  \n      &lt;aw:Name&gt;Chris Preston&lt;/aw:Name&gt;  \n      &lt;aw:Street&gt;123 Main St.&lt;/aw:Street&gt;  \n      &lt;aw:City&gt;Seattle&lt;/aw:City&gt;  \n      &lt;aw:State&gt;WA&lt;/aw:State&gt;  \n      &lt;aw:Zip&gt;98113&lt;/aw:Zip&gt;  \n      &lt;aw:Country&gt;USA&lt;/aw:Country&gt;  \n    &lt;/aw:ShippingAddress&gt;  \n    &lt;aw:BillingAddress&gt;  \n      &lt;aw:Name&gt;Chris Preston&lt;/aw:Name&gt;  \n      &lt;aw:Street&gt;123 Main St.&lt;/aw:Street&gt;  \n      &lt;aw:City&gt;Seattle&lt;/aw:City&gt;  \n      &lt;aw:State&gt;WA&lt;/aw:State&gt;  \n      &lt;aw:Zip&gt;98113&lt;/aw:Zip&gt;  \n      &lt;aw:Country&gt;USA&lt;/aw:Country&gt;  \n    &lt;/aw:BillingAddress&gt;  \n    &lt;aw:DeliveryInstructions&gt;Ship only complete order.&lt;/aw:DeliveryInstructions&gt;  \n    &lt;aw:Item PartNum=&quot;LIT-01&quot;&gt;  \n      &lt;aw:ProductID&gt;Litware Networking Card&lt;/aw:ProductID&gt;  \n      &lt;aw:Qty&gt;1&lt;/aw:Qty&gt;  \n      &lt;aw:Price&gt;20.99&lt;/aw:Price&gt;  \n    &lt;/aw:Item&gt;  \n    &lt;aw:Item PartNum=&quot;LIT-25&quot;&gt;  \n      &lt;aw:ProductID&gt;Litware 17in LCD Monitor&lt;/aw:ProductID&gt;  \n      &lt;aw:Qty&gt;1&lt;/aw:Qty&gt;  \n      &lt;aw:Price&gt;199.99&lt;/aw:Price&gt;  \n    &lt;/aw:Item&gt;  \n  &lt;/aw:PurchaseOrder&gt;  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-to-xml-for-xpath-users\" data-linktype=\"relative-path\">LINQ to XML for XPath Users (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"c7cb3b77-3424-4b54-9efa-4dc715948e41\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace.md\">\r\n<meta name=\"document_id\" content=\"01e9fb2f-6bb2-e86e-6c66-24bbf9dd56e5\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"c7cb3b77-3424-4b54-9efa-4dc715948e41","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace.md","document_id":"01e9fb2f-6bb2-e86e-6c66-24bbf9dd56e5","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":231,"_op_rawTitle":"<h1 id=\"how-to-find-elements-in-a-namespace-xpath-linq-to-xml-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace.html"},"themesRelativePathToOutputRoot":"_themes/"}