{"content":"<div><div class=\"content\">\n<p>Set operations in LINQ refer to query operations that produce a result set that is based on the presence or absence of equivalent elements within the same or separate collections (or sets).  </p>\n<p> The standard query operator methods that perform set operations are listed in the following section.  </p>\n<h2 id=\"methods\">Methods</h2>\n<table>\n<thead>\n<tr>\n<th>Method Name</th>\n<th>Description</th>\n<th>Visual Basic Query Expression Syntax</th>\n<th>More Information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Distinct</td>\n<td>Removes duplicate values from a collection.</td>\n<td><code>Distinct</code></td>\n<td><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb299412(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Distinct</a><br><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb155021(v=vs.110).aspx\" data-linktype=\"external\">Queryable.Distinct</a></td>\n</tr>\n<tr>\n<td>Except</td>\n<td>Returns the set difference, which means the elements of one collection that do not appear in a second collection.</td>\n<td>Not applicable.</td>\n<td><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb356791(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Except</a><br><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb341721(v=vs.110).aspx\" data-linktype=\"external\">Queryable.Except</a></td>\n</tr>\n<tr>\n<td>Intersect</td>\n<td>Returns the set intersection, which means elements that appear in each of two collections.</td>\n<td>Not applicable.</td>\n<td><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb302032(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Intersect</a><br><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb343084(v=vs.110).aspx\" data-linktype=\"external\">Queryable.Intersect</a></td>\n</tr>\n<tr>\n<td>Union</td>\n<td>Returns the set union, which means unique elements that appear in either of two collections.</td>\n<td>Not applicable.</td>\n<td><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb358229(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Union</a><br><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb356537(v=vs.110).aspx\" data-linktype=\"external\">Queryable.Union</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"comparison-of-set-operations\">Comparison of Set Operations</h2>\n<h3 id=\"distinct\">Distinct</h3>\n<p> The following illustration depicts the behavior of the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb299412(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Distinct</a> method on a sequence of characters. The returned sequence contains the unique elements from the input sequence.  </p>\n<p> <img src=\"../../../../csharp/programming-guide/concepts/linq/media/distinct.png\" alt=\"Graphic showing the behavior of Distinct&#40;&#41;.\" title=\"Distinct\" data-linktype=\"relative-path\">  </p>\n<h3 id=\"except\">Except</h3>\n<p> The following illustration depicts the behavior of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb356791(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Except</a>. The returned sequence contains only the elements from the first input sequence that are not in the second input sequence.  </p>\n<p> <img src=\"../../../../csharp/programming-guide/concepts/linq/media/except.png\" alt=\"Graphic showing the action of Except&#40;&#41;.\" title=\"Except\" data-linktype=\"relative-path\">  </p>\n<h3 id=\"intersect\">Intersect</h3>\n<p> The following illustration depicts the behavior of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb302032(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Intersect</a>. The returned sequence contains the elements that are common to both of the input sequences.  </p>\n<p> <img src=\"../../../../csharp/programming-guide/concepts/linq/media/intersect.png\" alt=\"Graphic showing the intersection of two sequences.\" title=\"Intersect\" data-linktype=\"relative-path\">  </p>\n<h3 id=\"union\">Union</h3>\n<p> The following illustration depicts a union operation on two sequences of characters. The returned sequence contains the unique elements from both input sequences.  </p>\n<p> <img src=\"../../../../csharp/programming-guide/concepts/linq/media/union.png\" alt=\"Graphic showing the union of two sequences.\" title=\"Union\" data-linktype=\"relative-path\">  </p>\n<h2 id=\"query-expression-syntax-example\">Query Expression Syntax Example</h2>\n<p> The following example uses the <code>Distinct</code> clause in a LINQ query to return the unique numbers from a list of integers.  </p>\n<pre><code class=\"lang-vb\" name=\"CsLINQSetOps#1\">\nDim classGrades = New System.Collections.Generic.List(Of Integer) From {63, 68, 71, 75, 68, 92, 75}\n\nDim distinctQuery = From grade In classGrades \n                    Select grade Distinct\n\nDim sb As New System.Text.StringBuilder(&quot;The distinct grades are: &quot;)\nFor Each number As Integer In distinctQuery\n    sb.Append(number &amp; &quot; &quot;)\nNext\n\n&#39; Display the results.\nMsgBox(sb.ToString())\n\n&#39; This code produces the following output:\n\n&#39; The distinct grades are: 63 68 71 75 92 \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.linq\" data-linktype=\"relative-path\">System.Linq</a><br> <a href=\"standard-query-operators-overview\" data-linktype=\"relative-path\">Standard Query Operators Overview (Visual Basic)</a><br> <a href=\"../../../language-reference/queries/distinct-clause\" data-linktype=\"relative-path\">Distinct Clause</a><br> <a href=\"how-to-combine-and-compare-string-collections-linq\" data-linktype=\"relative-path\">How to: Combine and Compare String Collections (LINQ) (Visual Basic)</a><br> <a href=\"how-to-find-the-set-difference-between-two-lists-linq\" data-linktype=\"relative-path\">How to: Find the Set Difference Between Two Lists (LINQ) (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"2b06e822-e030-438f-9db7-ee402bd3a706\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/set-operations.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/set-operations.md\">\r\n<meta name=\"document_id\" content=\"2003878a-391c-16db-a18f-1403b7cefca1\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Set Operations (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"2b06e822-e030-438f-9db7-ee402bd3a706","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/set-operations.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/set-operations.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/set-operations.md","document_id":"2003878a-391c-16db-a18f-1403b7cefca1","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/set-operations","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"Set Operations (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":352,"_op_rawTitle":"<h1 id=\"set-operations-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/set-operations.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">Set Operations (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/set-operations","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/set-operations.html"},"themesRelativePathToOutputRoot":"_themes/"}