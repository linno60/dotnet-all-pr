{"content":"<div><div class=\"content\">\n<p>Sometimes you want to find all descendants with a particular name. You could write code to iterate through all of the descendants, but it is easier to use the <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xcontainer#System_Xml_Linq_XContainer_Descendants_\" data-linktype=\"relative-path\">Descendants</a> axis.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example shows how to find descendants based on the element name.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Dim root As XElement = _  \n    &lt;root&gt;  \n        &lt;para&gt;  \n            &lt;r&gt;  \n                &lt;t&gt;Some text &lt;/t&gt;  \n            &lt;/r&gt;  \n            &lt;n&gt;  \n                &lt;r&gt;  \n                    &lt;t&gt;that is broken up into &lt;/t&gt;  \n                &lt;/r&gt;  \n            &lt;/n&gt;  \n            &lt;n&gt;  \n                &lt;r&gt;  \n                    &lt;t&gt;multiple segments.&lt;/t&gt;  \n                &lt;/r&gt;  \n            &lt;/n&gt;  \n        &lt;/para&gt;  \n    &lt;/root&gt;  \n\nDim textSegs As IEnumerable(Of String) = _  \n    From seg In root...&lt;t&gt; _  \n    Select seg.Value  \n\nDim str As String = textSegs.Aggregate( _  \n    New StringBuilder, _  \n    Function(sb, i) sb.Append(i), _  \n    Function(sb) sb.ToString)  \n\nConsole.WriteLine(str)  \n</code></pre><p> This code produces the following output:  </p>\n<pre class=\"loading\"><code>Some text that is broken up into multiple segments.  \n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> The following example shows the same query for XML that is in a namespace. For more information, see <a href=\"working-with-xml-namespaces\" data-linktype=\"relative-path\">Working with XML Namespaces (Visual Basic)</a>.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports &lt;xmlns=&#39;http://www.adatum.com&#39;&gt;  \n\nModule Module1  \n    Sub Main()  \n        Dim root As XElement = _  \n            &lt;root&gt;  \n                &lt;para&gt;  \n                    &lt;r&gt;  \n                        &lt;t&gt;Some text &lt;/t&gt;  \n                    &lt;/r&gt;  \n                    &lt;n&gt;  \n                        &lt;r&gt;  \n                            &lt;t&gt;that is broken up into &lt;/t&gt;  \n                        &lt;/r&gt;  \n                    &lt;/n&gt;  \n                    &lt;n&gt;  \n                        &lt;r&gt;  \n                            &lt;t&gt;multiple segments.&lt;/t&gt;  \n                        &lt;/r&gt;  \n                    &lt;/n&gt;  \n                &lt;/para&gt;  \n            &lt;/root&gt;  \n\n        Dim textSegs As IEnumerable(Of String) = _  \n            From seg In root...&lt;t&gt; _  \n            Select seg.Value  \n\n        Dim str As String = textSegs.Aggregate( _  \n            New StringBuilder, _  \n            Function(sb, i) sb.Append(i), _  \n            Function(sb) sb.ToString)  \n\n        Console.WriteLine(str)  \n    End Sub  \nEnd Module  \n</code></pre><p> This code produces the following output:  </p>\n<pre class=\"loading\"><code>Some text that is broken up into multiple segments.  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xcontainer#System_Xml_Linq_XContainer_Descendants_\" data-linktype=\"relative-path\">Descendants</a><br> <a href=\"basic-queries-linq-to-xml\" data-linktype=\"relative-path\">Basic Queries (LINQ to XML) (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"78915518-0d25-4051-ab55-929779989510\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md\">\r\n<meta name=\"document_id\" content=\"e104536d-e513-03a9-2b63-51c30f0dea86\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Find Descendants with a Specific Element Name (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"78915518-0d25-4051-ab55-929779989510","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md","document_id":"e104536d-e513-03a9-2b63-51c30f0dea86","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Find Descendants with a Specific Element Name (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":242,"_op_rawTitle":"<h1 id=\"how-to-find-descendants-with-a-specific-element-name-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">How to: Find Descendants with a Specific Element Name (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.html"},"themesRelativePathToOutputRoot":"_themes/"}