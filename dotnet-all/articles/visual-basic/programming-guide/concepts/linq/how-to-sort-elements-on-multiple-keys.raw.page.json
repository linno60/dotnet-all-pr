{"content":"<div><div class=\"content\">\n<p>This topic shows how to sort on multiple keys.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In this example, the results are ordered first by the shipping postal code, then by the order date.  </p>\n<p> This example uses the following XML document: <a href=\"sample-xml-file-customers-and-orders-linq-to-xml\" data-linktype=\"relative-path\">Sample XML File: Customers and Orders (LINQ to XML)</a>.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Dim co As XElement = XElement.Load(&quot;CustomersOrders.xml&quot;)  \nDim result = _  \n    From c In co.&lt;Orders&gt;.&lt;Order&gt; _  \n    Order By c.&lt;ShipInfo&gt;.&lt;ShipPostalCode&gt;.Value, Convert.ToDateTime(c.&lt;OrderDate&gt;.Value) _  \n    Select New With { _  \n        .CustomerID = c.&lt;CustomerID&gt;.Value, _  \n        .EmployeeID = c.&lt;EmployeeID&gt;.Value, _  \n        .ShipPostalCode = c.&lt;ShipInfo&gt;.&lt;ShipPostalCode&gt;.Value, _  \n        .OrderDate = Convert.ToDateTime(c.&lt;OrderDate&gt;.Value) _  \n    }  \nFor Each r In result  \n    Console.WriteLine(&quot;CustomerID:{0} EmployeeID:{1} ShipPostalCode:{2} OrderDate:{3:d}&quot;, _  \n                r.CustomerID, r.EmployeeID, r.ShipPostalCode, r.OrderDate)  \nNext  \n</code></pre><p> This code produces the following output:  </p>\n<pre class=\"loading\"><code>CustomerID:LETSS EmployeeID:1 ShipPostalCode:94117 OrderDate:6/25/1997  \nCustomerID:LETSS EmployeeID:8 ShipPostalCode:94117 OrderDate:10/27/1997  \nCustomerID:LETSS EmployeeID:6 ShipPostalCode:94117 OrderDate:11/10/1997  \nCustomerID:LETSS EmployeeID:4 ShipPostalCode:94117 OrderDate:2/12/1998  \nCustomerID:GREAL EmployeeID:6 ShipPostalCode:97403 OrderDate:5/6/1997  \nCustomerID:GREAL EmployeeID:8 ShipPostalCode:97403 OrderDate:7/4/1997  \nCustomerID:GREAL EmployeeID:1 ShipPostalCode:97403 OrderDate:7/31/1997  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:7/31/1997  \nCustomerID:GREAL EmployeeID:6 ShipPostalCode:97403 OrderDate:9/4/1997  \nCustomerID:GREAL EmployeeID:3 ShipPostalCode:97403 OrderDate:9/25/1997  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:1/6/1998  \nCustomerID:GREAL EmployeeID:3 ShipPostalCode:97403 OrderDate:3/9/1998  \nCustomerID:GREAL EmployeeID:3 ShipPostalCode:97403 OrderDate:4/7/1998  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:4/22/1998  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:4/30/1998  \nCustomerID:HUNGC EmployeeID:3 ShipPostalCode:97827 OrderDate:12/6/1996  \nCustomerID:HUNGC EmployeeID:1 ShipPostalCode:97827 OrderDate:12/25/1996  \nCustomerID:HUNGC EmployeeID:3 ShipPostalCode:97827 OrderDate:1/15/1997  \nCustomerID:HUNGC EmployeeID:4 ShipPostalCode:97827 OrderDate:7/16/1997  \nCustomerID:HUNGC EmployeeID:8 ShipPostalCode:97827 OrderDate:9/8/1997  \nCustomerID:LAZYK EmployeeID:1 ShipPostalCode:99362 OrderDate:3/21/1997  \nCustomerID:LAZYK EmployeeID:8 ShipPostalCode:99362 OrderDate:5/22/1997  \n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> The following example shows the same query for XML that is in a namespace. For more information, see <a href=\"working-with-xml-namespaces\" data-linktype=\"relative-path\">Working with XML Namespaces (Visual Basic)</a>.  </p>\n<p> This example uses the following XML document: <a href=\"sample-xml-file-customers-and-orders-in-a-namespace\" data-linktype=\"relative-path\">Sample XML File: Customers and Orders in a Namespace</a>.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports &lt;xmlns=&#39;http://www.adventure-works.com&#39;&gt;  \n\nModule Module1  \n    Sub Main()  \n        Dim co As XElement = XElement.Load(&quot;CustomersOrdersInNamespace.xml&quot;)  \n        Dim result = _  \n            From c In co.&lt;Orders&gt;.&lt;Order&gt; _  \n            Order By c.&lt;ShipInfo&gt;.&lt;ShipPostalCode&gt;.Value, Convert.ToDateTime(c.&lt;OrderDate&gt;.Value) _  \n            Select New With { _  \n                .CustomerID = c.&lt;CustomerID&gt;.Value, _  \n                .EmployeeID = c.&lt;EmployeeID&gt;.Value, _  \n                .ShipPostalCode = c.&lt;ShipInfo&gt;.&lt;ShipPostalCode&gt;.Value, _  \n                .OrderDate = Convert.ToDateTime(c.&lt;OrderDate&gt;.Value) _  \n            }  \n        For Each r In result  \n            Console.WriteLine(&quot;CustomerID:{0} EmployeeID:{1} ShipPostalCode:{2} OrderDate:{3:d}&quot;, _  \n                        r.CustomerID, r.EmployeeID, r.ShipPostalCode, r.OrderDate)  \n        Next  \n    End Sub  \nEnd Module  \n</code></pre><p> This code produces the following output:  </p>\n<pre class=\"loading\"><code>CustomerID:LETSS EmployeeID:1 ShipPostalCode:94117 OrderDate:6/25/1997  \nCustomerID:LETSS EmployeeID:8 ShipPostalCode:94117 OrderDate:10/27/1997  \nCustomerID:LETSS EmployeeID:6 ShipPostalCode:94117 OrderDate:11/10/1997  \nCustomerID:LETSS EmployeeID:4 ShipPostalCode:94117 OrderDate:2/12/1998  \nCustomerID:GREAL EmployeeID:6 ShipPostalCode:97403 OrderDate:5/6/1997  \nCustomerID:GREAL EmployeeID:8 ShipPostalCode:97403 OrderDate:7/4/1997  \nCustomerID:GREAL EmployeeID:1 ShipPostalCode:97403 OrderDate:7/31/1997  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:7/31/1997  \nCustomerID:GREAL EmployeeID:6 ShipPostalCode:97403 OrderDate:9/4/1997  \nCustomerID:GREAL EmployeeID:3 ShipPostalCode:97403 OrderDate:9/25/1997  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:1/6/1998  \nCustomerID:GREAL EmployeeID:3 ShipPostalCode:97403 OrderDate:3/9/1998  \nCustomerID:GREAL EmployeeID:3 ShipPostalCode:97403 OrderDate:4/7/1998  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:4/22/1998  \nCustomerID:GREAL EmployeeID:4 ShipPostalCode:97403 OrderDate:4/30/1998  \nCustomerID:HUNGC EmployeeID:3 ShipPostalCode:97827 OrderDate:12/6/1996  \nCustomerID:HUNGC EmployeeID:1 ShipPostalCode:97827 OrderDate:12/25/1996  \nCustomerID:HUNGC EmployeeID:3 ShipPostalCode:97827 OrderDate:1/15/1997  \nCustomerID:HUNGC EmployeeID:4 ShipPostalCode:97827 OrderDate:7/16/1997  \nCustomerID:HUNGC EmployeeID:8 ShipPostalCode:97827 OrderDate:9/8/1997  \nCustomerID:LAZYK EmployeeID:1 ShipPostalCode:99362 OrderDate:3/21/1997  \nCustomerID:LAZYK EmployeeID:8 ShipPostalCode:99362 OrderDate:5/22/1997  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"basic-queries-linq-to-xml\" data-linktype=\"relative-path\">Basic Queries (LINQ to XML) (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"0c4c1462-3047-4766-b9e2-7e0e9cc7f421\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md\">\r\n<meta name=\"document_id\" content=\"1c3eb444-dfa1-6565-b813-1deb3fc617d1\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Sort Elements on Multiple Keys (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"0c4c1462-3047-4766-b9e2-7e0e9cc7f421","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md","document_id":"1c3eb444-dfa1-6565-b813-1deb3fc617d1","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Sort Elements on Multiple Keys (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":406,"_op_rawTitle":"<h1 id=\"how-to-sort-elements-on-multiple-keys-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">How to: Sort Elements on Multiple Keys (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.html"},"themesRelativePathToOutputRoot":"_themes/"}