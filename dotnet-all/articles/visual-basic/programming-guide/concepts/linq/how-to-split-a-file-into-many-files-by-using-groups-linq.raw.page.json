{"content":"<div><div class=\"content\">\n<p>This example shows one way to merge the contents of two files and then create a set of new files that organize the data in a new way.  </p>\n<h3 id=\"to-create-the-data-files\">To create the data files</h3>\n<ol>\n<li><p>Copy these names into a text file that is named names1.txt and save it in your project folder:  </p>\n<pre class=\"loading\"><code>Bankov, Peter  \nHolm, Michael  \nGarcia, Hugo  \nPotra, Cristina  \nNoriega, Fabricio  \nAw, Kam Foo  \nBeebe, Ann  \nToyoshima, Tim  \nGuy, Wey Yuan  \nGarcia, Debra  \n</code></pre></li>\n<li><p>Copy these names into a text file that is named names2.txt and save it in your project folder: Note that the two files have some names in common.  </p>\n<pre class=\"loading\"><code>Liu, Jinghao  \nBankov, Peter  \nHolm, Michael  \nGarcia, Hugo  \nBeebe, Ann  \nGilchrist, Beth  \nMyrcha, Jacek  \nGiakoumakis, Leo  \nMcLin, Nkenge  \nEl Yassir, Mehdi  \n</code></pre></li>\n</ol>\n<h2 id=\"example\">Example</h2>\n<pre class=\"loading\"><code class=\"lang-vb\">Class SplitWithGroups  \n\n    Shared Sub Main()  \n\n        Dim fileA As String() = System.IO.File.ReadAllLines(&quot;../../../names1.txt&quot;)  \n        Dim fileB As String() = System.IO.File.ReadAllLines(&quot;../../../names2.txt&quot;)  \n\n        &#39; Concatenate and remove duplicate names based on  \n        Dim mergeQuery As IEnumerable(Of String) = fileA.Union(fileB)  \n\n        &#39; Group the names by the first letter in the last name  \n        Dim groupQuery = From name In mergeQuery   \n                     Let n = name.Split(New Char() {&quot;,&quot;})   \n                     Order By n(0)   \n                     Group By groupKey = n(0)(0)   \n                     Into groupName = Group  \n\n        &#39; Create a new file for each group that was created  \n        &#39; Note that nested foreach loops are required to access  \n        &#39; individual items with each group.  \n        For Each gGroup In groupQuery  \n            Dim fileName As String = &quot;..&#39;..&#39;..&#39;testFile_&quot; &amp; gGroup.groupKey &amp; &quot;.txt&quot;  \n            Dim sw As New System.IO.StreamWriter(fileName)  \n            Console.WriteLine(gGroup.groupKey)  \n            For Each item In gGroup.groupName  \n                Console.WriteLine(&quot;   &quot; &amp; item.name)  \n                sw.WriteLine(item.name)  \n            Next  \n            sw.Close()  \n        Next  \n\n        &#39; Keep console window open in debug mode.  \n        Console.WriteLine(&quot;Files have been written. Press any key to exit.&quot;)  \n        Console.ReadKey()  \n\n    End Sub  \nEnd Class  \n&#39; Console Output:  \n&#39; A  \n&#39;    Aw, Kam Foo  \n&#39; B  \n&#39;    Bankov, Peter  \n&#39;    Beebe, Ann  \n&#39; E  \n&#39;    El Yassir, Mehdi  \n&#39; G  \n&#39;    Garcia, Hugo  \n&#39;    Garcia, Debra  \n&#39;    Giakoumakis, Leo  \n&#39;    Gilchrist, Beth  \n&#39;    Guy, Wey Yuan  \n&#39; H  \n&#39;    Holm, Michael  \n&#39; L  \n&#39;    Liu, Jinghao  \n&#39; M  \n&#39;    McLin, Nkenge  \n&#39;    Myrcha, Jacek  \n&#39; N  \n&#39;    Noriega, Fabricio  \n&#39; P  \n&#39;    Potra, Cristina  \n&#39; T  \n&#39;    Toyoshima, Tim  \n</code></pre><p> The program writes a separate file for each group in the same folder as the data files.  </p>\n<h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <code>Imports</code> statement for the System.Linq namespace.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-and-strings\" data-linktype=\"relative-path\">LINQ and Strings (Visual Basic)</a><br> <a href=\"linq-and-file-directories\" data-linktype=\"relative-path\">LINQ and File Directories (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"5e8b2a2b-0b1d-4933-8a2b-03e91dfaf77f\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md\">\r\n<meta name=\"document_id\" content=\"072437eb-1b81-b0fd-ff69-e4204769e222\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"5e8b2a2b-0b1d-4933-8a2b-03e91dfaf77f","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md","document_id":"072437eb-1b81-b0fd-ff69-e4204769e222","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":407,"_op_rawTitle":"<h1 id=\"how-to-split-a-file-into-many-files-by-using-groups-linq-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.html"},"themesRelativePathToOutputRoot":"_themes/"}