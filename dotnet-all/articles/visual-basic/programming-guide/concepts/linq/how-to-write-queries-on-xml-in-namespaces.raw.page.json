{"content":"<div><div class=\"content\">\n<p>To write a query on XML that is in a namespace, you must use <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.xml.linq.xname(v=vs.110).aspx\" data-linktype=\"external\">XName</a> objects that have the correct namespace.  </p>\n<p> In Visual Basic, the most common approach is to define a global namespace, and then use XML literals and XML properties that use the global namespace. You can define a global default namespace, in which case elements in the XML literals will be in the namespace by default. Alternatively, you can define a global namespace with a prefix, and then use the prefix as required in the XML literals, and in XML properties. As with other forms of XML, attributes are always in no namespace by default.  </p>\n<p> The first set of examples in this topic shows how to create an XML tree in a default namespace. The second set shows how to create an XML tree in a namespace with a prefix.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example creates an XML tree that is in a default namespace. It then retrieves a collection of elements.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports &lt;xmlns=&quot;http://www.adventure-works.com&quot;&gt;  \n\nModule Module1  \n    Sub Main()  \n        Dim root As XElement = _  \n            &lt;Root&gt;  \n                &lt;Child&gt;1&lt;/Child&gt;  \n                &lt;Child&gt;2&lt;/Child&gt;  \n                &lt;Child&gt;3&lt;/Child&gt;  \n                &lt;AnotherChild&gt;4&lt;/AnotherChild&gt;  \n                &lt;AnotherChild&gt;5&lt;/AnotherChild&gt;  \n                &lt;AnotherChild&gt;6&lt;/AnotherChild&gt;  \n            &lt;/Root&gt;  \n        Dim c1 As IEnumerable(Of XElement) = _  \n            From el In root.&lt;Child&gt; _  \n            Select el  \n        For Each el As XElement In c1  \n            Console.WriteLine(el.Value)  \n        Next  \n    End Sub  \nEnd Module  \n</code></pre><p> This example produces the following output:  </p>\n<pre class=\"loading\"><code>1  \n2  \n3  \n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> In Visual Basic, however, writing queries on an XML tree that uses a namespace with a prefix is quite different from querying an XML tree in a default namespace. Typically you use the <code>Imports</code> statement to import the namespace with a prefix. You then use the prefix in the element and attribute names when you construct the XML tree. You also use the prefix when querying an XML tree using XML properties.  </p>\n<p> The following example creates an XML tree that is in a namespace with a prefix. It then retrieves a collection of elements.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports &lt;xmlns:aw=&quot;http://www.adventure-works.com&quot;&gt;  \n\nModule Module1  \n    Sub Main()  \n        Dim root As XElement = _  \n            &lt;aw:Root&gt;  \n                &lt;aw:Child&gt;1&lt;/aw:Child&gt;  \n                &lt;aw:Child&gt;2&lt;/aw:Child&gt;  \n                &lt;aw:Child&gt;3&lt;/aw:Child&gt;  \n                &lt;aw:AnotherChild&gt;4&lt;/aw:AnotherChild&gt;  \n                &lt;aw:AnotherChild&gt;5&lt;/aw:AnotherChild&gt;  \n                &lt;aw:AnotherChild&gt;6&lt;/aw:AnotherChild&gt;  \n            &lt;/aw:Root&gt;  \n        Dim c1 As IEnumerable(Of XElement) = _  \n            From el In root.&lt;aw:Child&gt; _  \n            Select el  \n        For Each el As XElement In c1  \n            Console.WriteLine(CInt(el))  \n        Next  \n    End Sub  \nEnd Module  \n</code></pre><p> This example produces the following output:  </p>\n<pre class=\"loading\"><code>1  \n2  \n3  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"working-with-xml-namespaces\" data-linktype=\"relative-path\">Working with XML Namespaces (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"7d4131b5-3288-414f-b77c-b2edc2a1f465\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md\">\r\n<meta name=\"document_id\" content=\"4fdd2cc0-5b23-cdfe-a4ff-450248a4c122\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Write Queries on XML in Namespaces (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"7d4131b5-3288-414f-b77c-b2edc2a1f465","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md","document_id":"4fdd2cc0-5b23-cdfe-a4ff-450248a4c122","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Write Queries on XML in Namespaces (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":378,"_op_rawTitle":"<h1 id=\"how-to-write-queries-on-xml-in-namespaces-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Write Queries on XML in Namespaces (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.html"},"themesRelativePathToOutputRoot":"_themes/"}