{"content":"<div><div class=\"content\">\n<p>Sometimes files that have the same name may be located in more than one folder. For example, under the Visual Studio installation folder, several folders have a readme.htm file. This example shows how to query for such duplicate file names under a specified root folder. The second example shows how to query for files whose size and creation times also match.  </p>\n<h2 id=\"example\">Example</h2>\n<pre class=\"loading\"><code class=\"lang-vb\">Module QueryDuplicateFileNames  \n\n    Public Sub Main()  \n\n        Dim path As String = &quot;C:\\Program Files\\Microsoft Visual Studio 9.0\\Common7&quot;  \n        QueryDuplicates1(path)  \n        &#39; Uncomment to run this query instead  \n        &#39; QueryDuplicates2(path)  \n\n    End Sub  \n    Sub QueryDuplicates1(ByVal root As String)  \n        Dim dir As New System.IO.DirectoryInfo(root)  \n        Dim duplicates = From aFile In dir.GetFiles(&quot;*.*&quot;, System.IO.SearchOption.AllDirectories) _  \n                                 Order By aFile.Name _  \n                                 Group aFile By aFile.Name Into newGroup = Group _  \n                                 Where newGroup.Count() &gt;= 2 _  \n                                 Select newGroup  \n\n        &#39; Page the display so that the results can be read.  \n        Dim trimLength = root.Length  \n        PageOutput(duplicates, trimLength)  \n\n    End Sub  \n    Sub QueryDuplicates2(ByVal root As String)  \n\n        &#39; This time a composite key is used. This sub finds all files  \n        &#39; that have been copied into multiple subfolders.  \n        Dim dir As New System.IO.DirectoryInfo(root)  \n\n        Dim duplicates = From aFile In Dir.GetFiles(&quot;*.*&quot;, System.IO.SearchOption.AllDirectories) _  \n                                 Order By aFile.Name _  \n                                 Group aFile By aFile.Name, aFile.CreationTime, aFile.Length Into newGroup = Group _  \n                                 Where newGroup.Count() &gt;= 2 _  \n                                 Select newGroup  \n\n        &#39; Page the display so that the results can be read.  \n        Dim trimLength = root.Length  \n        PageOutput(duplicates, trimLength)  \n\n    End Sub  \n    &#39; Pages console diplay for large query results. No more than one group per page.  \n    &#39; This sub specifically works with group queries of FileInfo objects  \n    &#39; but can be modified for any type.  \n    Sub PageOutput(ByVal groupQuery, ByVal charsToSkip)  \n\n        &#39; &quot;3&quot; = 1 line for extension key + 1 for &quot;Press any key&quot; + 1 for input cursor.  \n        Dim numLines As Integer = Console.WindowHeight - 3  \n        &#39; Flag to indicate whether there are more results to diplay  \n        Dim goAgain As Boolean = True  \n\n        For Each fg As IEnumerable(Of System.IO.FileInfo) In groupQuery  \n            &#39; Start a new extension at the top of a page.  \n            Dim currentLine As Integer = 0  \n\n            Do While (currentLine &lt; fg.Count())  \n                Console.Clear()  \n\n                &#39; Get the next page of results  \n                &#39; No more than one filename per page  \n                Dim resultPage = From file In fg _  \n                                Skip currentLine Take numLines  \n\n                &#39; Execute the query. Trim the paths in the output.  \n                For Each line In resultPage  \n                    Console.WriteLine(vbTab &amp; line.FullName.Substring(charsToSkip))  \n                Next  \n\n                &#39; Advance the current position  \n                currentLine = numLines + currentLine  \n\n                &#39; Give the user a chance to break out of the loop  \n                Console.WriteLine(&quot;Press any key for next page or the &#39;End&#39; key to exit.&quot;)  \n                Dim key As ConsoleKey = Console.ReadKey().Key  \n                If key = ConsoleKey.End Then  \n                    goAgain = False  \n                    Exit For  \n                End If  \n            Loop  \n        Next  \n    End Sub  \nEnd Module  \n</code></pre><p> The first query uses a simple key to determine a match; this finds files that have the same name but whose contents might be different. The second query uses a compound key to match against three properties of the <a class=\"xref\" href=\"../../../../../api/system.io.fileinfo\" data-linktype=\"relative-path\">FileInfo</a> object. This query is much more likely to find files that have the same name and similar or identical content.  </p>\n<h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <code>Imports</code> statement for the System.Linq namespace.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-to-objects\" data-linktype=\"relative-path\">LINQ to Objects (Visual Basic)</a><br> <a href=\"linq-and-file-directories\" data-linktype=\"relative-path\">LINQ and File Directories (Visual Basic)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"387d7c97-95dd-4a50-9761-7e9cf8ae9e6a\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.md\">\r\n<meta name=\"document_id\" content=\"e1088fbc-fbb2-9c57-db76-ef7944d9e2f9\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Query for Duplicate Files in a Directory Tree (LINQ) (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"387d7c97-95dd-4a50-9761-7e9cf8ae9e6a","caps.latest.revision":3,"ms.topic":"article","dev_langs":["vb"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.md","document_id":"e1088fbc-fbb2-9c57-db76-ef7944d9e2f9","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq","toc_asset_id":"articles/visual-basic/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Query for Duplicate Files in a Directory Tree (LINQ) (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":546,"_op_rawTitle":"<h1 id=\"how-to-query-for-duplicate-files-in-a-directory-tree-linq-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Query for Duplicate Files in a Directory Tree (LINQ) (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq","fileRelativePath":"articles/visual-basic/programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.html"},"themesRelativePathToOutputRoot":"_themes/"}