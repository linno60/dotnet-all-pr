{"content":"<div><div class=\"content\">\n<p>A <em>default property</em> is a class or structure property that your code can access without specifying it. When calling code names a class or structure but not a property, and the context allows access to a property, Visual Basic resolves the access to that class or structure&#39;s default property if one exists.  </p>\n<p> A class or structure can have at most one default property. However, you can overload a default property and have more than one version of it.  </p>\n<p> For more information, see <a href=\"../../../language-reference/modifiers/default\" data-linktype=\"relative-path\">Default</a>.  </p>\n<h3 id=\"to-declare-a-default-property\">To declare a default property</h3>\n<ol>\n<li><p>Declare the property in the normal way. Do not specify the <code>Shared</code> or <code>Private</code> keyword.  </p>\n</li>\n<li><p>Include the <code>Default</code> keyword in the property declaration.  </p>\n</li>\n<li><p>Specify at least one parameter for the property. You cannot define a default property that does not take at least one argument.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#17\">Default Property myProperty(ByVal index As Integer) As String\n</code></pre></li>\n</ol>\n<h3 id=\"to-call-a-default-property\">To call a default property</h3>\n<ol>\n<li><p>Declare a variable of the containing class or structure type.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#16\">Dim x As New class1(3)\n</code></pre></li>\n<li><p>Use the variable name alone in an expression where you would normally include the property name.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#21\">MsgBox(x)\n</code></pre></li>\n<li><p>Follow the variable name with an argument list in parentheses. A default property must take at least one argument.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#20\">MsgBox(x(1))\n</code></pre></li>\n<li><p>To retrieve the default property value, use the variable name, with an argument list, in an expression or following the equal (<code>=</code>) sign in an assignment statement.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#15\">MsgBox(x(1) &amp; x(2) &amp; x(3))\n</code></pre></li>\n<li><p>To set the default property value, use the variable name, with an argument list, on the left side of an assignment statement.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#14\">x(1) = &quot;Hello&quot;\nx(2) = &quot; &quot;\nx(3) = &quot;World&quot;\n</code></pre></li>\n<li><p>You can always specify the default property name together with the variable name, just as you would do to access any other property.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#19\">x.myProperty(1) = &quot;Hello&quot;\nx.myProperty(2) = &quot; &quot;\nx.myProperty(3) = &quot;World&quot;\n</code></pre></li>\n</ol>\n<h2 id=\"example\">Example</h2>\n<p> The following example declares a default property on a class.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#12\">Public Class class1\n    Private myStrings() As String\n    Sub New(ByVal size As Integer)\n        ReDim myStrings(size)\n    End Sub\n    Default Property myProperty(ByVal index As Integer) As String\n        Get\n            &#39; The Get property procedure is called when the value\n            &#39; of the property is retrieved.\n            Return myStrings(index)\n        End Get\n        Set(ByVal Value As String)\n            &#39; The Set property procedure is called when the value\n            &#39; of the property is modified.\n            &#39; The value to be assigned is passed in the argument \n            &#39; to Set.\n            myStrings(index) = Value\n        End Set\n    End Property\nEnd Class\n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> The following example demonstrates how to call the default property <code>myProperty</code> on class <code>class1</code>. The three assignment statements store values in <code>myProperty</code>, and the <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.interaction#Microsoft_VisualBasic_Interaction_MsgBox_\" data-linktype=\"relative-path\">MsgBox</a> call reads the values.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#13\">Sub Test()\n    Dim x As New class1(3)\n    x(1) = &quot;Hello&quot;\n    x(2) = &quot; &quot;\n    x(3) = &quot;World&quot;\n    MsgBox(x(1) &amp; x(2) &amp; x(3))\nEnd Sub\n</code></pre><p> The most common use of a default property is the <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.collection#Microsoft_VisualBasic_Collection_Item_\" data-linktype=\"relative-path\">Item</a> property on various collection classes.  </p>\n<h2 id=\"robust-programming\">Robust Programming</h2>\n<p> Default properties can result in a small reduction in source code-characters, but they can make your code more difficult to read. If the calling code is not familiar with your class or structure, when it makes a reference to the class or structure name it cannot be certain whether that reference accesses the class or structure itself, or a default property. This can lead to compiler errors or subtle run-time logic errors.  </p>\n<p> You can somewhat reduce the chance of default property errors by always using the <a href=\"../../../language-reference/statements/option-strict-statement\" data-linktype=\"relative-path\">Option Strict Statement</a> to set compiler type checking to <code>On</code>.  </p>\n<p> If you are planning to use a predefined class or structure in your code, you must determine whether it has a default property, and if so, what its name is.  </p>\n<p> Because of these disadvantages, you should consider not defining default properties. For code readability, you should also consider always referring to all properties explicitly, even default properties.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"property-procedures\" data-linktype=\"relative-path\">Property Procedures</a><br> <a href=\"procedure-parameters-and-arguments\" data-linktype=\"relative-path\">Procedure Parameters and Arguments</a><br> <a href=\"../../../language-reference/statements/property-statement\" data-linktype=\"relative-path\">Property Statement</a><br> <a href=\"../../../language-reference/modifiers/default\" data-linktype=\"relative-path\">Default</a><br> <a href=\"differences-between-properties-and-variables\" data-linktype=\"relative-path\">Differences Between Properties and Variables in Visual Basic</a><br> <a href=\"how-to-create-a-property\" data-linktype=\"relative-path\">How to: Create a Property</a><br> <a href=\"how-to-declare-a-property-with-mixed-access-levels\" data-linktype=\"relative-path\">How to: Declare a Property with Mixed Access Levels</a><br> <a href=\"how-to-call-a-property-procedure\" data-linktype=\"relative-path\">How to: Call a Property Procedure</a><br> <a href=\"how-to-put-a-value-in-a-property\" data-linktype=\"relative-path\">How to: Put a Value in a Property</a><br> <a href=\"how-to-get-a-value-from-a-property\" data-linktype=\"relative-path\">How to: Get a Value from a Property</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"68b4026e-09ef-4613-808e-f6287494ff63\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"23\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md\">\r\n<meta name=\"document_id\" content=\"0db2dc71-4bc7-0b49-d1c8-0a101e2986b4\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"How to: Declare and Call a Default Property in Visual Basic | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"68b4026e-09ef-4613-808e-f6287494ff63","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":23,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["defaults, properties","properties [Visual Basic], default","procedures, defining","default properties, in Visual Basic","Visual Basic code, procedures","Visual Basic code, properties","default properties"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md","document_id":"0db2dc71-4bc7-0b49-d1c8-0a101e2986b4","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property","toc_asset_id":"articles/visual-basic/programming-guide/language-features/procedures/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Declare and Call a Default Property in Visual Basic","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":672,"_op_rawTitle":"<h1 id=\"how-to-declare-and-call-a-default-property-in-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md\" sourcestartlinenumber=\"42\" sourceendlinenumber=\"42\">How to: Declare and Call a Default Property in Visual Basic</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property","fileRelativePath":"articles/visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.html"},"themesRelativePathToOutputRoot":"_themes/"}