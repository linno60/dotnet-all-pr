{"content":"<div><div class=\"content\">\n<p>Variables and properties both represent values that you can access. However, there are differences in storage and implementation.  </p>\n<h2 id=\"variables\">Variables</h2>\n<p> A <em>variable</em> corresponds directly to a memory location. You define a variable with a single declaration statement. A variable can be a <em>local variable</em>, defined inside a procedure and available only within that procedure, or it can be a <em>member variable</em>, defined in a module, class, or structure but not inside any procedure. A member variable is also called a <em>field</em>.  </p>\n<h2 id=\"properties\">Properties</h2>\n<p> A <em>property</em> is a data element defined on a module, class, or structure. You define a property with a code block between the <code>Property</code> and <code>End Property</code> statements. The code block contains a <code>Get</code> procedure, a <code>Set</code> procedure, or both. These procedures are called <em>property procedures</em> or <em>property accessors</em>. In addition to retrieving or storing the property&#39;s value, they can also perform custom actions, such as updating an access counter.  </p>\n<h2 id=\"differences\">Differences</h2>\n<p> The following table shows some important differences between variables and properties.  </p>\n<table>\n<thead>\n<tr>\n<th>Point of difference</th>\n<th>Variable</th>\n<th>Property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Declaration</td>\n<td>Single declaration statement</td>\n<td>Series of statements in a code block</td>\n</tr>\n<tr>\n<td>Implementation</td>\n<td>Single storage location</td>\n<td>Executable code (property procedures)</td>\n</tr>\n<tr>\n<td>Storage</td>\n<td>Directly associated with variable&#39;s value</td>\n<td>Typically has internal storage not available outside the property&#39;s containing class or module<br><br> Property&#39;s value might or might not exist as a stored element <sup>1</sup></td>\n</tr>\n<tr>\n<td>Executable code</td>\n<td>None</td>\n<td>Must have at least one procedure</td>\n</tr>\n<tr>\n<td>Read and write access</td>\n<td>Read/write or read-only</td>\n<td>Read/write, read-only, or write-only</td>\n</tr>\n<tr>\n<td>Custom actions (in addition to accepting or returning value)</td>\n<td>Not possible</td>\n<td>Can be performed as part of setting or retrieving property value</td>\n</tr>\n</tbody>\n</table>\n<p> <sup>1</sup> Unlike a variable, the value of a property might not correspond directly to a single item of storage. The storage might be split into pieces for convenience or security, or the value might be stored in an encrypted form. In these cases the <code>Get</code> procedure would assemble the pieces or decrypt the stored value, and the <code>Set</code> procedure would encrypt the new value or split it into the constituent storage. A property value might be ephemeral, like time of day, in which case the <code>Get</code> procedure would calculate it on the fly each time you access the property.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"property-procedures\" data-linktype=\"relative-path\">Property Procedures</a><br> <a href=\"procedure-parameters-and-arguments\" data-linktype=\"relative-path\">Procedure Parameters and Arguments</a><br> <a href=\"../../../language-reference/statements/property-statement\" data-linktype=\"relative-path\">Property Statement</a><br> <a href=\"../../../language-reference/statements/dim-statement\" data-linktype=\"relative-path\">Dim Statement</a><br> <a href=\"how-to-create-a-property\" data-linktype=\"relative-path\">How to: Create a Property</a><br> <a href=\"how-to-declare-a-property-with-mixed-access-levels\" data-linktype=\"relative-path\">How to: Declare a Property with Mixed Access Levels</a><br> <a href=\"how-to-call-a-property-procedure\" data-linktype=\"relative-path\">How to: Call a Property Procedure</a><br> <a href=\"how-to-declare-and-call-a-default-property\" data-linktype=\"relative-path\">How to: Declare and Call a Default Property in Visual Basic</a><br> <a href=\"how-to-put-a-value-in-a-property\" data-linktype=\"relative-path\">How to: Put a Value in a Property</a><br> <a href=\"how-to-get-a-value-from-a-property\" data-linktype=\"relative-path\">How to: Get a Value from a Property</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"7a03a8be-5381-431f-bd7c-16e887e4e07b\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"14\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables.md\">\r\n<meta name=\"document_id\" content=\"10013927-82b9-d523-e72f-2f4825adcf47\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Differences Between Properties and Variables in Visual Basic | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"7a03a8be-5381-431f-bd7c-16e887e4e07b","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":14,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["property values","variables [Visual Basic]","Visual Basic code, procedures","values, properties","variables [Visual Basic], definition","Visual Basic code, variables","Visual Basic code, properties","properties [Visual Basic], values","properties [Visual Basic], defined","variables [Visual Basic], and properties","properties [Visual Basic], and variables"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables.md","document_id":"10013927-82b9-d523-e72f-2f4825adcf47","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables","toc_asset_id":"articles/visual-basic/programming-guide/language-features/procedures/toc.json","toc_rel":"toc.json","_op_ogTitle":"Differences Between Properties and Variables in Visual Basic","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":418,"_op_rawTitle":"<h1 id=\"differences-between-properties-and-variables-in-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables.md\" sourcestartlinenumber=\"46\" sourceendlinenumber=\"46\">Differences Between Properties and Variables in Visual Basic</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables","fileRelativePath":"articles/visual-basic/programming-guide/language-features/procedures/differences-between-properties-and-variables.html"},"themesRelativePathToOutputRoot":"_themes/"}