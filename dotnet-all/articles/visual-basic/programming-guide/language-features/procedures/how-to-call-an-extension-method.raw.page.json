{"content":"<div><div class=\"content\">\n<p>Extension methods enable you to add methods to an existing class. After an extension method is declared and brought into scope, you can call it like an instance method of the type that it extends. For more information about how to write an extension method, see <a href=\"how-to-write-an-extension-method\" data-linktype=\"relative-path\">How to: Write an Extension Method</a>.  </p>\n<p> The following instructions refer to extension method <code>PrintAndPunctuate</code>, which will display the string instance that invokes it, followed by whatever value is sent in for the second parameter, <code>punc</code>.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports System.Runtime.CompilerServices  \n\nModule StringExtensions  \n    &lt;Extension()&gt;   \n    Public Sub PrintAndPunctuate(ByVal aString As String,   \n                                 ByVal punc As String)  \n        Console.WriteLine(aString &amp; punc)  \n    End Sub  \n\nEnd Module  \n</code></pre><p> The method must be in scope when it is called.  </p>\n<h3 id=\"to-call-an-extension-method\">To call an extension method</h3>\n<ol>\n<li><p>Declare a variable that has the data type of the first parameter of the extension method. For <code>PrintAndPunctuate</code>, you need a <a class=\"xref\" href=\"../../../../../api/system.string\" data-linktype=\"relative-path\">String</a> variable:  </p>\n<pre class=\"loading\"><code>Dim example = &quot;Ready&quot;  \n</code></pre></li>\n<li><p>That variable will invoke the extension method, and its value is bound to the first parameter, <code>aString</code>. The following calling statement will display <code>Ready?</code>.  </p>\n<pre class=\"loading\"><code>example.PrintAndPunctuate(&quot;?&quot;)  \n</code></pre><p> Notice that the call to this extension method looks just like a call to any one of the <a class=\"xref\" href=\"../../../../../api/system.string\" data-linktype=\"relative-path\">String</a> instance methods that require one parameter:  </p>\n<pre class=\"loading\"><code>example.EndsWith(&quot;dy&quot;)  \nexample.IndexOf(&quot;R&quot;)  \n</code></pre></li>\n<li><p>Declare another string variable and call the method again to see that it works with any string.  </p>\n<pre class=\"loading\"><code>Dim example2 = &quot; or not&quot;  \nexample2.PrintAndPunctuate(&quot;!!!&quot;)  \n</code></pre><p> The result this time is: <code>or not!!!</code>.  </p>\n</li>\n</ol>\n<h2 id=\"example\">Example</h2>\n<p> The following code is a complete example of the creation and use of a simple extension method.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Imports System.Runtime.CompilerServices  \nImports ConsoleApplication1.StringExtensions  \n\nModule Module1  \n\n    Sub Main()  \n\n        Dim example = &quot;Hello&quot;  \n        example.PrintAndPunctuate(&quot;.&quot;)  \n        example.PrintAndPunctuate(&quot;!!!!&quot;)  \n\n        Dim example2 = &quot;Goodbye&quot;  \n        example2.PrintAndPunctuate(&quot;?&quot;)  \n    End Sub  \n\n    &lt;Extension()&gt;   \n    Public Sub PrintAndPunctuate(ByVal aString As String,   \n                                 ByVal punc As String)  \n        Console.WriteLine(aString &amp; punc)  \n    End Sub  \nEnd Module  \n\n&#39; Output:  \n&#39; Hello.  \n&#39; Hello!!!!  \n&#39; Goodbye?  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"how-to-write-an-extension-method\" data-linktype=\"relative-path\">How to: Write an Extension Method</a><br> <a href=\"extension-methods\" data-linktype=\"relative-path\">Extension Methods</a><br> <a href=\"../declared-elements/scope\" data-linktype=\"relative-path\">Scope in Visual Basic</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"df07750f-40f4-4c07-a79e-1113a27cfbea\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"11\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method.md\">\r\n<meta name=\"document_id\" content=\"b83dc06d-b4a6-0a87-f87a-4412ec655044\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"How to: Call an Extension Method (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"df07750f-40f4-4c07-a79e-1113a27cfbea","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":11,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["calling extension methods","extension methods [Visual Basic]"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method.md","document_id":"b83dc06d-b4a6-0a87-f87a-4412ec655044","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method","toc_asset_id":"articles/visual-basic/programming-guide/language-features/procedures/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Call an Extension Method (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":305,"_op_rawTitle":"<h1 id=\"how-to-call-an-extension-method-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">How to: Call an Extension Method (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method","fileRelativePath":"articles/visual-basic/programming-guide/language-features/procedures/how-to-call-an-extension-method.html"},"themesRelativePathToOutputRoot":"_themes/"}