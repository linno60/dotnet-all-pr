{"content":"<div><div class=\"content\">\n<p>If you have defined a class or structure, you can define the behavior of a standard operator (such as <code>*</code>, <code>&lt;&gt;</code>, or <code>And</code>) when one or both of the operands is of the type of your class or structure.  </p>\n<p> Define the standard operator as an operator procedure within the class or structure. All operator procedures must be <code>Public</code> <code>Shared</code>.  </p>\n<p> Defining an operator on a class or structure is also called <em>overloading</em> the operator.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example defines the <code>+</code> operator for a structure called <code>height</code>. The structure uses heights measured in feet and inches. One <em>inch</em> is 2.54 centimeters, and one <em>foot</em> is 12 inches. To ensure normalized values (inches &lt; 12.0), the constructor performs <em>modulo</em> 12 arithmetic. The <code>+</code> operator uses the constructor to generate normalized values.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#25\">Public Shadows Structure height\n    &#39; Need Shadows because System.Windows.Forms.Form also defines property Height.\n    Private feet As Integer\n    Private inches As Double\n    Public Sub New(ByVal f As Integer, ByVal i As Double)\n        Me.feet = f + (CInt(i) \\ 12)\n        Me.inches = i Mod 12.0\n    End Sub\n    Public Overloads Function ToString() As String\n        Return Me.feet &amp; &quot;&#39; &quot; &amp; Me.inches &amp; &quot;&quot;&quot;&quot;\n    End Function\n    Public Shared Operator +(ByVal h1 As height, \n                             ByVal h2 As height) As height\n        Return New height(h1.feet + h2.feet, h1.inches + h2.inches)\n    End Operator\nEnd Structure\n</code></pre><p> You can test the structure <code>height</code> with the following code.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbcnProcedures#26\">Public Sub consumeHeight()\n    Dim p1 As New height(3, 10)\n    Dim p2 As New height(4, 8)\n    Dim p3 As height = p1 + p2\n    Dim s As String = p1.ToString() &amp; &quot; + &quot; &amp; p2.ToString() &amp;\n          &quot; = &quot; &amp; p3.ToString() &amp; &quot; (= 8&#39; 6&quot;&quot; ?)&quot;\n    Dim p4 As New height(2, 14)\n    s &amp;= vbCrLf &amp; &quot;2&#39; 14&quot;&quot; = &quot; &amp; p4.ToString() &amp; &quot; (= 3&#39; 2&quot;&quot; ?)&quot;\n    Dim p5 As New height(4, 24)\n    s &amp;= vbCrLf &amp; &quot;4&#39; 24&quot;&quot; = &quot; &amp; p5.ToString() &amp; &quot; (= 6&#39; 0&quot;&quot; ?)&quot;\n    MsgBox(s)\nEnd Sub\n</code></pre><p> For more information and examples, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=101703\" data-linktype=\"external\">Operator Overloading in Visual Basic 2005</a>.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"operator-procedures\" data-linktype=\"relative-path\">Operator Procedures</a><br> <a href=\"how-to-define-a-conversion-operator\" data-linktype=\"relative-path\">How to: Define a Conversion Operator</a><br> <a href=\"how-to-call-an-operator-procedure\" data-linktype=\"relative-path\">How to: Call an Operator Procedure</a><br> <a href=\"how-to-use-a-class-that-defines-operators\" data-linktype=\"relative-path\">How to: Use a Class that Defines Operators</a><br> <a href=\"../../../language-reference/statements/operator-statement\" data-linktype=\"relative-path\">Operator Statement</a><br> <a href=\"../../../language-reference/statements/structure-statement\" data-linktype=\"relative-path\">Structure Statement</a><br> <a href=\"../data-types/how-to-declare-a-structure\" data-linktype=\"relative-path\">How to: Declare a Structure</a><br> <a href=\"../../../language-reference/operators/mod-operator\" data-linktype=\"relative-path\">Mod Operator</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"d4b0e253-092a-4e6e-9fe2-01f562140a29\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"15\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md\">\r\n<meta name=\"document_id\" content=\"35867ca9-214f-5727-e6d6-c6f66f0bde74\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Define an Operator (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"d4b0e253-092a-4e6e-9fe2-01f562140a29","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":15,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["procedures, defining","Visual Basic code, procedures","operators [Visual Basic], defining","procedures, operator","Visual Basic code, operators","syntax, Operator procedures","operators [Visual Basic], overloading","operator procedures, about operator procedures","return values, Operator procedures","operator overloading"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md","document_id":"35867ca9-214f-5727-e6d6-c6f66f0bde74","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator","toc_asset_id":"articles/visual-basic/programming-guide/language-features/procedures/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Define an Operator (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":367,"_op_rawTitle":"<h1 id=\"how-to-define-an-operator-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md\" sourcestartlinenumber=\"45\" sourceendlinenumber=\"45\">How to: Define an Operator (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator","fileRelativePath":"articles/visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.html"},"themesRelativePathToOutputRoot":"_themes/"}