{"content":"<div><div class=\"content\">\n<p>This method checks for some strong-password characteristics and updates a string parameter with information about which checks the password fails.  </p>\n<p> Passwords can be used in a secure system to authorize a user. However, the passwords must be difficult for unauthorized users to guess. Attackers can use a <em>dictionary attack</em> program, which iterates through all of the words in a dictionary (or multiple dictionaries in different languages) and tests whether any of the words work as a user&#39;s password. Weak passwords such as &quot;Yankees&quot; or &quot;Mustang&quot; can be guessed quickly. Stronger passwords, such as &quot;?You&#39;L1N3vaFiNdMeyeP@sSWerd!&quot;, are much less likely to be guessed. A password-protected system should ensure that users choose strong passwords.  </p>\n<p> A strong password is complex (containing a mixture of uppercase, lowercase, numeric, and special characters) and is not a word. This example demonstrates how to verify complexity.  </p>\n<h2 id=\"example\">Example</h2>\n<h3 id=\"code\">Code</h3>\n<pre><code class=\"lang-vb\" name=\"VbVbcnRegEx#1\">    &#39;&#39;&#39; &lt;summary&gt;Determines if a password is sufficiently complex.&lt;/summary&gt;\n    &#39;&#39;&#39; &lt;param name=&quot;pwd&quot;&gt;Password to validate&lt;/param&gt;\n    &#39;&#39;&#39; &lt;param name=&quot;minLength&quot;&gt;Minimum number of password characters.&lt;/param&gt;\n    &#39;&#39;&#39; &lt;param name=&quot;numUpper&quot;&gt;Minimum number of uppercase characters.&lt;/param&gt;\n    &#39;&#39;&#39; &lt;param name=&quot;numLower&quot;&gt;Minimum number of lowercase characters.&lt;/param&gt;\n    &#39;&#39;&#39; &lt;param name=&quot;numNumbers&quot;&gt;Minimum number of numeric characters.&lt;/param&gt;\n    &#39;&#39;&#39; &lt;param name=&quot;numSpecial&quot;&gt;Minimum number of special characters.&lt;/param&gt;\n    &#39;&#39;&#39; &lt;returns&gt;True if the password is sufficiently complex.&lt;/returns&gt;\n    Function ValidatePassword(ByVal pwd As String, \n        Optional ByVal minLength As Integer = 8, \n        Optional ByVal numUpper As Integer = 2, \n        Optional ByVal numLower As Integer = 2, \n        Optional ByVal numNumbers As Integer = 2, \n        Optional ByVal numSpecial As Integer = 2) As Boolean\n\n        &#39; Replace [A-Z] with \\p{Lu}, to allow for Unicode uppercase letters.\n        Dim upper As New System.Text.RegularExpressions.Regex(&quot;[A-Z]&quot;)\n        Dim lower As New System.Text.RegularExpressions.Regex(&quot;[a-z]&quot;)\n        Dim number As New System.Text.RegularExpressions.Regex(&quot;[0-9]&quot;)\n        &#39; Special is &quot;none of the above&quot;.\n        Dim special As New System.Text.RegularExpressions.Regex(&quot;[^a-zA-Z0-9]&quot;)\n\n        &#39; Check the length.\n        If Len(pwd) &lt; minLength Then Return False\n        &#39; Check for minimum number of occurrences.\n        If upper.Matches(pwd).Count &lt; numUpper Then Return False\n        If lower.Matches(pwd).Count &lt; numLower Then Return False\n        If number.Matches(pwd).Count &lt; numNumbers Then Return False\n        If special.Matches(pwd).Count &lt; numSpecial Then Return False\n\n        &#39; Passed all checks.\n        Return True\n    End Function\n\n    Sub TestValidatePassword()\n        Dim password As String = &quot;Password&quot;\n        &#39; Demonstrate that &quot;Password&quot; is not complex.\n        MsgBox(password &amp; &quot; is complex: &quot; &amp; ValidatePassword(password))\n\n        password = &quot;Z9f%a&gt;2kQ&quot;\n        &#39; Demonstrate that &quot;Z9f%a&gt;2kQ&quot; is not complex.\n        MsgBox(password &amp; &quot; is complex: &quot; &amp; ValidatePassword(password))\n    End Sub\n</code></pre><h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Call this method by passing the string that contains that password.  </p>\n<p> This example requires:  </p>\n<ul>\n<li>Access to the members of the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.text.regularexpressions(v=vs.110).aspx\" data-linktype=\"external\">System.Text.RegularExpressions</a> namespace. Add an <code>Imports</code> statement if you are not fully qualifying member names in your code. For more information, see <a href=\"../../../language-reference/statements/imports-statement-net-namespace-and-type\" data-linktype=\"relative-path\">Imports Statement (.NET Namespace and Type)</a>.  </li>\n</ul>\n<h2 id=\"security\">Security</h2>\n<p> If you are moving the password across a network, you need to use a secure method for transferring data. For more information, see <a href=\"https://msdn.microsoft.com/library/330a99hc\" data-linktype=\"external\">ASP.NET Web Application Security</a>.  </p>\n<p> You can improve the accuracy of the <code>ValidatePassword</code> function by adding additional complexity checks:  </p>\n<ul>\n<li><p>Compare the password and its substrings against the user&#39;s name, user identifier, and an application-defined dictionary. In addition, treat visually similar characters as equivalent when performing the comparisons. For example, treat the letters &quot;l&quot; and &quot;e&quot; as equivalent to the numerals &quot;1&quot; and &quot;3&quot;.  </p>\n</li>\n<li><p>If there is only one uppercase character, make sure it is not the password&#39;s first character.  </p>\n</li>\n<li><p>Make sure that the last two characters of the password are letter characters.  </p>\n</li>\n<li><p>Do not allow passwords in which all the symbols are entered from the keyboard&#39;s top row.  </p>\n</li>\n</ul>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.text.regularexpressions.regex(v=vs.110).aspx\" data-linktype=\"external\">Regex</a><br> <a href=\"https://msdn.microsoft.com/library/330a99hc\" data-linktype=\"external\">ASP.NET Web Application Security</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"5d9a918f-6c1f-41a3-a019-b5c2b8ce0381\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"17\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md\">\r\n<meta name=\"document_id\" content=\"b0bd0e75-5641-381a-65fc-ac3f2e317aa8\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Validating Passwords Complexity (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"5d9a918f-6c1f-41a3-a019-b5c2b8ce0381","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":17,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["String data type, validation"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganizing the VB TOC (#1348)","commit_sha":"0a5d76c154aeb9b749c9c3fc5ad0962e93754a62","commit_date":"2017-02-14 10:22:48 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md","document_id":"b0bd0e75-5641-381a-65fc-ac3f2e317aa8","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex","toc_asset_id":"articles/visual-basic/programming-guide/language-features/strings/toc.json","toc_rel":"toc.json","_op_ogTitle":"Validating Passwords Complexity (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":559,"_op_rawTitle":"<h1 id=\"walkthrough-validating-that-passwords-are-complex-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md\" sourcestartlinenumber=\"36\" sourceendlinenumber=\"36\">Walkthrough: Validating That Passwords Are Complex (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex","fileRelativePath":"articles/visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.html"},"themesRelativePathToOutputRoot":"_themes/"}