{"content":"<div><div class=\"content\">\n<p>This walkthrough shows you how to use the <a class=\"xref\" href=\"../../../../../api/system.security.cryptography.descryptoserviceprovider\" data-linktype=\"relative-path\">DESCryptoServiceProvider</a> class to encrypt and decrypt strings using the cryptographic service provider (CSP) version of the Triple Data Encryption Standard (<a class=\"xref\" href=\"../../../../../api/system.security.cryptography.tripledes\" data-linktype=\"relative-path\">TripleDES</a>) algorithm. The first step is to create a simple wrapper class that encapsulates the 3DES algorithm and stores the encrypted data as a base-64 encoded string. Then, that wrapper is used to securely store private user data in a publicly accessible text file.  </p>\n<p> You can use encryption to protect user secrets (for example, passwords) and to make credentials unreadable by unauthorized users. This can protect an authorized user&#39;s identity from being stolen, which protects the user&#39;s assets and provides non-repudiation. Encryption can also protect a user&#39;s data from being accessed by unauthorized users.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com/library/f96284bc-7b73-44b5-ac59-fac613ad09f8\" data-linktype=\"external\">Cryptographic Services</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The Rijndael (now referred to as Advanced Encryption Standard [AES]) and Triple Data Encryption Standard (3DES) algorithms provide greater security than DES because they are more computationally intensive. For more information, see <a class=\"xref\" href=\"../../../../../api/system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a> and <a class=\"xref\" href=\"../../../../../api/system.security.cryptography.rijndael\" data-linktype=\"relative-path\">Rijndael</a>.  </p>\n</div>\n<h3 id=\"to-create-the-encryption-wrapper\">To create the encryption wrapper</h3>\n<ol>\n<li><p>Create the <code>Simple3Des</code> class to encapsulate the encryption and decryption methods.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#38\">Public NotInheritable Class Simple3Des\nEnd Class\n</code></pre></li>\n<li><p>Add an import of the cryptography namespace to the start of the file that contains the <code>Simple3Des</code> class.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#77\">Imports System.Security.Cryptography\n</code></pre></li>\n<li><p>In the <code>Simple3Des</code> class, add a private field to store the 3DES cryptographic service provider.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#39\">Private TripleDes As New TripleDESCryptoServiceProvider\n</code></pre></li>\n<li><p>Add a private method that creates a byte array of a specified length from the hash of the specified key.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#41\">Private Function TruncateHash( \n    ByVal key As String, \n    ByVal length As Integer) As Byte()\n\n    Dim sha1 As New SHA1CryptoServiceProvider\n\n    &#39; Hash the key.\n    Dim keyBytes() As Byte = \n        System.Text.Encoding.Unicode.GetBytes(key)\n    Dim hash() As Byte = sha1.ComputeHash(keyBytes)\n\n    &#39; Truncate or pad the hash.\n    ReDim Preserve hash(length - 1)\n    Return hash\nEnd Function\n</code></pre></li>\n<li><p>Add a constructor to initialize the 3DES cryptographic service provider.  </p>\n<p> The <code>key</code> parameter controls the <code>EncryptData</code> and <code>DecryptData</code> methods.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#40\">Sub New(ByVal key As String)\n    &#39; Initialize the crypto provider.\n    TripleDes.Key = TruncateHash(key, TripleDes.KeySize \\ 8)\n    TripleDes.IV = TruncateHash(&quot;&quot;, TripleDes.BlockSize \\ 8)\nEnd Sub\n</code></pre></li>\n<li><p>Add a public method that encrypts a string.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#42\">Public Function EncryptData( \n    ByVal plaintext As String) As String\n\n    &#39; Convert the plaintext string to a byte array.\n    Dim plaintextBytes() As Byte = \n        System.Text.Encoding.Unicode.GetBytes(plaintext)\n\n    &#39; Create the stream.\n    Dim ms As New System.IO.MemoryStream\n    &#39; Create the encoder to write to the stream.\n    Dim encStream As New CryptoStream(ms, \n        TripleDes.CreateEncryptor(), \n        System.Security.Cryptography.CryptoStreamMode.Write)\n\n    &#39; Use the crypto stream to write the byte array to the stream.\n    encStream.Write(plaintextBytes, 0, plaintextBytes.Length)\n    encStream.FlushFinalBlock()\n\n    &#39; Convert the encrypted stream to a printable string.\n    Return Convert.ToBase64String(ms.ToArray)\nEnd Function\n</code></pre></li>\n<li><p>Add a public method that decrypts a string.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#43\">Public Function DecryptData( \n    ByVal encryptedtext As String) As String\n\n    &#39; Convert the encrypted text string to a byte array.\n    Dim encryptedBytes() As Byte = Convert.FromBase64String(encryptedtext)\n\n    &#39; Create the stream.\n    Dim ms As New System.IO.MemoryStream\n    &#39; Create the decoder to write to the stream.\n    Dim decStream As New CryptoStream(ms, \n        TripleDes.CreateDecryptor(), \n        System.Security.Cryptography.CryptoStreamMode.Write)\n\n    &#39; Use the crypto stream to write the byte array to the stream.\n    decStream.Write(encryptedBytes, 0, encryptedBytes.Length)\n    decStream.FlushFinalBlock()\n\n    &#39; Convert the plaintext stream to a string.\n    Return System.Text.Encoding.Unicode.GetString(ms.ToArray)\nEnd Function\n</code></pre><p> The wrapper class can now be used to protect user assets. In this example, it is used to securely store private user data in a publicly accessible text file.  </p>\n</li>\n</ol>\n<h3 id=\"to-test-the-encryption-wrapper\">To test the encryption wrapper</h3>\n<ol>\n<li><p>In a separate class, add a method that uses the wrapper&#39;s <code>EncryptData</code> method to encrypt a string and write it to the user&#39;s My Documents folder.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#78\">Sub TestEncoding()\n    Dim plainText As String = InputBox(&quot;Enter the plain text:&quot;)\n    Dim password As String = InputBox(&quot;Enter the password:&quot;)\n\n    Dim wrapper As New Simple3Des(password)\n    Dim cipherText As String = wrapper.EncryptData(plainText)\n\n    MsgBox(&quot;The cipher text is: &quot; &amp; cipherText)\n    My.Computer.FileSystem.WriteAllText( \n        My.Computer.FileSystem.SpecialDirectories.MyDocuments &amp; \n        &quot;\\cipherText.txt&quot;, cipherText, False)\nEnd Sub\n</code></pre></li>\n<li><p>Add a method that reads the encrypted string from the user&#39;s My Documents folder and decrypts the string with the wrapper&#39;s <code>DecryptData</code> method.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStrings#79\">Sub TestDecoding()\n    Dim cipherText As String = My.Computer.FileSystem.ReadAllText( \n        My.Computer.FileSystem.SpecialDirectories.MyDocuments &amp; \n            &quot;\\cipherText.txt&quot;)\n    Dim password As String = InputBox(&quot;Enter the password:&quot;)\n    Dim wrapper As New Simple3Des(password)\n\n    &#39; DecryptData throws if the wrong password is used.\n    Try\n        Dim plainText As String = wrapper.DecryptData(cipherText)\n        MsgBox(&quot;The plain text is: &quot; &amp; plainText)\n    Catch ex As System.Security.Cryptography.CryptographicException\n        MsgBox(&quot;The data could not be decrypted with the password.&quot;)\n    End Try\nEnd Sub\n</code></pre></li>\n<li><p>Add user interface code to call the <code>TestEncoding</code> and <code>TestDecoding</code> methods.  </p>\n</li>\n<li><p>Run the application.  </p>\n<p> When you test the application, notice that it will not decrypt the data if you provide the wrong password.  </p>\n</li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.security.cryptography\" data-linktype=\"relative-path\">System.Security.Cryptography</a><br> <a class=\"xref\" href=\"../../../../../api/system.security.cryptography.descryptoserviceprovider\" data-linktype=\"relative-path\">DESCryptoServiceProvider</a><br> <a class=\"xref\" href=\"../../../../../api/system.security.cryptography.des\" data-linktype=\"relative-path\">DES</a><br> <a class=\"xref\" href=\"../../../../../api/system.security.cryptography.tripledes\" data-linktype=\"relative-path\">TripleDES</a><br> <a class=\"xref\" href=\"../../../../../api/system.security.cryptography.rijndael\" data-linktype=\"relative-path\">Rijndael</a><br> <a href=\"http://msdn.microsoft.com/library/f96284bc-7b73-44b5-ac59-fac613ad09f8\" data-linktype=\"external\">Cryptographic Services</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"1f51e40a-2f88-43e2-a83e-28a0b5c0d6fd\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"18\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md\">\r\n<meta name=\"document_id\" content=\"acfdad81-13d8-f18c-db67-3955c167152f\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"Encrypting and Decrypting Strings in Visual Basic | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"1f51e40a-2f88-43e2-a83e-28a0b5c0d6fd","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":18,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["encryption, strings","strings [Visual Basic], encrypting","decryption, strings","strings [Visual Basic], decrypting"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganizing the VB TOC (#1348)","commit_sha":"0a5d76c154aeb9b749c9c3fc5ad0962e93754a62","commit_date":"2017-02-14 10:22:48 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md","document_id":"acfdad81-13d8-f18c-db67-3955c167152f","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings","toc_asset_id":"articles/visual-basic/programming-guide/language-features/strings/toc.json","toc_rel":"toc.json","_op_ogTitle":"Encrypting and Decrypting Strings in Visual Basic","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":737,"_op_rawTitle":"<h1 id=\"walkthrough-encrypting-and-decrypting-strings-in-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">Walkthrough: Encrypting and Decrypting Strings in Visual Basic</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings","fileRelativePath":"articles/visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.html"},"themesRelativePathToOutputRoot":"_themes/"}