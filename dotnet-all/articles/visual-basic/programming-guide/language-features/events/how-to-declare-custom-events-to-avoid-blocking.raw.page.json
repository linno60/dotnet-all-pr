{"content":"<div><div class=\"content\">\n<p>There are several circumstances when it is important that one event handler not block subsequent event handlers. Custom events allow the event to call its event handlers asynchronously.  </p>\n<p> By default, the backing-store field for an event declaration is a multicast delegate that serially combines all the event handlers. This means that if one handler takes a long time to complete, it blocks the other handlers until it completes. (Well-behaved event handlers should never perform lengthy or potentially blocking operations.)  </p>\n<p> Instead of using the default implementation of events that Visual Basic provides, you can use a custom event to execute the event handlers asynchronously.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In this example, the <code>AddHandler</code> accessor adds the delegate for each handler of the <code>Click</code> event to an <a class=\"xref\" href=\"../../../../../api/system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> stored in the <code>EventHandlerList</code> field.  </p>\n<p> When code raises the <code>Click</code> event, the <code>RaiseEvent</code> accessor invokes all the event handler delegates asynchronously using the <a class=\"xref\" href=\"../../../../../api/system.web.services.protocols.logicalmethodinfo#System_Web_Services_Protocols_LogicalMethodInfo_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> method. That method invokes each handler on a worker thread and returns immediately, so handlers cannot block one another.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrEvents#27\">Public NotInheritable Class ReliabilityOptimizedControl\n    &#39;Defines a list for storing the delegates\n    Private EventHandlerList As New ArrayList\n\n    &#39;Defines the Click event using the custom event syntax.\n    &#39;The RaiseEvent always invokes the delegates asynchronously\n    Public Custom Event Click As EventHandler\n        AddHandler(ByVal value As EventHandler)\n            EventHandlerList.Add(value)\n        End AddHandler\n        RemoveHandler(ByVal value As EventHandler)\n            EventHandlerList.Remove(value)\n        End RemoveHandler\n        RaiseEvent(ByVal sender As Object, ByVal e As EventArgs)\n            For Each handler As EventHandler In EventHandlerList\n                If handler IsNot Nothing Then\n                    handler.BeginInvoke(sender, e, Nothing, Nothing)\n                End If\n            Next\n        End RaiseEvent\n    End Event\nEnd Class\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a><br> <a class=\"xref\" href=\"../../../../../api/system.web.services.protocols.logicalmethodinfo#System_Web_Services_Protocols_LogicalMethodInfo_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a><br> <a href=\"index\" data-linktype=\"relative-path\">Events</a><br> <a href=\"how-to-declare-custom-events-to-conserve-memory\" data-linktype=\"relative-path\">How to: Declare Custom Events To Conserve Memory</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"998b6a90-67c5-4d2c-8b11-366d3e355505\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"12\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md\">\r\n<meta name=\"document_id\" content=\"4ee786a4-f31a-4ae6-aedb-f82fd33bbced\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"How to: Declare Custom Events To Avoid Blocking (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"998b6a90-67c5-4d2c-8b11-366d3e355505","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":12,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["declaring events, custom","events [Visual Basic], custom","custom events"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganizing the VB TOC (#1348)","commit_sha":"0a5d76c154aeb9b749c9c3fc5ad0962e93754a62","commit_date":"2017-02-14 10:22:48 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md","document_id":"4ee786a4-f31a-4ae6-aedb-f82fd33bbced","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking","toc_asset_id":"articles/visual-basic/programming-guide/language-features/events/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Declare Custom Events To Avoid Blocking (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":260,"_op_rawTitle":"<h1 id=\"how-to-declare-custom-events-to-avoid-blocking-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md\" sourcestartlinenumber=\"38\" sourceendlinenumber=\"38\">How to: Declare Custom Events To Avoid Blocking (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking","fileRelativePath":"articles/visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.html"},"themesRelativePathToOutputRoot":"_themes/"}