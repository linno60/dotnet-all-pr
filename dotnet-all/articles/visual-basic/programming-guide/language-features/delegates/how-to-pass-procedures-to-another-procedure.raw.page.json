{"content":"<div><div class=\"content\">\n<p>This example shows how to use delegates to pass a procedure to another procedure.  </p>\n<p> A delegate is a type that you can use like any other type in Visual Basic. The <code>AddressOf</code> operator returns a delegate object when applied to a procedure name.  </p>\n<p> This example has a procedure with a delegate parameter that can take a reference to another procedure, obtained with the <code>AddressOf</code> operator.  </p>\n<h3 id=\"create-the-delegate-and-matching-procedures\">Create the delegate and matching procedures</h3>\n<ol>\n<li><p>Create a delegate named <code>MathOperator</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDelegates#1\">    Delegate Function MathOperator( \n        ByVal x As Double, \n        ByVal y As Double \n    ) As Double\n</code></pre></li>\n<li><p>Create a procedure named <code>AddNumbers</code> with parameters and return value that match those of <code>MathOperator</code>, so that the signatures match.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDelegates#2\">    Function AddNumbers( \n        ByVal x As Double, \n        ByVal y As Double \n    ) As Double\n        Return x + y\n    End Function\n</code></pre></li>\n<li><p>Create a procedure named <code>SubtractNumbers</code> with a signature that matches <code>MathOperator</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDelegates#3\">    Function SubtractNumbers( \n        ByVal x As Double, \n        ByVal y As Double\n    ) As Double\n        Return x - y\n    End Function\n</code></pre></li>\n<li><p>Create a procedure named <code>DelegateTest</code> that takes a delegate as a parameter.  </p>\n<p> This procedure can accept a reference to <code>AddNumbers</code> or <code>SubtractNumbers</code>, because their signatures match the <code>MathOperator</code> signature.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDelegates#4\">    Sub DelegateTest( \n        ByVal x As Double, \n        ByVal op As MathOperator, \n        ByVal y As Double \n    )\n        Dim ret As Double\n        ret = op.Invoke(x, y) &#39; Call the method.\n        MsgBox(ret)\n    End Sub\n</code></pre></li>\n<li><p>Create a procedure named <code>Test</code> that calls <code>DelegateTest</code> once with the delegate for <code>AddNumbers</code> as a parameter, and again with the delegate for <code>SubtractNumbers</code> as a parameter.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDelegates#5\">    Protected Sub Test()\n        DelegateTest(5, AddressOf AddNumbers, 3)\n        DelegateTest(9, AddressOf SubtractNumbers, 3)\n    End Sub\n</code></pre><p> When <code>Test</code> is called, it first displays the result of <code>AddNumbers</code> acting on <code>5</code> and <code>3</code>, which is 8. Then the result of <code>SubtractNumbers</code> acting on <code>9</code> and <code>3</code> is displayed, which is 6.  </p>\n</li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"index\" data-linktype=\"relative-path\">Delegates</a><br> <a href=\"../../../language-reference/operators/addressof-operator\" data-linktype=\"relative-path\">AddressOf Operator</a><br> <a href=\"../../../language-reference/statements/delegate-statement\" data-linktype=\"relative-path\">Delegate Statement</a><br> <a href=\"how-to-invoke-a-delegate-method\" data-linktype=\"relative-path\">How to: Invoke a Delegate Method</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"5adbba15-5a1d-413f-ab3e-3ff6cc0a4669\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"9\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md\">\r\n<meta name=\"document_id\" content=\"2bec78a3-0911-ad99-023d-caa6902d388f\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Pass Procedures to Another Procedure in Visual Basic | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"5adbba15-5a1d-413f-ab3e-3ff6cc0a4669","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":9,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["AddressOf operator","delegates [Visual Basic], passing procedures"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganizing the VB TOC (#1348)","commit_sha":"0a5d76c154aeb9b749c9c3fc5ad0962e93754a62","commit_date":"2017-02-14 10:22:48 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/0a5d76c154aeb9b749c9c3fc5ad0962e93754a62/docs/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md","document_id":"2bec78a3-0911-ad99-023d-caa6902d388f","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure","toc_asset_id":"articles/visual-basic/programming-guide/language-features/delegates/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Pass Procedures to Another Procedure in Visual Basic","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":301,"_op_rawTitle":"<h1 id=\"how-to-pass-procedures-to-another-procedure-in-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">How to: Pass Procedures to Another Procedure in Visual Basic</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure","fileRelativePath":"articles/visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.html"},"themesRelativePathToOutputRoot":"_themes/"}