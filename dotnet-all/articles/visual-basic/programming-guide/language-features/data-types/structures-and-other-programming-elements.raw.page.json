{"content":"<div><div class=\"content\">\n<p>You can use structures in conjunction with arrays, objects, and procedures, as well as with each other. The interactions use the same syntax as these elements use individually.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You cannot initialize any of the structure elements in the structure declaration. You can assign values only to elements of a variable that has been declared to be of a structure type.  </p>\n</div>\n<h2 id=\"structures-and-arrays\">Structures and Arrays</h2>\n<p> A structure can contain an array as one or more of its elements. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Public Structure systemInfo  \n    Public cPU As String  \n    Public memory As Long  \n    Public diskDrives() As String  \n    Public purchaseDate As Date  \nEnd Structure   \n</code></pre><p> You access the values of an array within a structure the same way you access a property on an object. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Dim mySystem As systemInfo  \nReDim mySystem.diskDrives(3)  \nmySystem.diskDrives(0) = &quot;1.44 MB&quot;  \n</code></pre><p> You can also declare an array of structures. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Dim allSystems(100) As systemInfo  \n</code></pre><p> You follow the same rules to access the components of this data architecture. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">ReDim allSystems(5).diskDrives(3)  \nallSystems(5).CPU = &quot;386SX&quot;  \nallSystems(5).diskDrives(2) = &quot;100M SCSI&quot;  \n</code></pre><h2 id=\"structures-and-objects\">Structures and Objects</h2>\n<p> A structure can contain an object as one or more of its elements. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Protected Structure userInput  \n    Public userName As String  \n    Public inputForm As System.Windows.Forms.Form  \n    Public userFileNumber As Integer  \nEnd Structure  \n</code></pre><p> You should use a specific object class in such a declaration, rather than <code>Object</code>.  </p>\n<h2 id=\"structures-and-procedures\">Structures and Procedures</h2>\n<p> You can pass a structure as a procedure argument. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Public currentCPUName As String = &quot;700MHz Pentium compatible&quot;  \nPublic currentMemorySize As Long = 256  \nPublic Sub fillSystem(ByRef someSystem As systemInfo)  \n    someSystem.cPU = currentCPUName  \n    someSystem.memory = currentMemorySize  \n    someSystem.purchaseDate = Now  \nEnd Sub  \n</code></pre><p> The preceding example passes the structure <em>by reference</em>, which allows the procedure to modify its elements so that the changes take effect in the calling code. If you want to protect a structure against such modification, pass it by value.  </p>\n<p> You can also return a structure from a <code>Function</code> procedure. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Dim allSystems(100) As systemInfo  \nFunction findByDate(ByVal searchDate As Date) As systemInfo  \n    Dim i As Integer  \n    For i = 1 To 100  \n        If allSystems(i).purchaseDate = searchDate Then Return allSystems(i)  \n    Next i  \n   &#39; Process error: system with desired purchase date not found.  \nEnd Function  \n</code></pre><h2 id=\"structures-within-structures\">Structures Within Structures</h2>\n<p> Structures can contain other structures. The following example illustrates this.  </p>\n<pre class=\"loading\"><code class=\"lang-vb\">Public Structure driveInfo  \n    Public type As String  \n    Public size As Long  \nEnd Structure  \nPublic Structure systemInfo  \n    Public cPU As String  \n    Public memory As Long  \n    Public diskDrives() As driveInfo  \n    Public purchaseDate As Date  \nEnd Structure  \n</code></pre><pre class=\"loading\"><code class=\"lang-vb\">Dim allSystems(100) As systemInfo  \nReDim allSystems(1).diskDrives(3)  \nallSystems(1).diskDrives(0).type = &quot;Floppy&quot;  \n</code></pre><p> You can also use this technique to encapsulate a structure defined in one module within a structure defined in a different module.  </p>\n<p> Structures can contain other structures to an arbitrary depth.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"index\" data-linktype=\"relative-path\">Data Types</a><br> <a href=\"elementary-data-types\" data-linktype=\"relative-path\">Elementary Data Types</a><br> <a href=\"composite-data-types\" data-linktype=\"relative-path\">Composite Data Types</a><br> <a href=\"value-types-and-reference-types\" data-linktype=\"relative-path\">Value Types and Reference Types</a><br> <a href=\"structures\" data-linktype=\"relative-path\">Structures</a><br> <a href=\"troubleshooting-data-types\" data-linktype=\"relative-path\">Troubleshooting Data Types</a><br> <a href=\"how-to-declare-a-structure\" data-linktype=\"relative-path\">How to: Declare a Structure</a><br> <a href=\"structure-variables\" data-linktype=\"relative-path\">Structure Variables</a><br> <a href=\"structures-and-classes\" data-linktype=\"relative-path\">Structures and Classes</a><br> <a href=\"../../../language-reference/statements/structure-statement\" data-linktype=\"relative-path\">Structure Statement</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"0f849313-ccd2-4c9a-acb9-69de6751c088\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"13\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md\">\r\n<meta name=\"document_id\" content=\"e5d5dadf-3aeb-9eed-33ff-d4235cf9fed5\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"Structures and Other Programming Elements (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"0f849313-ccd2-4c9a-acb9-69de6751c088","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":13,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["structures, arrays","procedures, structures as arguments to","objects [Visual Basic], structure elements","arrays [Visual Basic], structure elements","nested structures"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md","document_id":"e5d5dadf-3aeb-9eed-33ff-d4235cf9fed5","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements","toc_asset_id":"articles/visual-basic/programming-guide/language-features/data-types/toc.json","toc_rel":"toc.json","_op_ogTitle":"Structures and Other Programming Elements (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":497,"_op_rawTitle":"<h1 id=\"structures-and-other-programming-elements-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md\" sourcestartlinenumber=\"40\" sourceendlinenumber=\"40\">Structures and Other Programming Elements (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements","fileRelativePath":"articles/visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.html"},"themesRelativePathToOutputRoot":"_themes/"}