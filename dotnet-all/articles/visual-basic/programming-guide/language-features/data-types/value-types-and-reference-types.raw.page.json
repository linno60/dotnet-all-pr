{"content":"<div><div class=\"content\">\n<p>In Visual Basic, data types are implemented based on their classification. The Visual Basic data types can be classified according to whether a variable of a particular type stores its own data or a pointer to the data. If it stores its own data it is a <em>value type</em>; if it holds a pointer to data elsewhere in memory it is a <em>reference type</em>.  </p>\n<h2 id=\"value-types\">Value Types</h2>\n<p> A data type is a <em>value type</em> if it holds the data within its own memory allocation. Value types include the following:  </p>\n<ul>\n<li><p>All numeric data types  </p>\n</li>\n<li><p><code>Boolean</code>, <code>Char</code>, and <code>Date</code>  </p>\n</li>\n<li><p>All structures, even if their members are reference types  </p>\n</li>\n<li><p>Enumerations, since their underlying type is always <code>SByte</code>, <code>Short</code>, <code>Integer</code>, <code>Long</code>, <code>Byte</code>, <code>UShort</code>, <code>UInteger</code>, or <code>ULong</code>  </p>\n<p>Every structure is a value type, even if it contains reference type members. For this reason, value types such as <code>Char</code> and <code>Integer</code> are implemented by .NET Framework structures.  </p>\n<p>You can declare a value type by using the reserved keyword, for example, <code>Decimal</code>. You can also use the <code>New</code> keyword to initialize a value type. This is especially useful if the type has a constructor that takes parameters. An example of this is the <a class=\"xref\" href=\"../../../../../api/system.decimal#System_Decimal__ctor_System_Int32_System_Int32_System_Int32_System_Boolean_System_Byte_\" data-linktype=\"relative-path\">Decimal(Int32,Int32,Int32,Boolean,Byte)</a> constructor, which builds a new <code>Decimal</code> value from the supplied parts.  </p>\n</li>\n</ul>\n<h2 id=\"reference-types\">Reference Types</h2>\n<p> A <em>reference type</em> contains a pointer to another memory location that holds the data. Reference types include the following:  </p>\n<ul>\n<li><p><code>String</code>  </p>\n</li>\n<li><p>All arrays, even if their elements are value types  </p>\n</li>\n<li><p>Class types, such as <a class=\"xref\" href=\"../../../../../api/system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>  </p>\n</li>\n<li><p>Delegates  </p>\n<p>A class is a <em>reference type</em>. For this reason, reference types such as <code>Object</code> and <code>String</code> are supported by .NET Framework classes. Note that every array is a reference type, even if its members are value types.  </p>\n<p>Since every reference type represents an underlying .NET Framework class, you must use the <a href=\"../../../language-reference/operators/new-operator\" data-linktype=\"relative-path\">New Operator</a> keyword when you initialize it. The following statement initializes an array.  </p>\n</li>\n</ul>\n<pre class=\"loading\"><code>Dim totals() As Single = New Single(8) {}  \n</code></pre><h2 id=\"elements-that-are-not-types\">Elements That Are Not Types</h2>\n<p> The following programming elements do not qualify as types, because you cannot specify any of them as a data type for a declared element:  </p>\n<ul>\n<li><p>Namespaces  </p>\n</li>\n<li><p>Modules  </p>\n</li>\n<li><p>Events  </p>\n</li>\n<li><p>Properties and procedures  </p>\n</li>\n<li><p>Variables, constants, and fields  </p>\n</li>\n</ul>\n<h2 id=\"working-with-the-object-data-type\">Working with the Object Data Type</h2>\n<p> You can assign either a reference type or a value type to a variable of the <code>Object</code> data type. An <code>Object</code> variable always holds a pointer to the data, never the data itself. However, if you assign a value type to an <code>Object</code> variable, it behaves as if it holds its own data. For more information, see <a href=\"../../../language-reference/data-types/object-data-type\" data-linktype=\"relative-path\">Object Data Type</a>.  </p>\n<p> You can find out whether an <code>Object</code> variable is acting as a reference type or a value type by passing it to the <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsReference_\" data-linktype=\"relative-path\">IsReference</a> method in the <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information\" data-linktype=\"relative-path\">Information</a> class of the <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic\" data-linktype=\"relative-path\">Microsoft.VisualBasic</a> namespace. <a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsReference_\" data-linktype=\"relative-path\">IsReference</a> returns <code>True</code> if the content of the <code>Object</code> variable represents a reference type.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"nullable-value-types\" data-linktype=\"relative-path\">Nullable Value Types</a><br> <a href=\"type-conversions\" data-linktype=\"relative-path\">Type Conversions in Visual Basic</a><br> <a href=\"../../../language-reference/statements/structure-statement\" data-linktype=\"relative-path\">Structure Statement</a><br> <a href=\"efficient-use-of-data-types\" data-linktype=\"relative-path\">Efficient Use of Data Types</a><br> <a href=\"../../../language-reference/data-types/object-data-type\" data-linktype=\"relative-path\">Object Data Type</a><br> <a href=\"index\" data-linktype=\"relative-path\">Data Types</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"fc82ce15-5a40-4c5c-a1e1-a556830e7391\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"14\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md\">\r\n<meta name=\"document_id\" content=\"f8ecec6e-14a8-0701-2be3-8948f1bcaad1\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Value Types and Reference Types | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"fc82ce15-5a40-4c5c-a1e1-a556830e7391","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":14,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["reference data types","reference types","value types","value data types","types [Visual Basic]","data types [Visual Basic], value types","data types [Visual Basic], reference types"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md","document_id":"f8ecec6e-14a8-0701-2be3-8948f1bcaad1","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types","toc_asset_id":"articles/visual-basic/programming-guide/language-features/data-types/toc.json","toc_rel":"toc.json","_op_ogTitle":"Value Types and Reference Types","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":484,"_op_rawTitle":"<h1 id=\"value-types-and-reference-types\" sourcefile=\"docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md\" sourcestartlinenumber=\"42\" sourceendlinenumber=\"42\">Value Types and Reference Types</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types","fileRelativePath":"articles/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.html"},"themesRelativePathToOutputRoot":"_themes/"}