{"content":"<div><div class=\"content\">\n<p>An <em>operator</em> is a code element that performs an operation on one or more code elements that hold values. Value elements include variables, constants, literals, properties, returns from <code>Function</code> and <code>Operator</code> procedures, and expressions.  </p>\n<p> An <em>expression</em> is a series of value elements combined with operators, which yields a new value. The operators act on the value elements by performing calculations, comparisons, or other operations.  </p>\n<h2 id=\"types-of-operators\">Types of Operators</h2>\n<p> Visual Basic provides the following types of operators:  </p>\n<ul>\n<li><p><a href=\"arithmetic-operators\" data-linktype=\"relative-path\">Arithmetic Operators</a> perform familiar calculations on numeric values, including shifting their bit patterns.  </p>\n</li>\n<li><p><a href=\"comparison-operators\" data-linktype=\"relative-path\">Comparison Operators</a> compare two expressions and return a <code>Boolean</code> value representing the result of the comparison.  </p>\n</li>\n<li><p><a href=\"concatenation-operators\" data-linktype=\"relative-path\">Concatenation Operators</a> join multiple strings into a single string.  </p>\n</li>\n<li><p><a href=\"logical-and-bitwise-operators\" data-linktype=\"relative-path\">Logical and Bitwise Operators in Visual Basic</a> combine <code>Boolean</code> or numeric values and return a result of the same data type as the values.  </p>\n<p>The value elements that are combined with an operator are called <em>operands</em> of that operator. Operators combined with value elements form expressions, except for the assignment operator, which forms a <em>statement</em>. For more information, see <a href=\"../statements\" data-linktype=\"relative-path\">Statements</a>.  </p>\n</li>\n</ul>\n<h2 id=\"evaluation-of-expressions\">Evaluation of Expressions</h2>\n<p> The end result of an expression represents a value, which is typically of a familiar data type such as <code>Boolean</code>, <code>String</code>, or a numeric type.  </p>\n<p> The following are examples of expressions.  </p>\n<p> <code>5 + 4</code>  </p>\n<p> <code>&#39; The preceding expression evaluates to 9.</code>  </p>\n<p> <code>15 * System.Math.Sqrt(9) + x</code>  </p>\n<p> <code>&#39; The preceding expression evaluates to 45 plus the value of x.</code>  </p>\n<p> <code>&quot;Concat&quot; &amp; &quot;ena&quot; &amp; &quot;tion&quot;</code>  </p>\n<p> <code>&#39; The preceding expression evaluates to &quot;Concatenation&quot;.</code>  </p>\n<p> <code>763 &lt; 23</code>  </p>\n<p> <code>&#39; The preceding expression evaluates to False.</code>  </p>\n<p> Several operators can perform actions in a single expression or statement, as the following example illustrates.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#56\">        x = 45 + y * z ^ 2\n</code></pre><p> In the preceding example, Visual Basic performs the operations in the expression on the right side of the assignment operator (<code>=</code>), then assigns the resulting value to the variable <code>x</code> on the left. There is no practical limit to the number of operators that can be combined into an expression, but an understanding of <a href=\"../../../language-reference/operators/operator-precedence\" data-linktype=\"relative-path\">Operator Precedence in Visual Basic</a> is necessary to ensure that you get the results you expect.  </p>\n<p> For more information and examples, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=101703\" data-linktype=\"external\">Operator Overloading in Visual Basic 2005</a>.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../../../language-reference/operators/index\" data-linktype=\"relative-path\">Operators</a><br> <a href=\"efficient-combination-of-operators\" data-linktype=\"relative-path\">Efficient Combination of Operators</a><br> <a href=\"../../../language-reference/statements/index\" data-linktype=\"relative-path\">Statements</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"b86f3131-94ee-448f-96cd-79611e028b26\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"18\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/operators-and-expressions/index.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/operators-and-expressions/index.md\">\r\n<meta name=\"document_id\" content=\"b4c18dcd-684d-f49a-c0d5-ed860651d0c4\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Operators and Expressions in Visual Basic | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"b86f3131-94ee-448f-96cd-79611e028b26","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":18,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["operators [Visual Basic], operands","operators [Visual Basic]","operands, definition","Visual Basic code, operators","Visual Basic code, expressions","operands","expressions [Visual Basic]"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/operators-and-expressions/index.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/operators-and-expressions/index.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/operators-and-expressions/index.md","document_id":"b4c18dcd-684d-f49a-c0d5-ed860651d0c4","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/operators-and-expressions/index","toc_asset_id":"articles/visual-basic/programming-guide/language-features/operators-and-expressions/toc.json","toc_rel":"toc.json","_op_ogTitle":"Operators and Expressions in Visual Basic","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":371,"_op_rawTitle":"<h1 id=\"operators-and-expressions-in-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/operators-and-expressions/index.md\" sourcestartlinenumber=\"42\" sourceendlinenumber=\"42\">Operators and Expressions in Visual Basic</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/operators-and-expressions/index","fileRelativePath":"articles/visual-basic/programming-guide/language-features/operators-and-expressions/index.html"},"themesRelativePathToOutputRoot":"_themes/"}