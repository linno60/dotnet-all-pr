{"content":"<div><div class=\"content\">\n<p>If you want to find out if an expression of the <a href=\"../../../language-reference/data-types/string-data-type\" data-linktype=\"relative-path\">String Data Type</a> satisfies a pattern, then you can use the <a href=\"../../../language-reference/operators/like-operator\" data-linktype=\"relative-path\">Like Operator</a>.  </p>\n<p> <code>Like</code> takes two operands. The left operand is a string expression, and the right operand is a string containing the pattern to be used for matching. <code>Like</code> returns a <code>Boolean</code> value indicating whether the string expression satisfies the pattern.  </p>\n<p> You can match each character in the string expression against a specific character, a wildcard character, a character list, or a character range. The positions of the specifications in the pattern string correspond to the positions of the characters to be matched in the string expression.  </p>\n<h3 id=\"to-match-a-character-in-the-string-expression-against-a-specific-character\">To match a character in the string expression against a specific character</h3>\n<ul>\n<li><p>Put the specific character directly in the pattern string. Certain special characters must be enclosed in brackets (<code>[ ]</code>). For more information, see <a href=\"../../../language-reference/operators/like-operator\" data-linktype=\"relative-path\">Like Operator</a>.  </p>\n<p> The following example tests whether <code>myString</code> consists exactly of the single character <code>H</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#70\">Dim sMatch As Boolean = myString Like &quot;H&quot;\n</code></pre></li>\n</ul>\n<h3 id=\"to-match-a-character-in-the-string-expression-against-a-wildcard-character\">To match a character in the string expression against a wildcard character</h3>\n<ul>\n<li><p>Put a question mark (<code>?</code>) in the pattern string. Any valid character in this position makes a successful match.  </p>\n<p> The following example tests whether <code>myString</code> consists of the single character <code>W</code> followed by exactly two characters of any values.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#71\">Dim sMatch As Boolean = myString Like &quot;W??&quot;\n</code></pre></li>\n</ul>\n<h3 id=\"to-match-a-character-in-the-string-expression-against-a-list-of-characters\">To match a character in the string expression against a list of characters</h3>\n<ul>\n<li><p>Put brackets (<code>[ ]</code>) in the pattern string, and inside the brackets put the list of characters. Do not separate the characters with commas or any other separator. Any single character in the list makes a successful match.  </p>\n<p> The following example tests whether <code>myString</code> consists of any valid character followed by exactly one of the characters <code>A</code>, <code>C</code>, or <code>E</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#72\">Dim sMatch As Boolean = myString Like &quot;?[ACE]&quot;\n</code></pre><p> Note that this match is case-sensitive.  </p>\n</li>\n</ul>\n<h3 id=\"to-match-a-character-in-the-string-expression-against-a-range-of-characters\">To match a character in the string expression against a range of characters</h3>\n<ul>\n<li><p>Put brackets (<code>[ ]</code>) in the pattern string, and inside the brackets put the lowest and highest characters in the range, separated by a hyphen (<code>–</code>). Any single character within the range makes a successful match.  </p>\n<p> The following example tests whether <code>myString</code> consists of the characters <code>num</code> followed by exactly one of the characters <code>i</code>, <code>j</code>, <code>k</code>, <code>l</code>, <code>m</code>, or <code>n</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#73\">Dim sMatch As Boolean = myString Like &quot;num[i-m]&quot;\n</code></pre><p> Note that this match is case-sensitive.  </p>\n</li>\n</ul>\n<h2 id=\"matching-empty-strings\">Matching Empty Strings</h2>\n<p> <code>Like</code> treats the sequence <code>[]</code> as a zero-length string (<code>&quot;&quot;</code>). You can use <code>[]</code> to test whether the entire string expression is empty, but you cannot use it to test if a particular position in the string expression is empty. If an empty position is one of the options you need to test for, you can use <code>Like</code> more than once.  </p>\n<h4 id=\"to-match-a-character-in-the-string-expression-against-a-list-of-characters-or-no-character\">To match a character in the string expression against a list of characters or no character</h4>\n<ol>\n<li><p>Call the <code>Like</code> operator twice on the same string expression, and connect the two calls with either the <a href=\"../../../language-reference/operators/or-operator\" data-linktype=\"relative-path\">Or Operator</a> or the <a href=\"../../../language-reference/operators/orelse-operator\" data-linktype=\"relative-path\">OrElse Operator</a>.  </p>\n</li>\n<li><p>In the pattern string for the first <code>Like</code> clause, include the character list, enclosed in brackets (<code>[ ]</code>).  </p>\n</li>\n<li><p>In the pattern string for the second <code>Like</code> clause, do not put any character at the position in question.  </p>\n<p> The following example tests the seven-digit telephone number <code>phoneNum</code> for exactly three numeric digits, followed by a space, a hyphen (<code>–</code>), a period (<code>.</code>), or no character at all, followed by exactly four numeric digits.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#74\">Dim sMatch As Boolean = \n  (phoneNum Like &quot;###[ -.]####&quot;) OrElse (phoneNum Like &quot;#######&quot;)\n</code></pre></li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../../../language-reference/operators/comparison-operators\" data-linktype=\"relative-path\">Comparison Operators</a><br> <a href=\"index\" data-linktype=\"relative-path\">Operators and Expressions</a><br> <a href=\"../../../language-reference/operators/like-operator\" data-linktype=\"relative-path\">Like Operator</a><br> <a href=\"../../../language-reference/data-types/string-data-type\" data-linktype=\"relative-path\">String Data Type</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"19a83804-b5af-4739-928b-ac93e64e457f\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"8\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern.md\">\r\n<meta name=\"document_id\" content=\"fe6d7d8e-50b5-b8c0-43f2-15b0d5e12f34\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Match a String against a Pattern (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"19a83804-b5af-4739-928b-ac93e64e457f","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":8,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["comparison operators, comparing strings","pattern matching","strings [Visual Basic], comparing","string comparison [Visual Basic], operators","Visual Basic code, operators","pattern matching, string comparison","string comparison [Visual Basic]","Like operator [Visual Basic], pattern matching","pattern matching, empty strings","operators [Visual Basic], comparison"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern.md","document_id":"fe6d7d8e-50b5-b8c0-43f2-15b0d5e12f34","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern","toc_asset_id":"articles/visual-basic/programming-guide/language-features/operators-and-expressions/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Match a String against a Pattern (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":590,"_op_rawTitle":"<h1 id=\"how-to-match-a-string-against-a-pattern-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern.md\" sourcestartlinenumber=\"45\" sourceendlinenumber=\"45\">How to: Match a String against a Pattern (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern","fileRelativePath":"articles/visual-basic/programming-guide/language-features/operators-and-expressions/how-to-match-a-string-against-a-pattern.html"},"themesRelativePathToOutputRoot":"_themes/"}