{"content":"<div><div class=\"content\">\n<p>A variable of the <a href=\"../../../language-reference/data-types/object-data-type\" data-linktype=\"relative-path\">Object Data Type</a> can refer to data of any type. The value you store in an <code>Object</code> variable is kept elsewhere in memory, while the variable itself holds a pointer to the data.  </p>\n<h2 id=\"object-classifier-functions\">Object Classifier Functions</h2>\n<p> Visual Basic supplies functions that return information about what an <code>Object</code> variable refers to, as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Returns True if the Object variable refers to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsArray_\" data-linktype=\"relative-path\">IsArray</a></td>\n<td>An array of values, rather than a single value</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsDate_\" data-linktype=\"relative-path\">IsDate</a></td>\n<td>A <a href=\"../../../language-reference/data-types/date-data-type\" data-linktype=\"relative-path\">Date Data Type</a> value, or a string that can be interpreted as a date and time value</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsDBNull_\" data-linktype=\"relative-path\">IsDBNull</a></td>\n<td>An object of type <a class=\"xref\" href=\"../../../../../api/system.dbnull\" data-linktype=\"relative-path\">DBNull</a>, which represents missing or nonexistent data</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsError_\" data-linktype=\"relative-path\">IsError</a></td>\n<td>An exception object, which derives from <a class=\"xref\" href=\"../../../../../api/system.exception\" data-linktype=\"relative-path\">Exception</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsNothing_\" data-linktype=\"relative-path\">IsNothing</a></td>\n<td><a href=\"../../../language-reference/nothing\" data-linktype=\"relative-path\">Nothing</a>, that is, no object is currently assigned to the variable</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsNumeric_\" data-linktype=\"relative-path\">IsNumeric</a></td>\n<td>A number, or a string that can be interpreted as a number</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"../../../../../api/microsoft.visualbasic.information#Microsoft_VisualBasic_Information_IsReference_\" data-linktype=\"relative-path\">IsReference</a></td>\n<td>A reference type (such as a string, array, delegate, or class type)</td>\n</tr>\n</tbody>\n</table>\n<p> You can use these functions to avoid submitting an invalid value to an operation or a procedure.  </p>\n<h2 id=\"typeof-operator\">TypeOf Operator</h2>\n<p> You can also use the <a href=\"../../../language-reference/operators/typeof-operator\" data-linktype=\"relative-path\">TypeOf Operator</a> to determine whether an object variable currently refers to a specific data type. The <code>TypeOf</code>...<code>Is</code> expression evaluates to <code>True</code> if the run-time type of the operand is derived from or implements the specified type.  </p>\n<p> The following example uses <code>TypeOf</code> on object variables referring to value and reference types.  </p>\n<pre class=\"loading\"><code>&#39; The following statement puts a value type (Integer) in an Object variable.  \nDim num As Object = 10  \n&#39; The following statement puts a reference type (Form) in an Object variable.  \nDim frm As Object = New Form()  \nIf TypeOf num Is Long Then Debug.WriteLine(&quot;num is Long&quot;)  \nIf TypeOf num Is Integer Then Debug.WriteLine(&quot;num is Integer&quot;)  \nIf TypeOf num Is Short Then Debug.WriteLine(&quot;num is Short&quot;)  \nIf TypeOf num Is Object Then Debug.WriteLine(&quot;num is Object&quot;)  \nIf TypeOf frm Is Form Then Debug.WriteLine(&quot;frm is Form&quot;)  \nIf TypeOf frm Is Label Then Debug.WriteLine(&quot;frm is Label&quot;)  \nIf TypeOf frm Is Object Then Debug.WriteLine(&quot;frm is Object&quot;)  \n</code></pre><p> The preceding example writes the following lines to the <strong>Debug</strong> window:  </p>\n<p> <code>num is Integer</code>  </p>\n<p> <code>num is Object</code>  </p>\n<p> <code>frm is Form</code>  </p>\n<p> <code>frm is Object</code>  </p>\n<p> The object variable <code>num</code> refers to data of type <code>Integer</code>, and <code>frm</code> refers to an object of class <a class=\"xref\" href=\"../../../../../api/system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.  </p>\n<h2 id=\"object-arrays\">Object Arrays</h2>\n<p> You can declare and use an array of <code>Object</code> variables. This is useful when you need to handle a variety of data types and object classes. All the elements in an array must have the same declared data type. Declaring this data type as <code>Object</code> allows you to store objects and class instances alongside other data types in the array.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"object-variables\" data-linktype=\"relative-path\">Object Variables</a><br> <a href=\"object-variable-declaration\" data-linktype=\"relative-path\">Object Variable Declaration</a><br> <a href=\"object-variable-assignment\" data-linktype=\"relative-path\">Object Variable Assignment</a><br> <a href=\"how-to-refer-to-the-current-instance-of-an-object\" data-linktype=\"relative-path\">How to: Refer to the Current Instance of an Object</a><br> <a href=\"how-to-determine-what-type-an-object-variable-refers-to\" data-linktype=\"relative-path\">How to: Determine What Type an Object Variable Refers To</a><br> <a href=\"how-to-determine-whether-two-objects-are-related\" data-linktype=\"relative-path\">How to: Determine Whether Two Objects Are Related</a><br> <a href=\"how-to-determine-whether-two-objects-are-identical\" data-linktype=\"relative-path\">How to: Determine Whether Two Objects Are Identical</a><br> <a href=\"../data-types/index\" data-linktype=\"relative-path\">Data Types</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.tgt_pltfrm\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"31555704-58a3-49f1-9a0a-6421f605664f\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"18\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/variables/object-variable-values.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/variables/object-variable-values.md\">\r\n<meta name=\"document_id\" content=\"812d74f9-7386-e094-e16a-a8f9b57d2947\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Object Variable Values (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.tgt_pltfrm":"","ms.assetid":"31555704-58a3-49f1-9a0a-6421f605664f","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":18,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["object variables, values","values, of object variables","data types [Visual Basic], object variable","variables [Visual Basic], object"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/language-features/variables/object-variable-values.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/language-features/variables/object-variable-values.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/language-features/variables/object-variable-values.md","document_id":"812d74f9-7386-e094-e16a-a8f9b57d2947","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/variables/object-variable-values","toc_asset_id":"articles/visual-basic/programming-guide/language-features/variables/toc.json","toc_rel":"toc.json","_op_ogTitle":"Object Variable Values (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":475,"_op_rawTitle":"<h1 id=\"object-variable-values-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/language-features/variables/object-variable-values.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">Object Variable Values (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/programming-guide/language-features/variables/object-variable-values","fileRelativePath":"articles/visual-basic/programming-guide/language-features/variables/object-variable-values.html"},"themesRelativePathToOutputRoot":"_themes/"}