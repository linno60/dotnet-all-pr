{"content":"<div><div class=\"content\">\n<p>If you are consuming a class, module, or structure that has members of unsigned integer types, you can access these members with Visual Basic.  </p>\n<h3 id=\"to-call-a-windows-function-that-takes-an-unsigned-type\">To call a Windows function that takes an unsigned type</h3>\n<ol>\n<li><p>Use a <a href=\"../../language-reference/statements/declare-statement\" data-linktype=\"relative-path\">Declare Statement</a> to tell Visual Basic which library holds the function, what its name is in that library, what its calling sequence is, and how to convert strings when calling it.  </p>\n</li>\n<li><p>In the <code>Declare</code> statement, use <code>UInteger</code>, <code>ULong</code>, <code>UShort</code>, or <code>Byte</code> as appropriate for each parameter with an unsigned type.  </p>\n</li>\n<li><p>Consult the documentation for the Windows function you are calling to find the names and values of the constants it uses. Many of these are defined in the WinUser.h file.  </p>\n</li>\n<li><p>Declare the necessary constants in your code. Many Windows constants are 32-bit unsigned values, and you should declare these <code>As``UInteger</code>.  </p>\n</li>\n<li><p>Call the function in the normal way. The following example calls the Windows function <code>MessageBox</code>, which takes an unsigned integer argument.  </p>\n<pre class=\"loading\"><code>Public Class windowsMessage  \n    Private Declare Auto Function mb Lib &quot;user32.dll&quot; Alias &quot;MessageBox&quot; (  \n        ByVal hWnd As Integer,   \n        ByVal lpText As String,   \n        ByVal lpCaption As String,   \n        ByVal uType As UInteger) As Integer  \n    Private Const MB_OK As UInteger = 0  \n    Private Const MB_ICONEXCLAMATION As UInteger = &amp;H30  \n    Private Const IDOK As UInteger = 1  \n    Private Const IDCLOSE As UInteger = 8  \n    Private Const c As UInteger = MB_OK Or MB_ICONEXCLAMATION  \n    Public Function messageThroughWindows() As String  \n        Dim r As Integer = mb(0, &quot;Click OK if you see this!&quot;,   \n            &quot;Windows API call&quot;, c)  \n        Dim s As String = &quot;Windows API MessageBox returned &quot; &amp;  \n             CStr(r)&amp; vbCrLf &amp; &quot;(IDOK = &quot; &amp; CStr(IDOK) &amp;  \n             &quot;, IDCLOSE = &quot; &amp; CStr(IDCLOSE) &amp; &quot;)&quot;  \n        Return s  \n    End Function  \nEnd Class  \n</code></pre><p> You can test the function <code>messageThroughWindows</code> with the following code.  </p>\n<pre class=\"loading\"><code>Public Sub consumeWindowsMessage()  \n    Dim w As New windowsMessage  \n    w.messageThroughWindows()  \nEnd Sub  \n</code></pre><div class=\"CAUTION\"><h5>Caution</h5><p> The <code>UInteger</code>, <code>ULong</code>, <code>UShort</code>, and <code>SByte</code> data types are not part of the <a href=\"https://msdn.microsoft.com/library/12a7a7h3\" data-linktype=\"external\">Language Independence and Language-Independent Components</a> (CLS), so CLS-compliant code cannot consume a component that uses them.  </p>\n</div>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Making a call to unmanaged code, such as the Windows application programming interface (API), exposes your code to potential security risks.  </p>\n</div>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling the Windows API requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"../../../../api/system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.  </p>\n</div>\n</li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../../language-reference/data-types/data-type-summary\" data-linktype=\"relative-path\">Data Types</a><br> <a href=\"../../language-reference/data-types/integer-data-type\" data-linktype=\"relative-path\">Integer Data Type</a><br> <a href=\"../../language-reference/data-types/uinteger-data-type\" data-linktype=\"relative-path\">UInteger Data Type</a><br> <a href=\"../../language-reference/statements/declare-statement\" data-linktype=\"relative-path\">Declare Statement</a><br> <a href=\"walkthrough-calling-windows-apis\" data-linktype=\"relative-path\">Walkthrough: Calling Windows APIs</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"c2c0e712-8dc2-43b9-b4c6-345fbb02e7ce\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"18\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md\">\r\n<meta name=\"document_id\" content=\"f3a47dc3-a182-1f15-c686-80242c4b91f6\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Call a Windows Function that Takes Unsigned Types (Visual Basic) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"c2c0e712-8dc2-43b9-b4c6-345fbb02e7ce","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":18,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["Windows functions, calling","unsigned data types","UShort data type, using","functions [Visual Basic], calling Windows functions","ULong data type, using","UInteger data type, using","data types [Visual Basic], using","unsigned types","data types [Visual Basic], unsigned","data types [Visual Basic], numeric","unsigned types, using"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md","document_id":"f3a47dc3-a182-1f15-c686-80242c4b91f6","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"How to: Call a Windows Function that Takes Unsigned Types (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":393,"_op_rawTitle":"<h1 id=\"how-to-call-a-windows-function-that-takes-unsigned-types-visual-basic\" sourcefile=\"docs/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md\" sourcestartlinenumber=\"46\" sourceendlinenumber=\"46\">How to: Call a Windows Function that Takes Unsigned Types (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types","fileRelativePath":"articles/visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.html"},"themesRelativePathToOutputRoot":"_themes/"}