{"content":"<div><div class=\"content\">\n<p>Performs logical negation on a <code>Boolean</code> expression, or bitwise negation on a numeric expression.  </p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>\nresult = Not expression  \n</code></pre><h2 id=\"parts\">Parts</h2>\n<p> <code>result</code><br> Required. Any <code>Boolean</code> or numeric expression.  </p>\n<p> <code>expression</code><br> Required. Any <code>Boolean</code> or numeric expression.  </p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> For <code>Boolean</code> expressions, the following table illustrates how <code>result</code> is determined.  </p>\n<table>\n<thead>\n<tr>\n<th>If <code>expression</code> is</th>\n<th>The value of <code>result</code> is</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>True</code></td>\n<td><code>False</code></td>\n</tr>\n<tr>\n<td><code>False</code></td>\n<td><code>True</code></td>\n</tr>\n</tbody>\n</table>\n<p> For numeric expressions, the <code>Not</code> operator inverts the bit values of any numeric expression and sets the corresponding bit in <code>result</code> according to the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>If bit in <code>expression</code> is</th>\n<th>The bit in <code>result</code> is</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> Since the logical and bitwise operators have a lower precedence than other arithmetic and relational operators, any bitwise operations should be enclosed in parentheses to ensure accurate execution.  </p>\n</div>\n<h2 id=\"data-types\">Data Types</h2>\n<p> For a Boolean negation, the data type of the result is <code>Boolean</code>. For a bitwise negation, the result data type is the same as that of <code>expression</code>. However, if expression is <code>Decimal</code>, the result is <code>Long</code>.  </p>\n<h2 id=\"overloading\">Overloading</h2>\n<p> The <code>Not</code> operator can be <em>overloaded</em>, which means that a class or structure can redefine its behavior when its operand has the type of that class or structure. If your code uses this operator on such a class or structure, be sure you understand its redefined behavior. For more information, see <a href=\"../../programming-guide/language-features/procedures/operator-procedures\" data-linktype=\"relative-path\">Operator Procedures</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example uses the <code>Not</code> operator to perform logical negation on a <code>Boolean</code> expression. The result is a <code>Boolean</code> value that represents the reverse of the value of the expression.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#33\">        Dim a As Integer = 10\n        Dim b As Integer = 8\n        Dim c As Integer = 6\n        Dim firstCheck, secondCheck As Boolean\n        firstCheck = Not (a &gt; b)\n        secondCheck = Not (b &gt; a)\n</code></pre><p> The preceding example produces results of <code>False</code> and <code>True</code>, respectively.  </p>\n<h2 id=\"example-1\">Example</h2>\n<p> The following example uses the <code>Not</code> operator to perform logical negation of the individual bits of a numeric expression. The bit in the result pattern is set to the reverse of the corresponding bit in the operand pattern, including the sign bit.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#34\">        Dim a As Integer = 10\n        Dim b As Integer = 8\n        Dim c As Integer = 6\n        Dim firstPattern, secondPattern, thirdPattern As Integer\n        firstPattern = (Not a)\n        secondPattern = (Not b)\n        thirdPattern = (Not c)\n</code></pre><p> The preceding example produces results of –11, –9, and –7, respectively.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"logical-bitwise-operators\" data-linktype=\"relative-path\">Logical/Bitwise Operators (Visual Basic)</a><br> <a href=\"operator-precedence\" data-linktype=\"relative-path\">Operator Precedence in Visual Basic</a><br> <a href=\"operators-listed-by-functionality\" data-linktype=\"relative-path\">Operators Listed by Functionality</a><br> <a href=\"../../programming-guide/language-features/operators-and-expressions/logical-and-bitwise-operators\" data-linktype=\"relative-path\">Logical and Bitwise Operators in Visual Basic</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"8f2ea83c-d2ed-480a-a474-3042a1cad9b5\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"11\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/operators/not-operator.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/operators/not-operator.md\">\r\n<meta name=\"document_id\" content=\"425debaa-e206-e932-8421-a7cd2390a1f9\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Not Operator (Visual Basic) | Microsoft Docs","ms.suite":"","ms.assetid":"8f2ea83c-d2ed-480a-a474-3042a1cad9b5","f1_keywords":["vb.Not"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":11,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["Boolean expressions, negating","operators [Visual Basic], bitwise","negation operator","inverse bit values in variables","bitwise operators, NOT operator","bitwise comparison","Not operator [Visual Basic]","logical negation","operators [Visual Basic], negation"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/operators/not-operator.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/operators/not-operator.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/operators/not-operator.md","document_id":"425debaa-e206-e932-8421-a7cd2390a1f9","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/operators/not-operator","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"Not Operator (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":408,"_op_rawTitle":"<h1 id=\"not-operator-visual-basic\" sourcefile=\"docs/visual-basic/language-reference/operators/not-operator.md\" sourcestartlinenumber=\"46\" sourceendlinenumber=\"46\">Not Operator (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/operators/not-operator","fileRelativePath":"articles/visual-basic/language-reference/operators/not-operator.html"},"themesRelativePathToOutputRoot":"_themes/"}