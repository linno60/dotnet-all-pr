{"content":"<div><div class=\"content\">\n<p>Performs an arithmetic left shift on the value of a variable or property and assigns the result back to the variable or property.  </p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>\nvariableorproperty &lt;&lt;= amount  \n</code></pre><h2 id=\"parts\">Parts</h2>\n<p> <code>variableorproperty</code><br> Required. Variable or property of an integral type (<code>SByte</code>, <code>Byte</code>, <code>Short</code>, <code>UShort</code>, <code>Integer</code>, <code>UInteger</code>, <code>Long</code>, or <code>ULong</code>).  </p>\n<p> <code>amount</code><br> Required. Numeric expression of a data type that widens to <code>Integer</code>.  </p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> The element on the left side of the <code>&lt;&lt;=</code> operator can be a simple scalar variable, a property, or an element of an array. The variable or property cannot be <a href=\"../modifiers/readonly\" data-linktype=\"relative-path\">ReadOnly</a>.  </p>\n<p> The <code>&lt;&lt;=</code> operator first performs an arithmetic left shift on the value of the variable or property. The operator then assigns the result of that operation back to that variable or property.  </p>\n<p> Arithmetic shifts are not circular, which means the bits shifted off one end of the result are not reintroduced at the other end. In an arithmetic left shift, the bits shifted beyond the range of the result data type are discarded, and the bit positions vacated on the right are set to zero.  </p>\n<h2 id=\"overloading\">Overloading</h2>\n<p> The <a href=\"left-shift-operator\" data-linktype=\"relative-path\">&lt;&lt; Operator</a> can be <em>overloaded</em>, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure. Overloading the <code>&lt;&lt;</code> operator affects the behavior of the <code>&lt;&lt;=</code> operator. If your code uses <code>&lt;&lt;=</code> on a class or structure that overloads <code>&lt;&lt;</code>, be sure you understand its redefined behavior. For more information, see <a href=\"../../programming-guide/language-features/procedures/operator-procedures\" data-linktype=\"relative-path\">Operator Procedures</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example uses the <code>&lt;&lt;=</code> operator to shift the bit pattern of an <code>Integer</code> variable left by the specified amount and assign the result to the variable.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#13\">Dim var As Integer = 10\nDim shift As Integer = 3\nvar &lt;&lt;= shift\n&#39; The value of var is now 80.\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"left-shift-operator\" data-linktype=\"relative-path\">&lt;&lt; Operator</a><br> <a href=\"assignment-operators\" data-linktype=\"relative-path\">Assignment Operators</a><br> <a href=\"bit-shift-operators\" data-linktype=\"relative-path\">Bit Shift Operators</a><br> <a href=\"operator-precedence\" data-linktype=\"relative-path\">Operator Precedence in Visual Basic</a><br> <a href=\"operators-listed-by-functionality\" data-linktype=\"relative-path\">Operators Listed by Functionality</a><br> <a href=\"../../programming-guide/language-features/statements\" data-linktype=\"relative-path\">Statements</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"8ad26613-faff-4e2f-89ee-63feee33bfda\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"17\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/operators/left-shift-assignment-operator.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/operators/left-shift-assignment-operator.md\">\r\n<meta name=\"document_id\" content=\"a6e7fec8-1a01-b5e1-6765-8e6dc2e8e018\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc1.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"&lt;&lt;= Operator (Visual Basic) | Microsoft Docs","ms.suite":"","ms.assetid":"8ad26613-faff-4e2f-89ee-63feee33bfda","f1_keywords":["vb.<<="],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":17,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["operator <<=","assignment statements, compound","<<= operator [Visual Basic]","statements [Visual Basic], compound assignment","operator<<=","compound assignment statements"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/operators/left-shift-assignment-operator.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/operators/left-shift-assignment-operator.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/operators/left-shift-assignment-operator.md","document_id":"a6e7fec8-1a01-b5e1-6765-8e6dc2e8e018","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/operators/left-shift-assignment-operator","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"&lt;&lt;= Operator (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":312,"_op_rawTitle":"<h1 id=\"ltlt-operator-visual-basic\" sourcefile=\"docs/visual-basic/language-reference/operators/left-shift-assignment-operator.md\" sourcestartlinenumber=\"43\" sourceendlinenumber=\"43\">&lt;&lt;= Operator (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/operators/left-shift-assignment-operator","fileRelativePath":"articles/visual-basic/language-reference/operators/left-shift-assignment-operator.html"},"themesRelativePathToOutputRoot":"_themes/"}