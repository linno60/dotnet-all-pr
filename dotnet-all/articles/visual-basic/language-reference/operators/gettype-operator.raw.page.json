{"content":"<div><div class=\"content\">\n<p>Returns a <a class=\"xref\" href=\"../../../../api/system.type\" data-linktype=\"relative-path\">Type</a> object for the specified type. The <a class=\"xref\" href=\"../../../../api/system.type\" data-linktype=\"relative-path\">Type</a> object provides information about the type such as its properties, methods, and events.  </p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>GetType(typename)  \n</code></pre><h4 id=\"parameters\">Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>typename</code></td>\n<td>The name of the type for which you desire information.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"remarks\">Remarks</h2>\n<p> The <code>GetType</code> operator returns the <a class=\"xref\" href=\"../../../../api/system.type\" data-linktype=\"relative-path\">Type</a> object for the specified <code>typename</code>. You can pass the name of any defined type in <code>typename</code>. This includes the following:  </p>\n<ul>\n<li><p>Any Visual Basic data type, such as <code>Boolean</code> or <code>Date</code>.  </p>\n</li>\n<li><p>Any .NET Framework class, structure, module, or interface, such as <a class=\"xref\" href=\"../../../../api/system.argumentexception\" data-linktype=\"relative-path\">System.ArgumentException</a> or <a class=\"xref\" href=\"../../../../api/system.double\" data-linktype=\"relative-path\">System.Double</a>.  </p>\n</li>\n<li><p>Any class, structure, module, or interface defined by your application.  </p>\n</li>\n<li><p>Any array defined by your application.  </p>\n</li>\n<li><p>Any delegate defined by your application.  </p>\n</li>\n<li><p>Any enumeration defined by Visual Basic, the .NET Framework, or your application.  </p>\n</li>\n</ul>\n<p> If you want to get the type object of an object variable, use the <a class=\"xref\" href=\"../../../../api/system.type#System_Type_GetType_\" data-linktype=\"relative-path\">GetType</a> method.  </p>\n<p> The <code>GetType</code> operator can be useful in the following circumstances:  </p>\n<ul>\n<li><p>You must access the metadata for a type at run time. The <a class=\"xref\" href=\"../../../../api/system.type\" data-linktype=\"relative-path\">Type</a> object supplies metadata such as type members and deployment information. You need this, for example, to reflect over an assembly. For more information, see <a class=\"xref\" href=\"../../../../api/system.reflection\" data-linktype=\"relative-path\">System.Reflection</a>.  </p>\n</li>\n<li><p>You want to compare two object references to see if they refer to instances of the same type. If they do, <code>GetType</code> returns references to the same <a class=\"xref\" href=\"../../../../api/system.type\" data-linktype=\"relative-path\">Type</a> object.  </p>\n</li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<p> The following examples show the <code>GetType</code> operator in use.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrOperators#26\">&#39; The following statement returns the Type object for Integer.\nMsgBox(GetType(Integer).ToString())\n&#39; The following statement returns the Type object for one-dimensional string arrays.\nMsgBox(GetType(String()).ToString())\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"operator-precedence\" data-linktype=\"relative-path\">Operator Precedence in Visual Basic</a><br> <a href=\"operators-listed-by-functionality\" data-linktype=\"relative-path\">Operators Listed by Functionality</a><br> <a href=\"../../programming-guide/language-features/operators-and-expressions/index\" data-linktype=\"relative-path\">Operators and Expressions</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"4f733297-2503-4607-850c-15eba65fff90\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"17\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/operators/gettype-operator.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/operators/gettype-operator.md\">\r\n<meta name=\"document_id\" content=\"0684bc21-0f06-a14b-b888-4bce55175eab\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc1.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"GetType Operator (Visual Basic) | Microsoft Docs","ms.suite":"","ms.assetid":"4f733297-2503-4607-850c-15eba65fff90","f1_keywords":["vb.GetType"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":17,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["GetType operator","GetType keyword"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/operators/gettype-operator.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/operators/gettype-operator.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/operators/gettype-operator.md","document_id":"0684bc21-0f06-a14b-b888-4bce55175eab","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/operators/gettype-operator","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"GetType Operator (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":255,"_op_rawTitle":"<h1 id=\"gettype-operator-visual-basic\" sourcefile=\"docs/visual-basic/language-reference/operators/gettype-operator.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">GetType Operator (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/operators/gettype-operator","fileRelativePath":"articles/visual-basic/language-reference/operators/gettype-operator.html"},"themesRelativePathToOutputRoot":"_themes/"}