{"content":"<div><div class=\"content\">\n<p>The type for variable &#39;&lt;variablename&gt;&#39; will not be inferred because it is bound to a field in an enclosing scope. Either change the name of &#39;&lt;variablename&gt;&#39;, or use the fully qualified name (for example, &#39;Me.variablename&#39; or &#39;MyBase.variablename&#39;).  </p>\n<p> A loop control variable in your code has the same name as a field of the class or other enclosing scope. Because the control variable is used without an <code>As</code> clause, it is bound to the field in the enclosing scope, and the compiler does not create a new variable for it or infer its type.  </p>\n<p> In the following example, <code>Index</code>, the control variable in the <code>For</code> statement, is bound to the <code>Index</code> field in the <code>Customer</code> class. The compiler does not create a new variable for the control variable <code>Index</code> or infer its type.  </p>\n<pre class=\"loading\"><code>Class Customer  \n\n    &#39; The class has a field named Index.  \n    Private Index As Integer  \n\n    Sub Main()  \n\n    &#39; The following line will raise this warning.  \n        For Index = 1 To 10  \n            &#39; ...  \n        Next  \n\n    End Sub  \nEnd Class  \n</code></pre><p> By default, this message is a warning. For information about how to hide warnings or how to treat warnings as errors, see <a href=\"https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic\" data-linktype=\"external\">Configuring Warnings in Visual Basic</a>.  </p>\n<p> <strong>Error ID:</strong> BC42110  </p>\n<h3 id=\"to-address-this-warning\">To address this warning</h3>\n<ul>\n<li><p>Make the loop control variable local by changing its name to an identifier that is not also the name of a field of the class.  </p>\n<pre class=\"loading\"><code>For I = 1 To 10  \n</code></pre></li>\n<li><p>Clarify that the loop control variable binds to the class field by prefixing <code>Me.</code> to the variable name.  </p>\n<pre class=\"loading\"><code>For Me.Index = 1 To 10  \n</code></pre></li>\n<li><p>Instead of relying on local type inference, use an <code>As</code> clause to specify a type for the loop control variable.  </p>\n<pre class=\"loading\"><code>For Index As Integer = 1 To 10  \n</code></pre></li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<p> The following code shows the earlier example with the first correction in place.  </p>\n<pre class=\"loading\"><code>Class Customer  \n\n    &#39; The class has a field named Index.  \n    Private Index As Integer  \n\n    Sub Main()  \n\n        For I = 1 To 10  \n            &#39; ...  \n        Next  \n\n    End Sub  \nEnd Class  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../statements/option-infer-statement\" data-linktype=\"relative-path\">Option Infer Statement</a><br> <a href=\"../statements/for-each-next-statement\" data-linktype=\"relative-path\">For Each...Next Statement</a><br> <a href=\"../statements/for-next-statement\" data-linktype=\"relative-path\">For...Next Statement</a><br> <a href=\"../../programming-guide/language-features/variables/how-to-refer-to-the-current-instance-of-an-object\" data-linktype=\"relative-path\">How to: Refer to the Current Instance of an Object</a><br> <a href=\"../../programming-guide/language-features/variables/local-type-inference\" data-linktype=\"relative-path\">Local Type Inference</a><br> <a href=\"../../programming-guide/program-structure/me-my-mybase-and-myclass\" data-linktype=\"relative-path\">Me, My, MyBase, and MyClass</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"ef4442eb-08d1-434f-a03b-4aa2ed4e4414\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"33\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred.md\">\r\n<meta name=\"document_id\" content=\"7d01029c-6fd5-791d-944b-2cd7bbf4b85f\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"The type for variable &#39;&lt;variablename&gt;&#39; will not be inferred because it is bound to a field in an enclosing scope | Microsoft Docs","ms.suite":"","ms.assetid":"ef4442eb-08d1-434f-a03b-4aa2ed4e4414","f1_keywords":["vbc42110","bc42110"],"translation.priority.ht":["de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","ru-ru","zh-cn","zh-tw"],"caps.latest.revision":33,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["BC42110"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Absolute urls and other fixes (#1281)","commit_sha":"f7dffe4885b331cec8d37f3cc5c9163f69c3b4c9","commit_date":"2016-11-22 12:57:26 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred.md","document_id":"7d01029c-6fd5-791d-944b-2cd7bbf4b85f","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"The type for variable &#39;&lt;variablename&gt;&#39; will not be inferred because it is bound to a field in an enclosing scope","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":355,"_op_rawTitle":"<h1 id=\"the-type-for-variable-39ltvariablenamegt39-will-not-be-inferred-because-it-is-bound-to-a-field-in-an-enclosing-scope\" sourcefile=\"docs/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred.md\" sourcestartlinenumber=\"40\" sourceendlinenumber=\"40\">The type for variable &#39;&lt;variablename&gt;&#39; will not be inferred because it is bound to a field in an enclosing scope</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred","fileRelativePath":"articles/visual-basic/language-reference/error-messages/the-type-for-variable-variablename-will-not-be-inferred.html"},"themesRelativePathToOutputRoot":"_themes/"}