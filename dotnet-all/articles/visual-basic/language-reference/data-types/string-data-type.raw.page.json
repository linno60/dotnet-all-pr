{"content":"<div><div class=\"content\">\n<p>Holds sequences of unsigned 16-bit (2-byte) code points that range in value from 0 through 65535. Each <em>code point</em>, or character code, represents a single Unicode character. A string can contain from 0 to approximately two billion (2 ^ 31) Unicode characters.  </p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> Use the <code>String</code> data type to hold multiple characters without the array management overhead of <code>Char()</code>, an array of <code>Char</code> elements.  </p>\n<p> The default value of <code>String</code> is <code>Nothing</code> (a null reference). Note that this is not the same as the empty string (value <code>&quot;&quot;</code>).  </p>\n<h2 id=\"unicode-characters\">Unicode Characters</h2>\n<p> The first 128 code points (0–127) of Unicode correspond to the letters and symbols on a standard U.S. keyboard. These first 128 code points are the same as those the ASCII character set defines. The second 128 code points (128–255) represent special characters, such as Latin-based alphabet letters, accents, currency symbols, and fractions. Unicode uses the remaining code points (256-65535) for a wide variety of symbols. This includes worldwide textual characters, diacritics, and mathematical and technical symbols.  </p>\n<p> You can use methods such as <a class=\"xref\" href=\"../../../../api/system.char#System_Char_IsDigit_\" data-linktype=\"relative-path\">IsDigit</a> and <a class=\"xref\" href=\"../../../../api/system.char#System_Char_IsPunctuation_\" data-linktype=\"relative-path\">IsPunctuation</a> on an individual character in a <code>String</code> variable to determine its Unicode classification.  </p>\n<h2 id=\"format-requirements\">Format Requirements</h2>\n<p> You must enclose a <code>String</code> literal within quotation marks (<code>&quot; &quot;</code>). If you must include a quotation mark as one of the characters in the string, you use two contiguous quotation marks (<code>&quot;&quot;</code>). The following example illustrates this.  </p>\n<pre class=\"loading\"><code>Dim j As String = &quot;Joe said &quot;&quot;Hello&quot;&quot; to me.&quot;  \nDim h As String = &quot;Hello&quot;  \n&#39; The following messages all display the same thing:  \n&#39; &quot;Joe said &quot;Hello&quot; to me.&quot;  \nMsgBox(j)  \nMsgBox(&quot;Joe said &quot; &amp; &quot;&quot;&quot;&quot; &amp; h &amp; &quot;&quot;&quot;&quot; &amp; &quot; to me.&quot;)  \nMsgBox(&quot;Joe said &quot;&quot;&quot; &amp; h &amp; &quot;&quot;&quot; to me.&quot;)  \n</code></pre><p> Note that the contiguous quotation marks that represent a quotation mark in the string are independent of the quotation marks that begin and end the <code>String</code> literal.  </p>\n<h2 id=\"string-manipulations\">String Manipulations</h2>\n<p> Once you assign a string to a <code>String</code> variable, that string is <em>immutable</em>, which means you cannot change its length or contents. When you alter a string in any way, Visual Basic creates a new string and abandons the previous one. The <code>String</code> variable then points to the new string.  </p>\n<p> You can manipulate the contents of a <code>String</code> variable by using a variety of string functions. The following example illustrates the <a class=\"xref\" href=\"../../../../api/microsoft.visualbasic.strings#Microsoft_VisualBasic_Strings_Left_\" data-linktype=\"relative-path\">Left</a> function  </p>\n<pre class=\"loading\"><code>Dim S As String = &quot;Database&quot;  \n&#39; The following statement sets S to a new string containing &quot;Data&quot;.  \nS = Microsoft.VisualBasic.Left(S, 4)  \n</code></pre><p> A string created by another component might be padded with leading or trailing spaces. If you receive such a string, you can use the <a class=\"xref\" href=\"../../../../api/microsoft.visualbasic.strings#Microsoft_VisualBasic_Strings_Trim_\" data-linktype=\"relative-path\">Trim</a>, <a class=\"xref\" href=\"../../../../api/microsoft.visualbasic.strings#Microsoft_VisualBasic_Strings_LTrim_\" data-linktype=\"relative-path\">LTrim</a>, and <a class=\"xref\" href=\"../../../../api/microsoft.visualbasic.strings#Microsoft_VisualBasic_Strings_RTrim_\" data-linktype=\"relative-path\">RTrim</a> functions to remove these spaces.  </p>\n<p> For more information about string manipulations, see <a href=\"../../programming-guide/language-features/strings/index\" data-linktype=\"relative-path\">Strings</a>.  </p>\n<h2 id=\"programming-tips\">Programming Tips</h2>\n<ul>\n<li><p><strong>Negative Numbers.</strong> Remember that the characters held by <code>String</code> are unsigned and cannot represent negative values. In any case, you should not use <code>String</code> to hold numeric values.  </p>\n</li>\n<li><p><strong>Interop Considerations.</strong> If you are interfacing with components not written for the .NET Framework, for example Automation or COM objects, remember that string characters have a different data width (8 bits) in other environments. If you are passing a string argument of 8-bit characters to such a component, declare it as <code>Byte()</code>, an array of <code>Byte</code> elements, instead of <code>String</code> in your new Visual Basic code.  </p>\n</li>\n<li><p><strong>Type Characters.</strong> Appending the identifier type character <code>$</code> to any identifier forces it to the <code>String</code> data type. <code>String</code> has no literal type character. However, the compiler treats literals enclosed in quotation marks (<code>&quot; &quot;</code>) as <code>String</code>.  </p>\n</li>\n<li><p><strong>Framework Type.</strong> The corresponding type in the .NET Framework is the <a class=\"xref\" href=\"../../../../api/system.string\" data-linktype=\"relative-path\">System.String</a> class.  </p>\n</li>\n</ul>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.string\" data-linktype=\"relative-path\">System.String</a><br> <a href=\"data-type-summary\" data-linktype=\"relative-path\">Data Types</a><br> <a href=\"char-data-type\" data-linktype=\"relative-path\">Char Data Type</a><br> <a href=\"../functions/type-conversion-functions\" data-linktype=\"relative-path\">Type Conversion Functions</a><br> <a href=\"../keywords/conversion-summary\" data-linktype=\"relative-path\">Conversion Summary</a><br> <a href=\"../../programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types\" data-linktype=\"relative-path\">How to: Call a Windows Function that Takes Unsigned Types</a><br> <a href=\"../../programming-guide/language-features/data-types/efficient-use-of-data-types\" data-linktype=\"relative-path\">Efficient Use of Data Types</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"15ac03f5-cabd-42cc-a754-1df3893c25d9\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"19\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/61b023337e17f571230e3cd48e3badba97274f6f/docs/visual-basic/language-reference/data-types/string-data-type.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/data-types/string-data-type.md\">\r\n<meta name=\"document_id\" content=\"55c434a2-4397-4967-b29b-e0272293e6a7\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"String Data Type (Visual Basic) | Microsoft Docs","ms.suite":"","ms.assetid":"15ac03f5-cabd-42cc-a754-1df3893c25d9","f1_keywords":["vb.String"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":19,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["strings [Visual Basic], character","strings [Visual Basic], fixed-length","string keyword [Visual Basic]","fixed-length strings, string data type","literals, string","text [Visual Basic], String data type","$ identifier type character","String data type","fixed-length strings","string literals","data types [Visual Basic], assigning","String literals","identifier type characters, $"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"removed quote causing rendering issues (#1407)","commit_sha":"61b023337e17f571230e3cd48e3badba97274f6f","commit_date":"2017-01-13 23:35:53 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/61b023337e17f571230e3cd48e3badba97274f6f/docs/visual-basic/language-reference/data-types/string-data-type.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/data-types/string-data-type.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/data-types/string-data-type.md","document_id":"55c434a2-4397-4967-b29b-e0272293e6a7","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/data-types/string-data-type","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"String Data Type (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":613,"_op_rawTitle":"<h1 id=\"string-data-type-visual-basic\" sourcefile=\"docs/visual-basic/language-reference/data-types/string-data-type.md\" sourcestartlinenumber=\"50\" sourceendlinenumber=\"50\">String Data Type (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/data-types/string-data-type","fileRelativePath":"articles/visual-basic/language-reference/data-types/string-data-type.html"},"themesRelativePathToOutputRoot":"_themes/"}