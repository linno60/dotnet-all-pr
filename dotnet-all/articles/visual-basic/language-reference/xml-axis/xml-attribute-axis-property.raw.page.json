{"content":"<div><div class=\"content\">\n<p>Provides access to the value of an attribute for an <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> object or to the first element in a collection of <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> objects.  </p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>\n      object.@attribute  \n-or-  \nobject.@&lt;attribute&gt;  \n</code></pre><h2 id=\"parts\">Parts</h2>\n<p> <code>object</code><br> Required. An <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> object or a collection of <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> objects.  </p>\n<p> .@<br> Required. Denotes the start of an attribute axis property.  </p>\n<p> &lt;<br> Optional. Denotes the beginning of the name of the attribute when <code>attribute</code> is not a valid identifier in Visual Basic.  </p>\n<p> <code>attribute</code><br> Required. Name of the attribute to access, of the form [<code>prefix</code>:]<code>name</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Part</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>prefix</code></td>\n<td>Optional. XML namespace prefix for the attribute. Must be a global XML namespace defined with an <code>Imports</code> statement.</td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>Required. Local attribute name. See <a href=\"../../programming-guide/language-features/xml/names-of-declared-xml-elements-and-attributes\" data-linktype=\"relative-path\">Names of Declared XML Elements and Attributes</a>.</td>\n</tr>\n</tbody>\n</table>\n<p> ><br> Optional. Denotes the end of the name of the attribute when <code>attribute</code> is not a valid identifier in Visual Basic.  </p>\n<h2 id=\"return-value\">Return Value</h2>\n<p> A string that contains the value of <code>attribute</code>. If the attribute name does not exist, <code>Nothing</code> is returned.  </p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> You can use an XML attribute axis property to access the value of an attribute by name from an <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> object or from the first element in a collection of <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> objects. You can retrieve an attribute value by name, or add a new attribute to an element by specifying a new name preceded by the @ identifier.  </p>\n<p> When you refer to an XML attribute using the @ identifier, the attribute value is returned as a string and you do not need to explicitly specify the <a class=\"xref\" href=\"../../../../api/system.xml.linq.xattribute#System_Xml_Linq_XAttribute_Value_\" data-linktype=\"relative-path\">Value</a> property.  </p>\n<p> The naming rules for XML attributes differ from the naming rules for Visual Basic identifiers. To access an XML attribute that has a name that is not a valid Visual Basic identifier, enclose the name in angle brackets (&lt; and &gt;).  </p>\n<h2 id=\"xml-namespaces\">XML Namespaces</h2>\n<p> The name in an attribute axis property can use only XML namespace prefixes declared globally by using the <code>Imports</code> statement. It cannot use XML namespace prefixes declared locally within XML element literals. For more information, see <a href=\"../statements/imports-statement-xml-namespace\" data-linktype=\"relative-path\">Imports Statement (XML Namespace)</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example shows how to get the values of the XML attributes named <code>type</code> from a collection of XML elements that are named <code>phone</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbXMLSamples#12\">        &#39; Topic: XML Attribute Axis Property\n        Dim phones As XElement = \n            &lt;phones&gt;\n                &lt;phone type=&quot;home&quot;&gt;206-555-0144&lt;/phone&gt;\n                &lt;phone type=&quot;work&quot;&gt;425-555-0145&lt;/phone&gt;\n            &lt;/phones&gt;\n\n        Dim phoneTypes As XElement = \n          &lt;phoneTypes&gt;\n              &lt;%= From phone In phones.&lt;phone&gt; \n                  Select &lt;type&gt;&lt;%= phone.@type %&gt;&lt;/type&gt; \n              %&gt;\n          &lt;/phoneTypes&gt;\n\n        Console.WriteLine(phoneTypes)\n</code></pre><p> This code displays the following text:  </p>\n<p> <code>&lt;phoneTypes&gt;</code>  </p>\n<p> <code>&lt;type&gt;home&lt;/type&gt;</code>  </p>\n<p> <code>&lt;type&gt;work&lt;/type&gt;</code>  </p>\n<p> <code>&lt;/phoneTypes&gt;</code>  </p>\n<h2 id=\"example-1\">Example</h2>\n<p> The following example shows how to create attributes for an XML element both declaratively, as part of the XML, and dynamically by adding an attribute to an instance of an <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> object. The <code>type</code> attribute is created declaratively and the <code>owne</code>r attribute is created dynamically.  </p>\n<pre><code class=\"lang-vb\" name=\"VbXMLSamples#44\">        Dim phone2 As XElement = &lt;phone type=&quot;home&quot;&gt;206-555-0144&lt;/phone&gt;\n        phone2.@owner = &quot;Harris, Phyllis&quot;\n\n        Console.WriteLine(phone2)\n</code></pre><p> This code displays the following text:  </p>\n<pre class=\"loading\"><code>&lt;phone type=&quot;home&quot; owner=&quot;Harris, Phyllis&quot;&gt;206-555-0144&lt;/phone&gt;  \n</code></pre><h2 id=\"example-2\">Example</h2>\n<p> The following example uses the angle bracket syntax to get the value of the XML attribute named <code>number-type</code>, which is not a valid identifier in Visual Basic.  </p>\n<pre><code class=\"lang-vb\" name=\"VbXMLSamples#13\">       Dim phone As XElement = \n            &lt;phone number-type=&quot; work&quot;&gt;425-555-0145&lt;/phone&gt;\n\n        Console.WriteLine(&quot;Phone type: &quot; &amp; phone.@&lt;number-type&gt;)\n</code></pre><p> This code displays the following text:  </p>\n<p> <code>Phone type: work</code>  </p>\n<h2 id=\"example-3\">Example</h2>\n<p> The following example declares <code>ns</code> as an XML namespace prefix. It then uses the prefix of the namespace to create an XML literal and access the first child node with the qualified name &quot;<code>ns:name</code>&quot;.  </p>\n<pre><code class=\"lang-vb\" name=\"VbXMLSamples#14\">Imports &lt;xmlns:ns = &quot;http://SomeNamespace&quot;&gt; \n \nClass TestClass3\n\n    Shared Sub TestPrefix()\n        Dim phone = \n            &lt;ns:phone ns:type=&quot;home&quot;&gt;206-555-0144&lt;/ns:phone&gt;\n\n        Console.WriteLine(&quot;Phone type: &quot; &amp; phone.@ns:type)\n    End Sub\n\nEnd Class\n</code></pre><p> This code displays the following text:  </p>\n<p> <code>Phone type: home</code>  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a><br> <a href=\"xml-axis-properties\" data-linktype=\"relative-path\">XML Axis Properties</a><br> <a href=\"../xml-literals/index\" data-linktype=\"relative-path\">XML Literals</a><br> <a href=\"../../programming-guide/language-features/xml/creating-xml\" data-linktype=\"relative-path\">Creating XML in Visual Basic</a><br> <a href=\"../../programming-guide/language-features/xml/names-of-declared-xml-elements-and-attributes\" data-linktype=\"relative-path\">Names of Declared XML Elements and Attributes</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"7a4777e1-0618-4de9-9510-fb9ace2bf4db\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"23\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md\">\r\n<meta name=\"document_id\" content=\"b032718c-d961-c101-5087-39a567806be6\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"XML Attribute Axis Property (Visual Basic) | Microsoft Docs","ms.suite":"","ms.assetid":"7a4777e1-0618-4de9-9510-fb9ace2bf4db","f1_keywords":["vb.XmlPropertyAttributeAxis"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":23,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["attribute axis property [Visual Basic]","Visual Basic code, accessing XML","XML attribute axis property [Visual Basic]","XML axis [Visual Basic], attribute","XML [Visual Basic], accessing"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md","document_id":"b032718c-d961-c101-5087-39a567806be6","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/xml-axis/xml-attribute-axis-property","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"XML Attribute Axis Property (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":599,"_op_rawTitle":"<h1 id=\"xml-attribute-axis-property-visual-basic\" sourcefile=\"docs/visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md\" sourcestartlinenumber=\"42\" sourceendlinenumber=\"42\">XML Attribute Axis Property (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/xml-axis/xml-attribute-axis-property","fileRelativePath":"articles/visual-basic/language-reference/xml-axis/xml-attribute-axis-property.html"},"themesRelativePathToOutputRoot":"_themes/"}