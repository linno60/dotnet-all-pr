{"content":"<div><div class=\"content\">\n<p>Runs one of several groups of statements, depending on the value of an expression.  </p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>Select [ Case ] testexpression  \n    [ Case expressionlist  \n        [ statements ] ]  \n    [ Case Else  \n        [ elsestatements ] ]  \nEnd Select  \n</code></pre><h2 id=\"parts\">Parts</h2>\n<table>\n<thead>\n<tr>\n<th>Term</th>\n<th>Definition</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>testexpression</code></td>\n<td>Required. Expression. Must evaluate to one of the elementary data types (<code>Boolean</code>, <code>Byte</code>, <code>Char</code>, <code>Date</code>, <code>Double</code>, <code>Decimal</code>, <code>Integer</code>, <code>Long</code>, <code>Object</code>, <code>SByte</code>, <code>Short</code>, <code>Single</code>, <code>String</code>, <code>UInteger</code>, <code>ULong</code>, and <code>UShort</code>).</td>\n</tr>\n<tr>\n<td><code>expressionlist</code></td>\n<td>Required in a <code>Case</code> statement. List of expression clauses representing match values for <code>testexpression</code>. Multiple expression clauses are separated by commas. Each clause can take one of the following forms:<br><br> -   <em>expression1</em> <code>To</code> <em>expression2</em><br>-   [ <code>Is</code> ] <em>comparisonoperator</em> <em>expression</em><br>-   <em>expression</em><br><br> Use the <code>To</code> keyword to specify the boundaries of a range of match values for <code>testexpression</code>. The value of <code>expression1</code> must be less than or equal to the value of <code>expression2</code>.<br><br> Use the <code>Is</code> keyword with a comparison operator (<code>=</code>, <code>&lt;&gt;</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, or <code>&gt;=</code>) to specify a restriction on the match values for <code>testexpression</code>. If the <code>Is</code> keyword is not supplied, it is automatically inserted before <em>comparisonoperator</em>.<br><br> The form specifying only <code>expression</code> is treated as a special case of the <code>Is</code> form where <em>comparisonoperator</em> is the equal sign (<code>=</code>). This form is evaluated as <code>testexpression</code> = <code>expression</code>.<br><br> The expressions in <code>expressionlist</code> can be of any data type, provided they are implicitly convertible to the type of <code>testexpression</code> and the appropriate <code>comparisonoperator</code> is valid for the two types it is being used with.</td>\n</tr>\n<tr>\n<td><code>statements</code></td>\n<td>Optional. One or more statements following <code>Case</code> that run if <code>testexpression</code> matches any clause in <code>expressionlist</code>.</td>\n</tr>\n<tr>\n<td><code>elsestatements</code></td>\n<td>Optional. One or more statements following <code>Case Else</code> that run if <code>testexpression</code> does not match any clause in the <code>expressionlist</code> of any of the <code>Case</code> statements.</td>\n</tr>\n<tr>\n<td><code>End Select</code></td>\n<td>Terminates the definition of the <code>Select</code>...<code>Case</code> construction.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"remarks\">Remarks</h2>\n<p> If <code>testexpression</code> matches any <code>Case</code> <code>expressionlist</code> clause, the statements following that <code>Case</code> statement run up to the next <code>Case</code>, <code>Case Else</code>, or <code>End Select</code> statement. Control then passes to the statement following <code>End Select</code>. If <code>testexpression</code> matches an <code>expressionlist</code> clause in more than one <code>Case</code> clause, only the statements following the first match run.  </p>\n<p> The <code>Case Else</code> statement is used to introduce the <code>elsestatements</code> to run if no match is found between the <code>testexpression</code> and an <code>expressionlist</code> clause in any of the other <code>Case</code> statements. Although not required, it is a good idea to have a <code>Case Else</code> statement in your <code>Select Case</code> construction to handle unforeseen <code>testexpression</code> values. If no <code>Case</code> <code>expressionlist</code> clause matches <code>testexpression</code> and there is no <code>Case Else</code> statement, control passes to the statement following <code>End Select</code>.  </p>\n<p> You can use multiple expressions or ranges in each <code>Case</code> clause. For example, the following line is valid.  </p>\n<p> <code>Case 1 To 4, 7 To 9, 11, 13, Is &gt; maxNumber</code>  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>Is</code> keyword used in the <code>Case</code> and <code>Case Else</code> statements is not the same as the <a href=\"../operators/is-operator\" data-linktype=\"relative-path\">Is Operator</a>, which is used for object reference comparison.  </p>\n</div>\n<p> You can specify ranges and multiple expressions for character strings. In the following example, <code>Case</code> matches any string that is exactly equal to &quot;apples&quot;, has a value between &quot;nuts&quot; and &quot;soup&quot; in alphabetical order, or contains the exact same value as the current value of <code>testItem</code>.  </p>\n<p> <code>Case &quot;apples&quot;, &quot;nuts&quot; To &quot;soup&quot;, testItem</code>  </p>\n<p> The setting of <code>Option Compare</code> can affect string comparisons. Under <code>Option Compare Text</code>, the strings &quot;Apples&quot; and &quot;apples&quot; compare as equal, but under <code>Option Compare Binary</code>, they do not.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> A <code>Case</code> statement with multiple clauses can exhibit behavior known as <em>short-circuiting</em>. Visual Basic evaluates the clauses from left to right, and if one produces a match with <code>testexpression</code>, the remaining clauses are not evaluated. Short-circuiting can improve performance, but it can produce unexpected results if you are expecting every expression in <code>expressionlist</code> to be evaluated. For more information on short-circuiting, see <a href=\"../../programming-guide/language-features/operators-and-expressions/boolean-expressions\" data-linktype=\"relative-path\">Boolean Expressions</a>.  </p>\n</div>\n<p> If the code within a <code>Case</code> or <code>Case Else</code> statement block does not need to run any more of the statements in the block, it can exit the block by using the <code>Exit Select</code> statement. This transfers control immediately to the statement following <code>End Select</code>.  </p>\n<p> <code>Select Case</code> constructions can be nested. Each nested <code>Select Case</code> construction must have a matching <code>End Select</code> statement and must be completely contained within a single <code>Case</code> or <code>Case Else</code> statement block of the outer <code>Select Case</code> construction within which it is nested.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example uses a <code>Select Case</code> construction to write a line corresponding to the value of the variable <code>number</code>. The second <code>Case</code> statement contains the value that matches the current value of <code>number</code>, so the statement that writes &quot;Between 6 and 8, inclusive&quot; runs.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStatements#54\">Dim number As Integer = 8\nSelect Case number\n    Case 1 To 5\n        Debug.WriteLine(&quot;Between 1 and 5, inclusive&quot;)\n        &#39; The following is the only Case clause that evaluates to True.\n    Case 6, 7, 8\n        Debug.WriteLine(&quot;Between 6 and 8, inclusive&quot;)\n    Case 9 To 10\n        Debug.WriteLine(&quot;Equal to 9 or 10&quot;)\n    Case Else\n        Debug.WriteLine(&quot;Not between 1 and 10, inclusive&quot;)\nEnd Select\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/microsoft.visualbasic.interaction#Microsoft_VisualBasic_Interaction_Choose_\" data-linktype=\"relative-path\">Choose</a><br> <a href=\"end-statement\" data-linktype=\"relative-path\">End Statement</a><br> <a href=\"if-then-else-statement\" data-linktype=\"relative-path\">If...Then...Else Statement</a><br> <a href=\"option-compare-statement\" data-linktype=\"relative-path\">Option Compare Statement</a><br> <a href=\"exit-statement\" data-linktype=\"relative-path\">Exit Statement</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"68877b65-5419-4bf0-a465-20cd0e4c7d44\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"15\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/statements/select-case-statement.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/statements/select-case-statement.md\">\r\n<meta name=\"document_id\" content=\"473a2c83-4ed2-3c73-22c4-5997feccfa64\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Select...Case Statement (Visual Basic) | Microsoft Docs","ms.suite":"","ms.assetid":"68877b65-5419-4bf0-a465-20cd0e4c7d44","f1_keywords":["vb.Select","vb.Case"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":15,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["Select statement","Case statement","Select...Case statements","conditional statements, Select Case","control flow, branching","Else keyword [Visual Basic], in Select...Case statements","execution, conditional","To keyword, in Select...Case statements","Select Case statement, Select...Case","Select statement, Select...Case","Is operator [Visual Basic], in Select...Case statements","branching, conditional","Case Else statement, Select...Case","End keyword, Select Case statements","Case statement, Select...Case"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/statements/select-case-statement.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/statements/select-case-statement.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/statements/select-case-statement.md","document_id":"473a2c83-4ed2-3c73-22c4-5997feccfa64","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/statements/select-case-statement","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"Select...Case Statement (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":825,"_op_rawTitle":"<h1 id=\"selectcase-statement-visual-basic\" sourcefile=\"docs/visual-basic/language-reference/statements/select-case-statement.md\" sourcestartlinenumber=\"53\" sourceendlinenumber=\"53\">Select...Case Statement (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/statements/select-case-statement","fileRelativePath":"articles/visual-basic/language-reference/statements/select-case-statement.html"},"themesRelativePathToOutputRoot":"_themes/"}