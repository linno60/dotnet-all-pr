{"content":"<div><div class=\"content\">\n<p>Declares the name of a module and introduces the definition of the variables, properties, events, and procedures that the module comprises.  </p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>[ &lt;attributelist&gt; ] [ accessmodifier ]  Module name  \n    [ statements ]  \nEnd Module  \n</code></pre><h2 id=\"parts\">Parts</h2>\n<p> <code>attributelist</code><br> Optional. See <a href=\"attribute-list\" data-linktype=\"relative-path\">Attribute List</a>.  </p>\n<p> <code>accessmodifier</code><br> Optional. Can be one of the following:  </p>\n<ul>\n<li><p><a href=\"../modifiers/public\" data-linktype=\"relative-path\">Public</a>  </p>\n</li>\n<li><p><a href=\"../modifiers/friend\" data-linktype=\"relative-path\">Friend</a>  </p>\n<p>See <a href=\"../../programming-guide/language-features/declared-elements/access-levels\" data-linktype=\"relative-path\">Access Levels in Visual Basic</a>.  </p>\n<p><code>name</code><br>Required. Name of this module. See <a href=\"../../programming-guide/language-features/declared-elements/declared-element-names\" data-linktype=\"relative-path\">Declared Element Names</a>.  </p>\n<p><code>statements</code><br>Optional. Statements which define the variables, properties, events, procedures, and nested types of this module.  </p>\n<p><code>End Module</code><br>Terminates the <code>Module</code> definition.  </p>\n</li>\n</ul>\n<h2 id=\"remarks\">Remarks</h2>\n<p> A <code>Module</code> statement defines a reference type available throughout its namespace. A <em>module</em> (sometimes called a <em>standard module</em>)is similar to a class but with some important distinctions. Every module has exactly one instance and does not need to be created or assigned to a variable. Modules do not support inheritance or implement interfaces. Notice that a module is not a <em>type</em> in the sense that a class or structure is â€” you cannot declare a programming element to have the data type of a module.  </p>\n<p> You can use <code>Module</code> only at namespace level. This means the <em>declaration context</em> for a module must be a source file or namespace, and cannot be a class, structure, module, interface, procedure, or block. You cannot nest a module within another module, or within any type. For more information, see <a href=\"declaration-contexts-and-default-access-levels\" data-linktype=\"relative-path\">Declaration Contexts and Default Access Levels</a>.  </p>\n<p> A module has the same lifetime as your program. Because its members are all <code>Shared</code>, they also have lifetimes equal to that of the program.  </p>\n<p> Modules default to <a href=\"../modifiers/friend\" data-linktype=\"relative-path\">Friend</a> access. You can adjust their access levels with the access modifiers. For more information, see <a href=\"../../programming-guide/language-features/declared-elements/access-levels\" data-linktype=\"relative-path\">Access Levels in Visual Basic</a>.  </p>\n<p> All members of a module are implicitly <code>Shared</code>.  </p>\n<h2 id=\"classes-and-modules\">Classes and Modules</h2>\n<p> These elements have many similarities, but there are some important differences as well.  </p>\n<ul>\n<li><p><strong>Terminology.</strong> Previous versions of Visual Basic recognize two types of modules: <em>class modules</em> (.cls files) and <em>standard modules</em> (.bas files). The current version calls these <em>classes</em> and <em>modules</em>, respectively.  </p>\n</li>\n<li><p><strong>Shared Members.</strong> You can control whether a member of a class is a shared or instance member.  </p>\n</li>\n<li><p><strong>Object Orientation.</strong> Classes are object-oriented, but modules are not. So only classes can be instantiated as objects. For more information, see <a href=\"../../programming-guide/language-features/objects-and-classes/index\" data-linktype=\"relative-path\">Objects and Classes</a>.  </p>\n</li>\n</ul>\n<h2 id=\"rules\">Rules</h2>\n<ul>\n<li><p><strong>Modifiers.</strong> All module members are implicitly <a href=\"../modifiers/shared\" data-linktype=\"relative-path\">Shared</a>. You cannot use the <code>Shared</code> keyword when declaring a member, and you cannot alter the shared status of any member.  </p>\n</li>\n<li><p><strong>Inheritance.</strong> A module cannot inherit from any type other than <a class=\"xref\" href=\"../../../../api/system.object\" data-linktype=\"relative-path\">Object</a>, from which all modules inherit. In particular, one module cannot inherit from another.  </p>\n<p> You cannot use the <a href=\"inherits-statement\" data-linktype=\"relative-path\">Inherits Statement</a> in a module definition, even to specify <a class=\"xref\" href=\"../../../../api/system.object\" data-linktype=\"relative-path\">Object</a>.  </p>\n</li>\n<li><p><strong>Default Property.</strong> You cannot define any default properties in a module. For more information, see <a href=\"../modifiers/default\" data-linktype=\"relative-path\">Default</a>.  </p>\n</li>\n</ul>\n<h2 id=\"behavior\">Behavior</h2>\n<ul>\n<li><p><strong>Access Level.</strong> Within a module, you can declare each member with its own access level. Module members default to <a href=\"../modifiers/public\" data-linktype=\"relative-path\">Public</a> access, except variables and constants, which default to <a href=\"../modifiers/private\" data-linktype=\"relative-path\">Private</a> access. When a module has more restricted access than one of its members, the specified module access level takes precedence.  </p>\n</li>\n<li><p><strong>Scope.</strong> A module is in scope throughout its namespace.  </p>\n<p> The scope of every module member is the entire module. Notice that all members undergo <em>type promotion</em>, which causes their scope to be promoted to the namespace containing the module. For more information, see <a href=\"../../programming-guide/language-features/declared-elements/type-promotion\" data-linktype=\"relative-path\">Type Promotion</a>.  </p>\n</li>\n<li><p><strong>Qualification.</strong> You can have multiple modules in a project, and you can declare members with the same name in two or more modules. However, you must qualify any reference to such a member with the appropriate module name if the reference is from outside that module. For more information, see <a href=\"../../programming-guide/language-features/declared-elements/references-to-declared-elements\" data-linktype=\"relative-path\">References to Declared Elements</a>.  </p>\n</li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStatements#69\">Public Module thisModule\n    Sub Main()\n        Dim userName As String = InputBox(&quot;What is your name?&quot;)\n        MsgBox(&quot;User name is&quot; &amp; userName)\n    End Sub\n    &#39; Insert variable, property, procedure, and event declarations.\nEnd Module\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"class-statement\" data-linktype=\"relative-path\">Class Statement</a><br> <a href=\"namespace-statement\" data-linktype=\"relative-path\">Namespace Statement</a><br> <a href=\"structure-statement\" data-linktype=\"relative-path\">Structure Statement</a><br> <a href=\"interface-statement\" data-linktype=\"relative-path\">Interface Statement</a><br> <a href=\"property-statement\" data-linktype=\"relative-path\">Property Statement</a><br> <a href=\"../../programming-guide/language-features/declared-elements/type-promotion\" data-linktype=\"relative-path\">Type Promotion</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"a1243afc-14a5-45df-95d5-51118aeac362\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"24\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/statements/module-statement.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/statements/module-statement.md\">\r\n<meta name=\"document_id\" content=\"1729152a-69f9-d4dc-f772-ee3300c7888c\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Module Statement | Microsoft Docs","ms.suite":"","ms.assetid":"a1243afc-14a5-45df-95d5-51118aeac362","f1_keywords":["Module","vb.Module"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":24,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["modules, classes","modules","Module statement","modules, declaring","standard modules","classes [Visual Basic], vs. modules","declarations, modules"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/statements/module-statement.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/visual-basic/language-reference/statements/module-statement.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/statements/module-statement.md","document_id":"1729152a-69f9-d4dc-f772-ee3300c7888c","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/statements/module-statement","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"Module Statement","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":644,"_op_rawTitle":"<h1 id=\"module-statement\" sourcefile=\"docs/visual-basic/language-reference/statements/module-statement.md\" sourcestartlinenumber=\"45\" sourceendlinenumber=\"45\">Module Statement</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/visual-basic/language-reference/statements/module-statement","fileRelativePath":"articles/visual-basic/language-reference/statements/module-statement.html"},"themesRelativePathToOutputRoot":"_themes/"}