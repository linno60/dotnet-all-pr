{"content":"<div><div class=\"content\">\n<p>Declares the name of a class and introduces the definition of the variables, properties, events, and procedures that the class comprises.  </p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>[ &lt;attributelist&gt; ] [ accessmodifier ] [ Shadows ] [ MustInherit | NotInheritable ] [ Partial ] _  \nClass name [ ( Of typelist ) ]  \n    [ Inherits classname ]  \n    [ Implements interfacenames ]  \n    [ statements ]  \nEnd Class  \n</code></pre><h2 id=\"parts\">Parts</h2>\n<table>\n<thead>\n<tr>\n<th>Term</th>\n<th>Definition</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>attributelist</code></td>\n<td>Optional. See <a href=\"attribute-list\" data-linktype=\"relative-path\">Attribute List</a>.</td>\n</tr>\n<tr>\n<td><code>accessmodifier</code></td>\n<td>Optional. Can be one of the following:<br><br> -   <a href=\"../modifiers/public\" data-linktype=\"relative-path\">Public</a><br>-   <a href=\"../modifiers/protected\" data-linktype=\"relative-path\">Protected</a><br>-   <a href=\"../modifiers/friend\" data-linktype=\"relative-path\">Friend</a><br>-   <a href=\"../modifiers/private\" data-linktype=\"relative-path\">Private</a><br>-   <code>Protected Friend</code><br><br> See <a href=\"../../programming-guide/language-features/declared-elements/access-levels\" data-linktype=\"relative-path\">Access Levels in Visual Basic</a>.</td>\n</tr>\n<tr>\n<td><code>Shadows</code></td>\n<td>Optional. See <a href=\"../modifiers/shadows\" data-linktype=\"relative-path\">Shadows</a>.</td>\n</tr>\n<tr>\n<td><code>MustInherit</code></td>\n<td>Optional. See <a href=\"../modifiers/mustinherit\" data-linktype=\"relative-path\">MustInherit</a>.</td>\n</tr>\n<tr>\n<td><code>NotInheritable</code></td>\n<td>Optional. See <a href=\"../modifiers/notinheritable\" data-linktype=\"relative-path\">NotInheritable</a>.</td>\n</tr>\n<tr>\n<td><code>Partial</code></td>\n<td>Optional. Indicates a partial definition of the class. See <a href=\"../modifiers/partial\" data-linktype=\"relative-path\">Partial</a>.</td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>Required. Name of this class. See <a href=\"../../programming-guide/language-features/declared-elements/declared-element-names\" data-linktype=\"relative-path\">Declared Element Names</a>.</td>\n</tr>\n<tr>\n<td><code>Of</code></td>\n<td>Optional. Specifies that this is a generic class.</td>\n</tr>\n<tr>\n<td><code>typelist</code></td>\n<td>Required if you use the <a href=\"of-clause\" data-linktype=\"relative-path\">Of</a> keyword. List of type parameters for this class. See <a href=\"type-list\" data-linktype=\"relative-path\">Type List</a>.</td>\n</tr>\n<tr>\n<td><code>Inherits</code></td>\n<td>Optional. Indicates that this class inherits the members of another class. See <a href=\"inherits-statement\" data-linktype=\"relative-path\">Inherits Statement</a>.</td>\n</tr>\n<tr>\n<td><code>classname</code></td>\n<td>Required if you use the <code>Inherits</code> statement. The name of the class from which this class derives.</td>\n</tr>\n<tr>\n<td><code>Implements</code></td>\n<td>Optional. Indicates that this class implements the members of one or more interfaces. See <a href=\"implements-statement\" data-linktype=\"relative-path\">Implements Statement</a>.</td>\n</tr>\n<tr>\n<td><code>interfacenames</code></td>\n<td>Required if you use the <code>Implements</code> statement. The names of the interfaces this class implements.</td>\n</tr>\n<tr>\n<td><code>statements</code></td>\n<td>Optional. Statements which define the members of this class.</td>\n</tr>\n<tr>\n<td><code>End Class</code></td>\n<td>Required. Terminates the <code>Class</code> definition.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"remarks\">Remarks</h2>\n<p> A <code>Class</code> statement defines a new data type. A <em>class</em> is a fundamental building block of object-oriented programming (OOP). For more information, see <a href=\"../../programming-guide/language-features/objects-and-classes/index\" data-linktype=\"relative-path\">Objects and Classes</a>.  </p>\n<p> You can use <code>Class</code> only at namespace or module level. This means the <em>declaration context</em> for a class must be a source file, namespace, class, structure, module, or interface, and cannot be a procedure or block. For more information, see <a href=\"declaration-contexts-and-default-access-levels\" data-linktype=\"relative-path\">Declaration Contexts and Default Access Levels</a>.  </p>\n<p> Each instance of a class has a lifetime independent of all other instances. This lifetime begins when it is created by a <a href=\"../operators/new-operator\" data-linktype=\"relative-path\">New Operator</a> clause or by a function such as <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/z4393zyz(v=vs.110).aspx\" data-linktype=\"external\">CreateObject</a>. It ends when all variables pointing to the instance have been set to <a href=\"../nothing\" data-linktype=\"relative-path\">Nothing</a> or to instances of other classes.  </p>\n<p> Classes default to <a href=\"../modifiers/friend\" data-linktype=\"relative-path\">Friend</a> access. You can adjust their access levels with the access modifiers. For more information, see <a href=\"../../programming-guide/language-features/declared-elements/access-levels\" data-linktype=\"relative-path\">Access Levels in Visual Basic</a>.  </p>\n<h2 id=\"rules\">Rules</h2>\n<ul>\n<li><p><strong>Nesting.</strong> You can define one class within another. The outer class is called the <em>containing class</em>, and the inner class is called a <em>nested class</em>.  </p>\n</li>\n<li><p><strong>Inheritance.</strong> If the class uses the <a href=\"inherits-statement\" data-linktype=\"relative-path\">Inherits Statement</a>, you can specify only one base class or interface. A class cannot inherit from more than one element.  </p>\n<p> A class cannot inherit from another class with a more restrictive access level. For example, a <code>Public</code> class cannot inherit from a <code>Friend</code> class.  </p>\n<p> A class cannot inherit from a class nested within it.  </p>\n</li>\n<li><p><strong>Implementation.</strong> If the class uses the <a href=\"implements-statement\" data-linktype=\"relative-path\">Implements Statement</a>, you must implement every member defined by every interface you specify in <code>interfacenames</code>. An exception to this is reimplementation of a base class member. For more information, see &quot;Reimplementation&quot; in <a href=\"implements-clause\" data-linktype=\"relative-path\">Implements</a>.  </p>\n</li>\n<li><p><strong>Default Property.</strong> A class can specify at most one property as its <em>default property</em>. For more information, see <a href=\"../modifiers/default\" data-linktype=\"relative-path\">Default</a>.  </p>\n</li>\n</ul>\n<h2 id=\"behavior\">Behavior</h2>\n<ul>\n<li><p><strong>Access Level.</strong> Within a class, you can declare each member with its own access level. Class members default to <a href=\"../modifiers/public\" data-linktype=\"relative-path\">Public</a> access, except variables and constants, which default to <a href=\"../modifiers/private\" data-linktype=\"relative-path\">Private</a> access. When a class has more restricted access than one of its members, the class access level takes precedence.  </p>\n</li>\n<li><p><strong>Scope.</strong> A class is in scope throughout its containing namespace, class, structure, or module.  </p>\n<p> The scope of every class member is the entire class.  </p>\n<p> <strong>Lifetime.</strong> Visual Basic does not support static classes. The functional equivalent of a static class is provided by a module. For more information, see <a href=\"module-statement\" data-linktype=\"relative-path\">Module Statement</a>.  </p>\n<p> Class members have lifetimes depending on how and where they are declared. For more information, see <a href=\"../../programming-guide/language-features/declared-elements/lifetime\" data-linktype=\"relative-path\">Lifetime in Visual Basic</a>.  </p>\n</li>\n<li><p><strong>Qualification.</strong> Code outside a class must qualify a member&#39;s name with the name of that class.  </p>\n<p> If code inside a nested class makes an unqualified reference to a programming element, Visual Basic searches for the element first in the nested class, then in its containing class, and so on out to the outermost containing element.  </p>\n</li>\n</ul>\n<h2 id=\"classes-and-modules\">Classes and Modules</h2>\n<p> These elements have many similarities, but there are some important differences as well.  </p>\n<ul>\n<li><p><strong>Terminology.</strong> Previous versions of Visual Basic recognize two types of modules: <em>class modules</em> (.cls files) and <em>standard modules</em> (.bas files). The current version calls these <em>classes</em> and <em>modules</em>, respectively.  </p>\n</li>\n<li><p><strong>Shared Members.</strong> You can control whether a member of a class is a shared or instance member.  </p>\n</li>\n<li><p><strong>Object Orientation.</strong> Classes are object-oriented, but modules are not. You can create one or more instances of a class. For more information, see <a href=\"../../programming-guide/language-features/objects-and-classes/index\" data-linktype=\"relative-path\">Objects and Classes</a>.  </p>\n</li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<p> The following example uses a <code>Class</code> statement to define a class and several members.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrStatements#62\">Class bankAccount\n    Shared interestRate As Decimal\n    Private accountNumber As String\n    Private accountBalance As Decimal\n    Public holdOnAccount As Boolean = False\n\n    Public ReadOnly Property balance() As Decimal\n        Get\n            Return accountBalance\n        End Get\n    End Property\n\n    Public Sub postInterest()\n        accountBalance = accountBalance * (1 + interestRate)\n    End Sub\n\n    Public Sub postDeposit(ByVal amountIn As Decimal)\n        accountBalance = accountBalance + amountIn\n    End Sub\n\n    Public Sub postWithdrawal(ByVal amountOut As Decimal)\n        accountBalance = accountBalance - amountOut\n    End Sub\nEnd Class\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../../programming-guide/language-features/objects-and-classes/index\" data-linktype=\"relative-path\">Objects and Classes</a><br> <a href=\"../../programming-guide/language-features/data-types/structures-and-classes\" data-linktype=\"relative-path\">Structures and Classes</a><br> <a href=\"interface-statement\" data-linktype=\"relative-path\">Interface Statement</a><br> <a href=\"module-statement\" data-linktype=\"relative-path\">Module Statement</a><br> <a href=\"property-statement\" data-linktype=\"relative-path\">Property Statement</a><br> <a href=\"../../programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed\" data-linktype=\"relative-path\">Object Lifetime: How Objects Are Created and Destroyed</a><br> <a href=\"../../programming-guide/language-features/data-types/generic-types\" data-linktype=\"relative-path\">Generic Types in Visual Basic</a><br> <a href=\"../../programming-guide/language-features/data-types/how-to-use-a-generic-class\" data-linktype=\"relative-path\">How to: Use a Generic Class</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"f2664f38-eb5a-4d4b-a374-1d041521fb6c\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"29\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-visual-basic\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/statements/class-statement.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/language-reference/statements/class-statement.md\">\r\n<meta name=\"document_id\" content=\"33c1ca32-4b82-d01e-69f2-0752b1f0ea7e\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../../../toc.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Class Statement (Visual Basic) | Microsoft Docs","ms.suite":"","ms.assetid":"f2664f38-eb5a-4d4b-a374-1d041521fb6c","f1_keywords":["vb.Class"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":29,"ms.topic":"article","dev_langs":["vb"],"helpviewer_keywords":["class modules","Class statement","classes [Visual Basic], fields","fields, of classes","class types, class statements","classes [Visual Basic], creating","classes [Visual Basic], data members","data members, of classes"],"ms.date":"2015-07-20","ms.technology":["devlang-visual-basic"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/visual-basic/language-reference/statements/class-statement.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/visual-basic/language-reference/statements/class-statement.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/visual-basic/language-reference/statements/class-statement.md","document_id":"33c1ca32-4b82-d01e-69f2-0752b1f0ea7e","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/statements/class-statement","toc_asset_id":"articles/toc.json","toc_rel":"../../../toc.json","_op_ogTitle":"Class Statement (Visual Basic)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":892,"_op_rawTitle":"<h1 id=\"class-statement-visual-basic\" sourcefile=\"docs/visual-basic/language-reference/statements/class-statement.md\" sourcestartlinenumber=\"45\" sourceendlinenumber=\"45\">Class Statement (Visual Basic)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/visual-basic/language-reference/statements/class-statement","fileRelativePath":"articles/visual-basic/language-reference/statements/class-statement.html"},"themesRelativePathToOutputRoot":"_themes/"}