{"content":"<div><div class=\"content\">\n<p>An <strong><em>array</em></strong> is a data structure that contains a number of variables that are accessed through computed indices. The variables contained in an array, also called the <strong><em>elements</em></strong> of the array, are all of the same type, and this type is called the <strong><em>element type</em></strong> of the array.</p>\n<p>Array types are reference types, and the declaration of an array variable simply sets aside space for a reference to an array instance. Actual array instances are created dynamically at runtime using the new operator. The new operation specifies the <strong><em>length</em></strong> of the new array instance, which is then fixed for the lifetime of the instance. The indices of the elements of an array range from <code>0</code> to <code>Length - 1</code>. The <code>new</code> operator automatically initializes the elements of an array to their default value, which, for example, is zero for all numeric types and <code>null</code> for all reference types.</p>\n<p>The following example creates an array of <code>int</code> elements, initializes the array, and prints out the contents of the array.</p>\n<pre><code class=\"lang-csharp\" name=\"ArraySample\">using System;\nclass ArrayExample\n{\n    static void Main() \n    {\n        int[] a = new int[10];\n        for (int i = 0; i &lt; a.Length; i++) \n        {\n            a[i] = i * i;\n        }\n        for (int i = 0; i &lt; a.Length; i++) \n        {\n            Console.WriteLine($&quot;a[{i}] = {a[i]}&quot;);\n        }\n    }\n}\n</code></pre><p>This example creates and operates on a <strong><em>single-dimensional array</em></strong>. C# also supports <strong><em>multi-dimensional arrays</em></strong>. The number of dimensions of an array type, also known as the <strong><em>rank</em></strong> of the array type, is one plus the number of commas written between the square brackets of the array type. The following example allocates a single-dimensional, a two-dimensional, and a three-dimensional array, respectively.</p>\n<pre><code class=\"lang-csharp\" name=\"ArrayRank\">int[] a1 = new int[10];\nint[,] a2 = new int[10, 5];\nint[,,] a3 = new int[10, 5, 2];\n</code></pre><p>The <code>a1</code> array contains 10 elements, the <code>a2</code> array contains 50 (10 × 5) elements, and the <code>a3</code> array contains 100 (10 × 5 × 2) elements.\nThe element type of an array can be any type, including an array type. An array with elements of an array type is sometimes called a <strong><em>jagged array</em></strong> because the lengths of the element arrays do not all have to be the same. The following example allocates an array of arrays of <code>int</code>:</p>\n<pre><code class=\"lang-csharp\" name=\"ArrayAllocation\">int[][] a = new int[3][];\na[0] = new int[10];\na[1] = new int[5];\na[2] = new int[20];\n</code></pre><p>The first line creates an array with three elements, each of type <code>int[]</code> and each with an initial value of <code>null</code>. The subsequent lines then initialize the three elements with references to individual array instances of varying lengths.</p>\n<p>The new operator permits the initial values of the array elements to be specified using an <strong><em>array initializer</em></strong>, which is a list of expressions written between the delimiters <code>{</code> and <code>}</code>. The following example allocates and initializes an <code>int[]</code> with three elements.</p>\n<pre><code class=\"lang-csharp\" name=\"ArrayInitialization\">int[] a = new int[] {1, 2, 3};\n</code></pre><p>Note that the length of the array is inferred from the number of expressions between { and }. Local variable and field declarations can be shortened further such that the array type does not have to be restated.</p>\n<pre><code class=\"lang-csharp\" name=\"ArrayInitialization\">int[] a = {1, 2, 3};\n</code></pre><p>Both of the previous examples are equivalent to the following:</p>\n<pre><code class=\"lang-csharp\" name=\"ArrayAssignment\">int[] t = new int[3];\nt[0] = 1;\nt[1] = 2;\nt[2] = 3;\nint[] a = t;\n</code></pre><div class=\"step-by-step\"><p><a href=\"structs\" data-linktype=\"relative-path\">Previous</a>\n<a href=\"interfaces\" data-linktype=\"relative-path\">Next</a></p>\n</div>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc.json\">\r\n<meta name=\"ms.devlang\" content=\"csharp\">\r\n<meta name=\"ms.assetid\" content=\"a440704c-9e88-4c75-97dd-bfe30ca0fb97\">\r\n<meta name=\"description\" content=\"Arrays are the most basic collection type in the C# langauge\">\r\n<meta name=\"keywords\" content=\".NET, csharp, array, collection\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"08/10/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/tour-of-csharp/arrays.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/tour-of-csharp/arrays.md\">\r\n<meta name=\"document_id\" content=\"f17a9342-db47-1793-1c2f-7dead12d4371\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"C# Arrays | Microsoft Docs","ms.devlang":"csharp","ms.assetid":"a440704c-9e88-4c75-97dd-bfe30ca0fb97","description":"Arrays are the most basic collection type in the C# langauge","keywords":".NET, csharp, array, collection","ms.topic":"article","ms.date":"08/10/2016","ms.technology":"devlang-csharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Tour of csharp (#893)","commit_sha":"487f9831526f124ddd60dece21852da8c086b520","commit_date":"2016-08-23 10:20:56 -0400"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/tour-of-csharp/arrays.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/tour-of-csharp/arrays.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/tour-of-csharp/arrays.md","document_id":"f17a9342-db47-1793-1c2f-7dead12d4371","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/tour-of-csharp/arrays","toc_asset_id":"articles/csharp/tour-of-csharp/toc.json","toc_rel":"toc.json","_op_ogTitle":"C# Arrays","_op_displayDate":"2016-8-10","_op_displayDate_source":"2016-08-10T00:00:00Z","_op_wordCount":551,"_op_rawTitle":"<h1 id=\"arrays\" sourcefile=\"docs/csharp/tour-of-csharp/arrays.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Arrays</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/tour-of-csharp/arrays","fileRelativePath":"articles/csharp/tour-of-csharp/arrays.html"},"themesRelativePathToOutputRoot":"_themes/"}