{"content":"<div><div class=\"content\">\n<p>The dot operator (<code>.</code>) is used for member access. The dot operator specifies a member of a type or namespace. For example, the dot operator is used to access specific methods within the .NET Framework class libraries:  </p>\n<pre><code class=\"lang-cs\" name=\"csRefOperators#16\">            // The class Console in namespace System:\n            System.Console.WriteLine(&quot;hello&quot;);\n</code></pre><p> For example, consider the following class:  </p>\n<pre><code class=\"lang-cs\" name=\"csRefOperators#17\">        class Simple\n        {\n            public int a;\n            public void b()\n            {\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"csRefOperators#18\">            Simple s = new Simple();\n</code></pre><p> The variable <code>s</code> has two members, <code>a</code> and <code>b</code>; to access them, use the dot operator:  </p>\n<pre><code class=\"lang-cs\" name=\"csRefOperators#19\">            s.a = 6;   // assign to field a;\n            s.b();     // invoke member function b;\n</code></pre><p> The dot is also used to form qualified names, which are names that specify the namespace or interface, for example, to which they belong.  </p>\n<pre><code class=\"lang-cs\" name=\"csRefOperators#20\">            // The class Console in namespace System:\n            System.Console.WriteLine(&quot;hello&quot;);\n</code></pre><p> The using directive makes some name qualification optional:  </p>\n<pre><code class=\"lang-cs\" name=\"csRefOperators#21\">    \n    namespace ExampleNS\n    {\n        using System;\n        class C\n        {\n            void M()\n            {\n                System.Console.WriteLine(&quot;hello&quot;);\n                Console.WriteLine(&quot;hello&quot;);   // Same as previous line.\n            }\n        }\n    }\n</code></pre><p> But when an identifier is ambiguous, it must be qualified:  </p>\n<pre><code class=\"lang-cs\" name=\"csRefOperators#22\">    namespace Example2\n    {\n        class Console\n        {\n            public static void WriteLine(string s){}\n        }\n    }\n    namespace Example1\n    {\n        using System;\n        using Example2;\n        class C\n        {\n            void M()\n            {                \n                // Console.WriteLine(&quot;hello&quot;);   // Compiler error. Ambiguous reference.\n                System.Console.WriteLine(&quot;hello&quot;); //OK\n                Example2.Console.WriteLine(&quot;hello&quot;); //OK\n            }\n        }\n    }\n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p> For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Operators</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"a1f54b52-b686-4ae5-a48e-a2a9ebd0eb7b\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"21\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/operators/member-access-operator.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/operators/member-access-operator.md\">\r\n<meta name=\"document_id\" content=\"b2fb08f2-cb45-5bbe-7a31-f0b37e313a16\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":". Operator (C# Reference) | Microsoft Docs","ms.assetid":"a1f54b52-b686-4ae5-a48e-a2a9ebd0eb7b","f1_keywords":["._CSharpKeyword"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":21,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["member access operator (.) [C#]",". operator [C#]","dot operator (.) [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/operators/member-access-operator.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/operators/member-access-operator.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/operators/member-access-operator.md","document_id":"b2fb08f2-cb45-5bbe-7a31-f0b37e313a16","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/operators/member-access-operator","toc_asset_id":"articles/csharp/language-reference/operators/toc.json","toc_rel":"toc.json","_op_ogTitle":". Operator (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":240,"_op_rawTitle":"<h1 id=\"-operator-c-reference\" sourcefile=\"docs/csharp/language-reference/operators/member-access-operator.md\" sourcestartlinenumber=\"35\" sourceendlinenumber=\"35\">. Operator (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/operators/member-access-operator","fileRelativePath":"articles/csharp/language-reference/operators/member-access-operator.html"},"themesRelativePathToOutputRoot":"_themes/"}