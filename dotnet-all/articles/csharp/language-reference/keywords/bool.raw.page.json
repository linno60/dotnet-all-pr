{"content":"<div><div class=\"content\">\n<p>The <code>bool</code> keyword is an alias of <a class=\"xref\" href=\"../../../../api/system.boolean\" data-linktype=\"relative-path\">System.Boolean</a>. It is used to declare variables to store the Boolean values, <a href=\"true\" data-linktype=\"relative-path\">true</a> and <a href=\"false\" data-linktype=\"relative-path\">false</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you require a Boolean variable that can also have a value of <code>null</code>, use <code>bool?</code>. For more information, see <a href=\"../../programming-guide/nullable-types/index\" data-linktype=\"relative-path\">Nullable Types</a>.  </p>\n</div>\n<h2 id=\"literals\">Literals</h2>\n<p> You can assign a Boolean value to a <code>bool</code> variable. You can also assign an expression that evaluates to <code>bool</code> to a <code>bool</code> variable.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsTypes#1\">    public class BoolTest\n    {\n        static void Main()\n        {\n            bool b = true;\n\n            // WriteLine automatically converts the value of b to text.\n            Console.WriteLine(b);\n\n            int days = DateTime.Now.DayOfYear;\n\n\n            // Assign the result of a boolean expression to b.\n            b = (days % 2 == 0);\n\n            // Branch depending on whether b is true or false.\n            if (b)\n            {\n                Console.WriteLine(&quot;days is an even number&quot;);\n            }\n            else\n            {\n                Console.WriteLine(&quot;days is an odd number&quot;);\n            }   \n        }\n    }\n    /* Output:\n      True\n      days is an &lt;even/odd&gt; number\n    */\n</code></pre><p> The default value of a <code>bool</code> variable is <code>false</code>. The default value of a <code>bool?</code> variable is <code>null</code>.  </p>\n<h2 id=\"conversions\">Conversions</h2>\n<p> In C++, a value of type <code>bool</code> can be converted to a value of type <code>int</code>; in other words, <code>false</code> is equivalent to zero and <code>true</code> is equivalent to nonzero values. In C#, there is no conversion between the <code>bool</code> type and other types. For example, the following <code>if</code> statement is invalid in C#:  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsTypes#2\">            int x = 123;\n\n            // if (x)   // Error: &quot;Cannot implicitly convert type &#39;int&#39; to &#39;bool&#39;&quot;\n            {\n                Console.Write(&quot;The value of x is nonzero.&quot;);\n            }\n</code></pre><p> To test a variable of the type <code>int</code>, you have to explicitly compare it to a value, such as zero, as follows:  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsTypes#3\">\n            if (x != 0)   // The C# way\n            {\n                Console.Write(&quot;The value of x is nonzero.&quot;);\n            }\n</code></pre><h2 id=\"example\">Example</h2>\n<p> In this example, you enter a character from the keyboard and the program checks if the input character is a letter. If it is a letter, it checks if it is lowercase or uppercase. These checks are performed with the <a class=\"xref\" href=\"../../../../api/system.char#System_Char_IsLetter_\" data-linktype=\"relative-path\">IsLetter</a>, and <a class=\"xref\" href=\"../../../../api/system.char#System_Char_IsLower_\" data-linktype=\"relative-path\">IsLower</a>, both of which return the <code>bool</code> type:  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsTypes#4\">    public class BoolKeyTest\n    {\n        static void Main()\n        {\n            Console.Write(&quot;Enter a character: &quot;);\n            char c = (char)Console.Read();\n            if (Char.IsLetter(c))\n            {\n                if (Char.IsLower(c))\n                {\n                    Console.WriteLine(&quot;The character is lowercase.&quot;);\n                }\n                else\n                {\n                    Console.WriteLine(&quot;The character is uppercase.&quot;);\n                }\n            }\n            else\n            {\n                Console.WriteLine(&quot;Not an alphabetic character.&quot;);\n            }\n        }\n    }\n    /* Sample Output:\n        Enter a character: X\n        The character is uppercase.\n     \n        Enter a character: x\n        The character is lowercase.\n\n        Enter a character: 2\n        The character is not an alphabetic character.\n     */\n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p> For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"integral-types-table\" data-linktype=\"relative-path\">Integral Types Table</a><br> <a href=\"built-in-types-table\" data-linktype=\"relative-path\">Built-In Types Table</a><br> <a href=\"implicit-numeric-conversions-table\" data-linktype=\"relative-path\">Implicit Numeric Conversions Table</a><br> <a href=\"explicit-numeric-conversions-table\" data-linktype=\"relative-path\">Explicit Numeric Conversions Table</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"551cfe35-2632-4343-af49-33ad12da08e2\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"30\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/bool.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/bool.md\">\r\n<meta name=\"document_id\" content=\"2ed87928-3123-c030-ed64-b8172f77b2ee\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"bool (C# Reference) | Microsoft Docs","ms.assetid":"551cfe35-2632-4343-af49-33ad12da08e2","f1_keywords":["bool_CSharpKeyword","bool"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":30,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["bool keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/bool.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/bool.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/bool.md","document_id":"2ed87928-3123-c030-ed64-b8172f77b2ee","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/bool","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"bool (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":456,"_op_rawTitle":"<h1 id=\"bool-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/bool.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">bool (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/bool","fileRelativePath":"articles/csharp/language-reference/keywords/bool.html"},"themesRelativePathToOutputRoot":"_themes/"}