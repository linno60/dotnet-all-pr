{"content":"<div><div class=\"content\">\n<p>When applied to a class, the <code>sealed</code> modifier prevents other classes from inheriting from it. In the following example, class <code>B</code> inherits from class <code>A</code>, but no class can inherit from class <code>B</code>.  </p>\n<pre class=\"loading\"><code>class A {}      \nsealed class B : A {}  \n</code></pre><p> You can also use the <code>sealed</code> modifier on a method or property that overrides a virtual method or property in a base class. This enables you to allow classes to derive from your class and prevent them from overriding specific virtual methods or properties.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In the following example, <code>Z</code> inherits from <code>Y</code> but <code>Z</code> cannot override the virtual function <code>F</code> that is declared in <code>X</code> and sealed in <code>Y</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsModifiers#16\">class X\n{\n    protected virtual void F() { Console.WriteLine(&quot;X.F&quot;); }\n    protected virtual void F2() { Console.WriteLine(&quot;X.F2&quot;); }\n}\nclass Y : X\n{\n    sealed protected override void F() { Console.WriteLine(&quot;Y.F&quot;); }\n    protected override void F2() { Console.WriteLine(&quot;Y.F2&quot;); }\n}\nclass Z : Y\n{\n    // Attempting to override F causes compiler error CS0239.\n    // protected override void F() { Console.WriteLine(&quot;C.F&quot;); }\n\n    // Overriding F2 is allowed.\n    protected override void F2() { Console.WriteLine(&quot;Z.F2&quot;); }\n}\n</code></pre><p> When you define new methods or properties in a class, you can prevent deriving classes from overriding them by not declaring them as <a href=\"virtual\" data-linktype=\"relative-path\">virtual</a>.  </p>\n<p> It is an error to use the <a href=\"abstract\" data-linktype=\"relative-path\">abstract</a> modifier with a sealed class, because an abstract class must be inherited by a class that provides an implementation of the abstract methods or properties.  </p>\n<p> When applied to a method or property, the <code>sealed</code> modifier must always be used with <a href=\"override\" data-linktype=\"relative-path\">override</a>.  </p>\n<p> Because structs are implicitly sealed, they cannot be inherited.  </p>\n<p> For more information, see <a href=\"../../programming-guide/classes-and-structs/inheritance\" data-linktype=\"relative-path\">Inheritance</a>.  </p>\n<p> For more examples, see <a href=\"../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members\" data-linktype=\"relative-path\">Abstract and Sealed Classes and Class Members</a>.  </p>\n<h2 id=\"example-1\">Example</h2>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsModifiers#17\">sealed class SealedClass\n{\n    public int x;\n    public int y;\n}\n\nclass SealedTest2\n{\n    static void Main()\n    {\n        SealedClass sc = new SealedClass();\n        sc.x = 110;\n        sc.y = 150;\n        Console.WriteLine(&quot;x = {0}, y = {1}&quot;, sc.x, sc.y);\n    }\n}\n// Output: x = 110, y = 150\n</code></pre><p> In the previous example, you might try to inherit from the sealed class by using the following statement:  </p>\n<p> <code>class MyDerivedC: SealedClass {}   // Error</code>  </p>\n<p> The result is an error message:  </p>\n<p> <code>&#39;MyDerivedC&#39; cannot inherit from sealed class &#39;SealedClass&#39;.</code>  </p>\n<h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p>For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.</p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> To determine whether to seal a class, method, or property, you should generally consider the following two points:  </p>\n<ul>\n<li><p>The potential benefits that deriving classes might gain through the ability to customize your class.  </p>\n</li>\n<li><p>The potential that deriving classes could modify your classes in such a way that they would no longer work correctly or as expected.  </p>\n</li>\n</ul>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"../../programming-guide/classes-and-structs/static-classes-and-static-class-members\" data-linktype=\"relative-path\">Static Classes and Static Class Members</a><br> <a href=\"../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members\" data-linktype=\"relative-path\">Abstract and Sealed Classes and Class Members</a><br> <a href=\"../../programming-guide/classes-and-structs/access-modifiers\" data-linktype=\"relative-path\">Access Modifiers</a><br> <a href=\"modifiers\" data-linktype=\"relative-path\">Modifiers</a><br> <a href=\"override\" data-linktype=\"relative-path\">override</a><br> <a href=\"virtual\" data-linktype=\"relative-path\">virtual</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.assetid\" content=\"8e4ed5d3-10be-47db-9488-0da2008e6f3f\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"30\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/sealed.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/sealed.md\">\r\n<meta name=\"document_id\" content=\"566b2266-7cc1-e0fe-39f5-17d62ccd9544\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"sealed (C# Reference) | Microsoft Docs","ms.assetid":"8e4ed5d3-10be-47db-9488-0da2008e6f3f","f1_keywords":["sealed","sealed_CSharpKeyword"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":30,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["sealed keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/sealed.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/sealed.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/sealed.md","document_id":"566b2266-7cc1-e0fe-39f5-17d62ccd9544","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/sealed","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"sealed (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":473,"_op_rawTitle":"<h1 id=\"sealed-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/sealed.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">sealed (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/sealed","fileRelativePath":"articles/csharp/language-reference/keywords/sealed.html"},"themesRelativePathToOutputRoot":"_themes/"}