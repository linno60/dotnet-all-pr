{"content":"<div><div class=\"content\">\n<p>The <code>break</code> statement terminates the closest enclosing loop or <a href=\"switch\" data-linktype=\"relative-path\">switch</a> statement in which it appears. Control is passed to the statement that follows the terminated statement, if any.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In this example, the conditional statement contains a counter that is supposed to count from 1 to 100; however, the <code>break</code> statement terminates the loop after 4 counts.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsJump#1\">    class BreakTest\n    {\n        static void Main()\n        {\n            for (int i = 1; i &lt;= 100; i++)\n            {\n                if (i == 5)\n                {\n                    break;\n                }\n                Console.WriteLine(i);\n            }\n\n            // Keep the console open in debug mode.\n            Console.WriteLine(&quot;Press any key to exit.&quot;);\n            Console.ReadKey();\n        }\n    }\n    /* \n     Output:\n        1\n        2\n        3\n        4  \n    */\n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> In this example, the <code>break</code> statement is used to break out of an inner nested loop, and return control to the outer loop.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsJump#7\">    class BreakInNestedLoops\n    {\n        static void Main(string[] args)\n        {\n\n            int[] numbers = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n            char[] letters = { &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39; };\n\n            // Outer loop\n            for (int x = 0; x &lt; numbers.Length; x++)\n            {\n                Console.WriteLine(&quot;num = {0}&quot;, numbers[x]);\n\n                // Inner loop\n                for (int y = 0; y &lt; letters.Length; y++)\n                {\n                    if (y == x)\n                    {\n                        // Return control to outer loop\n                        break;\n                    }\n                    Console.Write(&quot; {0} &quot;, letters[y]);\n                }\n                Console.WriteLine();\n            }\n\n            // Keep the console open in debug mode.\n            Console.WriteLine(&quot;Press any key to exit.&quot;);\n            Console.ReadKey();\n        }\n    }\n\n    /*\n     * Output:\n        num = 0\n\n        num = 1\n         a\n        num = 2\n         a  b\n        num = 3\n         a  b  c\n        num = 4\n         a  b  c  d\n        num = 5\n         a  b  c  d  e\n        num = 6\n         a  b  c  d  e  f\n        num = 7\n         a  b  c  d  e  f  g\n        num = 8\n         a  b  c  d  e  f  g  h\n        num = 9\n         a  b  c  d  e  f  g  h  i\n     */\n</code></pre><h2 id=\"example-2\">Example</h2>\n<p> This example demonstrates the use of <code>break</code> in a <a href=\"switch\" data-linktype=\"relative-path\">switch</a> statement.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsJump#2\">    class Switch\n    {\n        static void Main()\n        {\n            Console.Write(&quot;Enter your selection (1, 2, or 3): &quot;);\n            string s = Console.ReadLine();\n            int n = Int32.Parse(s);\n\n            switch (n)\n            {\n                case 1:\n                    Console.WriteLine(&quot;Current value is {0}&quot;, 1);\n                    break;\n                case 2:\n                    Console.WriteLine(&quot;Current value is {0}&quot;, 2);\n                    break;\n                case 3:\n                    Console.WriteLine(&quot;Current value is {0}&quot;, 3);\n                    break;\n                default:\n                    Console.WriteLine(&quot;Sorry, invalid selection.&quot;);\n                    break;\n            }\n\n            // Keep the console open in debug mode.\n            Console.WriteLine(&quot;Press any key to exit.&quot;);\n            Console.ReadKey();\n        }\n    }\n    /*\n    Sample Input: 1\n     \n    Sample Output:\n    Enter your selection (1, 2, or 3): 1\n    Current value is 1\n    */\n</code></pre><p> If you entered <code>4</code>, the output would be:  </p>\n<pre class=\"loading\"><code>Enter your selection (1, 2, or 3): 4  \nSorry, invalid selection.  \n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p> For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"switch\" data-linktype=\"relative-path\">switch</a><br> <a href=\"jump-statements\" data-linktype=\"relative-path\">Jump Statements</a><br> <a href=\"iteration-statements\" data-linktype=\"relative-path\">Iteration Statements</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"be2571ed-efb0-4965-b122-81e5b09db0b9\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"21\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/break.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/break.md\">\r\n<meta name=\"document_id\" content=\"90d72c75-3909-c8e4-dd71-e84c2dc55051\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"break (C# Reference) | Microsoft Docs","ms.assetid":"be2571ed-efb0-4965-b122-81e5b09db0b9","f1_keywords":["break","break_CSharpKeyword"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":21,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["break keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/break.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/break.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/break.md","document_id":"90d72c75-3909-c8e4-dd71-e84c2dc55051","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/keywords/break","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"break (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":472,"_op_rawTitle":"<h1 id=\"break-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/break.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">break (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/keywords/break","fileRelativePath":"articles/csharp/language-reference/keywords/break.html"},"themesRelativePathToOutputRoot":"_themes/"}