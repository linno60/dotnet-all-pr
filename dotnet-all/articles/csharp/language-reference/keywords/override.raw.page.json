{"content":"<div><div class=\"content\">\n<p>The <code>override</code> modifier is required to extend or modify the abstract or virtual implementation of an inherited method, property, indexer, or event.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In this example, the <code>Square</code> class must provide an overridden implementation of <code>Area</code> because <code>Area</code> is inherited from the abstract <code>ShapesClass</code>:  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsModifiers#1\">\nabstract class ShapesClass\n{\n    abstract public int Area();\n}\nclass Square : ShapesClass\n{\n    int side = 0;\n\n    public Square(int n)\n    {\n        side = n;\n    }\n    // Area method is required to avoid\n    // a compile-time error.\n    public override int Area()\n    {\n        return side * side;\n    }\n\n    static void Main() \n    {\n        Square sq = new Square(12);\n        Console.WriteLine(&quot;Area of the square = {0}&quot;, sq.Area());\n    }\n\n    interface I\n    {\n        void M();\n    }\n    abstract class C : I\n    {\n        public abstract void M();\n    }\n\n}\n// Output: Area of the square = 144\n</code></pre><p> An <code>override</code> method provides a new implementation of a member that is inherited from a base class. The method that is overridden by an <code>override</code> declaration is known as the overridden base method. The overridden base method must have the same signature as the <code>override</code> method. For information about inheritance, see <a href=\"../../programming-guide/classes-and-structs/inheritance\" data-linktype=\"relative-path\">Inheritance</a>.  </p>\n<p> You cannot override a non-virtual or static method. The overridden base method must be <code>virtual</code>, <code>abstract</code>, or <code>override</code>.  </p>\n<p> An <code>override</code> declaration cannot change the accessibility of the <code>virtual</code> method. Both the <code>override</code> method and the <code>virtual</code> method must have the same <a href=\"access-modifiers\" data-linktype=\"relative-path\">access level modifier</a>.  </p>\n<p> You cannot use the <code>new</code>, <code>static</code>, or <code>virtual</code> modifiers to modify an <code>override</code> method.  </p>\n<p> An overriding property declaration must specify exactly the same access modifier, type, and name as the inherited property, and the overridden property must be <code>virtual</code>, <code>abstract</code>, or <code>override</code>.  </p>\n<p> For more information about how to use the <code>override</code> keyword, see <a href=\"../../programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords\" data-linktype=\"relative-path\">Versioning with the Override and New Keywords</a> and <a href=\"../../programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords\" data-linktype=\"relative-path\">Knowing when to use Override and New Keywords</a>.  </p>\n<h2 id=\"example-1\">Example</h2>\n<p> This example defines a base class named <code>Employee</code>, and a derived class named <code>SalesEmployee</code>. The <code>SalesEmployee</code> class includes an extra property, <code>salesbonus</code>, and overrides the method <code>CalculatePay</code> in order to take it into account.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsModifiers#9\">class TestOverride\n{\n    public class Employee\n    {\n        public string name;\n\n        // Basepay is defined as protected, so that it may be \n        // accessed only by this class and derrived classes.\n        protected decimal basepay;\n\n        // Constructor to set the name and basepay values.\n        public Employee(string name, decimal basepay)\n        {\n            this.name = name;\n            this.basepay = basepay;\n        }\n\n        // Declared virtual so it can be overridden.\n        public virtual decimal CalculatePay()\n        {\n            return basepay;\n        }\n    }\n\n    // Derive a new class from Employee.\n    public class SalesEmployee : Employee\n    {\n        // New field that will affect the base pay.\n        private decimal salesbonus;\n\n        // The constructor calls the base-class version, and\n        // initializes the salesbonus field.\n        public SalesEmployee(string name, decimal basepay, \n                  decimal salesbonus) : base(name, basepay)\n        {\n            this.salesbonus = salesbonus;\n        }\n\n        // Override the CalculatePay method \n        // to take bonus into account.\n        public override decimal CalculatePay()\n        {\n            return basepay + salesbonus;\n        }\n    }\n\n    static void Main()\n    {\n        // Create some new employees.\n        SalesEmployee employee1 = new SalesEmployee(&quot;Alice&quot;, \n                      1000, 500);\n        Employee employee2 = new Employee(&quot;Bob&quot;, 1200);\n\n        Console.WriteLine(&quot;Employee4 &quot; + employee1.name + \n                  &quot; earned: &quot; + employee1.CalculatePay());\n        Console.WriteLine(&quot;Employee4 &quot; + employee2.name + \n                  &quot; earned: &quot; + employee2.CalculatePay());\n    }\n}\n/*\n    Output:\n    Employee4 Alice earned: 1500\n    Employee4 Bob earned: 1200\n*/\n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p>For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"../../programming-guide/classes-and-structs/inheritance\" data-linktype=\"relative-path\">Inheritance</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"modifiers\" data-linktype=\"relative-path\">Modifiers</a><br> <a href=\"abstract\" data-linktype=\"relative-path\">abstract</a><br> <a href=\"virtual\" data-linktype=\"relative-path\">virtual</a><br> <a href=\"new\" data-linktype=\"relative-path\">new</a><br> <a href=\"../../programming-guide/classes-and-structs/polymorphism\" data-linktype=\"relative-path\">Polymorphism</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"dd1907a8-acf8-46d3-80b9-c2ca4febada8\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"26\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/override.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/override.md\">\r\n<meta name=\"document_id\" content=\"1c1f8de8-81a7-5c68-8337-76d3837f191c\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"override (C# Reference) | Microsoft Docs","ms.assetid":"dd1907a8-acf8-46d3-80b9-c2ca4febada8","f1_keywords":["override","override_CSharpKeyword"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":26,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["override keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/override.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/override.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/override.md","document_id":"1c1f8de8-81a7-5c68-8337-76d3837f191c","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/override","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"override (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":570,"_op_rawTitle":"<h1 id=\"override-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/override.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">override (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/override","fileRelativePath":"articles/csharp/language-reference/keywords/override.html"},"themesRelativePathToOutputRoot":"_themes/"}