{"content":"<div><div class=\"content\">\n<p>The <code>lock</code> keyword marks a statement block as a critical section by obtaining the mutual-exclusion lock for a given object, executing a statement, and then releasing the lock. The following example includes a <code>lock</code> statement.  </p>\n<pre class=\"loading\"><code>\nclass Account  \n{  \n    decimal balance;  \n    private Object thisLock = new Object();  \n\n    public void Withdraw(decimal amount)  \n    {  \n        lock (thisLock)  \n        {  \n            if (amount &gt; balance)  \n            {  \n                throw new Exception(&quot;Insufficient funds&quot;);  \n            }  \n            balance -= amount;  \n        }  \n    }  \n}  \n</code></pre><p> For more information, see <a href=\"http://msdn.microsoft.com/library/413e1f28-a2c5-4eec-8338-aa43e7982ff4\" data-linktype=\"external\">Thread Synchronization</a>.  </p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> The <code>lock</code> keyword ensures that one thread does not enter a critical section of code while another thread is in the critical section. If another thread tries to enter a locked code, it will wait, block, until the object is released.  </p>\n<p> The section <a href=\"http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c\" data-linktype=\"external\">Threading</a> discusses threading.  </p>\n<p> The <code>lock</code> keyword calls <a class=\"xref\" href=\"../../../../api/system.threading.monitor#System_Threading_Monitor_Enter_\" data-linktype=\"relative-path\">Enter</a> at the start of the block and <a class=\"xref\" href=\"../../../../api/system.threading.monitor#System_Threading_Monitor_Exit_\" data-linktype=\"relative-path\">Exit</a> at the end of the block. A <a class=\"xref\" href=\"../../../../api/system.threading.threadinterruptedexception\" data-linktype=\"relative-path\">ThreadInterruptedException</a> is thrown if <a class=\"xref\" href=\"../../../../api/system.threading.thread#System_Threading_Thread_Interrupt_\" data-linktype=\"relative-path\">Interrupt</a> interrupts a thread that is waiting to enter a <code>lock</code> statement.  </p>\n<p> In general, avoid locking on a <code>public</code> type, or instances beyond your code&#39;s control. The common constructs <code>lock (this)</code>, <code>lock (typeof (MyType))</code>, and <code>lock (&quot;myLock&quot;)</code> violate this guideline:  </p>\n<ul>\n<li><p><code>lock (this)</code> is a problem if the instance can be accessed publicly.  </p>\n</li>\n<li><p><code>lock (typeof (MyType))</code> is a problem if <code>MyType</code> is publicly accessible.  </p>\n</li>\n<li><p><code>lock(&quot;myLock&quot;)</code> is a problem because any other code in the process using the same string, will share the same lock.  </p>\n</li>\n</ul>\n<p> Best practice is to define a <code>private</code> object to lock on, or a <code>private static</code> object variable to protect data common to all instances.  </p>\n<p> You can&#39;t use the <a href=\"await\" data-linktype=\"relative-path\">await</a> keyword in the body of a <code>lock</code> statement.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following sample shows a simple use of threads without locking in C#.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsFixedLock#5\">//using System.Threading;\n\nclass ThreadTest\n{\n    public void RunMe()\n    {\n        Console.WriteLine(&quot;RunMe called&quot;);\n    }\n\n    static void Main()\n    {\n        ThreadTest b = new ThreadTest();\n        Thread t = new Thread(b.RunMe);\n        t.Start();\n    }\n}\n// Output: RunMe called\n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> The following sample uses threads and <code>lock</code>. As long as the <code>lock</code> statement is present, the statement block is a critical section and <code>balance</code> will never become a negative number.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsFixedLock#6\">// using System.Threading;\n\nclass Account\n{\n    private Object thisLock = new Object();\n    int balance;\n\n    Random r = new Random();\n\n    public Account(int initial)\n    {\n        balance = initial;\n    }\n\n    int Withdraw(int amount)\n    {\n\n        // This condition never is true unless the lock statement\n        // is commented out.\n        if (balance &lt; 0)\n        {\n            throw new Exception(&quot;Negative Balance&quot;);\n        }\n\n        // Comment out the next line to see the effect of leaving out \n        // the lock keyword.\n        lock (thisLock)\n        {\n            if (balance &gt;= amount)\n            {\n                Console.WriteLine(&quot;Balance before Withdrawal :  &quot; + balance);\n                Console.WriteLine(&quot;Amount to Withdraw        : -&quot; + amount);\n                balance = balance - amount;\n                Console.WriteLine(&quot;Balance after Withdrawal  :  &quot; + balance);\n                return amount;\n            }\n            else\n            {\n                return 0; // transaction rejected\n            }\n        }\n    }\n\n    public void DoTransactions()\n    {\n        for (int i = 0; i &lt; 100; i++)\n        {\n            Withdraw(r.Next(1, 100));\n        }\n    }\n}\n\nclass Test\n{\n    static void Main()\n    {\n        Thread[] threads = new Thread[10];\n        Account acc = new Account(1000);\n        for (int i = 0; i &lt; 10; i++)\n        {\n            Thread t = new Thread(new ThreadStart(acc.DoTransactions));\n            threads[i] = t;\n        }\n        for (int i = 0; i &lt; 10; i++)\n        {\n            threads[i].Start();\n        }\n    }\n}\n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p>For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.reflection.methodimplattributes\" data-linktype=\"relative-path\">MethodImplAttributes</a><br> <a class=\"xref\" href=\"../../../../api/system.threading.mutex\" data-linktype=\"relative-path\">Mutex</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c\" data-linktype=\"external\">Threading</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"statement-keywords\" data-linktype=\"relative-path\">Statement Keywords</a><br> <a class=\"xref\" href=\"../../../../api/system.threading.monitor\" data-linktype=\"relative-path\">Monitor</a><br> <a href=\"http://msdn.microsoft.com/library/cbda7114-c752-4f3e-ada1-b1e8dd262f2b\" data-linktype=\"external\">Interlocked Operations</a><br> <a href=\"http://msdn.microsoft.com/library/6d39c48d-6b37-4a9b-8631-f2924cfd9c18\" data-linktype=\"external\">AutoResetEvent</a><br> <a href=\"http://msdn.microsoft.com/library/413e1f28-a2c5-4eec-8338-aa43e7982ff4\" data-linktype=\"external\">Thread Synchronization</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"656da1a4-707e-4ef6-9c6e-6d13b646af42\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"43\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/lock-statement.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/lock-statement.md\">\r\n<meta name=\"document_id\" content=\"01df23a1-9089-8c26-bcb1-73bb1d6283b3\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"lock Statement (C# Reference) | Microsoft Docs","ms.assetid":"656da1a4-707e-4ef6-9c6e-6d13b646af42","f1_keywords":["lock_CSharpKeyword","lock"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":43,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["lock keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/lock-statement.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/lock-statement.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/lock-statement.md","document_id":"01df23a1-9089-8c26-bcb1-73bb1d6283b3","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/lock-statement","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"lock Statement (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":567,"_op_rawTitle":"<h1 id=\"lock-statement-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/lock-statement.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">lock Statement (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/lock-statement","fileRelativePath":"articles/csharp/language-reference/keywords/lock-statement.html"},"themesRelativePathToOutputRoot":"_themes/"}