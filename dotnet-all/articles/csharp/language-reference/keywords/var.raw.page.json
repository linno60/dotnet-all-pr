{"content":"<div><div class=\"content\">\n<p>Beginning in Visual C# 3.0, variables that are declared at method scope can have an implicit type <code>var</code>. An implicitly typed local variable is strongly typed just as if you had declared the type yourself, but the compiler determines the type. The following two declarations of <code>i</code> are functionally equivalent:  </p>\n<pre class=\"loading\"><code>var i = 10; // implicitly typed  \nint i = 10; //explicitly typed  \n</code></pre><p> For more information, see <a href=\"../../programming-guide/classes-and-structs/implicitly-typed-local-variables\" data-linktype=\"relative-path\">Implicitly Typed Local Variables</a> and <a href=\"../../programming-guide/concepts/linq/type-relationships-in-linq-query-operations\" data-linktype=\"relative-path\">Type Relationships in LINQ Query Operations</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example shows two query expressions. In the first expression, the use of <code>var</code> is permitted but is not required, because the type of the query result can be stated explicitly as an <code>IEnumerable&lt;string&gt;</code>. However, in the second expression, <code>var</code> must be used because the result is a collection of anonymous types, and the name of that type is not accessible except to the compiler itself. Note that in Example #2, the <code>foreach</code> iteration variable <code>item</code> must also be implicitly typed.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsTypes#18\">            // Example #1: var is optional because\n            // the select clause specifies a string\n            string[] words = { &quot;apple&quot;, &quot;strawberry&quot;, &quot;grape&quot;, &quot;peach&quot;, &quot;banana&quot; };\n            var wordQuery = from word in words\n                            where word[0] == &#39;g&#39;\n                            select word;\n\n            // Because each element in the sequence is a string, \n            // not an anonymous type, var is optional here also.\n            foreach (string s in wordQuery)\n            {\n                Console.WriteLine(s);\n            }\n\n            // Example #2: var is required because\n            // the select clause specifies an anonymous type\n            var custQuery = from cust in customers\n                            where cust.City == &quot;Phoenix&quot;\n                            select new { cust.Name, cust.Phone };\n\n            // var must be used because each item \n            // in the sequence is an anonymous type\n            foreach (var item in custQuery)\n            {\n                Console.WriteLine(&quot;Name={0}, Phone={1}&quot;, item.Name, item.Phone);\n            }\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"../../programming-guide/classes-and-structs/implicitly-typed-local-variables\" data-linktype=\"relative-path\">Implicitly Typed Local Variables</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"0777850a-2691-4e3e-927f-0c850f5efe15\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"13\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/var.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/var.md\">\r\n<meta name=\"document_id\" content=\"32dd4b51-613d-e78d-0c49-efb949238167\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"var (C# Reference) | Microsoft Docs","ms.assetid":"0777850a-2691-4e3e-927f-0c850f5efe15","f1_keywords":["var","var_CSharpKeyword"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":13,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["var keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/var.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/var.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/var.md","document_id":"32dd4b51-613d-e78d-0c49-efb949238167","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/keywords/var","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"var (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":296,"_op_rawTitle":"<h1 id=\"var-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/var.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">var (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/keywords/var","fileRelativePath":"articles/csharp/language-reference/keywords/var.html"},"themesRelativePathToOutputRoot":"_themes/"}