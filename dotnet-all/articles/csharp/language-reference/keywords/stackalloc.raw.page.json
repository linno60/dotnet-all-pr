{"content":"<div><div class=\"content\">\n<p>The <code>stackalloc</code> keyword is used in an unsafe code context to allocate a block of memory on the stack.  </p>\n<pre class=\"loading\"><code>int* block = stackalloc int[100];  \n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p> The keyword is valid only in local variable initializers. The following code causes compiler errors.  </p>\n<pre class=\"loading\"><code>int* block;  \n// The following assignment statement causes compiler errors. You  \n// can use stackalloc only when declaring and initializing a local   \n// variable.  \nblock = stackalloc int[100];  \n</code></pre><p> Because pointer types are involved, <code>stackalloc</code> requires <a href=\"unsafe\" data-linktype=\"relative-path\">unsafe</a> context. For more information, see <a href=\"../../programming-guide/unsafe-code-pointers/index\" data-linktype=\"relative-path\">Unsafe Code and Pointers</a>.  </p>\n<p> <code>stackalloc</code> is like <a href=\"https://docs.microsoft.com/cpp/c-runtime-library/reference/alloca\" data-linktype=\"external\">_alloca</a> in the C run-time library.  </p>\n<p> The following example calculates and displays the first 20 numbers in the Fibonacci sequence. Each number is the sum of the previous two numbers. In the code, a block of memory of sufficient size to contain 20 elements of type <code>int</code> is allocated on the stack, not the heap. The address of the block is stored in the pointer <code>fib</code>. This memory is not subject to garbage collection and therefore does not have to be pinned (by using <a href=\"fixed-statement\" data-linktype=\"relative-path\">fixed</a>). The lifetime of the memory block is limited to the lifetime of the method that defines it. You cannot free the memory before the method returns.  </p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsOperator#15\">class Test\n{\n    static unsafe void Main()\n    {\n        const int arraySize = 20;\n        int* fib = stackalloc int[arraySize];\n        int* p = fib;\n        // The sequence begins with 1, 1.\n        *p++ = *p++ = 1;\n        for (int i = 2; i &lt; arraySize; ++i, ++p)\n        {\n            // Sum the previous two numbers.\n            *p = p[-1] + p[-2];\n        }\n        for (int i = 0; i &lt; arraySize; ++i)\n        {\n            Console.WriteLine(fib[i]);\n        }\n\n        // Keep the console window open in debug mode.\n        System.Console.WriteLine(&quot;Press any key to exit.&quot;);\n        System.Console.ReadKey();\n    }\n}\n/*\nOutput\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n610\n987\n1597\n2584\n4181\n6765\n*/\n</code></pre><h2 id=\"security\">Security</h2>\n<p> Unsafe code is less secure than safe alternatives. However, the use of <code>stackalloc</code> automatically enables buffer overrun detection features in the common language runtime (CLR). If a buffer overrun is detected, the process is terminated as quickly as possible to minimize the chance that malicious code is executed.  </p>\n<h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p>For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"operator-keywords\" data-linktype=\"relative-path\">Operator Keywords</a><br> <a href=\"../../programming-guide/unsafe-code-pointers/index\" data-linktype=\"relative-path\">Unsafe Code and Pointers</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.assetid\" content=\"adc04c28-3ed2-4326-807a-7545df92b852\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"27\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/stackalloc.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/stackalloc.md\">\r\n<meta name=\"document_id\" content=\"18de9eac-6ba0-606d-18a6-babc4bfc23e7\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"stackalloc (C# Reference) | Microsoft Docs","ms.assetid":"adc04c28-3ed2-4326-807a-7545df92b852","f1_keywords":["stackalloc_CSharpKeyword","stackalloc"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":27,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["stackalloc keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Absolute urls and other fixes (#1281)","commit_sha":"f7dffe4885b331cec8d37f3cc5c9163f69c3b4c9","commit_date":"2016-11-22 12:57:26 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/stackalloc.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/stackalloc.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/stackalloc.md","document_id":"18de9eac-6ba0-606d-18a6-babc4bfc23e7","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/stackalloc","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"stackalloc (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":396,"_op_rawTitle":"<h1 id=\"stackalloc-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/stackalloc.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">stackalloc (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/stackalloc","fileRelativePath":"articles/csharp/language-reference/keywords/stackalloc.html"},"themesRelativePathToOutputRoot":"_themes/"}