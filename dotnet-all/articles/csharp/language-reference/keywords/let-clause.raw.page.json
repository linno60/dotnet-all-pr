{"content":"<div><div class=\"content\">\n<p>In a query expression, it is sometimes useful to store the result of a sub-expression in order to use it in subsequent clauses. You can do this with the <code>let</code> keyword, which creates a new range variable and initializes it with the result of the expression you supply. Once initialized with a value, the range variable cannot be used to store another value. However, if the range variable holds a queryable type, it can be queried.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In the following example <code>let</code> is used in two ways:  </p>\n<ol>\n<li><p>To create an enumerable type that can itself be queried.  </p>\n</li>\n<li><p>To enable the query to call <code>ToLower</code> only one time on the range variable <code>word</code>. Without using <code>let</code>, you would have to call <code>ToLower</code> in each predicate in the <code>where</code> clause.  </p>\n</li>\n</ol>\n<pre><code class=\"lang-cs\" name=\"cscsrefQueryKeywords#28\">class LetSample1\n{\n    static void Main()\n    {\n        string[] strings = \n        {\n            &quot;A penny saved is a penny earned.&quot;,\n            &quot;The early bird catches the worm.&quot;,\n            &quot;The pen is mightier than the sword.&quot; \n        };\n\n        // Split the sentence into an array of words\n        // and select those whose first letter is a vowel.\n        var earlyBirdQuery =\n            from sentence in strings\n            let words = sentence.Split(&#39; &#39;)\n            from word in words\n            let w = word.ToLower()\n            where w[0] == &#39;a&#39; || w[0] == &#39;e&#39;\n                || w[0] == &#39;i&#39; || w[0] == &#39;o&#39;\n                || w[0] == &#39;u&#39;\n            select word;\n\n        // Execute the query.\n        foreach (var v in earlyBirdQuery)\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot; starts with a vowel&quot;, v);\n        }\n\n        // Keep the console window open in debug mode.\n        Console.WriteLine(&quot;Press any key to exit.&quot;);\n        Console.ReadKey();\n    }\n}\n/* Output:\n    &quot;A&quot; starts with a vowel\n    &quot;is&quot; starts with a vowel\n    &quot;a&quot; starts with a vowel\n    &quot;earned.&quot; starts with a vowel\n    &quot;early&quot; starts with a vowel\n    &quot;is&quot; starts with a vowel\n*/\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"query-keywords\" data-linktype=\"relative-path\">Query Keywords (LINQ)</a><br> <a href=\"../../programming-guide/linq-query-expressions/index\" data-linktype=\"relative-path\">LINQ Query Expressions</a><br> <a href=\"../../programming-guide/concepts/linq/getting-started-with-linq\" data-linktype=\"relative-path\">Getting Started with LINQ in C#</a><br> <a href=\"../../programming-guide/linq-query-expressions/how-to-handle-exceptions-in-query-expressions\" data-linktype=\"relative-path\">How to: Handle Exceptions in Query Expressions</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"13c9c1a4-ce57-48ef-8e1b-4c2a59b99fb4\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"15\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/let-clause.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/let-clause.md\">\r\n<meta name=\"document_id\" content=\"871ed697-5ebd-2371-d8f9-ad4ada4773b0\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"let clause (C# Reference) | Microsoft Docs","ms.assetid":"13c9c1a4-ce57-48ef-8e1b-4c2a59b99fb4","f1_keywords":["let_CSharpKeyword","let"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":15,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["let keyword [C#]","let clause [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/let-clause.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/let-clause.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/let-clause.md","document_id":"871ed697-5ebd-2371-d8f9-ad4ada4773b0","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/let-clause","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"let clause (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":311,"_op_rawTitle":"<h1 id=\"let-clause-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/let-clause.md\" sourcestartlinenumber=\"35\" sourceendlinenumber=\"35\">let clause (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/let-clause","fileRelativePath":"articles/csharp/language-reference/keywords/let-clause.html"},"themesRelativePathToOutputRoot":"_themes/"}