{"content":"<div><div class=\"content\">\n<p><code>int</code> denotes an integral type that stores values according to the size and range shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Range</th>\n<th>Size</th>\n<th>.NET Framework type</th>\n<th>Default Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>int</code></td>\n<td>-2,147,483,648 to 2,147,483,647</td>\n<td>Signed 32-bit integer</td>\n<td><a class=\"xref\" href=\"../../../../api/system.int32\" data-linktype=\"relative-path\">System.Int32</a></td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"literals\">Literals</h2>\n<p>You can declare and initialize an <code>int</code> variable by assigning a decimal literal, a hexadecimal literal, or (starting with C# 7) a binary literal to it.  If the integer literal is outside the range of <code>int</code> (that is, if it is less than <a class=\"xref\" href=\"../../../../api/system.int32#System_Int32_MinValue\" data-linktype=\"relative-path\">System.Int32.MinValue</a> or greater than <a class=\"xref\" href=\"../../../../api/system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">System.Int32.MaxValue</a>, a compilation error occurs. </p>\n<p>In the following example, integers equal to 16,342 that are represented as decimal, hexadecimal, and binary literals are assigned to <code>int</code> values.  </p>\n<pre><code class=\"lang-cs\" name=\"int\">int intValue1 = 90946;\nConsole.WriteLine(intValue1);\nint intValue2 = 0x16342;\nConsole.WriteLine(intValue2);\n\nint intValue3 = 0b0001_0110_0011_0100_0010;\nConsole.WriteLine(intValue3);\n// The example displays the following output:\n//          90946\n//          90946\n//          90946\n</code></pre><div class=\"NOTE\"><h5>Note</h5><p>You use the prefix <code>0x</code> or <code>0X</code> to denote a hexadecimal literal and the prefix <code>0b</code> or <code>0B</code> to denote a binary literal. Decimal literals have no prefix. </p>\n</div>\n<p>Starting with C# 7, you can also use the underscore character, <code>_</code>, as a digit separator to enhance readability, as the following example shows.</p>\n<pre><code class=\"lang-cs\" name=\"int\">int intValue1 = 90_946;\nConsole.WriteLine(intValue1);\n\nint intValue2 = 0x0001_6342;\nConsole.WriteLine(intValue2);\n\nint intValue3 = 0b0001_0110_0011_0100_0010;\nConsole.WriteLine(intValue3);\n// The example displays the following output:\n//          90946\n//          90946\n//          90946\n</code></pre><p> Integer literals can also include a suffix that denotes the type, although there is no suffix that denotes the <code>int</code> type. If an integer literal has no suffix, its type is the first of the following types in which its value can be represented: </p>\n<ol>\n<li><code>int</code></li>\n<li><a href=\"uint\" data-linktype=\"relative-path\">uint</a></li>\n<li><a href=\"long\" data-linktype=\"relative-path\">long</a></li>\n<li><a href=\"ulong\" data-linktype=\"relative-path\">ulong</a> </li>\n</ol>\n<p>In these examples, the literal 90946 is of type <code>int</code>.</p>\n<h2 id=\"conversions\">Conversions</h2>\n<p> There is a predefined implicit conversion from <code>int</code> to <a href=\"long\" data-linktype=\"relative-path\">long</a>, <a href=\"float\" data-linktype=\"relative-path\">float</a>, <a href=\"double\" data-linktype=\"relative-path\">double</a>, or <a href=\"decimal\" data-linktype=\"relative-path\">decimal</a>. For example:  </p>\n<pre class=\"loading\"><code class=\"lang-csharp\">// &#39;123&#39; is an int, so an implicit conversion takes place here:  \nfloat f = 123;  \n</code></pre><p> There is a predefined implicit conversion from <a href=\"sbyte\" data-linktype=\"relative-path\">sbyte</a>, <a href=\"byte\" data-linktype=\"relative-path\">byte</a>, <a href=\"short\" data-linktype=\"relative-path\">short</a>, <a href=\"ushort\" data-linktype=\"relative-path\">ushort</a>, or <a href=\"char\" data-linktype=\"relative-path\">char</a> to <code>int</code>. For example, the following assignment statement will produce a compilation error without a cast:  </p>\n<pre class=\"loading\"><code class=\"lang-csharp\">long aLong = 22;  \nint i1 = aLong;       // Error: no implicit conversion from long.  \nint i2 = (int)aLong;  // OK: explicit conversion.  \n</code></pre><p> Notice also that there is no implicit conversion from floating-point types to <code>int</code>. For example, the following statement generates a compiler error unless an explicit cast is used:  </p>\n<pre class=\"loading\"><code class=\"lang-csharp\">int x = 3.0;         // Error: no implicit conversion from double.  \nint y = (int)3.0;    // OK: explicit conversion.  \n</code></pre><p> For more information on arithmetic expressions with mixed floating-point types and integral types, see <a href=\"float\" data-linktype=\"relative-path\">float</a> and <a href=\"double\" data-linktype=\"relative-path\">double</a>.  </p>\n<h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p>For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.int32\" data-linktype=\"relative-path\">Int32</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"integral-types-table\" data-linktype=\"relative-path\">Integral Types Table</a><br> <a href=\"built-in-types-table\" data-linktype=\"relative-path\">Built-In Types Table</a><br> <a href=\"implicit-numeric-conversions-table\" data-linktype=\"relative-path\">Implicit Numeric Conversions Table</a><br> <a href=\"explicit-numeric-conversions-table\" data-linktype=\"relative-path\">Explicit Numeric Conversions Table</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.assetid\" content=\"212447b4-5d2a-41aa-88ab-84fe710bdb52\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"19\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2017-03-14\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:46 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/400dfda51d978f35c3995f90840643aaff1b9c13/docs/csharp/language-reference/keywords/int.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/int.md\">\r\n<meta name=\"document_id\" content=\"ba70ce2e-df53-4af3-c52e-67e797e3980f\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"int (C# Reference) | Microsoft Docs","ms.assetid":"212447b4-5d2a-41aa-88ab-84fe710bdb52","f1_keywords":["int_CSharpKeyword","int"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":19,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["int keyword [C#]"],"ms.date":"2017-03-14","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"tompratt-AQ","author_email":"v-thprat@microsoft.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Update language identifiers and styleguide. (#1796)","commit_sha":"400dfda51d978f35c3995f90840643aaff1b9c13","commit_date":"2017-03-24 14:01:03 -0700"},{"author_name":"Ron Petrusha","author_email":"ronpet@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"Revisions for support of binary literals (#1723)","commit_sha":"57c4b1c7ead9386ff4067da5915a55a79f5e562e","commit_date":"2017-03-20 13:35:24 -0400"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-04-01 05:46 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/tompratt-AQ","display_name":"tompratt-AQ","id":"26311438"},{"profile_url":"https://github.com/rpetrusha","display_name":"rpetrusha","id":"10886961"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"4/1/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/400dfda51d978f35c3995f90840643aaff1b9c13/docs/csharp/language-reference/keywords/int.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/int.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/int.md","document_id":"ba70ce2e-df53-4af3-c52e-67e797e3980f","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/int","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"int (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":470,"_op_rawTitle":"<h1 id=\"int-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/int.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">int (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/int","fileRelativePath":"articles/csharp/language-reference/keywords/int.html"},"themesRelativePathToOutputRoot":"_themes/"}