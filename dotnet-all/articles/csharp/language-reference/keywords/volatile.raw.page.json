{"content":"<div><div class=\"content\">\n<p>The <code>volatile</code> keyword indicates that a field might be modified by multiple threads that are executing at the same time. Fields that are declared <code>volatile</code> are not subject to compiler optimizations that assume access by a single thread. This ensures that the most up-to-date value is present in the field at all times.  </p>\n<p> The <code>volatile</code> modifier is usually used for a field that is accessed by multiple threads without using the <a href=\"lock-statement\" data-linktype=\"relative-path\">lock</a> statement to serialize access.  </p>\n<p> The <code>volatile</code> keyword can be applied to fields of these types:  </p>\n<ul>\n<li><p>Reference types.  </p>\n</li>\n<li><p>Pointer types (in an unsafe context). Note that although the pointer itself can be volatile, the object that it points to cannot. In other words, you cannot declare a &quot;pointer to volatile.&quot;  </p>\n</li>\n<li><p>Types such as sbyte, byte, short, ushort, int, uint, char, float, and bool.  </p>\n</li>\n<li><p>An enum type with one of the following base types: byte, sbyte, short, ushort, int, or uint.  </p>\n</li>\n<li><p>Generic type parameters known to be reference types.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"../../../../api/system.intptr\" data-linktype=\"relative-path\">IntPtr</a> and <a class=\"xref\" href=\"../../../../api/system.uintptr\" data-linktype=\"relative-path\">UIntPtr</a>.  </p>\n<p>The volatile keyword can only be applied to fields of a class or struct. Local variables cannot be declared <code>volatile</code>.  </p>\n</li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<p> The following example shows how to declare a public field variable as <code>volatile</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsModifiers#24\">    class VolatileTest\n    {\n        public volatile int i;\n\n        public void Test(int _i)\n        {\n            i = _i;\n        }\n    }\n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> The following example demonstrates how an auxiliary or worker thread can be created and used to perform processing in parallel with that of the primary thread. For background information about multithreading, see <a href=\"http://msdn.microsoft.com/library/7b46a7d9-c6f1-46d1-a947-ae97471bba87\" data-linktype=\"external\">Threading</a> and <a href=\"http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c\" data-linktype=\"external\">Threading</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideThreading#1\">using System;\nusing System.Threading;\n\npublic class Worker\n{\n    // This method is called when the thread is started.\n    public void DoWork()\n    {\n        while (!_shouldStop)\n        {\n            Console.WriteLine(&quot;Worker thread: working...&quot;);\n        }\n        Console.WriteLine(&quot;Worker thread: terminating gracefully.&quot;);\n    }\n    public void RequestStop()\n    {\n        _shouldStop = true;\n    }\n    // Keyword volatile is used as a hint to the compiler that this data\n    // member is accessed by multiple threads.\n    private volatile bool _shouldStop;\n}\n\npublic class WorkerThreadExample\n{\n    static void Main()\n    {\n        // Create the worker thread object. This does not start the thread.\n        Worker workerObject = new Worker();\n        Thread workerThread = new Thread(workerObject.DoWork);\n\n        // Start the worker thread.\n        workerThread.Start();\n        Console.WriteLine(&quot;Main thread: starting worker thread...&quot;);\n\n        // Loop until the worker thread activates.\n        while (!workerThread.IsAlive) ;\n\n        // Put the main thread to sleep for 1 millisecond to\n        // allow the worker thread to do some work.\n        Thread.Sleep(1);\n\n        // Request that the worker thread stop itself.\n        workerObject.RequestStop();\n\n        // Use the Thread.Join method to block the current thread \n        // until the object&#39;s thread terminates.\n        workerThread.Join();\n        Console.WriteLine(&quot;Main thread: worker thread has terminated.&quot;);\n    }\n    // Sample output:\n    // Main thread: starting worker thread...\n    // Worker thread: working...\n    // Worker thread: working...\n    // Worker thread: working...\n    // Worker thread: working...\n    // Worker thread: working...\n    // Worker thread: working...\n    // Worker thread: terminating gracefully.\n    // Main thread: worker thread has terminated.\n}\n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p> For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"modifiers\" data-linktype=\"relative-path\">Modifiers</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"78089bc7-7b38-4cfd-9e49-87ac036af009\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"29\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/volatile.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/volatile.md\">\r\n<meta name=\"document_id\" content=\"b56b1ffb-af73-8d1f-0d88-e50d848cd9a7\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"volatile (C# Reference) | Microsoft Docs","ms.assetid":"78089bc7-7b38-4cfd-9e49-87ac036af009","f1_keywords":["volatile_CSharpKeyword","volatile"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":29,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["volatile keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/volatile.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/volatile.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/volatile.md","document_id":"b56b1ffb-af73-8d1f-0d88-e50d848cd9a7","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/keywords/volatile","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"volatile (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":498,"_op_rawTitle":"<h1 id=\"volatile-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/volatile.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">volatile (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/language-reference/keywords/volatile","fileRelativePath":"articles/csharp/language-reference/keywords/volatile.html"},"themesRelativePathToOutputRoot":"_themes/"}