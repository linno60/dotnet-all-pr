{"content":"<div><div class=\"content\">\n<p>You can use the <code>as</code> operator to perform certain types of conversions between compatible reference types or <a href=\"../../programming-guide/nullable-types/index\" data-linktype=\"relative-path\">nullable types</a>. The following code shows an example.  </p>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsOperator#1\">    \n    class csrefKeywordsOperators\n    {\n        class Base\n        {\n            public override string  ToString()\n            {\n \t             return &quot;Base&quot;;\n            }\n        }\n        class Derived : Base \n        { }\n\n        class Program\n        {\n            static void Main()\n            {\n\n                Derived d = new Derived();\n\n                Base b = d as Base;\n                if (b != null)\n                {\n                    Console.WriteLine(b.ToString());\n                }\n\n            }\n        }\n    }\n</code></pre><h2 id=\"remarks\">Remarks</h2>\n<p> The <code>as</code> operator is like a cast operation. However, if the conversion isn&#39;t possible, <code>as</code> returns <code>null</code> instead of raising an exception. Consider the following example:  </p>\n<pre class=\"loading\"><code>expression as type  \n</code></pre><p> The code is equivalent to the following expression except that the <code>expression</code> variable is evaluated only one time.  </p>\n<pre class=\"loading\"><code>expression is type ? (type)expression : (type)null  \n</code></pre><p> Note that the <code>as</code> operator performs only reference conversions, nullable conversions, and boxing conversions. The <code>as</code> operator can&#39;t perform other conversions, such as user-defined conversions, which should instead be performed by using cast expressions.  </p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-cs\" name=\"csrefKeywordsOperator#2\">    class ClassA { }\n    class ClassB { }\n\n    class MainClass\n    {\n        static void Main()\n        {\n            object[] objArray = new object[6];\n            objArray[0] = new ClassA();\n            objArray[1] = new ClassB();\n            objArray[2] = &quot;hello&quot;;\n            objArray[3] = 123;\n            objArray[4] = 123.4;\n            objArray[5] = null;\n\n            for (int i = 0; i &lt; objArray.Length; ++i)\n            {\n                string s = objArray[i] as string;\n                Console.Write(&quot;{0}:&quot;, i);\n                if (s != null)\n                {\n                    Console.WriteLine(&quot;&#39;&quot; + s + &quot;&#39;&quot;);\n                }\n                else\n                {\n                    Console.WriteLine(&quot;not a string&quot;);\n                }\n            }\n        }\n    }\n    /*\n    Output:\n    0:not a string\n    1:not a string\n    2:&#39;hello&#39;\n    3:not a string\n    4:not a string\n    5:not a string\n    */\n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p> For more information, see the <a href=\"../language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../../programming-guide/index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">C# Keywords</a><br> <a href=\"is\" data-linktype=\"relative-path\">is</a><br> <a href=\"../operators/conditional-operator\" data-linktype=\"relative-path\">?: Operator</a><br> <a href=\"operator-keywords\" data-linktype=\"relative-path\">Operator Keywords</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"a9be126b-cbf4-4990-a70d-d0e1983cad0e\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"24\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/as.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/as.md\">\r\n<meta name=\"document_id\" content=\"ff471fab-fdec-6465-4a3d-8ee36281016c\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"as (C# Reference) | Microsoft Docs","ms.assetid":"a9be126b-cbf4-4990-a70d-d0e1983cad0e","f1_keywords":["as_CSharpKeyword","as"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":24,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["type conversion [C#], as keyword","as keyword [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/keywords/as.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/keywords/as.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/keywords/as.md","document_id":"ff471fab-fdec-6465-4a3d-8ee36281016c","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/as","toc_asset_id":"articles/csharp/language-reference/keywords/toc.json","toc_rel":"toc.json","_op_ogTitle":"as (C# Reference)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":294,"_op_rawTitle":"<h1 id=\"as-c-reference\" sourcefile=\"docs/csharp/language-reference/keywords/as.md\" sourcestartlinenumber=\"35\" sourceendlinenumber=\"35\">as (C# Reference)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/as","fileRelativePath":"articles/csharp/language-reference/keywords/as.html"},"themesRelativePathToOutputRoot":"_themes/"}