{"content":"<div><div class=\"content\">\n<p>Assuming assembly reference &quot;Assembly Name #1&quot; matches &quot;Assembly Name #2&quot;, you may need to supply runtime policy  </p>\n<p> The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application&#39;s .config file, and you must provide the correct strong name of an assembly, as demonstrated in the following example code.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following multifile sample references an assembly using two different external aliases. This first sample builds the older version of the code that creates assembly CS1701_d.  </p>\n<pre class=\"loading\"><code>// CS1701_a.cs  \n// compile with: /target:library /out:cs1701_d.dll /keyfile:mykey.snk  \nusing System.Reflection;  \n[assembly:AssemblyVersion(&quot;1.0&quot;)]  \npublic class A {  \n   public void M1() {}  \n}  \n\npublic class C1 {}  \n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> This is the code that creates the newer version of assembly CS1701_d. Note that it compiles into a different directory than the older version, necessary since the output files have the same names.  </p>\n<pre class=\"loading\"><code>// CS1701_b.cs  \n// compile with: /target:library /out:c:\\\\cs1701_d.dll /keyfile:mykey.snk  \nusing System.Reflection;  \n[assembly:AssemblyVersion(&quot;2.0&quot;)]  \npublic class A {  \n   public void M2() {}  \n   public void M1() {}  \n}  \n\npublic class C2 {}  \npublic class C1 {}  \n</code></pre><h2 id=\"example-2\">Example</h2>\n<p> This sample sets up the external aliases A1 and A2.  </p>\n<pre class=\"loading\"><code>// CS1701_c.cs  \n// compile with: /target:library /reference:A2=c:\\\\cs1701_d.dll /reference:A1=cs1701_d.dll  \n\nextern alias A1;  \nextern alias A2;  \n// using System;  \nusing a1 = A1::A;  \nusing a2 = A2::A;  \n\npublic class Ref {  \n   public static a1 A1() { return new a1(); }  \n   public static a2 A2() { return new a2(); }  \n\n   public static A1::C1 M1() { return new A1::C1(); }  \n   public static A2::C2 M2() { return new A2::C2(); }  \n}  \n</code></pre><h2 id=\"example-3\">Example</h2>\n<p> This sample calls methods using two different aliases of A. The following sample generates C1701.  </p>\n<pre class=\"loading\"><code>// CS1701_d.cs  \n// compile with: /reference:c:\\\\CS1701_d.dll /reference:CS1701_c.dll  \n// CS1701 expected  \nclass Tester {  \n   public static void Main() {  \n      Ref.A1().M1();  \n      Ref.A2().M2();  \n   }  \n}  \n</code></pre></div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"adbaf99e-c283-49a7-b940-4c9b84ebcb03\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"15\">\r\n<meta name=\"ms.topic\" content=\"error-reference\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/compiler-messages/cs1701.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/compiler-messages/cs1701.md\">\r\n<meta name=\"document_id\" content=\"82471a86-bf0c-d1cd-c4ae-15ffa260dd48\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Compiler Warning (level 2) CS1701 | Microsoft Docs","ms.assetid":"adbaf99e-c283-49a7-b940-4c9b84ebcb03","f1_keywords":["CS1701"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":15,"ms.topic":"error-reference","dev_langs":["csharp"],"helpviewer_keywords":["CS1701"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/language-reference/compiler-messages/cs1701.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/language-reference/compiler-messages/cs1701.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/compiler-messages/cs1701.md","document_id":"82471a86-bf0c-d1cd-c4ae-15ffa260dd48","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/compiler-messages/cs1701","toc_asset_id":"articles/csharp/language-reference/compiler-messages/toc.json","toc_rel":"toc.json","_op_ogTitle":"Compiler Warning (level 2) CS1701","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":289,"_op_rawTitle":"<h1 id=\"compiler-warning-level-2-cs1701\" sourcefile=\"docs/csharp/language-reference/compiler-messages/cs1701.md\" sourcestartlinenumber=\"33\" sourceendlinenumber=\"33\">Compiler Warning (level 2) CS1701</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/compiler-messages/cs1701","fileRelativePath":"articles/csharp/language-reference/compiler-messages/cs1701.html"},"themesRelativePathToOutputRoot":"_themes/"}