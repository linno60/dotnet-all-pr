{"content":"<div><div class=\"content\">\n<p>Once you&#39;ve followed the steps in <a href=\"library-with-visual-studio-2017\" data-linktype=\"relative-path\">Building a C# class library with .NET Core in Visual Studio 2017</a> and <a href=\"testing-library-with-visual-studio\" data-linktype=\"relative-path\">Testing a class library with .NET Core in Visual Studio 2017</a> to build and test your class library, and you&#39;ve built a Release version of the library, the next step is to make it available to callers. You can do this in two ways:</p>\n<ul>\n<li><p>If the library will be used by a single solution (for example, if it is a component in a single large application), you can simply include it as a project in your solution.</p>\n</li>\n<li><p>If the library will be generally accessible, you can distribute it as a NuGet package.</p>\n</li>\n</ul>\n<h2 id=\"including-a-library-as-a-project-in-a-solution\">Including a library as a project in a solution</h2>\n<p>Just as we included unit tests in the same solution as our class library, we can include our application as part of that solution. For example, let&#39;s use our class library in a console application that prompts the user to enter a string and reports whether its first character is uppercase:</p>\n<ol>\n<li><p>Open the <code>ClassLibraryProjects</code> solution created in the <a href=\"library-with-visual-studio-2017\" data-linktype=\"relative-path\">Building a C# Class Library with .NET Core in Visual Studio 2017</a> topic, and in Solution Explorer, open the context menu for the <strong>ClassLibraryProjects</strong> node and choose <strong>Add</strong>, <strong>New Project</strong>.</p>\n</li>\n<li><p>In the <strong>Add New Project</strong> dialog, expand the <strong>Visual C#</strong> and <strong>.NET Core</strong> nodes, and choose the <strong>Console App (.NET Core)</strong> project template, as the following figure shows.</p>\n<p><img src=\"media/use-library.jpg\" alt=\"Image\" data-linktype=\"relative-path\"></p>\n</li>\n<li><p>In the <strong>Name</strong> text box, enter <code>ShowCase</code>, and then choose the <strong>OK</strong> button.</p>\n</li>\n<li><p>In Solution Explorer, open the context menu for the <strong>ShowCase</strong> project node and choose <strong>Set as StartUp Project</strong>.</p>\n</li>\n<li><p>Initially our project doesn&#39;t have access to our class library. To allow it to call methods in our class library, in <strong>Solution Explorer</strong>, open the context menu for the <strong>Dependencies</strong> node in the <strong>ShowCase</strong> project  and choose <strong>Add Reference</strong>.</p>\n</li>\n<li><p>In the <strong>Reference Manager</strong> dialog, choose <strong>StringLibrary</strong>, our class library project, as the following figure shows, and then choose the <strong>OK</strong> button.</p>\n<p><img src=\"media/add-lib-ref.jpg\" alt=\"Image\" data-linktype=\"relative-path\"></p>\n</li>\n<li><p>In the code window for the &#39;program.cs&#39; file, replace all of the code with the following code:</p>\n<pre><code class=\"lang-csharp\" name=\"UsingClassLib#1\">using System;\nusing UtilityLibraries;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int rows = Console.WindowHeight;\n \n        Console.Clear();\n        do\n        {\n            if (Console.CursorTop &gt;= rows || Console.CursorTop == 0)\n            {\n                Console.Clear();\n                Console.WriteLine(&quot;\\nPress &lt;Enter&gt; only to exit; otherwise, enter a string and press &lt;Enter&gt;:\\n&quot;);\n            }\n            string input = Console.ReadLine();\n            if (String.IsNullOrEmpty(input)) break;\n            Console.WriteLine(&quot;Input: {0} {1,30}: {2}\\n&quot;, input, &quot;Begins with uppercase? &quot;,\n                              input.StartsWithUpper() ? &quot;Yes&quot; : &quot;No&quot;);\n        } while (true);\n    }\n}\n</code></pre><p>The code uses the <a class=\"xref\" href=\"../../../api/system.console#System_Console_WindowHeight\" data-linktype=\"relative-path\">Console.WindowHeight</a> property to determine how many rows the console window has. Whenever the <a class=\"xref\" href=\"../../../api/system.console#System_Console_CursorTop\" data-linktype=\"relative-path\">Console.CursorTop</a> property is greater than or equal to the total number of rows in the console window, the code clears the console window and redisplays a message to the user.</p>\n<p>The program itself just prompts the user to enter a string. It then indicates whether the string starts with an uppercase character. If the user presses the <strong>Enter</strong> key without entering a string, the console window closes and the application terminates.</p>\n</li>\n<li><p>If necessary, change the toolbar to compile the <strong>Debug</strong> release of the <code>ShowCase</code> project, as the following figure shows.</p>\n<p><img src=\"media/showcase-toolbar.jpg\" alt=\"Image\" data-linktype=\"relative-path\"></p>\n</li>\n<li><p>Compile and run the program by clicking the green arrow on the <strong>ShowCase</strong> button.</p>\n</li>\n</ol>\n<p>The application that uses this library can then be debugged and eventually published by following the steps listed in <a href=\"debugging-with-visual-studio-2017\" data-linktype=\"relative-path\">Debugging your C# Hello World Application with Visual Studio 2017</a> and <a href=\"publishing-with-visual-studio-2017\" data-linktype=\"relative-path\">Publishing your Hello World Application with Visual Studio 2017</a>.</p>\n<h2 id=\"distributing-the-library-in-a-nuget-package\">Distributing the library in a NuGet package</h2>\n<p>You can make your class library more widely available by publishing it as a NuGet package. Visual Studio does not support the creation of NuGet packages. To create one, you use the <a href=\"../../core/tools/dotnet\" data-linktype=\"relative-path\"><code>dotnet.exe</code> command line utility</a> as follows:</p>\n<ol>\n<li><p>Open a console window. For example, in the <strong>Ask me anything</strong> text box in the Windows taskbar, enter <code>Command Prompt</code>, and then choose the <strong>Command Prompt</strong> desktop app to open the console window.</p>\n</li>\n<li><p>Navigate to your library&#39;s project directory. Typically, unless you&#39;ve reconfigured the file location, it is in the <code>Documents\\Visual Studio 2017\\Projects\\ClassLibraryProjects\\StringLibrary</code> directory. The directory contains your source code and a project file, <code>StringLibrary.csproj</code>.</p>\n</li>\n<li><p>Issue the command <code>dotnet.exe pack --no-build</code>. The <code>dotnet.exe</code> utility generates a package with a .nupkg extension.</p>\n<div class=\"TIP\"><h5>Tip</h5><p>If the directory that contains <code>dotnet.exe</code> is not in your path, you can find its location by entering <code>where dotnet.exe</code> in the console window.</p>\n</div>\n</li>\n</ol>\n<p>For more information on creating NuGet packages, see <a href=\"../../core/deploying/creating-nuget-packages\" data-linktype=\"relative-path\">How to Create a NuGet Package with Cross Platform Tools</a>.</p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"shoag\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"csharp\">\r\n<meta name=\"ms.assetid\" content=\"d7b94076-1108-4174-94e7-a18f00072bb7\">\r\n<meta name=\"description\" content=\"Learn how to call the members in a class library with Visual Studio 2017\">\r\n<meta name=\"keywords\" content=\".NET Core, .NET Core class library, .NET STandard, .NET Standard class library distribution\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"11/16/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/594f8bfc6ab944d56d0249d05b99bb6fc209666c/docs/csharp/getting-started/consuming-library-with-visual-studio-2017.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/getting-started/consuming-library-with-visual-studio-2017.md\">\r\n<meta name=\"document_id\" content=\"0a6a1b31-ce08-1644-4c15-b51bfbc05c8c\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"shoag","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Consuming a class library with .NET Core in Visual Studio 2017 | Microsoft Docs","ms.devlang":"csharp","ms.assetid":"d7b94076-1108-4174-94e7-a18f00072bb7","description":"Learn how to call the members in a class library with Visual Studio 2017","keywords":".NET Core, .NET Core class library, .NET STandard, .NET Standard class library distribution","ms.topic":"article","ms.date":"11/16/2016","ms.technology":"devlang-csharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"bringing changes back","commit_sha":"594f8bfc6ab944d56d0249d05b99bb6fc209666c","commit_date":"2017-03-06 12:01:31 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"reverting merge (#1447)","commit_sha":"a8019c9fc25ef458aa555743e61cd83a3beb11ed","commit_date":"2017-01-24 07:04:28 -0800"},{"author_name":"rpetrusha","author_email":"ronpet@microsoft.com","committer_name":"rpetrusha","comitter_email":"ronpet@microsoft.com","message":"Removed RC from Visual Studio 2017 product name","commit_sha":"21de50320db3399a80602b4e862cb54c71043e0d","commit_date":"2017-01-18 12:58:36 -0800"},{"author_name":"jfaustino","author_email":"jfaustino5@outlook.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Fix typo","commit_sha":"06ead9b16d557638ee2f6347e047d0eb0d074fbd","commit_date":"2017-01-10 23:06:30 -0300"},{"author_name":"jfaustino","author_email":"jfaustino5@outlook.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Fix typo and \"TIP\" markdown (#1401)","commit_sha":"88686fe799ca5ceb0184bd289c25910b0ef42301","commit_date":"2017-01-10 00:56:26 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Fix broken connect links (#1250)","commit_sha":"d6ce9e3dd3c1189f35d147d140bb45095b3d77a5","commit_date":"2016-11-16 16:00:06 -0500"},{"author_name":"rpetrusha","author_email":"ronpet@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"Revised publishing topic, plus corrected typo","commit_sha":"be88927283d901908454d7c9fa78a72cbbb14d30","commit_date":"2016-11-16 09:43:33 -0500"},{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"Updated for final RC build (#2)","commit_sha":"edbec6c5f9a0b75e7be5a7f9737a3b91ea6c73a2","commit_date":"2016-11-16 09:43:33 -0500"},{"author_name":"rpetrusha","author_email":"ronpet@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":"Consuming a class library check-in","commit_sha":"3b44c6c79ad799870264aaf49ed02a815f32c90f","commit_date":"2016-11-16 09:43:33 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"},{"profile_url":"https://github.com/rpetrusha","display_name":"rpetrusha","id":"10886961"},{"profile_url":"https://github.com/jfaustino","display_name":"jfaustino","id":"6244917"},{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/594f8bfc6ab944d56d0249d05b99bb6fc209666c/docs/csharp/getting-started/consuming-library-with-visual-studio-2017.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/getting-started/consuming-library-with-visual-studio-2017.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/getting-started/consuming-library-with-visual-studio-2017.md","document_id":"0a6a1b31-ce08-1644-4c15-b51bfbc05c8c","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/getting-started/consuming-library-with-visual-studio-2017","toc_asset_id":"articles/csharp/getting-started/toc.json","toc_rel":"toc.json","_op_ogTitle":"Consuming a class library with .NET Core in Visual Studio 2017","_op_displayDate":"2016-11-16","_op_displayDate_source":"2016-11-16T00:00:00Z","_op_wordCount":740,"_op_rawTitle":"<h1 id=\"consuming-a-class-library-with-net-core-in-visual-studio-2017\" sourcefile=\"docs/csharp/getting-started/consuming-library-with-visual-studio-2017.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Consuming a class library with .NET Core in Visual Studio 2017</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/getting-started/consuming-library-with-visual-studio-2017","fileRelativePath":"articles/csharp/getting-started/consuming-library-with-visual-studio-2017.html"},"themesRelativePathToOutputRoot":"_themes/"}