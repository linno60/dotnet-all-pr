{"content":"<div><div class=\"content\">\n<p>This example shows how to return a query from a method as the return value and as an <code>out</code> parameter.  </p>\n<p> Query objects are composable, meaning that you can return a query from a method. Objects that represent queries do not store the resulting collection, but rather the steps to produce the results when needed. The advantage of returning query objects from methods is that they can be further composed or modified. Therefore any return value or <code>out</code> parameter of a method that returns a query must also have that type. If a method materializes a query into a concrete <a class=\"xref\" href=\"../../../api/system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> or <a class=\"xref\" href=\"../../../api/system.array\" data-linktype=\"relative-path\">Array</a> type, it is considered to be returning the query results instead of the query itself. A query variable that is returned from a method can still be composed or modified.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In the following example, the first method returns a query as a return value, and the second method returns a query as an <code>out</code> parameter. Note that in both cases it is a query that is  returned, not query results.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideLINQ#80\">class MQ\n{\n    // QueryMethhod1 returns a query as its value.\n    IEnumerable&lt;string&gt; QueryMethod1(ref int[] ints)\n    {\n        var intsToStrings = from i in ints\n                            where i &gt; 4\n                            select i.ToString();\n        return intsToStrings;\n    }\n\n    // QueryMethod2 returns a query as the value of parameter returnQ.\n    void QueryMethod2(ref int[] ints, out IEnumerable&lt;string&gt; returnQ)\n    {\n        var intsToStrings = from i in ints\n                            where i &lt; 4\n                            select i.ToString();\n        returnQ = intsToStrings;\n    }\n\n    static void Main()\n    {\n        MQ app = new MQ();\n\n        int[] nums = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n\n        // QueryMethod1 returns a query as the value of the method.\n        var myQuery1 = app.QueryMethod1(ref nums);\n\n        // Query myQuery1 is executed in the following foreach loop.\n        Console.WriteLine(&quot;Results of executing myQuery1:&quot;);\n        // Rest the mouse pointer over myQuery1 to see its type.\n        foreach (string s in myQuery1)\n        {\n            Console.WriteLine(s);\n        }\n\n        // You also can execute the query returned from QueryMethod1 \n        // directly, without using myQuery1.\n        Console.WriteLine(&quot;\\nResults of executing myQuery1 directly:&quot;);\n        // Rest the mouse pointer over the call to QueryMethod1 to see its\n        // return type.\n        foreach (string s in app.QueryMethod1(ref nums))\n        {\n            Console.WriteLine(s);\n        }\n\n\n        IEnumerable&lt;string&gt; myQuery2;\n        // QueryMethod2 returns a query as the value of its out parameter.\n        app.QueryMethod2(ref nums, out myQuery2);\n\n        // Execute the returned query.\n        Console.WriteLine(&quot;\\nResults of executing myQuery2:&quot;);\n        foreach (string s in myQuery2)\n        {\n            Console.WriteLine(s);\n        }\n\n\n        // You can modify a query by using query composition. A saved query\n        // is nested inside a new query definition that revises the results\n        // of the first query.\n        myQuery1 = from item in myQuery1\n                   orderby item descending\n                   select item;\n\n        // Execute the modified query.\n        Console.WriteLine(&quot;\\nResults of executing modified myQuery1:&quot;);\n        foreach (string s in myQuery1)\n        {\n            Console.WriteLine(s);\n        }\n\n        // Keep console window open in debug mode.\n        Console.WriteLine(&quot;Press any key to exit.&quot;);\n        Console.ReadKey();\n    }\n} \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"index\" data-linktype=\"relative-path\">LINQ Query Expressions</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"db220f79-c35b-41f2-886c-cd068672d42d\">\r\n<meta name=\"description\" content=\"How to return a query.\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core, C#\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"11/30/2016\">\r\n<meta name=\"ms.technology\" content=\".net-core-technologies\">\r\n<meta name=\"ms.prod\" content=\".net-core\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/97a29e60f5d861d848b85ef1e8ed8b1988f9ced1/docs/csharp/linq/return-a-query-from-a-method.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/linq/return-a-query-from-a-method.md\">\r\n<meta name=\"document_id\" content=\"cadf7846-7272-a26c-db39-4512c5e2b6d4\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Return a query from a method | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"db220f79-c35b-41f2-886c-cd068672d42d","description":"How to return a query.","keywords":".NET, .NET Core, C#","ms.topic":"article","ms.date":"11/30/2016","ms.technology":".net-core-technologies","ms.prod":".net-core","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Updated LINQ topics for C# Concepts section (#1302)","commit_sha":"97a29e60f5d861d848b85ef1e8ed8b1988f9ced1","commit_date":"2016-12-12 09:02:31 -0800"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/97a29e60f5d861d848b85ef1e8ed8b1988f9ced1/docs/csharp/linq/return-a-query-from-a-method.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/linq/return-a-query-from-a-method.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/linq/return-a-query-from-a-method.md","document_id":"cadf7846-7272-a26c-db39-4512c5e2b6d4","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/linq/return-a-query-from-a-method","toc_asset_id":"articles/csharp/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"Return a query from a method","_op_displayDate":"2016-11-30","_op_displayDate_source":"2016-11-30T00:00:00Z","_op_wordCount":472,"_op_rawTitle":"<h1 id=\"how-to-return-a-query-from-a-method-c-programming-guide\" sourcefile=\"docs/csharp/linq/return-a-query-from-a-method.md\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"16\">How to: Return a Query from a Method (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/linq/return-a-query-from-a-method","fileRelativePath":"articles/csharp/linq/return-a-query-from-a-method.html"},"themesRelativePathToOutputRoot":"_themes/"}