{"content":"<div><div class=\"content\">\n<p>This example shows how to perform join operations in which you want to use more than one key to define a match. This is accomplished by using a composite key. You create a composite key as an anonymous type or named typed with the values that you want to compare. If the query variable will be passed across method boundaries, use a named type that overrides <a class=\"xref\" href=\"../../../api/system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> and <a class=\"xref\" href=\"../../../api/system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> for the key. The names of the properties, and the order in which they occur, must be identical in each key.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example demonstrates how to use a composite key to join data from three tables:  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">var query = from o in db.Orders  \n    from p in db.Products  \n    join d in db.OrderDetails   \n        on new {o.OrderID, p.ProductID} equals new {d.OrderID,        d.ProductID} into details  \n        from d in details  \n        select new {o.OrderID, p.ProductID, d.UnitPrice};  \n</code></pre><p> Type inference on composite keys depends on the names of the properties in the keys, and the order in which they occur. If the properties in the source sequences do not have the same names, you must assign new names in the keys. For example, if the <code>Orders</code> table and <code>OrderDetails</code> table each used different names for their columns, you could create composite keys by assigning identical names in the anonymous types:  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">join...on new {Name = o.CustomerName, ID = o.CustID} equals   \n    new {Name = d.CustName, ID = d.CustID }  \n</code></pre><p> Composite keys can be also used in a <code>group</code> clause.  </p>\n<h2 id=\"see-also\">See also</h2>\n<p> <a href=\"index\" data-linktype=\"relative-path\">LINQ query expressions</a><br> <a href=\"../language-reference/keywords/join-clause\" data-linktype=\"relative-path\">join clause</a><br> <a href=\"../language-reference/keywords/group-clause\" data-linktype=\"relative-path\">group clause</a></p>\n</div></div>","outputRootRelativePath":"../../../","pageMetadata":"<meta name=\"author\" content=\"stevehoag\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"da70b54d-3213-45eb-8437-fbe75cbcf935\">\r\n<meta name=\"description\" content=\"How to join by using composite keys.\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core, C#\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"12/1/2016\">\r\n<meta name=\"ms.technology\" content=\".net-core-technologies\">\r\n<meta name=\"ms.prod\" content=\".net-core\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/97a29e60f5d861d848b85ef1e8ed8b1988f9ced1/docs/csharp/linq/join-by-using-composite-keys.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/linq/join-by-using-composite-keys.md\">\r\n<meta name=\"document_id\" content=\"fe0be080-ee2c-32b4-007b-b9827029e212\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"stevehoag","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Join by using composite keys | Microsoft Docs","ms.devlang":"dotnet","ms.assetid":"da70b54d-3213-45eb-8437-fbe75cbcf935","description":"How to join by using composite keys.","keywords":".NET, .NET Core, C#","ms.topic":"article","ms.date":"12/1/2016","ms.technology":".net-core-technologies","ms.prod":".net-core","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Steve Hoag","author_email":"shoag@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Updated LINQ topics for C# Concepts section (#1302)","commit_sha":"97a29e60f5d861d848b85ef1e8ed8b1988f9ced1","commit_date":"2016-12-12 09:02:31 -0800"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag","id":"13489215"},"contributors":[{"profile_url":"https://github.com/stevehoag","display_name":"Steve Hoag"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/97a29e60f5d861d848b85ef1e8ed8b1988f9ced1/docs/csharp/linq/join-by-using-composite-keys.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/linq/join-by-using-composite-keys.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/linq/join-by-using-composite-keys.md","document_id":"fe0be080-ee2c-32b4-007b-b9827029e212","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/linq/join-by-using-composite-keys","toc_asset_id":"articles/csharp/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"Join by using composite keys","_op_displayDate":"2016-12-1","_op_displayDate_source":"2016-12-01T00:00:00Z","_op_wordCount":247,"_op_rawTitle":"<h1 id=\"join-by-using-composite-keys\" sourcefile=\"docs/csharp/linq/join-by-using-composite-keys.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Join by using composite keys</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/linq/join-by-using-composite-keys","fileRelativePath":"articles/csharp/linq/join-by-using-composite-keys.html"},"themesRelativePathToOutputRoot":"_themes/"}