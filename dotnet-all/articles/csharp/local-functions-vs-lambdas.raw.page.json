{"content":"<div><div class=\"content\">\n<p>In some use cases, you could create a lambda expression and use it\nwithout needing to create a local function. Here&#39;s an example async\nmethod that does just that:</p>\n<pre><code class=\"lang-csharp\" name=\"TaskLambdaExample\" title=\"Task returning method with lambda expression\">public Task&lt;string&gt; PerformLongRunningWorkLambda(string address, int index, string name)\n{\n    if (string.IsNullOrWhiteSpace(address))\n        throw new ArgumentException(message: &quot;An address is required&quot;, paramName: nameof(address));\n    if (index &lt; 0)\n        throw new ArgumentOutOfRangeException(paramName: nameof(index), message: &quot;The index must be non-negative&quot;);\n    if (string.IsNullOrWhiteSpace(name))\n        throw new ArgumentException(message: &quot;You must supply a name&quot;, paramName: nameof(name));\n\n    Func&lt;Task&lt;string&gt;&gt; longRunningWorkImplementation = async () =&gt;\n    {\n        var interimResult = await FirstWork(address);\n        var secondResult = await SecondStep(index, name);\n        return $&quot;The results are {interimResult} and {secondResult}. Enjoy.&quot;;\n    };\n\n    return longRunningWorkImplementation();\n}\n</code></pre><p>However, there are a number of reasons to prefer using local functions\ninstead of defining and calling lambda expressions.</p>\n<p>First, for lambda expressions, the compiler must create an anonymous class\nand an instance of that class to store any variables captured by the\nclosure. The closure for this lambda expression contains the <code>address</code>,\n<code>index</code> and <code>name</code> variables. </p>\n<p>Second, lambda expressions are implemented by instantiating a delegate\nand invoking that delegate. Local functions are implemented as method calls.\nThe instantiation necessary for lambda expressions means extra memory\nallocations, which may be a performance factor in time critical code paths.\nLocal functions do not incur this overhead.</p>\n<p>Third, local functions can be called before they are defined. Lambda\nexpressions must be declared before they are defined. This\nmeans local functions are easier to use in recursive algorithms:</p>\n<pre><code class=\"lang-csharp\" name=\"LocalFunctionFactorial\" title=\"Recursive factorial using local function\">public static int LocalFunctionFactorial(int n)\n{\n    return nthFactorial(n);\n    int nthFactorial(int number) =&gt; (number &lt; 2) ? \n        1 : number * nthFactorial(number - 1);\n}\n</code></pre><p>Contrast that implementation with a version that uses lambda expressions:</p>\n<pre><code class=\"lang-csharp\" name=\"26_LambdaFactorial\" title=\"Recursive factorial using lambda expressions\">public static int LambdaFactorial(int n)\n{\n    Func&lt;int, int&gt; nthFactorial = default(Func&lt;int, int&gt;);\n    nthFactorial = (number) =&gt; (number &lt; 2) ? \n        1 : number * nthFactorial(number - 1);\n    return nthFactorial(n);\n}\n</code></pre><p>Notice that the version using the lambda expression must declare and initialize\nthe lambda expression, <code>nthFactorial</code> before defining it. Not doing so results\nin a compile time error for referencing <code>nthFactorial</code> before assigning it.\nRecursive algorithms are easier to create using local functions. </p>\n<p>While local functions may seem redundant to lambda expressions,\nthey actually serve different purposes and have different uses.\nLocal functions are more efficient for the case when you want\nto write a function that is called only from the context of\nanother method.</p>\n</div></div>","outputRootRelativePath":"../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.devlang\" content=\"csharp\">\r\n<meta name=\"ms.assetid\" content=\"368d1752-3659-489a-97b4-f15d87e49ae3\">\r\n<meta name=\"description\" content=\"Why Local Functions might be a better choice than Lambda Expressions\">\r\n<meta name=\"keywords\" content=\"C#, .NET, .NET Core, Latest Features, What&#39;s New, local functions, lambda expressions\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"10/27/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\"visual-studio-dev-15\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/d970e86efce5ecd437532909b337539222df6f5f/docs/csharp/local-functions-vs-lambdas.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/local-functions-vs-lambdas.md\">\r\n<meta name=\"document_id\" content=\"96ee8f65-b57e-f3ae-0e66-96a416c0543c\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Local functions vs. lambda expressions | Microsoft Docs","ms.devlang":"csharp","ms.assetid":"368d1752-3659-489a-97b4-f15d87e49ae3","description":"Why Local Functions might be a better choice than Lambda Expressions","keywords":"C#, .NET, .NET Core, Latest Features, What's New, local functions, lambda expressions","ms.topic":"article","ms.date":"10/27/2016","ms.technology":"devlang-csharp","ms.prod":"visual-studio-dev-15","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Update pattern matching to fix a couple small issues (#1612)","commit_sha":"d970e86efce5ecd437532909b337539222df6f5f","commit_date":"2017-03-06 15:45:58 -0500"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"New in csharp7 (#1188)","commit_sha":"1442cbafa04d57e7eb864c0697afef01413db168","commit_date":"2016-11-13 15:54:48 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/d970e86efce5ecd437532909b337539222df6f5f/docs/csharp/local-functions-vs-lambdas.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/local-functions-vs-lambdas.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/local-functions-vs-lambdas.md","document_id":"96ee8f65-b57e-f3ae-0e66-96a416c0543c","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/local-functions-vs-lambdas","toc_asset_id":"articles/toc.json","toc_rel":"../toc.json","_op_ogTitle":"Local functions vs. lambda expressions","_op_displayDate":"2016-10-27","_op_displayDate_source":"2016-10-27T00:00:00Z","_op_wordCount":385,"_op_rawTitle":"<h3 id=\"local-functions-compared-to-lambda-expressions\" sourcefile=\"docs/csharp/local-functions-vs-lambdas.md\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"16\">Local functions compared to Lambda expressions</h3>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/local-functions-vs-lambdas","fileRelativePath":"articles/csharp/local-functions-vs-lambdas.html"},"themesRelativePathToOutputRoot":"_themes/"}