{"content":"<div><div class=\"content\">\n<p>If you have used LINQ, you have experience with a rich library\nwhere the <code>Func</code> types are part of the API set. (If you are not familiar\nwith LINQ, you probably want to read <a href=\"linq/index\" data-linktype=\"relative-path\">the LINQ tutorial</a> and\nthe tutorial on <a href=\"lambda-expressions\" data-linktype=\"relative-path\">lambda expressions</a> before this one.)\n<em>Expression Trees</em> provide richer interaction with the arguments that\nare functions.</p>\n<p>You write function arguments, typically using Lambda Expressions, when\nyou create LINQ queries. In a typical LINQ query, those function arguments are\ntransformed into a delegate the compiler creates. </p>\n<p>When you want to have a richer interaction, you need to use <em>Expression Trees</em>.\nExpression Trees represent code as a structure that you can examine,\nmodify, or execute. These tools give you the power to manipulate code during\nrun time. You can write code that examines running algorithms, or injects new\ncapabilities. In more advanced scenarios, you can modify running algorithms,\nand even translate C# expressions into another form for execution in another\nenvironment.</p>\n<p>You&#39;ve likely already written code that uses Expression Trees. Entity Framework&#39;s\nLINQ APIs accept Expression Trees as the arguments for the LINQ Query Expression Pattern.\nThat enables <a href=\"http://docs.efproject.net/en/latest/\" data-linktype=\"external\">Entity Framework</a> to translate the query you wrote in C# into SQL\nthat executes in the database engine. Another example is <a href=\"https://github.com/Moq/moq\" data-linktype=\"external\">Moq</a>,\nwhich is a popular mocking framework for .NET.</p>\n<p>The remaining sections of this tutorial will explore what Expression Trees are,\nexamine the framework classes that support expression trees, and show you how to work\nwith expression trees. You&#39;ll learn how to read expression trees, how to create\nexpression trees, how to create modified expression trees, and how to execute the\ncode represented by expression trees. After reading, you will be ready to use these\nstructures to create rich adaptive algorithms.\n<!-- style element removed --></p>\n<ol>\n<li><p><a href=\"expression-trees-explained\" data-linktype=\"relative-path\">Expression Trees Explained</a></p>\n<p> Understand the structure and concepts behind <em>Expression Trees</em>.</p>\n</li>\n<li><p><a href=\"expression-classes\" data-linktype=\"relative-path\">Framework Types Supporting Expression Trees</a></p>\n<p> Learn about the structures and classes that define and manipulate expression trees.</p>\n</li>\n<li><p><a href=\"expression-trees-execution\" data-linktype=\"relative-path\">Executing Expressions</a></p>\n<p> Learn how to convert an expression tree represented as a Lambda Expression into a delegate and execute the resulting delegate.</p>\n</li>\n<li><p><a href=\"expression-trees-interpreting\" data-linktype=\"relative-path\">Interpreting Expressions</a></p>\n<p> Learn how to traverse and examine <em>expression trees</em> to understand what code the expression tree represents.</p>\n</li>\n<li><p><a href=\"expression-trees-building\" data-linktype=\"relative-path\">Building Expressions</a></p>\n<p> Learn how to construct the nodes for an expression tree and build expression trees.</p>\n</li>\n<li><p><a href=\"expression-trees-translating\" data-linktype=\"relative-path\">Translating Expressions</a></p>\n<p> Learn how to build a modified copy of an expression tree, or translate an expression tree into a different format.</p>\n</li>\n<li><p><a href=\"expression-trees-summary\" data-linktype=\"relative-path\">Summing up</a></p>\n<p> Review the information on expression trees.</p>\n</li>\n</ol>\n</div></div>","outputRootRelativePath":"../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.devlang\" content=\"csharp\">\r\n<meta name=\"ms.assetid\" content=\"aceb4719-0d5a-4b19-b01f-b51063bcc54f\">\r\n<meta name=\"description\" content=\"Expression Trees\">\r\n<meta name=\"keywords\" content=\".NET, .NET Core\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"06/20/2016\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/763433b00ae7d01cfa0c7fa250f51d23a95f6f15/docs/csharp/expression-trees.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/expression-trees.md\">\r\n<meta name=\"document_id\" content=\"5beda7e8-e89a-aeb5-6121-64c8d11773e4\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"../toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"Expression Trees | Microsoft Docs","ms.devlang":"csharp","ms.assetid":"aceb4719-0d5a-4b19-b01f-b51063bcc54f","description":"Expression Trees","keywords":".NET, .NET Core","ms.topic":"article","ms.date":"06/20/2016","ms.technology":"devlang-csharp","ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Ron Petrusha","author_email":"ronpet@microsoft.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Fixed broken links to LINQ topic (#1331)","commit_sha":"763433b00ae7d01cfa0c7fa250f51d23a95f6f15","commit_date":"2016-12-13 19:28:50 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"Rich Lander","comitter_email":"rlander@microsoft.com","message":"Promote csharp from languages (#644)","commit_sha":"2d44b7e04c0fe2ca136ba6dfa9fc3a4368365ec8","commit_date":"2016-06-26 08:30:56 -0700"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/rpetrusha","display_name":"rpetrusha","id":"10886961"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/763433b00ae7d01cfa0c7fa250f51d23a95f6f15/docs/csharp/expression-trees.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/expression-trees.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/expression-trees.md","document_id":"5beda7e8-e89a-aeb5-6121-64c8d11773e4","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/expression-trees","toc_asset_id":"articles/toc.json","toc_rel":"../toc.json","_op_ogTitle":"Expression Trees","_op_displayDate":"2016-6-20","_op_displayDate_source":"2016-06-20T00:00:00Z","_op_wordCount":408,"_op_rawTitle":"<h1 id=\"expression-trees\" sourcefile=\"docs/csharp/expression-trees.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">Expression Trees</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/expression-trees","fileRelativePath":"articles/csharp/expression-trees.html"},"themesRelativePathToOutputRoot":"_themes/"}