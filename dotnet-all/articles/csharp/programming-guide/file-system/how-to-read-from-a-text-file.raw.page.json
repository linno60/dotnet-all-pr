{"content":"<div><div class=\"content\">\n<p>This example reads the contents of a text file by using the static methods <a class=\"xref\" href=\"../../../../api/system.io.file#System_IO_File_ReadAllText_\" data-linktype=\"relative-path\">ReadAllText</a> and <a class=\"xref\" href=\"../../../../api/system.io.file#System_IO_File_ReadAllLines_\" data-linktype=\"relative-path\">ReadAllLines</a> from the <a class=\"xref\" href=\"../../../../api/system.io.file\" data-linktype=\"relative-path\">System.IO.File</a> class.  </p>\n<p> For an example that uses <a class=\"xref\" href=\"../../../../api/system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a>, see <a href=\"how-to-read-a-text-file-one-line-at-a-time\" data-linktype=\"relative-path\">How to: Read a Text File One Line at a Time</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The files that are used in this example are created in the topic <a href=\"how-to-write-to-a-text-file\" data-linktype=\"relative-path\">How to: Write to a Text File</a>.  </p>\n</div>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-cs\" name=\"csFilesandFolders#4\">    class ReadFromFile\n    {\n        static void Main()\n        {\n            // The files used in this example are created in the topic\n            // How to: Write to a Text File. You can change the path and\n            // file name to substitute text files of your own.\n\n            // Example #1\n            // Read the file as one string.\n            string text = System.IO.File.ReadAllText(@&quot;C:\\Users\\Public\\TestFolder\\WriteText.txt&quot;);\n\n            // Display the file contents to the console. Variable text is a string.\n            System.Console.WriteLine(&quot;Contents of WriteText.txt = {0}&quot;, text);\n\n            // Example #2\n            // Read each line of the file into a string array. Each element\n            // of the array is one line of the file.\n            string[] lines = System.IO.File.ReadAllLines(@&quot;C:\\Users\\Public\\TestFolder\\WriteLines2.txt&quot;);\n\n            // Display the file contents by using a foreach loop.\n            System.Console.WriteLine(&quot;Contents of WriteLines2.txt = &quot;);\n            foreach (string line in lines)\n            {\n                // Use a tab to indent each line of the file.\n                Console.WriteLine(&quot;\\t&quot; + line);\n            }\n\n            // Keep the console window open in debug mode.\n            Console.WriteLine(&quot;Press any key to exit.&quot;);\n            System.Console.ReadKey();\n        }\n    }\n</code></pre><h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Copy the code and paste it into a C# console application.  </p>\n<p> If you are not using the text files from <a href=\"how-to-write-to-a-text-file\" data-linktype=\"relative-path\">How to: Write to a Text File</a>, replace the argument to <code>ReadAllText</code> and <code>ReadAllLines</code> with the appropriate path and file name on your computer.  </p>\n<h2 id=\"robust-programming\">Robust Programming</h2>\n<p> The following conditions may cause an exception:  </p>\n<ul>\n<li>The file doesn&#39;t exist or doesn&#39;t exist at the specified location. Check the path and the spelling of the file name.  </li>\n</ul>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Do not rely on the name of a file to determine the contents of the file. For example, the file <code>myFile.cs</code> might not be a C# source file.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.io\" data-linktype=\"relative-path\">System.IO</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">File System and the Registry (C# Programming Guide)</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"92246c5b-e819-4eea-9370-1a9460e12de3\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"17\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/file-system/how-to-read-from-a-text-file.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/file-system/how-to-read-from-a-text-file.md\">\r\n<meta name=\"document_id\" content=\"1a59527d-fcda-f696-181a-47460a7ef79a\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Read From a Text File (C# Programming Guide) | Microsoft Docs","ms.assetid":"92246c5b-e819-4eea-9370-1a9460e12de3","f1_keywords":["StreamReader.ReadToEnd"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":17,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["text files, writing to","reading text files","reading data, text files","text files, reading"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize the C# Guide TOC (#1318)","commit_sha":"3115359729431ecbcc16058612da59b85621fa0f","commit_date":"2017-01-23 23:20:14 -0500"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/file-system/how-to-read-from-a-text-file.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/file-system/how-to-read-from-a-text-file.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/file-system/how-to-read-from-a-text-file.md","document_id":"1a59527d-fcda-f696-181a-47460a7ef79a","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/file-system/how-to-read-from-a-text-file","toc_asset_id":"articles/csharp/programming-guide/file-system/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Read From a Text File (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":337,"_op_rawTitle":"<h1 id=\"how-to-read-from-a-text-file-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/file-system/how-to-read-from-a-text-file.md\" sourcestartlinenumber=\"41\" sourceendlinenumber=\"41\">How to: Read From a Text File (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/file-system/how-to-read-from-a-text-file","fileRelativePath":"articles/csharp/programming-guide/file-system/how-to-read-from-a-text-file.html"},"themesRelativePathToOutputRoot":"_themes/"}