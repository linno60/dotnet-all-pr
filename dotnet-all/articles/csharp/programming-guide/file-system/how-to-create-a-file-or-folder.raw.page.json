{"content":"<div><div class=\"content\">\n<p>You can programmatically create a folder on your computer, create a subfolder, create a file in the subfolder, and write data to the file.  </p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-cs\" name=\"csFilesandFolders#10\">public class CreateFileOrFolder\n{\n    static void Main()\n    {\n        // Specify a name for your top-level folder.\n        string folderName = @&quot;c:\\Top-Level Folder&quot;;\n\n        // To create a string that specifies the path to a subfolder under your \n        // top-level folder, add a name for the subfolder to folderName.\n        string pathString = System.IO.Path.Combine(folderName, &quot;SubFolder&quot;);\n\n        // You can write out the path name directly instead of using the Combine\n        // method. Combine just makes the process easier.\n        string pathString2 = @&quot;c:\\Top-Level Folder\\SubFolder2&quot;;\n\n        // You can extend the depth of your path if you want to.\n        //pathString = System.IO.Path.Combine(pathString, &quot;SubSubFolder&quot;);\n\n        // Create the subfolder. You can verify in File Explorer that you have this\n        // structure in the C: drive.\n        //    Local Disk (C:)\n        //        Top-Level Folder\n        //            SubFolder\n        System.IO.Directory.CreateDirectory(pathString);\n\n        // Create a file name for the file you want to create. \n        string fileName = System.IO.Path.GetRandomFileName();\n\n        // This example uses a random string for the name, but you also can specify\n        // a particular name.\n        //string fileName = &quot;MyNewFile.txt&quot;;\n\n        // Use Combine again to add the file name to the path.\n        pathString = System.IO.Path.Combine(pathString, fileName);\n\n        // Verify the path that you have constructed.\n        Console.WriteLine(&quot;Path to my file: {0}\\n&quot;, pathString);\n\n        // Check that the file doesn&#39;t already exist. If it doesn&#39;t exist, create\n        // the file and write integers 0 - 99 to it.\n        // DANGER: System.IO.File.Create will overwrite the file if it already exists.\n        // This could happen even with random file names, although it is unlikely.\n        if (!System.IO.File.Exists(pathString))\n        {\n            using (System.IO.FileStream fs = System.IO.File.Create(pathString))\n            {\n                for (byte i = 0; i &lt; 100; i++)\n                {\n                    fs.WriteByte(i);\n                }\n            }\n        }\n        else\n        {\n            Console.WriteLine(&quot;File \\&quot;{0}\\&quot; already exists.&quot;, fileName);\n            return;\n        }\n\n        // Read and display the data from your file.\n        try\n        {\n            byte[] readBuffer = System.IO.File.ReadAllBytes(pathString);\n            foreach (byte b in readBuffer)\n            {\n                Console.Write(b + &quot; &quot;);\n            }\n            Console.WriteLine();\n        }\n        catch (System.IO.IOException e)\n        {\n            Console.WriteLine(e.Message);\n        }\n\n        // Keep the console window open in debug mode.\n        System.Console.WriteLine(&quot;Press any key to exit.&quot;);\n        System.Console.ReadKey();\n    }\n    // Sample output:\n\n    // Path to my file: c:\\Top-Level Folder\\SubFolder\\ttxvauxe.vv0\n\n    //0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n    //30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56\n    // 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 8\n    //3 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n}\n</code></pre><p> If the folder already exists, <a class=\"xref\" href=\"../../../../api/system.io.directory#System_IO_Directory_CreateDirectory_\" data-linktype=\"relative-path\">CreateDirectory</a> does nothing, and no exception is thrown. However, <a class=\"xref\" href=\"../../../../api/system.io.file#System_IO_File_Create_\" data-linktype=\"relative-path\">Create</a> replaces an existing file with a new file. The example uses an <code>if</code>-<code>else</code> statement to prevent an existing file from being replaced.  </p>\n<p> By making the following changes in the example, you can specify different outcomes based on whether a file with a certain name already exists. If such a file doesn&#39;t exist, the code creates one. If such a file exists, the code appends data to that file.  </p>\n<ul>\n<li><p>Specify a non-random file name.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">// Comment out the following line.  \n//string fileName = System.IO.Path.GetRandomFileName();  \n\n// Replace that line with the following assignment.  \nstring fileName = &quot;MyNewFile.txt&quot;;  \n</code></pre></li>\n<li><p>Replace the <code>if</code>-<code>else</code> statement with the <code>using</code> statement in the following code.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">using (System.IO.FileStream fs = new System.IO.FileStream(pathString, FileMode.Append))   \n{  \n    for (byte i = 0; i &lt; 100; i++)  \n    {  \n        fs.WriteByte(i);  \n    }  \n}  \n</code></pre><p>Run the example several times to verify that data is added to the file each time.  </p>\n<p>For more <code>FileMode</code> values that you can try, see <a class=\"xref\" href=\"../../../../api/system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>.  </p>\n<p>The following conditions may cause an exception:  </p>\n</li>\n<li><p>The folder name is malformed. For example, it contains illegal characters or is only white space (<a class=\"xref\" href=\"../../../../api/system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> class). Use the <a class=\"xref\" href=\"../../../../api/system.io.path\" data-linktype=\"relative-path\">Path</a> class to create valid path names.  </p>\n</li>\n<li><p>The parent folder of the folder to be created is read-only (<a class=\"xref\" href=\"../../../../api/system.io.ioexception\" data-linktype=\"relative-path\">IOException</a> class).  </p>\n</li>\n<li><p>The folder name is <code>null</code> (<a class=\"xref\" href=\"../../../../api/system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a> class).  </p>\n</li>\n<li><p>The folder name is too long (<a class=\"xref\" href=\"../../../../api/system.io.pathtoolongexception\" data-linktype=\"relative-path\">PathTooLongException</a> class).  </p>\n</li>\n<li><p>The folder name is only a colon, &quot;:&quot; (<a class=\"xref\" href=\"../../../../api/system.io.pathtoolongexception\" data-linktype=\"relative-path\">PathTooLongException</a> class).  </p>\n</li>\n</ul>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> An instance of the <a class=\"xref\" href=\"../../../../api/system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> class may be thrown in partial-trust situations.  </p>\n<p> If you donâ€™t have permission to create the folder, the example throws an instance of the <a class=\"xref\" href=\"../../../../api/system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a> class.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.io\" data-linktype=\"relative-path\">System.IO</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">File System and the Registry (C# Programming Guide)</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"4582ee2d-d72d-4687-bcb9-08d336c62c25\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"22\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.md\">\r\n<meta name=\"document_id\" content=\"7c278dde-5012-cf8d-a950-ce8176c78b9b\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Create a File or Folder (C# Programming Guide) | Microsoft Docs","ms.assetid":"4582ee2d-d72d-4687-bcb9-08d336c62c25","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":22,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["folders [C#]","creating files [C#]","files [C#]","creating folders [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize the C# Guide TOC (#1318)","commit_sha":"3115359729431ecbcc16058612da59b85621fa0f","commit_date":"2017-01-23 23:20:14 -0500"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.md","document_id":"7c278dde-5012-cf8d-a950-ce8176c78b9b","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/file-system/how-to-create-a-file-or-folder","toc_asset_id":"articles/csharp/programming-guide/file-system/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Create a File or Folder (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":740,"_op_rawTitle":"<h1 id=\"how-to-create-a-file-or-folder-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">How to: Create a File or Folder (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/file-system/how-to-create-a-file-or-folder","fileRelativePath":"articles/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.html"},"themesRelativePathToOutputRoot":"_themes/"}