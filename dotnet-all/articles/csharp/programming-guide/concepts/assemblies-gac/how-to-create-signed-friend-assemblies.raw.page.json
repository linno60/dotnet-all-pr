{"content":"<div><div class=\"content\">\n<p>This example shows how to use friend assemblies with assemblies that have strong names. Both assemblies must be strong named. Although both assemblies in this example use the same keys, you could use different keys for two assemblies.  </p>\n<h3 id=\"to-create-a-signed-assembly-and-a-friend-assembly\">To create a signed assembly and a friend assembly</h3>\n<ol>\n<li><p>Open a command prompt.  </p>\n</li>\n<li><p>Use the following sequence of commands with the Strong Name tool to generate a keyfile and to display its public key. For more information, see <a href=\"https://msdn.microsoft.com/library/k5b5tt23\" data-linktype=\"external\">Sn.exe (Strong Name Tool)</a>.  </p>\n<ol>\n<li><p>Generate a strong-name key for this example and store it in the file FriendAssemblies.snk:  </p>\n<p> <code>sn -k FriendAssemblies.snk</code>  </p>\n</li>\n<li><p>Extract the public key from FriendAssemblies.snk and put it into FriendAssemblies.publickey:  </p>\n<p> <code>sn -p FriendAssemblies.snk FriendAssemblies.publickey</code>  </p>\n</li>\n<li><p>Display the public key stored in the file FriendAssemblies.publickey:  </p>\n<p> <code>sn -tp FriendAssemblies.publickey</code>  </p>\n</li>\n</ol>\n</li>\n<li><p>Create a C# file named <code>friend_signed_A</code> that contains the following code. The code uses the <a class=\"xref\" href=\"../../../../../api/system.runtime.compilerservices.internalsvisibletoattribute\" data-linktype=\"relative-path\">InternalsVisibleToAttribute</a> attribute to declare friend_signed_B as a friend assembly.  </p>\n<p> The Strong Name tool generates a new public key every time it runs. Therefore, you must replace the public key in the following code with the public key you just generated, as shown in the following example.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">// friend_signed_A.cs  \n// Compile with:   \n// csc /target:library /keyfile:FriendAssemblies.snk friend_signed_A.cs  \nusing System.Runtime.CompilerServices;  \n\n[assembly: InternalsVisibleTo(&quot;friend_signed_B, PublicKey=0024000004800000940000000602000000240000525341310004000001000100e3aedce99b7e10823920206f8e46cd5558b4ec7345bd1a5b201ffe71660625dcb8f9a08687d881c8f65a0dcf042f81475d2e88f3e3e273c8311ee40f952db306c02fbfc5d8bc6ee1e924e6ec8fe8c01932e0648a0d3e5695134af3bb7fab370d3012d083fa6b83179dd3d031053f72fc1f7da8459140b0af5afc4d2804deccb6&quot;)]  \nclass Class1  \n{  \n    public void Test()  \n    {  \n        System.Console.WriteLine(&quot;Class1.Test&quot;);  \n        System.Console.ReadLine();  \n    }  \n}  \n</code></pre></li>\n<li><p>Compile and sign friend_signed_A by using the following command.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">csc /target:library /keyfile:FriendAssemblies.snk friend_signed_A.cs  \n</code></pre></li>\n<li><p>Create a C# file that is named <code>friend_signed_B</code> and contains the following code. Because friend_signed_A specifies friend_signed_B as a friend assembly, the code in friend_signed_B can access <code>internal</code> types and members from friend_signed_A. The file contains the following code.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">// friend_signed_B.cs  \n// Compile with:   \n// csc /keyfile:FriendAssemblies.snk /r:friend_signed_A.dll /out:friend_signed_B.exe friend_signed_B.cs  \npublic class Program  \n{  \n    static void Main()  \n    {  \n        Class1 inst = new Class1();  \n        inst.Test();  \n    }  \n}  \n</code></pre></li>\n<li><p>Compile and sign friend_signed_B by using the following command.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">csc /keyfile:FriendAssemblies.snk /r:friend_signed_A.dll /out:friend_signed_B.exe friend_signed_B.cs  \n</code></pre><p> The name of the assembly generated by the compiler must match the friend assembly name passed to the <a class=\"xref\" href=\"../../../../../api/system.runtime.compilerservices.internalsvisibletoattribute\" data-linktype=\"relative-path\">InternalsVisibleToAttribute</a> attribute. You must explicitly specify the name of the output assembly (.exe or .dll) by using the <code>/out</code> compiler option.  For more information, see <a href=\"../../../language-reference/compiler-options/out-compiler-option\" data-linktype=\"relative-path\">/out (C# Compiler Options)</a>.  </p>\n</li>\n<li><p>Run the friend_signed_B.exe file.  </p>\n<p> The program prints the string &quot;Class1.Test&quot;.  </p>\n</li>\n</ol>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> There are similarities between the <a class=\"xref\" href=\"../../../../../api/system.runtime.compilerservices.internalsvisibletoattribute\" data-linktype=\"relative-path\">InternalsVisibleToAttribute</a> attribute and the <a class=\"xref\" href=\"../../../../../api/system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class. The main difference is that <a class=\"xref\" href=\"../../../../../api/system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> can demand security permissions to run a particular section of code, whereas the <a class=\"xref\" href=\"../../../../../api/system.runtime.compilerservices.internalsvisibletoattribute\" data-linktype=\"relative-path\">InternalsVisibleToAttribute</a> attribute controls the visibility of <code>internal</code> types and members.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.runtime.compilerservices.internalsvisibletoattribute\" data-linktype=\"relative-path\">InternalsVisibleToAttribute</a><br> <a href=\"index\" data-linktype=\"relative-path\">Assemblies and the Global Assembly Cache (C#)</a><br> <a href=\"friend-assemblies\" data-linktype=\"relative-path\">Friend Assemblies (C#)</a><br> <a href=\"how-to-create-unsigned-friend-assemblies\" data-linktype=\"relative-path\">How to: Create Unsigned Friend Assemblies (C#)</a><br> <a href=\"../../../../visual-basic/reference/command-line-compiler/keyfile\" data-linktype=\"relative-path\">/keyfile</a><br> <a href=\"https://msdn.microsoft.com/library/k5b5tt23\" data-linktype=\"external\">Sn.exe (Strong Name Tool)</a><br> <a href=\"https://msdn.microsoft.com/library/xwb8f617\" data-linktype=\"external\">Creating and Using Strong-Named Assemblies</a><br> <a href=\"../../index\" data-linktype=\"relative-path\">C# Programming Guide</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"bab62063-61e6-453f-905f-77673df9534e\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md\">\r\n<meta name=\"document_id\" content=\"5ec5f368-45d3-c244-21e0-5e6bd39ec587\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Create Signed Friend Assemblies (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"bab62063-61e6-453f-905f-77673df9534e","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md","document_id":"5ec5f368-45d3-c244-21e0-5e6bd39ec587","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies","toc_asset_id":"articles/csharp/programming-guide/concepts/assemblies-gac/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Create Signed Friend Assemblies (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":430,"_op_rawTitle":"<h1 id=\"how-to-create-signed-friend-assemblies-c\" sourcefile=\"docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Create Signed Friend Assemblies (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies","fileRelativePath":"articles/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.html"},"themesRelativePathToOutputRoot":"_themes/"}