{"content":"<div><div class=\"content\">\n<p>You can create your own custom attributes by defining an attribute class, a class that derives directly or indirectly from <a class=\"xref\" href=\"../../../../../api/system.attribute\" data-linktype=\"relative-path\">Attribute</a>, which makes identifying attribute definitions in metadata fast and easy. Suppose you want to tag types with the name of the programmer who wrote the type. You might define a custom <code>Author</code> attribute class:  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">[System.AttributeUsage(System.AttributeTargets.Class |  \n                       System.AttributeTargets.Struct)  \n]  \npublic class Author : System.Attribute  \n{  \n    private string name;  \n    public double version;  \n\n    public Author(string name)  \n    {  \n        this.name = name;  \n        version = 1.0;  \n    }  \n}  \n</code></pre><p> The class name is the attribute&#39;s name, <code>Author</code>. It is derived from <code>System.Attribute</code>, so it is a custom attribute class. The constructor&#39;s parameters are the custom attribute&#39;s positional parameters. In this example, <code>name</code> is a positional parameter. Any public read-write fields or properties are named parameters. In this case, <code>version</code> is the only named parameter. Note the use of the <code>AttributeUsage</code> attribute to make the <code>Author</code> attribute valid only on class and <code>struct</code> declarations.  </p>\n<p> You could use this new attribute as follows:  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">[Author(&quot;P. Ackerman&quot;, version = 1.1)]  \nclass SampleClass  \n{  \n    // P. Ackerman&#39;s code goes here...  \n}  \n</code></pre><p> <code>AttributeUsage</code> has a named parameter, <code>AllowMultiple</code>, with which you can make a custom attribute single-use or multiuse. In the following code example, a multiuse attribute is created.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">[System.AttributeUsage(System.AttributeTargets.Class |  \n                       System.AttributeTargets.Struct,  \n                       AllowMultiple = true)  // multiuse attribute  \n]  \npublic class Author : System.Attribute  \n</code></pre><p> In the following code example, multiple attributes of the same type are applied to a class.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">[Author(&quot;P. Ackerman&quot;, version = 1.1)]  \n[Author(&quot;R. Koch&quot;, version = 1.2)]  \nclass SampleClass  \n{  \n    // P. Ackerman&#39;s code goes here...  \n    // R. Koch&#39;s code goes here...  \n}  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If your attribute class contains a property, that property must be read-write.  </p>\n</div>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.reflection\" data-linktype=\"relative-path\">System.Reflection</a><br> <a href=\"../../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"http://msdn.microsoft.com/library/97216f69-bde8-49fd-ac40-f18c500ef5dc\" data-linktype=\"external\">Writing Custom Attributes</a><br> <a href=\"../reflection\" data-linktype=\"relative-path\">Reflection (C#)</a><br> <a href=\"index\" data-linktype=\"relative-path\">Attributes (C#)</a><br> <a href=\"accessing-attributes-by-using-reflection\" data-linktype=\"relative-path\">Accessing Attributes by Using Reflection (C#)</a><br> <a href=\"attributeusage\" data-linktype=\"relative-path\">AttributeUsage (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"500e1977-c6de-462d-abce-78a0eb1eda22\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/attributes/creating-custom-attributes.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/attributes/creating-custom-attributes.md\">\r\n<meta name=\"document_id\" content=\"4302d887-0632-3788-2bfa-6608f77892be\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Creating Custom Attributes (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"500e1977-c6de-462d-abce-78a0eb1eda22","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/attributes/creating-custom-attributes.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/attributes/creating-custom-attributes.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/attributes/creating-custom-attributes.md","document_id":"4302d887-0632-3788-2bfa-6608f77892be","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/attributes/creating-custom-attributes","toc_asset_id":"articles/csharp/programming-guide/concepts/attributes/toc.json","toc_rel":"toc.json","_op_ogTitle":"Creating Custom Attributes (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":292,"_op_rawTitle":"<h1 id=\"creating-custom-attributes-c\" sourcefile=\"docs/csharp/programming-guide/concepts/attributes/creating-custom-attributes.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">Creating Custom Attributes (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/attributes/creating-custom-attributes","fileRelativePath":"articles/csharp/programming-guide/concepts/attributes/creating-custom-attributes.html"},"themesRelativePathToOutputRoot":"_themes/"}