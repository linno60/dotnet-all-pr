{"content":"<div><div class=\"content\">\n<p>These examples demonstrate how to use covariance and contravariance in the <code>Func</code> and <code>Action</code> generic delegates to enable reuse of methods and provide more flexibility in your code.  </p>\n<p> For more information about covariance and contravariance, see <a href=\"variance-in-delegates\" data-linktype=\"relative-path\">Variance in Delegates (C#)</a>.  </p>\n<h2 id=\"using-delegates-with-covariant-type-parameters\">Using Delegates with Covariant Type Parameters</h2>\n<p> The following example illustrates the benefits of covariance support in the generic <code>Func</code> delegates. The <code>FindByTitle</code> method takes a parameter of the <code>String</code> type and returns an object of the <code>Employee</code> type. However, you can assign this method to the <code>Func&lt;String, Person&gt;</code> delegate because <code>Employee</code> inherits <code>Person</code>.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">// Simple hierarchy of classes.  \npublic class Person { }  \npublic class Employee : Person { }  \nclass Program  \n{  \n    static Employee FindByTitle(String title)  \n    {  \n        // This is a stub for a method that returns  \n        // an employee that has the specified title.  \n        return new Employee();  \n    }  \n\n    static void Test()  \n    {  \n        // Create an instance of the delegate without using variance.  \n        Func&lt;String, Employee&gt; findEmployee = FindByTitle;  \n\n        // The delegate expects a method to return Person,  \n        // but you can assign it a method that returns Employee.  \n        Func&lt;String, Person&gt; findPerson = FindByTitle;  \n\n        // You can also assign a delegate   \n        // that returns a more derived type   \n        // to a delegate that returns a less derived type.  \n        findPerson = findEmployee;  \n\n    }  \n}  \n</code></pre><h2 id=\"using-delegates-with-contravariant-type-parameters\">Using Delegates with Contravariant Type Parameters</h2>\n<p> The following example illustrates the benefits of contravariance support in the generic <code>Action</code> delegates. The <code>AddToContacts</code> method takes a parameter of the <code>Person</code> type. However, you can assign this method to the <code>Action&lt;Employee&gt;</code> delegate because <code>Employee</code> inherits <code>Person</code>.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">public class Person { }  \npublic class Employee : Person { }  \nclass Program  \n{  \n    static void AddToContacts(Person person)  \n    {  \n        // This method adds a Person object  \n        // to a contact list.  \n    }  \n\n    static void Test()  \n    {  \n        // Create an instance of the delegate without using variance.  \n        Action&lt;Person&gt; addPersonToContacts = AddToContacts;  \n\n        // The Action delegate expects   \n        // a method that has an Employee parameter,  \n        // but you can assign it a method that has a Person parameter  \n        // because Employee derives from Person.  \n        Action&lt;Employee&gt; addEmployeeToContacts = AddToContacts;  \n\n        // You can also assign a delegate   \n        // that accepts a less derived parameter to a delegate   \n        // that accepts a more derived parameter.  \n        addEmployeeToContacts = addPersonToContacts;  \n    }  \n}  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"index\" data-linktype=\"relative-path\">Covariance and Contravariance (C#)</a><br> <a href=\"https://msdn.microsoft.com/library/ms172192\" data-linktype=\"external\">Generics</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"1826774f-2b7a-470f-b110-17cfdd6abdae\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.md\">\r\n<meta name=\"document_id\" content=\"a683fbb6-7a9b-c332-4d69-b6bfe5a8e312\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Using Variance for Func and Action Generic Delegates (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"1826774f-2b7a-470f-b110-17cfdd6abdae","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.md","document_id":"a683fbb6-7a9b-c332-4d69-b6bfe5a8e312","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates","toc_asset_id":"articles/csharp/programming-guide/concepts/covariance-contravariance/toc.json","toc_rel":"toc.json","_op_ogTitle":"Using Variance for Func and Action Generic Delegates (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":378,"_op_rawTitle":"<h1 id=\"using-variance-for-func-and-action-generic-delegates-c\" sourcefile=\"docs/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">Using Variance for Func and Action Generic Delegates (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates","fileRelativePath":"articles/csharp/programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.html"},"themesRelativePathToOutputRoot":"_themes/"}