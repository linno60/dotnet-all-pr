{"content":"<div><div class=\"content\">\n<p>The first task in the Manipulating Information in a WordprocessingML Document tutorial is to find the default style of paragraphs in the document.  </p>\n<h2 id=\"example\">Example</h2>\n<h3 id=\"description\">Description</h3>\n<p> The following example opens an Office Open XML WordprocessingML document, finds the document and style parts of the package, and then executes a query that finds the default style name. For information about Office Open XML document packages, and the parts they consist of, see <a href=\"details-of-office-open-xml-wordprocessingml-documents\" data-linktype=\"relative-path\">Details of Office Open XML WordprocessingML Documents (C#)</a>.  </p>\n<p> The query finds a node named <code>w:style</code> that has an attribute named <code>w:type</code> with a value of &quot;paragraph&quot;, and also has an attribute named <code>w:default</code> with a value of &quot;1&quot;. Because there will be only one XML node with these attributes, the query uses the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb356424(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.First</a> operator to convert a collection to a singleton. It then gets the value of the attribute with the name <code>w:styleId</code>.  </p>\n<p> This example uses classes from the WindowsBase assembly. It uses types in the <a class=\"xref\" href=\"../../../../../api/system.io.packaging\" data-linktype=\"relative-path\">System.IO.Packaging</a> namespace.  </p>\n<h3 id=\"code\">Code</h3>\n<pre class=\"loading\"><code class=\"lang-cs\">const string fileName = &quot;SampleDoc.docx&quot;;  \n\nconst string documentRelationshipType =  \n  &quot;http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument&quot;;  \nconst string stylesRelationshipType =  \n  &quot;http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles&quot;;  \nconst string wordmlNamespace =  \n  &quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;;  \nXNamespace w = wordmlNamespace;  \n\nXDocument xDoc = null;  \nXDocument styleDoc = null;  \n\nusing (Package wdPackage = Package.Open(fileName, FileMode.Open, FileAccess.Read))  \n{  \n    PackageRelationship docPackageRelationship =  \n      wdPackage.GetRelationshipsByType(documentRelationshipType).FirstOrDefault();  \n    if (docPackageRelationship != null)  \n    {  \n        Uri documentUri = PackUriHelper.ResolvePartUri(new Uri(&quot;/&quot;, UriKind.Relative),  \n          docPackageRelationship.TargetUri);  \n        PackagePart documentPart = wdPackage.GetPart(documentUri);  \n\n        //  Load the document XML in the part into an XDocument instance.  \n        xDoc = XDocument.Load(XmlReader.Create(documentPart.GetStream()));  \n\n        //  Find the styles part. There will only be one.  \n        PackageRelationship styleRelation =  \n          documentPart.GetRelationshipsByType(stylesRelationshipType).FirstOrDefault();  \n        if (styleRelation != null)  \n        {  \n            Uri styleUri = PackUriHelper.ResolvePartUri(documentUri, styleRelation.TargetUri);  \n            PackagePart stylePart = wdPackage.GetPart(styleUri);  \n\n            //  Load the style XML in the part into an XDocument instance.  \n            styleDoc = XDocument.Load(XmlReader.Create(stylePart.GetStream()));  \n        }  \n    }  \n}  \n\n// The following query finds all the paragraphs that have the default style.  \nstring defaultStyle =   \n    (string)(  \n        from style in styleDoc.Root.Elements(w + &quot;style&quot;)  \n        where (string)style.Attribute(w + &quot;type&quot;) == &quot;paragraph&quot;&amp;&amp;  \n              (string)style.Attribute(w + &quot;default&quot;) == &quot;1&quot;  \n              select style  \n    ).First().Attribute(w + &quot;styleId&quot;);  \n\nConsole.WriteLine(&quot;The default style is: {0}&quot;, defaultStyle);  \n</code></pre><h3 id=\"comments\">Comments</h3>\n<p> This example produces the following output:  </p>\n<pre class=\"loading\"><code>The default style is: Normal  \n</code></pre><h2 id=\"next-steps\">Next Steps</h2>\n<p> In the next example, you&#39;ll create a similar query that finds all the paragraphs in a document and their styles:  </p>\n<ul>\n<li><a href=\"retrieving-the-paragraphs-and-their-styles\" data-linktype=\"relative-path\">Retrieving the Paragraphs and Their Styles (C#)</a>  </li>\n</ul>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"http://msdn.microsoft.com/library/2696355e-4f83-4eaf-91b2-baa721f42fb4\" data-linktype=\"external\">Tutorial: Manipulating Content in a WordprocessingML Document</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"be102177-8ab0-444a-b671-7023e555ffdb\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md\">\r\n<meta name=\"document_id\" content=\"91acc0d4-26ac-0272-f5b3-fca410c0dfea\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Finding the Default Paragraph Style (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"be102177-8ab0-444a-b671-7023e555ffdb","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md","document_id":"91acc0d4-26ac-0272-f5b3-fca410c0dfea","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"Finding the Default Paragraph Style (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":374,"_op_rawTitle":"<h1 id=\"finding-the-default-paragraph-style-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">Finding the Default Paragraph Style (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.html"},"themesRelativePathToOutputRoot":"_themes/"}