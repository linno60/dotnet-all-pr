{"content":"<div><div class=\"content\">\n<p>The following example shows how LINQ can be used with reflection to retrieve specific metadata about methods that match a specified search criterion. In this case, the query will find the names of all the methods in the assembly that return enumerable types such as arrays.  </p>\n<h2 id=\"example\">Example</h2>\n<pre class=\"loading\"><code class=\"lang-cs\">using System.Reflection;  \nusing System.IO;  \nnamespace LINQReflection  \n{  \n    class ReflectionHowTO  \n    {  \n        static void Main(string[] args)  \n        {  \n            Assembly assembly = Assembly.Load(&quot;System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken= b77a5c561934e089&quot;);  \n            var pubTypesQuery = from type in assembly.GetTypes()  \n                        where type.IsPublic  \n                            from method in type.GetMethods()  \n                            where method.ReturnType.IsArray == true   \n                                || ( method.ReturnType.GetInterface(  \n                                    typeof(System.Collections.Generic.IEnumerable&lt;&gt;).FullName ) != null  \n                                &amp;&amp; method.ReturnType.FullName != &quot;System.String&quot; )  \n                            group method.ToString() by type.ToString();  \n\n            foreach (var groupOfMethods in pubTypesQuery)  \n            {  \n                Console.WriteLine(&quot;Type: {0}&quot;, groupOfMethods.Key);  \n                foreach (var method in groupOfMethods)  \n                {  \n                    Console.WriteLine(&quot;  {0}&quot;, method);  \n                }  \n            }  \n\n            Console.WriteLine(&quot;Press any key to exit&quot;);  \n            Console.ReadKey();  \n        }  \n    }    \n}  \n</code></pre><p> The example uses the <a class=\"xref\" href=\"../../../../../api/system.reflection.assembly#System_Reflection_Assembly_GetTypes_\" data-linktype=\"relative-path\">GetTypes</a> method to return an array of types in the specified assembly. The <a href=\"../../../language-reference/keywords/where-clause\" data-linktype=\"relative-path\">where</a> filter is applied so that only public types are returned. For each public type, a subquery is generated by using the <a class=\"xref\" href=\"../../../../../api/system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> array that is returned from the <a class=\"xref\" href=\"../../../../../api/system.type#System_Type_GetMethods_\" data-linktype=\"relative-path\">GetMethods</a> call. These results are filtered to return only those methods whose return type is an array or else a type that implements <a class=\"xref\" href=\"../../../../../api/system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a>. Finally, these results are grouped by using the type name as a key.  </p>\n<h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and <code>using</code> directives for the System.Linq and System.IO namespaces.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-to-objects\" data-linktype=\"relative-path\">LINQ to Objects (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"c4cdce49-b1c8-4420-b12a-9ff7e6671368\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md\">\r\n<meta name=\"document_id\" content=\"a38a7ce7-2ba8-6791-1712-ef20b1e8e24c\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"c4cdce49-b1c8-4420-b12a-9ff7e6671368","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md","document_id":"a38a7ce7-2ba8-6791-1712-ef20b1e8e24c","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":243,"_op_rawTitle":"<h1 id=\"how-to-query-an-assembly39s-metadata-with-reflection-linq-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.html"},"themesRelativePathToOutputRoot":"_themes/"}