{"content":"<div><div class=\"content\">\n<p>This example shows how to join data from two comma-delimited files that share a common value that is used as a matching key. This technique can be useful if you have to combine data from two spreadsheets, or from a spreadsheet and from a file that has another format, into a new file. You can modify the example to work with any kind of structured text.  </p>\n<h3 id=\"to-create-the-data-files\">To create the data files</h3>\n<ol>\n<li><p>Copy the following lines into a file that is named scores.csv and save it to your project folder. The file represents spreadsheet data. Column 1 is the student&#39;s ID, and columns 2 through 5 are test scores.  </p>\n<pre class=\"loading\"><code>111, 97, 92, 81, 60  \n112, 75, 84, 91, 39  \n113, 88, 94, 65, 91  \n114, 97, 89, 85, 82  \n115, 35, 72, 91, 70  \n116, 99, 86, 90, 94  \n117, 93, 92, 80, 87  \n118, 92, 90, 83, 78  \n119, 68, 79, 88, 92  \n120, 99, 82, 81, 79  \n121, 96, 85, 91, 60  \n122, 94, 92, 91, 91  \n</code></pre></li>\n<li><p>Copy the following lines into a file that is named names.csv and save it to your project folder. The file represents a spreadsheet that contains the student&#39;s last name, first name, and student ID.  </p>\n<pre class=\"loading\"><code>Omelchenko,Svetlana,111  \nO&#39;Donnell,Claire,112  \nMortensen,Sven,113  \nGarcia,Cesar,114  \nGarcia,Debra,115  \nFakhouri,Fadi,116  \nFeng,Hanying,117  \nGarcia,Hugo,118  \nTucker,Lance,119  \nAdams,Terry,120  \nZabokritski,Eugene,121  \nTucker,Michael,122  \n</code></pre></li>\n</ol>\n<h2 id=\"example\">Example</h2>\n<pre class=\"loading\"><code class=\"lang-cs\">class JoinStrings  \n{  \n    static void Main()  \n    {  \n        // Join content from dissimilar files that contain  \n        // related information. File names.csv contains the student  \n        // name plus an ID number. File scores.csv contains the ID   \n        // and a set of four test scores. The following query joins  \n        // the scores to the student names by using ID as a  \n        // matching key.  \n\n        string[] names = System.IO.File.ReadAllLines(@&quot;../../../names.csv&quot;);  \n        string[] scores = System.IO.File.ReadAllLines(@&quot;../../../scores.csv&quot;);  \n\n        // Name:    Last[0],       First[1],  ID[2]  \n        //          Omelchenko,    Svetlana,  11  \n        // Score:   StudentID[0],  Exam1[1]   Exam2[2],  Exam3[3],  Exam4[4]  \n        //          111,           97,        92,        81,        60  \n\n        // This query joins two dissimilar spreadsheets based on common ID value.  \n        // Multiple from clauses are used instead of a join clause  \n        // in order to store results of id.Split.  \n        IEnumerable&lt;string&gt; scoreQuery1 =  \n            from name in names  \n            let nameFields = name.Split(&#39;,&#39;)  \n            from id in scores  \n            let scoreFields = id.Split(&#39;,&#39;)  \n            where nameFields[2] == scoreFields[0]  \n            select nameFields[0] + &quot;,&quot; + scoreFields[1] + &quot;,&quot; + scoreFields[2]   \n                   + &quot;,&quot; + scoreFields[3] + &quot;,&quot; + scoreFields[4];  \n\n        // Pass a query variable to a method and execute it  \n        // in the method. The query itself is unchanged.  \n        OutputQueryResults(scoreQuery1, &quot;Merge two spreadsheets:&quot;);  \n\n        // Keep console window open in debug mode.  \n        Console.WriteLine(&quot;Press any key to exit&quot;);  \n        Console.ReadKey();  \n    }  \n\n    static void OutputQueryResults(IEnumerable&lt;string&gt; query, string message)  \n    {  \n        Console.WriteLine(System.Environment.NewLine + message);  \n        foreach (string item in query)  \n        {  \n            Console.WriteLine(item);  \n        }  \n        Console.WriteLine(&quot;{0} total names in list&quot;, query.Count());  \n    }  \n}  \n/* Output:  \nMerge two spreadsheets:  \nAdams, 99, 82, 81, 79  \nFakhouri, 99, 86, 90, 94  \nFeng, 93, 92, 80, 87  \nGarcia, 97, 89, 85, 82  \nGarcia, 35, 72, 91, 70  \nGarcia, 92, 90, 83, 78  \nMortensen, 88, 94, 65, 91  \nO&#39;Donnell, 75, 84, 91, 39  \nOmelchenko, 97, 92, 81, 60  \nTucker, 68, 79, 88, 92  \nTucker, 94, 92, 91, 91  \nZabokritski, 96, 85, 91, 60  \n12 total names in list  \n */  \n</code></pre><h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and <code>using</code> directives for the System.Linq and System.IO namespaces.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-and-strings\" data-linktype=\"relative-path\">LINQ and Strings (C#)</a><br> <a href=\"linq-and-file-directories\" data-linktype=\"relative-path\">LINQ and File Directories (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"aa2d12a6-70a9-492f-a6db-b2b850d46811\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md\">\r\n<meta name=\"document_id\" content=\"715c2ef3-02a0-3e51-3e02-7aac4ea945af\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Join Content from Dissimilar Files (LINQ) (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"aa2d12a6-70a9-492f-a6db-b2b850d46811","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md","document_id":"715c2ef3-02a0-3e51-3e02-7aac4ea945af","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Join Content from Dissimilar Files (LINQ) (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":554,"_op_rawTitle":"<h1 id=\"how-to-join-content-from-dissimilar-files-linq-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Join Content from Dissimilar Files (LINQ) (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.html"},"themesRelativePathToOutputRoot":"_themes/"}