{"content":"<div><div class=\"content\">\n<p>When using LINQ to query non-generic <a class=\"xref\" href=\"../../../../../api/system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> collections such as <a class=\"xref\" href=\"../../../../../api/system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>, you must explicitly declare the type of the range variable to reflect the specific type of the objects in the collection. For example, if you have an <a class=\"xref\" href=\"../../../../../api/system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> of <code>Student</code> objects, your <a href=\"../../../language-reference/keywords/from-clause\" data-linktype=\"relative-path\">from clause</a>should look like this:  </p>\n<pre class=\"loading\"><code>\nvar query = from Student s in arrList  \n...  \n</code></pre><p> By specifying the type of the range variable, you are casting each item in the <a class=\"xref\" href=\"../../../../../api/system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> to a <code>Student</code>.  </p>\n<p> The use of an explicitly typed range variable in a query expression is equivalent to calling the <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb341406(v=vs.110).aspx\" data-linktype=\"external\">Cast</a> method. <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb341406(v=vs.110).aspx\" data-linktype=\"external\">Cast</a> throws an exception if the specified cast cannot be performed. <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb341406(v=vs.110).aspx\" data-linktype=\"external\">Cast</a> and <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb360913(v=vs.110).aspx\" data-linktype=\"external\">OfType</a> are the two Standard Query Operator methods that operate on non-generic <a class=\"xref\" href=\"../../../../../api/system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> types. For more information, see<a href=\"type-relationships-in-linq-query-operations\" data-linktype=\"relative-path\">Type Relationships in LINQ Query Operations</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example shows a simple query over an <a class=\"xref\" href=\"../../../../../api/system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>. Note that this example uses object initializers when the code calls the <a class=\"xref\" href=\"../../../../../api/system.collections.arraylist#System_Collections_ArrayList_Add_\" data-linktype=\"relative-path\">Add</a> method, but this is not a requirement.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">using System;  \nusing System.Collections;  \nusing System.Linq;  \n\nnamespace NonGenericLINQ  \n{  \n    public class Student  \n    {  \n        public string FirstName { get; set; }  \n        public string LastName { get; set; }  \n        public int[] Scores { get; set; }  \n    }  \n\n    class Program  \n    {  \n        static void Main(string[] args)  \n        {  \n            ArrayList arrList = new ArrayList();  \n            arrList.Add(  \n                new Student  \n                    {  \n                        FirstName = &quot;Svetlana&quot;, LastName = &quot;Omelchenko&quot;, Scores = new int[] { 98, 92, 81, 60 }  \n                    });  \n            arrList.Add(  \n                new Student  \n                    {  \n                        FirstName = &quot;Claire&quot;, LastName = &quot;Oâ€™Donnell&quot;, Scores = new int[] { 75, 84, 91, 39 }  \n                    });  \n            arrList.Add(  \n                new Student  \n                    {  \n                        FirstName = &quot;Sven&quot;, LastName = &quot;Mortensen&quot;, Scores = new int[] { 88, 94, 65, 91 }  \n                    });  \n            arrList.Add(  \n                new Student  \n                    {  \n                        FirstName = &quot;Cesar&quot;, LastName = &quot;Garcia&quot;, Scores = new int[] { 97, 89, 85, 82 }  \n                    });  \n\n            var query = from Student student in arrList  \n                        where student.Scores[0] &gt; 95  \n                        select student;  \n\n            foreach (Student s in query)  \n                Console.WriteLine(s.LastName + &quot;: &quot; + s.Scores[0]);  \n\n            // Keep the console window open in debug mode.  \n            Console.WriteLine(&quot;Press any key to exit.&quot;);  \n            Console.ReadKey();  \n        }  \n    }  \n}  \n/* Output:   \n    Omelchenko: 98  \n    Garcia: 97  \n*/  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-to-objects\" data-linktype=\"relative-path\">LINQ to Objects (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"2bfb471c-6e9a-4e60-bd83-4a1778abde11\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.md\">\r\n<meta name=\"document_id\" content=\"1d348a1f-f7c8-3473-28ff-e06661a31e74\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Query an ArrayList with LINQ (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"2bfb471c-6e9a-4e60-bd83-4a1778abde11","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.md","document_id":"1d348a1f-f7c8-3473-28ff-e06661a31e74","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Query an ArrayList with LINQ (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":339,"_op_rawTitle":"<h1 id=\"how-to-query-an-arraylist-with-linq-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Query an ArrayList with LINQ (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.html"},"themesRelativePathToOutputRoot":"_themes/"}