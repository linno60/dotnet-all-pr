{"content":"<div><div class=\"content\">\n<p>This example shows how to generate a comma-separated values (CSV) file from an XML file.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The C# version of this example uses method syntax and the <code>Aggregate</code> operator to generate a CSV file from an XML document in a single expression. For more information, see <a href=\"query-syntax-and-method-syntax-in-linq\" data-linktype=\"relative-path\">Query Syntax and Method Syntax in LINQ</a>.  </p>\n<p> This example uses the following XML document: <a href=\"sample-xml-file-customers-and-orders-linq-to-xml-2\" data-linktype=\"relative-path\">Sample XML File: Customers and Orders (LINQ to XML)</a>.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">XElement custOrd = XElement.Load(&quot;CustomersOrders.xml&quot;);  \nstring csv =  \n    (from el in custOrd.Element(&quot;Customers&quot;).Elements(&quot;Customer&quot;)  \n    select  \n        String.Format(&quot;{0},{1},{2},{3},{4},{5},{6},{7},{8},{9}{10}&quot;,  \n            (string)el.Attribute(&quot;CustomerID&quot;),  \n            (string)el.Element(&quot;CompanyName&quot;),  \n            (string)el.Element(&quot;ContactName&quot;),  \n            (string)el.Element(&quot;ContactTitle&quot;),  \n            (string)el.Element(&quot;Phone&quot;),  \n            (string)el.Element(&quot;FullAddress&quot;).Element(&quot;Address&quot;),  \n            (string)el.Element(&quot;FullAddress&quot;).Element(&quot;City&quot;),  \n            (string)el.Element(&quot;FullAddress&quot;).Element(&quot;Region&quot;),  \n            (string)el.Element(&quot;FullAddress&quot;).Element(&quot;PostalCode&quot;),  \n            (string)el.Element(&quot;FullAddress&quot;).Element(&quot;Country&quot;),  \n            Environment.NewLine  \n        )  \n    )  \n    .Aggregate(  \n        new StringBuilder(),  \n        (sb, s) =&gt; sb.Append(s),  \n        sb =&gt; sb.ToString()  \n    );  \nConsole.WriteLine(csv);  \n</code></pre><p> This code produces the following output:  </p>\n<pre class=\"loading\"><code>GREAL,Great Lakes Food Market,Howard Snyder,Marketing Manager,(503) 555-7555,2732 Baker Blvd.,Eugene,OR,97403,USA  \nHUNGC,Hungry Coyote Import Store,Yoshi Latimer,Sales Representative,(503) 555-6874,City Center Plaza 516 Main St.,Elgin,OR,97827,USA  \nLAZYK,Lazy K Kountry Store,John Steel,Marketing Manager,(509) 555-7969,12 Orchestra Terrace,Walla Walla,WA,99362,USA  \nLETSS,Let&#39;s Stop N Shop,Jaime Yorres,Owner,(415) 555-5938,87 Polk St. Suite 5,San Francisco,CA,94117,USA  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"projections-and-transformations-linq-to-xml\" data-linktype=\"relative-path\">Projections and Transformations (LINQ to XML) (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"9ad283f7-7cac-42ff-bf32-92aa866e6883\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.md\">\r\n<meta name=\"document_id\" content=\"1c377dbd-2424-e200-3b28-f359adc2490e\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Generate Text Files from XML (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"9ad283f7-7cac-42ff-bf32-92aa866e6883","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.md","document_id":"1c377dbd-2424-e200-3b28-f359adc2490e","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Generate Text Files from XML (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":161,"_op_rawTitle":"<h1 id=\"how-to-generate-text-files-from-xml-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">How to: Generate Text Files from XML (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.html"},"themesRelativePathToOutputRoot":"_themes/"}