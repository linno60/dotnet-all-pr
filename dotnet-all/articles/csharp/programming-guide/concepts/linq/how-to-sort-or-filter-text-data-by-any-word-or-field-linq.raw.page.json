{"content":"<div><div class=\"content\">\n<p>The following example shows how to sort lines of structured text, such as comma-separated values, by any field in the line. The field may be dynamically specified at runtime. Assume that the fields in scores.csv represent a student&#39;s ID number, followed by a series of four test scores.  </p>\n<h3 id=\"to-create-a-file-that-contains-data\">To create a file that contains data</h3>\n<ol>\n<li>Copy the scores.csv data from the topic <a href=\"how-to-join-content-from-dissimilar-files-linq\" data-linktype=\"relative-path\">How to: Join Content from Dissimilar Files (LINQ) (C#)</a> and save it to your solution folder.  </li>\n</ol>\n<h2 id=\"example\">Example</h2>\n<pre class=\"loading\"><code class=\"lang-cs\">public class SortLines  \n{  \n    static void Main()  \n    {  \n        // Create an IEnumerable data source  \n        string[] scores = System.IO.File.ReadAllLines(@&quot;../../../scores.csv&quot;);  \n\n        // Change this to any value from 0 to 4.  \n        int sortField = 1;  \n\n        Console.WriteLine(&quot;Sorted highest to lowest by field [{0}]:&quot;, sortField);  \n\n        // Demonstrates how to return query from a method.  \n        // The query is executed here.  \n        foreach (string str in RunQuery(scores, sortField))  \n        {  \n            Console.WriteLine(str);  \n        }  \n\n        // Keep the console window open in debug mode.  \n        Console.WriteLine(&quot;Press any key to exit&quot;);  \n        Console.ReadKey();  \n    }  \n\n    // Returns the query variable, not query results!  \n    static IEnumerable&lt;string&gt; RunQuery(IEnumerable&lt;string&gt; source, int num)  \n    {  \n        // Split the string and sort on field[num]  \n        var scoreQuery = from line in source  \n                         let fields = line.Split(&#39;,&#39;)  \n                         orderby fields[num] descending  \n                         select line;  \n\n        return scoreQuery;  \n    }  \n}  \n/* Output (if sortField == 1):  \n   Sorted highest to lowest by field [1]:  \n    116, 99, 86, 90, 94  \n    120, 99, 82, 81, 79  \n    111, 97, 92, 81, 60  \n    114, 97, 89, 85, 82  \n    121, 96, 85, 91, 60  \n    122, 94, 92, 91, 91  \n    117, 93, 92, 80, 87  \n    118, 92, 90, 83, 78  \n    113, 88, 94, 65, 91  \n    112, 75, 84, 91, 39  \n    119, 68, 79, 88, 92  \n    115, 35, 72, 91, 70  \n */  \n</code></pre><p> This example also demonstrates how to return a query variable from a method.  </p>\n<h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<p> Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and <code>using</code> directives for the System.Linq and System.IO namespaces.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"linq-and-strings\" data-linktype=\"relative-path\">LINQ and Strings (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"7c04d42f-4a78-42c8-9ec8-57ef18fe13a9\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md\">\r\n<meta name=\"document_id\" content=\"2feb437f-945f-2b99-85ec-0e2f58c91556\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"7c04d42f-4a78-42c8-9ec8-57ef18fe13a9","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md","document_id":"2feb437f-945f-2b99-85ec-0e2f58c91556","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":324,"_op_rawTitle":"<h1 id=\"how-to-sort-or-filter-text-data-by-any-word-or-field-linq-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.html"},"themesRelativePathToOutputRoot":"_themes/"}