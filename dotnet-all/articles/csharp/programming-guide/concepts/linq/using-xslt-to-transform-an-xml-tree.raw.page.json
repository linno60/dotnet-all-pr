{"content":"<div><div class=\"content\">\n<p>You can create an XML tree, create an <a class=\"xref\" href=\"../../../../../api/system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> from the XML tree, create a new document, and create an <a class=\"xref\" href=\"../../../../../api/system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that will write into the new document. Then, you can invoke the XSLT transformation, passing the <a class=\"xref\" href=\"../../../../../api/system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> and <a class=\"xref\" href=\"../../../../../api/system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to the transformation. After the transformation successfully completes, the new XML tree is populated with the results of the transform.  </p>\n<h2 id=\"example\">Example</h2>\n<pre class=\"loading\"><code class=\"lang-cs\">string xslMarkup = @&quot;&lt;?xml version=&#39;1.0&#39;?&gt;  \n&lt;xsl:stylesheet xmlns:xsl=&#39;http://www.w3.org/1999/XSL/Transform&#39; version=&#39;1.0&#39;&gt;  \n    &lt;xsl:template match=&#39;/Parent&#39;&gt;  \n        &lt;Root&gt;  \n            &lt;C1&gt;  \n            &lt;xsl:value-of select=&#39;Child1&#39;/&gt;  \n            &lt;/C1&gt;  \n            &lt;C2&gt;  \n            &lt;xsl:value-of select=&#39;Child2&#39;/&gt;  \n            &lt;/C2&gt;  \n        &lt;/Root&gt;  \n    &lt;/xsl:template&gt;  \n&lt;/xsl:stylesheet&gt;&quot;;  \n\nXDocument xmlTree = new XDocument(  \n    new XElement(&quot;Parent&quot;,  \n        new XElement(&quot;Child1&quot;, &quot;Child1 data&quot;),  \n        new XElement(&quot;Child2&quot;, &quot;Child2 data&quot;)  \n    )  \n);  \n\nXDocument newTree = new XDocument();  \nusing (XmlWriter writer = newTree.CreateWriter()) {  \n    // Load the style sheet.  \n    XslCompiledTransform xslt = new XslCompiledTransform();  \n    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  \n\n    // Execute the transform and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateReader(), writer);  \n}  \n\nConsole.WriteLine(newTree);  \n</code></pre><p> This example produces the following output:  </p>\n<pre class=\"loading\"><code class=\"lang-xml\">&lt;Root&gt;  \n  &lt;C1&gt;Child1 data&lt;/C1&gt;  \n  &lt;C2&gt;Child2 data&lt;/C2&gt;  \n&lt;/Root&gt;  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xcontainer#System_Xml_Linq_XContainer_CreateWriter_\" data-linktype=\"relative-path\">CreateWriter</a><br> <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xnode#System_Xml_Linq_XNode_CreateReader_\" data-linktype=\"relative-path\">CreateReader</a><br> <a href=\"advanced-linq-to-xml-programming\" data-linktype=\"relative-path\">Advanced LINQ to XML Programming (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"373a2699-d4c5-471b-9bda-c1f0ab73b477\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.md\">\r\n<meta name=\"document_id\" content=\"03147fde-ec0c-22a7-a9eb-e6294bfdc45d\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Using XSLT to Transform an XML Tree (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"373a2699-d4c5-471b-9bda-c1f0ab73b477","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.md","document_id":"03147fde-ec0c-22a7-a9eb-e6294bfdc45d","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"Using XSLT to Transform an XML Tree (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":152,"_op_rawTitle":"<h1 id=\"using-xslt-to-transform-an-xml-tree-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">Using XSLT to Transform an XML Tree (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.html"},"themesRelativePathToOutputRoot":"_themes/"}