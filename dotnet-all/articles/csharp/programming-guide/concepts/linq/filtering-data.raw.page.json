{"content":"<div><div class=\"content\">\n<p>Filtering refers to the operation of restricting the result set to contain only those elements that satisfy a specified condition. It is also known as selection.  </p>\n<p> The following illustration shows the results of filtering a sequence of characters. The predicate for the filtering operation specifies that the character must be &#39;A&#39;.  </p>\n<p> <img src=\"media/linq_filter.png\" alt=\"LINQ Filtering Operation\" title=\"LINQ_Filter\" data-linktype=\"relative-path\">  </p>\n<p> The standard query operator methods that perform selection are listed in the following section.  </p>\n<h2 id=\"methods\">Methods</h2>\n<table>\n<thead>\n<tr>\n<th>Method Name</th>\n<th>Description</th>\n<th>C# Query Expression Syntax</th>\n<th>More Information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OfType</td>\n<td>Selects values, depending on their ability to be cast to a specified type.</td>\n<td>Not applicable.</td>\n<td><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb360913(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.OfType</a><br><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb344857(v=vs.110).aspx\" data-linktype=\"external\">Queryable.OfType</a></td>\n</tr>\n<tr>\n<td>Where</td>\n<td>Selects values that are based on a predicate function.</td>\n<td><code>where</code></td>\n<td><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb301979(v=vs.110).aspx\" data-linktype=\"external\">Enumerable.Where</a><br><br> <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/bb344863(v=vs.110).aspx\" data-linktype=\"external\">Queryable.Where</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"query-expression-syntax-example\">Query Expression Syntax Example</h2>\n<p> The following example uses the <code>where</code> clause to filter from an array those strings that have a specific length.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">string[] words = { &quot;the&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;fox&quot;, &quot;jumps&quot; };  \n\nIEnumerable&lt;string&gt; query = from word in words  \n                            where word.Length == 3  \n                            select word;  \n\nforeach (string str in query)  \n    Console.WriteLine(str);  \n\n/* This code produces the following output:  \n\n    the  \n    fox  \n*/  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.linq\" data-linktype=\"relative-path\">System.Linq</a><br> <a href=\"standard-query-operators-overview\" data-linktype=\"relative-path\">Standard Query Operators Overview (C#)</a><br> <a href=\"../../../language-reference/keywords/where-clause\" data-linktype=\"relative-path\">where clause</a><br> <a href=\"../../linq-query-expressions/how-to-dynamically-specify-predicate-filters-at-runtime\" data-linktype=\"relative-path\">How to: Dynamically Specify Predicate Filters at Runtime</a><br> <a href=\"how-to-query-an-assembly-s-metadata-with-reflection-linq\" data-linktype=\"relative-path\">How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (C#)</a><br> <a href=\"how-to-query-for-files-with-a-specified-attribute-or-name\" data-linktype=\"relative-path\">How to: Query for Files with a Specified Attribute or Name (C#)</a><br> <a href=\"how-to-sort-or-filter-text-data-by-any-word-or-field-linq\" data-linktype=\"relative-path\">How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"fbaece0d-0f23-47f7-89c5-f3ea8db692b6\">\r\n<meta name=\"caps.latest.revision\" content=\"4\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/filtering-data.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/filtering-data.md\">\r\n<meta name=\"document_id\" content=\"b7373312-52f0-47a9-d153-3fcb6a8cef8d\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Filtering Data (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"fbaece0d-0f23-47f7-89c5-f3ea8db692b6","caps.latest.revision":4,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/filtering-data.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/filtering-data.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/filtering-data.md","document_id":"b7373312-52f0-47a9-d153-3fcb6a8cef8d","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/filtering-data","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"Filtering Data (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":217,"_op_rawTitle":"<h1 id=\"filtering-data-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/filtering-data.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">Filtering Data (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/filtering-data","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/filtering-data.html"},"themesRelativePathToOutputRoot":"_themes/"}