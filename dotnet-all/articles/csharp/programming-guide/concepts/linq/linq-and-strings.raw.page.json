{"content":"<div><div class=\"content\">\n<p>LINQ can be used to query and transform strings and collections of strings. It can be especially useful with semi-structured data in text files. LINQ queries can be combined with traditional string functions and regular expressions. For example, you can use the <a class=\"xref\" href=\"../../../../../api/system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> or <a class=\"xref\" href=\"../../../../../api/system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Split_\" data-linktype=\"relative-path\">Split</a> method to create an array of strings that you can then query or modify by using LINQ. You can use the <a class=\"xref\" href=\"../../../../../api/system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_IsMatch_\" data-linktype=\"relative-path\">IsMatch</a> method in the <code>where</code> clause of a LINQ query. And you can use LINQ to query or modify the <a class=\"xref\" href=\"../../../../../api/system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> results returned by a regular expression.  </p>\n<p> You can also use the techniques described in this section to transform semi-structured text data to XML. For more information, see <a href=\"http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd\" data-linktype=\"external\">How to: Generate XML from CSV Files</a>.  </p>\n<p> The examples in this section fall into two categories:  </p>\n<h2 id=\"querying-a-block-of-text\">Querying a Block of Text</h2>\n<p> You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the <a class=\"xref\" href=\"../../../../../api/system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> method or the <a class=\"xref\" href=\"../../../../../api/system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Split_\" data-linktype=\"relative-path\">Split</a> method. You can split the source text into words, sentences, paragraphs, pages, or any other criteria, and then perform additional splits if they are required in your query.  </p>\n<p> <a href=\"how-to-count-occurrences-of-a-word-in-a-string-linq\" data-linktype=\"relative-path\">How to: Count Occurrences of a Word in a String (LINQ) (C#)</a><br> Shows how to use LINQ for simple querying over text.  </p>\n<p> <a href=\"how-to-query-for-sentences-that-contain-a-specified-set-of-words-linq\" data-linktype=\"relative-path\">How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (C#)</a><br> Shows how to split text files on arbitrary boundaries and how to perform queries against each part.  </p>\n<p> <a href=\"how-to-query-for-characters-in-a-string-linq\" data-linktype=\"relative-path\">How to: Query for Characters in a String (LINQ) (C#)</a><br> Demonstrates that a string is a queryable type.  </p>\n<p> <a href=\"how-to-combine-linq-queries-with-regular-expressions\" data-linktype=\"relative-path\">How to: Combine LINQ Queries with Regular Expressions (C#)</a><br> Shows how to use regular expressions in LINQ queries for complex pattern matching on filtered query results.  </p>\n<h2 id=\"querying-semi-structured-data-in-text-format\">Querying Semi-Structured Data in Text Format</h2>\n<p> Many different types of text files consist of a series of lines, often with similar formatting, such as tab- or comma-delimited files or fixed-length lines. After you read such a text file into memory, you can use LINQ to query and/or modify the lines. LINQ queries also simplify the task of combining data from multiple sources.  </p>\n<p> <a href=\"how-to-find-the-set-difference-between-two-lists-linq\" data-linktype=\"relative-path\">How to: Find the Set Difference Between Two Lists (LINQ) (C#)</a><br> Shows how to find all the strings that are present in one list but not the other.  </p>\n<p> <a href=\"how-to-sort-or-filter-text-data-by-any-word-or-field-linq\" data-linktype=\"relative-path\">How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)</a><br> Shows how to sort text lines based on any word or field.  </p>\n<p> <a href=\"how-to-reorder-the-fields-of-a-delimited-file-linq\" data-linktype=\"relative-path\">How to: Reorder the Fields of a Delimited File (LINQ) (C#)</a><br> Shows how to reorder fields in a line in a .csv file.  </p>\n<p> <a href=\"how-to-combine-and-compare-string-collections-linq\" data-linktype=\"relative-path\">How to: Combine and Compare String Collections (LINQ) (C#)</a><br> Shows how to combine string lists in various ways.  </p>\n<p> <a href=\"how-to-populate-object-collections-from-multiple-sources-linq\" data-linktype=\"relative-path\">How to: Populate Object Collections from Multiple Sources (LINQ) (C#)</a><br> Shows how to create object collections by using multiple text files as data sources.  </p>\n<p> <a href=\"how-to-join-content-from-dissimilar-files-linq\" data-linktype=\"relative-path\">How to: Join Content from Dissimilar Files (LINQ) (C#)</a><br> Shows how to combine strings in two lists into a single string by using a matching key.  </p>\n<p> <a href=\"how-to-split-a-file-into-many-files-by-using-groups-linq\" data-linktype=\"relative-path\">How to: Split a File Into Many Files by Using Groups (LINQ) (C#)</a><br> Shows how to create new files by using a single file as a data source.  </p>\n<p> <a href=\"how-to-compute-column-values-in-a-csv-text-file-linq\" data-linktype=\"relative-path\">How to: Compute Column Values in a CSV Text File (LINQ) (C#)</a><br> Shows how to perform mathematical computations on text data in .csv files.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"index\" data-linktype=\"relative-path\">Language-Integrated Query (LINQ) (C#)</a><br> <a href=\"http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd\" data-linktype=\"external\">How to: Generate XML from CSV Files</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"dbe2d657-b3f3-487e-b645-21fb2d71cd7b\">\r\n<meta name=\"caps.latest.revision\" content=\"4\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/linq-and-strings.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/linq-and-strings.md\">\r\n<meta name=\"document_id\" content=\"c21bf616-8944-6e88-5f0c-3671c0746cc5\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"LINQ and Strings (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"dbe2d657-b3f3-487e-b645-21fb2d71cd7b","caps.latest.revision":4,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/linq-and-strings.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/linq-and-strings.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/linq-and-strings.md","document_id":"c21bf616-8944-6e88-5f0c-3671c0746cc5","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/linq-and-strings","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"LINQ and Strings (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":552,"_op_rawTitle":"<h1 id=\"linq-and-strings-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/linq-and-strings.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">LINQ and Strings (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/linq-and-strings","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/linq-and-strings.html"},"themesRelativePathToOutputRoot":"_themes/"}