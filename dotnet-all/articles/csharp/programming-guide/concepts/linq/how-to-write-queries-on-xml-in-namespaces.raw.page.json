{"content":"<div><div class=\"content\">\n<p>To write a query on XML that is in a namespace, you must use <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xname\" data-linktype=\"relative-path\">XName</a> objects that have the correct namespace.  </p>\n<p> For C#, the most common approach is to initialize an <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xnamespace\" data-linktype=\"relative-path\">XNamespace</a> using a string that contains the URI, then use the addition operator overload to combine the namespace with the local name.  </p>\n<p> The first set of examples in this topic shows how to create an XML tree in a default namespace. The second set shows how to create an XML tree in a namespace with a prefix.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example creates an XML tree that is in a default namespace. It then retrieves a collection of elements.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">XNamespace aw = &quot;http://www.adventure-works.com&quot;;  \nXElement root = XElement.Parse(  \n@&quot;&lt;Root xmlns=&#39;http://www.adventure-works.com&#39;&gt;  \n    &lt;Child&gt;1&lt;/Child&gt;  \n    &lt;Child&gt;2&lt;/Child&gt;  \n    &lt;Child&gt;3&lt;/Child&gt;  \n    &lt;AnotherChild&gt;4&lt;/AnotherChild&gt;  \n    &lt;AnotherChild&gt;5&lt;/AnotherChild&gt;  \n    &lt;AnotherChild&gt;6&lt;/AnotherChild&gt;  \n&lt;/Root&gt;&quot;);  \nIEnumerable&lt;XElement&gt; c1 =  \n    from el in root.Elements(aw + &quot;Child&quot;)  \n    select el;  \nforeach (XElement el in c1)  \n    Console.WriteLine((int)el);  \n</code></pre><p> This example produces the following output:  </p>\n<pre class=\"loading\"><code>1  \n2  \n3  \n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> In C#, you write queries in the same way regardless of whether you are writing queries on an XML tree that uses a namespace with a prefix or on an XML tree with a default namespace.  </p>\n<p> The following example creates an XML tree that is in a namespace with a prefix. It then retrieves a collection of elements.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">XNamespace aw = &quot;http://www.adventure-works.com&quot;;  \nXElement root = XElement.Parse(  \n@&quot;&lt;aw:Root xmlns:aw=&#39;http://www.adventure-works.com&#39;&gt;  \n    &lt;aw:Child&gt;1&lt;/aw:Child&gt;  \n    &lt;aw:Child&gt;2&lt;/aw:Child&gt;  \n    &lt;aw:Child&gt;3&lt;/aw:Child&gt;  \n    &lt;aw:AnotherChild&gt;4&lt;/aw:AnotherChild&gt;  \n    &lt;aw:AnotherChild&gt;5&lt;/aw:AnotherChild&gt;  \n    &lt;aw:AnotherChild&gt;6&lt;/aw:AnotherChild&gt;  \n&lt;/aw:Root&gt;&quot;);  \nIEnumerable&lt;XElement&gt; c1 =  \n    from el in root.Elements(aw + &quot;Child&quot;)  \n    select el;  \nforeach (XElement el in c1)  \n    Console.WriteLine((int)el);  \n</code></pre><p> This example produces the following output:  </p>\n<pre class=\"loading\"><code>1  \n2  \n3  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"working-with-xml-namespaces\" data-linktype=\"relative-path\">Working with XML Namespaces (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"7c54df81-15e4-4091-8c81-a87637029130\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md\">\r\n<meta name=\"document_id\" content=\"6424569e-fa53-65c6-97b5-158f4778c8cb\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Write Queries on XML in Namespaces (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"7c54df81-15e4-4091-8c81-a87637029130","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md","document_id":"6424569e-fa53-65c6-97b5-158f4778c8cb","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Write Queries on XML in Namespaces (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":259,"_op_rawTitle":"<h1 id=\"how-to-write-queries-on-xml-in-namespaces-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Write Queries on XML in Namespaces (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.html"},"themesRelativePathToOutputRoot":"_themes/"}