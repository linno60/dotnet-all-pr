{"content":"<div><div class=\"content\">\n<p>To create an encoded XML document, you add an <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xdeclaration\" data-linktype=\"relative-path\">XDeclaration</a> to the XML tree, setting the encoding to the desired code page name.  </p>\n<p> Any value returned by <a class=\"xref\" href=\"../../../../../api/system.text.encoding#System_Text_Encoding_WebName_\" data-linktype=\"relative-path\">WebName</a> is a valid value.  </p>\n<p> If you read an encoded document, the <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xdeclaration#System_Xml_Linq_XDeclaration_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property will be set to the code page name.  </p>\n<p> If you set <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xdeclaration#System_Xml_Linq_XDeclaration_Encoding_\" data-linktype=\"relative-path\">Encoding</a> to a valid code page name, LINQ to XML will serialize with the specified encoding.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example creates two documents, one with utf-8 encoding, and one with utf-16 encoding. It then loads the documents and prints the encoding to the console.  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">Console.WriteLine(&quot;Creating a document with utf-8 encoding&quot;);  \nXDocument encodedDoc8 = new XDocument(  \n    new XDeclaration(&quot;1.0&quot;, &quot;utf-8&quot;, &quot;yes&quot;),  \n    new XElement(&quot;Root&quot;, &quot;Content&quot;)  \n);  \nencodedDoc8.Save(&quot;EncodedUtf8.xml&quot;);  \nConsole.WriteLine(&quot;Encoding is:{0}&quot;, encodedDoc8.Declaration.Encoding);  \nConsole.WriteLine();  \n\nConsole.WriteLine(&quot;Creating a document with utf-16 encoding&quot;);  \nXDocument encodedDoc16 = new XDocument(  \n    new XDeclaration(&quot;1.0&quot;, &quot;utf-16&quot;, &quot;yes&quot;),  \n    new XElement(&quot;Root&quot;, &quot;Content&quot;)  \n);  \nencodedDoc16.Save(&quot;EncodedUtf16.xml&quot;);  \nConsole.WriteLine(&quot;Encoding is:{0}&quot;, encodedDoc16.Declaration.Encoding);  \nConsole.WriteLine();  \n\nXDocument newDoc8 = XDocument.Load(&quot;EncodedUtf8.xml&quot;);  \nConsole.WriteLine(&quot;Encoded document:&quot;);  \nConsole.WriteLine(File.ReadAllText(&quot;EncodedUtf8.xml&quot;));  \nConsole.WriteLine();  \nConsole.WriteLine(&quot;Encoding of loaded document is:{0}&quot;, newDoc8.Declaration.Encoding);  \nConsole.WriteLine();  \n\nXDocument newDoc16 = XDocument.Load(&quot;EncodedUtf16.xml&quot;);  \nConsole.WriteLine(&quot;Encoded document:&quot;);  \nConsole.WriteLine(File.ReadAllText(&quot;EncodedUtf16.xml&quot;));  \nConsole.WriteLine();  \nConsole.WriteLine(&quot;Encoding of loaded document is:{0}&quot;, newDoc16.Declaration.Encoding);  \n</code></pre><p> This example produces the following output:  </p>\n<pre class=\"loading\"><code>Creating a document with utf-8 encoding  \nEncoding is:utf-8  \n\nCreating a document with utf-16 encoding  \nEncoding is:utf-16  \n\nEncoded document:  \n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;  \n&lt;Root&gt;Content&lt;/Root&gt;  \n\nEncoding of loaded document is:utf-8  \n\nEncoded document:  \n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot; standalone=&quot;yes&quot;?&gt;  \n&lt;Root&gt;Content&lt;/Root&gt;  \n\nEncoding of loaded document is:utf-16  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../../api/system.xml.linq.xdeclaration#System_Xml_Linq_XDeclaration_Encoding_\" data-linktype=\"relative-path\">Encoding</a><br> <a href=\"advanced-linq-to-xml-programming\" data-linktype=\"relative-path\">Advanced LINQ to XML Programming (C#)</a></p>\n</div></div>","outputRootRelativePath":"../../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.suite\" content=\"\">\r\n<meta name=\"ms.custom\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"84f64e71-39a6-42c6-ad68-f052bb158a03\">\r\n<meta name=\"caps.latest.revision\" content=\"3\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"ms.reviewer\" content=\"\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.md\">\r\n<meta name=\"document_id\" content=\"ea8a0bf4-cc3d-bbd1-2914-6702ad4bb116\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"How to: Read and Write an Encoded Document (C#) | Microsoft Docs","ms.suite":"","ms.custom":"","ms.assetid":"84f64e71-39a6-42c6-ad68-f052bb158a03","caps.latest.revision":3,"ms.topic":"article","dev_langs":["csharp"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","ms.reviewer":"","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.md","document_id":"ea8a0bf4-cc3d-bbd1-2914-6702ad4bb116","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document","toc_asset_id":"articles/csharp/programming-guide/concepts/linq/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Read and Write an Encoded Document (C#)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":221,"_op_rawTitle":"<h1 id=\"how-to-read-and-write-an-encoded-document-c\" sourcefile=\"docs/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">How to: Read and Write an Encoded Document (C#)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document","fileRelativePath":"articles/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.html"},"themesRelativePathToOutputRoot":"_themes/"}