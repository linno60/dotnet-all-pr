{"content":"<div><div class=\"content\">\n<p>The following code example demonstrates how a string can be parsed using the <a class=\"xref\" href=\"../../../../api/system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> method. As input, <a class=\"xref\" href=\"../../../../api/system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a> takes an array of characters that indicate which characters separate interesting sub strings of the target string.  The function returns an array of the sub strings.  </p>\n<p> This example uses spaces, commas, periods, colons, and tabs, all passed in an array containing these separating characters to <a class=\"xref\" href=\"../../../../api/system.string#System_String_Split_\" data-linktype=\"relative-path\">Split</a>.  Each word in the target string&#39;s sentence displays separately from the resulting array of strings.  </p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-cs\" name=\"csProgGuideStrings#16\">class TestStringSplit\n{\n    static void Main()\n    {\n        char[] delimiterChars = { &#39; &#39;, &#39;,&#39;, &#39;.&#39;, &#39;:&#39;, &#39;\\t&#39; };\n\n        string text = &quot;one\\ttwo three:four,five six seven&quot;;\n        System.Console.WriteLine(&quot;Original text: &#39;{0}&#39;&quot;, text);\n\n        string[] words = text.Split(delimiterChars);\n        System.Console.WriteLine(&quot;{0} words in text:&quot;, words.Length);\n\n        foreach (string s in words)\n        {\n            System.Console.WriteLine(s);\n        }\n\n        // Keep the console window open in debug mode.\n        System.Console.WriteLine(&quot;Press any key to exit.&quot;);\n        System.Console.ReadKey();\n    }\n}\n/* Output:\n    Original text: &#39;one     two three:four,five six seven&#39;\n    7 words in text:\n    one\n    two\n    three\n    four\n    five\n    six\n    seven\n */\n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> By default, String.Split returns empty strings when two separating characters appear contiguously in the target string.  You can pass an optional StringSplitOptions.RemoveEmptyEntries parameter to exclude any empty strings in the output.  </p>\n<p> String.Split can take an array of strings (character sequences that act as separators for parsing the target string, instead of single characters).  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">class TestStringSplit  \n{  \n    static void Main()  \n    {  \n        char[] separatingChars = { &quot;&lt;&lt;&quot;, &quot;...&quot; };  \n\n        string text = &quot;one&lt;&lt;two......three&lt;four&quot;;  \n        System.Console.WriteLine(&quot;Original text: &#39;{0}&#39;&quot;, text);  \n\n        string[] words = text.Split(separatingChars, System.StringSplitOptions.RemoveEmptyEntries );  \n        System.Console.WriteLine(&quot;{0} substrings in text:&quot;, words.Length);  \n\n        foreach (string s in words)  \n        {  \n            System.Console.WriteLine(s);  \n        }  \n\n        // Keep the console window open in debug mode.  \n        System.Console.WriteLine(&quot;Press any key to exit.&quot;);  \n        System.Console.ReadKey();  \n    }  \n}  \n/* Output:  \n    Original text: &#39;one&lt;&lt;two......three&lt;four&#39;  \n    3 words in text:  \n    one  \n    two  \n    three&lt;four  \n*/  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Strings</a><br> <a href=\"https://msdn.microsoft.com/library/hs600312\" data-linktype=\"external\">.NET Framework Regular Expressions</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"729c2923-4169-41c6-9c90-ef176c1e2953\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"17\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.md\">\r\n<meta name=\"document_id\" content=\"347f5cca-a850-0234-7921-4ea1b69c610b\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"How to: Parse Strings Using String.Split (C# Programming Guide) | Microsoft Docs","ms.assetid":"729c2923-4169-41c6-9c90-ef176c1e2953","translation.priority.ht":["de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","ru-ru","zh-cn","zh-tw"],"caps.latest.revision":17,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["splitting strings [C#]","Split method [C#]","strings [C#], splitting","parse strings"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.md","document_id":"347f5cca-a850-0234-7921-4ea1b69c610b","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/strings/how-to-parse-strings-using-string-split","toc_asset_id":"articles/csharp/programming-guide/strings/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Parse Strings Using String.Split (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":295,"_op_rawTitle":"<h1 id=\"how-to-parse-strings-using-stringsplit-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.md\" sourcestartlinenumber=\"40\" sourceendlinenumber=\"40\">How to: Parse Strings Using String.Split (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/strings/how-to-parse-strings-using-string-split","fileRelativePath":"articles/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.html"},"themesRelativePathToOutputRoot":"_themes/"}