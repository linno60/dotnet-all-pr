{"content":"<div><div class=\"content\">\n<p>The <code>Main</code> method is the entry point of a C# console application or windows application. (Libraries and services do not require a <code>Main</code> method as an entry point.). When the application is started, the <code>Main</code> method is the first method that is invoked.  </p>\n<p> There can only be one entry point in a C# program. If you have more than one class that has a <code>Main</code> method, you must compile your program with the <strong>/main</strong> compiler option to specify which <code>Main</code> method to use as the entry point. For more information, see <a href=\"../../language-reference/compiler-options/main-compiler-option\" data-linktype=\"relative-path\">/main (C# Compiler Options)</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideMain#17\">class TestClass\n{\n    static void Main(string[] args)\n    {\n        // Display the number of command line arguments:\n        System.Console.WriteLine(args.Length);\n    }\n}\n</code></pre><h2 id=\"overview\">Overview</h2>\n<ul>\n<li><p>The <code>Main</code> method is the entry point of an .exe program; it is where the program control starts and ends.  </p>\n</li>\n<li><p><code>Main</code> is declared inside a class or struct. <code>Main</code> must be <a href=\"../../language-reference/keywords/static\" data-linktype=\"relative-path\">static</a> and it should not be <a href=\"../../language-reference/keywords/public\" data-linktype=\"relative-path\">public</a>. (In the earlier example, it receives the default access of <a href=\"../../language-reference/keywords/private\" data-linktype=\"relative-path\">private</a>.) The enclosing class or struct is not required to be static.  </p>\n</li>\n<li><p><code>Main</code> can either have a <code>void</code> or <code>int</code> return type.  </p>\n</li>\n<li><p>The <code>Main</code> method can be declared with or without a <code>string[]</code> parameter that contains command-line arguments. When using Visual Studio to create Windows Forms applications, you can add the parameter manually or else use the <a class=\"xref\" href=\"../../../../api/system.environment\" data-linktype=\"relative-path\">Environment</a> class to obtain the command-line arguments. Parameters are read as zero-indexed command-line arguments. Unlike C and C++, the name of the program is not treated as the first command-line argument.  </p>\n</li>\n</ul>\n<h2 id=\"in-this-section\">In This Section</h2>\n<ul>\n<li><p><a href=\"command-line-arguments\" data-linktype=\"relative-path\">Command-Line Arguments</a>  </p>\n</li>\n<li><p><a href=\"how-to-display-command-line-arguments\" data-linktype=\"relative-path\">How to: Display Command Line Arguments</a>  </p>\n</li>\n<li><p><a href=\"how-to-access-command-line-arguments-using-foreach\" data-linktype=\"relative-path\">How to: Access Command-Line Arguments Using foreach</a>  </p>\n</li>\n<li><p><a href=\"main-return-values\" data-linktype=\"relative-path\">Main() Return Values</a>  </p>\n</li>\n</ul>\n<h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p>For more information, see the <a href=\"../../language-reference/language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.</p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../../language-reference/compiler-options/command-line-building-with-csc-exe\" data-linktype=\"relative-path\">Command-line Building With csc.exe</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"../classes-and-structs/methods\" data-linktype=\"relative-path\">Methods</a><br> <a href=\"../inside-a-program/index\" data-linktype=\"relative-path\">Inside a C# Program</a><br> <a href=\"http://msdn.microsoft.com/en-us/9a9d7aaa-51d3-4224-b564-95409b0f3e15\" data-linktype=\"external\">&lt;paveover&gt;C# Sample Applications</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"73a17231-cf96-44ea-aa8a-54807c6fb1f4\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"30\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/main-and-command-args/index.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/main-and-command-args/index.md\">\r\n<meta name=\"document_id\" content=\"ecaea4d8-c47d-36e6-3217-7ad3d9b59b9f\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Main() and Command-Line Arguments (C# Programming Guide) | Microsoft Docs","ms.assetid":"73a17231-cf96-44ea-aa8a-54807c6fb1f4","f1_keywords":["CS5001","main_CSharpKeyword","Main"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":30,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["Main method [C#]","C# language, command-line arguments","arguments [C#], command-line","command line [C#], arguments","command-line arguments [C#], Main method"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize the C# Guide TOC (#1318)","commit_sha":"3115359729431ecbcc16058612da59b85621fa0f","commit_date":"2017-01-23 23:20:14 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/main-and-command-args/index.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/main-and-command-args/index.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/main-and-command-args/index.md","document_id":"ecaea4d8-c47d-36e6-3217-7ad3d9b59b9f","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/main-and-command-args/index","toc_asset_id":"articles/csharp/programming-guide/main-and-command-args/toc.json","toc_rel":"toc.json","_op_ogTitle":"Main() and Command-Line Arguments (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":311,"_op_rawTitle":"<h1 id=\"main-and-command-line-arguments-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/main-and-command-args/index.md\" sourcestartlinenumber=\"44\" sourceendlinenumber=\"44\">Main() and Command-Line Arguments (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/main-and-command-args/index","fileRelativePath":"articles/csharp/programming-guide/main-and-command-args/index.html"},"themesRelativePathToOutputRoot":"_themes/"}