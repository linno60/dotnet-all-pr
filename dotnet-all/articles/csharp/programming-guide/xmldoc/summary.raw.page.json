{"content":"<div><div class=\"content\">\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"loading\"><code>&lt;summary&gt;description&lt;/summary&gt;  \n</code></pre><h4 id=\"parameters\">Parameters</h4>\n<p> <code>description</code><br> A summary of the object.  </p>\n<h2 id=\"remarks\">Remarks</h2>\n<p> The &lt;summary&gt; tag should be used to describe a type or a type member. Use <a href=\"remarks\" data-linktype=\"relative-path\">&lt;remarks&gt;</a> to add supplemental information to a type description. Use the <a href=\"cref-attribute\" data-linktype=\"relative-path\">cref Attribute</a> to enable documentation tools such as <a href=\"http://go.microsoft.com/fwlink/?LinkId=124061\" data-linktype=\"external\">Sandcastle</a> to create internal hyperlinks to documentation pages for code elements.  </p>\n<p> The text for the &lt;summary&gt; tag is the only source of information about the type in IntelliSense, and is also displayed in the Object Browser Window.  </p>\n<p> Compile with <a href=\"../../language-reference/compiler-options/doc-compiler-option\" data-linktype=\"relative-path\">/doc</a> to process documentation comments to a file. To create the final documentation based on the compiler-generated file, you can create a custom tool, or use a tool such as <a href=\"http://go.microsoft.com/fwlink/?LinkId=124061\" data-linktype=\"external\">Sandcastle</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-cs\" name=\"csProgGuideDocComments#12\">    // compile with: /doc:DocFileName.xml \n\n    /// text for class TestClass\n    public class TestClass\n    {\n        /// &lt;summary&gt;DoWork is a method in the TestClass class.\n        /// &lt;para&gt;Here&#39;s how you could make a second paragraph in a description. &lt;see cref=&quot;System.Console.WriteLine(System.String)&quot;/&gt; for information about output statements.&lt;/para&gt;\n        /// &lt;seealso cref=&quot;TestClass.Main&quot;/&gt;\n        /// &lt;/summary&gt;\n        public static void DoWork(int Int1)\n        {\n        }\n\n        /// text for Main\n        static void Main()\n        {\n        }\n    }\n</code></pre><p> The previous example produces the following XML file.  </p>\n<pre class=\"loading\"><code>&lt;?xml version=&quot;1.0&quot;?&gt;  \n&lt;doc&gt;  \n    &lt;assembly&gt;  \n        &lt;name&gt;YourNamespace&lt;/name&gt;  \n    &lt;/assembly&gt;  \n    &lt;members&gt;  \n        &lt;member name=&quot;T:DotNetEvents.TestClass&quot;&gt;  \n            text for class TestClass  \n        &lt;/member&gt;  \n        &lt;member name=&quot;M:DotNetEvents.TestClass.DoWork(System.Int32)&quot;&gt;  \n            &lt;summary&gt;DoWork is a method in the TestClass class.  \n            &lt;para&gt;Here&#39;s how you could make a second paragraph in a description. &lt;see cref=&quot;M:System.Console.WriteLine(System.String)&quot;/&gt; for information about output statements.&lt;/para&gt;  \n            &lt;seealso cref=&quot;M:DotNetEvents.TestClass.Main&quot;/&gt;  \n            &lt;/summary&gt;  \n        &lt;/member&gt;  \n        &lt;member name=&quot;M:DotNetEvents.TestClass.Main&quot;&gt;  \n            text for Main  \n        &lt;/member&gt;  \n    &lt;/members&gt;  \n&lt;/doc&gt;  \n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> The following example shows how to make a <code>cref</code> reference to a generic type.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideDocComments#11\">    // compile with: /doc:DocFileName.xml \n\n    // the following cref shows how to specify the reference, such that,\n    // the compiler will resolve the reference\n    /// &lt;summary cref=&quot;C{T}&quot;&gt;\n    /// &lt;/summary&gt;\n    class A { }\n\n    // the following cref shows another way to specify the reference, \n    // such that, the compiler will resolve the reference\n    // &lt;summary cref=&quot;C &amp;lt; T &amp;gt;&quot;&gt;\n\n    // the following cref shows how to hard-code the reference\n    /// &lt;summary cref=&quot;T:C`1&quot;&gt;\n    /// &lt;/summary&gt;\n    class B { }\n\n    /// &lt;summary cref=&quot;A&quot;&gt;\n    /// &lt;/summary&gt;\n    /// &lt;typeparam name=&quot;T&quot;&gt;&lt;/typeparam&gt;\n    class C&lt;T&gt; { }\n</code></pre><p> The previous example produces the following XML file.  </p>\n<pre class=\"loading\"><code>&lt;?xml version=&quot;1.0&quot;?&gt;  \n&lt;doc&gt;  \n    &lt;assembly&gt;  \n        &lt;name&gt;YourNamespace&lt;/name&gt;  \n    &lt;/assembly&gt;  \n    &lt;members&gt;  \n        &lt;member name=&quot;T:ExtensionMethodsDemo1.A&quot;&gt;  \n            &lt;summary cref=&quot;T:ExtensionMethodsDemo1.C`1&quot;&gt;  \n            &lt;/summary&gt;  \n        &lt;/member&gt;  \n        &lt;member name=&quot;T:ExtensionMethodsDemo1.B&quot;&gt;  \n            &lt;summary cref=&quot;T:C`1&quot;&gt;  \n            &lt;/summary&gt;  \n        &lt;/member&gt;  \n        &lt;member name=&quot;T:ExtensionMethodsDemo1.C`1&quot;&gt;  \n            &lt;summary cref=&quot;T:ExtensionMethodsDemo1.A&quot;&gt;  \n            &lt;/summary&gt;  \n            &lt;typeparam name=&quot;T&quot;&gt;&lt;/typeparam&gt;  \n        &lt;/member&gt;  \n    &lt;/members&gt;  \n&lt;/doc&gt;  \n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"recommended-tags-for-documentation-comments\" data-linktype=\"relative-path\">Recommended Tags for Documentation Comments</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"b4c43d92-2067-4eac-a59a-d32f5248c08b\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"17\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"translation.priority.mt\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.mt\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.mt\" content=\"pt-br\">\r\n<meta name=\"translation.priority.mt\" content=\"tr-tr\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/xmldoc/summary.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/xmldoc/summary.md\">\r\n<meta name=\"document_id\" content=\"e95aa4de-0785-f1d7-2a7c-fd1ae2eb4701\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"&lt;summary&gt; (C# Programming Guide) | Microsoft Docs","ms.assetid":"b4c43d92-2067-4eac-a59a-d32f5248c08b","f1_keywords":["<summary>","summary"],"translation.priority.ht":["de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","ru-ru","zh-cn","zh-tw"],"caps.latest.revision":17,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["<summary> C# XML tag","summary C# XML tag"],"translation.priority.mt":["cs-cz","pl-pl","pt-br","tr-tr"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/xmldoc/summary.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/xmldoc/summary.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/xmldoc/summary.md","document_id":"e95aa4de-0785-f1d7-2a7c-fd1ae2eb4701","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/xmldoc/summary","toc_asset_id":"articles/csharp/programming-guide/xmldoc/toc.json","toc_rel":"toc.json","_op_ogTitle":"&lt;summary&gt; (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":391,"_op_rawTitle":"<h1 id=\"ltsummarygt-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/xmldoc/summary.md\" sourcestartlinenumber=\"41\" sourceendlinenumber=\"41\">&lt;summary&gt; (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/xmldoc/summary","fileRelativePath":"articles/csharp/programming-guide/xmldoc/summary.html"},"themesRelativePathToOutputRoot":"_themes/"}