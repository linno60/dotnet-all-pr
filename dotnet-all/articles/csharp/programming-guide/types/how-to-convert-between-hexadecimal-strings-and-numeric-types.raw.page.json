{"content":"<div><div class=\"content\">\n<p>These examples show you how to perform the following tasks:  </p>\n<ul>\n<li><p>Obtain the hexadecimal value of each character in a <a href=\"../../language-reference/keywords/string\" data-linktype=\"relative-path\">string</a>.  </p>\n</li>\n<li><p>Obtain the <a href=\"../../language-reference/keywords/char\" data-linktype=\"relative-path\">char</a> that corresponds to each value in a hexadecimal string.  </p>\n</li>\n<li><p>Convert a hexadecimal <code>string</code> to an <a href=\"../../language-reference/keywords/int\" data-linktype=\"relative-path\">int</a>.  </p>\n</li>\n<li><p>Convert a hexadecimal <code>string</code> to a <a href=\"../../language-reference/keywords/float\" data-linktype=\"relative-path\">float</a>.  </p>\n</li>\n<li><p>Convert a <a href=\"../../language-reference/keywords/byte\" data-linktype=\"relative-path\">byte</a> array to a hexadecimal <code>string</code>.  </p>\n</li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<p> This example outputs the hexadecimal value of each character in a <code>string</code>. First it parses the <code>string</code> to an array of characters. Then it calls <a class=\"xref\" href=\"../../../../api/system.convert#System_Convert_ToInt32_System_Char_\" data-linktype=\"relative-path\">ToInt32(Char)</a> on each character to obtain its numeric value. Finally, it formats the number as its hexadecimal representation in a <code>string</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideTypes#30\">string input = &quot;Hello World!&quot;;\nchar[] values = input.ToCharArray();\nforeach (char letter in values)\n{\n    // Get the integral value of the character.\n    int value = Convert.ToInt32(letter);\n    // Convert the decimal value to a hexadecimal value in string form.\n    string hexOutput = String.Format(&quot;{0:X}&quot;, value);\n    Console.WriteLine(&quot;Hexadecimal value of {0} is {1}&quot;, letter, hexOutput);\n}\n/* Output:\n   Hexadecimal value of H is 48\n    Hexadecimal value of e is 65\n    Hexadecimal value of l is 6C\n    Hexadecimal value of l is 6C\n    Hexadecimal value of o is 6F\n    Hexadecimal value of   is 20\n    Hexadecimal value of W is 57\n    Hexadecimal value of o is 6F\n    Hexadecimal value of r is 72\n    Hexadecimal value of l is 6C\n    Hexadecimal value of d is 64\n    Hexadecimal value of ! is 21\n */\n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> This example parses a <code>string</code> of hexadecimal values and outputs the character corresponding to each hexadecimal value. First it calls the <a class=\"xref\" href=\"../../../../api/system.string#System_String_Split_System_Char___\" data-linktype=\"relative-path\">Split(Char[])</a> method to obtain each hexadecimal value as an individual <code>string</code> in an array. Then it calls <a class=\"xref\" href=\"../../../../api/system.convert#System_Convert_ToInt32_System_String_System_Int32_\" data-linktype=\"relative-path\">ToInt32(String, Int32)</a> to convert the hexadecimal value to a decimal value represented as an <a href=\"../../language-reference/keywords/int\" data-linktype=\"relative-path\">int</a>. It shows two different ways to obtain the character corresponding to that character code. The first technique uses <a class=\"xref\" href=\"../../../../api/system.char#System_Char_ConvertFromUtf32_System_Int32_\" data-linktype=\"relative-path\">ConvertFromUtf32(Int32)</a>, which returns the character corresponding to the integer argument as a <code>string</code>. The second technique explicitly casts the <code>int</code> to a <a href=\"../../language-reference/keywords/char\" data-linktype=\"relative-path\">char</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideTypes#31\">string hexValues = &quot;48 65 6C 6C 6F 20 57 6F 72 6C 64 21&quot;;\nstring[] hexValuesSplit = hexValues.Split(&#39; &#39;);\nforeach (String hex in hexValuesSplit)\n{\n    // Convert the number expressed in base-16 to an integer.\n    int value = Convert.ToInt32(hex, 16);\n    // Get the character corresponding to the integral value.\n    string stringValue = Char.ConvertFromUtf32(value);\n    char charValue = (char)value;\n    Console.WriteLine(&quot;hexadecimal value = {0}, int value = {1}, char value = {2} or {3}&quot;,\n                        hex, value, stringValue, charValue);\n}\n/* Output:\n    hexadecimal value = 48, int value = 72, char value = H or H\n    hexadecimal value = 65, int value = 101, char value = e or e\n    hexadecimal value = 6C, int value = 108, char value = l or l\n    hexadecimal value = 6C, int value = 108, char value = l or l\n    hexadecimal value = 6F, int value = 111, char value = o or o\n    hexadecimal value = 20, int value = 32, char value =   or\n    hexadecimal value = 57, int value = 87, char value = W or W\n    hexadecimal value = 6F, int value = 111, char value = o or o\n    hexadecimal value = 72, int value = 114, char value = r or r\n    hexadecimal value = 6C, int value = 108, char value = l or l\n    hexadecimal value = 64, int value = 100, char value = d or d\n    hexadecimal value = 21, int value = 33, char value = ! or !\n*/\n</code></pre><h2 id=\"example-2\">Example</h2>\n<p> This example shows another way to convert a hexadecimal <code>string</code> to an integer, by calling the <a class=\"xref\" href=\"../../../../api/system.int32#System_Int32_Parse_System_String_System_Globalization_NumberStyles_\" data-linktype=\"relative-path\">Parse(String, NumberStyles)</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideTypes#32\">string hexString = &quot;8E2&quot;;\nint num = Int32.Parse(hexString, System.Globalization.NumberStyles.HexNumber);\nConsole.WriteLine(num);\n//Output: 2274\n</code></pre><h2 id=\"example-3\">Example</h2>\n<p> The following example shows how to convert a hexadecimal <code>string</code> to a <a href=\"../../language-reference/keywords/float\" data-linktype=\"relative-path\">float</a> by using the <a class=\"xref\" href=\"../../../../api/system.bitconverter\" data-linktype=\"relative-path\">System.BitConverter</a> class and the <a class=\"xref\" href=\"../../../../api/system.int32#System_Int32_Parse_\" data-linktype=\"relative-path\">Parse</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideTypes#39\">\nstring hexString = &quot;43480170&quot;;\nuint num = uint.Parse(hexString, System.Globalization.NumberStyles.AllowHexSpecifier);\n\nbyte[] floatVals = BitConverter.GetBytes(num);\nfloat f = BitConverter.ToSingle(floatVals, 0);\nConsole.WriteLine(&quot;float convert = {0}&quot;, f);\n\n// Output: 200.0056            \n</code></pre><h2 id=\"example-4\">Example</h2>\n<p> The following example shows how to convert a <a href=\"../../language-reference/keywords/byte\" data-linktype=\"relative-path\">byte</a> array to a hexadecimal string by using the <a class=\"xref\" href=\"../../../../api/system.bitconverter\" data-linktype=\"relative-path\">System.BitConverter</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideTypes#38\">byte[] vals = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };\n\nstring str = BitConverter.ToString(vals);\nConsole.WriteLine(str);\n\nstr = BitConverter.ToString(vals).Replace(&quot;-&quot;, &quot;&quot;);\nConsole.WriteLine(str);\n\n/*Output:\n  01-AA-B1-DC-10-DD\n  01AAB1DC10DD\n */\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"http://msdn.microsoft.com/library/580e57eb-ac47-4ffd-bccd-3a1637c2f467\" data-linktype=\"external\">Standard Numeric Format Strings</a><br> <a href=\"index\" data-linktype=\"relative-path\">Types</a><br> <a href=\"../strings/how-to-determine-whether-a-string-represents-a-numeric-value\" data-linktype=\"relative-path\">How to: Determine Whether a String Represents a Numeric Value</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"7115c49f-7d1d-40c3-8bd9-aae0cc1d46b6\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"19\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md\">\r\n<meta name=\"document_id\" content=\"f28e345a-8a57-f6c7-2a3a-d665a08189cd\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide) | Microsoft Docs","ms.assetid":"7115c49f-7d1d-40c3-8bd9-aae0cc1d46b6","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":19,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["hexadecimal strings [C#], converting to numeric type","conversions [C#], hexidecimal strings","strings [C#], converting hexadecimal strings","hexadecimal strings [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Petr Onderka","author_email":"gsvick@gmail.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Fixing broken links (#1276)","commit_sha":"048197e9d58ab8126adc14a98a0225debdab79bb","commit_date":"2016-11-22 12:04:31 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"},{"profile_url":"https://github.com/svick","display_name":"Petr Onderka","id":"287848"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md","document_id":"f28e345a-8a57-f6c7-2a3a-d665a08189cd","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types","toc_asset_id":"articles/csharp/programming-guide/types/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":700,"_op_rawTitle":"<h1 id=\"how-to-convert-between-hexadecimal-strings-and-numeric-types-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types","fileRelativePath":"articles/csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.html"},"themesRelativePathToOutputRoot":"_themes/"}