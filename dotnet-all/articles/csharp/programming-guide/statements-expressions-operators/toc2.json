[{"toc_title":"Statements, Expressions, and Operators","href":"./","children":[{"toc_title":"Statements","href":"statements"},{"toc_title":"Expressions","href":"expressions"},{"toc_title":"Operators","href":"operators"},{"toc_title":"Anonymous Functions","href":"anonymous-functions","children":[{"toc_title":"Lambda Expressions","href":"lambda-expressions","children":[{"toc_title":"How to: Use Lambda Expressions in a Query","href":"how-to-use-lambda-expressions-in-a-query"},{"toc_title":"How to: Use Lambda Expressions Outside LINQ","href":"how-to-use-lambda-expressions-outside-linq"}]},{"toc_title":"Anonymous Methods","href":"anonymous-methods"}]},{"toc_title":"Overloadable Operators","href":"overloadable-operators"},{"toc_title":"Conversion Operators","href":"conversion-operators","children":[{"toc_title":"Using Conversion Operators","href":"using-conversion-operators"},{"toc_title":"How to: Implement User-Defined Conversions Between Structs","href":"how-to-implement-user-defined-conversions-between-structs"}]},{"toc_title":"How to: Use Operator Overloading to Create a Complex Number Class","href":"how-to-use-operator-overloading-to-create-a-complex-number-class"},{"toc_title":"Equality Comparisons","href":"equality-comparisons","children":[{"toc_title":"How to: Define Value Equality for a Type","href":"how-to-define-value-equality-for-a-type"},{"toc_title":"How to: Test for Reference Equality (Identity)","href":"how-to-test-for-reference-equality-identity"}]}],"pdf_name":"/articles/csharp/programming-guide/statements-expressions-operators.pdf"}]