{"content":"<div><div class=\"content\">\n<p>Like all <a href=\"../../language-reference/keywords/out\" data-linktype=\"relative-path\">out</a> parameters, an <code>out</code> parameter of an array type must be assigned before it is used; that is, it must be assigned by the callee. For example:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#39\">    static void TestMethod1(out int[] arr)\n    {\n        arr = new int[10];   // definite assignment of arr\n    }\n</code></pre><p> Like all <a href=\"../../language-reference/keywords/ref\" data-linktype=\"relative-path\">ref</a> parameters, a <code>ref</code> parameter of an array type must be definitely assigned by the caller. Therefore, there is no need to be definitely assigned by the callee. A <code>ref</code> parameter of an array type may be altered as a result of the call. For example, the array can be assigned the <a href=\"../../language-reference/keywords/null\" data-linktype=\"relative-path\">null</a> value or can be initialized to a different array. For example:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#40\">    static void TestMethod2(ref int[] arr)\n    {\n        arr = new int[10];   // arr initialized to a different array\n    }\n</code></pre><p> The following two examples demonstrate the difference between <code>out</code> and <code>ref</code> when used in passing arrays to methods.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In this example, the array <code>theArray</code> is declared in the caller (the <code>Main</code> method), and initialized in the <code>FillArray</code> method. Then, the array elements are returned to the caller and displayed.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#37\">class TestOut\n{\n    static void FillArray(out int[] arr)\n    {\n        // Initialize the array:\n        arr = new int[5] { 1, 2, 3, 4, 5 };\n    }\n\n    static void Main()\n    {\n        int[] theArray; // Initialization is not required\n\n        // Pass the array to the callee using out:\n        FillArray(out theArray);\n\n        // Display the array elements:\n        System.Console.WriteLine(&quot;Array elements are:&quot;);\n        for (int i = 0; i &lt; theArray.Length; i++)\n        {\n            System.Console.Write(theArray[i] + &quot; &quot;);\n        }\n\n        // Keep the console window open in debug mode.\n        System.Console.WriteLine(&quot;Press any key to exit.&quot;);\n        System.Console.ReadKey();\n    }\n}\n    /* Output:\n        Array elements are:\n        1 2 3 4 5        \n    */\n</code></pre><h2 id=\"example-1\">Example</h2>\n<p> In this example, the array <code>theArray</code> is initialized in the caller (the <code>Main</code> method), and passed to the <code>FillArray</code> method by using the <code>ref</code> parameter. Some of the array elements are updated in the <code>FillArray</code> method. Then, the array elements are returned to the caller and displayed.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#38\">class TestRef\n{\n    static void FillArray(ref int[] arr)\n    {\n        // Create the array on demand:\n        if (arr == null)\n        {\n            arr = new int[10];\n        }\n        // Fill the array:\n        arr[0] = 1111;\n        arr[4] = 5555;\n    }\n\n    static void Main()\n    {\n        // Initialize the array:\n        int[] theArray = { 1, 2, 3, 4, 5 };\n\n        // Pass the array using ref:\n        FillArray(ref theArray);\n\n        // Display the updated array:\n        System.Console.WriteLine(&quot;Array elements are:&quot;);\n        for (int i = 0; i &lt; theArray.Length; i++)\n        {\n            System.Console.Write(theArray[i] + &quot; &quot;);\n        }\n\n        // Keep the console window open in debug mode.\n        System.Console.WriteLine(&quot;Press any key to exit.&quot;);\n        System.Console.ReadKey();\n    }\n}\n    /* Output:\n        Array elements are:\n        1111 2 3 4 5555\n    */\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../../language-reference/keywords/ref\" data-linktype=\"relative-path\">ref</a><br> <a href=\"../../language-reference/keywords/out-parameter-modifier\" data-linktype=\"relative-path\">out parameter modifier</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Arrays</a><br> <a href=\"single-dimensional-arrays\" data-linktype=\"relative-path\">Single-Dimensional Arrays</a><br> <a href=\"multidimensional-arrays\" data-linktype=\"relative-path\">Multidimensional Arrays</a><br> <a href=\"jagged-arrays\" data-linktype=\"relative-path\">Jagged Arrays</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"6a2b261e-a1cc-49a6-b4f0-6cacae385a1e\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"16\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.md\">\r\n<meta name=\"document_id\" content=\"7f56e4d4-90d5-7cd5-5da6-e739243632d7\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"Passing Arrays Using ref and out (C# Programming Guide) | Microsoft Docs","ms.assetid":"6a2b261e-a1cc-49a6-b4f0-6cacae385a1e","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":16,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["arrays [C#], passing using ref and out"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.md","document_id":"7f56e4d4-90d5-7cd5-5da6-e739243632d7","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out","toc_asset_id":"articles/csharp/programming-guide/arrays/toc.json","toc_rel":"toc.json","_op_ogTitle":"Passing Arrays Using ref and out (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":454,"_op_rawTitle":"<h1 id=\"passing-arrays-using-ref-and-out-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.md\" sourcestartlinenumber=\"36\" sourceendlinenumber=\"36\">Passing Arrays Using ref and out (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out","fileRelativePath":"articles/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.html"},"themesRelativePathToOutputRoot":"_themes/"}