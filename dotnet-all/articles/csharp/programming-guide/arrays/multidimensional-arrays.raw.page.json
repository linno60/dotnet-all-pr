{"content":"<div><div class=\"content\">\n<p>Arrays can have more than one dimension. For example, the following declaration creates a two-dimensional array of four rows and two columns.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#11\">int[,] array = new int[4, 2];\n</code></pre><p> The following declaration creates an array of three dimensions, 4, 2, and 3.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#12\">int[, ,] array1 = new int[4, 2, 3];\n</code></pre><h2 id=\"array-initialization\">Array Initialization</h2>\n<p> You can initialize the array upon declaration, as is shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#13\">// Two-dimensional array.\nint[,] array2D = new int[,] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 } };\n// The same array with dimensions specified.\nint[,] array2Da = new int[4, 2] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 } };\n// A similar array with string elements.\nstring[,] array2Db = new string[3, 2] { { &quot;one&quot;, &quot;two&quot; }, { &quot;three&quot;, &quot;four&quot; },\n                                        { &quot;five&quot;, &quot;six&quot; } };\n\n// Three-dimensional array.\nint[, ,] array3D = new int[,,] { { { 1, 2, 3 }, { 4, 5, 6 } }, \n                                 { { 7, 8, 9 }, { 10, 11, 12 } } };\n// The same array with dimensions specified.\nint[, ,] array3Da = new int[2, 2, 3] { { { 1, 2, 3 }, { 4, 5, 6 } }, \n                                       { { 7, 8, 9 }, { 10, 11, 12 } } };\n\n// Accessing array elements.\nSystem.Console.WriteLine(array2D[0, 0]);\nSystem.Console.WriteLine(array2D[0, 1]);\nSystem.Console.WriteLine(array2D[1, 0]);\nSystem.Console.WriteLine(array2D[1, 1]);\nSystem.Console.WriteLine(array2D[3, 0]);\nSystem.Console.WriteLine(array2Db[1, 0]);\nSystem.Console.WriteLine(array3Da[1, 0, 1]);\nSystem.Console.WriteLine(array3D[1, 1, 2]);\n\n// Getting the total count of elements or the length of a given dimension.\nvar allLength = array3D.Length;\nvar total = 1;\nfor (int i = 0; i &lt; array3D.Rank; i++) {\n    total *= array3D.GetLength(i);\n}\nSystem.Console.WriteLine(&quot;{0} equals {1}&quot;, allLength, total);\n\n// Output:\n// 1\n// 2\n// 3\n// 4\n// 7\n// three\n// 8\n// 12\n// 12 equals 12\n</code></pre><p> You also can initialize the array without specifying the rank.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#14\">int[,] array4 = { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 } };\n</code></pre><p> If you choose to declare an array variable without initialization, you must use the <code>new</code> operator to assign an array to the variable. The use of <code>new</code> is shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#15\">int[,] array5;\narray5 = new int[,] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 } };   // OK\n//array5 = {{1,2}, {3,4}, {5,6}, {7,8}};   // Error\n</code></pre><p> The following example assigns a value to a particular array element.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#16\">array5[2, 1] = 25;\n</code></pre><p> Similarly, the following example gets the value of a particular array element and assigns it to variable <code>elementValue</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#42\">int elementValue = array5[2, 1];\n</code></pre><p> The following code example initializes the array elements to default values (except for jagged arrays).  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#17\">int[,] array6 = new int[10, 10];\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Arrays</a><br> <a href=\"single-dimensional-arrays\" data-linktype=\"relative-path\">Single-Dimensional Arrays</a><br> <a href=\"jagged-arrays\" data-linktype=\"relative-path\">Jagged Arrays</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.assetid\" content=\"020ce02e-7dff-4273-8e53-bf0b33747232\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"16\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/arrays/multidimensional-arrays.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/arrays/multidimensional-arrays.md\">\r\n<meta name=\"document_id\" content=\"70d4599c-d64c-a44a-ad6d-1ad536a8ad55\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"Multidimensional Arrays (C# Programming Guide) | Microsoft Docs","ms.assetid":"020ce02e-7dff-4273-8e53-bf0b33747232","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":16,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["arrays [C#], multidimensional","multidimensional arrays [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/arrays/multidimensional-arrays.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/arrays/multidimensional-arrays.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/arrays/multidimensional-arrays.md","document_id":"70d4599c-d64c-a44a-ad6d-1ad536a8ad55","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/arrays/multidimensional-arrays","toc_asset_id":"articles/csharp/programming-guide/arrays/toc.json","toc_rel":"toc.json","_op_ogTitle":"Multidimensional Arrays (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":474,"_op_rawTitle":"<h1 id=\"multidimensional-arrays-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/arrays/multidimensional-arrays.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Multidimensional Arrays (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/arrays/multidimensional-arrays","fileRelativePath":"articles/csharp/programming-guide/arrays/multidimensional-arrays.html"},"themesRelativePathToOutputRoot":"_themes/"}