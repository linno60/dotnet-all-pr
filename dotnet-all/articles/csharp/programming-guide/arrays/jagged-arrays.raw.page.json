{"content":"<div><div class=\"content\">\n<p>A jagged array is an array whose elements are arrays. The elements of a jagged array can be of different dimensions and sizes. A jagged array is sometimes called an &quot;array of arrays.&quot; The following examples show how to declare, initialize, and access jagged arrays.  </p>\n<p> The following is a declaration of a single-dimensional array that has three elements, each of which is a single-dimensional array of integers:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#19\">        int[][] jaggedArray = new int[3][];\n</code></pre><p> Before you can use <code>jaggedArray</code>, its elements must be initialized. You can initialize the elements like this:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#20\">        jaggedArray[0] = new int[5];\n        jaggedArray[1] = new int[4];\n        jaggedArray[2] = new int[2];\n</code></pre><p> Each of the elements is a single-dimensional array of integers. The first element is an array of 5 integers, the second is an array of 4 integers, and the third is an array of 2 integers.  </p>\n<p> It is also possible to use initializers to fill the array elements with values, in which case you do not need the array size. For example:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#21\">        jaggedArray[0] = new int[] { 1, 3, 5, 7, 9 };\n        jaggedArray[1] = new int[] { 0, 2, 4, 6 };\n        jaggedArray[2] = new int[] { 11, 22 };\n</code></pre><p> You can also initialize the array upon declaration like this:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#22\">        int[][] jaggedArray2 = new int[][] \n    {\n        new int[] {1,3,5,7,9},\n        new int[] {0,2,4,6},\n        new int[] {11,22}\n    };\n</code></pre><p> You can use the following shorthand form. Notice that you cannot omit the <code>new</code> operator from the elements initialization because there is no default initialization for the elements:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#23\">        int[][] jaggedArray3 = \n    {\n        new int[] {1,3,5,7,9},\n        new int[] {0,2,4,6},\n        new int[] {11,22}\n    };\n</code></pre><p> A jagged array is an array of arrays, and therefore its elements are reference types and are initialized to <code>null</code>.  </p>\n<p> You can access individual array elements like these examples:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#24\">        // Assign 77 to the second element ([1]) of the first array ([0]):\n        jaggedArray3[0][1] = 77;\n\n        // Assign 88 to the second element ([1]) of the third array ([2]):\n        jaggedArray3[2][1] = 88;\n</code></pre><p> It is possible to mix jagged and multidimensional arrays. The following is a declaration and initialization of a single-dimensional jagged array that contains three two-dimensional array elements of different sizes. For more information about two-dimensional arrays, see <a href=\"multidimensional-arrays\" data-linktype=\"relative-path\">Multidimensional Arrays</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#25\">        int[][,] jaggedArray4 = new int[3][,] \n        {\n            new int[,] { {1,3}, {5,7} },\n            new int[,] { {0,2}, {4,6}, {8,10} },\n            new int[,] { {11,22}, {99,88}, {0,9} } \n        };\n</code></pre><p> You can access individual elements as shown in this example, which displays the value of the element <code>[1,0]</code> of the first array (value <code>5</code>):  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#26\">        System.Console.Write(&quot;{0}&quot;, jaggedArray4[0][1, 0]);\n</code></pre><p> The method <code>Length</code> returns the number of arrays contained in the jagged array. For example, assuming you have declared the previous array, this line:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#27\">        System.Console.WriteLine(jaggedArray4.Length);\n</code></pre><p> returns a value of 3.  </p>\n<h2 id=\"example\">Example</h2>\n<p> This example builds an array whose elements are themselves arrays. Each one of the array elements has a different size.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideArrays#18\">class ArrayTest\n{\n    static void Main()\n    {\n        // Declare the array of two elements:\n        int[][] arr = new int[2][];\n\n        // Initialize the elements:\n        arr[0] = new int[5] { 1, 3, 5, 7, 9 };\n        arr[1] = new int[4] { 2, 4, 6, 8 };\n\n        // Display the array elements:\n        for (int i = 0; i &lt; arr.Length; i++)\n        {\n            System.Console.Write(&quot;Element({0}): &quot;, i);\n\n            for (int j = 0; j &lt; arr[i].Length; j++)\n            {\n                System.Console.Write(&quot;{0}{1}&quot;, arr[i][j], j == (arr[i].Length - 1) ? &quot;&quot; : &quot; &quot;);\n            }\n            System.Console.WriteLine();            \n        }\n        // Keep the console window open in debug mode.\n        System.Console.WriteLine(&quot;Press any key to exit.&quot;);\n        System.Console.ReadKey();\n    }\n}\n/* Output:\n    Element(0): 1 3 5 7 9\n    Element(1): 2 4 6 8\n*/\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.array\" data-linktype=\"relative-path\">Array</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Arrays</a><br> <a href=\"single-dimensional-arrays\" data-linktype=\"relative-path\">Single-Dimensional Arrays</a><br> <a href=\"multidimensional-arrays\" data-linktype=\"relative-path\">Multidimensional Arrays</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-all/api/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"537c65a6-0e0a-4a00-a2b8-086f38519c70\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"24\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/arrays/jagged-arrays.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/arrays/jagged-arrays.md\">\r\n<meta name=\"document_id\" content=\"5706a5db-3a57-e4e5-1efa-f110f945adb3\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Jagged Arrays (C# Programming Guide) | Microsoft Docs","ms.assetid":"537c65a6-0e0a-4a00-a2b8-086f38519c70","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":24,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["jagged arrays [C#]","arrays [C#], jagged"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/arrays/jagged-arrays.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/arrays/jagged-arrays.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/arrays/jagged-arrays.md","document_id":"5706a5db-3a57-e4e5-1efa-f110f945adb3","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/arrays/jagged-arrays","toc_asset_id":"articles/csharp/programming-guide/arrays/toc.json","toc_rel":"toc.json","_op_ogTitle":"Jagged Arrays (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":591,"_op_rawTitle":"<h1 id=\"jagged-arrays-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/arrays/jagged-arrays.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Jagged Arrays (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/arrays/jagged-arrays","fileRelativePath":"articles/csharp/programming-guide/arrays/jagged-arrays.html"},"themesRelativePathToOutputRoot":"_themes/"}