{"content":"<div><div class=\"content\">\n<p>A static constructor is used to initialize any <a href=\"../../language-reference/keywords/static\" data-linktype=\"relative-path\">static</a> data, or to perform a particular action that needs to be performed once only. It is called automatically before the first instance is created or any static members are referenced.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideObjects#14\">class SimpleClass\n{\n    // Static variable that must be initialized at run time.\n    static readonly long baseline;\n\n    // Static constructor is called at most one time, before any\n    // instance constructor is invoked or member is accessed.\n    static SimpleClass()\n    {\n        baseline = DateTime.Now.Ticks;\n    }\n}\n</code></pre><p> Static constructors have the following properties:  </p>\n<ul>\n<li><p>A static constructor does not take access modifiers or have parameters.  </p>\n</li>\n<li><p>A static constructor is called automatically to initialize the <a href=\"../../language-reference/keywords/class\" data-linktype=\"relative-path\">class</a> before the first instance is created or any static members are referenced.  </p>\n</li>\n<li><p>A static constructor cannot be called directly.  </p>\n</li>\n<li><p>The user has no control on when the static constructor is executed in the program.  </p>\n</li>\n<li><p>A typical use of static constructors is when the class is using a log file and the constructor is used to write entries to this file.  </p>\n</li>\n<li><p>Static constructors are also useful when creating wrapper classes for unmanaged code, when the constructor can call the <code>LoadLibrary</code> method.  </p>\n</li>\n<li><p>If a static constructor throws an exception, the runtime will not invoke it a second time, and the type will remain uninitialized for the lifetime of the application domain in which your program is running.  </p>\n</li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<p> In this example, class <code>Bus</code> has a static constructor. When the first instance of <code>Bus</code> is created (<code>bus1</code>), the static constructor is invoked to initialize the class. The sample output verifies that the static constructor runs only one time, even though two instances of <code>Bus</code> are created, and that it runs before the instance constructor runs.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideObjects#15\"> public class Bus\n {\n     // Static variable used by all Bus instances.\n     // Represents the time the first bus of the day starts its route.\n     protected static readonly DateTime globalStartTime;\n\n     // Property for the number of each bus.\n     protected int RouteNumber { get; set; }\n\n     // Static constructor to initialize the static variable.\n     // It is invoked before the first instance constructor is run.\n     static Bus()\n     {\n         globalStartTime = DateTime.Now;\n\n         // The following statement produces the first line of output, \n         // and the line occurs only once.\n         Console.WriteLine(&quot;Static constructor sets global start time to {0}&quot;,\n             globalStartTime.ToLongTimeString());\n     }\n\n     // Instance constructor.\n     public Bus(int routeNum)\n     {\n         RouteNumber = routeNum;\n         Console.WriteLine(&quot;Bus #{0} is created.&quot;, RouteNumber);\n     }\n\n     // Instance method.\n     public void Drive()\n     {\n         TimeSpan elapsedTime = DateTime.Now - globalStartTime;\n\n         // For demonstration purposes we treat milliseconds as minutes to simulate\n         // actual bus times. Do not do this in your actual bus schedule program!\n         Console.WriteLine(&quot;{0} is starting its route {1:N2} minutes after global start time {2}.&quot;,\n                                 this.RouteNumber,\n                                 elapsedTime.TotalMilliseconds,\n                                 globalStartTime.ToShortTimeString());\n     }\n }\n\n class TestBus\n {\n     static void Main()\n     {\n         // The creation of this instance activates the static constructor.\n         Bus bus1 = new Bus(71);\n\n         // Create a second bus.\n         Bus bus2 = new Bus(72);\n\n         // Send bus1 on its way.\n         bus1.Drive();\n\n         // Wait for bus2 to warm up.\n         System.Threading.Thread.Sleep(25);\n\n         // Send bus2 on its way.\n         bus2.Drive();\n\n         // Keep the console window open in debug mode.\n         System.Console.WriteLine(&quot;Press any key to exit.&quot;);\n         System.Console.ReadKey();\n     }\n }\n /* Sample output:\n     Static constructor sets global start time to 3:57:08 PM.\n     Bus #71 is created.\n     Bus #72 is created.\n     71 is starting its route 6.00 minutes after global start time 3:57 PM.\n     72 is starting its route 31.00 minutes after global start time 3:57 PM.      \n*/\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Classes and Structs</a><br> <a href=\"constructors\" data-linktype=\"relative-path\">Constructors</a><br> <a href=\"static-classes-and-static-class-members\" data-linktype=\"relative-path\">Static Classes and Static Class Members</a><br> <a href=\"destructors\" data-linktype=\"relative-path\">Destructors</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc1.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"151ec95e-3c4d-4ed7-885d-95b7a3be2e7d\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"23\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/static-constructors.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/static-constructors.md\">\r\n<meta name=\"document_id\" content=\"7eb91cdc-9042-04ba-b244-200910bba1f5\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"Static Constructors (C# Programming Guide) | Microsoft Docs","ms.assetid":"151ec95e-3c4d-4ed7-885d-95b7a3be2e7d","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":23,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["static constructors [C#]","constructors [C#], static"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/static-constructors.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/static-constructors.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/classes-and-structs/static-constructors.md","document_id":"7eb91cdc-9042-04ba-b244-200910bba1f5","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/classes-and-structs/static-constructors","toc_asset_id":"articles/csharp/programming-guide/classes-and-structs/toc.json","toc_rel":"toc.json","_op_ogTitle":"Static Constructors (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":585,"_op_rawTitle":"<h1 id=\"static-constructors-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/classes-and-structs/static-constructors.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Static Constructors (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/classes-and-structs/static-constructors","fileRelativePath":"articles/csharp/programming-guide/classes-and-structs/static-constructors.html"},"themesRelativePathToOutputRoot":"_themes/"}