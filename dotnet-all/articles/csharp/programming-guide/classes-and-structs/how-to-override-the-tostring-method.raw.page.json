{"content":"<div><div class=\"content\">\n<p>Every class or struct in C# implicitly inherits the <a class=\"xref\" href=\"../../../../api/system.object\" data-linktype=\"relative-path\">Object</a> class. Therefore, every object in C# gets the <a class=\"xref\" href=\"../../../../api/system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a> method, which returns a string representation of that object. For example, all variables of type <code>int</code> have a <code>ToString</code> method, which enables them to return their contents as a string:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideInheritance#37\">int x = 42;\nstring strx = x.ToString();\nConsole.WriteLine(strx);\n// Output:\n// 42\n</code></pre><p> When you create a custom class or struct, you should override the <a class=\"xref\" href=\"../../../../api/system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a> method in order to provide information about your type to client code.  </p>\n<p> For information about how to use format strings and other types of custom formatting with the <code>ToString</code> method, see <a href=\"../../../standard/base-types/formatting-types\" data-linktype=\"relative-path\">Formatting Types</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> When you decide what information to provide through this method, consider whether your class or struct will ever be used by untrusted code. Be careful to ensure that you do not provide any information that could be exploited by malicious code.  </p>\n</div>\n<h3 id=\"to-override-the-tostring-method-in-your-class-or-struct\">To override the ToString method in your class or struct</h3>\n<ol>\n<li><p>Declare a <code>ToString</code> method with the following modifiers and return type:  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">public override string ToString(){}  \n</code></pre></li>\n<li><p>Implement the method so that it returns a string.  </p>\n<p> The following example returns the name of the class in addition to the data specific to a particular instance of the class.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideInheritance#36\">class Person\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n\n    public override string ToString()\n    {\n        return &quot;Person: &quot; + Name + &quot; &quot; + Age;\n    }\n}\n</code></pre><p> You can test the <code>ToString</code> method as shown in the following code example:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideInheritance#38\">Person person = new Person { Name = &quot;John&quot;, Age = 12 };\nConsole.WriteLine(person);\n// Output:\n// Person: John 12\n</code></pre></li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.iformattable\" data-linktype=\"relative-path\">IFormattable</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Classes and Structs</a><br> <a href=\"../strings/index\" data-linktype=\"relative-path\">Strings</a><br> <a href=\"../../language-reference/keywords/string\" data-linktype=\"relative-path\">string</a><br> <a href=\"../../language-reference/keywords/new\" data-linktype=\"relative-path\">new</a><br> <a href=\"../../language-reference/keywords/override\" data-linktype=\"relative-path\">override</a><br> <a href=\"../../language-reference/keywords/virtual\" data-linktype=\"relative-path\">virtual</a><br> <a href=\"../../../standard/base-types/formatting-types\" data-linktype=\"relative-path\">Formatting Types</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"ms.assetid\" content=\"8016db69-1f19-420c-8e17-98e8bebb7749\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"21\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method.md\">\r\n<meta name=\"document_id\" content=\"e23a46a2-aea7-0192-2604-e7da9a0f7bbf\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","title":"How to: Override the ToString Method (C# Programming Guide) | Microsoft Docs","ms.assetid":"8016db69-1f19-420c-8e17-98e8bebb7749","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":21,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["ToString method, overriding in C#","inheritance [C#], overriding OnPaint and ToString"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method.md","document_id":"e23a46a2-aea7-0192-2604-e7da9a0f7bbf","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method","toc_asset_id":"articles/csharp/programming-guide/classes-and-structs/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Override the ToString Method (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":285,"_op_rawTitle":"<h1 id=\"how-to-override-the-tostring-method-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">How to: Override the ToString Method (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method","fileRelativePath":"articles/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method.html"},"themesRelativePathToOutputRoot":"_themes/"}