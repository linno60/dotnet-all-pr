[{"toc_title":"Classes and Structs","href":"./","children":[{"toc_title":"Classes","href":"classes"},{"toc_title":"Objects","href":"objects"},{"toc_title":"Structs","href":"structs","children":[{"toc_title":"Using Structs","href":"using-structs"}]},{"toc_title":"Inheritance","href":"inheritance"},{"toc_title":"Polymorphism","href":"polymorphism","children":[{"toc_title":"Versioning with the Override and New Keywords","href":"versioning-with-the-override-and-new-keywords"},{"toc_title":"Knowing When to Use Override and New Keywords","href":"knowing-when-to-use-override-and-new-keywords"},{"toc_title":"How to: Override the ToString Method","href":"how-to-override-the-tostring-method"}]},{"toc_title":"Abstract and Sealed Classes and Class Members","href":"abstract-and-sealed-classes-and-class-members","children":[{"toc_title":"How to: Define Abstract Properties","href":"how-to-define-abstract-properties"}]},{"toc_title":"Static Classes and Static Class Members","href":"static-classes-and-static-class-members"},{"toc_title":"Members","href":"members"},{"toc_title":"Access Modifiers","href":"access-modifiers"},{"toc_title":"Fields","href":"fields"},{"toc_title":"Constants","href":"constants","children":[{"toc_title":"How to: Define Constants in C#&lrm;","href":"how-to-define-constants"}]},{"toc_title":"Properties","href":"properties","children":[{"toc_title":"Using Properties","href":"using-properties"},{"toc_title":"Interface Properties","href":"interface-properties"},{"toc_title":"Restricting Accessor Accessibility","href":"restricting-accessor-accessibility"},{"toc_title":"How to: Declare and Use Read Write Properties","href":"how-to-declare-and-use-read-write-properties"},{"toc_title":"Auto-Implemented Properties","href":"auto-implemented-properties"},{"toc_title":"How to: Implement a Lightweight Class with Auto-Implemented Properties","href":"how-to-implement-a-lightweight-class-with-auto-implemented-properties"}]},{"toc_title":"Methods","href":"methods","children":[{"toc_title":"Passing Parameters","href":"passing-parameters","children":[{"toc_title":"Passing Value-Type Parameters","href":"passing-value-type-parameters"},{"toc_title":"Passing Reference-Type Parameters","href":"passing-reference-type-parameters"},{"toc_title":"How to: Know the Difference Between Passing a Struct and Passing a Class Reference to a Method","href":"how-to-know-the-difference-passing-a-struct-and-passing-a-class-to-a-method"}]},{"toc_title":"Implicitly Typed Local Variables","href":"implicitly-typed-local-variables","children":[{"toc_title":"How to: Use Implicitly Typed Local Variables and Arrays in a Query Expression","href":"how-to-use-implicitly-typed-local-variables-and-arrays-in-a-query-expression"}]},{"toc_title":"Extension Methods","href":"extension-methods","children":[{"toc_title":"How to: Implement and Call a Custom Extension Method","href":"how-to-implement-and-call-a-custom-extension-method"},{"toc_title":"How to: Create a New Method for an Enumeration","href":"how-to-create-a-new-method-for-an-enumeration"}]},{"toc_title":"Named and Optional Arguments","href":"named-and-optional-arguments","children":[{"toc_title":"How to: Use Named and Optional Arguments in Office Programming","href":"how-to-use-named-and-optional-arguments-in-office-programming"}]}]},{"toc_title":"Constructors","href":"constructors","children":[{"toc_title":"Using Constructors","href":"using-constructors"},{"toc_title":"Instance Constructors","href":"instance-constructors"},{"toc_title":"Private Constructors","href":"private-constructors"},{"toc_title":"Static Constructors","href":"static-constructors"},{"toc_title":"How to: Write a Copy Constructor","href":"how-to-write-a-copy-constructor"}]},{"toc_title":"Destructors","href":"destructors"},{"toc_title":"Object and Collection Initializers","href":"object-and-collection-initializers","children":[{"toc_title":"How to: Initialize Objects by Using an Object Initializer","href":"how-to-initialize-objects-by-using-an-object-initializer"},{"toc_title":"How to: Initialize a Dictionary with a Collection Initializer","href":"how-to-initialize-a-dictionary-with-a-collection-initializer"}]},{"toc_title":"How to: Access a Collection Class with foreach","href":"how-to-access-a-collection-class-with-foreach"},{"toc_title":"Nested Types","href":"nested-types"},{"toc_title":"Partial Classes and Methods","href":"partial-classes-and-methods"},{"toc_title":"Anonymous Types","href":"anonymous-types","children":[{"toc_title":"How to: Return Subsets of Element Properties in a Query","href":"how-to-return-subsets-of-element-properties-in-a-query"}]}],"pdf_name":"/articles/csharp/programming-guide/classes-and-structs.pdf"}]