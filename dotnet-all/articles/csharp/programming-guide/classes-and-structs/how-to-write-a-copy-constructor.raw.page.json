{"content":"<div><div class=\"content\">\n<p>C# doesn&#39;t provide a copy constructor for objects, but you can write one yourself.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In the following example, the <code>Person</code><a href=\"../../language-reference/keywords/class\" data-linktype=\"relative-path\">class</a> defines a copy constructor that takes, as its argument, an instance of <code>Person</code>. The values of the properties of the argument are assigned to the properties of the new instance of <code>Person</code>. The code contains an alternative copy constructor that sends the <code>Name</code> and <code>Age</code> properties of the instance that you want to copy to the instance constructor of the class.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideObjects#16\">class Person\n{\n    // Copy constructor.\n    public Person(Person previousPerson)\n    {\n        Name = previousPerson.Name;\n        Age = previousPerson.Age;\n    }\n\n    //// Alternate copy constructor calls the instance constructor.\n    //public Person(Person previousPerson)\n    //    : this(previousPerson.Name, previousPerson.Age)\n    //{\n    //}\n\n    // Instance constructor.\n    public Person(string name, int age)\n    {\n        Name = name;\n        Age = age;\n    }\n\n    public int Age { get; set; }\n\n    public string Name { get; set; }\n    \n    public string Details()\n    {\n        return Name + &quot; is &quot; + Age.ToString();\n    }\n}\n\nclass TestPerson\n{\n    static void Main()\n    {\n        // Create a Person object by using the instance constructor.\n        Person person1 = new Person(&quot;George&quot;, 40);\n\n        // Create another Person object, copying person1.\n        Person person2 = new Person(person1);\n\n        // Change each person&#39;s age. \n        person1.Age = 39;\n        person2.Age = 41;\n\n        // Change person2&#39;s name.\n        person2.Name = &quot;Charles&quot;;\n\n        // Show details to verify that the name and age fields are distinct.\n        Console.WriteLine(person1.Details());\n        Console.WriteLine(person2.Details());\n\n        // Keep the console window open in debug mode.\n        Console.WriteLine(&quot;Press any key to exit.&quot;);\n        Console.ReadKey();\n    }\n}\n// Output: \n// George is 39\n// Charles is 41\n</code></pre><h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.icloneable\" data-linktype=\"relative-path\">ICloneable</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Classes and Structs</a><br> <a href=\"constructors\" data-linktype=\"relative-path\">Constructors</a><br> <a href=\"destructors\" data-linktype=\"relative-path\">Destructors</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"fba899b5-fc41-428e-a745-3ebdbf37990a\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"20\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor.md\">\r\n<meta name=\"document_id\" content=\"2c7a59f5-1d25-3611-e31d-24aaaae70c7d\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Write a Copy Constructor (C# Programming Guide) | Microsoft Docs","ms.assetid":"fba899b5-fc41-428e-a745-3ebdbf37990a","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":20,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["C# Language, copy constructor","copy constructor [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor.md","document_id":"2c7a59f5-1d25-3611-e31d-24aaaae70c7d","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor","toc_asset_id":"articles/csharp/programming-guide/classes-and-structs/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Write a Copy Constructor (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":265,"_op_rawTitle":"<h1 id=\"how-to-write-a-copy-constructor-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">How to: Write a Copy Constructor (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor","fileRelativePath":"articles/csharp/programming-guide/classes-and-structs/how-to-write-a-copy-constructor.html"},"themesRelativePathToOutputRoot":"_themes/"}