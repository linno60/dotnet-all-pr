{"content":"<div><div class=\"content\">\n<p>In C# 3.0 and later, auto-implemented properties make property-declaration more concise when no additional logic is required in the property accessors. They also enable client code to create objects. When you declare a property as shown in the following example, the compiler creates a private, anonymous backing field that can only be accessed through the property&#39;s <code>get</code> and <code>set</code> accessors.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following example shows a simple class that has some auto-implemented properties:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideLINQ#28\">\n    // This class is mutable. Its data can be modified from\n    // outside the class.\n    class Customer\n    {\n        // Auto-Impl Properties for trivial get and set\n        public double TotalPurchases { get; set; }\n        public string Name { get; set; }\n        public int CustomerID { get; set; }\n\n        // Constructor\n        public Customer(double purchases, string name, int ID)\n        {\n            TotalPurchases = purchases;\n            Name = name;\n            CustomerID = ID;\n        }\n        // Methods\n        public string GetContactInfo() {return &quot;ContactInfo&quot;;}\n        public string GetTransactionHistory() {return &quot;History&quot;;}\n\n        // .. Additional methods, events, etc.\n    }\n    \n    class Program\n    {\n        static void Main()\n        {\n            // Intialize a new object.\n            Customer cust1 = new Customer ( 4987.63, &quot;Northwind&quot;,90108 );\n\n            //Modify a property\n            cust1.TotalPurchases += 499.99;\n        }\n    }\n</code></pre><p> In C# 6 and later, you can initialize auto-implemented properties similarly to fields:  </p>\n<pre class=\"loading\"><code class=\"lang-cs\">public string FirstName { get; set; } = &quot;Jane&quot;;  \n</code></pre><p> The class that is shown in the previous example is mutable. Client code can change the values in objects after they are created. In complex classes that contain significant behavior (methods) as well as data, it is often necessary to have public properties. However, for small classes or structs that just encapsulate a set of values (data) and have little or no behaviors, you should either make the objects immutable by declaring the set accessor as <a href=\"../../language-reference/keywords/private\" data-linktype=\"relative-path\">private</a> (immutable to consumers) or by declaring only a get accessor (immutable everywhere except the constructor).  For more information, see <a href=\"how-to-implement-a-lightweight-class-with-auto-implemented-properties\" data-linktype=\"relative-path\">How to: Implement a Lightweight Class with Auto-Implemented Properties</a>.  </p>\n<p> Attributes are permitted on auto-implemented properties but obviously not on the backing fields since those are not accessible from your source code. If you must use an attribute on the backing field of a property, just create a regular property.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"properties\" data-linktype=\"relative-path\">Properties</a><br> <a href=\"../../language-reference/keywords/modifiers\" data-linktype=\"relative-path\">Modifiers</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"aa55fa97-ccec-431f-b5e9-5ac789fd32b7\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"23\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/auto-implemented-properties.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/auto-implemented-properties.md\">\r\n<meta name=\"document_id\" content=\"b9d13384-e3e4-1c6f-abd9-67dfab03dbf0\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Auto-Implemented Properties (C# Programming Guide) | Microsoft Docs","ms.assetid":"aa55fa97-ccec-431f-b5e9-5ac789fd32b7","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":23,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["auto-implemented properties [C#]","properties [C#], auto-implemented"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/auto-implemented-properties.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/auto-implemented-properties.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/classes-and-structs/auto-implemented-properties.md","document_id":"b9d13384-e3e4-1c6f-abd9-67dfab03dbf0","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/auto-implemented-properties","toc_asset_id":"articles/csharp/programming-guide/classes-and-structs/toc.json","toc_rel":"toc.json","_op_ogTitle":"Auto-Implemented Properties (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":356,"_op_rawTitle":"<h1 id=\"auto-implemented-properties-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/classes-and-structs/auto-implemented-properties.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Auto-Implemented Properties (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/auto-implemented-properties","fileRelativePath":"articles/csharp/programming-guide/classes-and-structs/auto-implemented-properties.html"},"themesRelativePathToOutputRoot":"_themes/"}