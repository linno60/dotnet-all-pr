{"content":"<div><div class=\"content\">\n<p>A private constructor is a special instance constructor. It is generally used in classes that contain static members only. If a class has one or more private constructors and no public constructors, other classes (except nested classes) cannot create instances of this class. For example:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideObjects#11\">    class NLog\n    {\n        // Private Constructor:\n        private NLog() { }\n\n        public static double e = Math.E;  //2.71828...\n    }\n</code></pre><p> The declaration of the empty constructor prevents the automatic generation of a default constructor. Note that if you do not use an access modifier with the constructor it will still be private by default. However, the <a href=\"../../language-reference/keywords/private\" data-linktype=\"relative-path\">private</a> modifier is usually used explicitly to make it clear that the class cannot be instantiated.  </p>\n<p> Private constructors are used to prevent creating instances of a class when there are no instance fields or methods, such as the <a class=\"xref\" href=\"../../../../api/system.math\" data-linktype=\"relative-path\">Math</a> class, or when a method is called to obtain an instance of a class. If all the methods in the class are static, consider making the complete class static. For more information see <a href=\"static-classes-and-static-class-members\" data-linktype=\"relative-path\">Static Classes and Static Class Members</a>.  </p>\n<h2 id=\"example\">Example</h2>\n<p> The following is an example of a class using a private constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideObjects#12\">    public class Counter\n    {\n        private Counter() { }\n        public static int currentCount;\n        public static int IncrementCount()\n        {\n            return ++currentCount;\n        }\n    }\n\n    class TestCounter\n    {\n        static void Main()\n        {\n            // If you uncomment the following statement, it will generate\n            // an error because the constructor is inaccessible:\n            // Counter aCounter = new Counter();   // Error\n\n            Counter.currentCount = 100;\n            Counter.IncrementCount();\n            Console.WriteLine(&quot;New count: {0}&quot;, Counter.currentCount);\n\n            // Keep the console window open in debug mode.\n            Console.WriteLine(&quot;Press any key to exit.&quot;);\n            Console.ReadKey();\n        }\n    }\n    // Output: New count: 101\n</code></pre><p> Notice that if you uncomment the following statement from the example, it will generate an error because the constructor is inaccessible because of its protection level:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideObjects#13\">            // Counter aCounter = new Counter();   // Error\n</code></pre><h2 id=\"c-language-specification\">C# Language Specification</h2>\n<p> For more information, see the <a href=\"../../language-reference/language-specification\" data-linktype=\"relative-path\">C# Language Specification</a>. The language specification is the definitive source for C# syntax and usage.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Classes and Structs</a><br> <a href=\"constructors\" data-linktype=\"relative-path\">Constructors</a><br> <a href=\"destructors\" data-linktype=\"relative-path\">Destructors</a><br> <a href=\"../../language-reference/keywords/private\" data-linktype=\"relative-path\">private</a><br> <a href=\"../../language-reference/keywords/public\" data-linktype=\"relative-path\">public</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"29eeaa7d-8d81-453c-94b9-0e2800172621\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"19\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/private-constructors.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/private-constructors.md\">\r\n<meta name=\"document_id\" content=\"074c323c-e82a-e75f-c82b-df5c86b9a009\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"Private Constructors (C# Programming Guide) | Microsoft Docs","ms.assetid":"29eeaa7d-8d81-453c-94b9-0e2800172621","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":19,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["C# language, private constructors","private constructors [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/private-constructors.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/classes-and-structs/private-constructors.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/classes-and-structs/private-constructors.md","document_id":"074c323c-e82a-e75f-c82b-df5c86b9a009","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/private-constructors","toc_asset_id":"articles/csharp/programming-guide/classes-and-structs/toc.json","toc_rel":"toc.json","_op_ogTitle":"Private Constructors (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":342,"_op_rawTitle":"<h1 id=\"private-constructors-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/classes-and-structs/private-constructors.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Private Constructors (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/private-constructors","fileRelativePath":"articles/csharp/programming-guide/classes-and-structs/private-constructors.html"},"themesRelativePathToOutputRoot":"_themes/"}