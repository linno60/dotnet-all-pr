{"content":"<div><div class=\"content\">\n<p>Use an anonymous type in a query expression when both of these conditions apply:  </p>\n<ul>\n<li><p>You want to return only some of the properties of each source element.  </p>\n</li>\n<li><p>You do not have to store the query results outside the scope of the method in which the query is executed.  </p>\n<p>If you only want to return one property or field from each source element, then you can just use the dot operator in the <code>select</code> clause. For example, to return only the <code>ID</code> of each <code>student</code>, write the <code>select</code> clause as follows:  </p>\n</li>\n</ul>\n<pre class=\"loading\"><code>select student.ID;  \n</code></pre><h2 id=\"example\">Example</h2>\n<p> The following example shows how to use an anonymous type to return only a subset of the properties of each source element that matches the specified condition.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideLINQ#31\">                private static void QueryByScore()\n                {\n                    // Create the query. var is required because\n                    // the query produces a sequence of anonymous types.\n                    var queryHighScores =\n                        from student in students\n                        where student.ExamScores[0] &gt; 95\n                        select new { student.FirstName, student.LastName };\n\n                    // Execute the query.\n                    foreach (var obj in queryHighScores)\n                    {\n                        // The anonymous type&#39;s properties were not named. Therefore \n                        // they have the same names as the Student properties.\n                        Console.WriteLine(obj.FirstName + &quot;, &quot; + obj.LastName);\n                    }\n                }\n                /* Output:\n                Adams, Terry\n                Fakhouri, Fadi\n                Garcia, Cesar\n                Omelchenko, Svetlana\n                Zabokritski, Eugene\n                */\n</code></pre><p> Note that the anonymous type uses the source element&#39;s names for its properties if no names are specified. To give new names to the properties in the anonymous type, write the <code>select</code> statement as follows:  </p>\n<pre class=\"loading\"><code>select new { First = student.FirstName, Last = student.LastName };  \n</code></pre><p> If you try this in the previous example, then the <code>Console.WriteLine</code> statement must also change:  </p>\n<pre class=\"loading\"><code>Console.WriteLine(student.First + &quot; &quot; + student.Last);  \n</code></pre><h2 id=\"compiling-the-code\">Compiling the Code</h2>\n<ul>\n<li>To run this code, copy and paste the class into a Visual C# console application project that has been created in Visual Studio. By default, this project targets version 3.5 of the .NET Framework, and it will have a reference to System.Core.dll and a <code>using</code> directive for System.Linq. If one or more of these requirements are missing from the project, you can add them manually.   </li>\n</ul>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"anonymous-types\" data-linktype=\"relative-path\">Anonymous Types</a><br> <a href=\"../linq-query-expressions/index\" data-linktype=\"relative-path\">LINQ Query Expressions</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet-internal/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"fabdf349-f443-4e3f-8368-6c471be1dd7b\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"11\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-21 01:42 AM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.md\">\r\n<meta name=\"document_id\" content=\"7863201a-b5e1-ff0f-eee1-27f2b0588e38\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet-internal/toc.json","title":"How to: Return Subsets of Element Properties in a Query (C# Programming Guide) | Microsoft Docs","ms.assetid":"fabdf349-f443-4e3f-8368-6c471be1dd7b","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":11,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["anonymous types [C#], for subsets of element properties"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-21 01:42 AM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/21/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/tianzhXamarin/docs/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.md","document_id":"7863201a-b5e1-ff0f-eee1-27f2b0588e38","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query","toc_asset_id":"articles/csharp/programming-guide/classes-and-structs/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Return Subsets of Element Properties in a Query (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":353,"_op_rawTitle":"<h1 id=\"how-to-return-subsets-of-element-properties-in-a-query-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.md\" sourcestartlinenumber=\"36\" sourceendlinenumber=\"36\">How to: Return Subsets of Element Properties in a Query (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet-all/articles/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query","fileRelativePath":"articles/csharp/programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.html"},"themesRelativePathToOutputRoot":"_themes/"}