{"content":"<div><div class=\"content\">\n<p>In generic classes and methods, one issue that arises is how to assign a default value to a parameterized type T when you do not know the following in advance:  </p>\n<ul>\n<li><p>Whether T will be a reference type or a value type.  </p>\n</li>\n<li><p>If T is a value type, whether it will be a numeric value or a struct.  </p>\n<p>Given a variable t of a parameterized type T, the statement t = null is only valid if T is a reference type and t = 0 will only work for numeric value types but not for structs. The solution is to use the <code>default</code> keyword, which will return null for reference types and zero for numeric value types. For structs, it will return each member of the struct initialized to zero or null depending on whether they are value or reference types. For nullable value types, default returns a <a class=\"xref\" href=\"../../../../api/system.nullable-1\" data-linktype=\"relative-path\">System.Nullable&lt;T&gt;</a>, which is initialized like any struct.  </p>\n<p>The following example from the <code>GenericList&lt;T&gt;</code> class shows how to use the <code>default</code> keyword. For more information, see <a href=\"introduction-to-generics\" data-linktype=\"relative-path\">Generics Overview</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideGenerics#41\">    namespace ConsoleApplication1\n    {\n        class Program\n        {\n            static void Main(string[] args)\n            {\n                // Test with a non-empty list of integers.\n                GenericList&lt;int&gt; gll = new GenericList&lt;int&gt;();\n                gll.AddNode(5);\n                gll.AddNode(4);\n                gll.AddNode(3);\n                int intVal = gll.GetLast();\n                // The following line displays 5.\n                System.Console.WriteLine(intVal);\n\n                // Test with an empty list of integers.\n                GenericList&lt;int&gt; gll2 = new GenericList&lt;int&gt;();\n                intVal = gll2.GetLast();\n                // The following line displays 0.\n                System.Console.WriteLine(intVal);\n\n                // Test with a non-empty list of strings.\n                GenericList&lt;string&gt; gll3 = new GenericList&lt;string&gt;();\n                gll3.AddNode(&quot;five&quot;);\n                gll3.AddNode(&quot;four&quot;);\n                string sVal = gll3.GetLast();\n                // The following line displays five.\n                System.Console.WriteLine(sVal);\n\n                // Test with an empty list of strings.\n                GenericList&lt;string&gt; gll4 = new GenericList&lt;string&gt;();\n                sVal = gll4.GetLast();\n                // The following line displays a blank line.\n                System.Console.WriteLine(sVal);\n            }\n        }\n\n        // T is the type of data stored in a particular instance of GenericList.\n        public class GenericList&lt;T&gt;\n        {\n            private class Node\n            {\n                // Each node has a reference to the next node in the list.\n                public Node Next;\n                // Each node holds a value of type T.\n                public T Data;\n            }\n\n            // The list is initially empty.\n            private Node head = null;\n\n            // Add a node at the beginning of the list with t as its data value.\n            public void AddNode(T t)\n            {\n                Node newNode = new Node();\n                newNode.Next = head;\n                newNode.Data = t;\n                head = newNode;\n            }\n\n            // The following method returns the data value stored in the last node in\n            // the list. If the list is empty, the default value for type T is\n            // returned.\n            public T GetLast()\n            {\n                // The value of temp is returned as the value of the method. \n                // The following declaration initializes temp to the appropriate \n                // default value for type T. The default value is returned if the \n                // list is empty.\n                T temp = default(T);\n\n                Node current = head;\n                while (current != null)\n                {\n                    temp = current.Data;\n                    current = current.Next;\n                }\n                return temp;\n            }\n        }\n    }\n</code></pre></li>\n</ul>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a class=\"xref\" href=\"../../../../api/system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a><br> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Generics</a><br> <a href=\"generic-methods\" data-linktype=\"relative-path\">Generic Methods</a><br> <a href=\"https://msdn.microsoft.com/library/ms172192\" data-linktype=\"external\">Generics</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"b9daf449-4e64-496e-8592-6ed2c8875a98\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"22\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2016-12-15 06:00 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/generics/default-keyword-in-generic-code.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/generics/default-keyword-in-generic-code.md\">\r\n<meta name=\"document_id\" content=\"bcf9f2bb-88b0-2556-7d5a-69ed5edfff6e\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"default Keyword in Generic Code (C# Programming Guide) | Microsoft Docs","ms.assetid":"b9daf449-4e64-496e-8592-6ed2c8875a98","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":22,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["generics [C#], default keyword","default keyword [C#], generic programming"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2016-12-15 06:00 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"12/15/2016"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/90fe68f7f3c4b46502b5d3770b1a2d57c6af748a/docs/csharp/programming-guide/generics/default-keyword-in-generic-code.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/generics/default-keyword-in-generic-code.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/generics/default-keyword-in-generic-code.md","document_id":"bcf9f2bb-88b0-2556-7d5a-69ed5edfff6e","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/generics/default-keyword-in-generic-code","toc_asset_id":"articles/csharp/programming-guide/generics/toc.json","toc_rel":"toc.json","_op_ogTitle":"default Keyword in Generic Code (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":493,"_op_rawTitle":"<h1 id=\"default-keyword-in-generic-code-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/generics/default-keyword-in-generic-code.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">default Keyword in Generic Code (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/generics/default-keyword-in-generic-code","fileRelativePath":"articles/csharp/programming-guide/generics/default-keyword-in-generic-code.html"},"themesRelativePathToOutputRoot":"_themes/"}