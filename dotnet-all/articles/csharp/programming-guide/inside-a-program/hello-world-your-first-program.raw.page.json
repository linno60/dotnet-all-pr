{"content":"<div><div class=\"content\">\n<p>The following procedure creates a C# version of the traditional &quot;Hello World!&quot; program. The program displays the string <code>Hello World!</code>  </p>\n<p> For more examples of introductory concepts, see <a href=\"https://docs.microsoft.com/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic\" data-linktype=\"external\">Getting Started with Visual C# and Visual Basic</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p>Your computer might show different names or locations for some of the Visual Studio user interface elements in the following instructions. The Visual Studio edition that you have and the settings that you use determine these elements. For more information, see <a href=\"https://docs.microsoft.com/visualstudio/ide/personalizing-the-visual-studio-ide\" data-linktype=\"external\">Personalizing the IDE</a>.</p>\n</div>\n<h3 id=\"to-create-and-run-a-console-application\">To create and run a console application</h3>\n<ol>\n<li><p>Start Visual Studio.  </p>\n</li>\n<li><p>On the menu bar, choose <strong>File</strong>, <strong>New</strong>, <strong>Project</strong>.  </p>\n<p> The <strong>New Project</strong> dialog box opens.  </p>\n</li>\n<li><p>Expand <strong>Installed</strong>, expand <strong>Templates</strong>, expand <strong>Visual C#</strong>, and then choose <strong>Console Application</strong>.  </p>\n</li>\n<li><p>In the <strong>Name</strong> box, specify a name for your project, and then choose the <strong>OK</strong> button.  </p>\n<p> The new project appears in <strong>Solution Explorer</strong>.  </p>\n</li>\n<li><p>If Program.cs isn&#39;t open in the <strong>Code Editor</strong>, open the shortcut menu for <strong>Program.cs</strong> in <strong>Solution Explorer</strong>, and then choose <strong>View Code</strong>.  </p>\n</li>\n<li><p>Replace the contents of Program.cs with the following code.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuide#21\">// A Hello World! program in C#.\nusing System;\nnamespace HelloWorld\n{\n    class Hello \n    {\n        static void Main() \n        {\n            Console.WriteLine(&quot;Hello World!&quot;);\n\n            // Keep the console window open in debug mode.\n            Console.WriteLine(&quot;Press any key to exit.&quot;);\n            Console.ReadKey();\n        }\n    }\n}\n</code></pre></li>\n<li><p>Choose the F5 key to run the project. A Command Prompt window appears that contains the line <code>Hello World!</code>  </p>\n<p>Next, the important parts of this program are examined.  </p>\n</li>\n</ol>\n<h2 id=\"comments\">Comments</h2>\n<p> The first line contains a comment. The characters <code>//</code> convert the rest of the line to a comment.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuide#32\">// A Hello World! program in C#.\n</code></pre><p> You can also comment out a block of text by enclosing it between the <code>/*</code> and <code>*/</code> characters. This is shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuide#33\">/* A &quot;Hello World!&quot; program in C#.\nThis program displays the string &quot;Hello World!&quot; on the screen. */\n</code></pre><h2 id=\"main-method\">Main Method</h2>\n<p> A C# console application must contain a <code>Main</code> method, in which control starts and ends. The <code>Main</code> method is where you create objects and execute other methods.  </p>\n<p> The <code>Main</code> method is a <a href=\"../../language-reference/keywords/static\" data-linktype=\"relative-path\">static</a> method that resides inside a class or a struct. In the previous &quot;Hello World!&quot; example, it resides in a class named <code>Hello</code>. You can declare the <code>Main</code> method in one of the following ways:  </p>\n<ul>\n<li><p>It can return <code>void</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideMain#12\">static void Main()\n{\n    //...\n}\n</code></pre></li>\n<li><p>It can also return an integer.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideMain#13\">static int Main()\n{\n    //...\n    return 0;\n}\n</code></pre></li>\n<li><p>With either of the return types, it can take arguments.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideMain#19\">static void Main(string[] args)\n{\n    //...\n}\n</code></pre><p> -or-  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideMain#18\">static int Main(string[] args)\n{\n    //...\n    return 0;\n}\n</code></pre><p>The parameter of the <code>Main</code> method, <code>args</code>, is a <code>string</code> array that contains the command-line arguments used to invoke the program. Unlike in C++, the array does not include the name of the executable (exe) file.  </p>\n<p>For more information about how to use command-line arguments, see the examples in <a href=\"../main-and-command-args/index\" data-linktype=\"relative-path\">Main() and Command-Line Arguments</a> and <a href=\"http://msdn.microsoft.com/library/70f65026-3687-4e9c-ab79-c18b97dd8be4\" data-linktype=\"external\">How to: Create and Use Assemblies Using the Command Line</a>.  </p>\n<p>The call to <a class=\"xref\" href=\"../../../../api/system.console#System_Console_ReadKey_\" data-linktype=\"relative-path\">ReadKey</a> at the end of the <code>Main</code> method prevents the console window from closing before you have a chance to read the output when you run your program in debug mode, by pressing F5.  </p>\n</li>\n</ul>\n<h2 id=\"input-and-output\">Input and Output</h2>\n<p> C# programs generally use the input/output services provided by the run-time library of the .NET Framework. The statement <code>System.Console.WriteLine(&quot;Hello World!&quot;);</code> uses the <a class=\"xref\" href=\"../../../../api/system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method. This is one of the output methods of the <a class=\"xref\" href=\"../../../../api/system.console\" data-linktype=\"relative-path\">Console</a> class in the run-time library. It displays its string parameter on the standard output stream followed by a new line. Other <a class=\"xref\" href=\"../../../../api/system.console\" data-linktype=\"relative-path\">Console</a> methods are available for different input and output operations. If you include the <code>using System;</code> directive at the beginning of the program, you can directly use the <a class=\"xref\" href=\"../../../../api/system\" data-linktype=\"relative-path\">System</a> classes and methods without fully qualifying them. For example, you can call <code>Console.WriteLine</code> instead of <code>System.Console.WriteLine</code>:  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuide#1\">using System;\n</code></pre><pre><code class=\"lang-cs\" name=\"csProgGuide#23\">Console.WriteLine(&quot;Hello World!&quot;);\n</code></pre><p> For more information about input/output methods, see <a class=\"xref\" href=\"../../../../api/system.io\" data-linktype=\"relative-path\">System.IO</a>.  </p>\n<h2 id=\"command-line-compilation-and-execution\">Command-Line Compilation and Execution</h2>\n<p> You can compile the &quot;Hello World!&quot; program by using the command line instead of the Visual Studio Integrated Development Environment (IDE).  </p>\n<h4 id=\"to-compile-and-run-from-a-command-prompt\">To compile and run from a command prompt</h4>\n<ol>\n<li><p>Paste the code from the preceding procedure into any text editor, and then save the file as a text file. Name the file <code>Hello.cs</code>. C# source code files use the extension <code>.cs</code>.  </p>\n</li>\n<li><p>Perform one of the following steps to open a command-prompt window:  </p>\n<ul>\n<li><p>In Windows 8, on the <strong>Start</strong> screen, search for <code>Developer Command Prompt</code>, and then tap or choose <strong>Developer Command Prompt for VS2012</strong>.  </p>\n<p> A Developer Command Prompt window appears.  </p>\n</li>\n<li><p>In Windows 7, open the <strong>Start</strong> menu, expand the folder for the current version of Visual Studio, open the shortcut menu for <strong>Visual Studio Tools</strong>, and then choose <strong>Developer Command Prompt for VS2012</strong>.  </p>\n<p> A Developer Command Prompt window appears.  </p>\n</li>\n<li><p>Enable command-line builds from a standard Command Prompt window.  </p>\n<p> See <a href=\"../../language-reference/compiler-options/how-to-set-environment-variables-for-the-visual-studio-command-line\" data-linktype=\"relative-path\">How to: Set Environment Variables for the Visual Studio Command Line</a>.  </p>\n</li>\n</ul>\n</li>\n<li><p>In the command-prompt window, navigate to the folder that contains your <code>Hello.cs</code> file.  </p>\n</li>\n<li><p>Enter the following command to compile <code>Hello.cs</code>.  </p>\n<p> <code>csc Hello.cs</code>  </p>\n<p> If your program has no compilation errors, an executable file that is named <code>Hello.exe</code> is created.  </p>\n</li>\n<li><p>In the command-prompt window, enter the following command to run the program:  </p>\n<p> <code>Hello</code>  </p>\n<p>For more information about the C# compiler and its options, see <a href=\"../../language-reference/compiler-options/index\" data-linktype=\"relative-path\">C# Compiler Options</a>.</p>\n</li>\n</ol>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Inside a C# Program</a><br> <a href=\"../strings/index\" data-linktype=\"relative-path\">Strings</a><br> <a href=\"http://msdn.microsoft.com/en-us/9a9d7aaa-51d3-4224-b564-95409b0f3e15\" data-linktype=\"external\">&lt;paveover&gt;C# Sample Applications</a><br> <a href=\"../../language-reference/index\" data-linktype=\"relative-path\">C# Reference</a><br> <a href=\"../main-and-command-args/index\" data-linktype=\"relative-path\">Main() and Command-Line Arguments</a><br> <a href=\"https://docs.microsoft.com/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic\" data-linktype=\"external\">Getting Started with Visual C# and Visual Basic</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"../toc2.json\">\r\n<meta name=\"apiPlatform\" content=\"dotnet\">\r\n<meta name=\"uhfHeaderId\" content=\"MSDocsHeader-DotNet\">\r\n<meta name=\"ms.assetid\" content=\"6493182a-b0b6-4539-a719-518a168cb730\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"39\">\r\n<meta name=\"ms.topic\" content=\"get-started-article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-04-01 05:46 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/7e33ed084c560470a486ebbb25035a59ddc18565/docs/csharp/programming-guide/inside-a-program/hello-world-your-first-program.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/inside-a-program/hello-world-your-first-program.md\">\r\n<meta name=\"document_id\" content=\"23f8fa25-d972-6a61-bdc5-13f33c7bec7a\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","apiPlatform":"dotnet","uhfHeaderId":"MSDocsHeader-DotNet","title":"Hello World -- Your First Program (C# Programming Guide) | Microsoft Docs","ms.assetid":"6493182a-b0b6-4539-a719-518a168cb730","f1_keywords":["cs.program","vs.csharp.startpage.firstapplication"],"translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":39,"ms.topic":"get-started-article","dev_langs":["csharp"],"helpviewer_keywords":["examples [C#], Hello World","Hello World example [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Luke Latham","author_email":"GuardRex@users.noreply.github.com","committer_name":"Maira Wenzel","comitter_email":"mairaw@microsoft.com","message":"Removing outdated VS references (Part 2) (#1810)","commit_sha":"7e33ed084c560470a486ebbb25035a59ddc18565","commit_date":"2017-03-30 17:48:19 -0700"},{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize the C# Guide TOC (#1318)","commit_sha":"3115359729431ecbcc16058612da59b85621fa0f","commit_date":"2017-01-23 23:20:14 -0500"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Absolute urls and other fixes (#1281)","commit_sha":"f7dffe4885b331cec8d37f3cc5c9163f69c3b4c9","commit_date":"2016-11-22 12:57:26 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-04-01 05:46 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/GuardRex","display_name":"Luke Latham","id":"1622880"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"4/1/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/7e33ed084c560470a486ebbb25035a59ddc18565/docs/csharp/programming-guide/inside-a-program/hello-world-your-first-program.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/inside-a-program/hello-world-your-first-program.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/inside-a-program/hello-world-your-first-program.md","document_id":"23f8fa25-d972-6a61-bdc5-13f33c7bec7a","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/inside-a-program/hello-world-your-first-program","toc_asset_id":"articles/csharp/programming-guide/inside-a-program/toc.json","toc_rel":"toc.json","_op_ogTitle":"Hello World -- Your First Program (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":892,"_op_rawTitle":"<h1 id=\"hello-world----your-first-program-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/inside-a-program/hello-world-your-first-program.md\" sourcestartlinenumber=\"40\" sourceendlinenumber=\"40\">Hello World -- Your First Program (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/inside-a-program/hello-world-your-first-program","fileRelativePath":"articles/csharp/programming-guide/inside-a-program/hello-world-your-first-program.html"},"themesRelativePathToOutputRoot":"_themes/"}