{"content":"<div><div class=\"content\">\n<p>The purpose of a <a href=\"../../language-reference/keywords/try-catch\" data-linktype=\"relative-path\">try-catch</a> block is to catch and handle an exception generated by working code. Some exceptions can be handled in a <code>catch</code> block and the problem solved without the exception being re-thrown; however, more often the only thing that you can do is make sure that the appropriate exception is thrown.  </p>\n<h2 id=\"example\">Example</h2>\n<p> In this example, <a class=\"xref\" href=\"../../../../api/system.indexoutofrangeexception\" data-linktype=\"relative-path\">IndexOutOfRangeException</a> is not the most appropriate exception: <a class=\"xref\" href=\"../../../../api/system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> makes more sense for the method because the error is caused by the <code>index</code> argument passed in by the caller.  </p>\n<pre><code class=\"lang-cs\" name=\"csProgGuideExceptions#5\">    class TestTryCatch\n    {\n        static int GetInt(int[] array, int index)\n        {\n            try\n            {\n                return array[index];\n            }\n            catch (System.IndexOutOfRangeException e)  // CS0168\n            {\n                System.Console.WriteLine(e.Message);\n                // Set IndexOutOfRangeException to the new exception&#39;s InnerException.\n                throw new System.ArgumentOutOfRangeException(&quot;index parameter is out of range.&quot;, e);\n            }\n        }\n    }\n</code></pre><h2 id=\"comments\">Comments</h2>\n<p> The code that causes an exception is enclosed in the <code>try</code> block. A <code>catch</code> statement is added immediately after to handle <code>IndexOutOfRangeException</code>, if it occurs. The <code>catch</code> block handles the <code>IndexOutOfRangeException</code> and throws the more appropriate <code>ArgumentOutOfRangeException</code> exception instead. In order to provide the caller with as much information as possible, consider specifying the original exception as the <a class=\"xref\" href=\"../../../../api/system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> of the new exception. Because the <a class=\"xref\" href=\"../../../../api/system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property is <a href=\"../../language-reference/keywords/readonly\" data-linktype=\"relative-path\">readonly</a>, you must assign it in the constructor of the new exception.  </p>\n<h2 id=\"see-also\">See Also</h2>\n<p> <a href=\"../index\" data-linktype=\"relative-path\">C# Programming Guide</a><br> <a href=\"index\" data-linktype=\"relative-path\">Exceptions and Exception Handling</a><br> <a href=\"exception-handling\" data-linktype=\"relative-path\">Exception Handling</a></p>\n</div></div>","outputRootRelativePath":"../../../../","pageMetadata":"<meta name=\"author\" content=\"BillWagner\">\r\n<meta name=\"ms.author\" content=\"wiwagn\">\r\n<meta name=\"manager\" content=\"wpickett\">\r\n<meta name=\"breadcrumb_path\" content=\"/dotnet/toc2.json\">\r\n<meta name=\"ms.assetid\" content=\"ca8e3773-980e-4767-8633-7408540e9818\">\r\n<meta name=\"translation.priority.ht\" content=\"cs-cz\">\r\n<meta name=\"translation.priority.ht\" content=\"de-de\">\r\n<meta name=\"translation.priority.ht\" content=\"es-es\">\r\n<meta name=\"translation.priority.ht\" content=\"fr-fr\">\r\n<meta name=\"translation.priority.ht\" content=\"it-it\">\r\n<meta name=\"translation.priority.ht\" content=\"ja-jp\">\r\n<meta name=\"translation.priority.ht\" content=\"ko-kr\">\r\n<meta name=\"translation.priority.ht\" content=\"pl-pl\">\r\n<meta name=\"translation.priority.ht\" content=\"pt-br\">\r\n<meta name=\"translation.priority.ht\" content=\"ru-ru\">\r\n<meta name=\"translation.priority.ht\" content=\"tr-tr\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-cn\">\r\n<meta name=\"translation.priority.ht\" content=\"zh-tw\">\r\n<meta name=\"caps.latest.revision\" content=\"14\">\r\n<meta name=\"ms.topic\" content=\"article\">\r\n<meta name=\"ms.date\" content=\"2015-07-20\">\r\n<meta name=\"ms.technology\" content=\"devlang-csharp\">\r\n<meta name=\"ms.prod\" content=\".net\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"docs-internal\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.docs-internal\">\r\n<meta name=\"updated_at\" content=\"2017-03-15 06:14 PM\">\r\n<meta name=\"gitcommit\" content=\"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.md\">\r\n<meta name=\"original_content_git_url\" content=\"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.md\">\r\n<meta name=\"document_id\" content=\"4cc40539-ea0a-fdbe-90b2-dd6202091ca8\">\r\n<meta name=\"pagetype\" content=\"Conceptual\">\r\n<meta name=\"toc_rel\" content=\"toc2.json\">\r\n","rawMetadata":{"author":"BillWagner","ms.author":"wiwagn","manager":"wpickett","breadcrumb_path":"/dotnet/toc.json","title":"How to: Handle an Exception Using try-catch (C# Programming Guide) | Microsoft Docs","ms.assetid":"ca8e3773-980e-4767-8633-7408540e9818","translation.priority.ht":["cs-cz","de-de","es-es","fr-fr","it-it","ja-jp","ko-kr","pl-pl","pt-br","ru-ru","tr-tr","zh-cn","zh-tw"],"caps.latest.revision":14,"ms.topic":"article","dev_langs":["csharp"],"helpviewer_keywords":["exception handling [C#], try/catch blocks","exceptions [C#], try/catch blocks","try/catch blocks [C#]"],"ms.date":"2015-07-20","ms.technology":["devlang-csharp"],"ms.prod":".net","search.ms_sitename":"Docs","search.ms_docsetname":"docs-internal","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet-internal/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":false,"depot_name":"MSDN.docs-internal","_op_gitCommitHistory":[{"author_name":"Bill Wagner","author_email":"wiwagn@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Reorganize the C# Guide TOC (#1318)","commit_sha":"3115359729431ecbcc16058612da59b85621fa0f","commit_date":"2017-01-23 23:20:14 -0500"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"GitHub","comitter_email":"noreply@github.com","message":"Metadata updates (#1313)","commit_sha":"90fe68f7f3c4b46502b5d3770b1a2d57c6af748a","commit_date":"2016-12-09 12:40:41 -0800"},{"author_name":"Maira Wenzel","author_email":"mairaw@microsoft.com","committer_name":"Bill Wagner","comitter_email":"wiwagn@microsoft.com","message":":books: migration changes (#1235)","commit_sha":"b828bb1d6c8fb750ad9ef34f8a7a1b7d2574f4c6","commit_date":"2016-11-15 15:08:11 -0500"}],"updated_at":"2017-03-15 06:14 PM","_op_gitContributorInformation":{"author":{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner","id":"493969"},"contributors":[{"profile_url":"https://github.com/BillWagner","display_name":"Bill Wagner"},{"profile_url":"https://github.com/mairaw","display_name":"Maira Wenzel","id":"12971179"}],"update_at":"3/15/2017"},"gitcommit":"https://github.com/dotnet/docs-internal/blob/3115359729431ecbcc16058612da59b85621fa0f/docs/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.md","original_content_git_url":"https://github.com/dotnet/docs-internal/blob/master/docs/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.md","open_to_public_contributors":false,"content_git_url":"https://github.com/dotnet/docs/blob/master/docs/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.md","document_id":"4cc40539-ea0a-fdbe-90b2-dd6202091ca8","layout":"Conceptual","pagetype":"Conceptual","canonical_url":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch","toc_asset_id":"articles/csharp/programming-guide/exceptions/toc.json","toc_rel":"toc.json","_op_ogTitle":"How to: Handle an Exception Using try-catch (C# Programming Guide)","_op_displayDate":null,"_op_displayDate_source":null,"_op_wordCount":216,"_op_rawTitle":"<h1 id=\"how-to-handle-an-exception-using-trycatch-c-programming-guide\" sourcefile=\"docs/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.md\" sourcestartlinenumber=\"38\" sourceendlinenumber=\"38\">How to: Handle an Exception Using try/catch (C# Programming Guide)</h1>","_op_searchScope":[".NET"],"_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/articles/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch","fileRelativePath":"articles/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.html"},"themesRelativePathToOutputRoot":"_themes/"}