{"content":"\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ILeaseManager</span>\r\n    <span class=\"lang-vb\">ILeaseManager</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \t\t<dl class=\"attributeList\">\r\n  \t\t\t<dt>Namespace:</dt>\t\r\n  \t\t\t\t<dd>Microsoft.Azure.EventHubs.Processor</dd>\r\n  \t\t</dl>\r\n  \r\n  \t\t<dl class=\"attributeList\">\r\n  \t\t\t<dt>Assembly:</dt><dd>Microsoft.Azure.EventHubs.Processor.dll</dd>\r\n  \t\t</dl>\r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>If you wish to have EventProcessorHost store leases somewhere other than Azure Storage,\nyou can write your own lease manager using this interface.  </p>\n<p>The Azure Storage managers use the same storage for both lease and checkpoints, so both\ninterfaces are implemented by the same class. You are free to do the same thing if you have\na unified store for both types of data.</p>\n\n<p>This interface does not specify initialization methods because we have no way of knowing what\ninformation your implementation will require.</p>\n\r\n  \t</div>\r\n  \t\t<div class=\"inlineEditButton\">\r\n  \t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L21\" ms.cmpnm=\"editType\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface ILeaseManager</code><code class=\"vb lang-vb\">Public Interface ILeaseManager</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_LeaseDuration_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_LeaseDuration\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LeaseDuration</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">LeaseDuration</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L36\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Mostly useful for testing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">TimeSpan LeaseDuration { get; }</code><code class=\"vb lang-vb\" dir=\"ltr\">ReadOnly Property LeaseDuration As TimeSpan</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TimeSpan</span></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">TimeSpan</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Duration of a lease before it expires unless renewed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_LeaseRenewInterval_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_LeaseRenewInterval\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LeaseRenewInterval</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">LeaseRenewInterval</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L30\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Allows a lease manager implementation to specify to PartitionManager how often it should\nscan leases and renew them. In order to redistribute leases in a timely fashion after a host\nceases operating, we recommend a relatively short interval, such as ten seconds. Obviously it\nshould be less than half of the lease length, to prevent accidental expiration.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">TimeSpan LeaseRenewInterval { get; }</code><code class=\"vb lang-vb\" dir=\"ltr\">ReadOnly Property LeaseRenewInterval As TimeSpan</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TimeSpan</span></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">TimeSpan</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The sleep interval between scans</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_AcquireLeaseAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_AcquireLeaseAsync_Microsoft_Azure_EventHubs_Processor_Lease_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AcquireLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">AcquireLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L94\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Acquire the lease on the desired partition for this EventProcessorHost.</p>\n<p>Note that it is legal to acquire a lease that is already owned by another host. Lease-stealing is how\npartitions are redistributed when additional hosts are started.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;bool&gt; AcquireLeaseAsync(Lease lease)</code><code class=\"vb lang-vb\" dir=\"ltr\">Function AcquireLeaseAsync(lease As Lease) As Task(Of Boolean)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lease</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Lease info for the desired partition as previously obtained from GetLeaseAsync()</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>true if the lease was acquired successfully, false if not</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_CreateLeaseIfNotExistsAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_CreateLeaseIfNotExistsAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateLeaseIfNotExistsAsync(String)</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">CreateLeaseIfNotExistsAsync(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L76\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Create in the store the lease info for the given partition, if it does not exist. Do nothing if it does exist\nin the store already. </p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;Lease&gt; CreateLeaseIfNotExistsAsync(string partitionId)</code><code class=\"vb lang-vb\" dir=\"ltr\">Function CreateLeaseIfNotExistsAsync(partitionId As String) As Task(Of Lease)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>partitionId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\" data-linktype=\"external\">String</a></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\" data-linktype=\"external\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>id of partition to create lease info for</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>the existing or newly-created lease info for the partition</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_CreateLeaseStoreIfNotExistsAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_CreateLeaseStoreIfNotExistsAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateLeaseStoreIfNotExistsAsync()</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">CreateLeaseStoreIfNotExistsAsync()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L47\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Create the lease store if it does not exist, do nothing if it does exist.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;bool&gt; CreateLeaseStoreIfNotExistsAsync()</code><code class=\"vb lang-vb\" dir=\"ltr\">Function CreateLeaseStoreIfNotExistsAsync As Task(Of Boolean)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>true if the lease store already exists or was created successfully, false if not</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_DeleteLeaseAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_DeleteLeaseAsync_Microsoft_Azure_EventHubs_Processor_Lease_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeleteLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">DeleteLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L84\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Delete the lease info for the given partition from the store. If there is no stored lease for the given partition,\nthat is treated as success.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task DeleteLeaseAsync(Lease lease)</code><code class=\"vb lang-vb\" dir=\"ltr\">Function DeleteLeaseAsync(lease As Lease) As Task</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lease</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Lease info for the desired partition as previously obtained from GetLeaseAsync()</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span></span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span></span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_DeleteLeaseStoreAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_DeleteLeaseStoreAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeleteLeaseStoreAsync()</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">DeleteLeaseStoreAsync()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L53\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Not used by EventProcessorHost, but a convenient function to have for testing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;bool&gt; DeleteLeaseStoreAsync()</code><code class=\"vb lang-vb\" dir=\"ltr\">Function DeleteLeaseStoreAsync As Task(Of Boolean)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>true if the lease store was deleted successfully, false if not</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_GetAllLeases_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_GetAllLeases\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAllLeases()</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">GetAllLeases()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L68\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Return the lease info for all partitions.\nA typical implementation could just call GetLeaseAsync() on all partitions.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">IEnumerable&lt;Task&lt;Lease&gt;&gt; GetAllLeases()</code><code class=\"vb lang-vb\" dir=\"ltr\">Function GetAllLeases As IEnumerable(Of Task(Of Lease))</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">IEnumerable</span>&lt;<span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a>&gt;&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">IEnumerable</span>(Of <span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a>))</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>list of lease info.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_GetLeaseAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_GetLeaseAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetLeaseAsync(String)</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">GetLeaseAsync(String)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L61\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Return the lease info for the specified partition. Can return null if no lease has been\ncreated in the store for the specified partition.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;Lease&gt; GetLeaseAsync(string partitionId)</code><code class=\"vb lang-vb\" dir=\"ltr\">Function GetLeaseAsync(partitionId As String) As Task(Of Lease)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>partitionId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\" data-linktype=\"external\">String</a></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\" data-linktype=\"external\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>id of partition to get lease for</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>lease info for the partition, or null</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_LeaseStoreExistsAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_LeaseStoreExistsAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LeaseStoreExistsAsync()</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">LeaseStoreExistsAsync()</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L41\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Does the lease store exist?</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;bool&gt; LeaseStoreExistsAsync()</code><code class=\"vb lang-vb\" dir=\"ltr\">Function LeaseStoreExistsAsync As Task(Of Boolean)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_ReleaseLeaseAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_ReleaseLeaseAsync_Microsoft_Azure_EventHubs_Processor_Lease_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReleaseLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">ReleaseLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L112\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Give up a lease currently held by this host.\n<p>If the lease has been stolen, or expired, releasing it is unnecessary, and will fail if attempted.</p></p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;bool&gt; ReleaseLeaseAsync(Lease lease)</code><code class=\"vb lang-vb\" dir=\"ltr\">Function ReleaseLeaseAsync(lease As Lease) As Task(Of Boolean)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lease</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Lease to be given up</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>true if the lease was released successfully, false if not</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_RenewLeaseAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_RenewLeaseAsync_Microsoft_Azure_EventHubs_Processor_Lease_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RenewLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">RenewLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L104\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Renew a lease currently held by this host.</p>\n<p>If the lease has been stolen, or expired, or released, it is not possible to renew it. You will have to call getLease()\nand then acquireLease() again.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;bool&gt; RenewLeaseAsync(Lease lease)</code><code class=\"vb lang-vb\" dir=\"ltr\">Function RenewLeaseAsync(lease As Lease) As Task(Of Boolean)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lease</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Lease to be renewed</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>true if the lease was renewed successfully, false if not</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\t\t\t<div data-moniker=\" 0\">\r\n  \t\t\r\n  \t\t\t\t\t<a id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_UpdateLeaseAsync_\"></a>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Azure_EventHubs_Processor_ILeaseManager_UpdateLeaseAsync_Microsoft_Azure_EventHubs_Processor_Lease_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t\t<span class=\"lang-vb\">UpdateLeaseAsync(Lease)</span>\r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t\t\t<div class=\"inlineEditButton\">\r\n  \t\t\t\t\t\t\t<a href=\"https://github.com/Azure/azure-event-hubs-dotnetmaster/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L123\" ms.cmpnm=\"editMember\" data-linktype=\"external\"><i class=\"icon icon-editor\"></i>Edit</a>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Update the store with the information in the provided lease.</p>\n<p>It is necessary to currently hold a lease in order to update it. If the lease has been stolen, or expired, or\nreleased, it cannot be updated. Updating should renew the lease before performing the update to avoid lease\nexpiration during the process.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">Task&lt;bool&gt; UpdateLeaseAsync(Lease lease)</code><code class=\"vb lang-vb\" dir=\"ltr\">Function UpdateLeaseAsync(lease As Lease) As Task(Of Boolean)</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Parameters</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>lease</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><a class=\"xref\" href=\"microsoft.azure.eventhubs.processor.lease\" data-linktype=\"relative-path\">Lease</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>New lease info to be stored</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Returns</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">Task</span>&lt;<a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t\t<span class=\"lang-vb\"><span class=\"xref\">Task</span>(Of <a class=\"xref\" href=\"https://msdn.microsoft.com/en-us/library/system.boolean(v=vs.110).aspx\" data-linktype=\"external\">Boolean</a>)</span>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<p>true if the updated was performed successfully, false if not</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t\r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"ms.devlang\" content=\"csharp\">\r\n<meta name=\"author\" content=\"erickson-doug\">\r\n<meta name=\"ms.author\" content=\"douge\">\r\n<meta name=\"manager\" content=\"douge\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"ms.topic\" content=\"reference\">\r\n<meta name=\"ms.service\" content=\"event-hubs\">\r\n<meta name=\"ms.date\" content=\"11/16/2016\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"azuredotnet\">\r\n<meta name=\"version\" content=\"0\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"Azure\">\r\n<meta name=\"depot_name\" content=\"Azure.azuredotnet\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/Azure/azure-docs-sdk-dotnet/blob/4bbdf031e523556232a31f19fa47b31c28695878/docs-ref-autogen/Data/EventHub/Microsoft.Azure.EventHubs.Processor.ILeaseManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/Azure/azure-docs-sdk-dotnet/blob/live/docs-ref-autogen/Data/EventHub/Microsoft.Azure.EventHubs.Processor.ILeaseManager.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseRenewInterval\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.get_LeaseRenewInterval\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseDuration\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.get_LeaseDuration\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseStoreExistsAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseStoreIfNotExistsAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseStoreAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetLeaseAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetAllLeases\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseIfNotExistsAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.AcquireLeaseAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.RenewLeaseAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.ReleaseLeaseAsync\">\r\n<meta name=\"APIName\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager.UpdateLeaseAsync\">\r\n<meta name=\"APILocation\" content=\"Microsoft.Azure.EventHubs.Processor.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-20 10:27 PM\">\r\n<meta name=\"document_id\" content=\"85baf67d-c878-e46a-74d4-f491173e4030\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"If you wish to have EventProcessorHost store leases somewhere other than Azure Storage,\nyou can write your own lease manager using this interface.  \nThe Azure Storage managers use the same storage fo…\">\r\n<meta name=\"toc_rel\" content=\"toc1.json\">\r\n<meta name=\"source_url\" content=\"https://github.com/Azure/azure-event-hubs-dotnet/blob/master/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L21\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.Azure.EventHubs.Processor.ILeaseManager\">\r\n","rawMetadata":{"ms.devlang":"csharp","author":"erickson-doug","ms.author":"douge","manager":"douge","breadcrumb_path":"breadcrumb/toc.json","_op_documentIdPathDepotMapping":{"./":{"folder_relative_path_in_docset":"api-index"},"breadcrumb/":{"folder_relative_path_in_docset":"breadcrumb"},"docs-ref-autogen/":{"folder_relative_path_in_docset":"docs-ref-autogen"},"docs-ref-manual/":{"folder_relative_path_in_docset":"docs-ref-manual"},"docs-ref-overwrite/":{"folder_relative_path_in_docset":"docs-ref-overwrite"},"scripts/":{"folder_relative_path_in_docset":"scripts"}},"ms.topic":"reference","ms.service":"event-hubs","ms.date":"11/16/2016","search.ms_sitename":"Docs","search.ms_docsetname":"azuredotnet","version":0,"_op_canonicalUrlPrefix":"https://docs.microsoft.com/en-us/dotnet/api/","locale":"en-us","site_name":"Docs","search.ms_product":"Azure","_op_openToPublicContributors":false,"depot_name":"Azure.azuredotnet","_op_gitRefSkeletonCommitHistory":[{"author_name":"OpenPublishBuild","author_email":"vscopbld@microsoft.com","committer_name":"OpenPublishBuild","comitter_email":"vscopbld@microsoft.com","message":"Update Reference Content","commit_sha":"4bbdf031e523556232a31f19fa47b31c28695878","commit_date":"2017-03-20 06:32:19 +0000"},{"author_name":"OpenPublishBuild","author_email":"vscopbld@microsoft.com","committer_name":"OpenPublishBuild","comitter_email":"vscopbld@microsoft.com","message":"Update Reference Content","commit_sha":"e94ef2bde5332ae6306299662a592890e0d555d2","commit_date":"2017-02-13 06:17:57 +0000"},{"author_name":"Qinen Zhu","author_email":"qinzhu@microsoft.com","committer_name":"Qinen Zhu","comitter_email":"qinzhu@microsoft.com","message":"Rename folder name","commit_sha":"8ece26063f2f27414f0bad873159ee6212f3448d","commit_date":"2016-12-19 15:23:17 +0800"}],"ref_skeleton_gitcommit":"https://github.com/Azure/azure-docs-sdk-dotnet/blob/4bbdf031e523556232a31f19fa47b31c28695878/docs-ref-autogen/Data/EventHub/Microsoft.Azure.EventHubs.Processor.ILeaseManager.yml","original_ref_skeleton_git_url":"https://github.com/Azure/azure-docs-sdk-dotnet/blob/live/docs-ref-autogen/Data/EventHub/Microsoft.Azure.EventHubs.Processor.ILeaseManager.yml","open_to_public_contributors":false,"api_name":["Microsoft.Azure.EventHubs.Processor.ILeaseManager","Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseRenewInterval","Microsoft.Azure.EventHubs.Processor.ILeaseManager.get_LeaseRenewInterval","Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseDuration","Microsoft.Azure.EventHubs.Processor.ILeaseManager.get_LeaseDuration","Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseStoreExistsAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseStoreIfNotExistsAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseStoreAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetAllLeases","Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseIfNotExistsAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.AcquireLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.RenewLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.ReleaseLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.UpdateLeaseAsync"],"api_location":["Microsoft.Azure.EventHubs.Processor.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.Azure.EventHubs.Processor.ILeaseManager","Microsoft::Azure::EventHubs::Processor::ILeaseManager","Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseRenewInterval","Microsoft::Azure::EventHubs::Processor::ILeaseManager::LeaseRenewInterval","Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseDuration","Microsoft::Azure::EventHubs::Processor::ILeaseManager::LeaseDuration","Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseStoreExistsAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::LeaseStoreExistsAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseStoreIfNotExistsAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::CreateLeaseStoreIfNotExistsAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseStoreAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::DeleteLeaseStoreAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetLeaseAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::GetLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetAllLeases","Microsoft::Azure::EventHubs::Processor::ILeaseManager::GetAllLeases","Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseIfNotExistsAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::CreateLeaseIfNotExistsAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::DeleteLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.AcquireLeaseAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::AcquireLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.RenewLeaseAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::RenewLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.ReleaseLeaseAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::ReleaseLeaseAsync","Microsoft.Azure.EventHubs.Processor.ILeaseManager.UpdateLeaseAsync","Microsoft::Azure::EventHubs::Processor::ILeaseManager::UpdateLeaseAsync"],"dev_langs":["csharp","vb"],"updated_at":"2017-03-20 10:27 PM","document_id":"85baf67d-c878-e46a-74d4-f491173e4030","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ILeaseManager interface | Microsoft Docs","_op_ogTitle":"ILeaseManager interface","description":"If you wish to have EventProcessorHost store leases somewhere other than Azure Storage,\nyou can write your own lease manager using this interface.  \nThe Azure Storage managers use the same storage fo…","toc_asset_id":"toc.json","toc_rel":"toc.json","content_git_url":"https://github.com/Azure/azure-event-hubs-dotnet/new/master/apiSpec/new?filename=Microsoft_Azure_EventHubs_Processor_ILeaseManager.md&value=---%0Auid%3A%20Microsoft.Azure.EventHubs.Processor.ILeaseManager%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A","source_url":"https://github.com/Azure/azure-event-hubs-dotnet/blob/master/src/Microsoft.Azure.EventHubs.Processor/ILeaseManager.cs/#L21","ms.assetid":"Microsoft.Azure.EventHubs.Processor.ILeaseManager","canonical_url":"https://docs.microsoft.com/en-us/dotnet/microsoft.azure.eventhubs.processor.ileasemanager","_op_displayDate":"2016-11-16","_op_displayDate_source":"2016-11-16T00:00:00Z","_op_brand":"azure","_op_canonicalUrl":"https://docs.microsoft.com/en-us/dotnet/microsoft.azure.eventhubs.processor.ileasemanager","fileRelativePath":"Microsoft.Azure.EventHubs.Processor.ILeaseManager.html"},"themesRelativePathToOutputRoot":"_themes/"}